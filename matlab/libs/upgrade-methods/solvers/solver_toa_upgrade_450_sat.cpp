#include <Eigen/Dense>
#include "mex.h"

using namespace Eigen;

MatrixXcd solver_toa_upgrade_450(const VectorXd &data)
{
    // Compute coefficients
    const double *d = data.data();
    VectorXd coeffs(337);
    coeffs[0] = 2 * d[10] * d[11] * d[15] * d[54] - 2 * std::pow(d[14], 2) * d[15] * d[54] - 2 * d[11] * d[12] * d[16] * d[54] + 2 * d[13] * d[14] * d[16] * d[54] - 2 * d[10] * d[13] * d[17] * d[54] + 2 * d[12] * d[14] * d[17] * d[54] - 2 * d[11] * d[12] * d[15] * d[55] + 2 * d[13] * d[14] * d[15] * d[55] + 2 * d[9] * d[11] * d[16] * d[55] - 2 * std::pow(d[13], 2) * d[16] * d[55] + 2 * d[12] * d[13] * d[17] * d[55] - 2 * d[9] * d[14] * d[17] * d[55] - 2 * d[10] * d[13] * d[15] * d[56] + 2 * d[12] * d[14] * d[15] * d[56] + 2 * d[12] * d[13] * d[16] * d[56] - 2 * d[9] * d[14] * d[16] * d[56] + 2 * d[9] * d[10] * d[17] * d[56] - 2 * std::pow(d[12], 2) * d[17] * d[56] - d[9] * d[10] * d[11] * d[69] + d[11] * std::pow(d[12], 2) * d[69] + d[10] * std::pow(d[13], 2) * d[69] - 2 * d[12] * d[13] * d[14] * d[69] + d[9] * std::pow(d[14], 2) * d[69];
    coeffs[1] = 2 * d[11] * d[15] * d[19] * d[54] - 2 * d[13] * d[17] * d[19] * d[54] + 2 * d[10] * d[15] * d[20] * d[54] - 2 * d[12] * d[16] * d[20] * d[54] - 2 * d[11] * d[16] * d[21] * d[54] + 2 * d[14] * d[17] * d[21] * d[54] + 2 * d[14] * d[16] * d[22] * d[54] - 2 * d[10] * d[17] * d[22] * d[54] - 4 * d[14] * d[15] * d[23] * d[54] + 2 * d[13] * d[16] * d[23] * d[54] + 2 * d[12] * d[17] * d[23] * d[54] + 2 * d[10] * d[11] * d[24] * d[54] - 2 * std::pow(d[14], 2) * d[24] * d[54] - 2 * d[11] * d[12] * d[25] * d[54] + 2 * d[13] * d[14] * d[25] * d[54] - 2 * d[10] * d[13] * d[26] * d[54] + 2 * d[12] * d[14] * d[26] * d[54] + 2 * d[11] * d[16] * d[18] * d[55] - 2 * d[14] * d[17] * d[18] * d[55] - 2 * d[12] * d[15] * d[20] * d[55] + 2 * d[9] * d[16] * d[20] * d[55] - 2 * d[11] * d[15] * d[21] * d[55] + 2 * d[13] * d[17] * d[21] * d[55] + 2 * d[14] * d[15] * d[22] * d[55] - 4 * d[13] * d[16] * d[22] * d[55] + 2 * d[12] * d[17] * d[22] * d[55] + 2 * d[13] * d[15] * d[23] * d[55] - 2 * d[9] * d[17] * d[23] * d[55] - 2 * d[11] * d[12] * d[24] * d[55] + 2 * d[13] * d[14] * d[24] * d[55] + 2 * d[9] * d[11] * d[25] * d[55] - 2 * std::pow(d[13], 2) * d[25] * d[55] + 2 * d[12] * d[13] * d[26] * d[55] - 2 * d[9] * d[14] * d[26] * d[55] - 2 * d[14] * d[16] * d[18] * d[56] + 2 * d[10] * d[17] * d[18] * d[56] - 2 * d[13] * d[15] * d[19] * d[56] + 2 * d[9] * d[17] * d[19] * d[56] + 2 * d[14] * d[15] * d[21] * d[56] + 2 * d[13] * d[16] * d[21] * d[56] - 4 * d[12] * d[17] * d[21] * d[56] - 2 * d[10] * d[15] * d[22] * d[56] + 2 * d[12] * d[16] * d[22] * d[56] + 2 * d[12] * d[15] * d[23] * d[56] - 2 * d[9] * d[16] * d[23] * d[56] - 2 * d[10] * d[13] * d[24] * d[56] + 2 * d[12] * d[14] * d[24] * d[56] + 2 * d[12] * d[13] * d[25] * d[56] - 2 * d[9] * d[14] * d[25] * d[56] + 2 * d[9] * d[10] * d[26] * d[56] - 2 * std::pow(d[12], 2) * d[26] * d[56] - d[10] * d[11] * d[18] * d[69] + std::pow(d[14], 2) * d[18] * d[69] - d[9] * d[11] * d[19] * d[69] + std::pow(d[13], 2) * d[19] * d[69] - d[9] * d[10] * d[20] * d[69] + std::pow(d[12], 2) * d[20] * d[69] + 2 * d[11] * d[12] * d[21] * d[69] - 2 * d[13] * d[14] * d[21] * d[69] + 2 * d[10] * d[13] * d[22] * d[69] - 2 * d[12] * d[14] * d[22] * d[69] - 2 * d[12] * d[13] * d[23] * d[69] + 2 * d[9] * d[14] * d[23] * d[69];
    coeffs[2] = 2 * d[15] * d[19] * d[20] * d[54] - 2 * d[16] * d[20] * d[21] * d[54] - 2 * d[17] * d[19] * d[22] * d[54] + 2 * d[17] * d[21] * d[23] * d[54] + 2 * d[16] * d[22] * d[23] * d[54] - 2 * d[15] * std::pow(d[23], 2) * d[54] + 2 * d[11] * d[19] * d[24] * d[54] + 2 * d[10] * d[20] * d[24] * d[54] - 4 * d[14] * d[23] * d[24] * d[54] - 2 * d[12] * d[20] * d[25] * d[54] - 2 * d[11] * d[21] * d[25] * d[54] + 2 * d[14] * d[22] * d[25] * d[54] + 2 * d[13] * d[23] * d[25] * d[54] - 2 * d[13] * d[19] * d[26] * d[54] + 2 * d[14] * d[21] * d[26] * d[54] - 2 * d[10] * d[22] * d[26] * d[54] + 2 * d[12] * d[23] * d[26] * d[54] + 2 * d[16] * d[18] * d[20] * d[55] - 2 * d[15] * d[20] * d[21] * d[55] + 2 * d[17] * d[21] * d[22] * d[55] - 2 * d[16] * std::pow(d[22], 2) * d[55] - 2 * d[17] * d[18] * d[23] * d[55] + 2 * d[15] * d[22] * d[23] * d[55] - 2 * d[12] * d[20] * d[24] * d[55] - 2 * d[11] * d[21] * d[24] * d[55] + 2 * d[14] * d[22] * d[24] * d[55] + 2 * d[13] * d[23] * d[24] * d[55] + 2 * d[11] * d[18] * d[25] * d[55] + 2 * d[9] * d[20] * d[25] * d[55] - 4 * d[13] * d[22] * d[25] * d[55] - 2 * d[14] * d[18] * d[26] * d[55] + 2 * d[13] * d[21] * d[26] * d[55] + 2 * d[12] * d[22] * d[26] * d[55] - 2 * d[9] * d[23] * d[26] * d[55] + 2 * d[17] * d[18] * d[19] * d[56] - 2 * d[17] * std::pow(d[21], 2) * d[56] - 2 * d[15] * d[19] * d[22] * d[56] + 2 * d[16] * d[21] * d[22] * d[56] - 2 * d[16] * d[18] * d[23] * d[56] + 2 * d[15] * d[21] * d[23] * d[56] - 2 * d[13] * d[19] * d[24] * d[56] + 2 * d[14] * d[21] * d[24] * d[56] - 2 * d[10] * d[22] * d[24] * d[56] + 2 * d[12] * d[23] * d[24] * d[56] - 2 * d[14] * d[18] * d[25] * d[56] + 2 * d[13] * d[21] * d[25] * d[56] + 2 * d[12] * d[22] * d[25] * d[56] - 2 * d[9] * d[23] * d[25] * d[56] + 2 * d[10] * d[18] * d[26] * d[56] + 2 * d[9] * d[19] * d[26] * d[56] - 4 * d[12] * d[21] * d[26] * d[56] - d[11] * d[18] * d[19] * d[69] - d[10] * d[18] * d[20] * d[69] - d[9] * d[19] * d[20] * d[69] + 2 * d[12] * d[20] * d[21] * d[69] + d[11] * std::pow(d[21], 2) * d[69] + 2 * d[13] * d[19] * d[22] * d[69] - 2 * d[14] * d[21] * d[22] * d[69] + d[10] * std::pow(d[22], 2) * d[69] + 2 * d[14] * d[18] * d[23] * d[69] - 2 * d[13] * d[21] * d[23] * d[69] - 2 * d[12] * d[22] * d[23] * d[69] + d[9] * std::pow(d[23], 2) * d[69];
    coeffs[3] = 2 * d[19] * d[20] * d[24] * d[54] - 2 * std::pow(d[23], 2) * d[24] * d[54] - 2 * d[20] * d[21] * d[25] * d[54] + 2 * d[22] * d[23] * d[25] * d[54] - 2 * d[19] * d[22] * d[26] * d[54] + 2 * d[21] * d[23] * d[26] * d[54] - 2 * d[20] * d[21] * d[24] * d[55] + 2 * d[22] * d[23] * d[24] * d[55] + 2 * d[18] * d[20] * d[25] * d[55] - 2 * std::pow(d[22], 2) * d[25] * d[55] + 2 * d[21] * d[22] * d[26] * d[55] - 2 * d[18] * d[23] * d[26] * d[55] - 2 * d[19] * d[22] * d[24] * d[56] + 2 * d[21] * d[23] * d[24] * d[56] + 2 * d[21] * d[22] * d[25] * d[56] - 2 * d[18] * d[23] * d[25] * d[56] + 2 * d[18] * d[19] * d[26] * d[56] - 2 * std::pow(d[21], 2) * d[26] * d[56] - d[18] * d[19] * d[20] * d[69] + d[20] * std::pow(d[21], 2) * d[69] + d[19] * std::pow(d[22], 2) * d[69] - 2 * d[21] * d[22] * d[23] * d[69] + d[18] * std::pow(d[23], 2) * d[69];
    coeffs[4] = 2 * d[11] * d[15] * d[28] * d[54] - 2 * d[13] * d[17] * d[28] * d[54] + 2 * d[10] * d[15] * d[29] * d[54] - 2 * d[12] * d[16] * d[29] * d[54] - 2 * d[11] * d[16] * d[30] * d[54] + 2 * d[14] * d[17] * d[30] * d[54] + 2 * d[14] * d[16] * d[31] * d[54] - 2 * d[10] * d[17] * d[31] * d[54] - 4 * d[14] * d[15] * d[32] * d[54] + 2 * d[13] * d[16] * d[32] * d[54] + 2 * d[12] * d[17] * d[32] * d[54] + 2 * d[10] * d[11] * d[33] * d[54] - 2 * std::pow(d[14], 2) * d[33] * d[54] - 2 * d[11] * d[12] * d[34] * d[54] + 2 * d[13] * d[14] * d[34] * d[54] - 2 * d[10] * d[13] * d[35] * d[54] + 2 * d[12] * d[14] * d[35] * d[54] + 2 * d[11] * d[16] * d[27] * d[55] - 2 * d[14] * d[17] * d[27] * d[55] - 2 * d[12] * d[15] * d[29] * d[55] + 2 * d[9] * d[16] * d[29] * d[55] - 2 * d[11] * d[15] * d[30] * d[55] + 2 * d[13] * d[17] * d[30] * d[55] + 2 * d[14] * d[15] * d[31] * d[55] - 4 * d[13] * d[16] * d[31] * d[55] + 2 * d[12] * d[17] * d[31] * d[55] + 2 * d[13] * d[15] * d[32] * d[55] - 2 * d[9] * d[17] * d[32] * d[55] - 2 * d[11] * d[12] * d[33] * d[55] + 2 * d[13] * d[14] * d[33] * d[55] + 2 * d[9] * d[11] * d[34] * d[55] - 2 * std::pow(d[13], 2) * d[34] * d[55] + 2 * d[12] * d[13] * d[35] * d[55] - 2 * d[9] * d[14] * d[35] * d[55] - 2 * d[14] * d[16] * d[27] * d[56] + 2 * d[10] * d[17] * d[27] * d[56] - 2 * d[13] * d[15] * d[28] * d[56] + 2 * d[9] * d[17] * d[28] * d[56] + 2 * d[14] * d[15] * d[30] * d[56] + 2 * d[13] * d[16] * d[30] * d[56] - 4 * d[12] * d[17] * d[30] * d[56] - 2 * d[10] * d[15] * d[31] * d[56] + 2 * d[12] * d[16] * d[31] * d[56] + 2 * d[12] * d[15] * d[32] * d[56] - 2 * d[9] * d[16] * d[32] * d[56] - 2 * d[10] * d[13] * d[33] * d[56] + 2 * d[12] * d[14] * d[33] * d[56] + 2 * d[12] * d[13] * d[34] * d[56] - 2 * d[9] * d[14] * d[34] * d[56] + 2 * d[9] * d[10] * d[35] * d[56] - 2 * std::pow(d[12], 2) * d[35] * d[56] - d[10] * d[11] * d[27] * d[69] + std::pow(d[14], 2) * d[27] * d[69] - d[9] * d[11] * d[28] * d[69] + std::pow(d[13], 2) * d[28] * d[69] - d[9] * d[10] * d[29] * d[69] + std::pow(d[12], 2) * d[29] * d[69] + 2 * d[11] * d[12] * d[30] * d[69] - 2 * d[13] * d[14] * d[30] * d[69] + 2 * d[10] * d[13] * d[31] * d[69] - 2 * d[12] * d[14] * d[31] * d[69] - 2 * d[12] * d[13] * d[32] * d[69] + 2 * d[9] * d[14] * d[32] * d[69];
    coeffs[5] = 2 * d[15] * d[20] * d[28] * d[54] - 2 * d[17] * d[22] * d[28] * d[54] + 2 * d[11] * d[24] * d[28] * d[54] - 2 * d[13] * d[26] * d[28] * d[54] + 2 * d[15] * d[19] * d[29] * d[54] - 2 * d[16] * d[21] * d[29] * d[54] + 2 * d[10] * d[24] * d[29] * d[54] - 2 * d[12] * d[25] * d[29] * d[54] - 2 * d[16] * d[20] * d[30] * d[54] + 2 * d[17] * d[23] * d[30] * d[54] - 2 * d[11] * d[25] * d[30] * d[54] + 2 * d[14] * d[26] * d[30] * d[54] - 2 * d[17] * d[19] * d[31] * d[54] + 2 * d[16] * d[23] * d[31] * d[54] + 2 * d[14] * d[25] * d[31] * d[54] - 2 * d[10] * d[26] * d[31] * d[54] + 2 * d[17] * d[21] * d[32] * d[54] + 2 * d[16] * d[22] * d[32] * d[54] - 4 * d[15] * d[23] * d[32] * d[54] - 4 * d[14] * d[24] * d[32] * d[54] + 2 * d[13] * d[25] * d[32] * d[54] + 2 * d[12] * d[26] * d[32] * d[54] + 2 * d[11] * d[19] * d[33] * d[54] + 2 * d[10] * d[20] * d[33] * d[54] - 4 * d[14] * d[23] * d[33] * d[54] - 2 * d[12] * d[20] * d[34] * d[54] - 2 * d[11] * d[21] * d[34] * d[54] + 2 * d[14] * d[22] * d[34] * d[54] + 2 * d[13] * d[23] * d[34] * d[54] - 2 * d[13] * d[19] * d[35] * d[54] + 2 * d[14] * d[21] * d[35] * d[54] - 2 * d[10] * d[22] * d[35] * d[54] + 2 * d[12] * d[23] * d[35] * d[54] + 2 * d[16] * d[20] * d[27] * d[55] - 2 * d[17] * d[23] * d[27] * d[55] + 2 * d[11] * d[25] * d[27] * d[55] - 2 * d[14] * d[26] * d[27] * d[55] + 2 * d[16] * d[18] * d[29] * d[55] - 2 * d[15] * d[21] * d[29] * d[55] - 2 * d[12] * d[24] * d[29] * d[55] + 2 * d[9] * d[25] * d[29] * d[55] - 2 * d[15] * d[20] * d[30] * d[55] + 2 * d[17] * d[22] * d[30] * d[55] - 2 * d[11] * d[24] * d[30] * d[55] + 2 * d[13] * d[26] * d[30] * d[55] + 2 * d[17] * d[21] * d[31] * d[55] - 4 * d[16] * d[22] * d[31] * d[55] + 2 * d[15] * d[23] * d[31] * d[55] + 2 * d[14] * d[24] * d[31] * d[55] - 4 * d[13] * d[25] * d[31] * d[55] + 2 * d[12] * d[26] * d[31] * d[55] - 2 * d[17] * d[18] * d[32] * d[55] + 2 * d[15] * d[22] * d[32] * d[55] + 2 * d[13] * d[24] * d[32] * d[55] - 2 * d[9] * d[26] * d[32] * d[55] - 2 * d[12] * d[20] * d[33] * d[55] - 2 * d[11] * d[21] * d[33] * d[55] + 2 * d[14] * d[22] * d[33] * d[55] + 2 * d[13] * d[23] * d[33] * d[55] + 2 * d[11] * d[18] * d[34] * d[55] + 2 * d[9] * d[20] * d[34] * d[55] - 4 * d[13] * d[22] * d[34] * d[55] - 2 * d[14] * d[18] * d[35] * d[55] + 2 * d[13] * d[21] * d[35] * d[55] + 2 * d[12] * d[22] * d[35] * d[55] - 2 * d[9] * d[23] * d[35] * d[55] + 2 * d[17] * d[19] * d[27] * d[56] - 2 * d[16] * d[23] * d[27] * d[56] - 2 * d[14] * d[25] * d[27] * d[56] + 2 * d[10] * d[26] * d[27] * d[56] + 2 * d[17] * d[18] * d[28] * d[56] - 2 * d[15] * d[22] * d[28] * d[56] - 2 * d[13] * d[24] * d[28] * d[56] + 2 * d[9] * d[26] * d[28] * d[56] - 4 * d[17] * d[21] * d[30] * d[56] + 2 * d[16] * d[22] * d[30] * d[56] + 2 * d[15] * d[23] * d[30] * d[56] + 2 * d[14] * d[24] * d[30] * d[56] + 2 * d[13] * d[25] * d[30] * d[56] - 4 * d[12] * d[26] * d[30] * d[56] - 2 * d[15] * d[19] * d[31] * d[56] + 2 * d[16] * d[21] * d[31] * d[56] - 2 * d[10] * d[24] * d[31] * d[56] + 2 * d[12] * d[25] * d[31] * d[56] - 2 * d[16] * d[18] * d[32] * d[56] + 2 * d[15] * d[21] * d[32] * d[56] + 2 * d[12] * d[24] * d[32] * d[56] - 2 * d[9] * d[25] * d[32] * d[56] - 2 * d[13] * d[19] * d[33] * d[56] + 2 * d[14] * d[21] * d[33] * d[56] - 2 * d[10] * d[22] * d[33] * d[56] + 2 * d[12] * d[23] * d[33] * d[56] - 2 * d[14] * d[18] * d[34] * d[56] + 2 * d[13] * d[21] * d[34] * d[56] + 2 * d[12] * d[22] * d[34] * d[56] - 2 * d[9] * d[23] * d[34] * d[56] + 2 * d[10] * d[18] * d[35] * d[56] + 2 * d[9] * d[19] * d[35] * d[56] - 4 * d[12] * d[21] * d[35] * d[56] - d[11] * d[19] * d[27] * d[69] - d[10] * d[20] * d[27] * d[69] + 2 * d[14] * d[23] * d[27] * d[69] - d[11] * d[18] * d[28] * d[69] - d[9] * d[20] * d[28] * d[69] + 2 * d[13] * d[22] * d[28] * d[69] - d[10] * d[18] * d[29] * d[69] - d[9] * d[19] * d[29] * d[69] + 2 * d[12] * d[21] * d[29] * d[69] + 2 * d[12] * d[20] * d[30] * d[69] + 2 * d[11] * d[21] * d[30] * d[69] - 2 * d[14] * d[22] * d[30] * d[69] - 2 * d[13] * d[23] * d[30] * d[69] + 2 * d[13] * d[19] * d[31] * d[69] - 2 * d[14] * d[21] * d[31] * d[69] + 2 * d[10] * d[22] * d[31] * d[69] - 2 * d[12] * d[23] * d[31] * d[69] + 2 * d[14] * d[18] * d[32] * d[69] - 2 * d[13] * d[21] * d[32] * d[69] - 2 * d[12] * d[22] * d[32] * d[69] + 2 * d[9] * d[23] * d[32] * d[69];
    coeffs[6] = 2 * d[20] * d[24] * d[28] * d[54] - 2 * d[22] * d[26] * d[28] * d[54] + 2 * d[19] * d[24] * d[29] * d[54] - 2 * d[21] * d[25] * d[29] * d[54] - 2 * d[20] * d[25] * d[30] * d[54] + 2 * d[23] * d[26] * d[30] * d[54] + 2 * d[23] * d[25] * d[31] * d[54] - 2 * d[19] * d[26] * d[31] * d[54] - 4 * d[23] * d[24] * d[32] * d[54] + 2 * d[22] * d[25] * d[32] * d[54] + 2 * d[21] * d[26] * d[32] * d[54] + 2 * d[19] * d[20] * d[33] * d[54] - 2 * std::pow(d[23], 2) * d[33] * d[54] - 2 * d[20] * d[21] * d[34] * d[54] + 2 * d[22] * d[23] * d[34] * d[54] - 2 * d[19] * d[22] * d[35] * d[54] + 2 * d[21] * d[23] * d[35] * d[54] + 2 * d[20] * d[25] * d[27] * d[55] - 2 * d[23] * d[26] * d[27] * d[55] - 2 * d[21] * d[24] * d[29] * d[55] + 2 * d[18] * d[25] * d[29] * d[55] - 2 * d[20] * d[24] * d[30] * d[55] + 2 * d[22] * d[26] * d[30] * d[55] + 2 * d[23] * d[24] * d[31] * d[55] - 4 * d[22] * d[25] * d[31] * d[55] + 2 * d[21] * d[26] * d[31] * d[55] + 2 * d[22] * d[24] * d[32] * d[55] - 2 * d[18] * d[26] * d[32] * d[55] - 2 * d[20] * d[21] * d[33] * d[55] + 2 * d[22] * d[23] * d[33] * d[55] + 2 * d[18] * d[20] * d[34] * d[55] - 2 * std::pow(d[22], 2) * d[34] * d[55] + 2 * d[21] * d[22] * d[35] * d[55] - 2 * d[18] * d[23] * d[35] * d[55] - 2 * d[23] * d[25] * d[27] * d[56] + 2 * d[19] * d[26] * d[27] * d[56] - 2 * d[22] * d[24] * d[28] * d[56] + 2 * d[18] * d[26] * d[28] * d[56] + 2 * d[23] * d[24] * d[30] * d[56] + 2 * d[22] * d[25] * d[30] * d[56] - 4 * d[21] * d[26] * d[30] * d[56] - 2 * d[19] * d[24] * d[31] * d[56] + 2 * d[21] * d[25] * d[31] * d[56] + 2 * d[21] * d[24] * d[32] * d[56] - 2 * d[18] * d[25] * d[32] * d[56] - 2 * d[19] * d[22] * d[33] * d[56] + 2 * d[21] * d[23] * d[33] * d[56] + 2 * d[21] * d[22] * d[34] * d[56] - 2 * d[18] * d[23] * d[34] * d[56] + 2 * d[18] * d[19] * d[35] * d[56] - 2 * std::pow(d[21], 2) * d[35] * d[56] - d[19] * d[20] * d[27] * d[69] + std::pow(d[23], 2) * d[27] * d[69] - d[18] * d[20] * d[28] * d[69] + std::pow(d[22], 2) * d[28] * d[69] - d[18] * d[19] * d[29] * d[69] + std::pow(d[21], 2) * d[29] * d[69] + 2 * d[20] * d[21] * d[30] * d[69] - 2 * d[22] * d[23] * d[30] * d[69] + 2 * d[19] * d[22] * d[31] * d[69] - 2 * d[21] * d[23] * d[31] * d[69] - 2 * d[21] * d[22] * d[32] * d[69] + 2 * d[18] * d[23] * d[32] * d[69];
    coeffs[7] = 2 * d[15] * d[28] * d[29] * d[54] - 2 * d[16] * d[29] * d[30] * d[54] - 2 * d[17] * d[28] * d[31] * d[54] + 2 * d[17] * d[30] * d[32] * d[54] + 2 * d[16] * d[31] * d[32] * d[54] - 2 * d[15] * std::pow(d[32], 2) * d[54] + 2 * d[11] * d[28] * d[33] * d[54] + 2 * d[10] * d[29] * d[33] * d[54] - 4 * d[14] * d[32] * d[33] * d[54] - 2 * d[12] * d[29] * d[34] * d[54] - 2 * d[11] * d[30] * d[34] * d[54] + 2 * d[14] * d[31] * d[34] * d[54] + 2 * d[13] * d[32] * d[34] * d[54] - 2 * d[13] * d[28] * d[35] * d[54] + 2 * d[14] * d[30] * d[35] * d[54] - 2 * d[10] * d[31] * d[35] * d[54] + 2 * d[12] * d[32] * d[35] * d[54] + 2 * d[16] * d[27] * d[29] * d[55] - 2 * d[15] * d[29] * d[30] * d[55] + 2 * d[17] * d[30] * d[31] * d[55] - 2 * d[16] * std::pow(d[31], 2) * d[55] - 2 * d[17] * d[27] * d[32] * d[55] + 2 * d[15] * d[31] * d[32] * d[55] - 2 * d[12] * d[29] * d[33] * d[55] - 2 * d[11] * d[30] * d[33] * d[55] + 2 * d[14] * d[31] * d[33] * d[55] + 2 * d[13] * d[32] * d[33] * d[55] + 2 * d[11] * d[27] * d[34] * d[55] + 2 * d[9] * d[29] * d[34] * d[55] - 4 * d[13] * d[31] * d[34] * d[55] - 2 * d[14] * d[27] * d[35] * d[55] + 2 * d[13] * d[30] * d[35] * d[55] + 2 * d[12] * d[31] * d[35] * d[55] - 2 * d[9] * d[32] * d[35] * d[55] + 2 * d[17] * d[27] * d[28] * d[56] - 2 * d[17] * std::pow(d[30], 2) * d[56] - 2 * d[15] * d[28] * d[31] * d[56] + 2 * d[16] * d[30] * d[31] * d[56] - 2 * d[16] * d[27] * d[32] * d[56] + 2 * d[15] * d[30] * d[32] * d[56] - 2 * d[13] * d[28] * d[33] * d[56] + 2 * d[14] * d[30] * d[33] * d[56] - 2 * d[10] * d[31] * d[33] * d[56] + 2 * d[12] * d[32] * d[33] * d[56] - 2 * d[14] * d[27] * d[34] * d[56] + 2 * d[13] * d[30] * d[34] * d[56] + 2 * d[12] * d[31] * d[34] * d[56] - 2 * d[9] * d[32] * d[34] * d[56] + 2 * d[10] * d[27] * d[35] * d[56] + 2 * d[9] * d[28] * d[35] * d[56] - 4 * d[12] * d[30] * d[35] * d[56] - d[11] * d[27] * d[28] * d[69] - d[10] * d[27] * d[29] * d[69] - d[9] * d[28] * d[29] * d[69] + 2 * d[12] * d[29] * d[30] * d[69] + d[11] * std::pow(d[30], 2) * d[69] + 2 * d[13] * d[28] * d[31] * d[69] - 2 * d[14] * d[30] * d[31] * d[69] + d[10] * std::pow(d[31], 2) * d[69] + 2 * d[14] * d[27] * d[32] * d[69] - 2 * d[13] * d[30] * d[32] * d[69] - 2 * d[12] * d[31] * d[32] * d[69] + d[9] * std::pow(d[32], 2) * d[69];
    coeffs[8] = 2 * d[24] * d[28] * d[29] * d[54] - 2 * d[25] * d[29] * d[30] * d[54] - 2 * d[26] * d[28] * d[31] * d[54] + 2 * d[26] * d[30] * d[32] * d[54] + 2 * d[25] * d[31] * d[32] * d[54] - 2 * d[24] * std::pow(d[32], 2) * d[54] + 2 * d[20] * d[28] * d[33] * d[54] + 2 * d[19] * d[29] * d[33] * d[54] - 4 * d[23] * d[32] * d[33] * d[54] - 2 * d[21] * d[29] * d[34] * d[54] - 2 * d[20] * d[30] * d[34] * d[54] + 2 * d[23] * d[31] * d[34] * d[54] + 2 * d[22] * d[32] * d[34] * d[54] - 2 * d[22] * d[28] * d[35] * d[54] + 2 * d[23] * d[30] * d[35] * d[54] - 2 * d[19] * d[31] * d[35] * d[54] + 2 * d[21] * d[32] * d[35] * d[54] + 2 * d[25] * d[27] * d[29] * d[55] - 2 * d[24] * d[29] * d[30] * d[55] + 2 * d[26] * d[30] * d[31] * d[55] - 2 * d[25] * std::pow(d[31], 2) * d[55] - 2 * d[26] * d[27] * d[32] * d[55] + 2 * d[24] * d[31] * d[32] * d[55] - 2 * d[21] * d[29] * d[33] * d[55] - 2 * d[20] * d[30] * d[33] * d[55] + 2 * d[23] * d[31] * d[33] * d[55] + 2 * d[22] * d[32] * d[33] * d[55] + 2 * d[20] * d[27] * d[34] * d[55] + 2 * d[18] * d[29] * d[34] * d[55] - 4 * d[22] * d[31] * d[34] * d[55] - 2 * d[23] * d[27] * d[35] * d[55] + 2 * d[22] * d[30] * d[35] * d[55] + 2 * d[21] * d[31] * d[35] * d[55] - 2 * d[18] * d[32] * d[35] * d[55] + 2 * d[26] * d[27] * d[28] * d[56] - 2 * d[26] * std::pow(d[30], 2) * d[56] - 2 * d[24] * d[28] * d[31] * d[56] + 2 * d[25] * d[30] * d[31] * d[56] - 2 * d[25] * d[27] * d[32] * d[56] + 2 * d[24] * d[30] * d[32] * d[56] - 2 * d[22] * d[28] * d[33] * d[56] + 2 * d[23] * d[30] * d[33] * d[56] - 2 * d[19] * d[31] * d[33] * d[56] + 2 * d[21] * d[32] * d[33] * d[56] - 2 * d[23] * d[27] * d[34] * d[56] + 2 * d[22] * d[30] * d[34] * d[56] + 2 * d[21] * d[31] * d[34] * d[56] - 2 * d[18] * d[32] * d[34] * d[56] + 2 * d[19] * d[27] * d[35] * d[56] + 2 * d[18] * d[28] * d[35] * d[56] - 4 * d[21] * d[30] * d[35] * d[56] - d[20] * d[27] * d[28] * d[69] - d[19] * d[27] * d[29] * d[69] - d[18] * d[28] * d[29] * d[69] + 2 * d[21] * d[29] * d[30] * d[69] + d[20] * std::pow(d[30], 2) * d[69] + 2 * d[22] * d[28] * d[31] * d[69] - 2 * d[23] * d[30] * d[31] * d[69] + d[19] * std::pow(d[31], 2) * d[69] + 2 * d[23] * d[27] * d[32] * d[69] - 2 * d[22] * d[30] * d[32] * d[69] - 2 * d[21] * d[31] * d[32] * d[69] + d[18] * std::pow(d[32], 2) * d[69];
    coeffs[9] = 2 * d[28] * d[29] * d[33] * d[54] - 2 * std::pow(d[32], 2) * d[33] * d[54] - 2 * d[29] * d[30] * d[34] * d[54] + 2 * d[31] * d[32] * d[34] * d[54] - 2 * d[28] * d[31] * d[35] * d[54] + 2 * d[30] * d[32] * d[35] * d[54] - 2 * d[29] * d[30] * d[33] * d[55] + 2 * d[31] * d[32] * d[33] * d[55] + 2 * d[27] * d[29] * d[34] * d[55] - 2 * std::pow(d[31], 2) * d[34] * d[55] + 2 * d[30] * d[31] * d[35] * d[55] - 2 * d[27] * d[32] * d[35] * d[55] - 2 * d[28] * d[31] * d[33] * d[56] + 2 * d[30] * d[32] * d[33] * d[56] + 2 * d[30] * d[31] * d[34] * d[56] - 2 * d[27] * d[32] * d[34] * d[56] + 2 * d[27] * d[28] * d[35] * d[56] - 2 * std::pow(d[30], 2) * d[35] * d[56] - d[27] * d[28] * d[29] * d[69] + d[29] * std::pow(d[30], 2) * d[69] + d[28] * std::pow(d[31], 2) * d[69] - 2 * d[30] * d[31] * d[32] * d[69] + d[27] * std::pow(d[32], 2) * d[69];
    coeffs[10] = 2 * d[11] * d[15] * d[37] * d[54] - 2 * d[13] * d[17] * d[37] * d[54] + 2 * d[10] * d[15] * d[38] * d[54] - 2 * d[12] * d[16] * d[38] * d[54] - 2 * d[11] * d[16] * d[39] * d[54] + 2 * d[14] * d[17] * d[39] * d[54] + 2 * d[14] * d[16] * d[40] * d[54] - 2 * d[10] * d[17] * d[40] * d[54] - 4 * d[14] * d[15] * d[41] * d[54] + 2 * d[13] * d[16] * d[41] * d[54] + 2 * d[12] * d[17] * d[41] * d[54] + 2 * d[10] * d[11] * d[42] * d[54] - 2 * std::pow(d[14], 2) * d[42] * d[54] - 2 * d[11] * d[12] * d[43] * d[54] + 2 * d[13] * d[14] * d[43] * d[54] - 2 * d[10] * d[13] * d[44] * d[54] + 2 * d[12] * d[14] * d[44] * d[54] + 2 * d[11] * d[16] * d[36] * d[55] - 2 * d[14] * d[17] * d[36] * d[55] - 2 * d[12] * d[15] * d[38] * d[55] + 2 * d[9] * d[16] * d[38] * d[55] - 2 * d[11] * d[15] * d[39] * d[55] + 2 * d[13] * d[17] * d[39] * d[55] + 2 * d[14] * d[15] * d[40] * d[55] - 4 * d[13] * d[16] * d[40] * d[55] + 2 * d[12] * d[17] * d[40] * d[55] + 2 * d[13] * d[15] * d[41] * d[55] - 2 * d[9] * d[17] * d[41] * d[55] - 2 * d[11] * d[12] * d[42] * d[55] + 2 * d[13] * d[14] * d[42] * d[55] + 2 * d[9] * d[11] * d[43] * d[55] - 2 * std::pow(d[13], 2) * d[43] * d[55] + 2 * d[12] * d[13] * d[44] * d[55] - 2 * d[9] * d[14] * d[44] * d[55] - 2 * d[14] * d[16] * d[36] * d[56] + 2 * d[10] * d[17] * d[36] * d[56] - 2 * d[13] * d[15] * d[37] * d[56] + 2 * d[9] * d[17] * d[37] * d[56] + 2 * d[14] * d[15] * d[39] * d[56] + 2 * d[13] * d[16] * d[39] * d[56] - 4 * d[12] * d[17] * d[39] * d[56] - 2 * d[10] * d[15] * d[40] * d[56] + 2 * d[12] * d[16] * d[40] * d[56] + 2 * d[12] * d[15] * d[41] * d[56] - 2 * d[9] * d[16] * d[41] * d[56] - 2 * d[10] * d[13] * d[42] * d[56] + 2 * d[12] * d[14] * d[42] * d[56] + 2 * d[12] * d[13] * d[43] * d[56] - 2 * d[9] * d[14] * d[43] * d[56] + 2 * d[9] * d[10] * d[44] * d[56] - 2 * std::pow(d[12], 2) * d[44] * d[56] - d[10] * d[11] * d[36] * d[69] + std::pow(d[14], 2) * d[36] * d[69] - d[9] * d[11] * d[37] * d[69] + std::pow(d[13], 2) * d[37] * d[69] - d[9] * d[10] * d[38] * d[69] + std::pow(d[12], 2) * d[38] * d[69] + 2 * d[11] * d[12] * d[39] * d[69] - 2 * d[13] * d[14] * d[39] * d[69] + 2 * d[10] * d[13] * d[40] * d[69] - 2 * d[12] * d[14] * d[40] * d[69] - 2 * d[12] * d[13] * d[41] * d[69] + 2 * d[9] * d[14] * d[41] * d[69];
    coeffs[11] = 2 * d[15] * d[20] * d[37] * d[54] - 2 * d[17] * d[22] * d[37] * d[54] + 2 * d[11] * d[24] * d[37] * d[54] - 2 * d[13] * d[26] * d[37] * d[54] + 2 * d[15] * d[19] * d[38] * d[54] - 2 * d[16] * d[21] * d[38] * d[54] + 2 * d[10] * d[24] * d[38] * d[54] - 2 * d[12] * d[25] * d[38] * d[54] - 2 * d[16] * d[20] * d[39] * d[54] + 2 * d[17] * d[23] * d[39] * d[54] - 2 * d[11] * d[25] * d[39] * d[54] + 2 * d[14] * d[26] * d[39] * d[54] - 2 * d[17] * d[19] * d[40] * d[54] + 2 * d[16] * d[23] * d[40] * d[54] + 2 * d[14] * d[25] * d[40] * d[54] - 2 * d[10] * d[26] * d[40] * d[54] + 2 * d[17] * d[21] * d[41] * d[54] + 2 * d[16] * d[22] * d[41] * d[54] - 4 * d[15] * d[23] * d[41] * d[54] - 4 * d[14] * d[24] * d[41] * d[54] + 2 * d[13] * d[25] * d[41] * d[54] + 2 * d[12] * d[26] * d[41] * d[54] + 2 * d[11] * d[19] * d[42] * d[54] + 2 * d[10] * d[20] * d[42] * d[54] - 4 * d[14] * d[23] * d[42] * d[54] - 2 * d[12] * d[20] * d[43] * d[54] - 2 * d[11] * d[21] * d[43] * d[54] + 2 * d[14] * d[22] * d[43] * d[54] + 2 * d[13] * d[23] * d[43] * d[54] - 2 * d[13] * d[19] * d[44] * d[54] + 2 * d[14] * d[21] * d[44] * d[54] - 2 * d[10] * d[22] * d[44] * d[54] + 2 * d[12] * d[23] * d[44] * d[54] + 2 * d[16] * d[20] * d[36] * d[55] - 2 * d[17] * d[23] * d[36] * d[55] + 2 * d[11] * d[25] * d[36] * d[55] - 2 * d[14] * d[26] * d[36] * d[55] + 2 * d[16] * d[18] * d[38] * d[55] - 2 * d[15] * d[21] * d[38] * d[55] - 2 * d[12] * d[24] * d[38] * d[55] + 2 * d[9] * d[25] * d[38] * d[55] - 2 * d[15] * d[20] * d[39] * d[55] + 2 * d[17] * d[22] * d[39] * d[55] - 2 * d[11] * d[24] * d[39] * d[55] + 2 * d[13] * d[26] * d[39] * d[55] + 2 * d[17] * d[21] * d[40] * d[55] - 4 * d[16] * d[22] * d[40] * d[55] + 2 * d[15] * d[23] * d[40] * d[55] + 2 * d[14] * d[24] * d[40] * d[55] - 4 * d[13] * d[25] * d[40] * d[55] + 2 * d[12] * d[26] * d[40] * d[55] - 2 * d[17] * d[18] * d[41] * d[55] + 2 * d[15] * d[22] * d[41] * d[55] + 2 * d[13] * d[24] * d[41] * d[55] - 2 * d[9] * d[26] * d[41] * d[55] - 2 * d[12] * d[20] * d[42] * d[55] - 2 * d[11] * d[21] * d[42] * d[55] + 2 * d[14] * d[22] * d[42] * d[55] + 2 * d[13] * d[23] * d[42] * d[55] + 2 * d[11] * d[18] * d[43] * d[55] + 2 * d[9] * d[20] * d[43] * d[55] - 4 * d[13] * d[22] * d[43] * d[55] - 2 * d[14] * d[18] * d[44] * d[55] + 2 * d[13] * d[21] * d[44] * d[55] + 2 * d[12] * d[22] * d[44] * d[55] - 2 * d[9] * d[23] * d[44] * d[55] + 2 * d[17] * d[19] * d[36] * d[56] - 2 * d[16] * d[23] * d[36] * d[56] - 2 * d[14] * d[25] * d[36] * d[56] + 2 * d[10] * d[26] * d[36] * d[56] + 2 * d[17] * d[18] * d[37] * d[56] - 2 * d[15] * d[22] * d[37] * d[56] - 2 * d[13] * d[24] * d[37] * d[56] + 2 * d[9] * d[26] * d[37] * d[56] - 4 * d[17] * d[21] * d[39] * d[56] + 2 * d[16] * d[22] * d[39] * d[56] + 2 * d[15] * d[23] * d[39] * d[56] + 2 * d[14] * d[24] * d[39] * d[56] + 2 * d[13] * d[25] * d[39] * d[56] - 4 * d[12] * d[26] * d[39] * d[56] - 2 * d[15] * d[19] * d[40] * d[56] + 2 * d[16] * d[21] * d[40] * d[56] - 2 * d[10] * d[24] * d[40] * d[56] + 2 * d[12] * d[25] * d[40] * d[56] - 2 * d[16] * d[18] * d[41] * d[56] + 2 * d[15] * d[21] * d[41] * d[56] + 2 * d[12] * d[24] * d[41] * d[56] - 2 * d[9] * d[25] * d[41] * d[56] - 2 * d[13] * d[19] * d[42] * d[56] + 2 * d[14] * d[21] * d[42] * d[56] - 2 * d[10] * d[22] * d[42] * d[56] + 2 * d[12] * d[23] * d[42] * d[56] - 2 * d[14] * d[18] * d[43] * d[56] + 2 * d[13] * d[21] * d[43] * d[56] + 2 * d[12] * d[22] * d[43] * d[56] - 2 * d[9] * d[23] * d[43] * d[56] + 2 * d[10] * d[18] * d[44] * d[56] + 2 * d[9] * d[19] * d[44] * d[56] - 4 * d[12] * d[21] * d[44] * d[56] - d[11] * d[19] * d[36] * d[69] - d[10] * d[20] * d[36] * d[69] + 2 * d[14] * d[23] * d[36] * d[69] - d[11] * d[18] * d[37] * d[69] - d[9] * d[20] * d[37] * d[69] + 2 * d[13] * d[22] * d[37] * d[69] - d[10] * d[18] * d[38] * d[69] - d[9] * d[19] * d[38] * d[69] + 2 * d[12] * d[21] * d[38] * d[69] + 2 * d[12] * d[20] * d[39] * d[69] + 2 * d[11] * d[21] * d[39] * d[69] - 2 * d[14] * d[22] * d[39] * d[69] - 2 * d[13] * d[23] * d[39] * d[69] + 2 * d[13] * d[19] * d[40] * d[69] - 2 * d[14] * d[21] * d[40] * d[69] + 2 * d[10] * d[22] * d[40] * d[69] - 2 * d[12] * d[23] * d[40] * d[69] + 2 * d[14] * d[18] * d[41] * d[69] - 2 * d[13] * d[21] * d[41] * d[69] - 2 * d[12] * d[22] * d[41] * d[69] + 2 * d[9] * d[23] * d[41] * d[69];
    coeffs[12] = 2 * d[20] * d[24] * d[37] * d[54] - 2 * d[22] * d[26] * d[37] * d[54] + 2 * d[19] * d[24] * d[38] * d[54] - 2 * d[21] * d[25] * d[38] * d[54] - 2 * d[20] * d[25] * d[39] * d[54] + 2 * d[23] * d[26] * d[39] * d[54] + 2 * d[23] * d[25] * d[40] * d[54] - 2 * d[19] * d[26] * d[40] * d[54] - 4 * d[23] * d[24] * d[41] * d[54] + 2 * d[22] * d[25] * d[41] * d[54] + 2 * d[21] * d[26] * d[41] * d[54] + 2 * d[19] * d[20] * d[42] * d[54] - 2 * std::pow(d[23], 2) * d[42] * d[54] - 2 * d[20] * d[21] * d[43] * d[54] + 2 * d[22] * d[23] * d[43] * d[54] - 2 * d[19] * d[22] * d[44] * d[54] + 2 * d[21] * d[23] * d[44] * d[54] + 2 * d[20] * d[25] * d[36] * d[55] - 2 * d[23] * d[26] * d[36] * d[55] - 2 * d[21] * d[24] * d[38] * d[55] + 2 * d[18] * d[25] * d[38] * d[55] - 2 * d[20] * d[24] * d[39] * d[55] + 2 * d[22] * d[26] * d[39] * d[55] + 2 * d[23] * d[24] * d[40] * d[55] - 4 * d[22] * d[25] * d[40] * d[55] + 2 * d[21] * d[26] * d[40] * d[55] + 2 * d[22] * d[24] * d[41] * d[55] - 2 * d[18] * d[26] * d[41] * d[55] - 2 * d[20] * d[21] * d[42] * d[55] + 2 * d[22] * d[23] * d[42] * d[55] + 2 * d[18] * d[20] * d[43] * d[55] - 2 * std::pow(d[22], 2) * d[43] * d[55] + 2 * d[21] * d[22] * d[44] * d[55] - 2 * d[18] * d[23] * d[44] * d[55] - 2 * d[23] * d[25] * d[36] * d[56] + 2 * d[19] * d[26] * d[36] * d[56] - 2 * d[22] * d[24] * d[37] * d[56] + 2 * d[18] * d[26] * d[37] * d[56] + 2 * d[23] * d[24] * d[39] * d[56] + 2 * d[22] * d[25] * d[39] * d[56] - 4 * d[21] * d[26] * d[39] * d[56] - 2 * d[19] * d[24] * d[40] * d[56] + 2 * d[21] * d[25] * d[40] * d[56] + 2 * d[21] * d[24] * d[41] * d[56] - 2 * d[18] * d[25] * d[41] * d[56] - 2 * d[19] * d[22] * d[42] * d[56] + 2 * d[21] * d[23] * d[42] * d[56] + 2 * d[21] * d[22] * d[43] * d[56] - 2 * d[18] * d[23] * d[43] * d[56] + 2 * d[18] * d[19] * d[44] * d[56] - 2 * std::pow(d[21], 2) * d[44] * d[56] - d[19] * d[20] * d[36] * d[69] + std::pow(d[23], 2) * d[36] * d[69] - d[18] * d[20] * d[37] * d[69] + std::pow(d[22], 2) * d[37] * d[69] - d[18] * d[19] * d[38] * d[69] + std::pow(d[21], 2) * d[38] * d[69] + 2 * d[20] * d[21] * d[39] * d[69] - 2 * d[22] * d[23] * d[39] * d[69] + 2 * d[19] * d[22] * d[40] * d[69] - 2 * d[21] * d[23] * d[40] * d[69] - 2 * d[21] * d[22] * d[41] * d[69] + 2 * d[18] * d[23] * d[41] * d[69];
    coeffs[13] = 2 * d[15] * d[29] * d[37] * d[54] - 2 * d[17] * d[31] * d[37] * d[54] + 2 * d[11] * d[33] * d[37] * d[54] - 2 * d[13] * d[35] * d[37] * d[54] + 2 * d[15] * d[28] * d[38] * d[54] - 2 * d[16] * d[30] * d[38] * d[54] + 2 * d[10] * d[33] * d[38] * d[54] - 2 * d[12] * d[34] * d[38] * d[54] - 2 * d[16] * d[29] * d[39] * d[54] + 2 * d[17] * d[32] * d[39] * d[54] - 2 * d[11] * d[34] * d[39] * d[54] + 2 * d[14] * d[35] * d[39] * d[54] - 2 * d[17] * d[28] * d[40] * d[54] + 2 * d[16] * d[32] * d[40] * d[54] + 2 * d[14] * d[34] * d[40] * d[54] - 2 * d[10] * d[35] * d[40] * d[54] + 2 * d[17] * d[30] * d[41] * d[54] + 2 * d[16] * d[31] * d[41] * d[54] - 4 * d[15] * d[32] * d[41] * d[54] - 4 * d[14] * d[33] * d[41] * d[54] + 2 * d[13] * d[34] * d[41] * d[54] + 2 * d[12] * d[35] * d[41] * d[54] + 2 * d[11] * d[28] * d[42] * d[54] + 2 * d[10] * d[29] * d[42] * d[54] - 4 * d[14] * d[32] * d[42] * d[54] - 2 * d[12] * d[29] * d[43] * d[54] - 2 * d[11] * d[30] * d[43] * d[54] + 2 * d[14] * d[31] * d[43] * d[54] + 2 * d[13] * d[32] * d[43] * d[54] - 2 * d[13] * d[28] * d[44] * d[54] + 2 * d[14] * d[30] * d[44] * d[54] - 2 * d[10] * d[31] * d[44] * d[54] + 2 * d[12] * d[32] * d[44] * d[54] + 2 * d[16] * d[29] * d[36] * d[55] - 2 * d[17] * d[32] * d[36] * d[55] + 2 * d[11] * d[34] * d[36] * d[55] - 2 * d[14] * d[35] * d[36] * d[55] + 2 * d[16] * d[27] * d[38] * d[55] - 2 * d[15] * d[30] * d[38] * d[55] - 2 * d[12] * d[33] * d[38] * d[55] + 2 * d[9] * d[34] * d[38] * d[55] - 2 * d[15] * d[29] * d[39] * d[55] + 2 * d[17] * d[31] * d[39] * d[55] - 2 * d[11] * d[33] * d[39] * d[55] + 2 * d[13] * d[35] * d[39] * d[55] + 2 * d[17] * d[30] * d[40] * d[55] - 4 * d[16] * d[31] * d[40] * d[55] + 2 * d[15] * d[32] * d[40] * d[55] + 2 * d[14] * d[33] * d[40] * d[55] - 4 * d[13] * d[34] * d[40] * d[55] + 2 * d[12] * d[35] * d[40] * d[55] - 2 * d[17] * d[27] * d[41] * d[55] + 2 * d[15] * d[31] * d[41] * d[55] + 2 * d[13] * d[33] * d[41] * d[55] - 2 * d[9] * d[35] * d[41] * d[55] - 2 * d[12] * d[29] * d[42] * d[55] - 2 * d[11] * d[30] * d[42] * d[55] + 2 * d[14] * d[31] * d[42] * d[55] + 2 * d[13] * d[32] * d[42] * d[55] + 2 * d[11] * d[27] * d[43] * d[55] + 2 * d[9] * d[29] * d[43] * d[55] - 4 * d[13] * d[31] * d[43] * d[55] - 2 * d[14] * d[27] * d[44] * d[55] + 2 * d[13] * d[30] * d[44] * d[55] + 2 * d[12] * d[31] * d[44] * d[55] - 2 * d[9] * d[32] * d[44] * d[55] + 2 * d[17] * d[28] * d[36] * d[56] - 2 * d[16] * d[32] * d[36] * d[56] - 2 * d[14] * d[34] * d[36] * d[56] + 2 * d[10] * d[35] * d[36] * d[56] + 2 * d[17] * d[27] * d[37] * d[56] - 2 * d[15] * d[31] * d[37] * d[56] - 2 * d[13] * d[33] * d[37] * d[56] + 2 * d[9] * d[35] * d[37] * d[56] - 4 * d[17] * d[30] * d[39] * d[56] + 2 * d[16] * d[31] * d[39] * d[56] + 2 * d[15] * d[32] * d[39] * d[56] + 2 * d[14] * d[33] * d[39] * d[56] + 2 * d[13] * d[34] * d[39] * d[56] - 4 * d[12] * d[35] * d[39] * d[56] - 2 * d[15] * d[28] * d[40] * d[56] + 2 * d[16] * d[30] * d[40] * d[56] - 2 * d[10] * d[33] * d[40] * d[56] + 2 * d[12] * d[34] * d[40] * d[56] - 2 * d[16] * d[27] * d[41] * d[56] + 2 * d[15] * d[30] * d[41] * d[56] + 2 * d[12] * d[33] * d[41] * d[56] - 2 * d[9] * d[34] * d[41] * d[56] - 2 * d[13] * d[28] * d[42] * d[56] + 2 * d[14] * d[30] * d[42] * d[56] - 2 * d[10] * d[31] * d[42] * d[56] + 2 * d[12] * d[32] * d[42] * d[56] - 2 * d[14] * d[27] * d[43] * d[56] + 2 * d[13] * d[30] * d[43] * d[56] + 2 * d[12] * d[31] * d[43] * d[56] - 2 * d[9] * d[32] * d[43] * d[56] + 2 * d[10] * d[27] * d[44] * d[56] + 2 * d[9] * d[28] * d[44] * d[56] - 4 * d[12] * d[30] * d[44] * d[56] - d[11] * d[28] * d[36] * d[69] - d[10] * d[29] * d[36] * d[69] + 2 * d[14] * d[32] * d[36] * d[69] - d[11] * d[27] * d[37] * d[69] - d[9] * d[29] * d[37] * d[69] + 2 * d[13] * d[31] * d[37] * d[69] - d[10] * d[27] * d[38] * d[69] - d[9] * d[28] * d[38] * d[69] + 2 * d[12] * d[30] * d[38] * d[69] + 2 * d[12] * d[29] * d[39] * d[69] + 2 * d[11] * d[30] * d[39] * d[69] - 2 * d[14] * d[31] * d[39] * d[69] - 2 * d[13] * d[32] * d[39] * d[69] + 2 * d[13] * d[28] * d[40] * d[69] - 2 * d[14] * d[30] * d[40] * d[69] + 2 * d[10] * d[31] * d[40] * d[69] - 2 * d[12] * d[32] * d[40] * d[69] + 2 * d[14] * d[27] * d[41] * d[69] - 2 * d[13] * d[30] * d[41] * d[69] - 2 * d[12] * d[31] * d[41] * d[69] + 2 * d[9] * d[32] * d[41] * d[69];
    coeffs[14] = 2 * d[24] * d[29] * d[37] * d[54] - 2 * d[26] * d[31] * d[37] * d[54] + 2 * d[20] * d[33] * d[37] * d[54] - 2 * d[22] * d[35] * d[37] * d[54] + 2 * d[24] * d[28] * d[38] * d[54] - 2 * d[25] * d[30] * d[38] * d[54] + 2 * d[19] * d[33] * d[38] * d[54] - 2 * d[21] * d[34] * d[38] * d[54] - 2 * d[25] * d[29] * d[39] * d[54] + 2 * d[26] * d[32] * d[39] * d[54] - 2 * d[20] * d[34] * d[39] * d[54] + 2 * d[23] * d[35] * d[39] * d[54] - 2 * d[26] * d[28] * d[40] * d[54] + 2 * d[25] * d[32] * d[40] * d[54] + 2 * d[23] * d[34] * d[40] * d[54] - 2 * d[19] * d[35] * d[40] * d[54] + 2 * d[26] * d[30] * d[41] * d[54] + 2 * d[25] * d[31] * d[41] * d[54] - 4 * d[24] * d[32] * d[41] * d[54] - 4 * d[23] * d[33] * d[41] * d[54] + 2 * d[22] * d[34] * d[41] * d[54] + 2 * d[21] * d[35] * d[41] * d[54] + 2 * d[20] * d[28] * d[42] * d[54] + 2 * d[19] * d[29] * d[42] * d[54] - 4 * d[23] * d[32] * d[42] * d[54] - 2 * d[21] * d[29] * d[43] * d[54] - 2 * d[20] * d[30] * d[43] * d[54] + 2 * d[23] * d[31] * d[43] * d[54] + 2 * d[22] * d[32] * d[43] * d[54] - 2 * d[22] * d[28] * d[44] * d[54] + 2 * d[23] * d[30] * d[44] * d[54] - 2 * d[19] * d[31] * d[44] * d[54] + 2 * d[21] * d[32] * d[44] * d[54] + 2 * d[25] * d[29] * d[36] * d[55] - 2 * d[26] * d[32] * d[36] * d[55] + 2 * d[20] * d[34] * d[36] * d[55] - 2 * d[23] * d[35] * d[36] * d[55] + 2 * d[25] * d[27] * d[38] * d[55] - 2 * d[24] * d[30] * d[38] * d[55] - 2 * d[21] * d[33] * d[38] * d[55] + 2 * d[18] * d[34] * d[38] * d[55] - 2 * d[24] * d[29] * d[39] * d[55] + 2 * d[26] * d[31] * d[39] * d[55] - 2 * d[20] * d[33] * d[39] * d[55] + 2 * d[22] * d[35] * d[39] * d[55] + 2 * d[26] * d[30] * d[40] * d[55] - 4 * d[25] * d[31] * d[40] * d[55] + 2 * d[24] * d[32] * d[40] * d[55] + 2 * d[23] * d[33] * d[40] * d[55] - 4 * d[22] * d[34] * d[40] * d[55] + 2 * d[21] * d[35] * d[40] * d[55] - 2 * d[26] * d[27] * d[41] * d[55] + 2 * d[24] * d[31] * d[41] * d[55] + 2 * d[22] * d[33] * d[41] * d[55] - 2 * d[18] * d[35] * d[41] * d[55] - 2 * d[21] * d[29] * d[42] * d[55] - 2 * d[20] * d[30] * d[42] * d[55] + 2 * d[23] * d[31] * d[42] * d[55] + 2 * d[22] * d[32] * d[42] * d[55] + 2 * d[20] * d[27] * d[43] * d[55] + 2 * d[18] * d[29] * d[43] * d[55] - 4 * d[22] * d[31] * d[43] * d[55] - 2 * d[23] * d[27] * d[44] * d[55] + 2 * d[22] * d[30] * d[44] * d[55] + 2 * d[21] * d[31] * d[44] * d[55] - 2 * d[18] * d[32] * d[44] * d[55] + 2 * d[26] * d[28] * d[36] * d[56] - 2 * d[25] * d[32] * d[36] * d[56] - 2 * d[23] * d[34] * d[36] * d[56] + 2 * d[19] * d[35] * d[36] * d[56] + 2 * d[26] * d[27] * d[37] * d[56] - 2 * d[24] * d[31] * d[37] * d[56] - 2 * d[22] * d[33] * d[37] * d[56] + 2 * d[18] * d[35] * d[37] * d[56] - 4 * d[26] * d[30] * d[39] * d[56] + 2 * d[25] * d[31] * d[39] * d[56] + 2 * d[24] * d[32] * d[39] * d[56] + 2 * d[23] * d[33] * d[39] * d[56] + 2 * d[22] * d[34] * d[39] * d[56] - 4 * d[21] * d[35] * d[39] * d[56] - 2 * d[24] * d[28] * d[40] * d[56] + 2 * d[25] * d[30] * d[40] * d[56] - 2 * d[19] * d[33] * d[40] * d[56] + 2 * d[21] * d[34] * d[40] * d[56] - 2 * d[25] * d[27] * d[41] * d[56] + 2 * d[24] * d[30] * d[41] * d[56] + 2 * d[21] * d[33] * d[41] * d[56] - 2 * d[18] * d[34] * d[41] * d[56] - 2 * d[22] * d[28] * d[42] * d[56] + 2 * d[23] * d[30] * d[42] * d[56] - 2 * d[19] * d[31] * d[42] * d[56] + 2 * d[21] * d[32] * d[42] * d[56] - 2 * d[23] * d[27] * d[43] * d[56] + 2 * d[22] * d[30] * d[43] * d[56] + 2 * d[21] * d[31] * d[43] * d[56] - 2 * d[18] * d[32] * d[43] * d[56] + 2 * d[19] * d[27] * d[44] * d[56] + 2 * d[18] * d[28] * d[44] * d[56] - 4 * d[21] * d[30] * d[44] * d[56] - d[20] * d[28] * d[36] * d[69] - d[19] * d[29] * d[36] * d[69] + 2 * d[23] * d[32] * d[36] * d[69] - d[20] * d[27] * d[37] * d[69] - d[18] * d[29] * d[37] * d[69] + 2 * d[22] * d[31] * d[37] * d[69] - d[19] * d[27] * d[38] * d[69] - d[18] * d[28] * d[38] * d[69] + 2 * d[21] * d[30] * d[38] * d[69] + 2 * d[21] * d[29] * d[39] * d[69] + 2 * d[20] * d[30] * d[39] * d[69] - 2 * d[23] * d[31] * d[39] * d[69] - 2 * d[22] * d[32] * d[39] * d[69] + 2 * d[22] * d[28] * d[40] * d[69] - 2 * d[23] * d[30] * d[40] * d[69] + 2 * d[19] * d[31] * d[40] * d[69] - 2 * d[21] * d[32] * d[40] * d[69] + 2 * d[23] * d[27] * d[41] * d[69] - 2 * d[22] * d[30] * d[41] * d[69] - 2 * d[21] * d[31] * d[41] * d[69] + 2 * d[18] * d[32] * d[41] * d[69];
    coeffs[15] = 2 * d[29] * d[33] * d[37] * d[54] - 2 * d[31] * d[35] * d[37] * d[54] + 2 * d[28] * d[33] * d[38] * d[54] - 2 * d[30] * d[34] * d[38] * d[54] - 2 * d[29] * d[34] * d[39] * d[54] + 2 * d[32] * d[35] * d[39] * d[54] + 2 * d[32] * d[34] * d[40] * d[54] - 2 * d[28] * d[35] * d[40] * d[54] - 4 * d[32] * d[33] * d[41] * d[54] + 2 * d[31] * d[34] * d[41] * d[54] + 2 * d[30] * d[35] * d[41] * d[54] + 2 * d[28] * d[29] * d[42] * d[54] - 2 * std::pow(d[32], 2) * d[42] * d[54] - 2 * d[29] * d[30] * d[43] * d[54] + 2 * d[31] * d[32] * d[43] * d[54] - 2 * d[28] * d[31] * d[44] * d[54] + 2 * d[30] * d[32] * d[44] * d[54] + 2 * d[29] * d[34] * d[36] * d[55] - 2 * d[32] * d[35] * d[36] * d[55] - 2 * d[30] * d[33] * d[38] * d[55] + 2 * d[27] * d[34] * d[38] * d[55] - 2 * d[29] * d[33] * d[39] * d[55] + 2 * d[31] * d[35] * d[39] * d[55] + 2 * d[32] * d[33] * d[40] * d[55] - 4 * d[31] * d[34] * d[40] * d[55] + 2 * d[30] * d[35] * d[40] * d[55] + 2 * d[31] * d[33] * d[41] * d[55] - 2 * d[27] * d[35] * d[41] * d[55] - 2 * d[29] * d[30] * d[42] * d[55] + 2 * d[31] * d[32] * d[42] * d[55] + 2 * d[27] * d[29] * d[43] * d[55] - 2 * std::pow(d[31], 2) * d[43] * d[55] + 2 * d[30] * d[31] * d[44] * d[55] - 2 * d[27] * d[32] * d[44] * d[55] - 2 * d[32] * d[34] * d[36] * d[56] + 2 * d[28] * d[35] * d[36] * d[56] - 2 * d[31] * d[33] * d[37] * d[56] + 2 * d[27] * d[35] * d[37] * d[56] + 2 * d[32] * d[33] * d[39] * d[56] + 2 * d[31] * d[34] * d[39] * d[56] - 4 * d[30] * d[35] * d[39] * d[56] - 2 * d[28] * d[33] * d[40] * d[56] + 2 * d[30] * d[34] * d[40] * d[56] + 2 * d[30] * d[33] * d[41] * d[56] - 2 * d[27] * d[34] * d[41] * d[56] - 2 * d[28] * d[31] * d[42] * d[56] + 2 * d[30] * d[32] * d[42] * d[56] + 2 * d[30] * d[31] * d[43] * d[56] - 2 * d[27] * d[32] * d[43] * d[56] + 2 * d[27] * d[28] * d[44] * d[56] - 2 * std::pow(d[30], 2) * d[44] * d[56] - d[28] * d[29] * d[36] * d[69] + std::pow(d[32], 2) * d[36] * d[69] - d[27] * d[29] * d[37] * d[69] + std::pow(d[31], 2) * d[37] * d[69] - d[27] * d[28] * d[38] * d[69] + std::pow(d[30], 2) * d[38] * d[69] + 2 * d[29] * d[30] * d[39] * d[69] - 2 * d[31] * d[32] * d[39] * d[69] + 2 * d[28] * d[31] * d[40] * d[69] - 2 * d[30] * d[32] * d[40] * d[69] - 2 * d[30] * d[31] * d[41] * d[69] + 2 * d[27] * d[32] * d[41] * d[69];
    coeffs[16] = 2 * d[15] * d[37] * d[38] * d[54] - 2 * d[16] * d[38] * d[39] * d[54] - 2 * d[17] * d[37] * d[40] * d[54] + 2 * d[17] * d[39] * d[41] * d[54] + 2 * d[16] * d[40] * d[41] * d[54] - 2 * d[15] * std::pow(d[41], 2) * d[54] + 2 * d[11] * d[37] * d[42] * d[54] + 2 * d[10] * d[38] * d[42] * d[54] - 4 * d[14] * d[41] * d[42] * d[54] - 2 * d[12] * d[38] * d[43] * d[54] - 2 * d[11] * d[39] * d[43] * d[54] + 2 * d[14] * d[40] * d[43] * d[54] + 2 * d[13] * d[41] * d[43] * d[54] - 2 * d[13] * d[37] * d[44] * d[54] + 2 * d[14] * d[39] * d[44] * d[54] - 2 * d[10] * d[40] * d[44] * d[54] + 2 * d[12] * d[41] * d[44] * d[54] + 2 * d[16] * d[36] * d[38] * d[55] - 2 * d[15] * d[38] * d[39] * d[55] + 2 * d[17] * d[39] * d[40] * d[55] - 2 * d[16] * std::pow(d[40], 2) * d[55] - 2 * d[17] * d[36] * d[41] * d[55] + 2 * d[15] * d[40] * d[41] * d[55] - 2 * d[12] * d[38] * d[42] * d[55] - 2 * d[11] * d[39] * d[42] * d[55] + 2 * d[14] * d[40] * d[42] * d[55] + 2 * d[13] * d[41] * d[42] * d[55] + 2 * d[11] * d[36] * d[43] * d[55] + 2 * d[9] * d[38] * d[43] * d[55] - 4 * d[13] * d[40] * d[43] * d[55] - 2 * d[14] * d[36] * d[44] * d[55] + 2 * d[13] * d[39] * d[44] * d[55] + 2 * d[12] * d[40] * d[44] * d[55] - 2 * d[9] * d[41] * d[44] * d[55] + 2 * d[17] * d[36] * d[37] * d[56] - 2 * d[17] * std::pow(d[39], 2) * d[56] - 2 * d[15] * d[37] * d[40] * d[56] + 2 * d[16] * d[39] * d[40] * d[56] - 2 * d[16] * d[36] * d[41] * d[56] + 2 * d[15] * d[39] * d[41] * d[56] - 2 * d[13] * d[37] * d[42] * d[56] + 2 * d[14] * d[39] * d[42] * d[56] - 2 * d[10] * d[40] * d[42] * d[56] + 2 * d[12] * d[41] * d[42] * d[56] - 2 * d[14] * d[36] * d[43] * d[56] + 2 * d[13] * d[39] * d[43] * d[56] + 2 * d[12] * d[40] * d[43] * d[56] - 2 * d[9] * d[41] * d[43] * d[56] + 2 * d[10] * d[36] * d[44] * d[56] + 2 * d[9] * d[37] * d[44] * d[56] - 4 * d[12] * d[39] * d[44] * d[56] - d[11] * d[36] * d[37] * d[69] - d[10] * d[36] * d[38] * d[69] - d[9] * d[37] * d[38] * d[69] + 2 * d[12] * d[38] * d[39] * d[69] + d[11] * std::pow(d[39], 2) * d[69] + 2 * d[13] * d[37] * d[40] * d[69] - 2 * d[14] * d[39] * d[40] * d[69] + d[10] * std::pow(d[40], 2) * d[69] + 2 * d[14] * d[36] * d[41] * d[69] - 2 * d[13] * d[39] * d[41] * d[69] - 2 * d[12] * d[40] * d[41] * d[69] + d[9] * std::pow(d[41], 2) * d[69];
    coeffs[17] = 2 * d[24] * d[37] * d[38] * d[54] - 2 * d[25] * d[38] * d[39] * d[54] - 2 * d[26] * d[37] * d[40] * d[54] + 2 * d[26] * d[39] * d[41] * d[54] + 2 * d[25] * d[40] * d[41] * d[54] - 2 * d[24] * std::pow(d[41], 2) * d[54] + 2 * d[20] * d[37] * d[42] * d[54] + 2 * d[19] * d[38] * d[42] * d[54] - 4 * d[23] * d[41] * d[42] * d[54] - 2 * d[21] * d[38] * d[43] * d[54] - 2 * d[20] * d[39] * d[43] * d[54] + 2 * d[23] * d[40] * d[43] * d[54] + 2 * d[22] * d[41] * d[43] * d[54] - 2 * d[22] * d[37] * d[44] * d[54] + 2 * d[23] * d[39] * d[44] * d[54] - 2 * d[19] * d[40] * d[44] * d[54] + 2 * d[21] * d[41] * d[44] * d[54] + 2 * d[25] * d[36] * d[38] * d[55] - 2 * d[24] * d[38] * d[39] * d[55] + 2 * d[26] * d[39] * d[40] * d[55] - 2 * d[25] * std::pow(d[40], 2) * d[55] - 2 * d[26] * d[36] * d[41] * d[55] + 2 * d[24] * d[40] * d[41] * d[55] - 2 * d[21] * d[38] * d[42] * d[55] - 2 * d[20] * d[39] * d[42] * d[55] + 2 * d[23] * d[40] * d[42] * d[55] + 2 * d[22] * d[41] * d[42] * d[55] + 2 * d[20] * d[36] * d[43] * d[55] + 2 * d[18] * d[38] * d[43] * d[55] - 4 * d[22] * d[40] * d[43] * d[55] - 2 * d[23] * d[36] * d[44] * d[55] + 2 * d[22] * d[39] * d[44] * d[55] + 2 * d[21] * d[40] * d[44] * d[55] - 2 * d[18] * d[41] * d[44] * d[55] + 2 * d[26] * d[36] * d[37] * d[56] - 2 * d[26] * std::pow(d[39], 2) * d[56] - 2 * d[24] * d[37] * d[40] * d[56] + 2 * d[25] * d[39] * d[40] * d[56] - 2 * d[25] * d[36] * d[41] * d[56] + 2 * d[24] * d[39] * d[41] * d[56] - 2 * d[22] * d[37] * d[42] * d[56] + 2 * d[23] * d[39] * d[42] * d[56] - 2 * d[19] * d[40] * d[42] * d[56] + 2 * d[21] * d[41] * d[42] * d[56] - 2 * d[23] * d[36] * d[43] * d[56] + 2 * d[22] * d[39] * d[43] * d[56] + 2 * d[21] * d[40] * d[43] * d[56] - 2 * d[18] * d[41] * d[43] * d[56] + 2 * d[19] * d[36] * d[44] * d[56] + 2 * d[18] * d[37] * d[44] * d[56] - 4 * d[21] * d[39] * d[44] * d[56] - d[20] * d[36] * d[37] * d[69] - d[19] * d[36] * d[38] * d[69] - d[18] * d[37] * d[38] * d[69] + 2 * d[21] * d[38] * d[39] * d[69] + d[20] * std::pow(d[39], 2) * d[69] + 2 * d[22] * d[37] * d[40] * d[69] - 2 * d[23] * d[39] * d[40] * d[69] + d[19] * std::pow(d[40], 2) * d[69] + 2 * d[23] * d[36] * d[41] * d[69] - 2 * d[22] * d[39] * d[41] * d[69] - 2 * d[21] * d[40] * d[41] * d[69] + d[18] * std::pow(d[41], 2) * d[69];
    coeffs[18] = 2 * d[33] * d[37] * d[38] * d[54] - 2 * d[34] * d[38] * d[39] * d[54] - 2 * d[35] * d[37] * d[40] * d[54] + 2 * d[35] * d[39] * d[41] * d[54] + 2 * d[34] * d[40] * d[41] * d[54] - 2 * d[33] * std::pow(d[41], 2) * d[54] + 2 * d[29] * d[37] * d[42] * d[54] + 2 * d[28] * d[38] * d[42] * d[54] - 4 * d[32] * d[41] * d[42] * d[54] - 2 * d[30] * d[38] * d[43] * d[54] - 2 * d[29] * d[39] * d[43] * d[54] + 2 * d[32] * d[40] * d[43] * d[54] + 2 * d[31] * d[41] * d[43] * d[54] - 2 * d[31] * d[37] * d[44] * d[54] + 2 * d[32] * d[39] * d[44] * d[54] - 2 * d[28] * d[40] * d[44] * d[54] + 2 * d[30] * d[41] * d[44] * d[54] + 2 * d[34] * d[36] * d[38] * d[55] - 2 * d[33] * d[38] * d[39] * d[55] + 2 * d[35] * d[39] * d[40] * d[55] - 2 * d[34] * std::pow(d[40], 2) * d[55] - 2 * d[35] * d[36] * d[41] * d[55] + 2 * d[33] * d[40] * d[41] * d[55] - 2 * d[30] * d[38] * d[42] * d[55] - 2 * d[29] * d[39] * d[42] * d[55] + 2 * d[32] * d[40] * d[42] * d[55] + 2 * d[31] * d[41] * d[42] * d[55] + 2 * d[29] * d[36] * d[43] * d[55] + 2 * d[27] * d[38] * d[43] * d[55] - 4 * d[31] * d[40] * d[43] * d[55] - 2 * d[32] * d[36] * d[44] * d[55] + 2 * d[31] * d[39] * d[44] * d[55] + 2 * d[30] * d[40] * d[44] * d[55] - 2 * d[27] * d[41] * d[44] * d[55] + 2 * d[35] * d[36] * d[37] * d[56] - 2 * d[35] * std::pow(d[39], 2) * d[56] - 2 * d[33] * d[37] * d[40] * d[56] + 2 * d[34] * d[39] * d[40] * d[56] - 2 * d[34] * d[36] * d[41] * d[56] + 2 * d[33] * d[39] * d[41] * d[56] - 2 * d[31] * d[37] * d[42] * d[56] + 2 * d[32] * d[39] * d[42] * d[56] - 2 * d[28] * d[40] * d[42] * d[56] + 2 * d[30] * d[41] * d[42] * d[56] - 2 * d[32] * d[36] * d[43] * d[56] + 2 * d[31] * d[39] * d[43] * d[56] + 2 * d[30] * d[40] * d[43] * d[56] - 2 * d[27] * d[41] * d[43] * d[56] + 2 * d[28] * d[36] * d[44] * d[56] + 2 * d[27] * d[37] * d[44] * d[56] - 4 * d[30] * d[39] * d[44] * d[56] - d[29] * d[36] * d[37] * d[69] - d[28] * d[36] * d[38] * d[69] - d[27] * d[37] * d[38] * d[69] + 2 * d[30] * d[38] * d[39] * d[69] + d[29] * std::pow(d[39], 2) * d[69] + 2 * d[31] * d[37] * d[40] * d[69] - 2 * d[32] * d[39] * d[40] * d[69] + d[28] * std::pow(d[40], 2) * d[69] + 2 * d[32] * d[36] * d[41] * d[69] - 2 * d[31] * d[39] * d[41] * d[69] - 2 * d[30] * d[40] * d[41] * d[69] + d[27] * std::pow(d[41], 2) * d[69];
    coeffs[19] = 2 * d[37] * d[38] * d[42] * d[54] - 2 * std::pow(d[41], 2) * d[42] * d[54] - 2 * d[38] * d[39] * d[43] * d[54] + 2 * d[40] * d[41] * d[43] * d[54] - 2 * d[37] * d[40] * d[44] * d[54] + 2 * d[39] * d[41] * d[44] * d[54] - 2 * d[38] * d[39] * d[42] * d[55] + 2 * d[40] * d[41] * d[42] * d[55] + 2 * d[36] * d[38] * d[43] * d[55] - 2 * std::pow(d[40], 2) * d[43] * d[55] + 2 * d[39] * d[40] * d[44] * d[55] - 2 * d[36] * d[41] * d[44] * d[55] - 2 * d[37] * d[40] * d[42] * d[56] + 2 * d[39] * d[41] * d[42] * d[56] + 2 * d[39] * d[40] * d[43] * d[56] - 2 * d[36] * d[41] * d[43] * d[56] + 2 * d[36] * d[37] * d[44] * d[56] - 2 * std::pow(d[39], 2) * d[44] * d[56] - d[36] * d[37] * d[38] * d[69] + d[38] * std::pow(d[39], 2) * d[69] + d[37] * std::pow(d[40], 2) * d[69] - 2 * d[39] * d[40] * d[41] * d[69] + d[36] * std::pow(d[41], 2) * d[69];
    coeffs[20] = 2 * d[11] * d[15] * d[46] * d[54] - 2 * d[13] * d[17] * d[46] * d[54] + 2 * d[10] * d[15] * d[47] * d[54] - 2 * d[12] * d[16] * d[47] * d[54] - 2 * d[11] * d[16] * d[48] * d[54] + 2 * d[14] * d[17] * d[48] * d[54] + 2 * d[14] * d[16] * d[49] * d[54] - 2 * d[10] * d[17] * d[49] * d[54] - 4 * d[14] * d[15] * d[50] * d[54] + 2 * d[13] * d[16] * d[50] * d[54] + 2 * d[12] * d[17] * d[50] * d[54] + 2 * d[10] * d[11] * d[51] * d[54] - 2 * std::pow(d[14], 2) * d[51] * d[54] - 2 * d[11] * d[12] * d[52] * d[54] + 2 * d[13] * d[14] * d[52] * d[54] - 2 * d[10] * d[13] * d[53] * d[54] + 2 * d[12] * d[14] * d[53] * d[54] + 2 * d[11] * d[16] * d[45] * d[55] - 2 * d[14] * d[17] * d[45] * d[55] - 2 * d[12] * d[15] * d[47] * d[55] + 2 * d[9] * d[16] * d[47] * d[55] - 2 * d[11] * d[15] * d[48] * d[55] + 2 * d[13] * d[17] * d[48] * d[55] + 2 * d[14] * d[15] * d[49] * d[55] - 4 * d[13] * d[16] * d[49] * d[55] + 2 * d[12] * d[17] * d[49] * d[55] + 2 * d[13] * d[15] * d[50] * d[55] - 2 * d[9] * d[17] * d[50] * d[55] - 2 * d[11] * d[12] * d[51] * d[55] + 2 * d[13] * d[14] * d[51] * d[55] + 2 * d[9] * d[11] * d[52] * d[55] - 2 * std::pow(d[13], 2) * d[52] * d[55] + 2 * d[12] * d[13] * d[53] * d[55] - 2 * d[9] * d[14] * d[53] * d[55] - 2 * d[14] * d[16] * d[45] * d[56] + 2 * d[10] * d[17] * d[45] * d[56] - 2 * d[13] * d[15] * d[46] * d[56] + 2 * d[9] * d[17] * d[46] * d[56] + 2 * d[14] * d[15] * d[48] * d[56] + 2 * d[13] * d[16] * d[48] * d[56] - 4 * d[12] * d[17] * d[48] * d[56] - 2 * d[10] * d[15] * d[49] * d[56] + 2 * d[12] * d[16] * d[49] * d[56] + 2 * d[12] * d[15] * d[50] * d[56] - 2 * d[9] * d[16] * d[50] * d[56] - 2 * d[10] * d[13] * d[51] * d[56] + 2 * d[12] * d[14] * d[51] * d[56] + 2 * d[12] * d[13] * d[52] * d[56] - 2 * d[9] * d[14] * d[52] * d[56] + 2 * d[9] * d[10] * d[53] * d[56] - 2 * std::pow(d[12], 2) * d[53] * d[56] - d[10] * d[11] * d[45] * d[69] + std::pow(d[14], 2) * d[45] * d[69] - d[9] * d[11] * d[46] * d[69] + std::pow(d[13], 2) * d[46] * d[69] - d[9] * d[10] * d[47] * d[69] + std::pow(d[12], 2) * d[47] * d[69] + 2 * d[11] * d[12] * d[48] * d[69] - 2 * d[13] * d[14] * d[48] * d[69] + 2 * d[10] * d[13] * d[49] * d[69] - 2 * d[12] * d[14] * d[49] * d[69] - 2 * d[12] * d[13] * d[50] * d[69] + 2 * d[9] * d[14] * d[50] * d[69];
    coeffs[21] = 2 * d[15] * d[20] * d[46] * d[54] - 2 * d[17] * d[22] * d[46] * d[54] + 2 * d[11] * d[24] * d[46] * d[54] - 2 * d[13] * d[26] * d[46] * d[54] + 2 * d[15] * d[19] * d[47] * d[54] - 2 * d[16] * d[21] * d[47] * d[54] + 2 * d[10] * d[24] * d[47] * d[54] - 2 * d[12] * d[25] * d[47] * d[54] - 2 * d[16] * d[20] * d[48] * d[54] + 2 * d[17] * d[23] * d[48] * d[54] - 2 * d[11] * d[25] * d[48] * d[54] + 2 * d[14] * d[26] * d[48] * d[54] - 2 * d[17] * d[19] * d[49] * d[54] + 2 * d[16] * d[23] * d[49] * d[54] + 2 * d[14] * d[25] * d[49] * d[54] - 2 * d[10] * d[26] * d[49] * d[54] + 2 * d[17] * d[21] * d[50] * d[54] + 2 * d[16] * d[22] * d[50] * d[54] - 4 * d[15] * d[23] * d[50] * d[54] - 4 * d[14] * d[24] * d[50] * d[54] + 2 * d[13] * d[25] * d[50] * d[54] + 2 * d[12] * d[26] * d[50] * d[54] + 2 * d[11] * d[19] * d[51] * d[54] + 2 * d[10] * d[20] * d[51] * d[54] - 4 * d[14] * d[23] * d[51] * d[54] - 2 * d[12] * d[20] * d[52] * d[54] - 2 * d[11] * d[21] * d[52] * d[54] + 2 * d[14] * d[22] * d[52] * d[54] + 2 * d[13] * d[23] * d[52] * d[54] - 2 * d[13] * d[19] * d[53] * d[54] + 2 * d[14] * d[21] * d[53] * d[54] - 2 * d[10] * d[22] * d[53] * d[54] + 2 * d[12] * d[23] * d[53] * d[54] + 2 * d[16] * d[20] * d[45] * d[55] - 2 * d[17] * d[23] * d[45] * d[55] + 2 * d[11] * d[25] * d[45] * d[55] - 2 * d[14] * d[26] * d[45] * d[55] + 2 * d[16] * d[18] * d[47] * d[55] - 2 * d[15] * d[21] * d[47] * d[55] - 2 * d[12] * d[24] * d[47] * d[55] + 2 * d[9] * d[25] * d[47] * d[55] - 2 * d[15] * d[20] * d[48] * d[55] + 2 * d[17] * d[22] * d[48] * d[55] - 2 * d[11] * d[24] * d[48] * d[55] + 2 * d[13] * d[26] * d[48] * d[55] + 2 * d[17] * d[21] * d[49] * d[55] - 4 * d[16] * d[22] * d[49] * d[55] + 2 * d[15] * d[23] * d[49] * d[55] + 2 * d[14] * d[24] * d[49] * d[55] - 4 * d[13] * d[25] * d[49] * d[55] + 2 * d[12] * d[26] * d[49] * d[55] - 2 * d[17] * d[18] * d[50] * d[55] + 2 * d[15] * d[22] * d[50] * d[55] + 2 * d[13] * d[24] * d[50] * d[55] - 2 * d[9] * d[26] * d[50] * d[55] - 2 * d[12] * d[20] * d[51] * d[55] - 2 * d[11] * d[21] * d[51] * d[55] + 2 * d[14] * d[22] * d[51] * d[55] + 2 * d[13] * d[23] * d[51] * d[55] + 2 * d[11] * d[18] * d[52] * d[55] + 2 * d[9] * d[20] * d[52] * d[55] - 4 * d[13] * d[22] * d[52] * d[55] - 2 * d[14] * d[18] * d[53] * d[55] + 2 * d[13] * d[21] * d[53] * d[55] + 2 * d[12] * d[22] * d[53] * d[55] - 2 * d[9] * d[23] * d[53] * d[55] + 2 * d[17] * d[19] * d[45] * d[56] - 2 * d[16] * d[23] * d[45] * d[56] - 2 * d[14] * d[25] * d[45] * d[56] + 2 * d[10] * d[26] * d[45] * d[56] + 2 * d[17] * d[18] * d[46] * d[56] - 2 * d[15] * d[22] * d[46] * d[56] - 2 * d[13] * d[24] * d[46] * d[56] + 2 * d[9] * d[26] * d[46] * d[56] - 4 * d[17] * d[21] * d[48] * d[56] + 2 * d[16] * d[22] * d[48] * d[56] + 2 * d[15] * d[23] * d[48] * d[56] + 2 * d[14] * d[24] * d[48] * d[56] + 2 * d[13] * d[25] * d[48] * d[56] - 4 * d[12] * d[26] * d[48] * d[56] - 2 * d[15] * d[19] * d[49] * d[56] + 2 * d[16] * d[21] * d[49] * d[56] - 2 * d[10] * d[24] * d[49] * d[56] + 2 * d[12] * d[25] * d[49] * d[56] - 2 * d[16] * d[18] * d[50] * d[56] + 2 * d[15] * d[21] * d[50] * d[56] + 2 * d[12] * d[24] * d[50] * d[56] - 2 * d[9] * d[25] * d[50] * d[56] - 2 * d[13] * d[19] * d[51] * d[56] + 2 * d[14] * d[21] * d[51] * d[56] - 2 * d[10] * d[22] * d[51] * d[56] + 2 * d[12] * d[23] * d[51] * d[56] - 2 * d[14] * d[18] * d[52] * d[56] + 2 * d[13] * d[21] * d[52] * d[56] + 2 * d[12] * d[22] * d[52] * d[56] - 2 * d[9] * d[23] * d[52] * d[56] + 2 * d[10] * d[18] * d[53] * d[56] + 2 * d[9] * d[19] * d[53] * d[56] - 4 * d[12] * d[21] * d[53] * d[56] - d[11] * d[19] * d[45] * d[69] - d[10] * d[20] * d[45] * d[69] + 2 * d[14] * d[23] * d[45] * d[69] - d[11] * d[18] * d[46] * d[69] - d[9] * d[20] * d[46] * d[69] + 2 * d[13] * d[22] * d[46] * d[69] - d[10] * d[18] * d[47] * d[69] - d[9] * d[19] * d[47] * d[69] + 2 * d[12] * d[21] * d[47] * d[69] + 2 * d[12] * d[20] * d[48] * d[69] + 2 * d[11] * d[21] * d[48] * d[69] - 2 * d[14] * d[22] * d[48] * d[69] - 2 * d[13] * d[23] * d[48] * d[69] + 2 * d[13] * d[19] * d[49] * d[69] - 2 * d[14] * d[21] * d[49] * d[69] + 2 * d[10] * d[22] * d[49] * d[69] - 2 * d[12] * d[23] * d[49] * d[69] + 2 * d[14] * d[18] * d[50] * d[69] - 2 * d[13] * d[21] * d[50] * d[69] - 2 * d[12] * d[22] * d[50] * d[69] + 2 * d[9] * d[23] * d[50] * d[69];
    coeffs[22] = 2 * d[20] * d[24] * d[46] * d[54] - 2 * d[22] * d[26] * d[46] * d[54] + 2 * d[19] * d[24] * d[47] * d[54] - 2 * d[21] * d[25] * d[47] * d[54] - 2 * d[20] * d[25] * d[48] * d[54] + 2 * d[23] * d[26] * d[48] * d[54] + 2 * d[23] * d[25] * d[49] * d[54] - 2 * d[19] * d[26] * d[49] * d[54] - 4 * d[23] * d[24] * d[50] * d[54] + 2 * d[22] * d[25] * d[50] * d[54] + 2 * d[21] * d[26] * d[50] * d[54] + 2 * d[19] * d[20] * d[51] * d[54] - 2 * std::pow(d[23], 2) * d[51] * d[54] - 2 * d[20] * d[21] * d[52] * d[54] + 2 * d[22] * d[23] * d[52] * d[54] - 2 * d[19] * d[22] * d[53] * d[54] + 2 * d[21] * d[23] * d[53] * d[54] + 2 * d[20] * d[25] * d[45] * d[55] - 2 * d[23] * d[26] * d[45] * d[55] - 2 * d[21] * d[24] * d[47] * d[55] + 2 * d[18] * d[25] * d[47] * d[55] - 2 * d[20] * d[24] * d[48] * d[55] + 2 * d[22] * d[26] * d[48] * d[55] + 2 * d[23] * d[24] * d[49] * d[55] - 4 * d[22] * d[25] * d[49] * d[55] + 2 * d[21] * d[26] * d[49] * d[55] + 2 * d[22] * d[24] * d[50] * d[55] - 2 * d[18] * d[26] * d[50] * d[55] - 2 * d[20] * d[21] * d[51] * d[55] + 2 * d[22] * d[23] * d[51] * d[55] + 2 * d[18] * d[20] * d[52] * d[55] - 2 * std::pow(d[22], 2) * d[52] * d[55] + 2 * d[21] * d[22] * d[53] * d[55] - 2 * d[18] * d[23] * d[53] * d[55] - 2 * d[23] * d[25] * d[45] * d[56] + 2 * d[19] * d[26] * d[45] * d[56] - 2 * d[22] * d[24] * d[46] * d[56] + 2 * d[18] * d[26] * d[46] * d[56] + 2 * d[23] * d[24] * d[48] * d[56] + 2 * d[22] * d[25] * d[48] * d[56] - 4 * d[21] * d[26] * d[48] * d[56] - 2 * d[19] * d[24] * d[49] * d[56] + 2 * d[21] * d[25] * d[49] * d[56] + 2 * d[21] * d[24] * d[50] * d[56] - 2 * d[18] * d[25] * d[50] * d[56] - 2 * d[19] * d[22] * d[51] * d[56] + 2 * d[21] * d[23] * d[51] * d[56] + 2 * d[21] * d[22] * d[52] * d[56] - 2 * d[18] * d[23] * d[52] * d[56] + 2 * d[18] * d[19] * d[53] * d[56] - 2 * std::pow(d[21], 2) * d[53] * d[56] - d[19] * d[20] * d[45] * d[69] + std::pow(d[23], 2) * d[45] * d[69] - d[18] * d[20] * d[46] * d[69] + std::pow(d[22], 2) * d[46] * d[69] - d[18] * d[19] * d[47] * d[69] + std::pow(d[21], 2) * d[47] * d[69] + 2 * d[20] * d[21] * d[48] * d[69] - 2 * d[22] * d[23] * d[48] * d[69] + 2 * d[19] * d[22] * d[49] * d[69] - 2 * d[21] * d[23] * d[49] * d[69] - 2 * d[21] * d[22] * d[50] * d[69] + 2 * d[18] * d[23] * d[50] * d[69];
    coeffs[23] = 2 * d[15] * d[29] * d[46] * d[54] - 2 * d[17] * d[31] * d[46] * d[54] + 2 * d[11] * d[33] * d[46] * d[54] - 2 * d[13] * d[35] * d[46] * d[54] + 2 * d[15] * d[28] * d[47] * d[54] - 2 * d[16] * d[30] * d[47] * d[54] + 2 * d[10] * d[33] * d[47] * d[54] - 2 * d[12] * d[34] * d[47] * d[54] - 2 * d[16] * d[29] * d[48] * d[54] + 2 * d[17] * d[32] * d[48] * d[54] - 2 * d[11] * d[34] * d[48] * d[54] + 2 * d[14] * d[35] * d[48] * d[54] - 2 * d[17] * d[28] * d[49] * d[54] + 2 * d[16] * d[32] * d[49] * d[54] + 2 * d[14] * d[34] * d[49] * d[54] - 2 * d[10] * d[35] * d[49] * d[54] + 2 * d[17] * d[30] * d[50] * d[54] + 2 * d[16] * d[31] * d[50] * d[54] - 4 * d[15] * d[32] * d[50] * d[54] - 4 * d[14] * d[33] * d[50] * d[54] + 2 * d[13] * d[34] * d[50] * d[54] + 2 * d[12] * d[35] * d[50] * d[54] + 2 * d[11] * d[28] * d[51] * d[54] + 2 * d[10] * d[29] * d[51] * d[54] - 4 * d[14] * d[32] * d[51] * d[54] - 2 * d[12] * d[29] * d[52] * d[54] - 2 * d[11] * d[30] * d[52] * d[54] + 2 * d[14] * d[31] * d[52] * d[54] + 2 * d[13] * d[32] * d[52] * d[54] - 2 * d[13] * d[28] * d[53] * d[54] + 2 * d[14] * d[30] * d[53] * d[54] - 2 * d[10] * d[31] * d[53] * d[54] + 2 * d[12] * d[32] * d[53] * d[54] + 2 * d[16] * d[29] * d[45] * d[55] - 2 * d[17] * d[32] * d[45] * d[55] + 2 * d[11] * d[34] * d[45] * d[55] - 2 * d[14] * d[35] * d[45] * d[55] + 2 * d[16] * d[27] * d[47] * d[55] - 2 * d[15] * d[30] * d[47] * d[55] - 2 * d[12] * d[33] * d[47] * d[55] + 2 * d[9] * d[34] * d[47] * d[55] - 2 * d[15] * d[29] * d[48] * d[55] + 2 * d[17] * d[31] * d[48] * d[55] - 2 * d[11] * d[33] * d[48] * d[55] + 2 * d[13] * d[35] * d[48] * d[55] + 2 * d[17] * d[30] * d[49] * d[55] - 4 * d[16] * d[31] * d[49] * d[55] + 2 * d[15] * d[32] * d[49] * d[55] + 2 * d[14] * d[33] * d[49] * d[55] - 4 * d[13] * d[34] * d[49] * d[55] + 2 * d[12] * d[35] * d[49] * d[55] - 2 * d[17] * d[27] * d[50] * d[55] + 2 * d[15] * d[31] * d[50] * d[55] + 2 * d[13] * d[33] * d[50] * d[55] - 2 * d[9] * d[35] * d[50] * d[55] - 2 * d[12] * d[29] * d[51] * d[55] - 2 * d[11] * d[30] * d[51] * d[55] + 2 * d[14] * d[31] * d[51] * d[55] + 2 * d[13] * d[32] * d[51] * d[55] + 2 * d[11] * d[27] * d[52] * d[55] + 2 * d[9] * d[29] * d[52] * d[55] - 4 * d[13] * d[31] * d[52] * d[55] - 2 * d[14] * d[27] * d[53] * d[55] + 2 * d[13] * d[30] * d[53] * d[55] + 2 * d[12] * d[31] * d[53] * d[55] - 2 * d[9] * d[32] * d[53] * d[55] + 2 * d[17] * d[28] * d[45] * d[56] - 2 * d[16] * d[32] * d[45] * d[56] - 2 * d[14] * d[34] * d[45] * d[56] + 2 * d[10] * d[35] * d[45] * d[56] + 2 * d[17] * d[27] * d[46] * d[56] - 2 * d[15] * d[31] * d[46] * d[56] - 2 * d[13] * d[33] * d[46] * d[56] + 2 * d[9] * d[35] * d[46] * d[56] - 4 * d[17] * d[30] * d[48] * d[56] + 2 * d[16] * d[31] * d[48] * d[56] + 2 * d[15] * d[32] * d[48] * d[56] + 2 * d[14] * d[33] * d[48] * d[56] + 2 * d[13] * d[34] * d[48] * d[56] - 4 * d[12] * d[35] * d[48] * d[56] - 2 * d[15] * d[28] * d[49] * d[56] + 2 * d[16] * d[30] * d[49] * d[56] - 2 * d[10] * d[33] * d[49] * d[56] + 2 * d[12] * d[34] * d[49] * d[56] - 2 * d[16] * d[27] * d[50] * d[56] + 2 * d[15] * d[30] * d[50] * d[56] + 2 * d[12] * d[33] * d[50] * d[56] - 2 * d[9] * d[34] * d[50] * d[56] - 2 * d[13] * d[28] * d[51] * d[56] + 2 * d[14] * d[30] * d[51] * d[56] - 2 * d[10] * d[31] * d[51] * d[56] + 2 * d[12] * d[32] * d[51] * d[56] - 2 * d[14] * d[27] * d[52] * d[56] + 2 * d[13] * d[30] * d[52] * d[56] + 2 * d[12] * d[31] * d[52] * d[56] - 2 * d[9] * d[32] * d[52] * d[56] + 2 * d[10] * d[27] * d[53] * d[56] + 2 * d[9] * d[28] * d[53] * d[56] - 4 * d[12] * d[30] * d[53] * d[56] - d[11] * d[28] * d[45] * d[69] - d[10] * d[29] * d[45] * d[69] + 2 * d[14] * d[32] * d[45] * d[69] - d[11] * d[27] * d[46] * d[69] - d[9] * d[29] * d[46] * d[69] + 2 * d[13] * d[31] * d[46] * d[69] - d[10] * d[27] * d[47] * d[69] - d[9] * d[28] * d[47] * d[69] + 2 * d[12] * d[30] * d[47] * d[69] + 2 * d[12] * d[29] * d[48] * d[69] + 2 * d[11] * d[30] * d[48] * d[69] - 2 * d[14] * d[31] * d[48] * d[69] - 2 * d[13] * d[32] * d[48] * d[69] + 2 * d[13] * d[28] * d[49] * d[69] - 2 * d[14] * d[30] * d[49] * d[69] + 2 * d[10] * d[31] * d[49] * d[69] - 2 * d[12] * d[32] * d[49] * d[69] + 2 * d[14] * d[27] * d[50] * d[69] - 2 * d[13] * d[30] * d[50] * d[69] - 2 * d[12] * d[31] * d[50] * d[69] + 2 * d[9] * d[32] * d[50] * d[69];
    coeffs[24] = 2 * d[24] * d[29] * d[46] * d[54] - 2 * d[26] * d[31] * d[46] * d[54] + 2 * d[20] * d[33] * d[46] * d[54] - 2 * d[22] * d[35] * d[46] * d[54] + 2 * d[24] * d[28] * d[47] * d[54] - 2 * d[25] * d[30] * d[47] * d[54] + 2 * d[19] * d[33] * d[47] * d[54] - 2 * d[21] * d[34] * d[47] * d[54] - 2 * d[25] * d[29] * d[48] * d[54] + 2 * d[26] * d[32] * d[48] * d[54] - 2 * d[20] * d[34] * d[48] * d[54] + 2 * d[23] * d[35] * d[48] * d[54] - 2 * d[26] * d[28] * d[49] * d[54] + 2 * d[25] * d[32] * d[49] * d[54] + 2 * d[23] * d[34] * d[49] * d[54] - 2 * d[19] * d[35] * d[49] * d[54] + 2 * d[26] * d[30] * d[50] * d[54] + 2 * d[25] * d[31] * d[50] * d[54] - 4 * d[24] * d[32] * d[50] * d[54] - 4 * d[23] * d[33] * d[50] * d[54] + 2 * d[22] * d[34] * d[50] * d[54] + 2 * d[21] * d[35] * d[50] * d[54] + 2 * d[20] * d[28] * d[51] * d[54] + 2 * d[19] * d[29] * d[51] * d[54] - 4 * d[23] * d[32] * d[51] * d[54] - 2 * d[21] * d[29] * d[52] * d[54] - 2 * d[20] * d[30] * d[52] * d[54] + 2 * d[23] * d[31] * d[52] * d[54] + 2 * d[22] * d[32] * d[52] * d[54] - 2 * d[22] * d[28] * d[53] * d[54] + 2 * d[23] * d[30] * d[53] * d[54] - 2 * d[19] * d[31] * d[53] * d[54] + 2 * d[21] * d[32] * d[53] * d[54] + 2 * d[25] * d[29] * d[45] * d[55] - 2 * d[26] * d[32] * d[45] * d[55] + 2 * d[20] * d[34] * d[45] * d[55] - 2 * d[23] * d[35] * d[45] * d[55] + 2 * d[25] * d[27] * d[47] * d[55] - 2 * d[24] * d[30] * d[47] * d[55] - 2 * d[21] * d[33] * d[47] * d[55] + 2 * d[18] * d[34] * d[47] * d[55] - 2 * d[24] * d[29] * d[48] * d[55] + 2 * d[26] * d[31] * d[48] * d[55] - 2 * d[20] * d[33] * d[48] * d[55] + 2 * d[22] * d[35] * d[48] * d[55] + 2 * d[26] * d[30] * d[49] * d[55] - 4 * d[25] * d[31] * d[49] * d[55] + 2 * d[24] * d[32] * d[49] * d[55] + 2 * d[23] * d[33] * d[49] * d[55] - 4 * d[22] * d[34] * d[49] * d[55] + 2 * d[21] * d[35] * d[49] * d[55] - 2 * d[26] * d[27] * d[50] * d[55] + 2 * d[24] * d[31] * d[50] * d[55] + 2 * d[22] * d[33] * d[50] * d[55] - 2 * d[18] * d[35] * d[50] * d[55] - 2 * d[21] * d[29] * d[51] * d[55] - 2 * d[20] * d[30] * d[51] * d[55] + 2 * d[23] * d[31] * d[51] * d[55] + 2 * d[22] * d[32] * d[51] * d[55] + 2 * d[20] * d[27] * d[52] * d[55] + 2 * d[18] * d[29] * d[52] * d[55] - 4 * d[22] * d[31] * d[52] * d[55] - 2 * d[23] * d[27] * d[53] * d[55] + 2 * d[22] * d[30] * d[53] * d[55] + 2 * d[21] * d[31] * d[53] * d[55] - 2 * d[18] * d[32] * d[53] * d[55] + 2 * d[26] * d[28] * d[45] * d[56] - 2 * d[25] * d[32] * d[45] * d[56] - 2 * d[23] * d[34] * d[45] * d[56] + 2 * d[19] * d[35] * d[45] * d[56] + 2 * d[26] * d[27] * d[46] * d[56] - 2 * d[24] * d[31] * d[46] * d[56] - 2 * d[22] * d[33] * d[46] * d[56] + 2 * d[18] * d[35] * d[46] * d[56] - 4 * d[26] * d[30] * d[48] * d[56] + 2 * d[25] * d[31] * d[48] * d[56] + 2 * d[24] * d[32] * d[48] * d[56] + 2 * d[23] * d[33] * d[48] * d[56] + 2 * d[22] * d[34] * d[48] * d[56] - 4 * d[21] * d[35] * d[48] * d[56] - 2 * d[24] * d[28] * d[49] * d[56] + 2 * d[25] * d[30] * d[49] * d[56] - 2 * d[19] * d[33] * d[49] * d[56] + 2 * d[21] * d[34] * d[49] * d[56] - 2 * d[25] * d[27] * d[50] * d[56] + 2 * d[24] * d[30] * d[50] * d[56] + 2 * d[21] * d[33] * d[50] * d[56] - 2 * d[18] * d[34] * d[50] * d[56] - 2 * d[22] * d[28] * d[51] * d[56] + 2 * d[23] * d[30] * d[51] * d[56] - 2 * d[19] * d[31] * d[51] * d[56] + 2 * d[21] * d[32] * d[51] * d[56] - 2 * d[23] * d[27] * d[52] * d[56] + 2 * d[22] * d[30] * d[52] * d[56] + 2 * d[21] * d[31] * d[52] * d[56] - 2 * d[18] * d[32] * d[52] * d[56] + 2 * d[19] * d[27] * d[53] * d[56] + 2 * d[18] * d[28] * d[53] * d[56] - 4 * d[21] * d[30] * d[53] * d[56] - d[20] * d[28] * d[45] * d[69] - d[19] * d[29] * d[45] * d[69] + 2 * d[23] * d[32] * d[45] * d[69] - d[20] * d[27] * d[46] * d[69] - d[18] * d[29] * d[46] * d[69] + 2 * d[22] * d[31] * d[46] * d[69] - d[19] * d[27] * d[47] * d[69] - d[18] * d[28] * d[47] * d[69] + 2 * d[21] * d[30] * d[47] * d[69] + 2 * d[21] * d[29] * d[48] * d[69] + 2 * d[20] * d[30] * d[48] * d[69] - 2 * d[23] * d[31] * d[48] * d[69] - 2 * d[22] * d[32] * d[48] * d[69] + 2 * d[22] * d[28] * d[49] * d[69] - 2 * d[23] * d[30] * d[49] * d[69] + 2 * d[19] * d[31] * d[49] * d[69] - 2 * d[21] * d[32] * d[49] * d[69] + 2 * d[23] * d[27] * d[50] * d[69] - 2 * d[22] * d[30] * d[50] * d[69] - 2 * d[21] * d[31] * d[50] * d[69] + 2 * d[18] * d[32] * d[50] * d[69];
    coeffs[25] = 2 * d[29] * d[33] * d[46] * d[54] - 2 * d[31] * d[35] * d[46] * d[54] + 2 * d[28] * d[33] * d[47] * d[54] - 2 * d[30] * d[34] * d[47] * d[54] - 2 * d[29] * d[34] * d[48] * d[54] + 2 * d[32] * d[35] * d[48] * d[54] + 2 * d[32] * d[34] * d[49] * d[54] - 2 * d[28] * d[35] * d[49] * d[54] - 4 * d[32] * d[33] * d[50] * d[54] + 2 * d[31] * d[34] * d[50] * d[54] + 2 * d[30] * d[35] * d[50] * d[54] + 2 * d[28] * d[29] * d[51] * d[54] - 2 * std::pow(d[32], 2) * d[51] * d[54] - 2 * d[29] * d[30] * d[52] * d[54] + 2 * d[31] * d[32] * d[52] * d[54] - 2 * d[28] * d[31] * d[53] * d[54] + 2 * d[30] * d[32] * d[53] * d[54] + 2 * d[29] * d[34] * d[45] * d[55] - 2 * d[32] * d[35] * d[45] * d[55] - 2 * d[30] * d[33] * d[47] * d[55] + 2 * d[27] * d[34] * d[47] * d[55] - 2 * d[29] * d[33] * d[48] * d[55] + 2 * d[31] * d[35] * d[48] * d[55] + 2 * d[32] * d[33] * d[49] * d[55] - 4 * d[31] * d[34] * d[49] * d[55] + 2 * d[30] * d[35] * d[49] * d[55] + 2 * d[31] * d[33] * d[50] * d[55] - 2 * d[27] * d[35] * d[50] * d[55] - 2 * d[29] * d[30] * d[51] * d[55] + 2 * d[31] * d[32] * d[51] * d[55] + 2 * d[27] * d[29] * d[52] * d[55] - 2 * std::pow(d[31], 2) * d[52] * d[55] + 2 * d[30] * d[31] * d[53] * d[55] - 2 * d[27] * d[32] * d[53] * d[55] - 2 * d[32] * d[34] * d[45] * d[56] + 2 * d[28] * d[35] * d[45] * d[56] - 2 * d[31] * d[33] * d[46] * d[56] + 2 * d[27] * d[35] * d[46] * d[56] + 2 * d[32] * d[33] * d[48] * d[56] + 2 * d[31] * d[34] * d[48] * d[56] - 4 * d[30] * d[35] * d[48] * d[56] - 2 * d[28] * d[33] * d[49] * d[56] + 2 * d[30] * d[34] * d[49] * d[56] + 2 * d[30] * d[33] * d[50] * d[56] - 2 * d[27] * d[34] * d[50] * d[56] - 2 * d[28] * d[31] * d[51] * d[56] + 2 * d[30] * d[32] * d[51] * d[56] + 2 * d[30] * d[31] * d[52] * d[56] - 2 * d[27] * d[32] * d[52] * d[56] + 2 * d[27] * d[28] * d[53] * d[56] - 2 * std::pow(d[30], 2) * d[53] * d[56] - d[28] * d[29] * d[45] * d[69] + std::pow(d[32], 2) * d[45] * d[69] - d[27] * d[29] * d[46] * d[69] + std::pow(d[31], 2) * d[46] * d[69] - d[27] * d[28] * d[47] * d[69] + std::pow(d[30], 2) * d[47] * d[69] + 2 * d[29] * d[30] * d[48] * d[69] - 2 * d[31] * d[32] * d[48] * d[69] + 2 * d[28] * d[31] * d[49] * d[69] - 2 * d[30] * d[32] * d[49] * d[69] - 2 * d[30] * d[31] * d[50] * d[69] + 2 * d[27] * d[32] * d[50] * d[69];
    coeffs[26] = 2 * d[15] * d[38] * d[46] * d[54] - 2 * d[17] * d[40] * d[46] * d[54] + 2 * d[11] * d[42] * d[46] * d[54] - 2 * d[13] * d[44] * d[46] * d[54] + 2 * d[15] * d[37] * d[47] * d[54] - 2 * d[16] * d[39] * d[47] * d[54] + 2 * d[10] * d[42] * d[47] * d[54] - 2 * d[12] * d[43] * d[47] * d[54] - 2 * d[16] * d[38] * d[48] * d[54] + 2 * d[17] * d[41] * d[48] * d[54] - 2 * d[11] * d[43] * d[48] * d[54] + 2 * d[14] * d[44] * d[48] * d[54] - 2 * d[17] * d[37] * d[49] * d[54] + 2 * d[16] * d[41] * d[49] * d[54] + 2 * d[14] * d[43] * d[49] * d[54] - 2 * d[10] * d[44] * d[49] * d[54] + 2 * d[17] * d[39] * d[50] * d[54] + 2 * d[16] * d[40] * d[50] * d[54] - 4 * d[15] * d[41] * d[50] * d[54] - 4 * d[14] * d[42] * d[50] * d[54] + 2 * d[13] * d[43] * d[50] * d[54] + 2 * d[12] * d[44] * d[50] * d[54] + 2 * d[11] * d[37] * d[51] * d[54] + 2 * d[10] * d[38] * d[51] * d[54] - 4 * d[14] * d[41] * d[51] * d[54] - 2 * d[12] * d[38] * d[52] * d[54] - 2 * d[11] * d[39] * d[52] * d[54] + 2 * d[14] * d[40] * d[52] * d[54] + 2 * d[13] * d[41] * d[52] * d[54] - 2 * d[13] * d[37] * d[53] * d[54] + 2 * d[14] * d[39] * d[53] * d[54] - 2 * d[10] * d[40] * d[53] * d[54] + 2 * d[12] * d[41] * d[53] * d[54] + 2 * d[16] * d[38] * d[45] * d[55] - 2 * d[17] * d[41] * d[45] * d[55] + 2 * d[11] * d[43] * d[45] * d[55] - 2 * d[14] * d[44] * d[45] * d[55] + 2 * d[16] * d[36] * d[47] * d[55] - 2 * d[15] * d[39] * d[47] * d[55] - 2 * d[12] * d[42] * d[47] * d[55] + 2 * d[9] * d[43] * d[47] * d[55] - 2 * d[15] * d[38] * d[48] * d[55] + 2 * d[17] * d[40] * d[48] * d[55] - 2 * d[11] * d[42] * d[48] * d[55] + 2 * d[13] * d[44] * d[48] * d[55] + 2 * d[17] * d[39] * d[49] * d[55] - 4 * d[16] * d[40] * d[49] * d[55] + 2 * d[15] * d[41] * d[49] * d[55] + 2 * d[14] * d[42] * d[49] * d[55] - 4 * d[13] * d[43] * d[49] * d[55] + 2 * d[12] * d[44] * d[49] * d[55] - 2 * d[17] * d[36] * d[50] * d[55] + 2 * d[15] * d[40] * d[50] * d[55] + 2 * d[13] * d[42] * d[50] * d[55] - 2 * d[9] * d[44] * d[50] * d[55] - 2 * d[12] * d[38] * d[51] * d[55] - 2 * d[11] * d[39] * d[51] * d[55] + 2 * d[14] * d[40] * d[51] * d[55] + 2 * d[13] * d[41] * d[51] * d[55] + 2 * d[11] * d[36] * d[52] * d[55] + 2 * d[9] * d[38] * d[52] * d[55] - 4 * d[13] * d[40] * d[52] * d[55] - 2 * d[14] * d[36] * d[53] * d[55] + 2 * d[13] * d[39] * d[53] * d[55] + 2 * d[12] * d[40] * d[53] * d[55] - 2 * d[9] * d[41] * d[53] * d[55] + 2 * d[17] * d[37] * d[45] * d[56] - 2 * d[16] * d[41] * d[45] * d[56] - 2 * d[14] * d[43] * d[45] * d[56] + 2 * d[10] * d[44] * d[45] * d[56] + 2 * d[17] * d[36] * d[46] * d[56] - 2 * d[15] * d[40] * d[46] * d[56] - 2 * d[13] * d[42] * d[46] * d[56] + 2 * d[9] * d[44] * d[46] * d[56] - 4 * d[17] * d[39] * d[48] * d[56] + 2 * d[16] * d[40] * d[48] * d[56] + 2 * d[15] * d[41] * d[48] * d[56] + 2 * d[14] * d[42] * d[48] * d[56] + 2 * d[13] * d[43] * d[48] * d[56] - 4 * d[12] * d[44] * d[48] * d[56] - 2 * d[15] * d[37] * d[49] * d[56] + 2 * d[16] * d[39] * d[49] * d[56] - 2 * d[10] * d[42] * d[49] * d[56] + 2 * d[12] * d[43] * d[49] * d[56] - 2 * d[16] * d[36] * d[50] * d[56] + 2 * d[15] * d[39] * d[50] * d[56] + 2 * d[12] * d[42] * d[50] * d[56] - 2 * d[9] * d[43] * d[50] * d[56] - 2 * d[13] * d[37] * d[51] * d[56] + 2 * d[14] * d[39] * d[51] * d[56] - 2 * d[10] * d[40] * d[51] * d[56] + 2 * d[12] * d[41] * d[51] * d[56] - 2 * d[14] * d[36] * d[52] * d[56] + 2 * d[13] * d[39] * d[52] * d[56] + 2 * d[12] * d[40] * d[52] * d[56] - 2 * d[9] * d[41] * d[52] * d[56] + 2 * d[10] * d[36] * d[53] * d[56] + 2 * d[9] * d[37] * d[53] * d[56] - 4 * d[12] * d[39] * d[53] * d[56] - d[11] * d[37] * d[45] * d[69] - d[10] * d[38] * d[45] * d[69] + 2 * d[14] * d[41] * d[45] * d[69] - d[11] * d[36] * d[46] * d[69] - d[9] * d[38] * d[46] * d[69] + 2 * d[13] * d[40] * d[46] * d[69] - d[10] * d[36] * d[47] * d[69] - d[9] * d[37] * d[47] * d[69] + 2 * d[12] * d[39] * d[47] * d[69] + 2 * d[12] * d[38] * d[48] * d[69] + 2 * d[11] * d[39] * d[48] * d[69] - 2 * d[14] * d[40] * d[48] * d[69] - 2 * d[13] * d[41] * d[48] * d[69] + 2 * d[13] * d[37] * d[49] * d[69] - 2 * d[14] * d[39] * d[49] * d[69] + 2 * d[10] * d[40] * d[49] * d[69] - 2 * d[12] * d[41] * d[49] * d[69] + 2 * d[14] * d[36] * d[50] * d[69] - 2 * d[13] * d[39] * d[50] * d[69] - 2 * d[12] * d[40] * d[50] * d[69] + 2 * d[9] * d[41] * d[50] * d[69];
    coeffs[27] = 2 * d[24] * d[38] * d[46] * d[54] - 2 * d[26] * d[40] * d[46] * d[54] + 2 * d[20] * d[42] * d[46] * d[54] - 2 * d[22] * d[44] * d[46] * d[54] + 2 * d[24] * d[37] * d[47] * d[54] - 2 * d[25] * d[39] * d[47] * d[54] + 2 * d[19] * d[42] * d[47] * d[54] - 2 * d[21] * d[43] * d[47] * d[54] - 2 * d[25] * d[38] * d[48] * d[54] + 2 * d[26] * d[41] * d[48] * d[54] - 2 * d[20] * d[43] * d[48] * d[54] + 2 * d[23] * d[44] * d[48] * d[54] - 2 * d[26] * d[37] * d[49] * d[54] + 2 * d[25] * d[41] * d[49] * d[54] + 2 * d[23] * d[43] * d[49] * d[54] - 2 * d[19] * d[44] * d[49] * d[54] + 2 * d[26] * d[39] * d[50] * d[54] + 2 * d[25] * d[40] * d[50] * d[54] - 4 * d[24] * d[41] * d[50] * d[54] - 4 * d[23] * d[42] * d[50] * d[54] + 2 * d[22] * d[43] * d[50] * d[54] + 2 * d[21] * d[44] * d[50] * d[54] + 2 * d[20] * d[37] * d[51] * d[54] + 2 * d[19] * d[38] * d[51] * d[54] - 4 * d[23] * d[41] * d[51] * d[54] - 2 * d[21] * d[38] * d[52] * d[54] - 2 * d[20] * d[39] * d[52] * d[54] + 2 * d[23] * d[40] * d[52] * d[54] + 2 * d[22] * d[41] * d[52] * d[54] - 2 * d[22] * d[37] * d[53] * d[54] + 2 * d[23] * d[39] * d[53] * d[54] - 2 * d[19] * d[40] * d[53] * d[54] + 2 * d[21] * d[41] * d[53] * d[54] + 2 * d[25] * d[38] * d[45] * d[55] - 2 * d[26] * d[41] * d[45] * d[55] + 2 * d[20] * d[43] * d[45] * d[55] - 2 * d[23] * d[44] * d[45] * d[55] + 2 * d[25] * d[36] * d[47] * d[55] - 2 * d[24] * d[39] * d[47] * d[55] - 2 * d[21] * d[42] * d[47] * d[55] + 2 * d[18] * d[43] * d[47] * d[55] - 2 * d[24] * d[38] * d[48] * d[55] + 2 * d[26] * d[40] * d[48] * d[55] - 2 * d[20] * d[42] * d[48] * d[55] + 2 * d[22] * d[44] * d[48] * d[55] + 2 * d[26] * d[39] * d[49] * d[55] - 4 * d[25] * d[40] * d[49] * d[55] + 2 * d[24] * d[41] * d[49] * d[55] + 2 * d[23] * d[42] * d[49] * d[55] - 4 * d[22] * d[43] * d[49] * d[55] + 2 * d[21] * d[44] * d[49] * d[55] - 2 * d[26] * d[36] * d[50] * d[55] + 2 * d[24] * d[40] * d[50] * d[55] + 2 * d[22] * d[42] * d[50] * d[55] - 2 * d[18] * d[44] * d[50] * d[55] - 2 * d[21] * d[38] * d[51] * d[55] - 2 * d[20] * d[39] * d[51] * d[55] + 2 * d[23] * d[40] * d[51] * d[55] + 2 * d[22] * d[41] * d[51] * d[55] + 2 * d[20] * d[36] * d[52] * d[55] + 2 * d[18] * d[38] * d[52] * d[55] - 4 * d[22] * d[40] * d[52] * d[55] - 2 * d[23] * d[36] * d[53] * d[55] + 2 * d[22] * d[39] * d[53] * d[55] + 2 * d[21] * d[40] * d[53] * d[55] - 2 * d[18] * d[41] * d[53] * d[55] + 2 * d[26] * d[37] * d[45] * d[56] - 2 * d[25] * d[41] * d[45] * d[56] - 2 * d[23] * d[43] * d[45] * d[56] + 2 * d[19] * d[44] * d[45] * d[56] + 2 * d[26] * d[36] * d[46] * d[56] - 2 * d[24] * d[40] * d[46] * d[56] - 2 * d[22] * d[42] * d[46] * d[56] + 2 * d[18] * d[44] * d[46] * d[56] - 4 * d[26] * d[39] * d[48] * d[56] + 2 * d[25] * d[40] * d[48] * d[56] + 2 * d[24] * d[41] * d[48] * d[56] + 2 * d[23] * d[42] * d[48] * d[56] + 2 * d[22] * d[43] * d[48] * d[56] - 4 * d[21] * d[44] * d[48] * d[56] - 2 * d[24] * d[37] * d[49] * d[56] + 2 * d[25] * d[39] * d[49] * d[56] - 2 * d[19] * d[42] * d[49] * d[56] + 2 * d[21] * d[43] * d[49] * d[56] - 2 * d[25] * d[36] * d[50] * d[56] + 2 * d[24] * d[39] * d[50] * d[56] + 2 * d[21] * d[42] * d[50] * d[56] - 2 * d[18] * d[43] * d[50] * d[56] - 2 * d[22] * d[37] * d[51] * d[56] + 2 * d[23] * d[39] * d[51] * d[56] - 2 * d[19] * d[40] * d[51] * d[56] + 2 * d[21] * d[41] * d[51] * d[56] - 2 * d[23] * d[36] * d[52] * d[56] + 2 * d[22] * d[39] * d[52] * d[56] + 2 * d[21] * d[40] * d[52] * d[56] - 2 * d[18] * d[41] * d[52] * d[56] + 2 * d[19] * d[36] * d[53] * d[56] + 2 * d[18] * d[37] * d[53] * d[56] - 4 * d[21] * d[39] * d[53] * d[56] - d[20] * d[37] * d[45] * d[69] - d[19] * d[38] * d[45] * d[69] + 2 * d[23] * d[41] * d[45] * d[69] - d[20] * d[36] * d[46] * d[69] - d[18] * d[38] * d[46] * d[69] + 2 * d[22] * d[40] * d[46] * d[69] - d[19] * d[36] * d[47] * d[69] - d[18] * d[37] * d[47] * d[69] + 2 * d[21] * d[39] * d[47] * d[69] + 2 * d[21] * d[38] * d[48] * d[69] + 2 * d[20] * d[39] * d[48] * d[69] - 2 * d[23] * d[40] * d[48] * d[69] - 2 * d[22] * d[41] * d[48] * d[69] + 2 * d[22] * d[37] * d[49] * d[69] - 2 * d[23] * d[39] * d[49] * d[69] + 2 * d[19] * d[40] * d[49] * d[69] - 2 * d[21] * d[41] * d[49] * d[69] + 2 * d[23] * d[36] * d[50] * d[69] - 2 * d[22] * d[39] * d[50] * d[69] - 2 * d[21] * d[40] * d[50] * d[69] + 2 * d[18] * d[41] * d[50] * d[69];
    coeffs[28] = 2 * d[33] * d[38] * d[46] * d[54] - 2 * d[35] * d[40] * d[46] * d[54] + 2 * d[29] * d[42] * d[46] * d[54] - 2 * d[31] * d[44] * d[46] * d[54] + 2 * d[33] * d[37] * d[47] * d[54] - 2 * d[34] * d[39] * d[47] * d[54] + 2 * d[28] * d[42] * d[47] * d[54] - 2 * d[30] * d[43] * d[47] * d[54] - 2 * d[34] * d[38] * d[48] * d[54] + 2 * d[35] * d[41] * d[48] * d[54] - 2 * d[29] * d[43] * d[48] * d[54] + 2 * d[32] * d[44] * d[48] * d[54] - 2 * d[35] * d[37] * d[49] * d[54] + 2 * d[34] * d[41] * d[49] * d[54] + 2 * d[32] * d[43] * d[49] * d[54] - 2 * d[28] * d[44] * d[49] * d[54] + 2 * d[35] * d[39] * d[50] * d[54] + 2 * d[34] * d[40] * d[50] * d[54] - 4 * d[33] * d[41] * d[50] * d[54] - 4 * d[32] * d[42] * d[50] * d[54] + 2 * d[31] * d[43] * d[50] * d[54] + 2 * d[30] * d[44] * d[50] * d[54] + 2 * d[29] * d[37] * d[51] * d[54] + 2 * d[28] * d[38] * d[51] * d[54] - 4 * d[32] * d[41] * d[51] * d[54] - 2 * d[30] * d[38] * d[52] * d[54] - 2 * d[29] * d[39] * d[52] * d[54] + 2 * d[32] * d[40] * d[52] * d[54] + 2 * d[31] * d[41] * d[52] * d[54] - 2 * d[31] * d[37] * d[53] * d[54] + 2 * d[32] * d[39] * d[53] * d[54] - 2 * d[28] * d[40] * d[53] * d[54] + 2 * d[30] * d[41] * d[53] * d[54] + 2 * d[34] * d[38] * d[45] * d[55] - 2 * d[35] * d[41] * d[45] * d[55] + 2 * d[29] * d[43] * d[45] * d[55] - 2 * d[32] * d[44] * d[45] * d[55] + 2 * d[34] * d[36] * d[47] * d[55] - 2 * d[33] * d[39] * d[47] * d[55] - 2 * d[30] * d[42] * d[47] * d[55] + 2 * d[27] * d[43] * d[47] * d[55] - 2 * d[33] * d[38] * d[48] * d[55] + 2 * d[35] * d[40] * d[48] * d[55] - 2 * d[29] * d[42] * d[48] * d[55] + 2 * d[31] * d[44] * d[48] * d[55] + 2 * d[35] * d[39] * d[49] * d[55] - 4 * d[34] * d[40] * d[49] * d[55] + 2 * d[33] * d[41] * d[49] * d[55] + 2 * d[32] * d[42] * d[49] * d[55] - 4 * d[31] * d[43] * d[49] * d[55] + 2 * d[30] * d[44] * d[49] * d[55] - 2 * d[35] * d[36] * d[50] * d[55] + 2 * d[33] * d[40] * d[50] * d[55] + 2 * d[31] * d[42] * d[50] * d[55] - 2 * d[27] * d[44] * d[50] * d[55] - 2 * d[30] * d[38] * d[51] * d[55] - 2 * d[29] * d[39] * d[51] * d[55] + 2 * d[32] * d[40] * d[51] * d[55] + 2 * d[31] * d[41] * d[51] * d[55] + 2 * d[29] * d[36] * d[52] * d[55] + 2 * d[27] * d[38] * d[52] * d[55] - 4 * d[31] * d[40] * d[52] * d[55] - 2 * d[32] * d[36] * d[53] * d[55] + 2 * d[31] * d[39] * d[53] * d[55] + 2 * d[30] * d[40] * d[53] * d[55] - 2 * d[27] * d[41] * d[53] * d[55] + 2 * d[35] * d[37] * d[45] * d[56] - 2 * d[34] * d[41] * d[45] * d[56] - 2 * d[32] * d[43] * d[45] * d[56] + 2 * d[28] * d[44] * d[45] * d[56] + 2 * d[35] * d[36] * d[46] * d[56] - 2 * d[33] * d[40] * d[46] * d[56] - 2 * d[31] * d[42] * d[46] * d[56] + 2 * d[27] * d[44] * d[46] * d[56] - 4 * d[35] * d[39] * d[48] * d[56] + 2 * d[34] * d[40] * d[48] * d[56] + 2 * d[33] * d[41] * d[48] * d[56] + 2 * d[32] * d[42] * d[48] * d[56] + 2 * d[31] * d[43] * d[48] * d[56] - 4 * d[30] * d[44] * d[48] * d[56] - 2 * d[33] * d[37] * d[49] * d[56] + 2 * d[34] * d[39] * d[49] * d[56] - 2 * d[28] * d[42] * d[49] * d[56] + 2 * d[30] * d[43] * d[49] * d[56] - 2 * d[34] * d[36] * d[50] * d[56] + 2 * d[33] * d[39] * d[50] * d[56] + 2 * d[30] * d[42] * d[50] * d[56] - 2 * d[27] * d[43] * d[50] * d[56] - 2 * d[31] * d[37] * d[51] * d[56] + 2 * d[32] * d[39] * d[51] * d[56] - 2 * d[28] * d[40] * d[51] * d[56] + 2 * d[30] * d[41] * d[51] * d[56] - 2 * d[32] * d[36] * d[52] * d[56] + 2 * d[31] * d[39] * d[52] * d[56] + 2 * d[30] * d[40] * d[52] * d[56] - 2 * d[27] * d[41] * d[52] * d[56] + 2 * d[28] * d[36] * d[53] * d[56] + 2 * d[27] * d[37] * d[53] * d[56] - 4 * d[30] * d[39] * d[53] * d[56] - d[29] * d[37] * d[45] * d[69] - d[28] * d[38] * d[45] * d[69] + 2 * d[32] * d[41] * d[45] * d[69] - d[29] * d[36] * d[46] * d[69] - d[27] * d[38] * d[46] * d[69] + 2 * d[31] * d[40] * d[46] * d[69] - d[28] * d[36] * d[47] * d[69] - d[27] * d[37] * d[47] * d[69] + 2 * d[30] * d[39] * d[47] * d[69] + 2 * d[30] * d[38] * d[48] * d[69] + 2 * d[29] * d[39] * d[48] * d[69] - 2 * d[32] * d[40] * d[48] * d[69] - 2 * d[31] * d[41] * d[48] * d[69] + 2 * d[31] * d[37] * d[49] * d[69] - 2 * d[32] * d[39] * d[49] * d[69] + 2 * d[28] * d[40] * d[49] * d[69] - 2 * d[30] * d[41] * d[49] * d[69] + 2 * d[32] * d[36] * d[50] * d[69] - 2 * d[31] * d[39] * d[50] * d[69] - 2 * d[30] * d[40] * d[50] * d[69] + 2 * d[27] * d[41] * d[50] * d[69];
    coeffs[29] = 2 * d[38] * d[42] * d[46] * d[54] - 2 * d[40] * d[44] * d[46] * d[54] + 2 * d[37] * d[42] * d[47] * d[54] - 2 * d[39] * d[43] * d[47] * d[54] - 2 * d[38] * d[43] * d[48] * d[54] + 2 * d[41] * d[44] * d[48] * d[54] + 2 * d[41] * d[43] * d[49] * d[54] - 2 * d[37] * d[44] * d[49] * d[54] - 4 * d[41] * d[42] * d[50] * d[54] + 2 * d[40] * d[43] * d[50] * d[54] + 2 * d[39] * d[44] * d[50] * d[54] + 2 * d[37] * d[38] * d[51] * d[54] - 2 * std::pow(d[41], 2) * d[51] * d[54] - 2 * d[38] * d[39] * d[52] * d[54] + 2 * d[40] * d[41] * d[52] * d[54] - 2 * d[37] * d[40] * d[53] * d[54] + 2 * d[39] * d[41] * d[53] * d[54] + 2 * d[38] * d[43] * d[45] * d[55] - 2 * d[41] * d[44] * d[45] * d[55] - 2 * d[39] * d[42] * d[47] * d[55] + 2 * d[36] * d[43] * d[47] * d[55] - 2 * d[38] * d[42] * d[48] * d[55] + 2 * d[40] * d[44] * d[48] * d[55] + 2 * d[41] * d[42] * d[49] * d[55] - 4 * d[40] * d[43] * d[49] * d[55] + 2 * d[39] * d[44] * d[49] * d[55] + 2 * d[40] * d[42] * d[50] * d[55] - 2 * d[36] * d[44] * d[50] * d[55] - 2 * d[38] * d[39] * d[51] * d[55] + 2 * d[40] * d[41] * d[51] * d[55] + 2 * d[36] * d[38] * d[52] * d[55] - 2 * std::pow(d[40], 2) * d[52] * d[55] + 2 * d[39] * d[40] * d[53] * d[55] - 2 * d[36] * d[41] * d[53] * d[55] - 2 * d[41] * d[43] * d[45] * d[56] + 2 * d[37] * d[44] * d[45] * d[56] - 2 * d[40] * d[42] * d[46] * d[56] + 2 * d[36] * d[44] * d[46] * d[56] + 2 * d[41] * d[42] * d[48] * d[56] + 2 * d[40] * d[43] * d[48] * d[56] - 4 * d[39] * d[44] * d[48] * d[56] - 2 * d[37] * d[42] * d[49] * d[56] + 2 * d[39] * d[43] * d[49] * d[56] + 2 * d[39] * d[42] * d[50] * d[56] - 2 * d[36] * d[43] * d[50] * d[56] - 2 * d[37] * d[40] * d[51] * d[56] + 2 * d[39] * d[41] * d[51] * d[56] + 2 * d[39] * d[40] * d[52] * d[56] - 2 * d[36] * d[41] * d[52] * d[56] + 2 * d[36] * d[37] * d[53] * d[56] - 2 * std::pow(d[39], 2) * d[53] * d[56] - d[37] * d[38] * d[45] * d[69] + std::pow(d[41], 2) * d[45] * d[69] - d[36] * d[38] * d[46] * d[69] + std::pow(d[40], 2) * d[46] * d[69] - d[36] * d[37] * d[47] * d[69] + std::pow(d[39], 2) * d[47] * d[69] + 2 * d[38] * d[39] * d[48] * d[69] - 2 * d[40] * d[41] * d[48] * d[69] + 2 * d[37] * d[40] * d[49] * d[69] - 2 * d[39] * d[41] * d[49] * d[69] - 2 * d[39] * d[40] * d[50] * d[69] + 2 * d[36] * d[41] * d[50] * d[69];
    coeffs[30] = 2 * d[15] * d[46] * d[47] * d[54] - 2 * d[16] * d[47] * d[48] * d[54] - 2 * d[17] * d[46] * d[49] * d[54] + 2 * d[17] * d[48] * d[50] * d[54] + 2 * d[16] * d[49] * d[50] * d[54] - 2 * d[15] * std::pow(d[50], 2) * d[54] + 2 * d[11] * d[46] * d[51] * d[54] + 2 * d[10] * d[47] * d[51] * d[54] - 4 * d[14] * d[50] * d[51] * d[54] - 2 * d[12] * d[47] * d[52] * d[54] - 2 * d[11] * d[48] * d[52] * d[54] + 2 * d[14] * d[49] * d[52] * d[54] + 2 * d[13] * d[50] * d[52] * d[54] - 2 * d[13] * d[46] * d[53] * d[54] + 2 * d[14] * d[48] * d[53] * d[54] - 2 * d[10] * d[49] * d[53] * d[54] + 2 * d[12] * d[50] * d[53] * d[54] + 2 * d[16] * d[45] * d[47] * d[55] - 2 * d[15] * d[47] * d[48] * d[55] + 2 * d[17] * d[48] * d[49] * d[55] - 2 * d[16] * std::pow(d[49], 2) * d[55] - 2 * d[17] * d[45] * d[50] * d[55] + 2 * d[15] * d[49] * d[50] * d[55] - 2 * d[12] * d[47] * d[51] * d[55] - 2 * d[11] * d[48] * d[51] * d[55] + 2 * d[14] * d[49] * d[51] * d[55] + 2 * d[13] * d[50] * d[51] * d[55] + 2 * d[11] * d[45] * d[52] * d[55] + 2 * d[9] * d[47] * d[52] * d[55] - 4 * d[13] * d[49] * d[52] * d[55] - 2 * d[14] * d[45] * d[53] * d[55] + 2 * d[13] * d[48] * d[53] * d[55] + 2 * d[12] * d[49] * d[53] * d[55] - 2 * d[9] * d[50] * d[53] * d[55] + 2 * d[17] * d[45] * d[46] * d[56] - 2 * d[17] * std::pow(d[48], 2) * d[56] - 2 * d[15] * d[46] * d[49] * d[56] + 2 * d[16] * d[48] * d[49] * d[56] - 2 * d[16] * d[45] * d[50] * d[56] + 2 * d[15] * d[48] * d[50] * d[56] - 2 * d[13] * d[46] * d[51] * d[56] + 2 * d[14] * d[48] * d[51] * d[56] - 2 * d[10] * d[49] * d[51] * d[56] + 2 * d[12] * d[50] * d[51] * d[56] - 2 * d[14] * d[45] * d[52] * d[56] + 2 * d[13] * d[48] * d[52] * d[56] + 2 * d[12] * d[49] * d[52] * d[56] - 2 * d[9] * d[50] * d[52] * d[56] + 2 * d[10] * d[45] * d[53] * d[56] + 2 * d[9] * d[46] * d[53] * d[56] - 4 * d[12] * d[48] * d[53] * d[56] - d[11] * d[45] * d[46] * d[69] - d[10] * d[45] * d[47] * d[69] - d[9] * d[46] * d[47] * d[69] + 2 * d[12] * d[47] * d[48] * d[69] + d[11] * std::pow(d[48], 2) * d[69] + 2 * d[13] * d[46] * d[49] * d[69] - 2 * d[14] * d[48] * d[49] * d[69] + d[10] * std::pow(d[49], 2) * d[69] + 2 * d[14] * d[45] * d[50] * d[69] - 2 * d[13] * d[48] * d[50] * d[69] - 2 * d[12] * d[49] * d[50] * d[69] + d[9] * std::pow(d[50], 2) * d[69];
    coeffs[31] = 2 * d[24] * d[46] * d[47] * d[54] - 2 * d[25] * d[47] * d[48] * d[54] - 2 * d[26] * d[46] * d[49] * d[54] + 2 * d[26] * d[48] * d[50] * d[54] + 2 * d[25] * d[49] * d[50] * d[54] - 2 * d[24] * std::pow(d[50], 2) * d[54] + 2 * d[20] * d[46] * d[51] * d[54] + 2 * d[19] * d[47] * d[51] * d[54] - 4 * d[23] * d[50] * d[51] * d[54] - 2 * d[21] * d[47] * d[52] * d[54] - 2 * d[20] * d[48] * d[52] * d[54] + 2 * d[23] * d[49] * d[52] * d[54] + 2 * d[22] * d[50] * d[52] * d[54] - 2 * d[22] * d[46] * d[53] * d[54] + 2 * d[23] * d[48] * d[53] * d[54] - 2 * d[19] * d[49] * d[53] * d[54] + 2 * d[21] * d[50] * d[53] * d[54] + 2 * d[25] * d[45] * d[47] * d[55] - 2 * d[24] * d[47] * d[48] * d[55] + 2 * d[26] * d[48] * d[49] * d[55] - 2 * d[25] * std::pow(d[49], 2) * d[55] - 2 * d[26] * d[45] * d[50] * d[55] + 2 * d[24] * d[49] * d[50] * d[55] - 2 * d[21] * d[47] * d[51] * d[55] - 2 * d[20] * d[48] * d[51] * d[55] + 2 * d[23] * d[49] * d[51] * d[55] + 2 * d[22] * d[50] * d[51] * d[55] + 2 * d[20] * d[45] * d[52] * d[55] + 2 * d[18] * d[47] * d[52] * d[55] - 4 * d[22] * d[49] * d[52] * d[55] - 2 * d[23] * d[45] * d[53] * d[55] + 2 * d[22] * d[48] * d[53] * d[55] + 2 * d[21] * d[49] * d[53] * d[55] - 2 * d[18] * d[50] * d[53] * d[55] + 2 * d[26] * d[45] * d[46] * d[56] - 2 * d[26] * std::pow(d[48], 2) * d[56] - 2 * d[24] * d[46] * d[49] * d[56] + 2 * d[25] * d[48] * d[49] * d[56] - 2 * d[25] * d[45] * d[50] * d[56] + 2 * d[24] * d[48] * d[50] * d[56] - 2 * d[22] * d[46] * d[51] * d[56] + 2 * d[23] * d[48] * d[51] * d[56] - 2 * d[19] * d[49] * d[51] * d[56] + 2 * d[21] * d[50] * d[51] * d[56] - 2 * d[23] * d[45] * d[52] * d[56] + 2 * d[22] * d[48] * d[52] * d[56] + 2 * d[21] * d[49] * d[52] * d[56] - 2 * d[18] * d[50] * d[52] * d[56] + 2 * d[19] * d[45] * d[53] * d[56] + 2 * d[18] * d[46] * d[53] * d[56] - 4 * d[21] * d[48] * d[53] * d[56] - d[20] * d[45] * d[46] * d[69] - d[19] * d[45] * d[47] * d[69] - d[18] * d[46] * d[47] * d[69] + 2 * d[21] * d[47] * d[48] * d[69] + d[20] * std::pow(d[48], 2) * d[69] + 2 * d[22] * d[46] * d[49] * d[69] - 2 * d[23] * d[48] * d[49] * d[69] + d[19] * std::pow(d[49], 2) * d[69] + 2 * d[23] * d[45] * d[50] * d[69] - 2 * d[22] * d[48] * d[50] * d[69] - 2 * d[21] * d[49] * d[50] * d[69] + d[18] * std::pow(d[50], 2) * d[69];
    coeffs[32] = 2 * d[33] * d[46] * d[47] * d[54] - 2 * d[34] * d[47] * d[48] * d[54] - 2 * d[35] * d[46] * d[49] * d[54] + 2 * d[35] * d[48] * d[50] * d[54] + 2 * d[34] * d[49] * d[50] * d[54] - 2 * d[33] * std::pow(d[50], 2) * d[54] + 2 * d[29] * d[46] * d[51] * d[54] + 2 * d[28] * d[47] * d[51] * d[54] - 4 * d[32] * d[50] * d[51] * d[54] - 2 * d[30] * d[47] * d[52] * d[54] - 2 * d[29] * d[48] * d[52] * d[54] + 2 * d[32] * d[49] * d[52] * d[54] + 2 * d[31] * d[50] * d[52] * d[54] - 2 * d[31] * d[46] * d[53] * d[54] + 2 * d[32] * d[48] * d[53] * d[54] - 2 * d[28] * d[49] * d[53] * d[54] + 2 * d[30] * d[50] * d[53] * d[54] + 2 * d[34] * d[45] * d[47] * d[55] - 2 * d[33] * d[47] * d[48] * d[55] + 2 * d[35] * d[48] * d[49] * d[55] - 2 * d[34] * std::pow(d[49], 2) * d[55] - 2 * d[35] * d[45] * d[50] * d[55] + 2 * d[33] * d[49] * d[50] * d[55] - 2 * d[30] * d[47] * d[51] * d[55] - 2 * d[29] * d[48] * d[51] * d[55] + 2 * d[32] * d[49] * d[51] * d[55] + 2 * d[31] * d[50] * d[51] * d[55] + 2 * d[29] * d[45] * d[52] * d[55] + 2 * d[27] * d[47] * d[52] * d[55] - 4 * d[31] * d[49] * d[52] * d[55] - 2 * d[32] * d[45] * d[53] * d[55] + 2 * d[31] * d[48] * d[53] * d[55] + 2 * d[30] * d[49] * d[53] * d[55] - 2 * d[27] * d[50] * d[53] * d[55] + 2 * d[35] * d[45] * d[46] * d[56] - 2 * d[35] * std::pow(d[48], 2) * d[56] - 2 * d[33] * d[46] * d[49] * d[56] + 2 * d[34] * d[48] * d[49] * d[56] - 2 * d[34] * d[45] * d[50] * d[56] + 2 * d[33] * d[48] * d[50] * d[56] - 2 * d[31] * d[46] * d[51] * d[56] + 2 * d[32] * d[48] * d[51] * d[56] - 2 * d[28] * d[49] * d[51] * d[56] + 2 * d[30] * d[50] * d[51] * d[56] - 2 * d[32] * d[45] * d[52] * d[56] + 2 * d[31] * d[48] * d[52] * d[56] + 2 * d[30] * d[49] * d[52] * d[56] - 2 * d[27] * d[50] * d[52] * d[56] + 2 * d[28] * d[45] * d[53] * d[56] + 2 * d[27] * d[46] * d[53] * d[56] - 4 * d[30] * d[48] * d[53] * d[56] - d[29] * d[45] * d[46] * d[69] - d[28] * d[45] * d[47] * d[69] - d[27] * d[46] * d[47] * d[69] + 2 * d[30] * d[47] * d[48] * d[69] + d[29] * std::pow(d[48], 2) * d[69] + 2 * d[31] * d[46] * d[49] * d[69] - 2 * d[32] * d[48] * d[49] * d[69] + d[28] * std::pow(d[49], 2) * d[69] + 2 * d[32] * d[45] * d[50] * d[69] - 2 * d[31] * d[48] * d[50] * d[69] - 2 * d[30] * d[49] * d[50] * d[69] + d[27] * std::pow(d[50], 2) * d[69];
    coeffs[33] = 2 * d[42] * d[46] * d[47] * d[54] - 2 * d[43] * d[47] * d[48] * d[54] - 2 * d[44] * d[46] * d[49] * d[54] + 2 * d[44] * d[48] * d[50] * d[54] + 2 * d[43] * d[49] * d[50] * d[54] - 2 * d[42] * std::pow(d[50], 2) * d[54] + 2 * d[38] * d[46] * d[51] * d[54] + 2 * d[37] * d[47] * d[51] * d[54] - 4 * d[41] * d[50] * d[51] * d[54] - 2 * d[39] * d[47] * d[52] * d[54] - 2 * d[38] * d[48] * d[52] * d[54] + 2 * d[41] * d[49] * d[52] * d[54] + 2 * d[40] * d[50] * d[52] * d[54] - 2 * d[40] * d[46] * d[53] * d[54] + 2 * d[41] * d[48] * d[53] * d[54] - 2 * d[37] * d[49] * d[53] * d[54] + 2 * d[39] * d[50] * d[53] * d[54] + 2 * d[43] * d[45] * d[47] * d[55] - 2 * d[42] * d[47] * d[48] * d[55] + 2 * d[44] * d[48] * d[49] * d[55] - 2 * d[43] * std::pow(d[49], 2) * d[55] - 2 * d[44] * d[45] * d[50] * d[55] + 2 * d[42] * d[49] * d[50] * d[55] - 2 * d[39] * d[47] * d[51] * d[55] - 2 * d[38] * d[48] * d[51] * d[55] + 2 * d[41] * d[49] * d[51] * d[55] + 2 * d[40] * d[50] * d[51] * d[55] + 2 * d[38] * d[45] * d[52] * d[55] + 2 * d[36] * d[47] * d[52] * d[55] - 4 * d[40] * d[49] * d[52] * d[55] - 2 * d[41] * d[45] * d[53] * d[55] + 2 * d[40] * d[48] * d[53] * d[55] + 2 * d[39] * d[49] * d[53] * d[55] - 2 * d[36] * d[50] * d[53] * d[55] + 2 * d[44] * d[45] * d[46] * d[56] - 2 * d[44] * std::pow(d[48], 2) * d[56] - 2 * d[42] * d[46] * d[49] * d[56] + 2 * d[43] * d[48] * d[49] * d[56] - 2 * d[43] * d[45] * d[50] * d[56] + 2 * d[42] * d[48] * d[50] * d[56] - 2 * d[40] * d[46] * d[51] * d[56] + 2 * d[41] * d[48] * d[51] * d[56] - 2 * d[37] * d[49] * d[51] * d[56] + 2 * d[39] * d[50] * d[51] * d[56] - 2 * d[41] * d[45] * d[52] * d[56] + 2 * d[40] * d[48] * d[52] * d[56] + 2 * d[39] * d[49] * d[52] * d[56] - 2 * d[36] * d[50] * d[52] * d[56] + 2 * d[37] * d[45] * d[53] * d[56] + 2 * d[36] * d[46] * d[53] * d[56] - 4 * d[39] * d[48] * d[53] * d[56] - d[38] * d[45] * d[46] * d[69] - d[37] * d[45] * d[47] * d[69] - d[36] * d[46] * d[47] * d[69] + 2 * d[39] * d[47] * d[48] * d[69] + d[38] * std::pow(d[48], 2) * d[69] + 2 * d[40] * d[46] * d[49] * d[69] - 2 * d[41] * d[48] * d[49] * d[69] + d[37] * std::pow(d[49], 2) * d[69] + 2 * d[41] * d[45] * d[50] * d[69] - 2 * d[40] * d[48] * d[50] * d[69] - 2 * d[39] * d[49] * d[50] * d[69] + d[36] * std::pow(d[50], 2) * d[69];
    coeffs[34] = 2 * d[46] * d[47] * d[51] * d[54] - 2 * std::pow(d[50], 2) * d[51] * d[54] - 2 * d[47] * d[48] * d[52] * d[54] + 2 * d[49] * d[50] * d[52] * d[54] - 2 * d[46] * d[49] * d[53] * d[54] + 2 * d[48] * d[50] * d[53] * d[54] - 2 * d[47] * d[48] * d[51] * d[55] + 2 * d[49] * d[50] * d[51] * d[55] + 2 * d[45] * d[47] * d[52] * d[55] - 2 * std::pow(d[49], 2) * d[52] * d[55] + 2 * d[48] * d[49] * d[53] * d[55] - 2 * d[45] * d[50] * d[53] * d[55] - 2 * d[46] * d[49] * d[51] * d[56] + 2 * d[48] * d[50] * d[51] * d[56] + 2 * d[48] * d[49] * d[52] * d[56] - 2 * d[45] * d[50] * d[52] * d[56] + 2 * d[45] * d[46] * d[53] * d[56] - 2 * std::pow(d[48], 2) * d[53] * d[56] - d[45] * d[46] * d[47] * d[69] + d[47] * std::pow(d[48], 2) * d[69] + d[46] * std::pow(d[49], 2) * d[69] - 2 * d[48] * d[49] * d[50] * d[69] + d[45] * std::pow(d[50], 2) * d[69];
    coeffs[35] = 2 * d[6] * d[10] * d[11] * d[54] - 2 * d[7] * d[11] * d[12] * d[54] - 2 * d[8] * d[10] * d[13] * d[54] + 2 * d[8] * d[12] * d[14] * d[54] + 2 * d[7] * d[13] * d[14] * d[54] - 2 * d[6] * std::pow(d[14], 2) * d[54] + 2 * d[2] * d[10] * d[15] * d[54] + 2 * d[1] * d[11] * d[15] * d[54] - 4 * d[5] * d[14] * d[15] * d[54] - 2 * d[3] * d[11] * d[16] * d[54] - 2 * d[2] * d[12] * d[16] * d[54] + 2 * d[5] * d[13] * d[16] * d[54] + 2 * d[4] * d[14] * d[16] * d[54] - 2 * d[4] * d[10] * d[17] * d[54] + 2 * d[5] * d[12] * d[17] * d[54] - 2 * d[1] * d[13] * d[17] * d[54] + 2 * d[3] * d[14] * d[17] * d[54] + d[10] * d[11] * std::pow(d[54], 2) - std::pow(d[14], 2) * std::pow(d[54], 2) + 2 * d[7] * d[9] * d[11] * d[55] - 2 * d[6] * d[11] * d[12] * d[55] + 2 * d[8] * d[12] * d[13] * d[55] - 2 * d[7] * std::pow(d[13], 2) * d[55] - 2 * d[8] * d[9] * d[14] * d[55] + 2 * d[6] * d[13] * d[14] * d[55] - 2 * d[3] * d[11] * d[15] * d[55] - 2 * d[2] * d[12] * d[15] * d[55] + 2 * d[5] * d[13] * d[15] * d[55] + 2 * d[4] * d[14] * d[15] * d[55] + 2 * d[2] * d[9] * d[16] * d[55] + 2 * d[0] * d[11] * d[16] * d[55] - 4 * d[4] * d[13] * d[16] * d[55] - 2 * d[5] * d[9] * d[17] * d[55] + 2 * d[4] * d[12] * d[17] * d[55] + 2 * d[3] * d[13] * d[17] * d[55] - 2 * d[0] * d[14] * d[17] * d[55] - 2 * d[11] * d[12] * d[54] * d[55] + 2 * d[13] * d[14] * d[54] * d[55] + d[9] * d[11] * std::pow(d[55], 2) - std::pow(d[13], 2) * std::pow(d[55], 2) + 2 * d[8] * d[9] * d[10] * d[56] - 2 * d[8] * std::pow(d[12], 2) * d[56] - 2 * d[6] * d[10] * d[13] * d[56] + 2 * d[7] * d[12] * d[13] * d[56] - 2 * d[7] * d[9] * d[14] * d[56] + 2 * d[6] * d[12] * d[14] * d[56] - 2 * d[4] * d[10] * d[15] * d[56] + 2 * d[5] * d[12] * d[15] * d[56] - 2 * d[1] * d[13] * d[15] * d[56] + 2 * d[3] * d[14] * d[15] * d[56] - 2 * d[5] * d[9] * d[16] * d[56] + 2 * d[4] * d[12] * d[16] * d[56] + 2 * d[3] * d[13] * d[16] * d[56] - 2 * d[0] * d[14] * d[16] * d[56] + 2 * d[1] * d[9] * d[17] * d[56] + 2 * d[0] * d[10] * d[17] * d[56] - 4 * d[3] * d[12] * d[17] * d[56] - 2 * d[10] * d[13] * d[54] * d[56] + 2 * d[12] * d[14] * d[54] * d[56] + 2 * d[12] * d[13] * d[55] * d[56] - 2 * d[9] * d[14] * d[55] * d[56] + d[9] * d[10] * std::pow(d[56], 2) - std::pow(d[12], 2) * std::pow(d[56], 2) - d[2] * d[9] * d[10] * d[69] - d[1] * d[9] * d[11] * d[69] - d[0] * d[10] * d[11] * d[69] + 2 * d[3] * d[11] * d[12] * d[69] + d[2] * std::pow(d[12], 2) * d[69] + 2 * d[4] * d[10] * d[13] * d[69] - 2 * d[5] * d[12] * d[13] * d[69] + d[1] * std::pow(d[13], 2) * d[69] + 2 * d[5] * d[9] * d[14] * d[69] - 2 * d[4] * d[12] * d[14] * d[69] - 2 * d[3] * d[13] * d[14] * d[69] + d[0] * std::pow(d[14], 2) * d[69];
    coeffs[36] = 2 * d[6] * d[11] * d[19] * d[54] - 2 * d[8] * d[13] * d[19] * d[54] + 2 * d[2] * d[15] * d[19] * d[54] - 2 * d[4] * d[17] * d[19] * d[54] + 2 * d[6] * d[10] * d[20] * d[54] - 2 * d[7] * d[12] * d[20] * d[54] + 2 * d[1] * d[15] * d[20] * d[54] - 2 * d[3] * d[16] * d[20] * d[54] - 2 * d[7] * d[11] * d[21] * d[54] + 2 * d[8] * d[14] * d[21] * d[54] - 2 * d[2] * d[16] * d[21] * d[54] + 2 * d[5] * d[17] * d[21] * d[54] - 2 * d[8] * d[10] * d[22] * d[54] + 2 * d[7] * d[14] * d[22] * d[54] + 2 * d[5] * d[16] * d[22] * d[54] - 2 * d[1] * d[17] * d[22] * d[54] + 2 * d[8] * d[12] * d[23] * d[54] + 2 * d[7] * d[13] * d[23] * d[54] - 4 * d[6] * d[14] * d[23] * d[54] - 4 * d[5] * d[15] * d[23] * d[54] + 2 * d[4] * d[16] * d[23] * d[54] + 2 * d[3] * d[17] * d[23] * d[54] + 2 * d[2] * d[10] * d[24] * d[54] + 2 * d[1] * d[11] * d[24] * d[54] - 4 * d[5] * d[14] * d[24] * d[54] - 2 * d[3] * d[11] * d[25] * d[54] - 2 * d[2] * d[12] * d[25] * d[54] + 2 * d[5] * d[13] * d[25] * d[54] + 2 * d[4] * d[14] * d[25] * d[54] - 2 * d[4] * d[10] * d[26] * d[54] + 2 * d[5] * d[12] * d[26] * d[54] - 2 * d[1] * d[13] * d[26] * d[54] + 2 * d[3] * d[14] * d[26] * d[54] + d[11] * d[19] * std::pow(d[54], 2) + d[10] * d[20] * std::pow(d[54], 2) - 2 * d[14] * d[23] * std::pow(d[54], 2) + 2 * d[7] * d[11] * d[18] * d[55] - 2 * d[8] * d[14] * d[18] * d[55] + 2 * d[2] * d[16] * d[18] * d[55] - 2 * d[5] * d[17] * d[18] * d[55] + 2 * d[7] * d[9] * d[20] * d[55] - 2 * d[6] * d[12] * d[20] * d[55] - 2 * d[3] * d[15] * d[20] * d[55] + 2 * d[0] * d[16] * d[20] * d[55] - 2 * d[6] * d[11] * d[21] * d[55] + 2 * d[8] * d[13] * d[21] * d[55] - 2 * d[2] * d[15] * d[21] * d[55] + 2 * d[4] * d[17] * d[21] * d[55] + 2 * d[8] * d[12] * d[22] * d[55] - 4 * d[7] * d[13] * d[22] * d[55] + 2 * d[6] * d[14] * d[22] * d[55] + 2 * d[5] * d[15] * d[22] * d[55] - 4 * d[4] * d[16] * d[22] * d[55] + 2 * d[3] * d[17] * d[22] * d[55] - 2 * d[8] * d[9] * d[23] * d[55] + 2 * d[6] * d[13] * d[23] * d[55] + 2 * d[4] * d[15] * d[23] * d[55] - 2 * d[0] * d[17] * d[23] * d[55] - 2 * d[3] * d[11] * d[24] * d[55] - 2 * d[2] * d[12] * d[24] * d[55] + 2 * d[5] * d[13] * d[24] * d[55] + 2 * d[4] * d[14] * d[24] * d[55] + 2 * d[2] * d[9] * d[25] * d[55] + 2 * d[0] * d[11] * d[25] * d[55] - 4 * d[4] * d[13] * d[25] * d[55] - 2 * d[5] * d[9] * d[26] * d[55] + 2 * d[4] * d[12] * d[26] * d[55] + 2 * d[3] * d[13] * d[26] * d[55] - 2 * d[0] * d[14] * d[26] * d[55] - 2 * d[12] * d[20] * d[54] * d[55] - 2 * d[11] * d[21] * d[54] * d[55] + 2 * d[14] * d[22] * d[54] * d[55] + 2 * d[13] * d[23] * d[54] * d[55] + d[11] * d[18] * std::pow(d[55], 2) + d[9] * d[20] * std::pow(d[55], 2) - 2 * d[13] * d[22] * std::pow(d[55], 2) + 2 * d[8] * d[10] * d[18] * d[56] - 2 * d[7] * d[14] * d[18] * d[56] - 2 * d[5] * d[16] * d[18] * d[56] + 2 * d[1] * d[17] * d[18] * d[56] + 2 * d[8] * d[9] * d[19] * d[56] - 2 * d[6] * d[13] * d[19] * d[56] - 2 * d[4] * d[15] * d[19] * d[56] + 2 * d[0] * d[17] * d[19] * d[56] - 4 * d[8] * d[12] * d[21] * d[56] + 2 * d[7] * d[13] * d[21] * d[56] + 2 * d[6] * d[14] * d[21] * d[56] + 2 * d[5] * d[15] * d[21] * d[56] + 2 * d[4] * d[16] * d[21] * d[56] - 4 * d[3] * d[17] * d[21] * d[56] - 2 * d[6] * d[10] * d[22] * d[56] + 2 * d[7] * d[12] * d[22] * d[56] - 2 * d[1] * d[15] * d[22] * d[56] + 2 * d[3] * d[16] * d[22] * d[56] - 2 * d[7] * d[9] * d[23] * d[56] + 2 * d[6] * d[12] * d[23] * d[56] + 2 * d[3] * d[15] * d[23] * d[56] - 2 * d[0] * d[16] * d[23] * d[56] - 2 * d[4] * d[10] * d[24] * d[56] + 2 * d[5] * d[12] * d[24] * d[56] - 2 * d[1] * d[13] * d[24] * d[56] + 2 * d[3] * d[14] * d[24] * d[56] - 2 * d[5] * d[9] * d[25] * d[56] + 2 * d[4] * d[12] * d[25] * d[56] + 2 * d[3] * d[13] * d[25] * d[56] - 2 * d[0] * d[14] * d[25] * d[56] + 2 * d[1] * d[9] * d[26] * d[56] + 2 * d[0] * d[10] * d[26] * d[56] - 4 * d[3] * d[12] * d[26] * d[56] - 2 * d[13] * d[19] * d[54] * d[56] + 2 * d[14] * d[21] * d[54] * d[56] - 2 * d[10] * d[22] * d[54] * d[56] + 2 * d[12] * d[23] * d[54] * d[56] - 2 * d[14] * d[18] * d[55] * d[56] + 2 * d[13] * d[21] * d[55] * d[56] + 2 * d[12] * d[22] * d[55] * d[56] - 2 * d[9] * d[23] * d[55] * d[56] + d[10] * d[18] * std::pow(d[56], 2) + d[9] * d[19] * std::pow(d[56], 2) - 2 * d[12] * d[21] * std::pow(d[56], 2) - d[2] * d[10] * d[18] * d[69] - d[1] * d[11] * d[18] * d[69] + 2 * d[5] * d[14] * d[18] * d[69] - d[2] * d[9] * d[19] * d[69] - d[0] * d[11] * d[19] * d[69] + 2 * d[4] * d[13] * d[19] * d[69] - d[1] * d[9] * d[20] * d[69] - d[0] * d[10] * d[20] * d[69] + 2 * d[3] * d[12] * d[20] * d[69] + 2 * d[3] * d[11] * d[21] * d[69] + 2 * d[2] * d[12] * d[21] * d[69] - 2 * d[5] * d[13] * d[21] * d[69] - 2 * d[4] * d[14] * d[21] * d[69] + 2 * d[4] * d[10] * d[22] * d[69] - 2 * d[5] * d[12] * d[22] * d[69] + 2 * d[1] * d[13] * d[22] * d[69] - 2 * d[3] * d[14] * d[22] * d[69] + 2 * d[5] * d[9] * d[23] * d[69] - 2 * d[4] * d[12] * d[23] * d[69] - 2 * d[3] * d[13] * d[23] * d[69] + 2 * d[0] * d[14] * d[23] * d[69];
    coeffs[37] = 2 * d[6] * d[19] * d[20] * d[54] - 2 * d[7] * d[20] * d[21] * d[54] - 2 * d[8] * d[19] * d[22] * d[54] + 2 * d[8] * d[21] * d[23] * d[54] + 2 * d[7] * d[22] * d[23] * d[54] - 2 * d[6] * std::pow(d[23], 2) * d[54] + 2 * d[2] * d[19] * d[24] * d[54] + 2 * d[1] * d[20] * d[24] * d[54] - 4 * d[5] * d[23] * d[24] * d[54] - 2 * d[3] * d[20] * d[25] * d[54] - 2 * d[2] * d[21] * d[25] * d[54] + 2 * d[5] * d[22] * d[25] * d[54] + 2 * d[4] * d[23] * d[25] * d[54] - 2 * d[4] * d[19] * d[26] * d[54] + 2 * d[5] * d[21] * d[26] * d[54] - 2 * d[1] * d[22] * d[26] * d[54] + 2 * d[3] * d[23] * d[26] * d[54] + d[19] * d[20] * std::pow(d[54], 2) - std::pow(d[23], 2) * std::pow(d[54], 2) + 2 * d[7] * d[18] * d[20] * d[55] - 2 * d[6] * d[20] * d[21] * d[55] + 2 * d[8] * d[21] * d[22] * d[55] - 2 * d[7] * std::pow(d[22], 2) * d[55] - 2 * d[8] * d[18] * d[23] * d[55] + 2 * d[6] * d[22] * d[23] * d[55] - 2 * d[3] * d[20] * d[24] * d[55] - 2 * d[2] * d[21] * d[24] * d[55] + 2 * d[5] * d[22] * d[24] * d[55] + 2 * d[4] * d[23] * d[24] * d[55] + 2 * d[2] * d[18] * d[25] * d[55] + 2 * d[0] * d[20] * d[25] * d[55] - 4 * d[4] * d[22] * d[25] * d[55] - 2 * d[5] * d[18] * d[26] * d[55] + 2 * d[4] * d[21] * d[26] * d[55] + 2 * d[3] * d[22] * d[26] * d[55] - 2 * d[0] * d[23] * d[26] * d[55] - 2 * d[20] * d[21] * d[54] * d[55] + 2 * d[22] * d[23] * d[54] * d[55] + d[18] * d[20] * std::pow(d[55], 2) - std::pow(d[22], 2) * std::pow(d[55], 2) + 2 * d[8] * d[18] * d[19] * d[56] - 2 * d[8] * std::pow(d[21], 2) * d[56] - 2 * d[6] * d[19] * d[22] * d[56] + 2 * d[7] * d[21] * d[22] * d[56] - 2 * d[7] * d[18] * d[23] * d[56] + 2 * d[6] * d[21] * d[23] * d[56] - 2 * d[4] * d[19] * d[24] * d[56] + 2 * d[5] * d[21] * d[24] * d[56] - 2 * d[1] * d[22] * d[24] * d[56] + 2 * d[3] * d[23] * d[24] * d[56] - 2 * d[5] * d[18] * d[25] * d[56] + 2 * d[4] * d[21] * d[25] * d[56] + 2 * d[3] * d[22] * d[25] * d[56] - 2 * d[0] * d[23] * d[25] * d[56] + 2 * d[1] * d[18] * d[26] * d[56] + 2 * d[0] * d[19] * d[26] * d[56] - 4 * d[3] * d[21] * d[26] * d[56] - 2 * d[19] * d[22] * d[54] * d[56] + 2 * d[21] * d[23] * d[54] * d[56] + 2 * d[21] * d[22] * d[55] * d[56] - 2 * d[18] * d[23] * d[55] * d[56] + d[18] * d[19] * std::pow(d[56], 2) - std::pow(d[21], 2) * std::pow(d[56], 2) - d[2] * d[18] * d[19] * d[69] - d[1] * d[18] * d[20] * d[69] - d[0] * d[19] * d[20] * d[69] + 2 * d[3] * d[20] * d[21] * d[69] + d[2] * std::pow(d[21], 2) * d[69] + 2 * d[4] * d[19] * d[22] * d[69] - 2 * d[5] * d[21] * d[22] * d[69] + d[1] * std::pow(d[22], 2) * d[69] + 2 * d[5] * d[18] * d[23] * d[69] - 2 * d[4] * d[21] * d[23] * d[69] - 2 * d[3] * d[22] * d[23] * d[69] + d[0] * std::pow(d[23], 2) * d[69];
    coeffs[38] = 2 * d[6] * d[11] * d[28] * d[54] - 2 * d[8] * d[13] * d[28] * d[54] + 2 * d[2] * d[15] * d[28] * d[54] - 2 * d[4] * d[17] * d[28] * d[54] + 2 * d[6] * d[10] * d[29] * d[54] - 2 * d[7] * d[12] * d[29] * d[54] + 2 * d[1] * d[15] * d[29] * d[54] - 2 * d[3] * d[16] * d[29] * d[54] - 2 * d[7] * d[11] * d[30] * d[54] + 2 * d[8] * d[14] * d[30] * d[54] - 2 * d[2] * d[16] * d[30] * d[54] + 2 * d[5] * d[17] * d[30] * d[54] - 2 * d[8] * d[10] * d[31] * d[54] + 2 * d[7] * d[14] * d[31] * d[54] + 2 * d[5] * d[16] * d[31] * d[54] - 2 * d[1] * d[17] * d[31] * d[54] + 2 * d[8] * d[12] * d[32] * d[54] + 2 * d[7] * d[13] * d[32] * d[54] - 4 * d[6] * d[14] * d[32] * d[54] - 4 * d[5] * d[15] * d[32] * d[54] + 2 * d[4] * d[16] * d[32] * d[54] + 2 * d[3] * d[17] * d[32] * d[54] + 2 * d[2] * d[10] * d[33] * d[54] + 2 * d[1] * d[11] * d[33] * d[54] - 4 * d[5] * d[14] * d[33] * d[54] - 2 * d[3] * d[11] * d[34] * d[54] - 2 * d[2] * d[12] * d[34] * d[54] + 2 * d[5] * d[13] * d[34] * d[54] + 2 * d[4] * d[14] * d[34] * d[54] - 2 * d[4] * d[10] * d[35] * d[54] + 2 * d[5] * d[12] * d[35] * d[54] - 2 * d[1] * d[13] * d[35] * d[54] + 2 * d[3] * d[14] * d[35] * d[54] + d[11] * d[28] * std::pow(d[54], 2) + d[10] * d[29] * std::pow(d[54], 2) - 2 * d[14] * d[32] * std::pow(d[54], 2) + 2 * d[7] * d[11] * d[27] * d[55] - 2 * d[8] * d[14] * d[27] * d[55] + 2 * d[2] * d[16] * d[27] * d[55] - 2 * d[5] * d[17] * d[27] * d[55] + 2 * d[7] * d[9] * d[29] * d[55] - 2 * d[6] * d[12] * d[29] * d[55] - 2 * d[3] * d[15] * d[29] * d[55] + 2 * d[0] * d[16] * d[29] * d[55] - 2 * d[6] * d[11] * d[30] * d[55] + 2 * d[8] * d[13] * d[30] * d[55] - 2 * d[2] * d[15] * d[30] * d[55] + 2 * d[4] * d[17] * d[30] * d[55] + 2 * d[8] * d[12] * d[31] * d[55] - 4 * d[7] * d[13] * d[31] * d[55] + 2 * d[6] * d[14] * d[31] * d[55] + 2 * d[5] * d[15] * d[31] * d[55] - 4 * d[4] * d[16] * d[31] * d[55] + 2 * d[3] * d[17] * d[31] * d[55] - 2 * d[8] * d[9] * d[32] * d[55] + 2 * d[6] * d[13] * d[32] * d[55] + 2 * d[4] * d[15] * d[32] * d[55] - 2 * d[0] * d[17] * d[32] * d[55] - 2 * d[3] * d[11] * d[33] * d[55] - 2 * d[2] * d[12] * d[33] * d[55] + 2 * d[5] * d[13] * d[33] * d[55] + 2 * d[4] * d[14] * d[33] * d[55] + 2 * d[2] * d[9] * d[34] * d[55] + 2 * d[0] * d[11] * d[34] * d[55] - 4 * d[4] * d[13] * d[34] * d[55] - 2 * d[5] * d[9] * d[35] * d[55] + 2 * d[4] * d[12] * d[35] * d[55] + 2 * d[3] * d[13] * d[35] * d[55] - 2 * d[0] * d[14] * d[35] * d[55] - 2 * d[12] * d[29] * d[54] * d[55] - 2 * d[11] * d[30] * d[54] * d[55] + 2 * d[14] * d[31] * d[54] * d[55] + 2 * d[13] * d[32] * d[54] * d[55] + d[11] * d[27] * std::pow(d[55], 2) + d[9] * d[29] * std::pow(d[55], 2) - 2 * d[13] * d[31] * std::pow(d[55], 2) + 2 * d[8] * d[10] * d[27] * d[56] - 2 * d[7] * d[14] * d[27] * d[56] - 2 * d[5] * d[16] * d[27] * d[56] + 2 * d[1] * d[17] * d[27] * d[56] + 2 * d[8] * d[9] * d[28] * d[56] - 2 * d[6] * d[13] * d[28] * d[56] - 2 * d[4] * d[15] * d[28] * d[56] + 2 * d[0] * d[17] * d[28] * d[56] - 4 * d[8] * d[12] * d[30] * d[56] + 2 * d[7] * d[13] * d[30] * d[56] + 2 * d[6] * d[14] * d[30] * d[56] + 2 * d[5] * d[15] * d[30] * d[56] + 2 * d[4] * d[16] * d[30] * d[56] - 4 * d[3] * d[17] * d[30] * d[56] - 2 * d[6] * d[10] * d[31] * d[56] + 2 * d[7] * d[12] * d[31] * d[56] - 2 * d[1] * d[15] * d[31] * d[56] + 2 * d[3] * d[16] * d[31] * d[56] - 2 * d[7] * d[9] * d[32] * d[56] + 2 * d[6] * d[12] * d[32] * d[56] + 2 * d[3] * d[15] * d[32] * d[56] - 2 * d[0] * d[16] * d[32] * d[56] - 2 * d[4] * d[10] * d[33] * d[56] + 2 * d[5] * d[12] * d[33] * d[56] - 2 * d[1] * d[13] * d[33] * d[56] + 2 * d[3] * d[14] * d[33] * d[56] - 2 * d[5] * d[9] * d[34] * d[56] + 2 * d[4] * d[12] * d[34] * d[56] + 2 * d[3] * d[13] * d[34] * d[56] - 2 * d[0] * d[14] * d[34] * d[56] + 2 * d[1] * d[9] * d[35] * d[56] + 2 * d[0] * d[10] * d[35] * d[56] - 4 * d[3] * d[12] * d[35] * d[56] - 2 * d[13] * d[28] * d[54] * d[56] + 2 * d[14] * d[30] * d[54] * d[56] - 2 * d[10] * d[31] * d[54] * d[56] + 2 * d[12] * d[32] * d[54] * d[56] - 2 * d[14] * d[27] * d[55] * d[56] + 2 * d[13] * d[30] * d[55] * d[56] + 2 * d[12] * d[31] * d[55] * d[56] - 2 * d[9] * d[32] * d[55] * d[56] + d[10] * d[27] * std::pow(d[56], 2) + d[9] * d[28] * std::pow(d[56], 2) - 2 * d[12] * d[30] * std::pow(d[56], 2) - d[2] * d[10] * d[27] * d[69] - d[1] * d[11] * d[27] * d[69] + 2 * d[5] * d[14] * d[27] * d[69] - d[2] * d[9] * d[28] * d[69] - d[0] * d[11] * d[28] * d[69] + 2 * d[4] * d[13] * d[28] * d[69] - d[1] * d[9] * d[29] * d[69] - d[0] * d[10] * d[29] * d[69] + 2 * d[3] * d[12] * d[29] * d[69] + 2 * d[3] * d[11] * d[30] * d[69] + 2 * d[2] * d[12] * d[30] * d[69] - 2 * d[5] * d[13] * d[30] * d[69] - 2 * d[4] * d[14] * d[30] * d[69] + 2 * d[4] * d[10] * d[31] * d[69] - 2 * d[5] * d[12] * d[31] * d[69] + 2 * d[1] * d[13] * d[31] * d[69] - 2 * d[3] * d[14] * d[31] * d[69] + 2 * d[5] * d[9] * d[32] * d[69] - 2 * d[4] * d[12] * d[32] * d[69] - 2 * d[3] * d[13] * d[32] * d[69] + 2 * d[0] * d[14] * d[32] * d[69];
    coeffs[39] = 2 * d[6] * d[20] * d[28] * d[54] - 2 * d[8] * d[22] * d[28] * d[54] + 2 * d[2] * d[24] * d[28] * d[54] - 2 * d[4] * d[26] * d[28] * d[54] + 2 * d[6] * d[19] * d[29] * d[54] - 2 * d[7] * d[21] * d[29] * d[54] + 2 * d[1] * d[24] * d[29] * d[54] - 2 * d[3] * d[25] * d[29] * d[54] - 2 * d[7] * d[20] * d[30] * d[54] + 2 * d[8] * d[23] * d[30] * d[54] - 2 * d[2] * d[25] * d[30] * d[54] + 2 * d[5] * d[26] * d[30] * d[54] - 2 * d[8] * d[19] * d[31] * d[54] + 2 * d[7] * d[23] * d[31] * d[54] + 2 * d[5] * d[25] * d[31] * d[54] - 2 * d[1] * d[26] * d[31] * d[54] + 2 * d[8] * d[21] * d[32] * d[54] + 2 * d[7] * d[22] * d[32] * d[54] - 4 * d[6] * d[23] * d[32] * d[54] - 4 * d[5] * d[24] * d[32] * d[54] + 2 * d[4] * d[25] * d[32] * d[54] + 2 * d[3] * d[26] * d[32] * d[54] + 2 * d[2] * d[19] * d[33] * d[54] + 2 * d[1] * d[20] * d[33] * d[54] - 4 * d[5] * d[23] * d[33] * d[54] - 2 * d[3] * d[20] * d[34] * d[54] - 2 * d[2] * d[21] * d[34] * d[54] + 2 * d[5] * d[22] * d[34] * d[54] + 2 * d[4] * d[23] * d[34] * d[54] - 2 * d[4] * d[19] * d[35] * d[54] + 2 * d[5] * d[21] * d[35] * d[54] - 2 * d[1] * d[22] * d[35] * d[54] + 2 * d[3] * d[23] * d[35] * d[54] + d[20] * d[28] * std::pow(d[54], 2) + d[19] * d[29] * std::pow(d[54], 2) - 2 * d[23] * d[32] * std::pow(d[54], 2) + 2 * d[7] * d[20] * d[27] * d[55] - 2 * d[8] * d[23] * d[27] * d[55] + 2 * d[2] * d[25] * d[27] * d[55] - 2 * d[5] * d[26] * d[27] * d[55] + 2 * d[7] * d[18] * d[29] * d[55] - 2 * d[6] * d[21] * d[29] * d[55] - 2 * d[3] * d[24] * d[29] * d[55] + 2 * d[0] * d[25] * d[29] * d[55] - 2 * d[6] * d[20] * d[30] * d[55] + 2 * d[8] * d[22] * d[30] * d[55] - 2 * d[2] * d[24] * d[30] * d[55] + 2 * d[4] * d[26] * d[30] * d[55] + 2 * d[8] * d[21] * d[31] * d[55] - 4 * d[7] * d[22] * d[31] * d[55] + 2 * d[6] * d[23] * d[31] * d[55] + 2 * d[5] * d[24] * d[31] * d[55] - 4 * d[4] * d[25] * d[31] * d[55] + 2 * d[3] * d[26] * d[31] * d[55] - 2 * d[8] * d[18] * d[32] * d[55] + 2 * d[6] * d[22] * d[32] * d[55] + 2 * d[4] * d[24] * d[32] * d[55] - 2 * d[0] * d[26] * d[32] * d[55] - 2 * d[3] * d[20] * d[33] * d[55] - 2 * d[2] * d[21] * d[33] * d[55] + 2 * d[5] * d[22] * d[33] * d[55] + 2 * d[4] * d[23] * d[33] * d[55] + 2 * d[2] * d[18] * d[34] * d[55] + 2 * d[0] * d[20] * d[34] * d[55] - 4 * d[4] * d[22] * d[34] * d[55] - 2 * d[5] * d[18] * d[35] * d[55] + 2 * d[4] * d[21] * d[35] * d[55] + 2 * d[3] * d[22] * d[35] * d[55] - 2 * d[0] * d[23] * d[35] * d[55] - 2 * d[21] * d[29] * d[54] * d[55] - 2 * d[20] * d[30] * d[54] * d[55] + 2 * d[23] * d[31] * d[54] * d[55] + 2 * d[22] * d[32] * d[54] * d[55] + d[20] * d[27] * std::pow(d[55], 2) + d[18] * d[29] * std::pow(d[55], 2) - 2 * d[22] * d[31] * std::pow(d[55], 2) + 2 * d[8] * d[19] * d[27] * d[56] - 2 * d[7] * d[23] * d[27] * d[56] - 2 * d[5] * d[25] * d[27] * d[56] + 2 * d[1] * d[26] * d[27] * d[56] + 2 * d[8] * d[18] * d[28] * d[56] - 2 * d[6] * d[22] * d[28] * d[56] - 2 * d[4] * d[24] * d[28] * d[56] + 2 * d[0] * d[26] * d[28] * d[56] - 4 * d[8] * d[21] * d[30] * d[56] + 2 * d[7] * d[22] * d[30] * d[56] + 2 * d[6] * d[23] * d[30] * d[56] + 2 * d[5] * d[24] * d[30] * d[56] + 2 * d[4] * d[25] * d[30] * d[56] - 4 * d[3] * d[26] * d[30] * d[56] - 2 * d[6] * d[19] * d[31] * d[56] + 2 * d[7] * d[21] * d[31] * d[56] - 2 * d[1] * d[24] * d[31] * d[56] + 2 * d[3] * d[25] * d[31] * d[56] - 2 * d[7] * d[18] * d[32] * d[56] + 2 * d[6] * d[21] * d[32] * d[56] + 2 * d[3] * d[24] * d[32] * d[56] - 2 * d[0] * d[25] * d[32] * d[56] - 2 * d[4] * d[19] * d[33] * d[56] + 2 * d[5] * d[21] * d[33] * d[56] - 2 * d[1] * d[22] * d[33] * d[56] + 2 * d[3] * d[23] * d[33] * d[56] - 2 * d[5] * d[18] * d[34] * d[56] + 2 * d[4] * d[21] * d[34] * d[56] + 2 * d[3] * d[22] * d[34] * d[56] - 2 * d[0] * d[23] * d[34] * d[56] + 2 * d[1] * d[18] * d[35] * d[56] + 2 * d[0] * d[19] * d[35] * d[56] - 4 * d[3] * d[21] * d[35] * d[56] - 2 * d[22] * d[28] * d[54] * d[56] + 2 * d[23] * d[30] * d[54] * d[56] - 2 * d[19] * d[31] * d[54] * d[56] + 2 * d[21] * d[32] * d[54] * d[56] - 2 * d[23] * d[27] * d[55] * d[56] + 2 * d[22] * d[30] * d[55] * d[56] + 2 * d[21] * d[31] * d[55] * d[56] - 2 * d[18] * d[32] * d[55] * d[56] + d[19] * d[27] * std::pow(d[56], 2) + d[18] * d[28] * std::pow(d[56], 2) - 2 * d[21] * d[30] * std::pow(d[56], 2) - d[2] * d[19] * d[27] * d[69] - d[1] * d[20] * d[27] * d[69] + 2 * d[5] * d[23] * d[27] * d[69] - d[2] * d[18] * d[28] * d[69] - d[0] * d[20] * d[28] * d[69] + 2 * d[4] * d[22] * d[28] * d[69] - d[1] * d[18] * d[29] * d[69] - d[0] * d[19] * d[29] * d[69] + 2 * d[3] * d[21] * d[29] * d[69] + 2 * d[3] * d[20] * d[30] * d[69] + 2 * d[2] * d[21] * d[30] * d[69] - 2 * d[5] * d[22] * d[30] * d[69] - 2 * d[4] * d[23] * d[30] * d[69] + 2 * d[4] * d[19] * d[31] * d[69] - 2 * d[5] * d[21] * d[31] * d[69] + 2 * d[1] * d[22] * d[31] * d[69] - 2 * d[3] * d[23] * d[31] * d[69] + 2 * d[5] * d[18] * d[32] * d[69] - 2 * d[4] * d[21] * d[32] * d[69] - 2 * d[3] * d[22] * d[32] * d[69] + 2 * d[0] * d[23] * d[32] * d[69];
    coeffs[40] = 2 * d[6] * d[28] * d[29] * d[54] - 2 * d[7] * d[29] * d[30] * d[54] - 2 * d[8] * d[28] * d[31] * d[54] + 2 * d[8] * d[30] * d[32] * d[54] + 2 * d[7] * d[31] * d[32] * d[54] - 2 * d[6] * std::pow(d[32], 2) * d[54] + 2 * d[2] * d[28] * d[33] * d[54] + 2 * d[1] * d[29] * d[33] * d[54] - 4 * d[5] * d[32] * d[33] * d[54] - 2 * d[3] * d[29] * d[34] * d[54] - 2 * d[2] * d[30] * d[34] * d[54] + 2 * d[5] * d[31] * d[34] * d[54] + 2 * d[4] * d[32] * d[34] * d[54] - 2 * d[4] * d[28] * d[35] * d[54] + 2 * d[5] * d[30] * d[35] * d[54] - 2 * d[1] * d[31] * d[35] * d[54] + 2 * d[3] * d[32] * d[35] * d[54] + d[28] * d[29] * std::pow(d[54], 2) - std::pow(d[32], 2) * std::pow(d[54], 2) + 2 * d[7] * d[27] * d[29] * d[55] - 2 * d[6] * d[29] * d[30] * d[55] + 2 * d[8] * d[30] * d[31] * d[55] - 2 * d[7] * std::pow(d[31], 2) * d[55] - 2 * d[8] * d[27] * d[32] * d[55] + 2 * d[6] * d[31] * d[32] * d[55] - 2 * d[3] * d[29] * d[33] * d[55] - 2 * d[2] * d[30] * d[33] * d[55] + 2 * d[5] * d[31] * d[33] * d[55] + 2 * d[4] * d[32] * d[33] * d[55] + 2 * d[2] * d[27] * d[34] * d[55] + 2 * d[0] * d[29] * d[34] * d[55] - 4 * d[4] * d[31] * d[34] * d[55] - 2 * d[5] * d[27] * d[35] * d[55] + 2 * d[4] * d[30] * d[35] * d[55] + 2 * d[3] * d[31] * d[35] * d[55] - 2 * d[0] * d[32] * d[35] * d[55] - 2 * d[29] * d[30] * d[54] * d[55] + 2 * d[31] * d[32] * d[54] * d[55] + d[27] * d[29] * std::pow(d[55], 2) - std::pow(d[31], 2) * std::pow(d[55], 2) + 2 * d[8] * d[27] * d[28] * d[56] - 2 * d[8] * std::pow(d[30], 2) * d[56] - 2 * d[6] * d[28] * d[31] * d[56] + 2 * d[7] * d[30] * d[31] * d[56] - 2 * d[7] * d[27] * d[32] * d[56] + 2 * d[6] * d[30] * d[32] * d[56] - 2 * d[4] * d[28] * d[33] * d[56] + 2 * d[5] * d[30] * d[33] * d[56] - 2 * d[1] * d[31] * d[33] * d[56] + 2 * d[3] * d[32] * d[33] * d[56] - 2 * d[5] * d[27] * d[34] * d[56] + 2 * d[4] * d[30] * d[34] * d[56] + 2 * d[3] * d[31] * d[34] * d[56] - 2 * d[0] * d[32] * d[34] * d[56] + 2 * d[1] * d[27] * d[35] * d[56] + 2 * d[0] * d[28] * d[35] * d[56] - 4 * d[3] * d[30] * d[35] * d[56] - 2 * d[28] * d[31] * d[54] * d[56] + 2 * d[30] * d[32] * d[54] * d[56] + 2 * d[30] * d[31] * d[55] * d[56] - 2 * d[27] * d[32] * d[55] * d[56] + d[27] * d[28] * std::pow(d[56], 2) - std::pow(d[30], 2) * std::pow(d[56], 2) - d[2] * d[27] * d[28] * d[69] - d[1] * d[27] * d[29] * d[69] - d[0] * d[28] * d[29] * d[69] + 2 * d[3] * d[29] * d[30] * d[69] + d[2] * std::pow(d[30], 2) * d[69] + 2 * d[4] * d[28] * d[31] * d[69] - 2 * d[5] * d[30] * d[31] * d[69] + d[1] * std::pow(d[31], 2) * d[69] + 2 * d[5] * d[27] * d[32] * d[69] - 2 * d[4] * d[30] * d[32] * d[69] - 2 * d[3] * d[31] * d[32] * d[69] + d[0] * std::pow(d[32], 2) * d[69];
    coeffs[41] = 2 * d[6] * d[11] * d[37] * d[54] - 2 * d[8] * d[13] * d[37] * d[54] + 2 * d[2] * d[15] * d[37] * d[54] - 2 * d[4] * d[17] * d[37] * d[54] + 2 * d[6] * d[10] * d[38] * d[54] - 2 * d[7] * d[12] * d[38] * d[54] + 2 * d[1] * d[15] * d[38] * d[54] - 2 * d[3] * d[16] * d[38] * d[54] - 2 * d[7] * d[11] * d[39] * d[54] + 2 * d[8] * d[14] * d[39] * d[54] - 2 * d[2] * d[16] * d[39] * d[54] + 2 * d[5] * d[17] * d[39] * d[54] - 2 * d[8] * d[10] * d[40] * d[54] + 2 * d[7] * d[14] * d[40] * d[54] + 2 * d[5] * d[16] * d[40] * d[54] - 2 * d[1] * d[17] * d[40] * d[54] + 2 * d[8] * d[12] * d[41] * d[54] + 2 * d[7] * d[13] * d[41] * d[54] - 4 * d[6] * d[14] * d[41] * d[54] - 4 * d[5] * d[15] * d[41] * d[54] + 2 * d[4] * d[16] * d[41] * d[54] + 2 * d[3] * d[17] * d[41] * d[54] + 2 * d[2] * d[10] * d[42] * d[54] + 2 * d[1] * d[11] * d[42] * d[54] - 4 * d[5] * d[14] * d[42] * d[54] - 2 * d[3] * d[11] * d[43] * d[54] - 2 * d[2] * d[12] * d[43] * d[54] + 2 * d[5] * d[13] * d[43] * d[54] + 2 * d[4] * d[14] * d[43] * d[54] - 2 * d[4] * d[10] * d[44] * d[54] + 2 * d[5] * d[12] * d[44] * d[54] - 2 * d[1] * d[13] * d[44] * d[54] + 2 * d[3] * d[14] * d[44] * d[54] + d[11] * d[37] * std::pow(d[54], 2) + d[10] * d[38] * std::pow(d[54], 2) - 2 * d[14] * d[41] * std::pow(d[54], 2) + 2 * d[7] * d[11] * d[36] * d[55] - 2 * d[8] * d[14] * d[36] * d[55] + 2 * d[2] * d[16] * d[36] * d[55] - 2 * d[5] * d[17] * d[36] * d[55] + 2 * d[7] * d[9] * d[38] * d[55] - 2 * d[6] * d[12] * d[38] * d[55] - 2 * d[3] * d[15] * d[38] * d[55] + 2 * d[0] * d[16] * d[38] * d[55] - 2 * d[6] * d[11] * d[39] * d[55] + 2 * d[8] * d[13] * d[39] * d[55] - 2 * d[2] * d[15] * d[39] * d[55] + 2 * d[4] * d[17] * d[39] * d[55] + 2 * d[8] * d[12] * d[40] * d[55] - 4 * d[7] * d[13] * d[40] * d[55] + 2 * d[6] * d[14] * d[40] * d[55] + 2 * d[5] * d[15] * d[40] * d[55] - 4 * d[4] * d[16] * d[40] * d[55] + 2 * d[3] * d[17] * d[40] * d[55] - 2 * d[8] * d[9] * d[41] * d[55] + 2 * d[6] * d[13] * d[41] * d[55] + 2 * d[4] * d[15] * d[41] * d[55] - 2 * d[0] * d[17] * d[41] * d[55] - 2 * d[3] * d[11] * d[42] * d[55] - 2 * d[2] * d[12] * d[42] * d[55] + 2 * d[5] * d[13] * d[42] * d[55] + 2 * d[4] * d[14] * d[42] * d[55] + 2 * d[2] * d[9] * d[43] * d[55] + 2 * d[0] * d[11] * d[43] * d[55] - 4 * d[4] * d[13] * d[43] * d[55] - 2 * d[5] * d[9] * d[44] * d[55] + 2 * d[4] * d[12] * d[44] * d[55] + 2 * d[3] * d[13] * d[44] * d[55] - 2 * d[0] * d[14] * d[44] * d[55] - 2 * d[12] * d[38] * d[54] * d[55] - 2 * d[11] * d[39] * d[54] * d[55] + 2 * d[14] * d[40] * d[54] * d[55] + 2 * d[13] * d[41] * d[54] * d[55] + d[11] * d[36] * std::pow(d[55], 2) + d[9] * d[38] * std::pow(d[55], 2) - 2 * d[13] * d[40] * std::pow(d[55], 2) + 2 * d[8] * d[10] * d[36] * d[56] - 2 * d[7] * d[14] * d[36] * d[56] - 2 * d[5] * d[16] * d[36] * d[56] + 2 * d[1] * d[17] * d[36] * d[56] + 2 * d[8] * d[9] * d[37] * d[56] - 2 * d[6] * d[13] * d[37] * d[56] - 2 * d[4] * d[15] * d[37] * d[56] + 2 * d[0] * d[17] * d[37] * d[56] - 4 * d[8] * d[12] * d[39] * d[56] + 2 * d[7] * d[13] * d[39] * d[56] + 2 * d[6] * d[14] * d[39] * d[56] + 2 * d[5] * d[15] * d[39] * d[56] + 2 * d[4] * d[16] * d[39] * d[56] - 4 * d[3] * d[17] * d[39] * d[56] - 2 * d[6] * d[10] * d[40] * d[56] + 2 * d[7] * d[12] * d[40] * d[56] - 2 * d[1] * d[15] * d[40] * d[56] + 2 * d[3] * d[16] * d[40] * d[56] - 2 * d[7] * d[9] * d[41] * d[56] + 2 * d[6] * d[12] * d[41] * d[56] + 2 * d[3] * d[15] * d[41] * d[56] - 2 * d[0] * d[16] * d[41] * d[56] - 2 * d[4] * d[10] * d[42] * d[56] + 2 * d[5] * d[12] * d[42] * d[56] - 2 * d[1] * d[13] * d[42] * d[56] + 2 * d[3] * d[14] * d[42] * d[56] - 2 * d[5] * d[9] * d[43] * d[56] + 2 * d[4] * d[12] * d[43] * d[56] + 2 * d[3] * d[13] * d[43] * d[56] - 2 * d[0] * d[14] * d[43] * d[56] + 2 * d[1] * d[9] * d[44] * d[56] + 2 * d[0] * d[10] * d[44] * d[56] - 4 * d[3] * d[12] * d[44] * d[56] - 2 * d[13] * d[37] * d[54] * d[56] + 2 * d[14] * d[39] * d[54] * d[56] - 2 * d[10] * d[40] * d[54] * d[56] + 2 * d[12] * d[41] * d[54] * d[56] - 2 * d[14] * d[36] * d[55] * d[56] + 2 * d[13] * d[39] * d[55] * d[56] + 2 * d[12] * d[40] * d[55] * d[56] - 2 * d[9] * d[41] * d[55] * d[56] + d[10] * d[36] * std::pow(d[56], 2) + d[9] * d[37] * std::pow(d[56], 2) - 2 * d[12] * d[39] * std::pow(d[56], 2) - d[2] * d[10] * d[36] * d[69] - d[1] * d[11] * d[36] * d[69] + 2 * d[5] * d[14] * d[36] * d[69] - d[2] * d[9] * d[37] * d[69] - d[0] * d[11] * d[37] * d[69] + 2 * d[4] * d[13] * d[37] * d[69] - d[1] * d[9] * d[38] * d[69] - d[0] * d[10] * d[38] * d[69] + 2 * d[3] * d[12] * d[38] * d[69] + 2 * d[3] * d[11] * d[39] * d[69] + 2 * d[2] * d[12] * d[39] * d[69] - 2 * d[5] * d[13] * d[39] * d[69] - 2 * d[4] * d[14] * d[39] * d[69] + 2 * d[4] * d[10] * d[40] * d[69] - 2 * d[5] * d[12] * d[40] * d[69] + 2 * d[1] * d[13] * d[40] * d[69] - 2 * d[3] * d[14] * d[40] * d[69] + 2 * d[5] * d[9] * d[41] * d[69] - 2 * d[4] * d[12] * d[41] * d[69] - 2 * d[3] * d[13] * d[41] * d[69] + 2 * d[0] * d[14] * d[41] * d[69];
    coeffs[42] = 2 * d[6] * d[20] * d[37] * d[54] - 2 * d[8] * d[22] * d[37] * d[54] + 2 * d[2] * d[24] * d[37] * d[54] - 2 * d[4] * d[26] * d[37] * d[54] + 2 * d[6] * d[19] * d[38] * d[54] - 2 * d[7] * d[21] * d[38] * d[54] + 2 * d[1] * d[24] * d[38] * d[54] - 2 * d[3] * d[25] * d[38] * d[54] - 2 * d[7] * d[20] * d[39] * d[54] + 2 * d[8] * d[23] * d[39] * d[54] - 2 * d[2] * d[25] * d[39] * d[54] + 2 * d[5] * d[26] * d[39] * d[54] - 2 * d[8] * d[19] * d[40] * d[54] + 2 * d[7] * d[23] * d[40] * d[54] + 2 * d[5] * d[25] * d[40] * d[54] - 2 * d[1] * d[26] * d[40] * d[54] + 2 * d[8] * d[21] * d[41] * d[54] + 2 * d[7] * d[22] * d[41] * d[54] - 4 * d[6] * d[23] * d[41] * d[54] - 4 * d[5] * d[24] * d[41] * d[54] + 2 * d[4] * d[25] * d[41] * d[54] + 2 * d[3] * d[26] * d[41] * d[54] + 2 * d[2] * d[19] * d[42] * d[54] + 2 * d[1] * d[20] * d[42] * d[54] - 4 * d[5] * d[23] * d[42] * d[54] - 2 * d[3] * d[20] * d[43] * d[54] - 2 * d[2] * d[21] * d[43] * d[54] + 2 * d[5] * d[22] * d[43] * d[54] + 2 * d[4] * d[23] * d[43] * d[54] - 2 * d[4] * d[19] * d[44] * d[54] + 2 * d[5] * d[21] * d[44] * d[54] - 2 * d[1] * d[22] * d[44] * d[54] + 2 * d[3] * d[23] * d[44] * d[54] + d[20] * d[37] * std::pow(d[54], 2) + d[19] * d[38] * std::pow(d[54], 2) - 2 * d[23] * d[41] * std::pow(d[54], 2) + 2 * d[7] * d[20] * d[36] * d[55] - 2 * d[8] * d[23] * d[36] * d[55] + 2 * d[2] * d[25] * d[36] * d[55] - 2 * d[5] * d[26] * d[36] * d[55] + 2 * d[7] * d[18] * d[38] * d[55] - 2 * d[6] * d[21] * d[38] * d[55] - 2 * d[3] * d[24] * d[38] * d[55] + 2 * d[0] * d[25] * d[38] * d[55] - 2 * d[6] * d[20] * d[39] * d[55] + 2 * d[8] * d[22] * d[39] * d[55] - 2 * d[2] * d[24] * d[39] * d[55] + 2 * d[4] * d[26] * d[39] * d[55] + 2 * d[8] * d[21] * d[40] * d[55] - 4 * d[7] * d[22] * d[40] * d[55] + 2 * d[6] * d[23] * d[40] * d[55] + 2 * d[5] * d[24] * d[40] * d[55] - 4 * d[4] * d[25] * d[40] * d[55] + 2 * d[3] * d[26] * d[40] * d[55] - 2 * d[8] * d[18] * d[41] * d[55] + 2 * d[6] * d[22] * d[41] * d[55] + 2 * d[4] * d[24] * d[41] * d[55] - 2 * d[0] * d[26] * d[41] * d[55] - 2 * d[3] * d[20] * d[42] * d[55] - 2 * d[2] * d[21] * d[42] * d[55] + 2 * d[5] * d[22] * d[42] * d[55] + 2 * d[4] * d[23] * d[42] * d[55] + 2 * d[2] * d[18] * d[43] * d[55] + 2 * d[0] * d[20] * d[43] * d[55] - 4 * d[4] * d[22] * d[43] * d[55] - 2 * d[5] * d[18] * d[44] * d[55] + 2 * d[4] * d[21] * d[44] * d[55] + 2 * d[3] * d[22] * d[44] * d[55] - 2 * d[0] * d[23] * d[44] * d[55] - 2 * d[21] * d[38] * d[54] * d[55] - 2 * d[20] * d[39] * d[54] * d[55] + 2 * d[23] * d[40] * d[54] * d[55] + 2 * d[22] * d[41] * d[54] * d[55] + d[20] * d[36] * std::pow(d[55], 2) + d[18] * d[38] * std::pow(d[55], 2) - 2 * d[22] * d[40] * std::pow(d[55], 2) + 2 * d[8] * d[19] * d[36] * d[56] - 2 * d[7] * d[23] * d[36] * d[56] - 2 * d[5] * d[25] * d[36] * d[56] + 2 * d[1] * d[26] * d[36] * d[56] + 2 * d[8] * d[18] * d[37] * d[56] - 2 * d[6] * d[22] * d[37] * d[56] - 2 * d[4] * d[24] * d[37] * d[56] + 2 * d[0] * d[26] * d[37] * d[56] - 4 * d[8] * d[21] * d[39] * d[56] + 2 * d[7] * d[22] * d[39] * d[56] + 2 * d[6] * d[23] * d[39] * d[56] + 2 * d[5] * d[24] * d[39] * d[56] + 2 * d[4] * d[25] * d[39] * d[56] - 4 * d[3] * d[26] * d[39] * d[56] - 2 * d[6] * d[19] * d[40] * d[56] + 2 * d[7] * d[21] * d[40] * d[56] - 2 * d[1] * d[24] * d[40] * d[56] + 2 * d[3] * d[25] * d[40] * d[56] - 2 * d[7] * d[18] * d[41] * d[56] + 2 * d[6] * d[21] * d[41] * d[56] + 2 * d[3] * d[24] * d[41] * d[56] - 2 * d[0] * d[25] * d[41] * d[56] - 2 * d[4] * d[19] * d[42] * d[56] + 2 * d[5] * d[21] * d[42] * d[56] - 2 * d[1] * d[22] * d[42] * d[56] + 2 * d[3] * d[23] * d[42] * d[56] - 2 * d[5] * d[18] * d[43] * d[56] + 2 * d[4] * d[21] * d[43] * d[56] + 2 * d[3] * d[22] * d[43] * d[56] - 2 * d[0] * d[23] * d[43] * d[56] + 2 * d[1] * d[18] * d[44] * d[56] + 2 * d[0] * d[19] * d[44] * d[56] - 4 * d[3] * d[21] * d[44] * d[56] - 2 * d[22] * d[37] * d[54] * d[56] + 2 * d[23] * d[39] * d[54] * d[56] - 2 * d[19] * d[40] * d[54] * d[56] + 2 * d[21] * d[41] * d[54] * d[56] - 2 * d[23] * d[36] * d[55] * d[56] + 2 * d[22] * d[39] * d[55] * d[56] + 2 * d[21] * d[40] * d[55] * d[56] - 2 * d[18] * d[41] * d[55] * d[56] + d[19] * d[36] * std::pow(d[56], 2) + d[18] * d[37] * std::pow(d[56], 2) - 2 * d[21] * d[39] * std::pow(d[56], 2) - d[2] * d[19] * d[36] * d[69] - d[1] * d[20] * d[36] * d[69] + 2 * d[5] * d[23] * d[36] * d[69] - d[2] * d[18] * d[37] * d[69] - d[0] * d[20] * d[37] * d[69] + 2 * d[4] * d[22] * d[37] * d[69] - d[1] * d[18] * d[38] * d[69] - d[0] * d[19] * d[38] * d[69] + 2 * d[3] * d[21] * d[38] * d[69] + 2 * d[3] * d[20] * d[39] * d[69] + 2 * d[2] * d[21] * d[39] * d[69] - 2 * d[5] * d[22] * d[39] * d[69] - 2 * d[4] * d[23] * d[39] * d[69] + 2 * d[4] * d[19] * d[40] * d[69] - 2 * d[5] * d[21] * d[40] * d[69] + 2 * d[1] * d[22] * d[40] * d[69] - 2 * d[3] * d[23] * d[40] * d[69] + 2 * d[5] * d[18] * d[41] * d[69] - 2 * d[4] * d[21] * d[41] * d[69] - 2 * d[3] * d[22] * d[41] * d[69] + 2 * d[0] * d[23] * d[41] * d[69];
    coeffs[43] = 2 * d[6] * d[29] * d[37] * d[54] - 2 * d[8] * d[31] * d[37] * d[54] + 2 * d[2] * d[33] * d[37] * d[54] - 2 * d[4] * d[35] * d[37] * d[54] + 2 * d[6] * d[28] * d[38] * d[54] - 2 * d[7] * d[30] * d[38] * d[54] + 2 * d[1] * d[33] * d[38] * d[54] - 2 * d[3] * d[34] * d[38] * d[54] - 2 * d[7] * d[29] * d[39] * d[54] + 2 * d[8] * d[32] * d[39] * d[54] - 2 * d[2] * d[34] * d[39] * d[54] + 2 * d[5] * d[35] * d[39] * d[54] - 2 * d[8] * d[28] * d[40] * d[54] + 2 * d[7] * d[32] * d[40] * d[54] + 2 * d[5] * d[34] * d[40] * d[54] - 2 * d[1] * d[35] * d[40] * d[54] + 2 * d[8] * d[30] * d[41] * d[54] + 2 * d[7] * d[31] * d[41] * d[54] - 4 * d[6] * d[32] * d[41] * d[54] - 4 * d[5] * d[33] * d[41] * d[54] + 2 * d[4] * d[34] * d[41] * d[54] + 2 * d[3] * d[35] * d[41] * d[54] + 2 * d[2] * d[28] * d[42] * d[54] + 2 * d[1] * d[29] * d[42] * d[54] - 4 * d[5] * d[32] * d[42] * d[54] - 2 * d[3] * d[29] * d[43] * d[54] - 2 * d[2] * d[30] * d[43] * d[54] + 2 * d[5] * d[31] * d[43] * d[54] + 2 * d[4] * d[32] * d[43] * d[54] - 2 * d[4] * d[28] * d[44] * d[54] + 2 * d[5] * d[30] * d[44] * d[54] - 2 * d[1] * d[31] * d[44] * d[54] + 2 * d[3] * d[32] * d[44] * d[54] + d[29] * d[37] * std::pow(d[54], 2) + d[28] * d[38] * std::pow(d[54], 2) - 2 * d[32] * d[41] * std::pow(d[54], 2) + 2 * d[7] * d[29] * d[36] * d[55] - 2 * d[8] * d[32] * d[36] * d[55] + 2 * d[2] * d[34] * d[36] * d[55] - 2 * d[5] * d[35] * d[36] * d[55] + 2 * d[7] * d[27] * d[38] * d[55] - 2 * d[6] * d[30] * d[38] * d[55] - 2 * d[3] * d[33] * d[38] * d[55] + 2 * d[0] * d[34] * d[38] * d[55] - 2 * d[6] * d[29] * d[39] * d[55] + 2 * d[8] * d[31] * d[39] * d[55] - 2 * d[2] * d[33] * d[39] * d[55] + 2 * d[4] * d[35] * d[39] * d[55] + 2 * d[8] * d[30] * d[40] * d[55] - 4 * d[7] * d[31] * d[40] * d[55] + 2 * d[6] * d[32] * d[40] * d[55] + 2 * d[5] * d[33] * d[40] * d[55] - 4 * d[4] * d[34] * d[40] * d[55] + 2 * d[3] * d[35] * d[40] * d[55] - 2 * d[8] * d[27] * d[41] * d[55] + 2 * d[6] * d[31] * d[41] * d[55] + 2 * d[4] * d[33] * d[41] * d[55] - 2 * d[0] * d[35] * d[41] * d[55] - 2 * d[3] * d[29] * d[42] * d[55] - 2 * d[2] * d[30] * d[42] * d[55] + 2 * d[5] * d[31] * d[42] * d[55] + 2 * d[4] * d[32] * d[42] * d[55] + 2 * d[2] * d[27] * d[43] * d[55] + 2 * d[0] * d[29] * d[43] * d[55] - 4 * d[4] * d[31] * d[43] * d[55] - 2 * d[5] * d[27] * d[44] * d[55] + 2 * d[4] * d[30] * d[44] * d[55] + 2 * d[3] * d[31] * d[44] * d[55] - 2 * d[0] * d[32] * d[44] * d[55] - 2 * d[30] * d[38] * d[54] * d[55] - 2 * d[29] * d[39] * d[54] * d[55] + 2 * d[32] * d[40] * d[54] * d[55] + 2 * d[31] * d[41] * d[54] * d[55] + d[29] * d[36] * std::pow(d[55], 2) + d[27] * d[38] * std::pow(d[55], 2) - 2 * d[31] * d[40] * std::pow(d[55], 2) + 2 * d[8] * d[28] * d[36] * d[56] - 2 * d[7] * d[32] * d[36] * d[56] - 2 * d[5] * d[34] * d[36] * d[56] + 2 * d[1] * d[35] * d[36] * d[56] + 2 * d[8] * d[27] * d[37] * d[56] - 2 * d[6] * d[31] * d[37] * d[56] - 2 * d[4] * d[33] * d[37] * d[56] + 2 * d[0] * d[35] * d[37] * d[56] - 4 * d[8] * d[30] * d[39] * d[56] + 2 * d[7] * d[31] * d[39] * d[56] + 2 * d[6] * d[32] * d[39] * d[56] + 2 * d[5] * d[33] * d[39] * d[56] + 2 * d[4] * d[34] * d[39] * d[56] - 4 * d[3] * d[35] * d[39] * d[56] - 2 * d[6] * d[28] * d[40] * d[56] + 2 * d[7] * d[30] * d[40] * d[56] - 2 * d[1] * d[33] * d[40] * d[56] + 2 * d[3] * d[34] * d[40] * d[56] - 2 * d[7] * d[27] * d[41] * d[56] + 2 * d[6] * d[30] * d[41] * d[56] + 2 * d[3] * d[33] * d[41] * d[56] - 2 * d[0] * d[34] * d[41] * d[56] - 2 * d[4] * d[28] * d[42] * d[56] + 2 * d[5] * d[30] * d[42] * d[56] - 2 * d[1] * d[31] * d[42] * d[56] + 2 * d[3] * d[32] * d[42] * d[56] - 2 * d[5] * d[27] * d[43] * d[56] + 2 * d[4] * d[30] * d[43] * d[56] + 2 * d[3] * d[31] * d[43] * d[56] - 2 * d[0] * d[32] * d[43] * d[56] + 2 * d[1] * d[27] * d[44] * d[56] + 2 * d[0] * d[28] * d[44] * d[56] - 4 * d[3] * d[30] * d[44] * d[56] - 2 * d[31] * d[37] * d[54] * d[56] + 2 * d[32] * d[39] * d[54] * d[56] - 2 * d[28] * d[40] * d[54] * d[56] + 2 * d[30] * d[41] * d[54] * d[56] - 2 * d[32] * d[36] * d[55] * d[56] + 2 * d[31] * d[39] * d[55] * d[56] + 2 * d[30] * d[40] * d[55] * d[56] - 2 * d[27] * d[41] * d[55] * d[56] + d[28] * d[36] * std::pow(d[56], 2) + d[27] * d[37] * std::pow(d[56], 2) - 2 * d[30] * d[39] * std::pow(d[56], 2) - d[2] * d[28] * d[36] * d[69] - d[1] * d[29] * d[36] * d[69] + 2 * d[5] * d[32] * d[36] * d[69] - d[2] * d[27] * d[37] * d[69] - d[0] * d[29] * d[37] * d[69] + 2 * d[4] * d[31] * d[37] * d[69] - d[1] * d[27] * d[38] * d[69] - d[0] * d[28] * d[38] * d[69] + 2 * d[3] * d[30] * d[38] * d[69] + 2 * d[3] * d[29] * d[39] * d[69] + 2 * d[2] * d[30] * d[39] * d[69] - 2 * d[5] * d[31] * d[39] * d[69] - 2 * d[4] * d[32] * d[39] * d[69] + 2 * d[4] * d[28] * d[40] * d[69] - 2 * d[5] * d[30] * d[40] * d[69] + 2 * d[1] * d[31] * d[40] * d[69] - 2 * d[3] * d[32] * d[40] * d[69] + 2 * d[5] * d[27] * d[41] * d[69] - 2 * d[4] * d[30] * d[41] * d[69] - 2 * d[3] * d[31] * d[41] * d[69] + 2 * d[0] * d[32] * d[41] * d[69];
    coeffs[44] = 2 * d[6] * d[37] * d[38] * d[54] - 2 * d[7] * d[38] * d[39] * d[54] - 2 * d[8] * d[37] * d[40] * d[54] + 2 * d[8] * d[39] * d[41] * d[54] + 2 * d[7] * d[40] * d[41] * d[54] - 2 * d[6] * std::pow(d[41], 2) * d[54] + 2 * d[2] * d[37] * d[42] * d[54] + 2 * d[1] * d[38] * d[42] * d[54] - 4 * d[5] * d[41] * d[42] * d[54] - 2 * d[3] * d[38] * d[43] * d[54] - 2 * d[2] * d[39] * d[43] * d[54] + 2 * d[5] * d[40] * d[43] * d[54] + 2 * d[4] * d[41] * d[43] * d[54] - 2 * d[4] * d[37] * d[44] * d[54] + 2 * d[5] * d[39] * d[44] * d[54] - 2 * d[1] * d[40] * d[44] * d[54] + 2 * d[3] * d[41] * d[44] * d[54] + d[37] * d[38] * std::pow(d[54], 2) - std::pow(d[41], 2) * std::pow(d[54], 2) + 2 * d[7] * d[36] * d[38] * d[55] - 2 * d[6] * d[38] * d[39] * d[55] + 2 * d[8] * d[39] * d[40] * d[55] - 2 * d[7] * std::pow(d[40], 2) * d[55] - 2 * d[8] * d[36] * d[41] * d[55] + 2 * d[6] * d[40] * d[41] * d[55] - 2 * d[3] * d[38] * d[42] * d[55] - 2 * d[2] * d[39] * d[42] * d[55] + 2 * d[5] * d[40] * d[42] * d[55] + 2 * d[4] * d[41] * d[42] * d[55] + 2 * d[2] * d[36] * d[43] * d[55] + 2 * d[0] * d[38] * d[43] * d[55] - 4 * d[4] * d[40] * d[43] * d[55] - 2 * d[5] * d[36] * d[44] * d[55] + 2 * d[4] * d[39] * d[44] * d[55] + 2 * d[3] * d[40] * d[44] * d[55] - 2 * d[0] * d[41] * d[44] * d[55] - 2 * d[38] * d[39] * d[54] * d[55] + 2 * d[40] * d[41] * d[54] * d[55] + d[36] * d[38] * std::pow(d[55], 2) - std::pow(d[40], 2) * std::pow(d[55], 2) + 2 * d[8] * d[36] * d[37] * d[56] - 2 * d[8] * std::pow(d[39], 2) * d[56] - 2 * d[6] * d[37] * d[40] * d[56] + 2 * d[7] * d[39] * d[40] * d[56] - 2 * d[7] * d[36] * d[41] * d[56] + 2 * d[6] * d[39] * d[41] * d[56] - 2 * d[4] * d[37] * d[42] * d[56] + 2 * d[5] * d[39] * d[42] * d[56] - 2 * d[1] * d[40] * d[42] * d[56] + 2 * d[3] * d[41] * d[42] * d[56] - 2 * d[5] * d[36] * d[43] * d[56] + 2 * d[4] * d[39] * d[43] * d[56] + 2 * d[3] * d[40] * d[43] * d[56] - 2 * d[0] * d[41] * d[43] * d[56] + 2 * d[1] * d[36] * d[44] * d[56] + 2 * d[0] * d[37] * d[44] * d[56] - 4 * d[3] * d[39] * d[44] * d[56] - 2 * d[37] * d[40] * d[54] * d[56] + 2 * d[39] * d[41] * d[54] * d[56] + 2 * d[39] * d[40] * d[55] * d[56] - 2 * d[36] * d[41] * d[55] * d[56] + d[36] * d[37] * std::pow(d[56], 2) - std::pow(d[39], 2) * std::pow(d[56], 2) - d[2] * d[36] * d[37] * d[69] - d[1] * d[36] * d[38] * d[69] - d[0] * d[37] * d[38] * d[69] + 2 * d[3] * d[38] * d[39] * d[69] + d[2] * std::pow(d[39], 2) * d[69] + 2 * d[4] * d[37] * d[40] * d[69] - 2 * d[5] * d[39] * d[40] * d[69] + d[1] * std::pow(d[40], 2) * d[69] + 2 * d[5] * d[36] * d[41] * d[69] - 2 * d[4] * d[39] * d[41] * d[69] - 2 * d[3] * d[40] * d[41] * d[69] + d[0] * std::pow(d[41], 2) * d[69];
    coeffs[45] = 2 * d[6] * d[11] * d[46] * d[54] - 2 * d[8] * d[13] * d[46] * d[54] + 2 * d[2] * d[15] * d[46] * d[54] - 2 * d[4] * d[17] * d[46] * d[54] + 2 * d[6] * d[10] * d[47] * d[54] - 2 * d[7] * d[12] * d[47] * d[54] + 2 * d[1] * d[15] * d[47] * d[54] - 2 * d[3] * d[16] * d[47] * d[54] - 2 * d[7] * d[11] * d[48] * d[54] + 2 * d[8] * d[14] * d[48] * d[54] - 2 * d[2] * d[16] * d[48] * d[54] + 2 * d[5] * d[17] * d[48] * d[54] - 2 * d[8] * d[10] * d[49] * d[54] + 2 * d[7] * d[14] * d[49] * d[54] + 2 * d[5] * d[16] * d[49] * d[54] - 2 * d[1] * d[17] * d[49] * d[54] + 2 * d[8] * d[12] * d[50] * d[54] + 2 * d[7] * d[13] * d[50] * d[54] - 4 * d[6] * d[14] * d[50] * d[54] - 4 * d[5] * d[15] * d[50] * d[54] + 2 * d[4] * d[16] * d[50] * d[54] + 2 * d[3] * d[17] * d[50] * d[54] + 2 * d[2] * d[10] * d[51] * d[54] + 2 * d[1] * d[11] * d[51] * d[54] - 4 * d[5] * d[14] * d[51] * d[54] - 2 * d[3] * d[11] * d[52] * d[54] - 2 * d[2] * d[12] * d[52] * d[54] + 2 * d[5] * d[13] * d[52] * d[54] + 2 * d[4] * d[14] * d[52] * d[54] - 2 * d[4] * d[10] * d[53] * d[54] + 2 * d[5] * d[12] * d[53] * d[54] - 2 * d[1] * d[13] * d[53] * d[54] + 2 * d[3] * d[14] * d[53] * d[54] + d[11] * d[46] * std::pow(d[54], 2) + d[10] * d[47] * std::pow(d[54], 2) - 2 * d[14] * d[50] * std::pow(d[54], 2) + 2 * d[7] * d[11] * d[45] * d[55] - 2 * d[8] * d[14] * d[45] * d[55] + 2 * d[2] * d[16] * d[45] * d[55] - 2 * d[5] * d[17] * d[45] * d[55] + 2 * d[7] * d[9] * d[47] * d[55] - 2 * d[6] * d[12] * d[47] * d[55] - 2 * d[3] * d[15] * d[47] * d[55] + 2 * d[0] * d[16] * d[47] * d[55] - 2 * d[6] * d[11] * d[48] * d[55] + 2 * d[8] * d[13] * d[48] * d[55] - 2 * d[2] * d[15] * d[48] * d[55] + 2 * d[4] * d[17] * d[48] * d[55] + 2 * d[8] * d[12] * d[49] * d[55] - 4 * d[7] * d[13] * d[49] * d[55] + 2 * d[6] * d[14] * d[49] * d[55] + 2 * d[5] * d[15] * d[49] * d[55] - 4 * d[4] * d[16] * d[49] * d[55] + 2 * d[3] * d[17] * d[49] * d[55] - 2 * d[8] * d[9] * d[50] * d[55] + 2 * d[6] * d[13] * d[50] * d[55] + 2 * d[4] * d[15] * d[50] * d[55] - 2 * d[0] * d[17] * d[50] * d[55] - 2 * d[3] * d[11] * d[51] * d[55] - 2 * d[2] * d[12] * d[51] * d[55] + 2 * d[5] * d[13] * d[51] * d[55] + 2 * d[4] * d[14] * d[51] * d[55] + 2 * d[2] * d[9] * d[52] * d[55] + 2 * d[0] * d[11] * d[52] * d[55] - 4 * d[4] * d[13] * d[52] * d[55] - 2 * d[5] * d[9] * d[53] * d[55] + 2 * d[4] * d[12] * d[53] * d[55] + 2 * d[3] * d[13] * d[53] * d[55] - 2 * d[0] * d[14] * d[53] * d[55] - 2 * d[12] * d[47] * d[54] * d[55] - 2 * d[11] * d[48] * d[54] * d[55] + 2 * d[14] * d[49] * d[54] * d[55] + 2 * d[13] * d[50] * d[54] * d[55] + d[11] * d[45] * std::pow(d[55], 2) + d[9] * d[47] * std::pow(d[55], 2) - 2 * d[13] * d[49] * std::pow(d[55], 2) + 2 * d[8] * d[10] * d[45] * d[56] - 2 * d[7] * d[14] * d[45] * d[56] - 2 * d[5] * d[16] * d[45] * d[56] + 2 * d[1] * d[17] * d[45] * d[56] + 2 * d[8] * d[9] * d[46] * d[56] - 2 * d[6] * d[13] * d[46] * d[56] - 2 * d[4] * d[15] * d[46] * d[56] + 2 * d[0] * d[17] * d[46] * d[56] - 4 * d[8] * d[12] * d[48] * d[56] + 2 * d[7] * d[13] * d[48] * d[56] + 2 * d[6] * d[14] * d[48] * d[56] + 2 * d[5] * d[15] * d[48] * d[56] + 2 * d[4] * d[16] * d[48] * d[56] - 4 * d[3] * d[17] * d[48] * d[56] - 2 * d[6] * d[10] * d[49] * d[56] + 2 * d[7] * d[12] * d[49] * d[56] - 2 * d[1] * d[15] * d[49] * d[56] + 2 * d[3] * d[16] * d[49] * d[56] - 2 * d[7] * d[9] * d[50] * d[56] + 2 * d[6] * d[12] * d[50] * d[56] + 2 * d[3] * d[15] * d[50] * d[56] - 2 * d[0] * d[16] * d[50] * d[56] - 2 * d[4] * d[10] * d[51] * d[56] + 2 * d[5] * d[12] * d[51] * d[56] - 2 * d[1] * d[13] * d[51] * d[56] + 2 * d[3] * d[14] * d[51] * d[56] - 2 * d[5] * d[9] * d[52] * d[56] + 2 * d[4] * d[12] * d[52] * d[56] + 2 * d[3] * d[13] * d[52] * d[56] - 2 * d[0] * d[14] * d[52] * d[56] + 2 * d[1] * d[9] * d[53] * d[56] + 2 * d[0] * d[10] * d[53] * d[56] - 4 * d[3] * d[12] * d[53] * d[56] - 2 * d[13] * d[46] * d[54] * d[56] + 2 * d[14] * d[48] * d[54] * d[56] - 2 * d[10] * d[49] * d[54] * d[56] + 2 * d[12] * d[50] * d[54] * d[56] - 2 * d[14] * d[45] * d[55] * d[56] + 2 * d[13] * d[48] * d[55] * d[56] + 2 * d[12] * d[49] * d[55] * d[56] - 2 * d[9] * d[50] * d[55] * d[56] + d[10] * d[45] * std::pow(d[56], 2) + d[9] * d[46] * std::pow(d[56], 2) - 2 * d[12] * d[48] * std::pow(d[56], 2) - d[2] * d[10] * d[45] * d[69] - d[1] * d[11] * d[45] * d[69] + 2 * d[5] * d[14] * d[45] * d[69] - d[2] * d[9] * d[46] * d[69] - d[0] * d[11] * d[46] * d[69] + 2 * d[4] * d[13] * d[46] * d[69] - d[1] * d[9] * d[47] * d[69] - d[0] * d[10] * d[47] * d[69] + 2 * d[3] * d[12] * d[47] * d[69] + 2 * d[3] * d[11] * d[48] * d[69] + 2 * d[2] * d[12] * d[48] * d[69] - 2 * d[5] * d[13] * d[48] * d[69] - 2 * d[4] * d[14] * d[48] * d[69] + 2 * d[4] * d[10] * d[49] * d[69] - 2 * d[5] * d[12] * d[49] * d[69] + 2 * d[1] * d[13] * d[49] * d[69] - 2 * d[3] * d[14] * d[49] * d[69] + 2 * d[5] * d[9] * d[50] * d[69] - 2 * d[4] * d[12] * d[50] * d[69] - 2 * d[3] * d[13] * d[50] * d[69] + 2 * d[0] * d[14] * d[50] * d[69];
    coeffs[46] = 2 * d[6] * d[20] * d[46] * d[54] - 2 * d[8] * d[22] * d[46] * d[54] + 2 * d[2] * d[24] * d[46] * d[54] - 2 * d[4] * d[26] * d[46] * d[54] + 2 * d[6] * d[19] * d[47] * d[54] - 2 * d[7] * d[21] * d[47] * d[54] + 2 * d[1] * d[24] * d[47] * d[54] - 2 * d[3] * d[25] * d[47] * d[54] - 2 * d[7] * d[20] * d[48] * d[54] + 2 * d[8] * d[23] * d[48] * d[54] - 2 * d[2] * d[25] * d[48] * d[54] + 2 * d[5] * d[26] * d[48] * d[54] - 2 * d[8] * d[19] * d[49] * d[54] + 2 * d[7] * d[23] * d[49] * d[54] + 2 * d[5] * d[25] * d[49] * d[54] - 2 * d[1] * d[26] * d[49] * d[54] + 2 * d[8] * d[21] * d[50] * d[54] + 2 * d[7] * d[22] * d[50] * d[54] - 4 * d[6] * d[23] * d[50] * d[54] - 4 * d[5] * d[24] * d[50] * d[54] + 2 * d[4] * d[25] * d[50] * d[54] + 2 * d[3] * d[26] * d[50] * d[54] + 2 * d[2] * d[19] * d[51] * d[54] + 2 * d[1] * d[20] * d[51] * d[54] - 4 * d[5] * d[23] * d[51] * d[54] - 2 * d[3] * d[20] * d[52] * d[54] - 2 * d[2] * d[21] * d[52] * d[54] + 2 * d[5] * d[22] * d[52] * d[54] + 2 * d[4] * d[23] * d[52] * d[54] - 2 * d[4] * d[19] * d[53] * d[54] + 2 * d[5] * d[21] * d[53] * d[54] - 2 * d[1] * d[22] * d[53] * d[54] + 2 * d[3] * d[23] * d[53] * d[54] + d[20] * d[46] * std::pow(d[54], 2) + d[19] * d[47] * std::pow(d[54], 2) - 2 * d[23] * d[50] * std::pow(d[54], 2) + 2 * d[7] * d[20] * d[45] * d[55] - 2 * d[8] * d[23] * d[45] * d[55] + 2 * d[2] * d[25] * d[45] * d[55] - 2 * d[5] * d[26] * d[45] * d[55] + 2 * d[7] * d[18] * d[47] * d[55] - 2 * d[6] * d[21] * d[47] * d[55] - 2 * d[3] * d[24] * d[47] * d[55] + 2 * d[0] * d[25] * d[47] * d[55] - 2 * d[6] * d[20] * d[48] * d[55] + 2 * d[8] * d[22] * d[48] * d[55] - 2 * d[2] * d[24] * d[48] * d[55] + 2 * d[4] * d[26] * d[48] * d[55] + 2 * d[8] * d[21] * d[49] * d[55] - 4 * d[7] * d[22] * d[49] * d[55] + 2 * d[6] * d[23] * d[49] * d[55] + 2 * d[5] * d[24] * d[49] * d[55] - 4 * d[4] * d[25] * d[49] * d[55] + 2 * d[3] * d[26] * d[49] * d[55] - 2 * d[8] * d[18] * d[50] * d[55] + 2 * d[6] * d[22] * d[50] * d[55] + 2 * d[4] * d[24] * d[50] * d[55] - 2 * d[0] * d[26] * d[50] * d[55] - 2 * d[3] * d[20] * d[51] * d[55] - 2 * d[2] * d[21] * d[51] * d[55] + 2 * d[5] * d[22] * d[51] * d[55] + 2 * d[4] * d[23] * d[51] * d[55] + 2 * d[2] * d[18] * d[52] * d[55] + 2 * d[0] * d[20] * d[52] * d[55] - 4 * d[4] * d[22] * d[52] * d[55] - 2 * d[5] * d[18] * d[53] * d[55] + 2 * d[4] * d[21] * d[53] * d[55] + 2 * d[3] * d[22] * d[53] * d[55] - 2 * d[0] * d[23] * d[53] * d[55] - 2 * d[21] * d[47] * d[54] * d[55] - 2 * d[20] * d[48] * d[54] * d[55] + 2 * d[23] * d[49] * d[54] * d[55] + 2 * d[22] * d[50] * d[54] * d[55] + d[20] * d[45] * std::pow(d[55], 2) + d[18] * d[47] * std::pow(d[55], 2) - 2 * d[22] * d[49] * std::pow(d[55], 2) + 2 * d[8] * d[19] * d[45] * d[56] - 2 * d[7] * d[23] * d[45] * d[56] - 2 * d[5] * d[25] * d[45] * d[56] + 2 * d[1] * d[26] * d[45] * d[56] + 2 * d[8] * d[18] * d[46] * d[56] - 2 * d[6] * d[22] * d[46] * d[56] - 2 * d[4] * d[24] * d[46] * d[56] + 2 * d[0] * d[26] * d[46] * d[56] - 4 * d[8] * d[21] * d[48] * d[56] + 2 * d[7] * d[22] * d[48] * d[56] + 2 * d[6] * d[23] * d[48] * d[56] + 2 * d[5] * d[24] * d[48] * d[56] + 2 * d[4] * d[25] * d[48] * d[56] - 4 * d[3] * d[26] * d[48] * d[56] - 2 * d[6] * d[19] * d[49] * d[56] + 2 * d[7] * d[21] * d[49] * d[56] - 2 * d[1] * d[24] * d[49] * d[56] + 2 * d[3] * d[25] * d[49] * d[56] - 2 * d[7] * d[18] * d[50] * d[56] + 2 * d[6] * d[21] * d[50] * d[56] + 2 * d[3] * d[24] * d[50] * d[56] - 2 * d[0] * d[25] * d[50] * d[56] - 2 * d[4] * d[19] * d[51] * d[56] + 2 * d[5] * d[21] * d[51] * d[56] - 2 * d[1] * d[22] * d[51] * d[56] + 2 * d[3] * d[23] * d[51] * d[56] - 2 * d[5] * d[18] * d[52] * d[56] + 2 * d[4] * d[21] * d[52] * d[56] + 2 * d[3] * d[22] * d[52] * d[56] - 2 * d[0] * d[23] * d[52] * d[56] + 2 * d[1] * d[18] * d[53] * d[56] + 2 * d[0] * d[19] * d[53] * d[56] - 4 * d[3] * d[21] * d[53] * d[56] - 2 * d[22] * d[46] * d[54] * d[56] + 2 * d[23] * d[48] * d[54] * d[56] - 2 * d[19] * d[49] * d[54] * d[56] + 2 * d[21] * d[50] * d[54] * d[56] - 2 * d[23] * d[45] * d[55] * d[56] + 2 * d[22] * d[48] * d[55] * d[56] + 2 * d[21] * d[49] * d[55] * d[56] - 2 * d[18] * d[50] * d[55] * d[56] + d[19] * d[45] * std::pow(d[56], 2) + d[18] * d[46] * std::pow(d[56], 2) - 2 * d[21] * d[48] * std::pow(d[56], 2) - d[2] * d[19] * d[45] * d[69] - d[1] * d[20] * d[45] * d[69] + 2 * d[5] * d[23] * d[45] * d[69] - d[2] * d[18] * d[46] * d[69] - d[0] * d[20] * d[46] * d[69] + 2 * d[4] * d[22] * d[46] * d[69] - d[1] * d[18] * d[47] * d[69] - d[0] * d[19] * d[47] * d[69] + 2 * d[3] * d[21] * d[47] * d[69] + 2 * d[3] * d[20] * d[48] * d[69] + 2 * d[2] * d[21] * d[48] * d[69] - 2 * d[5] * d[22] * d[48] * d[69] - 2 * d[4] * d[23] * d[48] * d[69] + 2 * d[4] * d[19] * d[49] * d[69] - 2 * d[5] * d[21] * d[49] * d[69] + 2 * d[1] * d[22] * d[49] * d[69] - 2 * d[3] * d[23] * d[49] * d[69] + 2 * d[5] * d[18] * d[50] * d[69] - 2 * d[4] * d[21] * d[50] * d[69] - 2 * d[3] * d[22] * d[50] * d[69] + 2 * d[0] * d[23] * d[50] * d[69];
    coeffs[47] = 2 * d[6] * d[29] * d[46] * d[54] - 2 * d[8] * d[31] * d[46] * d[54] + 2 * d[2] * d[33] * d[46] * d[54] - 2 * d[4] * d[35] * d[46] * d[54] + 2 * d[6] * d[28] * d[47] * d[54] - 2 * d[7] * d[30] * d[47] * d[54] + 2 * d[1] * d[33] * d[47] * d[54] - 2 * d[3] * d[34] * d[47] * d[54] - 2 * d[7] * d[29] * d[48] * d[54] + 2 * d[8] * d[32] * d[48] * d[54] - 2 * d[2] * d[34] * d[48] * d[54] + 2 * d[5] * d[35] * d[48] * d[54] - 2 * d[8] * d[28] * d[49] * d[54] + 2 * d[7] * d[32] * d[49] * d[54] + 2 * d[5] * d[34] * d[49] * d[54] - 2 * d[1] * d[35] * d[49] * d[54] + 2 * d[8] * d[30] * d[50] * d[54] + 2 * d[7] * d[31] * d[50] * d[54] - 4 * d[6] * d[32] * d[50] * d[54] - 4 * d[5] * d[33] * d[50] * d[54] + 2 * d[4] * d[34] * d[50] * d[54] + 2 * d[3] * d[35] * d[50] * d[54] + 2 * d[2] * d[28] * d[51] * d[54] + 2 * d[1] * d[29] * d[51] * d[54] - 4 * d[5] * d[32] * d[51] * d[54] - 2 * d[3] * d[29] * d[52] * d[54] - 2 * d[2] * d[30] * d[52] * d[54] + 2 * d[5] * d[31] * d[52] * d[54] + 2 * d[4] * d[32] * d[52] * d[54] - 2 * d[4] * d[28] * d[53] * d[54] + 2 * d[5] * d[30] * d[53] * d[54] - 2 * d[1] * d[31] * d[53] * d[54] + 2 * d[3] * d[32] * d[53] * d[54] + d[29] * d[46] * std::pow(d[54], 2) + d[28] * d[47] * std::pow(d[54], 2) - 2 * d[32] * d[50] * std::pow(d[54], 2) + 2 * d[7] * d[29] * d[45] * d[55] - 2 * d[8] * d[32] * d[45] * d[55] + 2 * d[2] * d[34] * d[45] * d[55] - 2 * d[5] * d[35] * d[45] * d[55] + 2 * d[7] * d[27] * d[47] * d[55] - 2 * d[6] * d[30] * d[47] * d[55] - 2 * d[3] * d[33] * d[47] * d[55] + 2 * d[0] * d[34] * d[47] * d[55] - 2 * d[6] * d[29] * d[48] * d[55] + 2 * d[8] * d[31] * d[48] * d[55] - 2 * d[2] * d[33] * d[48] * d[55] + 2 * d[4] * d[35] * d[48] * d[55] + 2 * d[8] * d[30] * d[49] * d[55] - 4 * d[7] * d[31] * d[49] * d[55] + 2 * d[6] * d[32] * d[49] * d[55] + 2 * d[5] * d[33] * d[49] * d[55] - 4 * d[4] * d[34] * d[49] * d[55] + 2 * d[3] * d[35] * d[49] * d[55] - 2 * d[8] * d[27] * d[50] * d[55] + 2 * d[6] * d[31] * d[50] * d[55] + 2 * d[4] * d[33] * d[50] * d[55] - 2 * d[0] * d[35] * d[50] * d[55] - 2 * d[3] * d[29] * d[51] * d[55] - 2 * d[2] * d[30] * d[51] * d[55] + 2 * d[5] * d[31] * d[51] * d[55] + 2 * d[4] * d[32] * d[51] * d[55] + 2 * d[2] * d[27] * d[52] * d[55] + 2 * d[0] * d[29] * d[52] * d[55] - 4 * d[4] * d[31] * d[52] * d[55] - 2 * d[5] * d[27] * d[53] * d[55] + 2 * d[4] * d[30] * d[53] * d[55] + 2 * d[3] * d[31] * d[53] * d[55] - 2 * d[0] * d[32] * d[53] * d[55] - 2 * d[30] * d[47] * d[54] * d[55] - 2 * d[29] * d[48] * d[54] * d[55] + 2 * d[32] * d[49] * d[54] * d[55] + 2 * d[31] * d[50] * d[54] * d[55] + d[29] * d[45] * std::pow(d[55], 2) + d[27] * d[47] * std::pow(d[55], 2) - 2 * d[31] * d[49] * std::pow(d[55], 2) + 2 * d[8] * d[28] * d[45] * d[56] - 2 * d[7] * d[32] * d[45] * d[56] - 2 * d[5] * d[34] * d[45] * d[56] + 2 * d[1] * d[35] * d[45] * d[56] + 2 * d[8] * d[27] * d[46] * d[56] - 2 * d[6] * d[31] * d[46] * d[56] - 2 * d[4] * d[33] * d[46] * d[56] + 2 * d[0] * d[35] * d[46] * d[56] - 4 * d[8] * d[30] * d[48] * d[56] + 2 * d[7] * d[31] * d[48] * d[56] + 2 * d[6] * d[32] * d[48] * d[56] + 2 * d[5] * d[33] * d[48] * d[56] + 2 * d[4] * d[34] * d[48] * d[56] - 4 * d[3] * d[35] * d[48] * d[56] - 2 * d[6] * d[28] * d[49] * d[56] + 2 * d[7] * d[30] * d[49] * d[56] - 2 * d[1] * d[33] * d[49] * d[56] + 2 * d[3] * d[34] * d[49] * d[56] - 2 * d[7] * d[27] * d[50] * d[56] + 2 * d[6] * d[30] * d[50] * d[56] + 2 * d[3] * d[33] * d[50] * d[56] - 2 * d[0] * d[34] * d[50] * d[56] - 2 * d[4] * d[28] * d[51] * d[56] + 2 * d[5] * d[30] * d[51] * d[56] - 2 * d[1] * d[31] * d[51] * d[56] + 2 * d[3] * d[32] * d[51] * d[56] - 2 * d[5] * d[27] * d[52] * d[56] + 2 * d[4] * d[30] * d[52] * d[56] + 2 * d[3] * d[31] * d[52] * d[56] - 2 * d[0] * d[32] * d[52] * d[56] + 2 * d[1] * d[27] * d[53] * d[56] + 2 * d[0] * d[28] * d[53] * d[56] - 4 * d[3] * d[30] * d[53] * d[56] - 2 * d[31] * d[46] * d[54] * d[56] + 2 * d[32] * d[48] * d[54] * d[56] - 2 * d[28] * d[49] * d[54] * d[56] + 2 * d[30] * d[50] * d[54] * d[56] - 2 * d[32] * d[45] * d[55] * d[56] + 2 * d[31] * d[48] * d[55] * d[56] + 2 * d[30] * d[49] * d[55] * d[56] - 2 * d[27] * d[50] * d[55] * d[56] + d[28] * d[45] * std::pow(d[56], 2) + d[27] * d[46] * std::pow(d[56], 2) - 2 * d[30] * d[48] * std::pow(d[56], 2) - d[2] * d[28] * d[45] * d[69] - d[1] * d[29] * d[45] * d[69] + 2 * d[5] * d[32] * d[45] * d[69] - d[2] * d[27] * d[46] * d[69] - d[0] * d[29] * d[46] * d[69] + 2 * d[4] * d[31] * d[46] * d[69] - d[1] * d[27] * d[47] * d[69] - d[0] * d[28] * d[47] * d[69] + 2 * d[3] * d[30] * d[47] * d[69] + 2 * d[3] * d[29] * d[48] * d[69] + 2 * d[2] * d[30] * d[48] * d[69] - 2 * d[5] * d[31] * d[48] * d[69] - 2 * d[4] * d[32] * d[48] * d[69] + 2 * d[4] * d[28] * d[49] * d[69] - 2 * d[5] * d[30] * d[49] * d[69] + 2 * d[1] * d[31] * d[49] * d[69] - 2 * d[3] * d[32] * d[49] * d[69] + 2 * d[5] * d[27] * d[50] * d[69] - 2 * d[4] * d[30] * d[50] * d[69] - 2 * d[3] * d[31] * d[50] * d[69] + 2 * d[0] * d[32] * d[50] * d[69];
    coeffs[48] = 2 * d[6] * d[38] * d[46] * d[54] - 2 * d[8] * d[40] * d[46] * d[54] + 2 * d[2] * d[42] * d[46] * d[54] - 2 * d[4] * d[44] * d[46] * d[54] + 2 * d[6] * d[37] * d[47] * d[54] - 2 * d[7] * d[39] * d[47] * d[54] + 2 * d[1] * d[42] * d[47] * d[54] - 2 * d[3] * d[43] * d[47] * d[54] - 2 * d[7] * d[38] * d[48] * d[54] + 2 * d[8] * d[41] * d[48] * d[54] - 2 * d[2] * d[43] * d[48] * d[54] + 2 * d[5] * d[44] * d[48] * d[54] - 2 * d[8] * d[37] * d[49] * d[54] + 2 * d[7] * d[41] * d[49] * d[54] + 2 * d[5] * d[43] * d[49] * d[54] - 2 * d[1] * d[44] * d[49] * d[54] + 2 * d[8] * d[39] * d[50] * d[54] + 2 * d[7] * d[40] * d[50] * d[54] - 4 * d[6] * d[41] * d[50] * d[54] - 4 * d[5] * d[42] * d[50] * d[54] + 2 * d[4] * d[43] * d[50] * d[54] + 2 * d[3] * d[44] * d[50] * d[54] + 2 * d[2] * d[37] * d[51] * d[54] + 2 * d[1] * d[38] * d[51] * d[54] - 4 * d[5] * d[41] * d[51] * d[54] - 2 * d[3] * d[38] * d[52] * d[54] - 2 * d[2] * d[39] * d[52] * d[54] + 2 * d[5] * d[40] * d[52] * d[54] + 2 * d[4] * d[41] * d[52] * d[54] - 2 * d[4] * d[37] * d[53] * d[54] + 2 * d[5] * d[39] * d[53] * d[54] - 2 * d[1] * d[40] * d[53] * d[54] + 2 * d[3] * d[41] * d[53] * d[54] + d[38] * d[46] * std::pow(d[54], 2) + d[37] * d[47] * std::pow(d[54], 2) - 2 * d[41] * d[50] * std::pow(d[54], 2) + 2 * d[7] * d[38] * d[45] * d[55] - 2 * d[8] * d[41] * d[45] * d[55] + 2 * d[2] * d[43] * d[45] * d[55] - 2 * d[5] * d[44] * d[45] * d[55] + 2 * d[7] * d[36] * d[47] * d[55] - 2 * d[6] * d[39] * d[47] * d[55] - 2 * d[3] * d[42] * d[47] * d[55] + 2 * d[0] * d[43] * d[47] * d[55] - 2 * d[6] * d[38] * d[48] * d[55] + 2 * d[8] * d[40] * d[48] * d[55] - 2 * d[2] * d[42] * d[48] * d[55] + 2 * d[4] * d[44] * d[48] * d[55] + 2 * d[8] * d[39] * d[49] * d[55] - 4 * d[7] * d[40] * d[49] * d[55] + 2 * d[6] * d[41] * d[49] * d[55] + 2 * d[5] * d[42] * d[49] * d[55] - 4 * d[4] * d[43] * d[49] * d[55] + 2 * d[3] * d[44] * d[49] * d[55] - 2 * d[8] * d[36] * d[50] * d[55] + 2 * d[6] * d[40] * d[50] * d[55] + 2 * d[4] * d[42] * d[50] * d[55] - 2 * d[0] * d[44] * d[50] * d[55] - 2 * d[3] * d[38] * d[51] * d[55] - 2 * d[2] * d[39] * d[51] * d[55] + 2 * d[5] * d[40] * d[51] * d[55] + 2 * d[4] * d[41] * d[51] * d[55] + 2 * d[2] * d[36] * d[52] * d[55] + 2 * d[0] * d[38] * d[52] * d[55] - 4 * d[4] * d[40] * d[52] * d[55] - 2 * d[5] * d[36] * d[53] * d[55] + 2 * d[4] * d[39] * d[53] * d[55] + 2 * d[3] * d[40] * d[53] * d[55] - 2 * d[0] * d[41] * d[53] * d[55] - 2 * d[39] * d[47] * d[54] * d[55] - 2 * d[38] * d[48] * d[54] * d[55] + 2 * d[41] * d[49] * d[54] * d[55] + 2 * d[40] * d[50] * d[54] * d[55] + d[38] * d[45] * std::pow(d[55], 2) + d[36] * d[47] * std::pow(d[55], 2) - 2 * d[40] * d[49] * std::pow(d[55], 2) + 2 * d[8] * d[37] * d[45] * d[56] - 2 * d[7] * d[41] * d[45] * d[56] - 2 * d[5] * d[43] * d[45] * d[56] + 2 * d[1] * d[44] * d[45] * d[56] + 2 * d[8] * d[36] * d[46] * d[56] - 2 * d[6] * d[40] * d[46] * d[56] - 2 * d[4] * d[42] * d[46] * d[56] + 2 * d[0] * d[44] * d[46] * d[56] - 4 * d[8] * d[39] * d[48] * d[56] + 2 * d[7] * d[40] * d[48] * d[56] + 2 * d[6] * d[41] * d[48] * d[56] + 2 * d[5] * d[42] * d[48] * d[56] + 2 * d[4] * d[43] * d[48] * d[56] - 4 * d[3] * d[44] * d[48] * d[56] - 2 * d[6] * d[37] * d[49] * d[56] + 2 * d[7] * d[39] * d[49] * d[56] - 2 * d[1] * d[42] * d[49] * d[56] + 2 * d[3] * d[43] * d[49] * d[56] - 2 * d[7] * d[36] * d[50] * d[56] + 2 * d[6] * d[39] * d[50] * d[56] + 2 * d[3] * d[42] * d[50] * d[56] - 2 * d[0] * d[43] * d[50] * d[56] - 2 * d[4] * d[37] * d[51] * d[56] + 2 * d[5] * d[39] * d[51] * d[56] - 2 * d[1] * d[40] * d[51] * d[56] + 2 * d[3] * d[41] * d[51] * d[56] - 2 * d[5] * d[36] * d[52] * d[56] + 2 * d[4] * d[39] * d[52] * d[56] + 2 * d[3] * d[40] * d[52] * d[56] - 2 * d[0] * d[41] * d[52] * d[56] + 2 * d[1] * d[36] * d[53] * d[56] + 2 * d[0] * d[37] * d[53] * d[56] - 4 * d[3] * d[39] * d[53] * d[56] - 2 * d[40] * d[46] * d[54] * d[56] + 2 * d[41] * d[48] * d[54] * d[56] - 2 * d[37] * d[49] * d[54] * d[56] + 2 * d[39] * d[50] * d[54] * d[56] - 2 * d[41] * d[45] * d[55] * d[56] + 2 * d[40] * d[48] * d[55] * d[56] + 2 * d[39] * d[49] * d[55] * d[56] - 2 * d[36] * d[50] * d[55] * d[56] + d[37] * d[45] * std::pow(d[56], 2) + d[36] * d[46] * std::pow(d[56], 2) - 2 * d[39] * d[48] * std::pow(d[56], 2) - d[2] * d[37] * d[45] * d[69] - d[1] * d[38] * d[45] * d[69] + 2 * d[5] * d[41] * d[45] * d[69] - d[2] * d[36] * d[46] * d[69] - d[0] * d[38] * d[46] * d[69] + 2 * d[4] * d[40] * d[46] * d[69] - d[1] * d[36] * d[47] * d[69] - d[0] * d[37] * d[47] * d[69] + 2 * d[3] * d[39] * d[47] * d[69] + 2 * d[3] * d[38] * d[48] * d[69] + 2 * d[2] * d[39] * d[48] * d[69] - 2 * d[5] * d[40] * d[48] * d[69] - 2 * d[4] * d[41] * d[48] * d[69] + 2 * d[4] * d[37] * d[49] * d[69] - 2 * d[5] * d[39] * d[49] * d[69] + 2 * d[1] * d[40] * d[49] * d[69] - 2 * d[3] * d[41] * d[49] * d[69] + 2 * d[5] * d[36] * d[50] * d[69] - 2 * d[4] * d[39] * d[50] * d[69] - 2 * d[3] * d[40] * d[50] * d[69] + 2 * d[0] * d[41] * d[50] * d[69];
    coeffs[49] = 2 * d[6] * d[46] * d[47] * d[54] - 2 * d[7] * d[47] * d[48] * d[54] - 2 * d[8] * d[46] * d[49] * d[54] + 2 * d[8] * d[48] * d[50] * d[54] + 2 * d[7] * d[49] * d[50] * d[54] - 2 * d[6] * std::pow(d[50], 2) * d[54] + 2 * d[2] * d[46] * d[51] * d[54] + 2 * d[1] * d[47] * d[51] * d[54] - 4 * d[5] * d[50] * d[51] * d[54] - 2 * d[3] * d[47] * d[52] * d[54] - 2 * d[2] * d[48] * d[52] * d[54] + 2 * d[5] * d[49] * d[52] * d[54] + 2 * d[4] * d[50] * d[52] * d[54] - 2 * d[4] * d[46] * d[53] * d[54] + 2 * d[5] * d[48] * d[53] * d[54] - 2 * d[1] * d[49] * d[53] * d[54] + 2 * d[3] * d[50] * d[53] * d[54] + d[46] * d[47] * std::pow(d[54], 2) - std::pow(d[50], 2) * std::pow(d[54], 2) + 2 * d[7] * d[45] * d[47] * d[55] - 2 * d[6] * d[47] * d[48] * d[55] + 2 * d[8] * d[48] * d[49] * d[55] - 2 * d[7] * std::pow(d[49], 2) * d[55] - 2 * d[8] * d[45] * d[50] * d[55] + 2 * d[6] * d[49] * d[50] * d[55] - 2 * d[3] * d[47] * d[51] * d[55] - 2 * d[2] * d[48] * d[51] * d[55] + 2 * d[5] * d[49] * d[51] * d[55] + 2 * d[4] * d[50] * d[51] * d[55] + 2 * d[2] * d[45] * d[52] * d[55] + 2 * d[0] * d[47] * d[52] * d[55] - 4 * d[4] * d[49] * d[52] * d[55] - 2 * d[5] * d[45] * d[53] * d[55] + 2 * d[4] * d[48] * d[53] * d[55] + 2 * d[3] * d[49] * d[53] * d[55] - 2 * d[0] * d[50] * d[53] * d[55] - 2 * d[47] * d[48] * d[54] * d[55] + 2 * d[49] * d[50] * d[54] * d[55] + d[45] * d[47] * std::pow(d[55], 2) - std::pow(d[49], 2) * std::pow(d[55], 2) + 2 * d[8] * d[45] * d[46] * d[56] - 2 * d[8] * std::pow(d[48], 2) * d[56] - 2 * d[6] * d[46] * d[49] * d[56] + 2 * d[7] * d[48] * d[49] * d[56] - 2 * d[7] * d[45] * d[50] * d[56] + 2 * d[6] * d[48] * d[50] * d[56] - 2 * d[4] * d[46] * d[51] * d[56] + 2 * d[5] * d[48] * d[51] * d[56] - 2 * d[1] * d[49] * d[51] * d[56] + 2 * d[3] * d[50] * d[51] * d[56] - 2 * d[5] * d[45] * d[52] * d[56] + 2 * d[4] * d[48] * d[52] * d[56] + 2 * d[3] * d[49] * d[52] * d[56] - 2 * d[0] * d[50] * d[52] * d[56] + 2 * d[1] * d[45] * d[53] * d[56] + 2 * d[0] * d[46] * d[53] * d[56] - 4 * d[3] * d[48] * d[53] * d[56] - 2 * d[46] * d[49] * d[54] * d[56] + 2 * d[48] * d[50] * d[54] * d[56] + 2 * d[48] * d[49] * d[55] * d[56] - 2 * d[45] * d[50] * d[55] * d[56] + d[45] * d[46] * std::pow(d[56], 2) - std::pow(d[48], 2) * std::pow(d[56], 2) - d[2] * d[45] * d[46] * d[69] - d[1] * d[45] * d[47] * d[69] - d[0] * d[46] * d[47] * d[69] + 2 * d[3] * d[47] * d[48] * d[69] + d[2] * std::pow(d[48], 2) * d[69] + 2 * d[4] * d[46] * d[49] * d[69] - 2 * d[5] * d[48] * d[49] * d[69] + d[1] * std::pow(d[49], 2) * d[69] + 2 * d[5] * d[45] * d[50] * d[69] - 2 * d[4] * d[48] * d[50] * d[69] - 2 * d[3] * d[49] * d[50] * d[69] + d[0] * std::pow(d[50], 2) * d[69];
    coeffs[50] = 2 * d[2] * d[6] * d[10] * d[54] - 2 * d[4] * d[8] * d[10] * d[54] + 2 * d[1] * d[6] * d[11] * d[54] - 2 * d[3] * d[7] * d[11] * d[54] - 2 * d[2] * d[7] * d[12] * d[54] + 2 * d[5] * d[8] * d[12] * d[54] + 2 * d[5] * d[7] * d[13] * d[54] - 2 * d[1] * d[8] * d[13] * d[54] - 4 * d[5] * d[6] * d[14] * d[54] + 2 * d[4] * d[7] * d[14] * d[54] + 2 * d[3] * d[8] * d[14] * d[54] + 2 * d[1] * d[2] * d[15] * d[54] - 2 * std::pow(d[5], 2) * d[15] * d[54] - 2 * d[2] * d[3] * d[16] * d[54] + 2 * d[4] * d[5] * d[16] * d[54] - 2 * d[1] * d[4] * d[17] * d[54] + 2 * d[3] * d[5] * d[17] * d[54] + d[2] * d[10] * std::pow(d[54], 2) + d[1] * d[11] * std::pow(d[54], 2) - 2 * d[5] * d[14] * std::pow(d[54], 2) + 2 * d[2] * d[7] * d[9] * d[55] - 2 * d[5] * d[8] * d[9] * d[55] - 2 * d[3] * d[6] * d[11] * d[55] + 2 * d[0] * d[7] * d[11] * d[55] - 2 * d[2] * d[6] * d[12] * d[55] + 2 * d[4] * d[8] * d[12] * d[55] + 2 * d[5] * d[6] * d[13] * d[55] - 4 * d[4] * d[7] * d[13] * d[55] + 2 * d[3] * d[8] * d[13] * d[55] + 2 * d[4] * d[6] * d[14] * d[55] - 2 * d[0] * d[8] * d[14] * d[55] - 2 * d[2] * d[3] * d[15] * d[55] + 2 * d[4] * d[5] * d[15] * d[55] + 2 * d[0] * d[2] * d[16] * d[55] - 2 * std::pow(d[4], 2) * d[16] * d[55] + 2 * d[3] * d[4] * d[17] * d[55] - 2 * d[0] * d[5] * d[17] * d[55] - 2 * d[3] * d[11] * d[54] * d[55] - 2 * d[2] * d[12] * d[54] * d[55] + 2 * d[5] * d[13] * d[54] * d[55] + 2 * d[4] * d[14] * d[54] * d[55] + d[2] * d[9] * std::pow(d[55], 2) + d[0] * d[11] * std::pow(d[55], 2) - 2 * d[4] * d[13] * std::pow(d[55], 2) - 2 * d[5] * d[7] * d[9] * d[56] + 2 * d[1] * d[8] * d[9] * d[56] - 2 * d[4] * d[6] * d[10] * d[56] + 2 * d[0] * d[8] * d[10] * d[56] + 2 * d[5] * d[6] * d[12] * d[56] + 2 * d[4] * d[7] * d[12] * d[56] - 4 * d[3] * d[8] * d[12] * d[56] - 2 * d[1] * d[6] * d[13] * d[56] + 2 * d[3] * d[7] * d[13] * d[56] + 2 * d[3] * d[6] * d[14] * d[56] - 2 * d[0] * d[7] * d[14] * d[56] - 2 * d[1] * d[4] * d[15] * d[56] + 2 * d[3] * d[5] * d[15] * d[56] + 2 * d[3] * d[4] * d[16] * d[56] - 2 * d[0] * d[5] * d[16] * d[56] + 2 * d[0] * d[1] * d[17] * d[56] - 2 * std::pow(d[3], 2) * d[17] * d[56] - 2 * d[4] * d[10] * d[54] * d[56] + 2 * d[5] * d[12] * d[54] * d[56] - 2 * d[1] * d[13] * d[54] * d[56] + 2 * d[3] * d[14] * d[54] * d[56] - 2 * d[5] * d[9] * d[55] * d[56] + 2 * d[4] * d[12] * d[55] * d[56] + 2 * d[3] * d[13] * d[55] * d[56] - 2 * d[0] * d[14] * d[55] * d[56] + d[1] * d[9] * std::pow(d[56], 2) + d[0] * d[10] * std::pow(d[56], 2) - 2 * d[3] * d[12] * std::pow(d[56], 2) - d[1] * d[2] * d[9] * d[69] + std::pow(d[5], 2) * d[9] * d[69] - d[0] * d[2] * d[10] * d[69] + std::pow(d[4], 2) * d[10] * d[69] - d[0] * d[1] * d[11] * d[69] + std::pow(d[3], 2) * d[11] * d[69] + 2 * d[2] * d[3] * d[12] * d[69] - 2 * d[4] * d[5] * d[12] * d[69] + 2 * d[1] * d[4] * d[13] * d[69] - 2 * d[3] * d[5] * d[13] * d[69] - 2 * d[3] * d[4] * d[14] * d[69] + 2 * d[0] * d[5] * d[14] * d[69];
    coeffs[51] = 2 * d[2] * d[6] * d[19] * d[54] - 2 * d[4] * d[8] * d[19] * d[54] + 2 * d[1] * d[6] * d[20] * d[54] - 2 * d[3] * d[7] * d[20] * d[54] - 2 * d[2] * d[7] * d[21] * d[54] + 2 * d[5] * d[8] * d[21] * d[54] + 2 * d[5] * d[7] * d[22] * d[54] - 2 * d[1] * d[8] * d[22] * d[54] - 4 * d[5] * d[6] * d[23] * d[54] + 2 * d[4] * d[7] * d[23] * d[54] + 2 * d[3] * d[8] * d[23] * d[54] + 2 * d[1] * d[2] * d[24] * d[54] - 2 * std::pow(d[5], 2) * d[24] * d[54] - 2 * d[2] * d[3] * d[25] * d[54] + 2 * d[4] * d[5] * d[25] * d[54] - 2 * d[1] * d[4] * d[26] * d[54] + 2 * d[3] * d[5] * d[26] * d[54] + d[2] * d[19] * std::pow(d[54], 2) + d[1] * d[20] * std::pow(d[54], 2) - 2 * d[5] * d[23] * std::pow(d[54], 2) + 2 * d[2] * d[7] * d[18] * d[55] - 2 * d[5] * d[8] * d[18] * d[55] - 2 * d[3] * d[6] * d[20] * d[55] + 2 * d[0] * d[7] * d[20] * d[55] - 2 * d[2] * d[6] * d[21] * d[55] + 2 * d[4] * d[8] * d[21] * d[55] + 2 * d[5] * d[6] * d[22] * d[55] - 4 * d[4] * d[7] * d[22] * d[55] + 2 * d[3] * d[8] * d[22] * d[55] + 2 * d[4] * d[6] * d[23] * d[55] - 2 * d[0] * d[8] * d[23] * d[55] - 2 * d[2] * d[3] * d[24] * d[55] + 2 * d[4] * d[5] * d[24] * d[55] + 2 * d[0] * d[2] * d[25] * d[55] - 2 * std::pow(d[4], 2) * d[25] * d[55] + 2 * d[3] * d[4] * d[26] * d[55] - 2 * d[0] * d[5] * d[26] * d[55] - 2 * d[3] * d[20] * d[54] * d[55] - 2 * d[2] * d[21] * d[54] * d[55] + 2 * d[5] * d[22] * d[54] * d[55] + 2 * d[4] * d[23] * d[54] * d[55] + d[2] * d[18] * std::pow(d[55], 2) + d[0] * d[20] * std::pow(d[55], 2) - 2 * d[4] * d[22] * std::pow(d[55], 2) - 2 * d[5] * d[7] * d[18] * d[56] + 2 * d[1] * d[8] * d[18] * d[56] - 2 * d[4] * d[6] * d[19] * d[56] + 2 * d[0] * d[8] * d[19] * d[56] + 2 * d[5] * d[6] * d[21] * d[56] + 2 * d[4] * d[7] * d[21] * d[56] - 4 * d[3] * d[8] * d[21] * d[56] - 2 * d[1] * d[6] * d[22] * d[56] + 2 * d[3] * d[7] * d[22] * d[56] + 2 * d[3] * d[6] * d[23] * d[56] - 2 * d[0] * d[7] * d[23] * d[56] - 2 * d[1] * d[4] * d[24] * d[56] + 2 * d[3] * d[5] * d[24] * d[56] + 2 * d[3] * d[4] * d[25] * d[56] - 2 * d[0] * d[5] * d[25] * d[56] + 2 * d[0] * d[1] * d[26] * d[56] - 2 * std::pow(d[3], 2) * d[26] * d[56] - 2 * d[4] * d[19] * d[54] * d[56] + 2 * d[5] * d[21] * d[54] * d[56] - 2 * d[1] * d[22] * d[54] * d[56] + 2 * d[3] * d[23] * d[54] * d[56] - 2 * d[5] * d[18] * d[55] * d[56] + 2 * d[4] * d[21] * d[55] * d[56] + 2 * d[3] * d[22] * d[55] * d[56] - 2 * d[0] * d[23] * d[55] * d[56] + d[1] * d[18] * std::pow(d[56], 2) + d[0] * d[19] * std::pow(d[56], 2) - 2 * d[3] * d[21] * std::pow(d[56], 2) - d[1] * d[2] * d[18] * d[69] + std::pow(d[5], 2) * d[18] * d[69] - d[0] * d[2] * d[19] * d[69] + std::pow(d[4], 2) * d[19] * d[69] - d[0] * d[1] * d[20] * d[69] + std::pow(d[3], 2) * d[20] * d[69] + 2 * d[2] * d[3] * d[21] * d[69] - 2 * d[4] * d[5] * d[21] * d[69] + 2 * d[1] * d[4] * d[22] * d[69] - 2 * d[3] * d[5] * d[22] * d[69] - 2 * d[3] * d[4] * d[23] * d[69] + 2 * d[0] * d[5] * d[23] * d[69];
    coeffs[52] = 2 * d[2] * d[6] * d[28] * d[54] - 2 * d[4] * d[8] * d[28] * d[54] + 2 * d[1] * d[6] * d[29] * d[54] - 2 * d[3] * d[7] * d[29] * d[54] - 2 * d[2] * d[7] * d[30] * d[54] + 2 * d[5] * d[8] * d[30] * d[54] + 2 * d[5] * d[7] * d[31] * d[54] - 2 * d[1] * d[8] * d[31] * d[54] - 4 * d[5] * d[6] * d[32] * d[54] + 2 * d[4] * d[7] * d[32] * d[54] + 2 * d[3] * d[8] * d[32] * d[54] + 2 * d[1] * d[2] * d[33] * d[54] - 2 * std::pow(d[5], 2) * d[33] * d[54] - 2 * d[2] * d[3] * d[34] * d[54] + 2 * d[4] * d[5] * d[34] * d[54] - 2 * d[1] * d[4] * d[35] * d[54] + 2 * d[3] * d[5] * d[35] * d[54] + d[2] * d[28] * std::pow(d[54], 2) + d[1] * d[29] * std::pow(d[54], 2) - 2 * d[5] * d[32] * std::pow(d[54], 2) + 2 * d[2] * d[7] * d[27] * d[55] - 2 * d[5] * d[8] * d[27] * d[55] - 2 * d[3] * d[6] * d[29] * d[55] + 2 * d[0] * d[7] * d[29] * d[55] - 2 * d[2] * d[6] * d[30] * d[55] + 2 * d[4] * d[8] * d[30] * d[55] + 2 * d[5] * d[6] * d[31] * d[55] - 4 * d[4] * d[7] * d[31] * d[55] + 2 * d[3] * d[8] * d[31] * d[55] + 2 * d[4] * d[6] * d[32] * d[55] - 2 * d[0] * d[8] * d[32] * d[55] - 2 * d[2] * d[3] * d[33] * d[55] + 2 * d[4] * d[5] * d[33] * d[55] + 2 * d[0] * d[2] * d[34] * d[55] - 2 * std::pow(d[4], 2) * d[34] * d[55] + 2 * d[3] * d[4] * d[35] * d[55] - 2 * d[0] * d[5] * d[35] * d[55] - 2 * d[3] * d[29] * d[54] * d[55] - 2 * d[2] * d[30] * d[54] * d[55] + 2 * d[5] * d[31] * d[54] * d[55] + 2 * d[4] * d[32] * d[54] * d[55] + d[2] * d[27] * std::pow(d[55], 2) + d[0] * d[29] * std::pow(d[55], 2) - 2 * d[4] * d[31] * std::pow(d[55], 2) - 2 * d[5] * d[7] * d[27] * d[56] + 2 * d[1] * d[8] * d[27] * d[56] - 2 * d[4] * d[6] * d[28] * d[56] + 2 * d[0] * d[8] * d[28] * d[56] + 2 * d[5] * d[6] * d[30] * d[56] + 2 * d[4] * d[7] * d[30] * d[56] - 4 * d[3] * d[8] * d[30] * d[56] - 2 * d[1] * d[6] * d[31] * d[56] + 2 * d[3] * d[7] * d[31] * d[56] + 2 * d[3] * d[6] * d[32] * d[56] - 2 * d[0] * d[7] * d[32] * d[56] - 2 * d[1] * d[4] * d[33] * d[56] + 2 * d[3] * d[5] * d[33] * d[56] + 2 * d[3] * d[4] * d[34] * d[56] - 2 * d[0] * d[5] * d[34] * d[56] + 2 * d[0] * d[1] * d[35] * d[56] - 2 * std::pow(d[3], 2) * d[35] * d[56] - 2 * d[4] * d[28] * d[54] * d[56] + 2 * d[5] * d[30] * d[54] * d[56] - 2 * d[1] * d[31] * d[54] * d[56] + 2 * d[3] * d[32] * d[54] * d[56] - 2 * d[5] * d[27] * d[55] * d[56] + 2 * d[4] * d[30] * d[55] * d[56] + 2 * d[3] * d[31] * d[55] * d[56] - 2 * d[0] * d[32] * d[55] * d[56] + d[1] * d[27] * std::pow(d[56], 2) + d[0] * d[28] * std::pow(d[56], 2) - 2 * d[3] * d[30] * std::pow(d[56], 2) - d[1] * d[2] * d[27] * d[69] + std::pow(d[5], 2) * d[27] * d[69] - d[0] * d[2] * d[28] * d[69] + std::pow(d[4], 2) * d[28] * d[69] - d[0] * d[1] * d[29] * d[69] + std::pow(d[3], 2) * d[29] * d[69] + 2 * d[2] * d[3] * d[30] * d[69] - 2 * d[4] * d[5] * d[30] * d[69] + 2 * d[1] * d[4] * d[31] * d[69] - 2 * d[3] * d[5] * d[31] * d[69] - 2 * d[3] * d[4] * d[32] * d[69] + 2 * d[0] * d[5] * d[32] * d[69];
    coeffs[53] = 2 * d[2] * d[6] * d[37] * d[54] - 2 * d[4] * d[8] * d[37] * d[54] + 2 * d[1] * d[6] * d[38] * d[54] - 2 * d[3] * d[7] * d[38] * d[54] - 2 * d[2] * d[7] * d[39] * d[54] + 2 * d[5] * d[8] * d[39] * d[54] + 2 * d[5] * d[7] * d[40] * d[54] - 2 * d[1] * d[8] * d[40] * d[54] - 4 * d[5] * d[6] * d[41] * d[54] + 2 * d[4] * d[7] * d[41] * d[54] + 2 * d[3] * d[8] * d[41] * d[54] + 2 * d[1] * d[2] * d[42] * d[54] - 2 * std::pow(d[5], 2) * d[42] * d[54] - 2 * d[2] * d[3] * d[43] * d[54] + 2 * d[4] * d[5] * d[43] * d[54] - 2 * d[1] * d[4] * d[44] * d[54] + 2 * d[3] * d[5] * d[44] * d[54] + d[2] * d[37] * std::pow(d[54], 2) + d[1] * d[38] * std::pow(d[54], 2) - 2 * d[5] * d[41] * std::pow(d[54], 2) + 2 * d[2] * d[7] * d[36] * d[55] - 2 * d[5] * d[8] * d[36] * d[55] - 2 * d[3] * d[6] * d[38] * d[55] + 2 * d[0] * d[7] * d[38] * d[55] - 2 * d[2] * d[6] * d[39] * d[55] + 2 * d[4] * d[8] * d[39] * d[55] + 2 * d[5] * d[6] * d[40] * d[55] - 4 * d[4] * d[7] * d[40] * d[55] + 2 * d[3] * d[8] * d[40] * d[55] + 2 * d[4] * d[6] * d[41] * d[55] - 2 * d[0] * d[8] * d[41] * d[55] - 2 * d[2] * d[3] * d[42] * d[55] + 2 * d[4] * d[5] * d[42] * d[55] + 2 * d[0] * d[2] * d[43] * d[55] - 2 * std::pow(d[4], 2) * d[43] * d[55] + 2 * d[3] * d[4] * d[44] * d[55] - 2 * d[0] * d[5] * d[44] * d[55] - 2 * d[3] * d[38] * d[54] * d[55] - 2 * d[2] * d[39] * d[54] * d[55] + 2 * d[5] * d[40] * d[54] * d[55] + 2 * d[4] * d[41] * d[54] * d[55] + d[2] * d[36] * std::pow(d[55], 2) + d[0] * d[38] * std::pow(d[55], 2) - 2 * d[4] * d[40] * std::pow(d[55], 2) - 2 * d[5] * d[7] * d[36] * d[56] + 2 * d[1] * d[8] * d[36] * d[56] - 2 * d[4] * d[6] * d[37] * d[56] + 2 * d[0] * d[8] * d[37] * d[56] + 2 * d[5] * d[6] * d[39] * d[56] + 2 * d[4] * d[7] * d[39] * d[56] - 4 * d[3] * d[8] * d[39] * d[56] - 2 * d[1] * d[6] * d[40] * d[56] + 2 * d[3] * d[7] * d[40] * d[56] + 2 * d[3] * d[6] * d[41] * d[56] - 2 * d[0] * d[7] * d[41] * d[56] - 2 * d[1] * d[4] * d[42] * d[56] + 2 * d[3] * d[5] * d[42] * d[56] + 2 * d[3] * d[4] * d[43] * d[56] - 2 * d[0] * d[5] * d[43] * d[56] + 2 * d[0] * d[1] * d[44] * d[56] - 2 * std::pow(d[3], 2) * d[44] * d[56] - 2 * d[4] * d[37] * d[54] * d[56] + 2 * d[5] * d[39] * d[54] * d[56] - 2 * d[1] * d[40] * d[54] * d[56] + 2 * d[3] * d[41] * d[54] * d[56] - 2 * d[5] * d[36] * d[55] * d[56] + 2 * d[4] * d[39] * d[55] * d[56] + 2 * d[3] * d[40] * d[55] * d[56] - 2 * d[0] * d[41] * d[55] * d[56] + d[1] * d[36] * std::pow(d[56], 2) + d[0] * d[37] * std::pow(d[56], 2) - 2 * d[3] * d[39] * std::pow(d[56], 2) - d[1] * d[2] * d[36] * d[69] + std::pow(d[5], 2) * d[36] * d[69] - d[0] * d[2] * d[37] * d[69] + std::pow(d[4], 2) * d[37] * d[69] - d[0] * d[1] * d[38] * d[69] + std::pow(d[3], 2) * d[38] * d[69] + 2 * d[2] * d[3] * d[39] * d[69] - 2 * d[4] * d[5] * d[39] * d[69] + 2 * d[1] * d[4] * d[40] * d[69] - 2 * d[3] * d[5] * d[40] * d[69] - 2 * d[3] * d[4] * d[41] * d[69] + 2 * d[0] * d[5] * d[41] * d[69];
    coeffs[54] = 2 * d[2] * d[6] * d[46] * d[54] - 2 * d[4] * d[8] * d[46] * d[54] + 2 * d[1] * d[6] * d[47] * d[54] - 2 * d[3] * d[7] * d[47] * d[54] - 2 * d[2] * d[7] * d[48] * d[54] + 2 * d[5] * d[8] * d[48] * d[54] + 2 * d[5] * d[7] * d[49] * d[54] - 2 * d[1] * d[8] * d[49] * d[54] - 4 * d[5] * d[6] * d[50] * d[54] + 2 * d[4] * d[7] * d[50] * d[54] + 2 * d[3] * d[8] * d[50] * d[54] + 2 * d[1] * d[2] * d[51] * d[54] - 2 * std::pow(d[5], 2) * d[51] * d[54] - 2 * d[2] * d[3] * d[52] * d[54] + 2 * d[4] * d[5] * d[52] * d[54] - 2 * d[1] * d[4] * d[53] * d[54] + 2 * d[3] * d[5] * d[53] * d[54] + d[2] * d[46] * std::pow(d[54], 2) + d[1] * d[47] * std::pow(d[54], 2) - 2 * d[5] * d[50] * std::pow(d[54], 2) + 2 * d[2] * d[7] * d[45] * d[55] - 2 * d[5] * d[8] * d[45] * d[55] - 2 * d[3] * d[6] * d[47] * d[55] + 2 * d[0] * d[7] * d[47] * d[55] - 2 * d[2] * d[6] * d[48] * d[55] + 2 * d[4] * d[8] * d[48] * d[55] + 2 * d[5] * d[6] * d[49] * d[55] - 4 * d[4] * d[7] * d[49] * d[55] + 2 * d[3] * d[8] * d[49] * d[55] + 2 * d[4] * d[6] * d[50] * d[55] - 2 * d[0] * d[8] * d[50] * d[55] - 2 * d[2] * d[3] * d[51] * d[55] + 2 * d[4] * d[5] * d[51] * d[55] + 2 * d[0] * d[2] * d[52] * d[55] - 2 * std::pow(d[4], 2) * d[52] * d[55] + 2 * d[3] * d[4] * d[53] * d[55] - 2 * d[0] * d[5] * d[53] * d[55] - 2 * d[3] * d[47] * d[54] * d[55] - 2 * d[2] * d[48] * d[54] * d[55] + 2 * d[5] * d[49] * d[54] * d[55] + 2 * d[4] * d[50] * d[54] * d[55] + d[2] * d[45] * std::pow(d[55], 2) + d[0] * d[47] * std::pow(d[55], 2) - 2 * d[4] * d[49] * std::pow(d[55], 2) - 2 * d[5] * d[7] * d[45] * d[56] + 2 * d[1] * d[8] * d[45] * d[56] - 2 * d[4] * d[6] * d[46] * d[56] + 2 * d[0] * d[8] * d[46] * d[56] + 2 * d[5] * d[6] * d[48] * d[56] + 2 * d[4] * d[7] * d[48] * d[56] - 4 * d[3] * d[8] * d[48] * d[56] - 2 * d[1] * d[6] * d[49] * d[56] + 2 * d[3] * d[7] * d[49] * d[56] + 2 * d[3] * d[6] * d[50] * d[56] - 2 * d[0] * d[7] * d[50] * d[56] - 2 * d[1] * d[4] * d[51] * d[56] + 2 * d[3] * d[5] * d[51] * d[56] + 2 * d[3] * d[4] * d[52] * d[56] - 2 * d[0] * d[5] * d[52] * d[56] + 2 * d[0] * d[1] * d[53] * d[56] - 2 * std::pow(d[3], 2) * d[53] * d[56] - 2 * d[4] * d[46] * d[54] * d[56] + 2 * d[5] * d[48] * d[54] * d[56] - 2 * d[1] * d[49] * d[54] * d[56] + 2 * d[3] * d[50] * d[54] * d[56] - 2 * d[5] * d[45] * d[55] * d[56] + 2 * d[4] * d[48] * d[55] * d[56] + 2 * d[3] * d[49] * d[55] * d[56] - 2 * d[0] * d[50] * d[55] * d[56] + d[1] * d[45] * std::pow(d[56], 2) + d[0] * d[46] * std::pow(d[56], 2) - 2 * d[3] * d[48] * std::pow(d[56], 2) - d[1] * d[2] * d[45] * d[69] + std::pow(d[5], 2) * d[45] * d[69] - d[0] * d[2] * d[46] * d[69] + std::pow(d[4], 2) * d[46] * d[69] - d[0] * d[1] * d[47] * d[69] + std::pow(d[3], 2) * d[47] * d[69] + 2 * d[2] * d[3] * d[48] * d[69] - 2 * d[4] * d[5] * d[48] * d[69] + 2 * d[1] * d[4] * d[49] * d[69] - 2 * d[3] * d[5] * d[49] * d[69] - 2 * d[3] * d[4] * d[50] * d[69] + 2 * d[0] * d[5] * d[50] * d[69];
    coeffs[55] = 2 * d[1] * d[2] * d[6] * d[54] - 2 * std::pow(d[5], 2) * d[6] * d[54] - 2 * d[2] * d[3] * d[7] * d[54] + 2 * d[4] * d[5] * d[7] * d[54] - 2 * d[1] * d[4] * d[8] * d[54] + 2 * d[3] * d[5] * d[8] * d[54] + d[1] * d[2] * std::pow(d[54], 2) - std::pow(d[5], 2) * std::pow(d[54], 2) - 2 * d[2] * d[3] * d[6] * d[55] + 2 * d[4] * d[5] * d[6] * d[55] + 2 * d[0] * d[2] * d[7] * d[55] - 2 * std::pow(d[4], 2) * d[7] * d[55] + 2 * d[3] * d[4] * d[8] * d[55] - 2 * d[0] * d[5] * d[8] * d[55] - 2 * d[2] * d[3] * d[54] * d[55] + 2 * d[4] * d[5] * d[54] * d[55] + d[0] * d[2] * std::pow(d[55], 2) - std::pow(d[4], 2) * std::pow(d[55], 2) - 2 * d[1] * d[4] * d[6] * d[56] + 2 * d[3] * d[5] * d[6] * d[56] + 2 * d[3] * d[4] * d[7] * d[56] - 2 * d[0] * d[5] * d[7] * d[56] + 2 * d[0] * d[1] * d[8] * d[56] - 2 * std::pow(d[3], 2) * d[8] * d[56] - 2 * d[1] * d[4] * d[54] * d[56] + 2 * d[3] * d[5] * d[54] * d[56] + 2 * d[3] * d[4] * d[55] * d[56] - 2 * d[0] * d[5] * d[55] * d[56] + d[0] * d[1] * std::pow(d[56], 2) - std::pow(d[3], 2) * std::pow(d[56], 2) - d[0] * d[1] * d[2] * d[69] + d[2] * std::pow(d[3], 2) * d[69] + d[1] * std::pow(d[4], 2) * d[69] - 2 * d[3] * d[4] * d[5] * d[69] + d[0] * std::pow(d[5], 2) * d[69];
    coeffs[56] = 2 * d[10] * d[11] * d[15] * d[57] - 2 * std::pow(d[14], 2) * d[15] * d[57] - 2 * d[11] * d[12] * d[16] * d[57] + 2 * d[13] * d[14] * d[16] * d[57] - 2 * d[10] * d[13] * d[17] * d[57] + 2 * d[12] * d[14] * d[17] * d[57] - 2 * d[11] * d[12] * d[15] * d[58] + 2 * d[13] * d[14] * d[15] * d[58] + 2 * d[9] * d[11] * d[16] * d[58] - 2 * std::pow(d[13], 2) * d[16] * d[58] + 2 * d[12] * d[13] * d[17] * d[58] - 2 * d[9] * d[14] * d[17] * d[58] - 2 * d[10] * d[13] * d[15] * d[59] + 2 * d[12] * d[14] * d[15] * d[59] + 2 * d[12] * d[13] * d[16] * d[59] - 2 * d[9] * d[14] * d[16] * d[59] + 2 * d[9] * d[10] * d[17] * d[59] - 2 * std::pow(d[12], 2) * d[17] * d[59] - d[9] * d[10] * d[11] * d[70] + d[11] * std::pow(d[12], 2) * d[70] + d[10] * std::pow(d[13], 2) * d[70] - 2 * d[12] * d[13] * d[14] * d[70] + d[9] * std::pow(d[14], 2) * d[70];
    coeffs[57] = 2 * d[11] * d[15] * d[19] * d[57] - 2 * d[13] * d[17] * d[19] * d[57] + 2 * d[10] * d[15] * d[20] * d[57] - 2 * d[12] * d[16] * d[20] * d[57] - 2 * d[11] * d[16] * d[21] * d[57] + 2 * d[14] * d[17] * d[21] * d[57] + 2 * d[14] * d[16] * d[22] * d[57] - 2 * d[10] * d[17] * d[22] * d[57] - 4 * d[14] * d[15] * d[23] * d[57] + 2 * d[13] * d[16] * d[23] * d[57] + 2 * d[12] * d[17] * d[23] * d[57] + 2 * d[10] * d[11] * d[24] * d[57] - 2 * std::pow(d[14], 2) * d[24] * d[57] - 2 * d[11] * d[12] * d[25] * d[57] + 2 * d[13] * d[14] * d[25] * d[57] - 2 * d[10] * d[13] * d[26] * d[57] + 2 * d[12] * d[14] * d[26] * d[57] + 2 * d[11] * d[16] * d[18] * d[58] - 2 * d[14] * d[17] * d[18] * d[58] - 2 * d[12] * d[15] * d[20] * d[58] + 2 * d[9] * d[16] * d[20] * d[58] - 2 * d[11] * d[15] * d[21] * d[58] + 2 * d[13] * d[17] * d[21] * d[58] + 2 * d[14] * d[15] * d[22] * d[58] - 4 * d[13] * d[16] * d[22] * d[58] + 2 * d[12] * d[17] * d[22] * d[58] + 2 * d[13] * d[15] * d[23] * d[58] - 2 * d[9] * d[17] * d[23] * d[58] - 2 * d[11] * d[12] * d[24] * d[58] + 2 * d[13] * d[14] * d[24] * d[58] + 2 * d[9] * d[11] * d[25] * d[58] - 2 * std::pow(d[13], 2) * d[25] * d[58] + 2 * d[12] * d[13] * d[26] * d[58] - 2 * d[9] * d[14] * d[26] * d[58] - 2 * d[14] * d[16] * d[18] * d[59] + 2 * d[10] * d[17] * d[18] * d[59] - 2 * d[13] * d[15] * d[19] * d[59] + 2 * d[9] * d[17] * d[19] * d[59] + 2 * d[14] * d[15] * d[21] * d[59] + 2 * d[13] * d[16] * d[21] * d[59] - 4 * d[12] * d[17] * d[21] * d[59] - 2 * d[10] * d[15] * d[22] * d[59] + 2 * d[12] * d[16] * d[22] * d[59] + 2 * d[12] * d[15] * d[23] * d[59] - 2 * d[9] * d[16] * d[23] * d[59] - 2 * d[10] * d[13] * d[24] * d[59] + 2 * d[12] * d[14] * d[24] * d[59] + 2 * d[12] * d[13] * d[25] * d[59] - 2 * d[9] * d[14] * d[25] * d[59] + 2 * d[9] * d[10] * d[26] * d[59] - 2 * std::pow(d[12], 2) * d[26] * d[59] - d[10] * d[11] * d[18] * d[70] + std::pow(d[14], 2) * d[18] * d[70] - d[9] * d[11] * d[19] * d[70] + std::pow(d[13], 2) * d[19] * d[70] - d[9] * d[10] * d[20] * d[70] + std::pow(d[12], 2) * d[20] * d[70] + 2 * d[11] * d[12] * d[21] * d[70] - 2 * d[13] * d[14] * d[21] * d[70] + 2 * d[10] * d[13] * d[22] * d[70] - 2 * d[12] * d[14] * d[22] * d[70] - 2 * d[12] * d[13] * d[23] * d[70] + 2 * d[9] * d[14] * d[23] * d[70];
    coeffs[58] = 2 * d[15] * d[19] * d[20] * d[57] - 2 * d[16] * d[20] * d[21] * d[57] - 2 * d[17] * d[19] * d[22] * d[57] + 2 * d[17] * d[21] * d[23] * d[57] + 2 * d[16] * d[22] * d[23] * d[57] - 2 * d[15] * std::pow(d[23], 2) * d[57] + 2 * d[11] * d[19] * d[24] * d[57] + 2 * d[10] * d[20] * d[24] * d[57] - 4 * d[14] * d[23] * d[24] * d[57] - 2 * d[12] * d[20] * d[25] * d[57] - 2 * d[11] * d[21] * d[25] * d[57] + 2 * d[14] * d[22] * d[25] * d[57] + 2 * d[13] * d[23] * d[25] * d[57] - 2 * d[13] * d[19] * d[26] * d[57] + 2 * d[14] * d[21] * d[26] * d[57] - 2 * d[10] * d[22] * d[26] * d[57] + 2 * d[12] * d[23] * d[26] * d[57] + 2 * d[16] * d[18] * d[20] * d[58] - 2 * d[15] * d[20] * d[21] * d[58] + 2 * d[17] * d[21] * d[22] * d[58] - 2 * d[16] * std::pow(d[22], 2) * d[58] - 2 * d[17] * d[18] * d[23] * d[58] + 2 * d[15] * d[22] * d[23] * d[58] - 2 * d[12] * d[20] * d[24] * d[58] - 2 * d[11] * d[21] * d[24] * d[58] + 2 * d[14] * d[22] * d[24] * d[58] + 2 * d[13] * d[23] * d[24] * d[58] + 2 * d[11] * d[18] * d[25] * d[58] + 2 * d[9] * d[20] * d[25] * d[58] - 4 * d[13] * d[22] * d[25] * d[58] - 2 * d[14] * d[18] * d[26] * d[58] + 2 * d[13] * d[21] * d[26] * d[58] + 2 * d[12] * d[22] * d[26] * d[58] - 2 * d[9] * d[23] * d[26] * d[58] + 2 * d[17] * d[18] * d[19] * d[59] - 2 * d[17] * std::pow(d[21], 2) * d[59] - 2 * d[15] * d[19] * d[22] * d[59] + 2 * d[16] * d[21] * d[22] * d[59] - 2 * d[16] * d[18] * d[23] * d[59] + 2 * d[15] * d[21] * d[23] * d[59] - 2 * d[13] * d[19] * d[24] * d[59] + 2 * d[14] * d[21] * d[24] * d[59] - 2 * d[10] * d[22] * d[24] * d[59] + 2 * d[12] * d[23] * d[24] * d[59] - 2 * d[14] * d[18] * d[25] * d[59] + 2 * d[13] * d[21] * d[25] * d[59] + 2 * d[12] * d[22] * d[25] * d[59] - 2 * d[9] * d[23] * d[25] * d[59] + 2 * d[10] * d[18] * d[26] * d[59] + 2 * d[9] * d[19] * d[26] * d[59] - 4 * d[12] * d[21] * d[26] * d[59] - d[11] * d[18] * d[19] * d[70] - d[10] * d[18] * d[20] * d[70] - d[9] * d[19] * d[20] * d[70] + 2 * d[12] * d[20] * d[21] * d[70] + d[11] * std::pow(d[21], 2) * d[70] + 2 * d[13] * d[19] * d[22] * d[70] - 2 * d[14] * d[21] * d[22] * d[70] + d[10] * std::pow(d[22], 2) * d[70] + 2 * d[14] * d[18] * d[23] * d[70] - 2 * d[13] * d[21] * d[23] * d[70] - 2 * d[12] * d[22] * d[23] * d[70] + d[9] * std::pow(d[23], 2) * d[70];
    coeffs[59] = 2 * d[19] * d[20] * d[24] * d[57] - 2 * std::pow(d[23], 2) * d[24] * d[57] - 2 * d[20] * d[21] * d[25] * d[57] + 2 * d[22] * d[23] * d[25] * d[57] - 2 * d[19] * d[22] * d[26] * d[57] + 2 * d[21] * d[23] * d[26] * d[57] - 2 * d[20] * d[21] * d[24] * d[58] + 2 * d[22] * d[23] * d[24] * d[58] + 2 * d[18] * d[20] * d[25] * d[58] - 2 * std::pow(d[22], 2) * d[25] * d[58] + 2 * d[21] * d[22] * d[26] * d[58] - 2 * d[18] * d[23] * d[26] * d[58] - 2 * d[19] * d[22] * d[24] * d[59] + 2 * d[21] * d[23] * d[24] * d[59] + 2 * d[21] * d[22] * d[25] * d[59] - 2 * d[18] * d[23] * d[25] * d[59] + 2 * d[18] * d[19] * d[26] * d[59] - 2 * std::pow(d[21], 2) * d[26] * d[59] - d[18] * d[19] * d[20] * d[70] + d[20] * std::pow(d[21], 2) * d[70] + d[19] * std::pow(d[22], 2) * d[70] - 2 * d[21] * d[22] * d[23] * d[70] + d[18] * std::pow(d[23], 2) * d[70];
    coeffs[60] = 2 * d[11] * d[15] * d[28] * d[57] - 2 * d[13] * d[17] * d[28] * d[57] + 2 * d[10] * d[15] * d[29] * d[57] - 2 * d[12] * d[16] * d[29] * d[57] - 2 * d[11] * d[16] * d[30] * d[57] + 2 * d[14] * d[17] * d[30] * d[57] + 2 * d[14] * d[16] * d[31] * d[57] - 2 * d[10] * d[17] * d[31] * d[57] - 4 * d[14] * d[15] * d[32] * d[57] + 2 * d[13] * d[16] * d[32] * d[57] + 2 * d[12] * d[17] * d[32] * d[57] + 2 * d[10] * d[11] * d[33] * d[57] - 2 * std::pow(d[14], 2) * d[33] * d[57] - 2 * d[11] * d[12] * d[34] * d[57] + 2 * d[13] * d[14] * d[34] * d[57] - 2 * d[10] * d[13] * d[35] * d[57] + 2 * d[12] * d[14] * d[35] * d[57] + 2 * d[11] * d[16] * d[27] * d[58] - 2 * d[14] * d[17] * d[27] * d[58] - 2 * d[12] * d[15] * d[29] * d[58] + 2 * d[9] * d[16] * d[29] * d[58] - 2 * d[11] * d[15] * d[30] * d[58] + 2 * d[13] * d[17] * d[30] * d[58] + 2 * d[14] * d[15] * d[31] * d[58] - 4 * d[13] * d[16] * d[31] * d[58] + 2 * d[12] * d[17] * d[31] * d[58] + 2 * d[13] * d[15] * d[32] * d[58] - 2 * d[9] * d[17] * d[32] * d[58] - 2 * d[11] * d[12] * d[33] * d[58] + 2 * d[13] * d[14] * d[33] * d[58] + 2 * d[9] * d[11] * d[34] * d[58] - 2 * std::pow(d[13], 2) * d[34] * d[58] + 2 * d[12] * d[13] * d[35] * d[58] - 2 * d[9] * d[14] * d[35] * d[58] - 2 * d[14] * d[16] * d[27] * d[59] + 2 * d[10] * d[17] * d[27] * d[59] - 2 * d[13] * d[15] * d[28] * d[59] + 2 * d[9] * d[17] * d[28] * d[59] + 2 * d[14] * d[15] * d[30] * d[59] + 2 * d[13] * d[16] * d[30] * d[59] - 4 * d[12] * d[17] * d[30] * d[59] - 2 * d[10] * d[15] * d[31] * d[59] + 2 * d[12] * d[16] * d[31] * d[59] + 2 * d[12] * d[15] * d[32] * d[59] - 2 * d[9] * d[16] * d[32] * d[59] - 2 * d[10] * d[13] * d[33] * d[59] + 2 * d[12] * d[14] * d[33] * d[59] + 2 * d[12] * d[13] * d[34] * d[59] - 2 * d[9] * d[14] * d[34] * d[59] + 2 * d[9] * d[10] * d[35] * d[59] - 2 * std::pow(d[12], 2) * d[35] * d[59] - d[10] * d[11] * d[27] * d[70] + std::pow(d[14], 2) * d[27] * d[70] - d[9] * d[11] * d[28] * d[70] + std::pow(d[13], 2) * d[28] * d[70] - d[9] * d[10] * d[29] * d[70] + std::pow(d[12], 2) * d[29] * d[70] + 2 * d[11] * d[12] * d[30] * d[70] - 2 * d[13] * d[14] * d[30] * d[70] + 2 * d[10] * d[13] * d[31] * d[70] - 2 * d[12] * d[14] * d[31] * d[70] - 2 * d[12] * d[13] * d[32] * d[70] + 2 * d[9] * d[14] * d[32] * d[70];
    coeffs[61] = 2 * d[15] * d[20] * d[28] * d[57] - 2 * d[17] * d[22] * d[28] * d[57] + 2 * d[11] * d[24] * d[28] * d[57] - 2 * d[13] * d[26] * d[28] * d[57] + 2 * d[15] * d[19] * d[29] * d[57] - 2 * d[16] * d[21] * d[29] * d[57] + 2 * d[10] * d[24] * d[29] * d[57] - 2 * d[12] * d[25] * d[29] * d[57] - 2 * d[16] * d[20] * d[30] * d[57] + 2 * d[17] * d[23] * d[30] * d[57] - 2 * d[11] * d[25] * d[30] * d[57] + 2 * d[14] * d[26] * d[30] * d[57] - 2 * d[17] * d[19] * d[31] * d[57] + 2 * d[16] * d[23] * d[31] * d[57] + 2 * d[14] * d[25] * d[31] * d[57] - 2 * d[10] * d[26] * d[31] * d[57] + 2 * d[17] * d[21] * d[32] * d[57] + 2 * d[16] * d[22] * d[32] * d[57] - 4 * d[15] * d[23] * d[32] * d[57] - 4 * d[14] * d[24] * d[32] * d[57] + 2 * d[13] * d[25] * d[32] * d[57] + 2 * d[12] * d[26] * d[32] * d[57] + 2 * d[11] * d[19] * d[33] * d[57] + 2 * d[10] * d[20] * d[33] * d[57] - 4 * d[14] * d[23] * d[33] * d[57] - 2 * d[12] * d[20] * d[34] * d[57] - 2 * d[11] * d[21] * d[34] * d[57] + 2 * d[14] * d[22] * d[34] * d[57] + 2 * d[13] * d[23] * d[34] * d[57] - 2 * d[13] * d[19] * d[35] * d[57] + 2 * d[14] * d[21] * d[35] * d[57] - 2 * d[10] * d[22] * d[35] * d[57] + 2 * d[12] * d[23] * d[35] * d[57] + 2 * d[16] * d[20] * d[27] * d[58] - 2 * d[17] * d[23] * d[27] * d[58] + 2 * d[11] * d[25] * d[27] * d[58] - 2 * d[14] * d[26] * d[27] * d[58] + 2 * d[16] * d[18] * d[29] * d[58] - 2 * d[15] * d[21] * d[29] * d[58] - 2 * d[12] * d[24] * d[29] * d[58] + 2 * d[9] * d[25] * d[29] * d[58] - 2 * d[15] * d[20] * d[30] * d[58] + 2 * d[17] * d[22] * d[30] * d[58] - 2 * d[11] * d[24] * d[30] * d[58] + 2 * d[13] * d[26] * d[30] * d[58] + 2 * d[17] * d[21] * d[31] * d[58] - 4 * d[16] * d[22] * d[31] * d[58] + 2 * d[15] * d[23] * d[31] * d[58] + 2 * d[14] * d[24] * d[31] * d[58] - 4 * d[13] * d[25] * d[31] * d[58] + 2 * d[12] * d[26] * d[31] * d[58] - 2 * d[17] * d[18] * d[32] * d[58] + 2 * d[15] * d[22] * d[32] * d[58] + 2 * d[13] * d[24] * d[32] * d[58] - 2 * d[9] * d[26] * d[32] * d[58] - 2 * d[12] * d[20] * d[33] * d[58] - 2 * d[11] * d[21] * d[33] * d[58] + 2 * d[14] * d[22] * d[33] * d[58] + 2 * d[13] * d[23] * d[33] * d[58] + 2 * d[11] * d[18] * d[34] * d[58] + 2 * d[9] * d[20] * d[34] * d[58] - 4 * d[13] * d[22] * d[34] * d[58] - 2 * d[14] * d[18] * d[35] * d[58] + 2 * d[13] * d[21] * d[35] * d[58] + 2 * d[12] * d[22] * d[35] * d[58] - 2 * d[9] * d[23] * d[35] * d[58] + 2 * d[17] * d[19] * d[27] * d[59] - 2 * d[16] * d[23] * d[27] * d[59] - 2 * d[14] * d[25] * d[27] * d[59] + 2 * d[10] * d[26] * d[27] * d[59] + 2 * d[17] * d[18] * d[28] * d[59] - 2 * d[15] * d[22] * d[28] * d[59] - 2 * d[13] * d[24] * d[28] * d[59] + 2 * d[9] * d[26] * d[28] * d[59] - 4 * d[17] * d[21] * d[30] * d[59] + 2 * d[16] * d[22] * d[30] * d[59] + 2 * d[15] * d[23] * d[30] * d[59] + 2 * d[14] * d[24] * d[30] * d[59] + 2 * d[13] * d[25] * d[30] * d[59] - 4 * d[12] * d[26] * d[30] * d[59] - 2 * d[15] * d[19] * d[31] * d[59] + 2 * d[16] * d[21] * d[31] * d[59] - 2 * d[10] * d[24] * d[31] * d[59] + 2 * d[12] * d[25] * d[31] * d[59] - 2 * d[16] * d[18] * d[32] * d[59] + 2 * d[15] * d[21] * d[32] * d[59] + 2 * d[12] * d[24] * d[32] * d[59] - 2 * d[9] * d[25] * d[32] * d[59] - 2 * d[13] * d[19] * d[33] * d[59] + 2 * d[14] * d[21] * d[33] * d[59] - 2 * d[10] * d[22] * d[33] * d[59] + 2 * d[12] * d[23] * d[33] * d[59] - 2 * d[14] * d[18] * d[34] * d[59] + 2 * d[13] * d[21] * d[34] * d[59] + 2 * d[12] * d[22] * d[34] * d[59] - 2 * d[9] * d[23] * d[34] * d[59] + 2 * d[10] * d[18] * d[35] * d[59] + 2 * d[9] * d[19] * d[35] * d[59] - 4 * d[12] * d[21] * d[35] * d[59] - d[11] * d[19] * d[27] * d[70] - d[10] * d[20] * d[27] * d[70] + 2 * d[14] * d[23] * d[27] * d[70] - d[11] * d[18] * d[28] * d[70] - d[9] * d[20] * d[28] * d[70] + 2 * d[13] * d[22] * d[28] * d[70] - d[10] * d[18] * d[29] * d[70] - d[9] * d[19] * d[29] * d[70] + 2 * d[12] * d[21] * d[29] * d[70] + 2 * d[12] * d[20] * d[30] * d[70] + 2 * d[11] * d[21] * d[30] * d[70] - 2 * d[14] * d[22] * d[30] * d[70] - 2 * d[13] * d[23] * d[30] * d[70] + 2 * d[13] * d[19] * d[31] * d[70] - 2 * d[14] * d[21] * d[31] * d[70] + 2 * d[10] * d[22] * d[31] * d[70] - 2 * d[12] * d[23] * d[31] * d[70] + 2 * d[14] * d[18] * d[32] * d[70] - 2 * d[13] * d[21] * d[32] * d[70] - 2 * d[12] * d[22] * d[32] * d[70] + 2 * d[9] * d[23] * d[32] * d[70];
    coeffs[62] = 2 * d[20] * d[24] * d[28] * d[57] - 2 * d[22] * d[26] * d[28] * d[57] + 2 * d[19] * d[24] * d[29] * d[57] - 2 * d[21] * d[25] * d[29] * d[57] - 2 * d[20] * d[25] * d[30] * d[57] + 2 * d[23] * d[26] * d[30] * d[57] + 2 * d[23] * d[25] * d[31] * d[57] - 2 * d[19] * d[26] * d[31] * d[57] - 4 * d[23] * d[24] * d[32] * d[57] + 2 * d[22] * d[25] * d[32] * d[57] + 2 * d[21] * d[26] * d[32] * d[57] + 2 * d[19] * d[20] * d[33] * d[57] - 2 * std::pow(d[23], 2) * d[33] * d[57] - 2 * d[20] * d[21] * d[34] * d[57] + 2 * d[22] * d[23] * d[34] * d[57] - 2 * d[19] * d[22] * d[35] * d[57] + 2 * d[21] * d[23] * d[35] * d[57] + 2 * d[20] * d[25] * d[27] * d[58] - 2 * d[23] * d[26] * d[27] * d[58] - 2 * d[21] * d[24] * d[29] * d[58] + 2 * d[18] * d[25] * d[29] * d[58] - 2 * d[20] * d[24] * d[30] * d[58] + 2 * d[22] * d[26] * d[30] * d[58] + 2 * d[23] * d[24] * d[31] * d[58] - 4 * d[22] * d[25] * d[31] * d[58] + 2 * d[21] * d[26] * d[31] * d[58] + 2 * d[22] * d[24] * d[32] * d[58] - 2 * d[18] * d[26] * d[32] * d[58] - 2 * d[20] * d[21] * d[33] * d[58] + 2 * d[22] * d[23] * d[33] * d[58] + 2 * d[18] * d[20] * d[34] * d[58] - 2 * std::pow(d[22], 2) * d[34] * d[58] + 2 * d[21] * d[22] * d[35] * d[58] - 2 * d[18] * d[23] * d[35] * d[58] - 2 * d[23] * d[25] * d[27] * d[59] + 2 * d[19] * d[26] * d[27] * d[59] - 2 * d[22] * d[24] * d[28] * d[59] + 2 * d[18] * d[26] * d[28] * d[59] + 2 * d[23] * d[24] * d[30] * d[59] + 2 * d[22] * d[25] * d[30] * d[59] - 4 * d[21] * d[26] * d[30] * d[59] - 2 * d[19] * d[24] * d[31] * d[59] + 2 * d[21] * d[25] * d[31] * d[59] + 2 * d[21] * d[24] * d[32] * d[59] - 2 * d[18] * d[25] * d[32] * d[59] - 2 * d[19] * d[22] * d[33] * d[59] + 2 * d[21] * d[23] * d[33] * d[59] + 2 * d[21] * d[22] * d[34] * d[59] - 2 * d[18] * d[23] * d[34] * d[59] + 2 * d[18] * d[19] * d[35] * d[59] - 2 * std::pow(d[21], 2) * d[35] * d[59] - d[19] * d[20] * d[27] * d[70] + std::pow(d[23], 2) * d[27] * d[70] - d[18] * d[20] * d[28] * d[70] + std::pow(d[22], 2) * d[28] * d[70] - d[18] * d[19] * d[29] * d[70] + std::pow(d[21], 2) * d[29] * d[70] + 2 * d[20] * d[21] * d[30] * d[70] - 2 * d[22] * d[23] * d[30] * d[70] + 2 * d[19] * d[22] * d[31] * d[70] - 2 * d[21] * d[23] * d[31] * d[70] - 2 * d[21] * d[22] * d[32] * d[70] + 2 * d[18] * d[23] * d[32] * d[70];
    coeffs[63] = 2 * d[15] * d[28] * d[29] * d[57] - 2 * d[16] * d[29] * d[30] * d[57] - 2 * d[17] * d[28] * d[31] * d[57] + 2 * d[17] * d[30] * d[32] * d[57] + 2 * d[16] * d[31] * d[32] * d[57] - 2 * d[15] * std::pow(d[32], 2) * d[57] + 2 * d[11] * d[28] * d[33] * d[57] + 2 * d[10] * d[29] * d[33] * d[57] - 4 * d[14] * d[32] * d[33] * d[57] - 2 * d[12] * d[29] * d[34] * d[57] - 2 * d[11] * d[30] * d[34] * d[57] + 2 * d[14] * d[31] * d[34] * d[57] + 2 * d[13] * d[32] * d[34] * d[57] - 2 * d[13] * d[28] * d[35] * d[57] + 2 * d[14] * d[30] * d[35] * d[57] - 2 * d[10] * d[31] * d[35] * d[57] + 2 * d[12] * d[32] * d[35] * d[57] + 2 * d[16] * d[27] * d[29] * d[58] - 2 * d[15] * d[29] * d[30] * d[58] + 2 * d[17] * d[30] * d[31] * d[58] - 2 * d[16] * std::pow(d[31], 2) * d[58] - 2 * d[17] * d[27] * d[32] * d[58] + 2 * d[15] * d[31] * d[32] * d[58] - 2 * d[12] * d[29] * d[33] * d[58] - 2 * d[11] * d[30] * d[33] * d[58] + 2 * d[14] * d[31] * d[33] * d[58] + 2 * d[13] * d[32] * d[33] * d[58] + 2 * d[11] * d[27] * d[34] * d[58] + 2 * d[9] * d[29] * d[34] * d[58] - 4 * d[13] * d[31] * d[34] * d[58] - 2 * d[14] * d[27] * d[35] * d[58] + 2 * d[13] * d[30] * d[35] * d[58] + 2 * d[12] * d[31] * d[35] * d[58] - 2 * d[9] * d[32] * d[35] * d[58] + 2 * d[17] * d[27] * d[28] * d[59] - 2 * d[17] * std::pow(d[30], 2) * d[59] - 2 * d[15] * d[28] * d[31] * d[59] + 2 * d[16] * d[30] * d[31] * d[59] - 2 * d[16] * d[27] * d[32] * d[59] + 2 * d[15] * d[30] * d[32] * d[59] - 2 * d[13] * d[28] * d[33] * d[59] + 2 * d[14] * d[30] * d[33] * d[59] - 2 * d[10] * d[31] * d[33] * d[59] + 2 * d[12] * d[32] * d[33] * d[59] - 2 * d[14] * d[27] * d[34] * d[59] + 2 * d[13] * d[30] * d[34] * d[59] + 2 * d[12] * d[31] * d[34] * d[59] - 2 * d[9] * d[32] * d[34] * d[59] + 2 * d[10] * d[27] * d[35] * d[59] + 2 * d[9] * d[28] * d[35] * d[59] - 4 * d[12] * d[30] * d[35] * d[59] - d[11] * d[27] * d[28] * d[70] - d[10] * d[27] * d[29] * d[70] - d[9] * d[28] * d[29] * d[70] + 2 * d[12] * d[29] * d[30] * d[70] + d[11] * std::pow(d[30], 2) * d[70] + 2 * d[13] * d[28] * d[31] * d[70] - 2 * d[14] * d[30] * d[31] * d[70] + d[10] * std::pow(d[31], 2) * d[70] + 2 * d[14] * d[27] * d[32] * d[70] - 2 * d[13] * d[30] * d[32] * d[70] - 2 * d[12] * d[31] * d[32] * d[70] + d[9] * std::pow(d[32], 2) * d[70];
    coeffs[64] = 2 * d[24] * d[28] * d[29] * d[57] - 2 * d[25] * d[29] * d[30] * d[57] - 2 * d[26] * d[28] * d[31] * d[57] + 2 * d[26] * d[30] * d[32] * d[57] + 2 * d[25] * d[31] * d[32] * d[57] - 2 * d[24] * std::pow(d[32], 2) * d[57] + 2 * d[20] * d[28] * d[33] * d[57] + 2 * d[19] * d[29] * d[33] * d[57] - 4 * d[23] * d[32] * d[33] * d[57] - 2 * d[21] * d[29] * d[34] * d[57] - 2 * d[20] * d[30] * d[34] * d[57] + 2 * d[23] * d[31] * d[34] * d[57] + 2 * d[22] * d[32] * d[34] * d[57] - 2 * d[22] * d[28] * d[35] * d[57] + 2 * d[23] * d[30] * d[35] * d[57] - 2 * d[19] * d[31] * d[35] * d[57] + 2 * d[21] * d[32] * d[35] * d[57] + 2 * d[25] * d[27] * d[29] * d[58] - 2 * d[24] * d[29] * d[30] * d[58] + 2 * d[26] * d[30] * d[31] * d[58] - 2 * d[25] * std::pow(d[31], 2) * d[58] - 2 * d[26] * d[27] * d[32] * d[58] + 2 * d[24] * d[31] * d[32] * d[58] - 2 * d[21] * d[29] * d[33] * d[58] - 2 * d[20] * d[30] * d[33] * d[58] + 2 * d[23] * d[31] * d[33] * d[58] + 2 * d[22] * d[32] * d[33] * d[58] + 2 * d[20] * d[27] * d[34] * d[58] + 2 * d[18] * d[29] * d[34] * d[58] - 4 * d[22] * d[31] * d[34] * d[58] - 2 * d[23] * d[27] * d[35] * d[58] + 2 * d[22] * d[30] * d[35] * d[58] + 2 * d[21] * d[31] * d[35] * d[58] - 2 * d[18] * d[32] * d[35] * d[58] + 2 * d[26] * d[27] * d[28] * d[59] - 2 * d[26] * std::pow(d[30], 2) * d[59] - 2 * d[24] * d[28] * d[31] * d[59] + 2 * d[25] * d[30] * d[31] * d[59] - 2 * d[25] * d[27] * d[32] * d[59] + 2 * d[24] * d[30] * d[32] * d[59] - 2 * d[22] * d[28] * d[33] * d[59] + 2 * d[23] * d[30] * d[33] * d[59] - 2 * d[19] * d[31] * d[33] * d[59] + 2 * d[21] * d[32] * d[33] * d[59] - 2 * d[23] * d[27] * d[34] * d[59] + 2 * d[22] * d[30] * d[34] * d[59] + 2 * d[21] * d[31] * d[34] * d[59] - 2 * d[18] * d[32] * d[34] * d[59] + 2 * d[19] * d[27] * d[35] * d[59] + 2 * d[18] * d[28] * d[35] * d[59] - 4 * d[21] * d[30] * d[35] * d[59] - d[20] * d[27] * d[28] * d[70] - d[19] * d[27] * d[29] * d[70] - d[18] * d[28] * d[29] * d[70] + 2 * d[21] * d[29] * d[30] * d[70] + d[20] * std::pow(d[30], 2) * d[70] + 2 * d[22] * d[28] * d[31] * d[70] - 2 * d[23] * d[30] * d[31] * d[70] + d[19] * std::pow(d[31], 2) * d[70] + 2 * d[23] * d[27] * d[32] * d[70] - 2 * d[22] * d[30] * d[32] * d[70] - 2 * d[21] * d[31] * d[32] * d[70] + d[18] * std::pow(d[32], 2) * d[70];
    coeffs[65] = 2 * d[28] * d[29] * d[33] * d[57] - 2 * std::pow(d[32], 2) * d[33] * d[57] - 2 * d[29] * d[30] * d[34] * d[57] + 2 * d[31] * d[32] * d[34] * d[57] - 2 * d[28] * d[31] * d[35] * d[57] + 2 * d[30] * d[32] * d[35] * d[57] - 2 * d[29] * d[30] * d[33] * d[58] + 2 * d[31] * d[32] * d[33] * d[58] + 2 * d[27] * d[29] * d[34] * d[58] - 2 * std::pow(d[31], 2) * d[34] * d[58] + 2 * d[30] * d[31] * d[35] * d[58] - 2 * d[27] * d[32] * d[35] * d[58] - 2 * d[28] * d[31] * d[33] * d[59] + 2 * d[30] * d[32] * d[33] * d[59] + 2 * d[30] * d[31] * d[34] * d[59] - 2 * d[27] * d[32] * d[34] * d[59] + 2 * d[27] * d[28] * d[35] * d[59] - 2 * std::pow(d[30], 2) * d[35] * d[59] - d[27] * d[28] * d[29] * d[70] + d[29] * std::pow(d[30], 2) * d[70] + d[28] * std::pow(d[31], 2) * d[70] - 2 * d[30] * d[31] * d[32] * d[70] + d[27] * std::pow(d[32], 2) * d[70];
    coeffs[66] = 2 * d[11] * d[15] * d[37] * d[57] - 2 * d[13] * d[17] * d[37] * d[57] + 2 * d[10] * d[15] * d[38] * d[57] - 2 * d[12] * d[16] * d[38] * d[57] - 2 * d[11] * d[16] * d[39] * d[57] + 2 * d[14] * d[17] * d[39] * d[57] + 2 * d[14] * d[16] * d[40] * d[57] - 2 * d[10] * d[17] * d[40] * d[57] - 4 * d[14] * d[15] * d[41] * d[57] + 2 * d[13] * d[16] * d[41] * d[57] + 2 * d[12] * d[17] * d[41] * d[57] + 2 * d[10] * d[11] * d[42] * d[57] - 2 * std::pow(d[14], 2) * d[42] * d[57] - 2 * d[11] * d[12] * d[43] * d[57] + 2 * d[13] * d[14] * d[43] * d[57] - 2 * d[10] * d[13] * d[44] * d[57] + 2 * d[12] * d[14] * d[44] * d[57] + 2 * d[11] * d[16] * d[36] * d[58] - 2 * d[14] * d[17] * d[36] * d[58] - 2 * d[12] * d[15] * d[38] * d[58] + 2 * d[9] * d[16] * d[38] * d[58] - 2 * d[11] * d[15] * d[39] * d[58] + 2 * d[13] * d[17] * d[39] * d[58] + 2 * d[14] * d[15] * d[40] * d[58] - 4 * d[13] * d[16] * d[40] * d[58] + 2 * d[12] * d[17] * d[40] * d[58] + 2 * d[13] * d[15] * d[41] * d[58] - 2 * d[9] * d[17] * d[41] * d[58] - 2 * d[11] * d[12] * d[42] * d[58] + 2 * d[13] * d[14] * d[42] * d[58] + 2 * d[9] * d[11] * d[43] * d[58] - 2 * std::pow(d[13], 2) * d[43] * d[58] + 2 * d[12] * d[13] * d[44] * d[58] - 2 * d[9] * d[14] * d[44] * d[58] - 2 * d[14] * d[16] * d[36] * d[59] + 2 * d[10] * d[17] * d[36] * d[59] - 2 * d[13] * d[15] * d[37] * d[59] + 2 * d[9] * d[17] * d[37] * d[59] + 2 * d[14] * d[15] * d[39] * d[59] + 2 * d[13] * d[16] * d[39] * d[59] - 4 * d[12] * d[17] * d[39] * d[59] - 2 * d[10] * d[15] * d[40] * d[59] + 2 * d[12] * d[16] * d[40] * d[59] + 2 * d[12] * d[15] * d[41] * d[59] - 2 * d[9] * d[16] * d[41] * d[59] - 2 * d[10] * d[13] * d[42] * d[59] + 2 * d[12] * d[14] * d[42] * d[59] + 2 * d[12] * d[13] * d[43] * d[59] - 2 * d[9] * d[14] * d[43] * d[59] + 2 * d[9] * d[10] * d[44] * d[59] - 2 * std::pow(d[12], 2) * d[44] * d[59] - d[10] * d[11] * d[36] * d[70] + std::pow(d[14], 2) * d[36] * d[70] - d[9] * d[11] * d[37] * d[70] + std::pow(d[13], 2) * d[37] * d[70] - d[9] * d[10] * d[38] * d[70] + std::pow(d[12], 2) * d[38] * d[70] + 2 * d[11] * d[12] * d[39] * d[70] - 2 * d[13] * d[14] * d[39] * d[70] + 2 * d[10] * d[13] * d[40] * d[70] - 2 * d[12] * d[14] * d[40] * d[70] - 2 * d[12] * d[13] * d[41] * d[70] + 2 * d[9] * d[14] * d[41] * d[70];
    coeffs[67] = 2 * d[15] * d[20] * d[37] * d[57] - 2 * d[17] * d[22] * d[37] * d[57] + 2 * d[11] * d[24] * d[37] * d[57] - 2 * d[13] * d[26] * d[37] * d[57] + 2 * d[15] * d[19] * d[38] * d[57] - 2 * d[16] * d[21] * d[38] * d[57] + 2 * d[10] * d[24] * d[38] * d[57] - 2 * d[12] * d[25] * d[38] * d[57] - 2 * d[16] * d[20] * d[39] * d[57] + 2 * d[17] * d[23] * d[39] * d[57] - 2 * d[11] * d[25] * d[39] * d[57] + 2 * d[14] * d[26] * d[39] * d[57] - 2 * d[17] * d[19] * d[40] * d[57] + 2 * d[16] * d[23] * d[40] * d[57] + 2 * d[14] * d[25] * d[40] * d[57] - 2 * d[10] * d[26] * d[40] * d[57] + 2 * d[17] * d[21] * d[41] * d[57] + 2 * d[16] * d[22] * d[41] * d[57] - 4 * d[15] * d[23] * d[41] * d[57] - 4 * d[14] * d[24] * d[41] * d[57] + 2 * d[13] * d[25] * d[41] * d[57] + 2 * d[12] * d[26] * d[41] * d[57] + 2 * d[11] * d[19] * d[42] * d[57] + 2 * d[10] * d[20] * d[42] * d[57] - 4 * d[14] * d[23] * d[42] * d[57] - 2 * d[12] * d[20] * d[43] * d[57] - 2 * d[11] * d[21] * d[43] * d[57] + 2 * d[14] * d[22] * d[43] * d[57] + 2 * d[13] * d[23] * d[43] * d[57] - 2 * d[13] * d[19] * d[44] * d[57] + 2 * d[14] * d[21] * d[44] * d[57] - 2 * d[10] * d[22] * d[44] * d[57] + 2 * d[12] * d[23] * d[44] * d[57] + 2 * d[16] * d[20] * d[36] * d[58] - 2 * d[17] * d[23] * d[36] * d[58] + 2 * d[11] * d[25] * d[36] * d[58] - 2 * d[14] * d[26] * d[36] * d[58] + 2 * d[16] * d[18] * d[38] * d[58] - 2 * d[15] * d[21] * d[38] * d[58] - 2 * d[12] * d[24] * d[38] * d[58] + 2 * d[9] * d[25] * d[38] * d[58] - 2 * d[15] * d[20] * d[39] * d[58] + 2 * d[17] * d[22] * d[39] * d[58] - 2 * d[11] * d[24] * d[39] * d[58] + 2 * d[13] * d[26] * d[39] * d[58] + 2 * d[17] * d[21] * d[40] * d[58] - 4 * d[16] * d[22] * d[40] * d[58] + 2 * d[15] * d[23] * d[40] * d[58] + 2 * d[14] * d[24] * d[40] * d[58] - 4 * d[13] * d[25] * d[40] * d[58] + 2 * d[12] * d[26] * d[40] * d[58] - 2 * d[17] * d[18] * d[41] * d[58] + 2 * d[15] * d[22] * d[41] * d[58] + 2 * d[13] * d[24] * d[41] * d[58] - 2 * d[9] * d[26] * d[41] * d[58] - 2 * d[12] * d[20] * d[42] * d[58] - 2 * d[11] * d[21] * d[42] * d[58] + 2 * d[14] * d[22] * d[42] * d[58] + 2 * d[13] * d[23] * d[42] * d[58] + 2 * d[11] * d[18] * d[43] * d[58] + 2 * d[9] * d[20] * d[43] * d[58] - 4 * d[13] * d[22] * d[43] * d[58] - 2 * d[14] * d[18] * d[44] * d[58] + 2 * d[13] * d[21] * d[44] * d[58] + 2 * d[12] * d[22] * d[44] * d[58] - 2 * d[9] * d[23] * d[44] * d[58] + 2 * d[17] * d[19] * d[36] * d[59] - 2 * d[16] * d[23] * d[36] * d[59] - 2 * d[14] * d[25] * d[36] * d[59] + 2 * d[10] * d[26] * d[36] * d[59] + 2 * d[17] * d[18] * d[37] * d[59] - 2 * d[15] * d[22] * d[37] * d[59] - 2 * d[13] * d[24] * d[37] * d[59] + 2 * d[9] * d[26] * d[37] * d[59] - 4 * d[17] * d[21] * d[39] * d[59] + 2 * d[16] * d[22] * d[39] * d[59] + 2 * d[15] * d[23] * d[39] * d[59] + 2 * d[14] * d[24] * d[39] * d[59] + 2 * d[13] * d[25] * d[39] * d[59] - 4 * d[12] * d[26] * d[39] * d[59] - 2 * d[15] * d[19] * d[40] * d[59] + 2 * d[16] * d[21] * d[40] * d[59] - 2 * d[10] * d[24] * d[40] * d[59] + 2 * d[12] * d[25] * d[40] * d[59] - 2 * d[16] * d[18] * d[41] * d[59] + 2 * d[15] * d[21] * d[41] * d[59] + 2 * d[12] * d[24] * d[41] * d[59] - 2 * d[9] * d[25] * d[41] * d[59] - 2 * d[13] * d[19] * d[42] * d[59] + 2 * d[14] * d[21] * d[42] * d[59] - 2 * d[10] * d[22] * d[42] * d[59] + 2 * d[12] * d[23] * d[42] * d[59] - 2 * d[14] * d[18] * d[43] * d[59] + 2 * d[13] * d[21] * d[43] * d[59] + 2 * d[12] * d[22] * d[43] * d[59] - 2 * d[9] * d[23] * d[43] * d[59] + 2 * d[10] * d[18] * d[44] * d[59] + 2 * d[9] * d[19] * d[44] * d[59] - 4 * d[12] * d[21] * d[44] * d[59] - d[11] * d[19] * d[36] * d[70] - d[10] * d[20] * d[36] * d[70] + 2 * d[14] * d[23] * d[36] * d[70] - d[11] * d[18] * d[37] * d[70] - d[9] * d[20] * d[37] * d[70] + 2 * d[13] * d[22] * d[37] * d[70] - d[10] * d[18] * d[38] * d[70] - d[9] * d[19] * d[38] * d[70] + 2 * d[12] * d[21] * d[38] * d[70] + 2 * d[12] * d[20] * d[39] * d[70] + 2 * d[11] * d[21] * d[39] * d[70] - 2 * d[14] * d[22] * d[39] * d[70] - 2 * d[13] * d[23] * d[39] * d[70] + 2 * d[13] * d[19] * d[40] * d[70] - 2 * d[14] * d[21] * d[40] * d[70] + 2 * d[10] * d[22] * d[40] * d[70] - 2 * d[12] * d[23] * d[40] * d[70] + 2 * d[14] * d[18] * d[41] * d[70] - 2 * d[13] * d[21] * d[41] * d[70] - 2 * d[12] * d[22] * d[41] * d[70] + 2 * d[9] * d[23] * d[41] * d[70];
    coeffs[68] = 2 * d[20] * d[24] * d[37] * d[57] - 2 * d[22] * d[26] * d[37] * d[57] + 2 * d[19] * d[24] * d[38] * d[57] - 2 * d[21] * d[25] * d[38] * d[57] - 2 * d[20] * d[25] * d[39] * d[57] + 2 * d[23] * d[26] * d[39] * d[57] + 2 * d[23] * d[25] * d[40] * d[57] - 2 * d[19] * d[26] * d[40] * d[57] - 4 * d[23] * d[24] * d[41] * d[57] + 2 * d[22] * d[25] * d[41] * d[57] + 2 * d[21] * d[26] * d[41] * d[57] + 2 * d[19] * d[20] * d[42] * d[57] - 2 * std::pow(d[23], 2) * d[42] * d[57] - 2 * d[20] * d[21] * d[43] * d[57] + 2 * d[22] * d[23] * d[43] * d[57] - 2 * d[19] * d[22] * d[44] * d[57] + 2 * d[21] * d[23] * d[44] * d[57] + 2 * d[20] * d[25] * d[36] * d[58] - 2 * d[23] * d[26] * d[36] * d[58] - 2 * d[21] * d[24] * d[38] * d[58] + 2 * d[18] * d[25] * d[38] * d[58] - 2 * d[20] * d[24] * d[39] * d[58] + 2 * d[22] * d[26] * d[39] * d[58] + 2 * d[23] * d[24] * d[40] * d[58] - 4 * d[22] * d[25] * d[40] * d[58] + 2 * d[21] * d[26] * d[40] * d[58] + 2 * d[22] * d[24] * d[41] * d[58] - 2 * d[18] * d[26] * d[41] * d[58] - 2 * d[20] * d[21] * d[42] * d[58] + 2 * d[22] * d[23] * d[42] * d[58] + 2 * d[18] * d[20] * d[43] * d[58] - 2 * std::pow(d[22], 2) * d[43] * d[58] + 2 * d[21] * d[22] * d[44] * d[58] - 2 * d[18] * d[23] * d[44] * d[58] - 2 * d[23] * d[25] * d[36] * d[59] + 2 * d[19] * d[26] * d[36] * d[59] - 2 * d[22] * d[24] * d[37] * d[59] + 2 * d[18] * d[26] * d[37] * d[59] + 2 * d[23] * d[24] * d[39] * d[59] + 2 * d[22] * d[25] * d[39] * d[59] - 4 * d[21] * d[26] * d[39] * d[59] - 2 * d[19] * d[24] * d[40] * d[59] + 2 * d[21] * d[25] * d[40] * d[59] + 2 * d[21] * d[24] * d[41] * d[59] - 2 * d[18] * d[25] * d[41] * d[59] - 2 * d[19] * d[22] * d[42] * d[59] + 2 * d[21] * d[23] * d[42] * d[59] + 2 * d[21] * d[22] * d[43] * d[59] - 2 * d[18] * d[23] * d[43] * d[59] + 2 * d[18] * d[19] * d[44] * d[59] - 2 * std::pow(d[21], 2) * d[44] * d[59] - d[19] * d[20] * d[36] * d[70] + std::pow(d[23], 2) * d[36] * d[70] - d[18] * d[20] * d[37] * d[70] + std::pow(d[22], 2) * d[37] * d[70] - d[18] * d[19] * d[38] * d[70] + std::pow(d[21], 2) * d[38] * d[70] + 2 * d[20] * d[21] * d[39] * d[70] - 2 * d[22] * d[23] * d[39] * d[70] + 2 * d[19] * d[22] * d[40] * d[70] - 2 * d[21] * d[23] * d[40] * d[70] - 2 * d[21] * d[22] * d[41] * d[70] + 2 * d[18] * d[23] * d[41] * d[70];
    coeffs[69] = 2 * d[15] * d[29] * d[37] * d[57] - 2 * d[17] * d[31] * d[37] * d[57] + 2 * d[11] * d[33] * d[37] * d[57] - 2 * d[13] * d[35] * d[37] * d[57] + 2 * d[15] * d[28] * d[38] * d[57] - 2 * d[16] * d[30] * d[38] * d[57] + 2 * d[10] * d[33] * d[38] * d[57] - 2 * d[12] * d[34] * d[38] * d[57] - 2 * d[16] * d[29] * d[39] * d[57] + 2 * d[17] * d[32] * d[39] * d[57] - 2 * d[11] * d[34] * d[39] * d[57] + 2 * d[14] * d[35] * d[39] * d[57] - 2 * d[17] * d[28] * d[40] * d[57] + 2 * d[16] * d[32] * d[40] * d[57] + 2 * d[14] * d[34] * d[40] * d[57] - 2 * d[10] * d[35] * d[40] * d[57] + 2 * d[17] * d[30] * d[41] * d[57] + 2 * d[16] * d[31] * d[41] * d[57] - 4 * d[15] * d[32] * d[41] * d[57] - 4 * d[14] * d[33] * d[41] * d[57] + 2 * d[13] * d[34] * d[41] * d[57] + 2 * d[12] * d[35] * d[41] * d[57] + 2 * d[11] * d[28] * d[42] * d[57] + 2 * d[10] * d[29] * d[42] * d[57] - 4 * d[14] * d[32] * d[42] * d[57] - 2 * d[12] * d[29] * d[43] * d[57] - 2 * d[11] * d[30] * d[43] * d[57] + 2 * d[14] * d[31] * d[43] * d[57] + 2 * d[13] * d[32] * d[43] * d[57] - 2 * d[13] * d[28] * d[44] * d[57] + 2 * d[14] * d[30] * d[44] * d[57] - 2 * d[10] * d[31] * d[44] * d[57] + 2 * d[12] * d[32] * d[44] * d[57] + 2 * d[16] * d[29] * d[36] * d[58] - 2 * d[17] * d[32] * d[36] * d[58] + 2 * d[11] * d[34] * d[36] * d[58] - 2 * d[14] * d[35] * d[36] * d[58] + 2 * d[16] * d[27] * d[38] * d[58] - 2 * d[15] * d[30] * d[38] * d[58] - 2 * d[12] * d[33] * d[38] * d[58] + 2 * d[9] * d[34] * d[38] * d[58] - 2 * d[15] * d[29] * d[39] * d[58] + 2 * d[17] * d[31] * d[39] * d[58] - 2 * d[11] * d[33] * d[39] * d[58] + 2 * d[13] * d[35] * d[39] * d[58] + 2 * d[17] * d[30] * d[40] * d[58] - 4 * d[16] * d[31] * d[40] * d[58] + 2 * d[15] * d[32] * d[40] * d[58] + 2 * d[14] * d[33] * d[40] * d[58] - 4 * d[13] * d[34] * d[40] * d[58] + 2 * d[12] * d[35] * d[40] * d[58] - 2 * d[17] * d[27] * d[41] * d[58] + 2 * d[15] * d[31] * d[41] * d[58] + 2 * d[13] * d[33] * d[41] * d[58] - 2 * d[9] * d[35] * d[41] * d[58] - 2 * d[12] * d[29] * d[42] * d[58] - 2 * d[11] * d[30] * d[42] * d[58] + 2 * d[14] * d[31] * d[42] * d[58] + 2 * d[13] * d[32] * d[42] * d[58] + 2 * d[11] * d[27] * d[43] * d[58] + 2 * d[9] * d[29] * d[43] * d[58] - 4 * d[13] * d[31] * d[43] * d[58] - 2 * d[14] * d[27] * d[44] * d[58] + 2 * d[13] * d[30] * d[44] * d[58] + 2 * d[12] * d[31] * d[44] * d[58] - 2 * d[9] * d[32] * d[44] * d[58] + 2 * d[17] * d[28] * d[36] * d[59] - 2 * d[16] * d[32] * d[36] * d[59] - 2 * d[14] * d[34] * d[36] * d[59] + 2 * d[10] * d[35] * d[36] * d[59] + 2 * d[17] * d[27] * d[37] * d[59] - 2 * d[15] * d[31] * d[37] * d[59] - 2 * d[13] * d[33] * d[37] * d[59] + 2 * d[9] * d[35] * d[37] * d[59] - 4 * d[17] * d[30] * d[39] * d[59] + 2 * d[16] * d[31] * d[39] * d[59] + 2 * d[15] * d[32] * d[39] * d[59] + 2 * d[14] * d[33] * d[39] * d[59] + 2 * d[13] * d[34] * d[39] * d[59] - 4 * d[12] * d[35] * d[39] * d[59] - 2 * d[15] * d[28] * d[40] * d[59] + 2 * d[16] * d[30] * d[40] * d[59] - 2 * d[10] * d[33] * d[40] * d[59] + 2 * d[12] * d[34] * d[40] * d[59] - 2 * d[16] * d[27] * d[41] * d[59] + 2 * d[15] * d[30] * d[41] * d[59] + 2 * d[12] * d[33] * d[41] * d[59] - 2 * d[9] * d[34] * d[41] * d[59] - 2 * d[13] * d[28] * d[42] * d[59] + 2 * d[14] * d[30] * d[42] * d[59] - 2 * d[10] * d[31] * d[42] * d[59] + 2 * d[12] * d[32] * d[42] * d[59] - 2 * d[14] * d[27] * d[43] * d[59] + 2 * d[13] * d[30] * d[43] * d[59] + 2 * d[12] * d[31] * d[43] * d[59] - 2 * d[9] * d[32] * d[43] * d[59] + 2 * d[10] * d[27] * d[44] * d[59] + 2 * d[9] * d[28] * d[44] * d[59] - 4 * d[12] * d[30] * d[44] * d[59] - d[11] * d[28] * d[36] * d[70] - d[10] * d[29] * d[36] * d[70] + 2 * d[14] * d[32] * d[36] * d[70] - d[11] * d[27] * d[37] * d[70] - d[9] * d[29] * d[37] * d[70] + 2 * d[13] * d[31] * d[37] * d[70] - d[10] * d[27] * d[38] * d[70] - d[9] * d[28] * d[38] * d[70] + 2 * d[12] * d[30] * d[38] * d[70] + 2 * d[12] * d[29] * d[39] * d[70] + 2 * d[11] * d[30] * d[39] * d[70] - 2 * d[14] * d[31] * d[39] * d[70] - 2 * d[13] * d[32] * d[39] * d[70] + 2 * d[13] * d[28] * d[40] * d[70] - 2 * d[14] * d[30] * d[40] * d[70] + 2 * d[10] * d[31] * d[40] * d[70] - 2 * d[12] * d[32] * d[40] * d[70] + 2 * d[14] * d[27] * d[41] * d[70] - 2 * d[13] * d[30] * d[41] * d[70] - 2 * d[12] * d[31] * d[41] * d[70] + 2 * d[9] * d[32] * d[41] * d[70];
    coeffs[70] = 2 * d[24] * d[29] * d[37] * d[57] - 2 * d[26] * d[31] * d[37] * d[57] + 2 * d[20] * d[33] * d[37] * d[57] - 2 * d[22] * d[35] * d[37] * d[57] + 2 * d[24] * d[28] * d[38] * d[57] - 2 * d[25] * d[30] * d[38] * d[57] + 2 * d[19] * d[33] * d[38] * d[57] - 2 * d[21] * d[34] * d[38] * d[57] - 2 * d[25] * d[29] * d[39] * d[57] + 2 * d[26] * d[32] * d[39] * d[57] - 2 * d[20] * d[34] * d[39] * d[57] + 2 * d[23] * d[35] * d[39] * d[57] - 2 * d[26] * d[28] * d[40] * d[57] + 2 * d[25] * d[32] * d[40] * d[57] + 2 * d[23] * d[34] * d[40] * d[57] - 2 * d[19] * d[35] * d[40] * d[57] + 2 * d[26] * d[30] * d[41] * d[57] + 2 * d[25] * d[31] * d[41] * d[57] - 4 * d[24] * d[32] * d[41] * d[57] - 4 * d[23] * d[33] * d[41] * d[57] + 2 * d[22] * d[34] * d[41] * d[57] + 2 * d[21] * d[35] * d[41] * d[57] + 2 * d[20] * d[28] * d[42] * d[57] + 2 * d[19] * d[29] * d[42] * d[57] - 4 * d[23] * d[32] * d[42] * d[57] - 2 * d[21] * d[29] * d[43] * d[57] - 2 * d[20] * d[30] * d[43] * d[57] + 2 * d[23] * d[31] * d[43] * d[57] + 2 * d[22] * d[32] * d[43] * d[57] - 2 * d[22] * d[28] * d[44] * d[57] + 2 * d[23] * d[30] * d[44] * d[57] - 2 * d[19] * d[31] * d[44] * d[57] + 2 * d[21] * d[32] * d[44] * d[57] + 2 * d[25] * d[29] * d[36] * d[58] - 2 * d[26] * d[32] * d[36] * d[58] + 2 * d[20] * d[34] * d[36] * d[58] - 2 * d[23] * d[35] * d[36] * d[58] + 2 * d[25] * d[27] * d[38] * d[58] - 2 * d[24] * d[30] * d[38] * d[58] - 2 * d[21] * d[33] * d[38] * d[58] + 2 * d[18] * d[34] * d[38] * d[58] - 2 * d[24] * d[29] * d[39] * d[58] + 2 * d[26] * d[31] * d[39] * d[58] - 2 * d[20] * d[33] * d[39] * d[58] + 2 * d[22] * d[35] * d[39] * d[58] + 2 * d[26] * d[30] * d[40] * d[58] - 4 * d[25] * d[31] * d[40] * d[58] + 2 * d[24] * d[32] * d[40] * d[58] + 2 * d[23] * d[33] * d[40] * d[58] - 4 * d[22] * d[34] * d[40] * d[58] + 2 * d[21] * d[35] * d[40] * d[58] - 2 * d[26] * d[27] * d[41] * d[58] + 2 * d[24] * d[31] * d[41] * d[58] + 2 * d[22] * d[33] * d[41] * d[58] - 2 * d[18] * d[35] * d[41] * d[58] - 2 * d[21] * d[29] * d[42] * d[58] - 2 * d[20] * d[30] * d[42] * d[58] + 2 * d[23] * d[31] * d[42] * d[58] + 2 * d[22] * d[32] * d[42] * d[58] + 2 * d[20] * d[27] * d[43] * d[58] + 2 * d[18] * d[29] * d[43] * d[58] - 4 * d[22] * d[31] * d[43] * d[58] - 2 * d[23] * d[27] * d[44] * d[58] + 2 * d[22] * d[30] * d[44] * d[58] + 2 * d[21] * d[31] * d[44] * d[58] - 2 * d[18] * d[32] * d[44] * d[58] + 2 * d[26] * d[28] * d[36] * d[59] - 2 * d[25] * d[32] * d[36] * d[59] - 2 * d[23] * d[34] * d[36] * d[59] + 2 * d[19] * d[35] * d[36] * d[59] + 2 * d[26] * d[27] * d[37] * d[59] - 2 * d[24] * d[31] * d[37] * d[59] - 2 * d[22] * d[33] * d[37] * d[59] + 2 * d[18] * d[35] * d[37] * d[59] - 4 * d[26] * d[30] * d[39] * d[59] + 2 * d[25] * d[31] * d[39] * d[59] + 2 * d[24] * d[32] * d[39] * d[59] + 2 * d[23] * d[33] * d[39] * d[59] + 2 * d[22] * d[34] * d[39] * d[59] - 4 * d[21] * d[35] * d[39] * d[59] - 2 * d[24] * d[28] * d[40] * d[59] + 2 * d[25] * d[30] * d[40] * d[59] - 2 * d[19] * d[33] * d[40] * d[59] + 2 * d[21] * d[34] * d[40] * d[59] - 2 * d[25] * d[27] * d[41] * d[59] + 2 * d[24] * d[30] * d[41] * d[59] + 2 * d[21] * d[33] * d[41] * d[59] - 2 * d[18] * d[34] * d[41] * d[59] - 2 * d[22] * d[28] * d[42] * d[59] + 2 * d[23] * d[30] * d[42] * d[59] - 2 * d[19] * d[31] * d[42] * d[59] + 2 * d[21] * d[32] * d[42] * d[59] - 2 * d[23] * d[27] * d[43] * d[59] + 2 * d[22] * d[30] * d[43] * d[59] + 2 * d[21] * d[31] * d[43] * d[59] - 2 * d[18] * d[32] * d[43] * d[59] + 2 * d[19] * d[27] * d[44] * d[59] + 2 * d[18] * d[28] * d[44] * d[59] - 4 * d[21] * d[30] * d[44] * d[59] - d[20] * d[28] * d[36] * d[70] - d[19] * d[29] * d[36] * d[70] + 2 * d[23] * d[32] * d[36] * d[70] - d[20] * d[27] * d[37] * d[70] - d[18] * d[29] * d[37] * d[70] + 2 * d[22] * d[31] * d[37] * d[70] - d[19] * d[27] * d[38] * d[70] - d[18] * d[28] * d[38] * d[70] + 2 * d[21] * d[30] * d[38] * d[70] + 2 * d[21] * d[29] * d[39] * d[70] + 2 * d[20] * d[30] * d[39] * d[70] - 2 * d[23] * d[31] * d[39] * d[70] - 2 * d[22] * d[32] * d[39] * d[70] + 2 * d[22] * d[28] * d[40] * d[70] - 2 * d[23] * d[30] * d[40] * d[70] + 2 * d[19] * d[31] * d[40] * d[70] - 2 * d[21] * d[32] * d[40] * d[70] + 2 * d[23] * d[27] * d[41] * d[70] - 2 * d[22] * d[30] * d[41] * d[70] - 2 * d[21] * d[31] * d[41] * d[70] + 2 * d[18] * d[32] * d[41] * d[70];
    coeffs[71] = 2 * d[29] * d[33] * d[37] * d[57] - 2 * d[31] * d[35] * d[37] * d[57] + 2 * d[28] * d[33] * d[38] * d[57] - 2 * d[30] * d[34] * d[38] * d[57] - 2 * d[29] * d[34] * d[39] * d[57] + 2 * d[32] * d[35] * d[39] * d[57] + 2 * d[32] * d[34] * d[40] * d[57] - 2 * d[28] * d[35] * d[40] * d[57] - 4 * d[32] * d[33] * d[41] * d[57] + 2 * d[31] * d[34] * d[41] * d[57] + 2 * d[30] * d[35] * d[41] * d[57] + 2 * d[28] * d[29] * d[42] * d[57] - 2 * std::pow(d[32], 2) * d[42] * d[57] - 2 * d[29] * d[30] * d[43] * d[57] + 2 * d[31] * d[32] * d[43] * d[57] - 2 * d[28] * d[31] * d[44] * d[57] + 2 * d[30] * d[32] * d[44] * d[57] + 2 * d[29] * d[34] * d[36] * d[58] - 2 * d[32] * d[35] * d[36] * d[58] - 2 * d[30] * d[33] * d[38] * d[58] + 2 * d[27] * d[34] * d[38] * d[58] - 2 * d[29] * d[33] * d[39] * d[58] + 2 * d[31] * d[35] * d[39] * d[58] + 2 * d[32] * d[33] * d[40] * d[58] - 4 * d[31] * d[34] * d[40] * d[58] + 2 * d[30] * d[35] * d[40] * d[58] + 2 * d[31] * d[33] * d[41] * d[58] - 2 * d[27] * d[35] * d[41] * d[58] - 2 * d[29] * d[30] * d[42] * d[58] + 2 * d[31] * d[32] * d[42] * d[58] + 2 * d[27] * d[29] * d[43] * d[58] - 2 * std::pow(d[31], 2) * d[43] * d[58] + 2 * d[30] * d[31] * d[44] * d[58] - 2 * d[27] * d[32] * d[44] * d[58] - 2 * d[32] * d[34] * d[36] * d[59] + 2 * d[28] * d[35] * d[36] * d[59] - 2 * d[31] * d[33] * d[37] * d[59] + 2 * d[27] * d[35] * d[37] * d[59] + 2 * d[32] * d[33] * d[39] * d[59] + 2 * d[31] * d[34] * d[39] * d[59] - 4 * d[30] * d[35] * d[39] * d[59] - 2 * d[28] * d[33] * d[40] * d[59] + 2 * d[30] * d[34] * d[40] * d[59] + 2 * d[30] * d[33] * d[41] * d[59] - 2 * d[27] * d[34] * d[41] * d[59] - 2 * d[28] * d[31] * d[42] * d[59] + 2 * d[30] * d[32] * d[42] * d[59] + 2 * d[30] * d[31] * d[43] * d[59] - 2 * d[27] * d[32] * d[43] * d[59] + 2 * d[27] * d[28] * d[44] * d[59] - 2 * std::pow(d[30], 2) * d[44] * d[59] - d[28] * d[29] * d[36] * d[70] + std::pow(d[32], 2) * d[36] * d[70] - d[27] * d[29] * d[37] * d[70] + std::pow(d[31], 2) * d[37] * d[70] - d[27] * d[28] * d[38] * d[70] + std::pow(d[30], 2) * d[38] * d[70] + 2 * d[29] * d[30] * d[39] * d[70] - 2 * d[31] * d[32] * d[39] * d[70] + 2 * d[28] * d[31] * d[40] * d[70] - 2 * d[30] * d[32] * d[40] * d[70] - 2 * d[30] * d[31] * d[41] * d[70] + 2 * d[27] * d[32] * d[41] * d[70];
    coeffs[72] = 2 * d[15] * d[37] * d[38] * d[57] - 2 * d[16] * d[38] * d[39] * d[57] - 2 * d[17] * d[37] * d[40] * d[57] + 2 * d[17] * d[39] * d[41] * d[57] + 2 * d[16] * d[40] * d[41] * d[57] - 2 * d[15] * std::pow(d[41], 2) * d[57] + 2 * d[11] * d[37] * d[42] * d[57] + 2 * d[10] * d[38] * d[42] * d[57] - 4 * d[14] * d[41] * d[42] * d[57] - 2 * d[12] * d[38] * d[43] * d[57] - 2 * d[11] * d[39] * d[43] * d[57] + 2 * d[14] * d[40] * d[43] * d[57] + 2 * d[13] * d[41] * d[43] * d[57] - 2 * d[13] * d[37] * d[44] * d[57] + 2 * d[14] * d[39] * d[44] * d[57] - 2 * d[10] * d[40] * d[44] * d[57] + 2 * d[12] * d[41] * d[44] * d[57] + 2 * d[16] * d[36] * d[38] * d[58] - 2 * d[15] * d[38] * d[39] * d[58] + 2 * d[17] * d[39] * d[40] * d[58] - 2 * d[16] * std::pow(d[40], 2) * d[58] - 2 * d[17] * d[36] * d[41] * d[58] + 2 * d[15] * d[40] * d[41] * d[58] - 2 * d[12] * d[38] * d[42] * d[58] - 2 * d[11] * d[39] * d[42] * d[58] + 2 * d[14] * d[40] * d[42] * d[58] + 2 * d[13] * d[41] * d[42] * d[58] + 2 * d[11] * d[36] * d[43] * d[58] + 2 * d[9] * d[38] * d[43] * d[58] - 4 * d[13] * d[40] * d[43] * d[58] - 2 * d[14] * d[36] * d[44] * d[58] + 2 * d[13] * d[39] * d[44] * d[58] + 2 * d[12] * d[40] * d[44] * d[58] - 2 * d[9] * d[41] * d[44] * d[58] + 2 * d[17] * d[36] * d[37] * d[59] - 2 * d[17] * std::pow(d[39], 2) * d[59] - 2 * d[15] * d[37] * d[40] * d[59] + 2 * d[16] * d[39] * d[40] * d[59] - 2 * d[16] * d[36] * d[41] * d[59] + 2 * d[15] * d[39] * d[41] * d[59] - 2 * d[13] * d[37] * d[42] * d[59] + 2 * d[14] * d[39] * d[42] * d[59] - 2 * d[10] * d[40] * d[42] * d[59] + 2 * d[12] * d[41] * d[42] * d[59] - 2 * d[14] * d[36] * d[43] * d[59] + 2 * d[13] * d[39] * d[43] * d[59] + 2 * d[12] * d[40] * d[43] * d[59] - 2 * d[9] * d[41] * d[43] * d[59] + 2 * d[10] * d[36] * d[44] * d[59] + 2 * d[9] * d[37] * d[44] * d[59] - 4 * d[12] * d[39] * d[44] * d[59] - d[11] * d[36] * d[37] * d[70] - d[10] * d[36] * d[38] * d[70] - d[9] * d[37] * d[38] * d[70] + 2 * d[12] * d[38] * d[39] * d[70] + d[11] * std::pow(d[39], 2) * d[70] + 2 * d[13] * d[37] * d[40] * d[70] - 2 * d[14] * d[39] * d[40] * d[70] + d[10] * std::pow(d[40], 2) * d[70] + 2 * d[14] * d[36] * d[41] * d[70] - 2 * d[13] * d[39] * d[41] * d[70] - 2 * d[12] * d[40] * d[41] * d[70] + d[9] * std::pow(d[41], 2) * d[70];
    coeffs[73] = 2 * d[24] * d[37] * d[38] * d[57] - 2 * d[25] * d[38] * d[39] * d[57] - 2 * d[26] * d[37] * d[40] * d[57] + 2 * d[26] * d[39] * d[41] * d[57] + 2 * d[25] * d[40] * d[41] * d[57] - 2 * d[24] * std::pow(d[41], 2) * d[57] + 2 * d[20] * d[37] * d[42] * d[57] + 2 * d[19] * d[38] * d[42] * d[57] - 4 * d[23] * d[41] * d[42] * d[57] - 2 * d[21] * d[38] * d[43] * d[57] - 2 * d[20] * d[39] * d[43] * d[57] + 2 * d[23] * d[40] * d[43] * d[57] + 2 * d[22] * d[41] * d[43] * d[57] - 2 * d[22] * d[37] * d[44] * d[57] + 2 * d[23] * d[39] * d[44] * d[57] - 2 * d[19] * d[40] * d[44] * d[57] + 2 * d[21] * d[41] * d[44] * d[57] + 2 * d[25] * d[36] * d[38] * d[58] - 2 * d[24] * d[38] * d[39] * d[58] + 2 * d[26] * d[39] * d[40] * d[58] - 2 * d[25] * std::pow(d[40], 2) * d[58] - 2 * d[26] * d[36] * d[41] * d[58] + 2 * d[24] * d[40] * d[41] * d[58] - 2 * d[21] * d[38] * d[42] * d[58] - 2 * d[20] * d[39] * d[42] * d[58] + 2 * d[23] * d[40] * d[42] * d[58] + 2 * d[22] * d[41] * d[42] * d[58] + 2 * d[20] * d[36] * d[43] * d[58] + 2 * d[18] * d[38] * d[43] * d[58] - 4 * d[22] * d[40] * d[43] * d[58] - 2 * d[23] * d[36] * d[44] * d[58] + 2 * d[22] * d[39] * d[44] * d[58] + 2 * d[21] * d[40] * d[44] * d[58] - 2 * d[18] * d[41] * d[44] * d[58] + 2 * d[26] * d[36] * d[37] * d[59] - 2 * d[26] * std::pow(d[39], 2) * d[59] - 2 * d[24] * d[37] * d[40] * d[59] + 2 * d[25] * d[39] * d[40] * d[59] - 2 * d[25] * d[36] * d[41] * d[59] + 2 * d[24] * d[39] * d[41] * d[59] - 2 * d[22] * d[37] * d[42] * d[59] + 2 * d[23] * d[39] * d[42] * d[59] - 2 * d[19] * d[40] * d[42] * d[59] + 2 * d[21] * d[41] * d[42] * d[59] - 2 * d[23] * d[36] * d[43] * d[59] + 2 * d[22] * d[39] * d[43] * d[59] + 2 * d[21] * d[40] * d[43] * d[59] - 2 * d[18] * d[41] * d[43] * d[59] + 2 * d[19] * d[36] * d[44] * d[59] + 2 * d[18] * d[37] * d[44] * d[59] - 4 * d[21] * d[39] * d[44] * d[59] - d[20] * d[36] * d[37] * d[70] - d[19] * d[36] * d[38] * d[70] - d[18] * d[37] * d[38] * d[70] + 2 * d[21] * d[38] * d[39] * d[70] + d[20] * std::pow(d[39], 2) * d[70] + 2 * d[22] * d[37] * d[40] * d[70] - 2 * d[23] * d[39] * d[40] * d[70] + d[19] * std::pow(d[40], 2) * d[70] + 2 * d[23] * d[36] * d[41] * d[70] - 2 * d[22] * d[39] * d[41] * d[70] - 2 * d[21] * d[40] * d[41] * d[70] + d[18] * std::pow(d[41], 2) * d[70];
    coeffs[74] = 2 * d[33] * d[37] * d[38] * d[57] - 2 * d[34] * d[38] * d[39] * d[57] - 2 * d[35] * d[37] * d[40] * d[57] + 2 * d[35] * d[39] * d[41] * d[57] + 2 * d[34] * d[40] * d[41] * d[57] - 2 * d[33] * std::pow(d[41], 2) * d[57] + 2 * d[29] * d[37] * d[42] * d[57] + 2 * d[28] * d[38] * d[42] * d[57] - 4 * d[32] * d[41] * d[42] * d[57] - 2 * d[30] * d[38] * d[43] * d[57] - 2 * d[29] * d[39] * d[43] * d[57] + 2 * d[32] * d[40] * d[43] * d[57] + 2 * d[31] * d[41] * d[43] * d[57] - 2 * d[31] * d[37] * d[44] * d[57] + 2 * d[32] * d[39] * d[44] * d[57] - 2 * d[28] * d[40] * d[44] * d[57] + 2 * d[30] * d[41] * d[44] * d[57] + 2 * d[34] * d[36] * d[38] * d[58] - 2 * d[33] * d[38] * d[39] * d[58] + 2 * d[35] * d[39] * d[40] * d[58] - 2 * d[34] * std::pow(d[40], 2) * d[58] - 2 * d[35] * d[36] * d[41] * d[58] + 2 * d[33] * d[40] * d[41] * d[58] - 2 * d[30] * d[38] * d[42] * d[58] - 2 * d[29] * d[39] * d[42] * d[58] + 2 * d[32] * d[40] * d[42] * d[58] + 2 * d[31] * d[41] * d[42] * d[58] + 2 * d[29] * d[36] * d[43] * d[58] + 2 * d[27] * d[38] * d[43] * d[58] - 4 * d[31] * d[40] * d[43] * d[58] - 2 * d[32] * d[36] * d[44] * d[58] + 2 * d[31] * d[39] * d[44] * d[58] + 2 * d[30] * d[40] * d[44] * d[58] - 2 * d[27] * d[41] * d[44] * d[58] + 2 * d[35] * d[36] * d[37] * d[59] - 2 * d[35] * std::pow(d[39], 2) * d[59] - 2 * d[33] * d[37] * d[40] * d[59] + 2 * d[34] * d[39] * d[40] * d[59] - 2 * d[34] * d[36] * d[41] * d[59] + 2 * d[33] * d[39] * d[41] * d[59] - 2 * d[31] * d[37] * d[42] * d[59] + 2 * d[32] * d[39] * d[42] * d[59] - 2 * d[28] * d[40] * d[42] * d[59] + 2 * d[30] * d[41] * d[42] * d[59] - 2 * d[32] * d[36] * d[43] * d[59] + 2 * d[31] * d[39] * d[43] * d[59] + 2 * d[30] * d[40] * d[43] * d[59] - 2 * d[27] * d[41] * d[43] * d[59] + 2 * d[28] * d[36] * d[44] * d[59] + 2 * d[27] * d[37] * d[44] * d[59] - 4 * d[30] * d[39] * d[44] * d[59] - d[29] * d[36] * d[37] * d[70] - d[28] * d[36] * d[38] * d[70] - d[27] * d[37] * d[38] * d[70] + 2 * d[30] * d[38] * d[39] * d[70] + d[29] * std::pow(d[39], 2) * d[70] + 2 * d[31] * d[37] * d[40] * d[70] - 2 * d[32] * d[39] * d[40] * d[70] + d[28] * std::pow(d[40], 2) * d[70] + 2 * d[32] * d[36] * d[41] * d[70] - 2 * d[31] * d[39] * d[41] * d[70] - 2 * d[30] * d[40] * d[41] * d[70] + d[27] * std::pow(d[41], 2) * d[70];
    coeffs[75] = 2 * d[37] * d[38] * d[42] * d[57] - 2 * std::pow(d[41], 2) * d[42] * d[57] - 2 * d[38] * d[39] * d[43] * d[57] + 2 * d[40] * d[41] * d[43] * d[57] - 2 * d[37] * d[40] * d[44] * d[57] + 2 * d[39] * d[41] * d[44] * d[57] - 2 * d[38] * d[39] * d[42] * d[58] + 2 * d[40] * d[41] * d[42] * d[58] + 2 * d[36] * d[38] * d[43] * d[58] - 2 * std::pow(d[40], 2) * d[43] * d[58] + 2 * d[39] * d[40] * d[44] * d[58] - 2 * d[36] * d[41] * d[44] * d[58] - 2 * d[37] * d[40] * d[42] * d[59] + 2 * d[39] * d[41] * d[42] * d[59] + 2 * d[39] * d[40] * d[43] * d[59] - 2 * d[36] * d[41] * d[43] * d[59] + 2 * d[36] * d[37] * d[44] * d[59] - 2 * std::pow(d[39], 2) * d[44] * d[59] - d[36] * d[37] * d[38] * d[70] + d[38] * std::pow(d[39], 2) * d[70] + d[37] * std::pow(d[40], 2) * d[70] - 2 * d[39] * d[40] * d[41] * d[70] + d[36] * std::pow(d[41], 2) * d[70];
    coeffs[76] = 2 * d[11] * d[15] * d[46] * d[57] - 2 * d[13] * d[17] * d[46] * d[57] + 2 * d[10] * d[15] * d[47] * d[57] - 2 * d[12] * d[16] * d[47] * d[57] - 2 * d[11] * d[16] * d[48] * d[57] + 2 * d[14] * d[17] * d[48] * d[57] + 2 * d[14] * d[16] * d[49] * d[57] - 2 * d[10] * d[17] * d[49] * d[57] - 4 * d[14] * d[15] * d[50] * d[57] + 2 * d[13] * d[16] * d[50] * d[57] + 2 * d[12] * d[17] * d[50] * d[57] + 2 * d[10] * d[11] * d[51] * d[57] - 2 * std::pow(d[14], 2) * d[51] * d[57] - 2 * d[11] * d[12] * d[52] * d[57] + 2 * d[13] * d[14] * d[52] * d[57] - 2 * d[10] * d[13] * d[53] * d[57] + 2 * d[12] * d[14] * d[53] * d[57] + 2 * d[11] * d[16] * d[45] * d[58] - 2 * d[14] * d[17] * d[45] * d[58] - 2 * d[12] * d[15] * d[47] * d[58] + 2 * d[9] * d[16] * d[47] * d[58] - 2 * d[11] * d[15] * d[48] * d[58] + 2 * d[13] * d[17] * d[48] * d[58] + 2 * d[14] * d[15] * d[49] * d[58] - 4 * d[13] * d[16] * d[49] * d[58] + 2 * d[12] * d[17] * d[49] * d[58] + 2 * d[13] * d[15] * d[50] * d[58] - 2 * d[9] * d[17] * d[50] * d[58] - 2 * d[11] * d[12] * d[51] * d[58] + 2 * d[13] * d[14] * d[51] * d[58] + 2 * d[9] * d[11] * d[52] * d[58] - 2 * std::pow(d[13], 2) * d[52] * d[58] + 2 * d[12] * d[13] * d[53] * d[58] - 2 * d[9] * d[14] * d[53] * d[58] - 2 * d[14] * d[16] * d[45] * d[59] + 2 * d[10] * d[17] * d[45] * d[59] - 2 * d[13] * d[15] * d[46] * d[59] + 2 * d[9] * d[17] * d[46] * d[59] + 2 * d[14] * d[15] * d[48] * d[59] + 2 * d[13] * d[16] * d[48] * d[59] - 4 * d[12] * d[17] * d[48] * d[59] - 2 * d[10] * d[15] * d[49] * d[59] + 2 * d[12] * d[16] * d[49] * d[59] + 2 * d[12] * d[15] * d[50] * d[59] - 2 * d[9] * d[16] * d[50] * d[59] - 2 * d[10] * d[13] * d[51] * d[59] + 2 * d[12] * d[14] * d[51] * d[59] + 2 * d[12] * d[13] * d[52] * d[59] - 2 * d[9] * d[14] * d[52] * d[59] + 2 * d[9] * d[10] * d[53] * d[59] - 2 * std::pow(d[12], 2) * d[53] * d[59] - d[10] * d[11] * d[45] * d[70] + std::pow(d[14], 2) * d[45] * d[70] - d[9] * d[11] * d[46] * d[70] + std::pow(d[13], 2) * d[46] * d[70] - d[9] * d[10] * d[47] * d[70] + std::pow(d[12], 2) * d[47] * d[70] + 2 * d[11] * d[12] * d[48] * d[70] - 2 * d[13] * d[14] * d[48] * d[70] + 2 * d[10] * d[13] * d[49] * d[70] - 2 * d[12] * d[14] * d[49] * d[70] - 2 * d[12] * d[13] * d[50] * d[70] + 2 * d[9] * d[14] * d[50] * d[70];
    coeffs[77] = 2 * d[15] * d[20] * d[46] * d[57] - 2 * d[17] * d[22] * d[46] * d[57] + 2 * d[11] * d[24] * d[46] * d[57] - 2 * d[13] * d[26] * d[46] * d[57] + 2 * d[15] * d[19] * d[47] * d[57] - 2 * d[16] * d[21] * d[47] * d[57] + 2 * d[10] * d[24] * d[47] * d[57] - 2 * d[12] * d[25] * d[47] * d[57] - 2 * d[16] * d[20] * d[48] * d[57] + 2 * d[17] * d[23] * d[48] * d[57] - 2 * d[11] * d[25] * d[48] * d[57] + 2 * d[14] * d[26] * d[48] * d[57] - 2 * d[17] * d[19] * d[49] * d[57] + 2 * d[16] * d[23] * d[49] * d[57] + 2 * d[14] * d[25] * d[49] * d[57] - 2 * d[10] * d[26] * d[49] * d[57] + 2 * d[17] * d[21] * d[50] * d[57] + 2 * d[16] * d[22] * d[50] * d[57] - 4 * d[15] * d[23] * d[50] * d[57] - 4 * d[14] * d[24] * d[50] * d[57] + 2 * d[13] * d[25] * d[50] * d[57] + 2 * d[12] * d[26] * d[50] * d[57] + 2 * d[11] * d[19] * d[51] * d[57] + 2 * d[10] * d[20] * d[51] * d[57] - 4 * d[14] * d[23] * d[51] * d[57] - 2 * d[12] * d[20] * d[52] * d[57] - 2 * d[11] * d[21] * d[52] * d[57] + 2 * d[14] * d[22] * d[52] * d[57] + 2 * d[13] * d[23] * d[52] * d[57] - 2 * d[13] * d[19] * d[53] * d[57] + 2 * d[14] * d[21] * d[53] * d[57] - 2 * d[10] * d[22] * d[53] * d[57] + 2 * d[12] * d[23] * d[53] * d[57] + 2 * d[16] * d[20] * d[45] * d[58] - 2 * d[17] * d[23] * d[45] * d[58] + 2 * d[11] * d[25] * d[45] * d[58] - 2 * d[14] * d[26] * d[45] * d[58] + 2 * d[16] * d[18] * d[47] * d[58] - 2 * d[15] * d[21] * d[47] * d[58] - 2 * d[12] * d[24] * d[47] * d[58] + 2 * d[9] * d[25] * d[47] * d[58] - 2 * d[15] * d[20] * d[48] * d[58] + 2 * d[17] * d[22] * d[48] * d[58] - 2 * d[11] * d[24] * d[48] * d[58] + 2 * d[13] * d[26] * d[48] * d[58] + 2 * d[17] * d[21] * d[49] * d[58] - 4 * d[16] * d[22] * d[49] * d[58] + 2 * d[15] * d[23] * d[49] * d[58] + 2 * d[14] * d[24] * d[49] * d[58] - 4 * d[13] * d[25] * d[49] * d[58] + 2 * d[12] * d[26] * d[49] * d[58] - 2 * d[17] * d[18] * d[50] * d[58] + 2 * d[15] * d[22] * d[50] * d[58] + 2 * d[13] * d[24] * d[50] * d[58] - 2 * d[9] * d[26] * d[50] * d[58] - 2 * d[12] * d[20] * d[51] * d[58] - 2 * d[11] * d[21] * d[51] * d[58] + 2 * d[14] * d[22] * d[51] * d[58] + 2 * d[13] * d[23] * d[51] * d[58] + 2 * d[11] * d[18] * d[52] * d[58] + 2 * d[9] * d[20] * d[52] * d[58] - 4 * d[13] * d[22] * d[52] * d[58] - 2 * d[14] * d[18] * d[53] * d[58] + 2 * d[13] * d[21] * d[53] * d[58] + 2 * d[12] * d[22] * d[53] * d[58] - 2 * d[9] * d[23] * d[53] * d[58] + 2 * d[17] * d[19] * d[45] * d[59] - 2 * d[16] * d[23] * d[45] * d[59] - 2 * d[14] * d[25] * d[45] * d[59] + 2 * d[10] * d[26] * d[45] * d[59] + 2 * d[17] * d[18] * d[46] * d[59] - 2 * d[15] * d[22] * d[46] * d[59] - 2 * d[13] * d[24] * d[46] * d[59] + 2 * d[9] * d[26] * d[46] * d[59] - 4 * d[17] * d[21] * d[48] * d[59] + 2 * d[16] * d[22] * d[48] * d[59] + 2 * d[15] * d[23] * d[48] * d[59] + 2 * d[14] * d[24] * d[48] * d[59] + 2 * d[13] * d[25] * d[48] * d[59] - 4 * d[12] * d[26] * d[48] * d[59] - 2 * d[15] * d[19] * d[49] * d[59] + 2 * d[16] * d[21] * d[49] * d[59] - 2 * d[10] * d[24] * d[49] * d[59] + 2 * d[12] * d[25] * d[49] * d[59] - 2 * d[16] * d[18] * d[50] * d[59] + 2 * d[15] * d[21] * d[50] * d[59] + 2 * d[12] * d[24] * d[50] * d[59] - 2 * d[9] * d[25] * d[50] * d[59] - 2 * d[13] * d[19] * d[51] * d[59] + 2 * d[14] * d[21] * d[51] * d[59] - 2 * d[10] * d[22] * d[51] * d[59] + 2 * d[12] * d[23] * d[51] * d[59] - 2 * d[14] * d[18] * d[52] * d[59] + 2 * d[13] * d[21] * d[52] * d[59] + 2 * d[12] * d[22] * d[52] * d[59] - 2 * d[9] * d[23] * d[52] * d[59] + 2 * d[10] * d[18] * d[53] * d[59] + 2 * d[9] * d[19] * d[53] * d[59] - 4 * d[12] * d[21] * d[53] * d[59] - d[11] * d[19] * d[45] * d[70] - d[10] * d[20] * d[45] * d[70] + 2 * d[14] * d[23] * d[45] * d[70] - d[11] * d[18] * d[46] * d[70] - d[9] * d[20] * d[46] * d[70] + 2 * d[13] * d[22] * d[46] * d[70] - d[10] * d[18] * d[47] * d[70] - d[9] * d[19] * d[47] * d[70] + 2 * d[12] * d[21] * d[47] * d[70] + 2 * d[12] * d[20] * d[48] * d[70] + 2 * d[11] * d[21] * d[48] * d[70] - 2 * d[14] * d[22] * d[48] * d[70] - 2 * d[13] * d[23] * d[48] * d[70] + 2 * d[13] * d[19] * d[49] * d[70] - 2 * d[14] * d[21] * d[49] * d[70] + 2 * d[10] * d[22] * d[49] * d[70] - 2 * d[12] * d[23] * d[49] * d[70] + 2 * d[14] * d[18] * d[50] * d[70] - 2 * d[13] * d[21] * d[50] * d[70] - 2 * d[12] * d[22] * d[50] * d[70] + 2 * d[9] * d[23] * d[50] * d[70];
    coeffs[78] = 2 * d[20] * d[24] * d[46] * d[57] - 2 * d[22] * d[26] * d[46] * d[57] + 2 * d[19] * d[24] * d[47] * d[57] - 2 * d[21] * d[25] * d[47] * d[57] - 2 * d[20] * d[25] * d[48] * d[57] + 2 * d[23] * d[26] * d[48] * d[57] + 2 * d[23] * d[25] * d[49] * d[57] - 2 * d[19] * d[26] * d[49] * d[57] - 4 * d[23] * d[24] * d[50] * d[57] + 2 * d[22] * d[25] * d[50] * d[57] + 2 * d[21] * d[26] * d[50] * d[57] + 2 * d[19] * d[20] * d[51] * d[57] - 2 * std::pow(d[23], 2) * d[51] * d[57] - 2 * d[20] * d[21] * d[52] * d[57] + 2 * d[22] * d[23] * d[52] * d[57] - 2 * d[19] * d[22] * d[53] * d[57] + 2 * d[21] * d[23] * d[53] * d[57] + 2 * d[20] * d[25] * d[45] * d[58] - 2 * d[23] * d[26] * d[45] * d[58] - 2 * d[21] * d[24] * d[47] * d[58] + 2 * d[18] * d[25] * d[47] * d[58] - 2 * d[20] * d[24] * d[48] * d[58] + 2 * d[22] * d[26] * d[48] * d[58] + 2 * d[23] * d[24] * d[49] * d[58] - 4 * d[22] * d[25] * d[49] * d[58] + 2 * d[21] * d[26] * d[49] * d[58] + 2 * d[22] * d[24] * d[50] * d[58] - 2 * d[18] * d[26] * d[50] * d[58] - 2 * d[20] * d[21] * d[51] * d[58] + 2 * d[22] * d[23] * d[51] * d[58] + 2 * d[18] * d[20] * d[52] * d[58] - 2 * std::pow(d[22], 2) * d[52] * d[58] + 2 * d[21] * d[22] * d[53] * d[58] - 2 * d[18] * d[23] * d[53] * d[58] - 2 * d[23] * d[25] * d[45] * d[59] + 2 * d[19] * d[26] * d[45] * d[59] - 2 * d[22] * d[24] * d[46] * d[59] + 2 * d[18] * d[26] * d[46] * d[59] + 2 * d[23] * d[24] * d[48] * d[59] + 2 * d[22] * d[25] * d[48] * d[59] - 4 * d[21] * d[26] * d[48] * d[59] - 2 * d[19] * d[24] * d[49] * d[59] + 2 * d[21] * d[25] * d[49] * d[59] + 2 * d[21] * d[24] * d[50] * d[59] - 2 * d[18] * d[25] * d[50] * d[59] - 2 * d[19] * d[22] * d[51] * d[59] + 2 * d[21] * d[23] * d[51] * d[59] + 2 * d[21] * d[22] * d[52] * d[59] - 2 * d[18] * d[23] * d[52] * d[59] + 2 * d[18] * d[19] * d[53] * d[59] - 2 * std::pow(d[21], 2) * d[53] * d[59] - d[19] * d[20] * d[45] * d[70] + std::pow(d[23], 2) * d[45] * d[70] - d[18] * d[20] * d[46] * d[70] + std::pow(d[22], 2) * d[46] * d[70] - d[18] * d[19] * d[47] * d[70] + std::pow(d[21], 2) * d[47] * d[70] + 2 * d[20] * d[21] * d[48] * d[70] - 2 * d[22] * d[23] * d[48] * d[70] + 2 * d[19] * d[22] * d[49] * d[70] - 2 * d[21] * d[23] * d[49] * d[70] - 2 * d[21] * d[22] * d[50] * d[70] + 2 * d[18] * d[23] * d[50] * d[70];
    coeffs[79] = 2 * d[15] * d[29] * d[46] * d[57] - 2 * d[17] * d[31] * d[46] * d[57] + 2 * d[11] * d[33] * d[46] * d[57] - 2 * d[13] * d[35] * d[46] * d[57] + 2 * d[15] * d[28] * d[47] * d[57] - 2 * d[16] * d[30] * d[47] * d[57] + 2 * d[10] * d[33] * d[47] * d[57] - 2 * d[12] * d[34] * d[47] * d[57] - 2 * d[16] * d[29] * d[48] * d[57] + 2 * d[17] * d[32] * d[48] * d[57] - 2 * d[11] * d[34] * d[48] * d[57] + 2 * d[14] * d[35] * d[48] * d[57] - 2 * d[17] * d[28] * d[49] * d[57] + 2 * d[16] * d[32] * d[49] * d[57] + 2 * d[14] * d[34] * d[49] * d[57] - 2 * d[10] * d[35] * d[49] * d[57] + 2 * d[17] * d[30] * d[50] * d[57] + 2 * d[16] * d[31] * d[50] * d[57] - 4 * d[15] * d[32] * d[50] * d[57] - 4 * d[14] * d[33] * d[50] * d[57] + 2 * d[13] * d[34] * d[50] * d[57] + 2 * d[12] * d[35] * d[50] * d[57] + 2 * d[11] * d[28] * d[51] * d[57] + 2 * d[10] * d[29] * d[51] * d[57] - 4 * d[14] * d[32] * d[51] * d[57] - 2 * d[12] * d[29] * d[52] * d[57] - 2 * d[11] * d[30] * d[52] * d[57] + 2 * d[14] * d[31] * d[52] * d[57] + 2 * d[13] * d[32] * d[52] * d[57] - 2 * d[13] * d[28] * d[53] * d[57] + 2 * d[14] * d[30] * d[53] * d[57] - 2 * d[10] * d[31] * d[53] * d[57] + 2 * d[12] * d[32] * d[53] * d[57] + 2 * d[16] * d[29] * d[45] * d[58] - 2 * d[17] * d[32] * d[45] * d[58] + 2 * d[11] * d[34] * d[45] * d[58] - 2 * d[14] * d[35] * d[45] * d[58] + 2 * d[16] * d[27] * d[47] * d[58] - 2 * d[15] * d[30] * d[47] * d[58] - 2 * d[12] * d[33] * d[47] * d[58] + 2 * d[9] * d[34] * d[47] * d[58] - 2 * d[15] * d[29] * d[48] * d[58] + 2 * d[17] * d[31] * d[48] * d[58] - 2 * d[11] * d[33] * d[48] * d[58] + 2 * d[13] * d[35] * d[48] * d[58] + 2 * d[17] * d[30] * d[49] * d[58] - 4 * d[16] * d[31] * d[49] * d[58] + 2 * d[15] * d[32] * d[49] * d[58] + 2 * d[14] * d[33] * d[49] * d[58] - 4 * d[13] * d[34] * d[49] * d[58] + 2 * d[12] * d[35] * d[49] * d[58] - 2 * d[17] * d[27] * d[50] * d[58] + 2 * d[15] * d[31] * d[50] * d[58] + 2 * d[13] * d[33] * d[50] * d[58] - 2 * d[9] * d[35] * d[50] * d[58] - 2 * d[12] * d[29] * d[51] * d[58] - 2 * d[11] * d[30] * d[51] * d[58] + 2 * d[14] * d[31] * d[51] * d[58] + 2 * d[13] * d[32] * d[51] * d[58] + 2 * d[11] * d[27] * d[52] * d[58] + 2 * d[9] * d[29] * d[52] * d[58] - 4 * d[13] * d[31] * d[52] * d[58] - 2 * d[14] * d[27] * d[53] * d[58] + 2 * d[13] * d[30] * d[53] * d[58] + 2 * d[12] * d[31] * d[53] * d[58] - 2 * d[9] * d[32] * d[53] * d[58] + 2 * d[17] * d[28] * d[45] * d[59] - 2 * d[16] * d[32] * d[45] * d[59] - 2 * d[14] * d[34] * d[45] * d[59] + 2 * d[10] * d[35] * d[45] * d[59] + 2 * d[17] * d[27] * d[46] * d[59] - 2 * d[15] * d[31] * d[46] * d[59] - 2 * d[13] * d[33] * d[46] * d[59] + 2 * d[9] * d[35] * d[46] * d[59] - 4 * d[17] * d[30] * d[48] * d[59] + 2 * d[16] * d[31] * d[48] * d[59] + 2 * d[15] * d[32] * d[48] * d[59] + 2 * d[14] * d[33] * d[48] * d[59] + 2 * d[13] * d[34] * d[48] * d[59] - 4 * d[12] * d[35] * d[48] * d[59] - 2 * d[15] * d[28] * d[49] * d[59] + 2 * d[16] * d[30] * d[49] * d[59] - 2 * d[10] * d[33] * d[49] * d[59] + 2 * d[12] * d[34] * d[49] * d[59] - 2 * d[16] * d[27] * d[50] * d[59] + 2 * d[15] * d[30] * d[50] * d[59] + 2 * d[12] * d[33] * d[50] * d[59] - 2 * d[9] * d[34] * d[50] * d[59] - 2 * d[13] * d[28] * d[51] * d[59] + 2 * d[14] * d[30] * d[51] * d[59] - 2 * d[10] * d[31] * d[51] * d[59] + 2 * d[12] * d[32] * d[51] * d[59] - 2 * d[14] * d[27] * d[52] * d[59] + 2 * d[13] * d[30] * d[52] * d[59] + 2 * d[12] * d[31] * d[52] * d[59] - 2 * d[9] * d[32] * d[52] * d[59] + 2 * d[10] * d[27] * d[53] * d[59] + 2 * d[9] * d[28] * d[53] * d[59] - 4 * d[12] * d[30] * d[53] * d[59] - d[11] * d[28] * d[45] * d[70] - d[10] * d[29] * d[45] * d[70] + 2 * d[14] * d[32] * d[45] * d[70] - d[11] * d[27] * d[46] * d[70] - d[9] * d[29] * d[46] * d[70] + 2 * d[13] * d[31] * d[46] * d[70] - d[10] * d[27] * d[47] * d[70] - d[9] * d[28] * d[47] * d[70] + 2 * d[12] * d[30] * d[47] * d[70] + 2 * d[12] * d[29] * d[48] * d[70] + 2 * d[11] * d[30] * d[48] * d[70] - 2 * d[14] * d[31] * d[48] * d[70] - 2 * d[13] * d[32] * d[48] * d[70] + 2 * d[13] * d[28] * d[49] * d[70] - 2 * d[14] * d[30] * d[49] * d[70] + 2 * d[10] * d[31] * d[49] * d[70] - 2 * d[12] * d[32] * d[49] * d[70] + 2 * d[14] * d[27] * d[50] * d[70] - 2 * d[13] * d[30] * d[50] * d[70] - 2 * d[12] * d[31] * d[50] * d[70] + 2 * d[9] * d[32] * d[50] * d[70];
    coeffs[80] = 2 * d[24] * d[29] * d[46] * d[57] - 2 * d[26] * d[31] * d[46] * d[57] + 2 * d[20] * d[33] * d[46] * d[57] - 2 * d[22] * d[35] * d[46] * d[57] + 2 * d[24] * d[28] * d[47] * d[57] - 2 * d[25] * d[30] * d[47] * d[57] + 2 * d[19] * d[33] * d[47] * d[57] - 2 * d[21] * d[34] * d[47] * d[57] - 2 * d[25] * d[29] * d[48] * d[57] + 2 * d[26] * d[32] * d[48] * d[57] - 2 * d[20] * d[34] * d[48] * d[57] + 2 * d[23] * d[35] * d[48] * d[57] - 2 * d[26] * d[28] * d[49] * d[57] + 2 * d[25] * d[32] * d[49] * d[57] + 2 * d[23] * d[34] * d[49] * d[57] - 2 * d[19] * d[35] * d[49] * d[57] + 2 * d[26] * d[30] * d[50] * d[57] + 2 * d[25] * d[31] * d[50] * d[57] - 4 * d[24] * d[32] * d[50] * d[57] - 4 * d[23] * d[33] * d[50] * d[57] + 2 * d[22] * d[34] * d[50] * d[57] + 2 * d[21] * d[35] * d[50] * d[57] + 2 * d[20] * d[28] * d[51] * d[57] + 2 * d[19] * d[29] * d[51] * d[57] - 4 * d[23] * d[32] * d[51] * d[57] - 2 * d[21] * d[29] * d[52] * d[57] - 2 * d[20] * d[30] * d[52] * d[57] + 2 * d[23] * d[31] * d[52] * d[57] + 2 * d[22] * d[32] * d[52] * d[57] - 2 * d[22] * d[28] * d[53] * d[57] + 2 * d[23] * d[30] * d[53] * d[57] - 2 * d[19] * d[31] * d[53] * d[57] + 2 * d[21] * d[32] * d[53] * d[57] + 2 * d[25] * d[29] * d[45] * d[58] - 2 * d[26] * d[32] * d[45] * d[58] + 2 * d[20] * d[34] * d[45] * d[58] - 2 * d[23] * d[35] * d[45] * d[58] + 2 * d[25] * d[27] * d[47] * d[58] - 2 * d[24] * d[30] * d[47] * d[58] - 2 * d[21] * d[33] * d[47] * d[58] + 2 * d[18] * d[34] * d[47] * d[58] - 2 * d[24] * d[29] * d[48] * d[58] + 2 * d[26] * d[31] * d[48] * d[58] - 2 * d[20] * d[33] * d[48] * d[58] + 2 * d[22] * d[35] * d[48] * d[58] + 2 * d[26] * d[30] * d[49] * d[58] - 4 * d[25] * d[31] * d[49] * d[58] + 2 * d[24] * d[32] * d[49] * d[58] + 2 * d[23] * d[33] * d[49] * d[58] - 4 * d[22] * d[34] * d[49] * d[58] + 2 * d[21] * d[35] * d[49] * d[58] - 2 * d[26] * d[27] * d[50] * d[58] + 2 * d[24] * d[31] * d[50] * d[58] + 2 * d[22] * d[33] * d[50] * d[58] - 2 * d[18] * d[35] * d[50] * d[58] - 2 * d[21] * d[29] * d[51] * d[58] - 2 * d[20] * d[30] * d[51] * d[58] + 2 * d[23] * d[31] * d[51] * d[58] + 2 * d[22] * d[32] * d[51] * d[58] + 2 * d[20] * d[27] * d[52] * d[58] + 2 * d[18] * d[29] * d[52] * d[58] - 4 * d[22] * d[31] * d[52] * d[58] - 2 * d[23] * d[27] * d[53] * d[58] + 2 * d[22] * d[30] * d[53] * d[58] + 2 * d[21] * d[31] * d[53] * d[58] - 2 * d[18] * d[32] * d[53] * d[58] + 2 * d[26] * d[28] * d[45] * d[59] - 2 * d[25] * d[32] * d[45] * d[59] - 2 * d[23] * d[34] * d[45] * d[59] + 2 * d[19] * d[35] * d[45] * d[59] + 2 * d[26] * d[27] * d[46] * d[59] - 2 * d[24] * d[31] * d[46] * d[59] - 2 * d[22] * d[33] * d[46] * d[59] + 2 * d[18] * d[35] * d[46] * d[59] - 4 * d[26] * d[30] * d[48] * d[59] + 2 * d[25] * d[31] * d[48] * d[59] + 2 * d[24] * d[32] * d[48] * d[59] + 2 * d[23] * d[33] * d[48] * d[59] + 2 * d[22] * d[34] * d[48] * d[59] - 4 * d[21] * d[35] * d[48] * d[59] - 2 * d[24] * d[28] * d[49] * d[59] + 2 * d[25] * d[30] * d[49] * d[59] - 2 * d[19] * d[33] * d[49] * d[59] + 2 * d[21] * d[34] * d[49] * d[59] - 2 * d[25] * d[27] * d[50] * d[59] + 2 * d[24] * d[30] * d[50] * d[59] + 2 * d[21] * d[33] * d[50] * d[59] - 2 * d[18] * d[34] * d[50] * d[59] - 2 * d[22] * d[28] * d[51] * d[59] + 2 * d[23] * d[30] * d[51] * d[59] - 2 * d[19] * d[31] * d[51] * d[59] + 2 * d[21] * d[32] * d[51] * d[59] - 2 * d[23] * d[27] * d[52] * d[59] + 2 * d[22] * d[30] * d[52] * d[59] + 2 * d[21] * d[31] * d[52] * d[59] - 2 * d[18] * d[32] * d[52] * d[59] + 2 * d[19] * d[27] * d[53] * d[59] + 2 * d[18] * d[28] * d[53] * d[59] - 4 * d[21] * d[30] * d[53] * d[59] - d[20] * d[28] * d[45] * d[70] - d[19] * d[29] * d[45] * d[70] + 2 * d[23] * d[32] * d[45] * d[70] - d[20] * d[27] * d[46] * d[70] - d[18] * d[29] * d[46] * d[70] + 2 * d[22] * d[31] * d[46] * d[70] - d[19] * d[27] * d[47] * d[70] - d[18] * d[28] * d[47] * d[70] + 2 * d[21] * d[30] * d[47] * d[70] + 2 * d[21] * d[29] * d[48] * d[70] + 2 * d[20] * d[30] * d[48] * d[70] - 2 * d[23] * d[31] * d[48] * d[70] - 2 * d[22] * d[32] * d[48] * d[70] + 2 * d[22] * d[28] * d[49] * d[70] - 2 * d[23] * d[30] * d[49] * d[70] + 2 * d[19] * d[31] * d[49] * d[70] - 2 * d[21] * d[32] * d[49] * d[70] + 2 * d[23] * d[27] * d[50] * d[70] - 2 * d[22] * d[30] * d[50] * d[70] - 2 * d[21] * d[31] * d[50] * d[70] + 2 * d[18] * d[32] * d[50] * d[70];
    coeffs[81] = 2 * d[29] * d[33] * d[46] * d[57] - 2 * d[31] * d[35] * d[46] * d[57] + 2 * d[28] * d[33] * d[47] * d[57] - 2 * d[30] * d[34] * d[47] * d[57] - 2 * d[29] * d[34] * d[48] * d[57] + 2 * d[32] * d[35] * d[48] * d[57] + 2 * d[32] * d[34] * d[49] * d[57] - 2 * d[28] * d[35] * d[49] * d[57] - 4 * d[32] * d[33] * d[50] * d[57] + 2 * d[31] * d[34] * d[50] * d[57] + 2 * d[30] * d[35] * d[50] * d[57] + 2 * d[28] * d[29] * d[51] * d[57] - 2 * std::pow(d[32], 2) * d[51] * d[57] - 2 * d[29] * d[30] * d[52] * d[57] + 2 * d[31] * d[32] * d[52] * d[57] - 2 * d[28] * d[31] * d[53] * d[57] + 2 * d[30] * d[32] * d[53] * d[57] + 2 * d[29] * d[34] * d[45] * d[58] - 2 * d[32] * d[35] * d[45] * d[58] - 2 * d[30] * d[33] * d[47] * d[58] + 2 * d[27] * d[34] * d[47] * d[58] - 2 * d[29] * d[33] * d[48] * d[58] + 2 * d[31] * d[35] * d[48] * d[58] + 2 * d[32] * d[33] * d[49] * d[58] - 4 * d[31] * d[34] * d[49] * d[58] + 2 * d[30] * d[35] * d[49] * d[58] + 2 * d[31] * d[33] * d[50] * d[58] - 2 * d[27] * d[35] * d[50] * d[58] - 2 * d[29] * d[30] * d[51] * d[58] + 2 * d[31] * d[32] * d[51] * d[58] + 2 * d[27] * d[29] * d[52] * d[58] - 2 * std::pow(d[31], 2) * d[52] * d[58] + 2 * d[30] * d[31] * d[53] * d[58] - 2 * d[27] * d[32] * d[53] * d[58] - 2 * d[32] * d[34] * d[45] * d[59] + 2 * d[28] * d[35] * d[45] * d[59] - 2 * d[31] * d[33] * d[46] * d[59] + 2 * d[27] * d[35] * d[46] * d[59] + 2 * d[32] * d[33] * d[48] * d[59] + 2 * d[31] * d[34] * d[48] * d[59] - 4 * d[30] * d[35] * d[48] * d[59] - 2 * d[28] * d[33] * d[49] * d[59] + 2 * d[30] * d[34] * d[49] * d[59] + 2 * d[30] * d[33] * d[50] * d[59] - 2 * d[27] * d[34] * d[50] * d[59] - 2 * d[28] * d[31] * d[51] * d[59] + 2 * d[30] * d[32] * d[51] * d[59] + 2 * d[30] * d[31] * d[52] * d[59] - 2 * d[27] * d[32] * d[52] * d[59] + 2 * d[27] * d[28] * d[53] * d[59] - 2 * std::pow(d[30], 2) * d[53] * d[59] - d[28] * d[29] * d[45] * d[70] + std::pow(d[32], 2) * d[45] * d[70] - d[27] * d[29] * d[46] * d[70] + std::pow(d[31], 2) * d[46] * d[70] - d[27] * d[28] * d[47] * d[70] + std::pow(d[30], 2) * d[47] * d[70] + 2 * d[29] * d[30] * d[48] * d[70] - 2 * d[31] * d[32] * d[48] * d[70] + 2 * d[28] * d[31] * d[49] * d[70] - 2 * d[30] * d[32] * d[49] * d[70] - 2 * d[30] * d[31] * d[50] * d[70] + 2 * d[27] * d[32] * d[50] * d[70];
    coeffs[82] = 2 * d[15] * d[38] * d[46] * d[57] - 2 * d[17] * d[40] * d[46] * d[57] + 2 * d[11] * d[42] * d[46] * d[57] - 2 * d[13] * d[44] * d[46] * d[57] + 2 * d[15] * d[37] * d[47] * d[57] - 2 * d[16] * d[39] * d[47] * d[57] + 2 * d[10] * d[42] * d[47] * d[57] - 2 * d[12] * d[43] * d[47] * d[57] - 2 * d[16] * d[38] * d[48] * d[57] + 2 * d[17] * d[41] * d[48] * d[57] - 2 * d[11] * d[43] * d[48] * d[57] + 2 * d[14] * d[44] * d[48] * d[57] - 2 * d[17] * d[37] * d[49] * d[57] + 2 * d[16] * d[41] * d[49] * d[57] + 2 * d[14] * d[43] * d[49] * d[57] - 2 * d[10] * d[44] * d[49] * d[57] + 2 * d[17] * d[39] * d[50] * d[57] + 2 * d[16] * d[40] * d[50] * d[57] - 4 * d[15] * d[41] * d[50] * d[57] - 4 * d[14] * d[42] * d[50] * d[57] + 2 * d[13] * d[43] * d[50] * d[57] + 2 * d[12] * d[44] * d[50] * d[57] + 2 * d[11] * d[37] * d[51] * d[57] + 2 * d[10] * d[38] * d[51] * d[57] - 4 * d[14] * d[41] * d[51] * d[57] - 2 * d[12] * d[38] * d[52] * d[57] - 2 * d[11] * d[39] * d[52] * d[57] + 2 * d[14] * d[40] * d[52] * d[57] + 2 * d[13] * d[41] * d[52] * d[57] - 2 * d[13] * d[37] * d[53] * d[57] + 2 * d[14] * d[39] * d[53] * d[57] - 2 * d[10] * d[40] * d[53] * d[57] + 2 * d[12] * d[41] * d[53] * d[57] + 2 * d[16] * d[38] * d[45] * d[58] - 2 * d[17] * d[41] * d[45] * d[58] + 2 * d[11] * d[43] * d[45] * d[58] - 2 * d[14] * d[44] * d[45] * d[58] + 2 * d[16] * d[36] * d[47] * d[58] - 2 * d[15] * d[39] * d[47] * d[58] - 2 * d[12] * d[42] * d[47] * d[58] + 2 * d[9] * d[43] * d[47] * d[58] - 2 * d[15] * d[38] * d[48] * d[58] + 2 * d[17] * d[40] * d[48] * d[58] - 2 * d[11] * d[42] * d[48] * d[58] + 2 * d[13] * d[44] * d[48] * d[58] + 2 * d[17] * d[39] * d[49] * d[58] - 4 * d[16] * d[40] * d[49] * d[58] + 2 * d[15] * d[41] * d[49] * d[58] + 2 * d[14] * d[42] * d[49] * d[58] - 4 * d[13] * d[43] * d[49] * d[58] + 2 * d[12] * d[44] * d[49] * d[58] - 2 * d[17] * d[36] * d[50] * d[58] + 2 * d[15] * d[40] * d[50] * d[58] + 2 * d[13] * d[42] * d[50] * d[58] - 2 * d[9] * d[44] * d[50] * d[58] - 2 * d[12] * d[38] * d[51] * d[58] - 2 * d[11] * d[39] * d[51] * d[58] + 2 * d[14] * d[40] * d[51] * d[58] + 2 * d[13] * d[41] * d[51] * d[58] + 2 * d[11] * d[36] * d[52] * d[58] + 2 * d[9] * d[38] * d[52] * d[58] - 4 * d[13] * d[40] * d[52] * d[58] - 2 * d[14] * d[36] * d[53] * d[58] + 2 * d[13] * d[39] * d[53] * d[58] + 2 * d[12] * d[40] * d[53] * d[58] - 2 * d[9] * d[41] * d[53] * d[58] + 2 * d[17] * d[37] * d[45] * d[59] - 2 * d[16] * d[41] * d[45] * d[59] - 2 * d[14] * d[43] * d[45] * d[59] + 2 * d[10] * d[44] * d[45] * d[59] + 2 * d[17] * d[36] * d[46] * d[59] - 2 * d[15] * d[40] * d[46] * d[59] - 2 * d[13] * d[42] * d[46] * d[59] + 2 * d[9] * d[44] * d[46] * d[59] - 4 * d[17] * d[39] * d[48] * d[59] + 2 * d[16] * d[40] * d[48] * d[59] + 2 * d[15] * d[41] * d[48] * d[59] + 2 * d[14] * d[42] * d[48] * d[59] + 2 * d[13] * d[43] * d[48] * d[59] - 4 * d[12] * d[44] * d[48] * d[59] - 2 * d[15] * d[37] * d[49] * d[59] + 2 * d[16] * d[39] * d[49] * d[59] - 2 * d[10] * d[42] * d[49] * d[59] + 2 * d[12] * d[43] * d[49] * d[59] - 2 * d[16] * d[36] * d[50] * d[59] + 2 * d[15] * d[39] * d[50] * d[59] + 2 * d[12] * d[42] * d[50] * d[59] - 2 * d[9] * d[43] * d[50] * d[59] - 2 * d[13] * d[37] * d[51] * d[59] + 2 * d[14] * d[39] * d[51] * d[59] - 2 * d[10] * d[40] * d[51] * d[59] + 2 * d[12] * d[41] * d[51] * d[59] - 2 * d[14] * d[36] * d[52] * d[59] + 2 * d[13] * d[39] * d[52] * d[59] + 2 * d[12] * d[40] * d[52] * d[59] - 2 * d[9] * d[41] * d[52] * d[59] + 2 * d[10] * d[36] * d[53] * d[59] + 2 * d[9] * d[37] * d[53] * d[59] - 4 * d[12] * d[39] * d[53] * d[59] - d[11] * d[37] * d[45] * d[70] - d[10] * d[38] * d[45] * d[70] + 2 * d[14] * d[41] * d[45] * d[70] - d[11] * d[36] * d[46] * d[70] - d[9] * d[38] * d[46] * d[70] + 2 * d[13] * d[40] * d[46] * d[70] - d[10] * d[36] * d[47] * d[70] - d[9] * d[37] * d[47] * d[70] + 2 * d[12] * d[39] * d[47] * d[70] + 2 * d[12] * d[38] * d[48] * d[70] + 2 * d[11] * d[39] * d[48] * d[70] - 2 * d[14] * d[40] * d[48] * d[70] - 2 * d[13] * d[41] * d[48] * d[70] + 2 * d[13] * d[37] * d[49] * d[70] - 2 * d[14] * d[39] * d[49] * d[70] + 2 * d[10] * d[40] * d[49] * d[70] - 2 * d[12] * d[41] * d[49] * d[70] + 2 * d[14] * d[36] * d[50] * d[70] - 2 * d[13] * d[39] * d[50] * d[70] - 2 * d[12] * d[40] * d[50] * d[70] + 2 * d[9] * d[41] * d[50] * d[70];
    coeffs[83] = 2 * d[24] * d[38] * d[46] * d[57] - 2 * d[26] * d[40] * d[46] * d[57] + 2 * d[20] * d[42] * d[46] * d[57] - 2 * d[22] * d[44] * d[46] * d[57] + 2 * d[24] * d[37] * d[47] * d[57] - 2 * d[25] * d[39] * d[47] * d[57] + 2 * d[19] * d[42] * d[47] * d[57] - 2 * d[21] * d[43] * d[47] * d[57] - 2 * d[25] * d[38] * d[48] * d[57] + 2 * d[26] * d[41] * d[48] * d[57] - 2 * d[20] * d[43] * d[48] * d[57] + 2 * d[23] * d[44] * d[48] * d[57] - 2 * d[26] * d[37] * d[49] * d[57] + 2 * d[25] * d[41] * d[49] * d[57] + 2 * d[23] * d[43] * d[49] * d[57] - 2 * d[19] * d[44] * d[49] * d[57] + 2 * d[26] * d[39] * d[50] * d[57] + 2 * d[25] * d[40] * d[50] * d[57] - 4 * d[24] * d[41] * d[50] * d[57] - 4 * d[23] * d[42] * d[50] * d[57] + 2 * d[22] * d[43] * d[50] * d[57] + 2 * d[21] * d[44] * d[50] * d[57] + 2 * d[20] * d[37] * d[51] * d[57] + 2 * d[19] * d[38] * d[51] * d[57] - 4 * d[23] * d[41] * d[51] * d[57] - 2 * d[21] * d[38] * d[52] * d[57] - 2 * d[20] * d[39] * d[52] * d[57] + 2 * d[23] * d[40] * d[52] * d[57] + 2 * d[22] * d[41] * d[52] * d[57] - 2 * d[22] * d[37] * d[53] * d[57] + 2 * d[23] * d[39] * d[53] * d[57] - 2 * d[19] * d[40] * d[53] * d[57] + 2 * d[21] * d[41] * d[53] * d[57] + 2 * d[25] * d[38] * d[45] * d[58] - 2 * d[26] * d[41] * d[45] * d[58] + 2 * d[20] * d[43] * d[45] * d[58] - 2 * d[23] * d[44] * d[45] * d[58] + 2 * d[25] * d[36] * d[47] * d[58] - 2 * d[24] * d[39] * d[47] * d[58] - 2 * d[21] * d[42] * d[47] * d[58] + 2 * d[18] * d[43] * d[47] * d[58] - 2 * d[24] * d[38] * d[48] * d[58] + 2 * d[26] * d[40] * d[48] * d[58] - 2 * d[20] * d[42] * d[48] * d[58] + 2 * d[22] * d[44] * d[48] * d[58] + 2 * d[26] * d[39] * d[49] * d[58] - 4 * d[25] * d[40] * d[49] * d[58] + 2 * d[24] * d[41] * d[49] * d[58] + 2 * d[23] * d[42] * d[49] * d[58] - 4 * d[22] * d[43] * d[49] * d[58] + 2 * d[21] * d[44] * d[49] * d[58] - 2 * d[26] * d[36] * d[50] * d[58] + 2 * d[24] * d[40] * d[50] * d[58] + 2 * d[22] * d[42] * d[50] * d[58] - 2 * d[18] * d[44] * d[50] * d[58] - 2 * d[21] * d[38] * d[51] * d[58] - 2 * d[20] * d[39] * d[51] * d[58] + 2 * d[23] * d[40] * d[51] * d[58] + 2 * d[22] * d[41] * d[51] * d[58] + 2 * d[20] * d[36] * d[52] * d[58] + 2 * d[18] * d[38] * d[52] * d[58] - 4 * d[22] * d[40] * d[52] * d[58] - 2 * d[23] * d[36] * d[53] * d[58] + 2 * d[22] * d[39] * d[53] * d[58] + 2 * d[21] * d[40] * d[53] * d[58] - 2 * d[18] * d[41] * d[53] * d[58] + 2 * d[26] * d[37] * d[45] * d[59] - 2 * d[25] * d[41] * d[45] * d[59] - 2 * d[23] * d[43] * d[45] * d[59] + 2 * d[19] * d[44] * d[45] * d[59] + 2 * d[26] * d[36] * d[46] * d[59] - 2 * d[24] * d[40] * d[46] * d[59] - 2 * d[22] * d[42] * d[46] * d[59] + 2 * d[18] * d[44] * d[46] * d[59] - 4 * d[26] * d[39] * d[48] * d[59] + 2 * d[25] * d[40] * d[48] * d[59] + 2 * d[24] * d[41] * d[48] * d[59] + 2 * d[23] * d[42] * d[48] * d[59] + 2 * d[22] * d[43] * d[48] * d[59] - 4 * d[21] * d[44] * d[48] * d[59] - 2 * d[24] * d[37] * d[49] * d[59] + 2 * d[25] * d[39] * d[49] * d[59] - 2 * d[19] * d[42] * d[49] * d[59] + 2 * d[21] * d[43] * d[49] * d[59] - 2 * d[25] * d[36] * d[50] * d[59] + 2 * d[24] * d[39] * d[50] * d[59] + 2 * d[21] * d[42] * d[50] * d[59] - 2 * d[18] * d[43] * d[50] * d[59] - 2 * d[22] * d[37] * d[51] * d[59] + 2 * d[23] * d[39] * d[51] * d[59] - 2 * d[19] * d[40] * d[51] * d[59] + 2 * d[21] * d[41] * d[51] * d[59] - 2 * d[23] * d[36] * d[52] * d[59] + 2 * d[22] * d[39] * d[52] * d[59] + 2 * d[21] * d[40] * d[52] * d[59] - 2 * d[18] * d[41] * d[52] * d[59] + 2 * d[19] * d[36] * d[53] * d[59] + 2 * d[18] * d[37] * d[53] * d[59] - 4 * d[21] * d[39] * d[53] * d[59] - d[20] * d[37] * d[45] * d[70] - d[19] * d[38] * d[45] * d[70] + 2 * d[23] * d[41] * d[45] * d[70] - d[20] * d[36] * d[46] * d[70] - d[18] * d[38] * d[46] * d[70] + 2 * d[22] * d[40] * d[46] * d[70] - d[19] * d[36] * d[47] * d[70] - d[18] * d[37] * d[47] * d[70] + 2 * d[21] * d[39] * d[47] * d[70] + 2 * d[21] * d[38] * d[48] * d[70] + 2 * d[20] * d[39] * d[48] * d[70] - 2 * d[23] * d[40] * d[48] * d[70] - 2 * d[22] * d[41] * d[48] * d[70] + 2 * d[22] * d[37] * d[49] * d[70] - 2 * d[23] * d[39] * d[49] * d[70] + 2 * d[19] * d[40] * d[49] * d[70] - 2 * d[21] * d[41] * d[49] * d[70] + 2 * d[23] * d[36] * d[50] * d[70] - 2 * d[22] * d[39] * d[50] * d[70] - 2 * d[21] * d[40] * d[50] * d[70] + 2 * d[18] * d[41] * d[50] * d[70];
    coeffs[84] = 2 * d[33] * d[38] * d[46] * d[57] - 2 * d[35] * d[40] * d[46] * d[57] + 2 * d[29] * d[42] * d[46] * d[57] - 2 * d[31] * d[44] * d[46] * d[57] + 2 * d[33] * d[37] * d[47] * d[57] - 2 * d[34] * d[39] * d[47] * d[57] + 2 * d[28] * d[42] * d[47] * d[57] - 2 * d[30] * d[43] * d[47] * d[57] - 2 * d[34] * d[38] * d[48] * d[57] + 2 * d[35] * d[41] * d[48] * d[57] - 2 * d[29] * d[43] * d[48] * d[57] + 2 * d[32] * d[44] * d[48] * d[57] - 2 * d[35] * d[37] * d[49] * d[57] + 2 * d[34] * d[41] * d[49] * d[57] + 2 * d[32] * d[43] * d[49] * d[57] - 2 * d[28] * d[44] * d[49] * d[57] + 2 * d[35] * d[39] * d[50] * d[57] + 2 * d[34] * d[40] * d[50] * d[57] - 4 * d[33] * d[41] * d[50] * d[57] - 4 * d[32] * d[42] * d[50] * d[57] + 2 * d[31] * d[43] * d[50] * d[57] + 2 * d[30] * d[44] * d[50] * d[57] + 2 * d[29] * d[37] * d[51] * d[57] + 2 * d[28] * d[38] * d[51] * d[57] - 4 * d[32] * d[41] * d[51] * d[57] - 2 * d[30] * d[38] * d[52] * d[57] - 2 * d[29] * d[39] * d[52] * d[57] + 2 * d[32] * d[40] * d[52] * d[57] + 2 * d[31] * d[41] * d[52] * d[57] - 2 * d[31] * d[37] * d[53] * d[57] + 2 * d[32] * d[39] * d[53] * d[57] - 2 * d[28] * d[40] * d[53] * d[57] + 2 * d[30] * d[41] * d[53] * d[57] + 2 * d[34] * d[38] * d[45] * d[58] - 2 * d[35] * d[41] * d[45] * d[58] + 2 * d[29] * d[43] * d[45] * d[58] - 2 * d[32] * d[44] * d[45] * d[58] + 2 * d[34] * d[36] * d[47] * d[58] - 2 * d[33] * d[39] * d[47] * d[58] - 2 * d[30] * d[42] * d[47] * d[58] + 2 * d[27] * d[43] * d[47] * d[58] - 2 * d[33] * d[38] * d[48] * d[58] + 2 * d[35] * d[40] * d[48] * d[58] - 2 * d[29] * d[42] * d[48] * d[58] + 2 * d[31] * d[44] * d[48] * d[58] + 2 * d[35] * d[39] * d[49] * d[58] - 4 * d[34] * d[40] * d[49] * d[58] + 2 * d[33] * d[41] * d[49] * d[58] + 2 * d[32] * d[42] * d[49] * d[58] - 4 * d[31] * d[43] * d[49] * d[58] + 2 * d[30] * d[44] * d[49] * d[58] - 2 * d[35] * d[36] * d[50] * d[58] + 2 * d[33] * d[40] * d[50] * d[58] + 2 * d[31] * d[42] * d[50] * d[58] - 2 * d[27] * d[44] * d[50] * d[58] - 2 * d[30] * d[38] * d[51] * d[58] - 2 * d[29] * d[39] * d[51] * d[58] + 2 * d[32] * d[40] * d[51] * d[58] + 2 * d[31] * d[41] * d[51] * d[58] + 2 * d[29] * d[36] * d[52] * d[58] + 2 * d[27] * d[38] * d[52] * d[58] - 4 * d[31] * d[40] * d[52] * d[58] - 2 * d[32] * d[36] * d[53] * d[58] + 2 * d[31] * d[39] * d[53] * d[58] + 2 * d[30] * d[40] * d[53] * d[58] - 2 * d[27] * d[41] * d[53] * d[58] + 2 * d[35] * d[37] * d[45] * d[59] - 2 * d[34] * d[41] * d[45] * d[59] - 2 * d[32] * d[43] * d[45] * d[59] + 2 * d[28] * d[44] * d[45] * d[59] + 2 * d[35] * d[36] * d[46] * d[59] - 2 * d[33] * d[40] * d[46] * d[59] - 2 * d[31] * d[42] * d[46] * d[59] + 2 * d[27] * d[44] * d[46] * d[59] - 4 * d[35] * d[39] * d[48] * d[59] + 2 * d[34] * d[40] * d[48] * d[59] + 2 * d[33] * d[41] * d[48] * d[59] + 2 * d[32] * d[42] * d[48] * d[59] + 2 * d[31] * d[43] * d[48] * d[59] - 4 * d[30] * d[44] * d[48] * d[59] - 2 * d[33] * d[37] * d[49] * d[59] + 2 * d[34] * d[39] * d[49] * d[59] - 2 * d[28] * d[42] * d[49] * d[59] + 2 * d[30] * d[43] * d[49] * d[59] - 2 * d[34] * d[36] * d[50] * d[59] + 2 * d[33] * d[39] * d[50] * d[59] + 2 * d[30] * d[42] * d[50] * d[59] - 2 * d[27] * d[43] * d[50] * d[59] - 2 * d[31] * d[37] * d[51] * d[59] + 2 * d[32] * d[39] * d[51] * d[59] - 2 * d[28] * d[40] * d[51] * d[59] + 2 * d[30] * d[41] * d[51] * d[59] - 2 * d[32] * d[36] * d[52] * d[59] + 2 * d[31] * d[39] * d[52] * d[59] + 2 * d[30] * d[40] * d[52] * d[59] - 2 * d[27] * d[41] * d[52] * d[59] + 2 * d[28] * d[36] * d[53] * d[59] + 2 * d[27] * d[37] * d[53] * d[59] - 4 * d[30] * d[39] * d[53] * d[59] - d[29] * d[37] * d[45] * d[70] - d[28] * d[38] * d[45] * d[70] + 2 * d[32] * d[41] * d[45] * d[70] - d[29] * d[36] * d[46] * d[70] - d[27] * d[38] * d[46] * d[70] + 2 * d[31] * d[40] * d[46] * d[70] - d[28] * d[36] * d[47] * d[70] - d[27] * d[37] * d[47] * d[70] + 2 * d[30] * d[39] * d[47] * d[70] + 2 * d[30] * d[38] * d[48] * d[70] + 2 * d[29] * d[39] * d[48] * d[70] - 2 * d[32] * d[40] * d[48] * d[70] - 2 * d[31] * d[41] * d[48] * d[70] + 2 * d[31] * d[37] * d[49] * d[70] - 2 * d[32] * d[39] * d[49] * d[70] + 2 * d[28] * d[40] * d[49] * d[70] - 2 * d[30] * d[41] * d[49] * d[70] + 2 * d[32] * d[36] * d[50] * d[70] - 2 * d[31] * d[39] * d[50] * d[70] - 2 * d[30] * d[40] * d[50] * d[70] + 2 * d[27] * d[41] * d[50] * d[70];
    coeffs[85] = 2 * d[38] * d[42] * d[46] * d[57] - 2 * d[40] * d[44] * d[46] * d[57] + 2 * d[37] * d[42] * d[47] * d[57] - 2 * d[39] * d[43] * d[47] * d[57] - 2 * d[38] * d[43] * d[48] * d[57] + 2 * d[41] * d[44] * d[48] * d[57] + 2 * d[41] * d[43] * d[49] * d[57] - 2 * d[37] * d[44] * d[49] * d[57] - 4 * d[41] * d[42] * d[50] * d[57] + 2 * d[40] * d[43] * d[50] * d[57] + 2 * d[39] * d[44] * d[50] * d[57] + 2 * d[37] * d[38] * d[51] * d[57] - 2 * std::pow(d[41], 2) * d[51] * d[57] - 2 * d[38] * d[39] * d[52] * d[57] + 2 * d[40] * d[41] * d[52] * d[57] - 2 * d[37] * d[40] * d[53] * d[57] + 2 * d[39] * d[41] * d[53] * d[57] + 2 * d[38] * d[43] * d[45] * d[58] - 2 * d[41] * d[44] * d[45] * d[58] - 2 * d[39] * d[42] * d[47] * d[58] + 2 * d[36] * d[43] * d[47] * d[58] - 2 * d[38] * d[42] * d[48] * d[58] + 2 * d[40] * d[44] * d[48] * d[58] + 2 * d[41] * d[42] * d[49] * d[58] - 4 * d[40] * d[43] * d[49] * d[58] + 2 * d[39] * d[44] * d[49] * d[58] + 2 * d[40] * d[42] * d[50] * d[58] - 2 * d[36] * d[44] * d[50] * d[58] - 2 * d[38] * d[39] * d[51] * d[58] + 2 * d[40] * d[41] * d[51] * d[58] + 2 * d[36] * d[38] * d[52] * d[58] - 2 * std::pow(d[40], 2) * d[52] * d[58] + 2 * d[39] * d[40] * d[53] * d[58] - 2 * d[36] * d[41] * d[53] * d[58] - 2 * d[41] * d[43] * d[45] * d[59] + 2 * d[37] * d[44] * d[45] * d[59] - 2 * d[40] * d[42] * d[46] * d[59] + 2 * d[36] * d[44] * d[46] * d[59] + 2 * d[41] * d[42] * d[48] * d[59] + 2 * d[40] * d[43] * d[48] * d[59] - 4 * d[39] * d[44] * d[48] * d[59] - 2 * d[37] * d[42] * d[49] * d[59] + 2 * d[39] * d[43] * d[49] * d[59] + 2 * d[39] * d[42] * d[50] * d[59] - 2 * d[36] * d[43] * d[50] * d[59] - 2 * d[37] * d[40] * d[51] * d[59] + 2 * d[39] * d[41] * d[51] * d[59] + 2 * d[39] * d[40] * d[52] * d[59] - 2 * d[36] * d[41] * d[52] * d[59] + 2 * d[36] * d[37] * d[53] * d[59] - 2 * std::pow(d[39], 2) * d[53] * d[59] - d[37] * d[38] * d[45] * d[70] + std::pow(d[41], 2) * d[45] * d[70] - d[36] * d[38] * d[46] * d[70] + std::pow(d[40], 2) * d[46] * d[70] - d[36] * d[37] * d[47] * d[70] + std::pow(d[39], 2) * d[47] * d[70] + 2 * d[38] * d[39] * d[48] * d[70] - 2 * d[40] * d[41] * d[48] * d[70] + 2 * d[37] * d[40] * d[49] * d[70] - 2 * d[39] * d[41] * d[49] * d[70] - 2 * d[39] * d[40] * d[50] * d[70] + 2 * d[36] * d[41] * d[50] * d[70];
    coeffs[86] = 2 * d[15] * d[46] * d[47] * d[57] - 2 * d[16] * d[47] * d[48] * d[57] - 2 * d[17] * d[46] * d[49] * d[57] + 2 * d[17] * d[48] * d[50] * d[57] + 2 * d[16] * d[49] * d[50] * d[57] - 2 * d[15] * std::pow(d[50], 2) * d[57] + 2 * d[11] * d[46] * d[51] * d[57] + 2 * d[10] * d[47] * d[51] * d[57] - 4 * d[14] * d[50] * d[51] * d[57] - 2 * d[12] * d[47] * d[52] * d[57] - 2 * d[11] * d[48] * d[52] * d[57] + 2 * d[14] * d[49] * d[52] * d[57] + 2 * d[13] * d[50] * d[52] * d[57] - 2 * d[13] * d[46] * d[53] * d[57] + 2 * d[14] * d[48] * d[53] * d[57] - 2 * d[10] * d[49] * d[53] * d[57] + 2 * d[12] * d[50] * d[53] * d[57] + 2 * d[16] * d[45] * d[47] * d[58] - 2 * d[15] * d[47] * d[48] * d[58] + 2 * d[17] * d[48] * d[49] * d[58] - 2 * d[16] * std::pow(d[49], 2) * d[58] - 2 * d[17] * d[45] * d[50] * d[58] + 2 * d[15] * d[49] * d[50] * d[58] - 2 * d[12] * d[47] * d[51] * d[58] - 2 * d[11] * d[48] * d[51] * d[58] + 2 * d[14] * d[49] * d[51] * d[58] + 2 * d[13] * d[50] * d[51] * d[58] + 2 * d[11] * d[45] * d[52] * d[58] + 2 * d[9] * d[47] * d[52] * d[58] - 4 * d[13] * d[49] * d[52] * d[58] - 2 * d[14] * d[45] * d[53] * d[58] + 2 * d[13] * d[48] * d[53] * d[58] + 2 * d[12] * d[49] * d[53] * d[58] - 2 * d[9] * d[50] * d[53] * d[58] + 2 * d[17] * d[45] * d[46] * d[59] - 2 * d[17] * std::pow(d[48], 2) * d[59] - 2 * d[15] * d[46] * d[49] * d[59] + 2 * d[16] * d[48] * d[49] * d[59] - 2 * d[16] * d[45] * d[50] * d[59] + 2 * d[15] * d[48] * d[50] * d[59] - 2 * d[13] * d[46] * d[51] * d[59] + 2 * d[14] * d[48] * d[51] * d[59] - 2 * d[10] * d[49] * d[51] * d[59] + 2 * d[12] * d[50] * d[51] * d[59] - 2 * d[14] * d[45] * d[52] * d[59] + 2 * d[13] * d[48] * d[52] * d[59] + 2 * d[12] * d[49] * d[52] * d[59] - 2 * d[9] * d[50] * d[52] * d[59] + 2 * d[10] * d[45] * d[53] * d[59] + 2 * d[9] * d[46] * d[53] * d[59] - 4 * d[12] * d[48] * d[53] * d[59] - d[11] * d[45] * d[46] * d[70] - d[10] * d[45] * d[47] * d[70] - d[9] * d[46] * d[47] * d[70] + 2 * d[12] * d[47] * d[48] * d[70] + d[11] * std::pow(d[48], 2) * d[70] + 2 * d[13] * d[46] * d[49] * d[70] - 2 * d[14] * d[48] * d[49] * d[70] + d[10] * std::pow(d[49], 2) * d[70] + 2 * d[14] * d[45] * d[50] * d[70] - 2 * d[13] * d[48] * d[50] * d[70] - 2 * d[12] * d[49] * d[50] * d[70] + d[9] * std::pow(d[50], 2) * d[70];
    coeffs[87] = 2 * d[24] * d[46] * d[47] * d[57] - 2 * d[25] * d[47] * d[48] * d[57] - 2 * d[26] * d[46] * d[49] * d[57] + 2 * d[26] * d[48] * d[50] * d[57] + 2 * d[25] * d[49] * d[50] * d[57] - 2 * d[24] * std::pow(d[50], 2) * d[57] + 2 * d[20] * d[46] * d[51] * d[57] + 2 * d[19] * d[47] * d[51] * d[57] - 4 * d[23] * d[50] * d[51] * d[57] - 2 * d[21] * d[47] * d[52] * d[57] - 2 * d[20] * d[48] * d[52] * d[57] + 2 * d[23] * d[49] * d[52] * d[57] + 2 * d[22] * d[50] * d[52] * d[57] - 2 * d[22] * d[46] * d[53] * d[57] + 2 * d[23] * d[48] * d[53] * d[57] - 2 * d[19] * d[49] * d[53] * d[57] + 2 * d[21] * d[50] * d[53] * d[57] + 2 * d[25] * d[45] * d[47] * d[58] - 2 * d[24] * d[47] * d[48] * d[58] + 2 * d[26] * d[48] * d[49] * d[58] - 2 * d[25] * std::pow(d[49], 2) * d[58] - 2 * d[26] * d[45] * d[50] * d[58] + 2 * d[24] * d[49] * d[50] * d[58] - 2 * d[21] * d[47] * d[51] * d[58] - 2 * d[20] * d[48] * d[51] * d[58] + 2 * d[23] * d[49] * d[51] * d[58] + 2 * d[22] * d[50] * d[51] * d[58] + 2 * d[20] * d[45] * d[52] * d[58] + 2 * d[18] * d[47] * d[52] * d[58] - 4 * d[22] * d[49] * d[52] * d[58] - 2 * d[23] * d[45] * d[53] * d[58] + 2 * d[22] * d[48] * d[53] * d[58] + 2 * d[21] * d[49] * d[53] * d[58] - 2 * d[18] * d[50] * d[53] * d[58] + 2 * d[26] * d[45] * d[46] * d[59] - 2 * d[26] * std::pow(d[48], 2) * d[59] - 2 * d[24] * d[46] * d[49] * d[59] + 2 * d[25] * d[48] * d[49] * d[59] - 2 * d[25] * d[45] * d[50] * d[59] + 2 * d[24] * d[48] * d[50] * d[59] - 2 * d[22] * d[46] * d[51] * d[59] + 2 * d[23] * d[48] * d[51] * d[59] - 2 * d[19] * d[49] * d[51] * d[59] + 2 * d[21] * d[50] * d[51] * d[59] - 2 * d[23] * d[45] * d[52] * d[59] + 2 * d[22] * d[48] * d[52] * d[59] + 2 * d[21] * d[49] * d[52] * d[59] - 2 * d[18] * d[50] * d[52] * d[59] + 2 * d[19] * d[45] * d[53] * d[59] + 2 * d[18] * d[46] * d[53] * d[59] - 4 * d[21] * d[48] * d[53] * d[59] - d[20] * d[45] * d[46] * d[70] - d[19] * d[45] * d[47] * d[70] - d[18] * d[46] * d[47] * d[70] + 2 * d[21] * d[47] * d[48] * d[70] + d[20] * std::pow(d[48], 2) * d[70] + 2 * d[22] * d[46] * d[49] * d[70] - 2 * d[23] * d[48] * d[49] * d[70] + d[19] * std::pow(d[49], 2) * d[70] + 2 * d[23] * d[45] * d[50] * d[70] - 2 * d[22] * d[48] * d[50] * d[70] - 2 * d[21] * d[49] * d[50] * d[70] + d[18] * std::pow(d[50], 2) * d[70];
    coeffs[88] = 2 * d[33] * d[46] * d[47] * d[57] - 2 * d[34] * d[47] * d[48] * d[57] - 2 * d[35] * d[46] * d[49] * d[57] + 2 * d[35] * d[48] * d[50] * d[57] + 2 * d[34] * d[49] * d[50] * d[57] - 2 * d[33] * std::pow(d[50], 2) * d[57] + 2 * d[29] * d[46] * d[51] * d[57] + 2 * d[28] * d[47] * d[51] * d[57] - 4 * d[32] * d[50] * d[51] * d[57] - 2 * d[30] * d[47] * d[52] * d[57] - 2 * d[29] * d[48] * d[52] * d[57] + 2 * d[32] * d[49] * d[52] * d[57] + 2 * d[31] * d[50] * d[52] * d[57] - 2 * d[31] * d[46] * d[53] * d[57] + 2 * d[32] * d[48] * d[53] * d[57] - 2 * d[28] * d[49] * d[53] * d[57] + 2 * d[30] * d[50] * d[53] * d[57] + 2 * d[34] * d[45] * d[47] * d[58] - 2 * d[33] * d[47] * d[48] * d[58] + 2 * d[35] * d[48] * d[49] * d[58] - 2 * d[34] * std::pow(d[49], 2) * d[58] - 2 * d[35] * d[45] * d[50] * d[58] + 2 * d[33] * d[49] * d[50] * d[58] - 2 * d[30] * d[47] * d[51] * d[58] - 2 * d[29] * d[48] * d[51] * d[58] + 2 * d[32] * d[49] * d[51] * d[58] + 2 * d[31] * d[50] * d[51] * d[58] + 2 * d[29] * d[45] * d[52] * d[58] + 2 * d[27] * d[47] * d[52] * d[58] - 4 * d[31] * d[49] * d[52] * d[58] - 2 * d[32] * d[45] * d[53] * d[58] + 2 * d[31] * d[48] * d[53] * d[58] + 2 * d[30] * d[49] * d[53] * d[58] - 2 * d[27] * d[50] * d[53] * d[58] + 2 * d[35] * d[45] * d[46] * d[59] - 2 * d[35] * std::pow(d[48], 2) * d[59] - 2 * d[33] * d[46] * d[49] * d[59] + 2 * d[34] * d[48] * d[49] * d[59] - 2 * d[34] * d[45] * d[50] * d[59] + 2 * d[33] * d[48] * d[50] * d[59] - 2 * d[31] * d[46] * d[51] * d[59] + 2 * d[32] * d[48] * d[51] * d[59] - 2 * d[28] * d[49] * d[51] * d[59] + 2 * d[30] * d[50] * d[51] * d[59] - 2 * d[32] * d[45] * d[52] * d[59] + 2 * d[31] * d[48] * d[52] * d[59] + 2 * d[30] * d[49] * d[52] * d[59] - 2 * d[27] * d[50] * d[52] * d[59] + 2 * d[28] * d[45] * d[53] * d[59] + 2 * d[27] * d[46] * d[53] * d[59] - 4 * d[30] * d[48] * d[53] * d[59] - d[29] * d[45] * d[46] * d[70] - d[28] * d[45] * d[47] * d[70] - d[27] * d[46] * d[47] * d[70] + 2 * d[30] * d[47] * d[48] * d[70] + d[29] * std::pow(d[48], 2) * d[70] + 2 * d[31] * d[46] * d[49] * d[70] - 2 * d[32] * d[48] * d[49] * d[70] + d[28] * std::pow(d[49], 2) * d[70] + 2 * d[32] * d[45] * d[50] * d[70] - 2 * d[31] * d[48] * d[50] * d[70] - 2 * d[30] * d[49] * d[50] * d[70] + d[27] * std::pow(d[50], 2) * d[70];
    coeffs[89] = 2 * d[42] * d[46] * d[47] * d[57] - 2 * d[43] * d[47] * d[48] * d[57] - 2 * d[44] * d[46] * d[49] * d[57] + 2 * d[44] * d[48] * d[50] * d[57] + 2 * d[43] * d[49] * d[50] * d[57] - 2 * d[42] * std::pow(d[50], 2) * d[57] + 2 * d[38] * d[46] * d[51] * d[57] + 2 * d[37] * d[47] * d[51] * d[57] - 4 * d[41] * d[50] * d[51] * d[57] - 2 * d[39] * d[47] * d[52] * d[57] - 2 * d[38] * d[48] * d[52] * d[57] + 2 * d[41] * d[49] * d[52] * d[57] + 2 * d[40] * d[50] * d[52] * d[57] - 2 * d[40] * d[46] * d[53] * d[57] + 2 * d[41] * d[48] * d[53] * d[57] - 2 * d[37] * d[49] * d[53] * d[57] + 2 * d[39] * d[50] * d[53] * d[57] + 2 * d[43] * d[45] * d[47] * d[58] - 2 * d[42] * d[47] * d[48] * d[58] + 2 * d[44] * d[48] * d[49] * d[58] - 2 * d[43] * std::pow(d[49], 2) * d[58] - 2 * d[44] * d[45] * d[50] * d[58] + 2 * d[42] * d[49] * d[50] * d[58] - 2 * d[39] * d[47] * d[51] * d[58] - 2 * d[38] * d[48] * d[51] * d[58] + 2 * d[41] * d[49] * d[51] * d[58] + 2 * d[40] * d[50] * d[51] * d[58] + 2 * d[38] * d[45] * d[52] * d[58] + 2 * d[36] * d[47] * d[52] * d[58] - 4 * d[40] * d[49] * d[52] * d[58] - 2 * d[41] * d[45] * d[53] * d[58] + 2 * d[40] * d[48] * d[53] * d[58] + 2 * d[39] * d[49] * d[53] * d[58] - 2 * d[36] * d[50] * d[53] * d[58] + 2 * d[44] * d[45] * d[46] * d[59] - 2 * d[44] * std::pow(d[48], 2) * d[59] - 2 * d[42] * d[46] * d[49] * d[59] + 2 * d[43] * d[48] * d[49] * d[59] - 2 * d[43] * d[45] * d[50] * d[59] + 2 * d[42] * d[48] * d[50] * d[59] - 2 * d[40] * d[46] * d[51] * d[59] + 2 * d[41] * d[48] * d[51] * d[59] - 2 * d[37] * d[49] * d[51] * d[59] + 2 * d[39] * d[50] * d[51] * d[59] - 2 * d[41] * d[45] * d[52] * d[59] + 2 * d[40] * d[48] * d[52] * d[59] + 2 * d[39] * d[49] * d[52] * d[59] - 2 * d[36] * d[50] * d[52] * d[59] + 2 * d[37] * d[45] * d[53] * d[59] + 2 * d[36] * d[46] * d[53] * d[59] - 4 * d[39] * d[48] * d[53] * d[59] - d[38] * d[45] * d[46] * d[70] - d[37] * d[45] * d[47] * d[70] - d[36] * d[46] * d[47] * d[70] + 2 * d[39] * d[47] * d[48] * d[70] + d[38] * std::pow(d[48], 2) * d[70] + 2 * d[40] * d[46] * d[49] * d[70] - 2 * d[41] * d[48] * d[49] * d[70] + d[37] * std::pow(d[49], 2) * d[70] + 2 * d[41] * d[45] * d[50] * d[70] - 2 * d[40] * d[48] * d[50] * d[70] - 2 * d[39] * d[49] * d[50] * d[70] + d[36] * std::pow(d[50], 2) * d[70];
    coeffs[90] = 2 * d[46] * d[47] * d[51] * d[57] - 2 * std::pow(d[50], 2) * d[51] * d[57] - 2 * d[47] * d[48] * d[52] * d[57] + 2 * d[49] * d[50] * d[52] * d[57] - 2 * d[46] * d[49] * d[53] * d[57] + 2 * d[48] * d[50] * d[53] * d[57] - 2 * d[47] * d[48] * d[51] * d[58] + 2 * d[49] * d[50] * d[51] * d[58] + 2 * d[45] * d[47] * d[52] * d[58] - 2 * std::pow(d[49], 2) * d[52] * d[58] + 2 * d[48] * d[49] * d[53] * d[58] - 2 * d[45] * d[50] * d[53] * d[58] - 2 * d[46] * d[49] * d[51] * d[59] + 2 * d[48] * d[50] * d[51] * d[59] + 2 * d[48] * d[49] * d[52] * d[59] - 2 * d[45] * d[50] * d[52] * d[59] + 2 * d[45] * d[46] * d[53] * d[59] - 2 * std::pow(d[48], 2) * d[53] * d[59] - d[45] * d[46] * d[47] * d[70] + d[47] * std::pow(d[48], 2) * d[70] + d[46] * std::pow(d[49], 2) * d[70] - 2 * d[48] * d[49] * d[50] * d[70] + d[45] * std::pow(d[50], 2) * d[70];
    coeffs[91] = 2 * d[6] * d[10] * d[11] * d[57] - 2 * d[7] * d[11] * d[12] * d[57] - 2 * d[8] * d[10] * d[13] * d[57] + 2 * d[8] * d[12] * d[14] * d[57] + 2 * d[7] * d[13] * d[14] * d[57] - 2 * d[6] * std::pow(d[14], 2) * d[57] + 2 * d[2] * d[10] * d[15] * d[57] + 2 * d[1] * d[11] * d[15] * d[57] - 4 * d[5] * d[14] * d[15] * d[57] - 2 * d[3] * d[11] * d[16] * d[57] - 2 * d[2] * d[12] * d[16] * d[57] + 2 * d[5] * d[13] * d[16] * d[57] + 2 * d[4] * d[14] * d[16] * d[57] - 2 * d[4] * d[10] * d[17] * d[57] + 2 * d[5] * d[12] * d[17] * d[57] - 2 * d[1] * d[13] * d[17] * d[57] + 2 * d[3] * d[14] * d[17] * d[57] + d[10] * d[11] * std::pow(d[57], 2) - std::pow(d[14], 2) * std::pow(d[57], 2) + 2 * d[7] * d[9] * d[11] * d[58] - 2 * d[6] * d[11] * d[12] * d[58] + 2 * d[8] * d[12] * d[13] * d[58] - 2 * d[7] * std::pow(d[13], 2) * d[58] - 2 * d[8] * d[9] * d[14] * d[58] + 2 * d[6] * d[13] * d[14] * d[58] - 2 * d[3] * d[11] * d[15] * d[58] - 2 * d[2] * d[12] * d[15] * d[58] + 2 * d[5] * d[13] * d[15] * d[58] + 2 * d[4] * d[14] * d[15] * d[58] + 2 * d[2] * d[9] * d[16] * d[58] + 2 * d[0] * d[11] * d[16] * d[58] - 4 * d[4] * d[13] * d[16] * d[58] - 2 * d[5] * d[9] * d[17] * d[58] + 2 * d[4] * d[12] * d[17] * d[58] + 2 * d[3] * d[13] * d[17] * d[58] - 2 * d[0] * d[14] * d[17] * d[58] - 2 * d[11] * d[12] * d[57] * d[58] + 2 * d[13] * d[14] * d[57] * d[58] + d[9] * d[11] * std::pow(d[58], 2) - std::pow(d[13], 2) * std::pow(d[58], 2) + 2 * d[8] * d[9] * d[10] * d[59] - 2 * d[8] * std::pow(d[12], 2) * d[59] - 2 * d[6] * d[10] * d[13] * d[59] + 2 * d[7] * d[12] * d[13] * d[59] - 2 * d[7] * d[9] * d[14] * d[59] + 2 * d[6] * d[12] * d[14] * d[59] - 2 * d[4] * d[10] * d[15] * d[59] + 2 * d[5] * d[12] * d[15] * d[59] - 2 * d[1] * d[13] * d[15] * d[59] + 2 * d[3] * d[14] * d[15] * d[59] - 2 * d[5] * d[9] * d[16] * d[59] + 2 * d[4] * d[12] * d[16] * d[59] + 2 * d[3] * d[13] * d[16] * d[59] - 2 * d[0] * d[14] * d[16] * d[59] + 2 * d[1] * d[9] * d[17] * d[59] + 2 * d[0] * d[10] * d[17] * d[59] - 4 * d[3] * d[12] * d[17] * d[59] - 2 * d[10] * d[13] * d[57] * d[59] + 2 * d[12] * d[14] * d[57] * d[59] + 2 * d[12] * d[13] * d[58] * d[59] - 2 * d[9] * d[14] * d[58] * d[59] + d[9] * d[10] * std::pow(d[59], 2) - std::pow(d[12], 2) * std::pow(d[59], 2) - d[2] * d[9] * d[10] * d[70] - d[1] * d[9] * d[11] * d[70] - d[0] * d[10] * d[11] * d[70] + 2 * d[3] * d[11] * d[12] * d[70] + d[2] * std::pow(d[12], 2) * d[70] + 2 * d[4] * d[10] * d[13] * d[70] - 2 * d[5] * d[12] * d[13] * d[70] + d[1] * std::pow(d[13], 2) * d[70] + 2 * d[5] * d[9] * d[14] * d[70] - 2 * d[4] * d[12] * d[14] * d[70] - 2 * d[3] * d[13] * d[14] * d[70] + d[0] * std::pow(d[14], 2) * d[70];
    coeffs[92] = 2 * d[6] * d[11] * d[19] * d[57] - 2 * d[8] * d[13] * d[19] * d[57] + 2 * d[2] * d[15] * d[19] * d[57] - 2 * d[4] * d[17] * d[19] * d[57] + 2 * d[6] * d[10] * d[20] * d[57] - 2 * d[7] * d[12] * d[20] * d[57] + 2 * d[1] * d[15] * d[20] * d[57] - 2 * d[3] * d[16] * d[20] * d[57] - 2 * d[7] * d[11] * d[21] * d[57] + 2 * d[8] * d[14] * d[21] * d[57] - 2 * d[2] * d[16] * d[21] * d[57] + 2 * d[5] * d[17] * d[21] * d[57] - 2 * d[8] * d[10] * d[22] * d[57] + 2 * d[7] * d[14] * d[22] * d[57] + 2 * d[5] * d[16] * d[22] * d[57] - 2 * d[1] * d[17] * d[22] * d[57] + 2 * d[8] * d[12] * d[23] * d[57] + 2 * d[7] * d[13] * d[23] * d[57] - 4 * d[6] * d[14] * d[23] * d[57] - 4 * d[5] * d[15] * d[23] * d[57] + 2 * d[4] * d[16] * d[23] * d[57] + 2 * d[3] * d[17] * d[23] * d[57] + 2 * d[2] * d[10] * d[24] * d[57] + 2 * d[1] * d[11] * d[24] * d[57] - 4 * d[5] * d[14] * d[24] * d[57] - 2 * d[3] * d[11] * d[25] * d[57] - 2 * d[2] * d[12] * d[25] * d[57] + 2 * d[5] * d[13] * d[25] * d[57] + 2 * d[4] * d[14] * d[25] * d[57] - 2 * d[4] * d[10] * d[26] * d[57] + 2 * d[5] * d[12] * d[26] * d[57] - 2 * d[1] * d[13] * d[26] * d[57] + 2 * d[3] * d[14] * d[26] * d[57] + d[11] * d[19] * std::pow(d[57], 2) + d[10] * d[20] * std::pow(d[57], 2) - 2 * d[14] * d[23] * std::pow(d[57], 2) + 2 * d[7] * d[11] * d[18] * d[58] - 2 * d[8] * d[14] * d[18] * d[58] + 2 * d[2] * d[16] * d[18] * d[58] - 2 * d[5] * d[17] * d[18] * d[58] + 2 * d[7] * d[9] * d[20] * d[58] - 2 * d[6] * d[12] * d[20] * d[58] - 2 * d[3] * d[15] * d[20] * d[58] + 2 * d[0] * d[16] * d[20] * d[58] - 2 * d[6] * d[11] * d[21] * d[58] + 2 * d[8] * d[13] * d[21] * d[58] - 2 * d[2] * d[15] * d[21] * d[58] + 2 * d[4] * d[17] * d[21] * d[58] + 2 * d[8] * d[12] * d[22] * d[58] - 4 * d[7] * d[13] * d[22] * d[58] + 2 * d[6] * d[14] * d[22] * d[58] + 2 * d[5] * d[15] * d[22] * d[58] - 4 * d[4] * d[16] * d[22] * d[58] + 2 * d[3] * d[17] * d[22] * d[58] - 2 * d[8] * d[9] * d[23] * d[58] + 2 * d[6] * d[13] * d[23] * d[58] + 2 * d[4] * d[15] * d[23] * d[58] - 2 * d[0] * d[17] * d[23] * d[58] - 2 * d[3] * d[11] * d[24] * d[58] - 2 * d[2] * d[12] * d[24] * d[58] + 2 * d[5] * d[13] * d[24] * d[58] + 2 * d[4] * d[14] * d[24] * d[58] + 2 * d[2] * d[9] * d[25] * d[58] + 2 * d[0] * d[11] * d[25] * d[58] - 4 * d[4] * d[13] * d[25] * d[58] - 2 * d[5] * d[9] * d[26] * d[58] + 2 * d[4] * d[12] * d[26] * d[58] + 2 * d[3] * d[13] * d[26] * d[58] - 2 * d[0] * d[14] * d[26] * d[58] - 2 * d[12] * d[20] * d[57] * d[58] - 2 * d[11] * d[21] * d[57] * d[58] + 2 * d[14] * d[22] * d[57] * d[58] + 2 * d[13] * d[23] * d[57] * d[58] + d[11] * d[18] * std::pow(d[58], 2) + d[9] * d[20] * std::pow(d[58], 2) - 2 * d[13] * d[22] * std::pow(d[58], 2) + 2 * d[8] * d[10] * d[18] * d[59] - 2 * d[7] * d[14] * d[18] * d[59] - 2 * d[5] * d[16] * d[18] * d[59] + 2 * d[1] * d[17] * d[18] * d[59] + 2 * d[8] * d[9] * d[19] * d[59] - 2 * d[6] * d[13] * d[19] * d[59] - 2 * d[4] * d[15] * d[19] * d[59] + 2 * d[0] * d[17] * d[19] * d[59] - 4 * d[8] * d[12] * d[21] * d[59] + 2 * d[7] * d[13] * d[21] * d[59] + 2 * d[6] * d[14] * d[21] * d[59] + 2 * d[5] * d[15] * d[21] * d[59] + 2 * d[4] * d[16] * d[21] * d[59] - 4 * d[3] * d[17] * d[21] * d[59] - 2 * d[6] * d[10] * d[22] * d[59] + 2 * d[7] * d[12] * d[22] * d[59] - 2 * d[1] * d[15] * d[22] * d[59] + 2 * d[3] * d[16] * d[22] * d[59] - 2 * d[7] * d[9] * d[23] * d[59] + 2 * d[6] * d[12] * d[23] * d[59] + 2 * d[3] * d[15] * d[23] * d[59] - 2 * d[0] * d[16] * d[23] * d[59] - 2 * d[4] * d[10] * d[24] * d[59] + 2 * d[5] * d[12] * d[24] * d[59] - 2 * d[1] * d[13] * d[24] * d[59] + 2 * d[3] * d[14] * d[24] * d[59] - 2 * d[5] * d[9] * d[25] * d[59] + 2 * d[4] * d[12] * d[25] * d[59] + 2 * d[3] * d[13] * d[25] * d[59] - 2 * d[0] * d[14] * d[25] * d[59] + 2 * d[1] * d[9] * d[26] * d[59] + 2 * d[0] * d[10] * d[26] * d[59] - 4 * d[3] * d[12] * d[26] * d[59] - 2 * d[13] * d[19] * d[57] * d[59] + 2 * d[14] * d[21] * d[57] * d[59] - 2 * d[10] * d[22] * d[57] * d[59] + 2 * d[12] * d[23] * d[57] * d[59] - 2 * d[14] * d[18] * d[58] * d[59] + 2 * d[13] * d[21] * d[58] * d[59] + 2 * d[12] * d[22] * d[58] * d[59] - 2 * d[9] * d[23] * d[58] * d[59] + d[10] * d[18] * std::pow(d[59], 2) + d[9] * d[19] * std::pow(d[59], 2) - 2 * d[12] * d[21] * std::pow(d[59], 2) - d[2] * d[10] * d[18] * d[70] - d[1] * d[11] * d[18] * d[70] + 2 * d[5] * d[14] * d[18] * d[70] - d[2] * d[9] * d[19] * d[70] - d[0] * d[11] * d[19] * d[70] + 2 * d[4] * d[13] * d[19] * d[70] - d[1] * d[9] * d[20] * d[70] - d[0] * d[10] * d[20] * d[70] + 2 * d[3] * d[12] * d[20] * d[70] + 2 * d[3] * d[11] * d[21] * d[70] + 2 * d[2] * d[12] * d[21] * d[70] - 2 * d[5] * d[13] * d[21] * d[70] - 2 * d[4] * d[14] * d[21] * d[70] + 2 * d[4] * d[10] * d[22] * d[70] - 2 * d[5] * d[12] * d[22] * d[70] + 2 * d[1] * d[13] * d[22] * d[70] - 2 * d[3] * d[14] * d[22] * d[70] + 2 * d[5] * d[9] * d[23] * d[70] - 2 * d[4] * d[12] * d[23] * d[70] - 2 * d[3] * d[13] * d[23] * d[70] + 2 * d[0] * d[14] * d[23] * d[70];
    coeffs[93] = 2 * d[6] * d[19] * d[20] * d[57] - 2 * d[7] * d[20] * d[21] * d[57] - 2 * d[8] * d[19] * d[22] * d[57] + 2 * d[8] * d[21] * d[23] * d[57] + 2 * d[7] * d[22] * d[23] * d[57] - 2 * d[6] * std::pow(d[23], 2) * d[57] + 2 * d[2] * d[19] * d[24] * d[57] + 2 * d[1] * d[20] * d[24] * d[57] - 4 * d[5] * d[23] * d[24] * d[57] - 2 * d[3] * d[20] * d[25] * d[57] - 2 * d[2] * d[21] * d[25] * d[57] + 2 * d[5] * d[22] * d[25] * d[57] + 2 * d[4] * d[23] * d[25] * d[57] - 2 * d[4] * d[19] * d[26] * d[57] + 2 * d[5] * d[21] * d[26] * d[57] - 2 * d[1] * d[22] * d[26] * d[57] + 2 * d[3] * d[23] * d[26] * d[57] + d[19] * d[20] * std::pow(d[57], 2) - std::pow(d[23], 2) * std::pow(d[57], 2) + 2 * d[7] * d[18] * d[20] * d[58] - 2 * d[6] * d[20] * d[21] * d[58] + 2 * d[8] * d[21] * d[22] * d[58] - 2 * d[7] * std::pow(d[22], 2) * d[58] - 2 * d[8] * d[18] * d[23] * d[58] + 2 * d[6] * d[22] * d[23] * d[58] - 2 * d[3] * d[20] * d[24] * d[58] - 2 * d[2] * d[21] * d[24] * d[58] + 2 * d[5] * d[22] * d[24] * d[58] + 2 * d[4] * d[23] * d[24] * d[58] + 2 * d[2] * d[18] * d[25] * d[58] + 2 * d[0] * d[20] * d[25] * d[58] - 4 * d[4] * d[22] * d[25] * d[58] - 2 * d[5] * d[18] * d[26] * d[58] + 2 * d[4] * d[21] * d[26] * d[58] + 2 * d[3] * d[22] * d[26] * d[58] - 2 * d[0] * d[23] * d[26] * d[58] - 2 * d[20] * d[21] * d[57] * d[58] + 2 * d[22] * d[23] * d[57] * d[58] + d[18] * d[20] * std::pow(d[58], 2) - std::pow(d[22], 2) * std::pow(d[58], 2) + 2 * d[8] * d[18] * d[19] * d[59] - 2 * d[8] * std::pow(d[21], 2) * d[59] - 2 * d[6] * d[19] * d[22] * d[59] + 2 * d[7] * d[21] * d[22] * d[59] - 2 * d[7] * d[18] * d[23] * d[59] + 2 * d[6] * d[21] * d[23] * d[59] - 2 * d[4] * d[19] * d[24] * d[59] + 2 * d[5] * d[21] * d[24] * d[59] - 2 * d[1] * d[22] * d[24] * d[59] + 2 * d[3] * d[23] * d[24] * d[59] - 2 * d[5] * d[18] * d[25] * d[59] + 2 * d[4] * d[21] * d[25] * d[59] + 2 * d[3] * d[22] * d[25] * d[59] - 2 * d[0] * d[23] * d[25] * d[59] + 2 * d[1] * d[18] * d[26] * d[59] + 2 * d[0] * d[19] * d[26] * d[59] - 4 * d[3] * d[21] * d[26] * d[59] - 2 * d[19] * d[22] * d[57] * d[59] + 2 * d[21] * d[23] * d[57] * d[59] + 2 * d[21] * d[22] * d[58] * d[59] - 2 * d[18] * d[23] * d[58] * d[59] + d[18] * d[19] * std::pow(d[59], 2) - std::pow(d[21], 2) * std::pow(d[59], 2) - d[2] * d[18] * d[19] * d[70] - d[1] * d[18] * d[20] * d[70] - d[0] * d[19] * d[20] * d[70] + 2 * d[3] * d[20] * d[21] * d[70] + d[2] * std::pow(d[21], 2) * d[70] + 2 * d[4] * d[19] * d[22] * d[70] - 2 * d[5] * d[21] * d[22] * d[70] + d[1] * std::pow(d[22], 2) * d[70] + 2 * d[5] * d[18] * d[23] * d[70] - 2 * d[4] * d[21] * d[23] * d[70] - 2 * d[3] * d[22] * d[23] * d[70] + d[0] * std::pow(d[23], 2) * d[70];
    coeffs[94] = 2 * d[6] * d[11] * d[28] * d[57] - 2 * d[8] * d[13] * d[28] * d[57] + 2 * d[2] * d[15] * d[28] * d[57] - 2 * d[4] * d[17] * d[28] * d[57] + 2 * d[6] * d[10] * d[29] * d[57] - 2 * d[7] * d[12] * d[29] * d[57] + 2 * d[1] * d[15] * d[29] * d[57] - 2 * d[3] * d[16] * d[29] * d[57] - 2 * d[7] * d[11] * d[30] * d[57] + 2 * d[8] * d[14] * d[30] * d[57] - 2 * d[2] * d[16] * d[30] * d[57] + 2 * d[5] * d[17] * d[30] * d[57] - 2 * d[8] * d[10] * d[31] * d[57] + 2 * d[7] * d[14] * d[31] * d[57] + 2 * d[5] * d[16] * d[31] * d[57] - 2 * d[1] * d[17] * d[31] * d[57] + 2 * d[8] * d[12] * d[32] * d[57] + 2 * d[7] * d[13] * d[32] * d[57] - 4 * d[6] * d[14] * d[32] * d[57] - 4 * d[5] * d[15] * d[32] * d[57] + 2 * d[4] * d[16] * d[32] * d[57] + 2 * d[3] * d[17] * d[32] * d[57] + 2 * d[2] * d[10] * d[33] * d[57] + 2 * d[1] * d[11] * d[33] * d[57] - 4 * d[5] * d[14] * d[33] * d[57] - 2 * d[3] * d[11] * d[34] * d[57] - 2 * d[2] * d[12] * d[34] * d[57] + 2 * d[5] * d[13] * d[34] * d[57] + 2 * d[4] * d[14] * d[34] * d[57] - 2 * d[4] * d[10] * d[35] * d[57] + 2 * d[5] * d[12] * d[35] * d[57] - 2 * d[1] * d[13] * d[35] * d[57] + 2 * d[3] * d[14] * d[35] * d[57] + d[11] * d[28] * std::pow(d[57], 2) + d[10] * d[29] * std::pow(d[57], 2) - 2 * d[14] * d[32] * std::pow(d[57], 2) + 2 * d[7] * d[11] * d[27] * d[58] - 2 * d[8] * d[14] * d[27] * d[58] + 2 * d[2] * d[16] * d[27] * d[58] - 2 * d[5] * d[17] * d[27] * d[58] + 2 * d[7] * d[9] * d[29] * d[58] - 2 * d[6] * d[12] * d[29] * d[58] - 2 * d[3] * d[15] * d[29] * d[58] + 2 * d[0] * d[16] * d[29] * d[58] - 2 * d[6] * d[11] * d[30] * d[58] + 2 * d[8] * d[13] * d[30] * d[58] - 2 * d[2] * d[15] * d[30] * d[58] + 2 * d[4] * d[17] * d[30] * d[58] + 2 * d[8] * d[12] * d[31] * d[58] - 4 * d[7] * d[13] * d[31] * d[58] + 2 * d[6] * d[14] * d[31] * d[58] + 2 * d[5] * d[15] * d[31] * d[58] - 4 * d[4] * d[16] * d[31] * d[58] + 2 * d[3] * d[17] * d[31] * d[58] - 2 * d[8] * d[9] * d[32] * d[58] + 2 * d[6] * d[13] * d[32] * d[58] + 2 * d[4] * d[15] * d[32] * d[58] - 2 * d[0] * d[17] * d[32] * d[58] - 2 * d[3] * d[11] * d[33] * d[58] - 2 * d[2] * d[12] * d[33] * d[58] + 2 * d[5] * d[13] * d[33] * d[58] + 2 * d[4] * d[14] * d[33] * d[58] + 2 * d[2] * d[9] * d[34] * d[58] + 2 * d[0] * d[11] * d[34] * d[58] - 4 * d[4] * d[13] * d[34] * d[58] - 2 * d[5] * d[9] * d[35] * d[58] + 2 * d[4] * d[12] * d[35] * d[58] + 2 * d[3] * d[13] * d[35] * d[58] - 2 * d[0] * d[14] * d[35] * d[58] - 2 * d[12] * d[29] * d[57] * d[58] - 2 * d[11] * d[30] * d[57] * d[58] + 2 * d[14] * d[31] * d[57] * d[58] + 2 * d[13] * d[32] * d[57] * d[58] + d[11] * d[27] * std::pow(d[58], 2) + d[9] * d[29] * std::pow(d[58], 2) - 2 * d[13] * d[31] * std::pow(d[58], 2) + 2 * d[8] * d[10] * d[27] * d[59] - 2 * d[7] * d[14] * d[27] * d[59] - 2 * d[5] * d[16] * d[27] * d[59] + 2 * d[1] * d[17] * d[27] * d[59] + 2 * d[8] * d[9] * d[28] * d[59] - 2 * d[6] * d[13] * d[28] * d[59] - 2 * d[4] * d[15] * d[28] * d[59] + 2 * d[0] * d[17] * d[28] * d[59] - 4 * d[8] * d[12] * d[30] * d[59] + 2 * d[7] * d[13] * d[30] * d[59] + 2 * d[6] * d[14] * d[30] * d[59] + 2 * d[5] * d[15] * d[30] * d[59] + 2 * d[4] * d[16] * d[30] * d[59] - 4 * d[3] * d[17] * d[30] * d[59] - 2 * d[6] * d[10] * d[31] * d[59] + 2 * d[7] * d[12] * d[31] * d[59] - 2 * d[1] * d[15] * d[31] * d[59] + 2 * d[3] * d[16] * d[31] * d[59] - 2 * d[7] * d[9] * d[32] * d[59] + 2 * d[6] * d[12] * d[32] * d[59] + 2 * d[3] * d[15] * d[32] * d[59] - 2 * d[0] * d[16] * d[32] * d[59] - 2 * d[4] * d[10] * d[33] * d[59] + 2 * d[5] * d[12] * d[33] * d[59] - 2 * d[1] * d[13] * d[33] * d[59] + 2 * d[3] * d[14] * d[33] * d[59] - 2 * d[5] * d[9] * d[34] * d[59] + 2 * d[4] * d[12] * d[34] * d[59] + 2 * d[3] * d[13] * d[34] * d[59] - 2 * d[0] * d[14] * d[34] * d[59] + 2 * d[1] * d[9] * d[35] * d[59] + 2 * d[0] * d[10] * d[35] * d[59] - 4 * d[3] * d[12] * d[35] * d[59] - 2 * d[13] * d[28] * d[57] * d[59] + 2 * d[14] * d[30] * d[57] * d[59] - 2 * d[10] * d[31] * d[57] * d[59] + 2 * d[12] * d[32] * d[57] * d[59] - 2 * d[14] * d[27] * d[58] * d[59] + 2 * d[13] * d[30] * d[58] * d[59] + 2 * d[12] * d[31] * d[58] * d[59] - 2 * d[9] * d[32] * d[58] * d[59] + d[10] * d[27] * std::pow(d[59], 2) + d[9] * d[28] * std::pow(d[59], 2) - 2 * d[12] * d[30] * std::pow(d[59], 2) - d[2] * d[10] * d[27] * d[70] - d[1] * d[11] * d[27] * d[70] + 2 * d[5] * d[14] * d[27] * d[70] - d[2] * d[9] * d[28] * d[70] - d[0] * d[11] * d[28] * d[70] + 2 * d[4] * d[13] * d[28] * d[70] - d[1] * d[9] * d[29] * d[70] - d[0] * d[10] * d[29] * d[70] + 2 * d[3] * d[12] * d[29] * d[70] + 2 * d[3] * d[11] * d[30] * d[70] + 2 * d[2] * d[12] * d[30] * d[70] - 2 * d[5] * d[13] * d[30] * d[70] - 2 * d[4] * d[14] * d[30] * d[70] + 2 * d[4] * d[10] * d[31] * d[70] - 2 * d[5] * d[12] * d[31] * d[70] + 2 * d[1] * d[13] * d[31] * d[70] - 2 * d[3] * d[14] * d[31] * d[70] + 2 * d[5] * d[9] * d[32] * d[70] - 2 * d[4] * d[12] * d[32] * d[70] - 2 * d[3] * d[13] * d[32] * d[70] + 2 * d[0] * d[14] * d[32] * d[70];
    coeffs[95] = 2 * d[6] * d[20] * d[28] * d[57] - 2 * d[8] * d[22] * d[28] * d[57] + 2 * d[2] * d[24] * d[28] * d[57] - 2 * d[4] * d[26] * d[28] * d[57] + 2 * d[6] * d[19] * d[29] * d[57] - 2 * d[7] * d[21] * d[29] * d[57] + 2 * d[1] * d[24] * d[29] * d[57] - 2 * d[3] * d[25] * d[29] * d[57] - 2 * d[7] * d[20] * d[30] * d[57] + 2 * d[8] * d[23] * d[30] * d[57] - 2 * d[2] * d[25] * d[30] * d[57] + 2 * d[5] * d[26] * d[30] * d[57] - 2 * d[8] * d[19] * d[31] * d[57] + 2 * d[7] * d[23] * d[31] * d[57] + 2 * d[5] * d[25] * d[31] * d[57] - 2 * d[1] * d[26] * d[31] * d[57] + 2 * d[8] * d[21] * d[32] * d[57] + 2 * d[7] * d[22] * d[32] * d[57] - 4 * d[6] * d[23] * d[32] * d[57] - 4 * d[5] * d[24] * d[32] * d[57] + 2 * d[4] * d[25] * d[32] * d[57] + 2 * d[3] * d[26] * d[32] * d[57] + 2 * d[2] * d[19] * d[33] * d[57] + 2 * d[1] * d[20] * d[33] * d[57] - 4 * d[5] * d[23] * d[33] * d[57] - 2 * d[3] * d[20] * d[34] * d[57] - 2 * d[2] * d[21] * d[34] * d[57] + 2 * d[5] * d[22] * d[34] * d[57] + 2 * d[4] * d[23] * d[34] * d[57] - 2 * d[4] * d[19] * d[35] * d[57] + 2 * d[5] * d[21] * d[35] * d[57] - 2 * d[1] * d[22] * d[35] * d[57] + 2 * d[3] * d[23] * d[35] * d[57] + d[20] * d[28] * std::pow(d[57], 2) + d[19] * d[29] * std::pow(d[57], 2) - 2 * d[23] * d[32] * std::pow(d[57], 2) + 2 * d[7] * d[20] * d[27] * d[58] - 2 * d[8] * d[23] * d[27] * d[58] + 2 * d[2] * d[25] * d[27] * d[58] - 2 * d[5] * d[26] * d[27] * d[58] + 2 * d[7] * d[18] * d[29] * d[58] - 2 * d[6] * d[21] * d[29] * d[58] - 2 * d[3] * d[24] * d[29] * d[58] + 2 * d[0] * d[25] * d[29] * d[58] - 2 * d[6] * d[20] * d[30] * d[58] + 2 * d[8] * d[22] * d[30] * d[58] - 2 * d[2] * d[24] * d[30] * d[58] + 2 * d[4] * d[26] * d[30] * d[58] + 2 * d[8] * d[21] * d[31] * d[58] - 4 * d[7] * d[22] * d[31] * d[58] + 2 * d[6] * d[23] * d[31] * d[58] + 2 * d[5] * d[24] * d[31] * d[58] - 4 * d[4] * d[25] * d[31] * d[58] + 2 * d[3] * d[26] * d[31] * d[58] - 2 * d[8] * d[18] * d[32] * d[58] + 2 * d[6] * d[22] * d[32] * d[58] + 2 * d[4] * d[24] * d[32] * d[58] - 2 * d[0] * d[26] * d[32] * d[58] - 2 * d[3] * d[20] * d[33] * d[58] - 2 * d[2] * d[21] * d[33] * d[58] + 2 * d[5] * d[22] * d[33] * d[58] + 2 * d[4] * d[23] * d[33] * d[58] + 2 * d[2] * d[18] * d[34] * d[58] + 2 * d[0] * d[20] * d[34] * d[58] - 4 * d[4] * d[22] * d[34] * d[58] - 2 * d[5] * d[18] * d[35] * d[58] + 2 * d[4] * d[21] * d[35] * d[58] + 2 * d[3] * d[22] * d[35] * d[58] - 2 * d[0] * d[23] * d[35] * d[58] - 2 * d[21] * d[29] * d[57] * d[58] - 2 * d[20] * d[30] * d[57] * d[58] + 2 * d[23] * d[31] * d[57] * d[58] + 2 * d[22] * d[32] * d[57] * d[58] + d[20] * d[27] * std::pow(d[58], 2) + d[18] * d[29] * std::pow(d[58], 2) - 2 * d[22] * d[31] * std::pow(d[58], 2) + 2 * d[8] * d[19] * d[27] * d[59] - 2 * d[7] * d[23] * d[27] * d[59] - 2 * d[5] * d[25] * d[27] * d[59] + 2 * d[1] * d[26] * d[27] * d[59] + 2 * d[8] * d[18] * d[28] * d[59] - 2 * d[6] * d[22] * d[28] * d[59] - 2 * d[4] * d[24] * d[28] * d[59] + 2 * d[0] * d[26] * d[28] * d[59] - 4 * d[8] * d[21] * d[30] * d[59] + 2 * d[7] * d[22] * d[30] * d[59] + 2 * d[6] * d[23] * d[30] * d[59] + 2 * d[5] * d[24] * d[30] * d[59] + 2 * d[4] * d[25] * d[30] * d[59] - 4 * d[3] * d[26] * d[30] * d[59] - 2 * d[6] * d[19] * d[31] * d[59] + 2 * d[7] * d[21] * d[31] * d[59] - 2 * d[1] * d[24] * d[31] * d[59] + 2 * d[3] * d[25] * d[31] * d[59] - 2 * d[7] * d[18] * d[32] * d[59] + 2 * d[6] * d[21] * d[32] * d[59] + 2 * d[3] * d[24] * d[32] * d[59] - 2 * d[0] * d[25] * d[32] * d[59] - 2 * d[4] * d[19] * d[33] * d[59] + 2 * d[5] * d[21] * d[33] * d[59] - 2 * d[1] * d[22] * d[33] * d[59] + 2 * d[3] * d[23] * d[33] * d[59] - 2 * d[5] * d[18] * d[34] * d[59] + 2 * d[4] * d[21] * d[34] * d[59] + 2 * d[3] * d[22] * d[34] * d[59] - 2 * d[0] * d[23] * d[34] * d[59] + 2 * d[1] * d[18] * d[35] * d[59] + 2 * d[0] * d[19] * d[35] * d[59] - 4 * d[3] * d[21] * d[35] * d[59] - 2 * d[22] * d[28] * d[57] * d[59] + 2 * d[23] * d[30] * d[57] * d[59] - 2 * d[19] * d[31] * d[57] * d[59] + 2 * d[21] * d[32] * d[57] * d[59] - 2 * d[23] * d[27] * d[58] * d[59] + 2 * d[22] * d[30] * d[58] * d[59] + 2 * d[21] * d[31] * d[58] * d[59] - 2 * d[18] * d[32] * d[58] * d[59] + d[19] * d[27] * std::pow(d[59], 2) + d[18] * d[28] * std::pow(d[59], 2) - 2 * d[21] * d[30] * std::pow(d[59], 2) - d[2] * d[19] * d[27] * d[70] - d[1] * d[20] * d[27] * d[70] + 2 * d[5] * d[23] * d[27] * d[70] - d[2] * d[18] * d[28] * d[70] - d[0] * d[20] * d[28] * d[70] + 2 * d[4] * d[22] * d[28] * d[70] - d[1] * d[18] * d[29] * d[70] - d[0] * d[19] * d[29] * d[70] + 2 * d[3] * d[21] * d[29] * d[70] + 2 * d[3] * d[20] * d[30] * d[70] + 2 * d[2] * d[21] * d[30] * d[70] - 2 * d[5] * d[22] * d[30] * d[70] - 2 * d[4] * d[23] * d[30] * d[70] + 2 * d[4] * d[19] * d[31] * d[70] - 2 * d[5] * d[21] * d[31] * d[70] + 2 * d[1] * d[22] * d[31] * d[70] - 2 * d[3] * d[23] * d[31] * d[70] + 2 * d[5] * d[18] * d[32] * d[70] - 2 * d[4] * d[21] * d[32] * d[70] - 2 * d[3] * d[22] * d[32] * d[70] + 2 * d[0] * d[23] * d[32] * d[70];
    coeffs[96] = 2 * d[6] * d[28] * d[29] * d[57] - 2 * d[7] * d[29] * d[30] * d[57] - 2 * d[8] * d[28] * d[31] * d[57] + 2 * d[8] * d[30] * d[32] * d[57] + 2 * d[7] * d[31] * d[32] * d[57] - 2 * d[6] * std::pow(d[32], 2) * d[57] + 2 * d[2] * d[28] * d[33] * d[57] + 2 * d[1] * d[29] * d[33] * d[57] - 4 * d[5] * d[32] * d[33] * d[57] - 2 * d[3] * d[29] * d[34] * d[57] - 2 * d[2] * d[30] * d[34] * d[57] + 2 * d[5] * d[31] * d[34] * d[57] + 2 * d[4] * d[32] * d[34] * d[57] - 2 * d[4] * d[28] * d[35] * d[57] + 2 * d[5] * d[30] * d[35] * d[57] - 2 * d[1] * d[31] * d[35] * d[57] + 2 * d[3] * d[32] * d[35] * d[57] + d[28] * d[29] * std::pow(d[57], 2) - std::pow(d[32], 2) * std::pow(d[57], 2) + 2 * d[7] * d[27] * d[29] * d[58] - 2 * d[6] * d[29] * d[30] * d[58] + 2 * d[8] * d[30] * d[31] * d[58] - 2 * d[7] * std::pow(d[31], 2) * d[58] - 2 * d[8] * d[27] * d[32] * d[58] + 2 * d[6] * d[31] * d[32] * d[58] - 2 * d[3] * d[29] * d[33] * d[58] - 2 * d[2] * d[30] * d[33] * d[58] + 2 * d[5] * d[31] * d[33] * d[58] + 2 * d[4] * d[32] * d[33] * d[58] + 2 * d[2] * d[27] * d[34] * d[58] + 2 * d[0] * d[29] * d[34] * d[58] - 4 * d[4] * d[31] * d[34] * d[58] - 2 * d[5] * d[27] * d[35] * d[58] + 2 * d[4] * d[30] * d[35] * d[58] + 2 * d[3] * d[31] * d[35] * d[58] - 2 * d[0] * d[32] * d[35] * d[58] - 2 * d[29] * d[30] * d[57] * d[58] + 2 * d[31] * d[32] * d[57] * d[58] + d[27] * d[29] * std::pow(d[58], 2) - std::pow(d[31], 2) * std::pow(d[58], 2) + 2 * d[8] * d[27] * d[28] * d[59] - 2 * d[8] * std::pow(d[30], 2) * d[59] - 2 * d[6] * d[28] * d[31] * d[59] + 2 * d[7] * d[30] * d[31] * d[59] - 2 * d[7] * d[27] * d[32] * d[59] + 2 * d[6] * d[30] * d[32] * d[59] - 2 * d[4] * d[28] * d[33] * d[59] + 2 * d[5] * d[30] * d[33] * d[59] - 2 * d[1] * d[31] * d[33] * d[59] + 2 * d[3] * d[32] * d[33] * d[59] - 2 * d[5] * d[27] * d[34] * d[59] + 2 * d[4] * d[30] * d[34] * d[59] + 2 * d[3] * d[31] * d[34] * d[59] - 2 * d[0] * d[32] * d[34] * d[59] + 2 * d[1] * d[27] * d[35] * d[59] + 2 * d[0] * d[28] * d[35] * d[59] - 4 * d[3] * d[30] * d[35] * d[59] - 2 * d[28] * d[31] * d[57] * d[59] + 2 * d[30] * d[32] * d[57] * d[59] + 2 * d[30] * d[31] * d[58] * d[59] - 2 * d[27] * d[32] * d[58] * d[59] + d[27] * d[28] * std::pow(d[59], 2) - std::pow(d[30], 2) * std::pow(d[59], 2) - d[2] * d[27] * d[28] * d[70] - d[1] * d[27] * d[29] * d[70] - d[0] * d[28] * d[29] * d[70] + 2 * d[3] * d[29] * d[30] * d[70] + d[2] * std::pow(d[30], 2) * d[70] + 2 * d[4] * d[28] * d[31] * d[70] - 2 * d[5] * d[30] * d[31] * d[70] + d[1] * std::pow(d[31], 2) * d[70] + 2 * d[5] * d[27] * d[32] * d[70] - 2 * d[4] * d[30] * d[32] * d[70] - 2 * d[3] * d[31] * d[32] * d[70] + d[0] * std::pow(d[32], 2) * d[70];
    coeffs[97] = 2 * d[6] * d[11] * d[37] * d[57] - 2 * d[8] * d[13] * d[37] * d[57] + 2 * d[2] * d[15] * d[37] * d[57] - 2 * d[4] * d[17] * d[37] * d[57] + 2 * d[6] * d[10] * d[38] * d[57] - 2 * d[7] * d[12] * d[38] * d[57] + 2 * d[1] * d[15] * d[38] * d[57] - 2 * d[3] * d[16] * d[38] * d[57] - 2 * d[7] * d[11] * d[39] * d[57] + 2 * d[8] * d[14] * d[39] * d[57] - 2 * d[2] * d[16] * d[39] * d[57] + 2 * d[5] * d[17] * d[39] * d[57] - 2 * d[8] * d[10] * d[40] * d[57] + 2 * d[7] * d[14] * d[40] * d[57] + 2 * d[5] * d[16] * d[40] * d[57] - 2 * d[1] * d[17] * d[40] * d[57] + 2 * d[8] * d[12] * d[41] * d[57] + 2 * d[7] * d[13] * d[41] * d[57] - 4 * d[6] * d[14] * d[41] * d[57] - 4 * d[5] * d[15] * d[41] * d[57] + 2 * d[4] * d[16] * d[41] * d[57] + 2 * d[3] * d[17] * d[41] * d[57] + 2 * d[2] * d[10] * d[42] * d[57] + 2 * d[1] * d[11] * d[42] * d[57] - 4 * d[5] * d[14] * d[42] * d[57] - 2 * d[3] * d[11] * d[43] * d[57] - 2 * d[2] * d[12] * d[43] * d[57] + 2 * d[5] * d[13] * d[43] * d[57] + 2 * d[4] * d[14] * d[43] * d[57] - 2 * d[4] * d[10] * d[44] * d[57] + 2 * d[5] * d[12] * d[44] * d[57] - 2 * d[1] * d[13] * d[44] * d[57] + 2 * d[3] * d[14] * d[44] * d[57] + d[11] * d[37] * std::pow(d[57], 2) + d[10] * d[38] * std::pow(d[57], 2) - 2 * d[14] * d[41] * std::pow(d[57], 2) + 2 * d[7] * d[11] * d[36] * d[58] - 2 * d[8] * d[14] * d[36] * d[58] + 2 * d[2] * d[16] * d[36] * d[58] - 2 * d[5] * d[17] * d[36] * d[58] + 2 * d[7] * d[9] * d[38] * d[58] - 2 * d[6] * d[12] * d[38] * d[58] - 2 * d[3] * d[15] * d[38] * d[58] + 2 * d[0] * d[16] * d[38] * d[58] - 2 * d[6] * d[11] * d[39] * d[58] + 2 * d[8] * d[13] * d[39] * d[58] - 2 * d[2] * d[15] * d[39] * d[58] + 2 * d[4] * d[17] * d[39] * d[58] + 2 * d[8] * d[12] * d[40] * d[58] - 4 * d[7] * d[13] * d[40] * d[58] + 2 * d[6] * d[14] * d[40] * d[58] + 2 * d[5] * d[15] * d[40] * d[58] - 4 * d[4] * d[16] * d[40] * d[58] + 2 * d[3] * d[17] * d[40] * d[58] - 2 * d[8] * d[9] * d[41] * d[58] + 2 * d[6] * d[13] * d[41] * d[58] + 2 * d[4] * d[15] * d[41] * d[58] - 2 * d[0] * d[17] * d[41] * d[58] - 2 * d[3] * d[11] * d[42] * d[58] - 2 * d[2] * d[12] * d[42] * d[58] + 2 * d[5] * d[13] * d[42] * d[58] + 2 * d[4] * d[14] * d[42] * d[58] + 2 * d[2] * d[9] * d[43] * d[58] + 2 * d[0] * d[11] * d[43] * d[58] - 4 * d[4] * d[13] * d[43] * d[58] - 2 * d[5] * d[9] * d[44] * d[58] + 2 * d[4] * d[12] * d[44] * d[58] + 2 * d[3] * d[13] * d[44] * d[58] - 2 * d[0] * d[14] * d[44] * d[58] - 2 * d[12] * d[38] * d[57] * d[58] - 2 * d[11] * d[39] * d[57] * d[58] + 2 * d[14] * d[40] * d[57] * d[58] + 2 * d[13] * d[41] * d[57] * d[58] + d[11] * d[36] * std::pow(d[58], 2) + d[9] * d[38] * std::pow(d[58], 2) - 2 * d[13] * d[40] * std::pow(d[58], 2) + 2 * d[8] * d[10] * d[36] * d[59] - 2 * d[7] * d[14] * d[36] * d[59] - 2 * d[5] * d[16] * d[36] * d[59] + 2 * d[1] * d[17] * d[36] * d[59] + 2 * d[8] * d[9] * d[37] * d[59] - 2 * d[6] * d[13] * d[37] * d[59] - 2 * d[4] * d[15] * d[37] * d[59] + 2 * d[0] * d[17] * d[37] * d[59] - 4 * d[8] * d[12] * d[39] * d[59] + 2 * d[7] * d[13] * d[39] * d[59] + 2 * d[6] * d[14] * d[39] * d[59] + 2 * d[5] * d[15] * d[39] * d[59] + 2 * d[4] * d[16] * d[39] * d[59] - 4 * d[3] * d[17] * d[39] * d[59] - 2 * d[6] * d[10] * d[40] * d[59] + 2 * d[7] * d[12] * d[40] * d[59] - 2 * d[1] * d[15] * d[40] * d[59] + 2 * d[3] * d[16] * d[40] * d[59] - 2 * d[7] * d[9] * d[41] * d[59] + 2 * d[6] * d[12] * d[41] * d[59] + 2 * d[3] * d[15] * d[41] * d[59] - 2 * d[0] * d[16] * d[41] * d[59] - 2 * d[4] * d[10] * d[42] * d[59] + 2 * d[5] * d[12] * d[42] * d[59] - 2 * d[1] * d[13] * d[42] * d[59] + 2 * d[3] * d[14] * d[42] * d[59] - 2 * d[5] * d[9] * d[43] * d[59] + 2 * d[4] * d[12] * d[43] * d[59] + 2 * d[3] * d[13] * d[43] * d[59] - 2 * d[0] * d[14] * d[43] * d[59] + 2 * d[1] * d[9] * d[44] * d[59] + 2 * d[0] * d[10] * d[44] * d[59] - 4 * d[3] * d[12] * d[44] * d[59] - 2 * d[13] * d[37] * d[57] * d[59] + 2 * d[14] * d[39] * d[57] * d[59] - 2 * d[10] * d[40] * d[57] * d[59] + 2 * d[12] * d[41] * d[57] * d[59] - 2 * d[14] * d[36] * d[58] * d[59] + 2 * d[13] * d[39] * d[58] * d[59] + 2 * d[12] * d[40] * d[58] * d[59] - 2 * d[9] * d[41] * d[58] * d[59] + d[10] * d[36] * std::pow(d[59], 2) + d[9] * d[37] * std::pow(d[59], 2) - 2 * d[12] * d[39] * std::pow(d[59], 2) - d[2] * d[10] * d[36] * d[70] - d[1] * d[11] * d[36] * d[70] + 2 * d[5] * d[14] * d[36] * d[70] - d[2] * d[9] * d[37] * d[70] - d[0] * d[11] * d[37] * d[70] + 2 * d[4] * d[13] * d[37] * d[70] - d[1] * d[9] * d[38] * d[70] - d[0] * d[10] * d[38] * d[70] + 2 * d[3] * d[12] * d[38] * d[70] + 2 * d[3] * d[11] * d[39] * d[70] + 2 * d[2] * d[12] * d[39] * d[70] - 2 * d[5] * d[13] * d[39] * d[70] - 2 * d[4] * d[14] * d[39] * d[70] + 2 * d[4] * d[10] * d[40] * d[70] - 2 * d[5] * d[12] * d[40] * d[70] + 2 * d[1] * d[13] * d[40] * d[70] - 2 * d[3] * d[14] * d[40] * d[70] + 2 * d[5] * d[9] * d[41] * d[70] - 2 * d[4] * d[12] * d[41] * d[70] - 2 * d[3] * d[13] * d[41] * d[70] + 2 * d[0] * d[14] * d[41] * d[70];
    coeffs[98] = 2 * d[6] * d[20] * d[37] * d[57] - 2 * d[8] * d[22] * d[37] * d[57] + 2 * d[2] * d[24] * d[37] * d[57] - 2 * d[4] * d[26] * d[37] * d[57] + 2 * d[6] * d[19] * d[38] * d[57] - 2 * d[7] * d[21] * d[38] * d[57] + 2 * d[1] * d[24] * d[38] * d[57] - 2 * d[3] * d[25] * d[38] * d[57] - 2 * d[7] * d[20] * d[39] * d[57] + 2 * d[8] * d[23] * d[39] * d[57] - 2 * d[2] * d[25] * d[39] * d[57] + 2 * d[5] * d[26] * d[39] * d[57] - 2 * d[8] * d[19] * d[40] * d[57] + 2 * d[7] * d[23] * d[40] * d[57] + 2 * d[5] * d[25] * d[40] * d[57] - 2 * d[1] * d[26] * d[40] * d[57] + 2 * d[8] * d[21] * d[41] * d[57] + 2 * d[7] * d[22] * d[41] * d[57] - 4 * d[6] * d[23] * d[41] * d[57] - 4 * d[5] * d[24] * d[41] * d[57] + 2 * d[4] * d[25] * d[41] * d[57] + 2 * d[3] * d[26] * d[41] * d[57] + 2 * d[2] * d[19] * d[42] * d[57] + 2 * d[1] * d[20] * d[42] * d[57] - 4 * d[5] * d[23] * d[42] * d[57] - 2 * d[3] * d[20] * d[43] * d[57] - 2 * d[2] * d[21] * d[43] * d[57] + 2 * d[5] * d[22] * d[43] * d[57] + 2 * d[4] * d[23] * d[43] * d[57] - 2 * d[4] * d[19] * d[44] * d[57] + 2 * d[5] * d[21] * d[44] * d[57] - 2 * d[1] * d[22] * d[44] * d[57] + 2 * d[3] * d[23] * d[44] * d[57] + d[20] * d[37] * std::pow(d[57], 2) + d[19] * d[38] * std::pow(d[57], 2) - 2 * d[23] * d[41] * std::pow(d[57], 2) + 2 * d[7] * d[20] * d[36] * d[58] - 2 * d[8] * d[23] * d[36] * d[58] + 2 * d[2] * d[25] * d[36] * d[58] - 2 * d[5] * d[26] * d[36] * d[58] + 2 * d[7] * d[18] * d[38] * d[58] - 2 * d[6] * d[21] * d[38] * d[58] - 2 * d[3] * d[24] * d[38] * d[58] + 2 * d[0] * d[25] * d[38] * d[58] - 2 * d[6] * d[20] * d[39] * d[58] + 2 * d[8] * d[22] * d[39] * d[58] - 2 * d[2] * d[24] * d[39] * d[58] + 2 * d[4] * d[26] * d[39] * d[58] + 2 * d[8] * d[21] * d[40] * d[58] - 4 * d[7] * d[22] * d[40] * d[58] + 2 * d[6] * d[23] * d[40] * d[58] + 2 * d[5] * d[24] * d[40] * d[58] - 4 * d[4] * d[25] * d[40] * d[58] + 2 * d[3] * d[26] * d[40] * d[58] - 2 * d[8] * d[18] * d[41] * d[58] + 2 * d[6] * d[22] * d[41] * d[58] + 2 * d[4] * d[24] * d[41] * d[58] - 2 * d[0] * d[26] * d[41] * d[58] - 2 * d[3] * d[20] * d[42] * d[58] - 2 * d[2] * d[21] * d[42] * d[58] + 2 * d[5] * d[22] * d[42] * d[58] + 2 * d[4] * d[23] * d[42] * d[58] + 2 * d[2] * d[18] * d[43] * d[58] + 2 * d[0] * d[20] * d[43] * d[58] - 4 * d[4] * d[22] * d[43] * d[58] - 2 * d[5] * d[18] * d[44] * d[58] + 2 * d[4] * d[21] * d[44] * d[58] + 2 * d[3] * d[22] * d[44] * d[58] - 2 * d[0] * d[23] * d[44] * d[58] - 2 * d[21] * d[38] * d[57] * d[58] - 2 * d[20] * d[39] * d[57] * d[58] + 2 * d[23] * d[40] * d[57] * d[58] + 2 * d[22] * d[41] * d[57] * d[58] + d[20] * d[36] * std::pow(d[58], 2) + d[18] * d[38] * std::pow(d[58], 2) - 2 * d[22] * d[40] * std::pow(d[58], 2) + 2 * d[8] * d[19] * d[36] * d[59] - 2 * d[7] * d[23] * d[36] * d[59] - 2 * d[5] * d[25] * d[36] * d[59] + 2 * d[1] * d[26] * d[36] * d[59] + 2 * d[8] * d[18] * d[37] * d[59] - 2 * d[6] * d[22] * d[37] * d[59] - 2 * d[4] * d[24] * d[37] * d[59] + 2 * d[0] * d[26] * d[37] * d[59] - 4 * d[8] * d[21] * d[39] * d[59] + 2 * d[7] * d[22] * d[39] * d[59] + 2 * d[6] * d[23] * d[39] * d[59] + 2 * d[5] * d[24] * d[39] * d[59] + 2 * d[4] * d[25] * d[39] * d[59] - 4 * d[3] * d[26] * d[39] * d[59] - 2 * d[6] * d[19] * d[40] * d[59] + 2 * d[7] * d[21] * d[40] * d[59] - 2 * d[1] * d[24] * d[40] * d[59] + 2 * d[3] * d[25] * d[40] * d[59] - 2 * d[7] * d[18] * d[41] * d[59] + 2 * d[6] * d[21] * d[41] * d[59] + 2 * d[3] * d[24] * d[41] * d[59] - 2 * d[0] * d[25] * d[41] * d[59] - 2 * d[4] * d[19] * d[42] * d[59] + 2 * d[5] * d[21] * d[42] * d[59] - 2 * d[1] * d[22] * d[42] * d[59] + 2 * d[3] * d[23] * d[42] * d[59] - 2 * d[5] * d[18] * d[43] * d[59] + 2 * d[4] * d[21] * d[43] * d[59] + 2 * d[3] * d[22] * d[43] * d[59] - 2 * d[0] * d[23] * d[43] * d[59] + 2 * d[1] * d[18] * d[44] * d[59] + 2 * d[0] * d[19] * d[44] * d[59] - 4 * d[3] * d[21] * d[44] * d[59] - 2 * d[22] * d[37] * d[57] * d[59] + 2 * d[23] * d[39] * d[57] * d[59] - 2 * d[19] * d[40] * d[57] * d[59] + 2 * d[21] * d[41] * d[57] * d[59] - 2 * d[23] * d[36] * d[58] * d[59] + 2 * d[22] * d[39] * d[58] * d[59] + 2 * d[21] * d[40] * d[58] * d[59] - 2 * d[18] * d[41] * d[58] * d[59] + d[19] * d[36] * std::pow(d[59], 2) + d[18] * d[37] * std::pow(d[59], 2) - 2 * d[21] * d[39] * std::pow(d[59], 2) - d[2] * d[19] * d[36] * d[70] - d[1] * d[20] * d[36] * d[70] + 2 * d[5] * d[23] * d[36] * d[70] - d[2] * d[18] * d[37] * d[70] - d[0] * d[20] * d[37] * d[70] + 2 * d[4] * d[22] * d[37] * d[70] - d[1] * d[18] * d[38] * d[70] - d[0] * d[19] * d[38] * d[70] + 2 * d[3] * d[21] * d[38] * d[70] + 2 * d[3] * d[20] * d[39] * d[70] + 2 * d[2] * d[21] * d[39] * d[70] - 2 * d[5] * d[22] * d[39] * d[70] - 2 * d[4] * d[23] * d[39] * d[70] + 2 * d[4] * d[19] * d[40] * d[70] - 2 * d[5] * d[21] * d[40] * d[70] + 2 * d[1] * d[22] * d[40] * d[70] - 2 * d[3] * d[23] * d[40] * d[70] + 2 * d[5] * d[18] * d[41] * d[70] - 2 * d[4] * d[21] * d[41] * d[70] - 2 * d[3] * d[22] * d[41] * d[70] + 2 * d[0] * d[23] * d[41] * d[70];
    coeffs[99] = 2 * d[6] * d[29] * d[37] * d[57] - 2 * d[8] * d[31] * d[37] * d[57] + 2 * d[2] * d[33] * d[37] * d[57] - 2 * d[4] * d[35] * d[37] * d[57] + 2 * d[6] * d[28] * d[38] * d[57] - 2 * d[7] * d[30] * d[38] * d[57] + 2 * d[1] * d[33] * d[38] * d[57] - 2 * d[3] * d[34] * d[38] * d[57] - 2 * d[7] * d[29] * d[39] * d[57] + 2 * d[8] * d[32] * d[39] * d[57] - 2 * d[2] * d[34] * d[39] * d[57] + 2 * d[5] * d[35] * d[39] * d[57] - 2 * d[8] * d[28] * d[40] * d[57] + 2 * d[7] * d[32] * d[40] * d[57] + 2 * d[5] * d[34] * d[40] * d[57] - 2 * d[1] * d[35] * d[40] * d[57] + 2 * d[8] * d[30] * d[41] * d[57] + 2 * d[7] * d[31] * d[41] * d[57] - 4 * d[6] * d[32] * d[41] * d[57] - 4 * d[5] * d[33] * d[41] * d[57] + 2 * d[4] * d[34] * d[41] * d[57] + 2 * d[3] * d[35] * d[41] * d[57] + 2 * d[2] * d[28] * d[42] * d[57] + 2 * d[1] * d[29] * d[42] * d[57] - 4 * d[5] * d[32] * d[42] * d[57] - 2 * d[3] * d[29] * d[43] * d[57] - 2 * d[2] * d[30] * d[43] * d[57] + 2 * d[5] * d[31] * d[43] * d[57] + 2 * d[4] * d[32] * d[43] * d[57] - 2 * d[4] * d[28] * d[44] * d[57] + 2 * d[5] * d[30] * d[44] * d[57] - 2 * d[1] * d[31] * d[44] * d[57] + 2 * d[3] * d[32] * d[44] * d[57] + d[29] * d[37] * std::pow(d[57], 2) + d[28] * d[38] * std::pow(d[57], 2) - 2 * d[32] * d[41] * std::pow(d[57], 2) + 2 * d[7] * d[29] * d[36] * d[58] - 2 * d[8] * d[32] * d[36] * d[58] + 2 * d[2] * d[34] * d[36] * d[58] - 2 * d[5] * d[35] * d[36] * d[58] + 2 * d[7] * d[27] * d[38] * d[58] - 2 * d[6] * d[30] * d[38] * d[58] - 2 * d[3] * d[33] * d[38] * d[58] + 2 * d[0] * d[34] * d[38] * d[58] - 2 * d[6] * d[29] * d[39] * d[58] + 2 * d[8] * d[31] * d[39] * d[58] - 2 * d[2] * d[33] * d[39] * d[58] + 2 * d[4] * d[35] * d[39] * d[58] + 2 * d[8] * d[30] * d[40] * d[58] - 4 * d[7] * d[31] * d[40] * d[58] + 2 * d[6] * d[32] * d[40] * d[58] + 2 * d[5] * d[33] * d[40] * d[58] - 4 * d[4] * d[34] * d[40] * d[58] + 2 * d[3] * d[35] * d[40] * d[58] - 2 * d[8] * d[27] * d[41] * d[58] + 2 * d[6] * d[31] * d[41] * d[58] + 2 * d[4] * d[33] * d[41] * d[58] - 2 * d[0] * d[35] * d[41] * d[58] - 2 * d[3] * d[29] * d[42] * d[58] - 2 * d[2] * d[30] * d[42] * d[58] + 2 * d[5] * d[31] * d[42] * d[58] + 2 * d[4] * d[32] * d[42] * d[58] + 2 * d[2] * d[27] * d[43] * d[58] + 2 * d[0] * d[29] * d[43] * d[58] - 4 * d[4] * d[31] * d[43] * d[58] - 2 * d[5] * d[27] * d[44] * d[58] + 2 * d[4] * d[30] * d[44] * d[58] + 2 * d[3] * d[31] * d[44] * d[58] - 2 * d[0] * d[32] * d[44] * d[58] - 2 * d[30] * d[38] * d[57] * d[58] - 2 * d[29] * d[39] * d[57] * d[58] + 2 * d[32] * d[40] * d[57] * d[58] + 2 * d[31] * d[41] * d[57] * d[58] + d[29] * d[36] * std::pow(d[58], 2) + d[27] * d[38] * std::pow(d[58], 2) - 2 * d[31] * d[40] * std::pow(d[58], 2) + 2 * d[8] * d[28] * d[36] * d[59] - 2 * d[7] * d[32] * d[36] * d[59] - 2 * d[5] * d[34] * d[36] * d[59] + 2 * d[1] * d[35] * d[36] * d[59] + 2 * d[8] * d[27] * d[37] * d[59] - 2 * d[6] * d[31] * d[37] * d[59] - 2 * d[4] * d[33] * d[37] * d[59] + 2 * d[0] * d[35] * d[37] * d[59] - 4 * d[8] * d[30] * d[39] * d[59] + 2 * d[7] * d[31] * d[39] * d[59] + 2 * d[6] * d[32] * d[39] * d[59] + 2 * d[5] * d[33] * d[39] * d[59] + 2 * d[4] * d[34] * d[39] * d[59] - 4 * d[3] * d[35] * d[39] * d[59] - 2 * d[6] * d[28] * d[40] * d[59] + 2 * d[7] * d[30] * d[40] * d[59] - 2 * d[1] * d[33] * d[40] * d[59] + 2 * d[3] * d[34] * d[40] * d[59] - 2 * d[7] * d[27] * d[41] * d[59] + 2 * d[6] * d[30] * d[41] * d[59] + 2 * d[3] * d[33] * d[41] * d[59] - 2 * d[0] * d[34] * d[41] * d[59] - 2 * d[4] * d[28] * d[42] * d[59] + 2 * d[5] * d[30] * d[42] * d[59] - 2 * d[1] * d[31] * d[42] * d[59] + 2 * d[3] * d[32] * d[42] * d[59] - 2 * d[5] * d[27] * d[43] * d[59] + 2 * d[4] * d[30] * d[43] * d[59] + 2 * d[3] * d[31] * d[43] * d[59] - 2 * d[0] * d[32] * d[43] * d[59] + 2 * d[1] * d[27] * d[44] * d[59] + 2 * d[0] * d[28] * d[44] * d[59] - 4 * d[3] * d[30] * d[44] * d[59] - 2 * d[31] * d[37] * d[57] * d[59] + 2 * d[32] * d[39] * d[57] * d[59] - 2 * d[28] * d[40] * d[57] * d[59] + 2 * d[30] * d[41] * d[57] * d[59] - 2 * d[32] * d[36] * d[58] * d[59] + 2 * d[31] * d[39] * d[58] * d[59] + 2 * d[30] * d[40] * d[58] * d[59] - 2 * d[27] * d[41] * d[58] * d[59] + d[28] * d[36] * std::pow(d[59], 2) + d[27] * d[37] * std::pow(d[59], 2) - 2 * d[30] * d[39] * std::pow(d[59], 2) - d[2] * d[28] * d[36] * d[70] - d[1] * d[29] * d[36] * d[70] + 2 * d[5] * d[32] * d[36] * d[70] - d[2] * d[27] * d[37] * d[70] - d[0] * d[29] * d[37] * d[70] + 2 * d[4] * d[31] * d[37] * d[70] - d[1] * d[27] * d[38] * d[70] - d[0] * d[28] * d[38] * d[70] + 2 * d[3] * d[30] * d[38] * d[70] + 2 * d[3] * d[29] * d[39] * d[70] + 2 * d[2] * d[30] * d[39] * d[70] - 2 * d[5] * d[31] * d[39] * d[70] - 2 * d[4] * d[32] * d[39] * d[70] + 2 * d[4] * d[28] * d[40] * d[70] - 2 * d[5] * d[30] * d[40] * d[70] + 2 * d[1] * d[31] * d[40] * d[70] - 2 * d[3] * d[32] * d[40] * d[70] + 2 * d[5] * d[27] * d[41] * d[70] - 2 * d[4] * d[30] * d[41] * d[70] - 2 * d[3] * d[31] * d[41] * d[70] + 2 * d[0] * d[32] * d[41] * d[70];
    coeffs[100] = 2 * d[6] * d[37] * d[38] * d[57] - 2 * d[7] * d[38] * d[39] * d[57] - 2 * d[8] * d[37] * d[40] * d[57] + 2 * d[8] * d[39] * d[41] * d[57] + 2 * d[7] * d[40] * d[41] * d[57] - 2 * d[6] * std::pow(d[41], 2) * d[57] + 2 * d[2] * d[37] * d[42] * d[57] + 2 * d[1] * d[38] * d[42] * d[57] - 4 * d[5] * d[41] * d[42] * d[57] - 2 * d[3] * d[38] * d[43] * d[57] - 2 * d[2] * d[39] * d[43] * d[57] + 2 * d[5] * d[40] * d[43] * d[57] + 2 * d[4] * d[41] * d[43] * d[57] - 2 * d[4] * d[37] * d[44] * d[57] + 2 * d[5] * d[39] * d[44] * d[57] - 2 * d[1] * d[40] * d[44] * d[57] + 2 * d[3] * d[41] * d[44] * d[57] + d[37] * d[38] * std::pow(d[57], 2) - std::pow(d[41], 2) * std::pow(d[57], 2) + 2 * d[7] * d[36] * d[38] * d[58] - 2 * d[6] * d[38] * d[39] * d[58] + 2 * d[8] * d[39] * d[40] * d[58] - 2 * d[7] * std::pow(d[40], 2) * d[58] - 2 * d[8] * d[36] * d[41] * d[58] + 2 * d[6] * d[40] * d[41] * d[58] - 2 * d[3] * d[38] * d[42] * d[58] - 2 * d[2] * d[39] * d[42] * d[58] + 2 * d[5] * d[40] * d[42] * d[58] + 2 * d[4] * d[41] * d[42] * d[58] + 2 * d[2] * d[36] * d[43] * d[58] + 2 * d[0] * d[38] * d[43] * d[58] - 4 * d[4] * d[40] * d[43] * d[58] - 2 * d[5] * d[36] * d[44] * d[58] + 2 * d[4] * d[39] * d[44] * d[58] + 2 * d[3] * d[40] * d[44] * d[58] - 2 * d[0] * d[41] * d[44] * d[58] - 2 * d[38] * d[39] * d[57] * d[58] + 2 * d[40] * d[41] * d[57] * d[58] + d[36] * d[38] * std::pow(d[58], 2) - std::pow(d[40], 2) * std::pow(d[58], 2) + 2 * d[8] * d[36] * d[37] * d[59] - 2 * d[8] * std::pow(d[39], 2) * d[59] - 2 * d[6] * d[37] * d[40] * d[59] + 2 * d[7] * d[39] * d[40] * d[59] - 2 * d[7] * d[36] * d[41] * d[59] + 2 * d[6] * d[39] * d[41] * d[59] - 2 * d[4] * d[37] * d[42] * d[59] + 2 * d[5] * d[39] * d[42] * d[59] - 2 * d[1] * d[40] * d[42] * d[59] + 2 * d[3] * d[41] * d[42] * d[59] - 2 * d[5] * d[36] * d[43] * d[59] + 2 * d[4] * d[39] * d[43] * d[59] + 2 * d[3] * d[40] * d[43] * d[59] - 2 * d[0] * d[41] * d[43] * d[59] + 2 * d[1] * d[36] * d[44] * d[59] + 2 * d[0] * d[37] * d[44] * d[59] - 4 * d[3] * d[39] * d[44] * d[59] - 2 * d[37] * d[40] * d[57] * d[59] + 2 * d[39] * d[41] * d[57] * d[59] + 2 * d[39] * d[40] * d[58] * d[59] - 2 * d[36] * d[41] * d[58] * d[59] + d[36] * d[37] * std::pow(d[59], 2) - std::pow(d[39], 2) * std::pow(d[59], 2) - d[2] * d[36] * d[37] * d[70] - d[1] * d[36] * d[38] * d[70] - d[0] * d[37] * d[38] * d[70] + 2 * d[3] * d[38] * d[39] * d[70] + d[2] * std::pow(d[39], 2) * d[70] + 2 * d[4] * d[37] * d[40] * d[70] - 2 * d[5] * d[39] * d[40] * d[70] + d[1] * std::pow(d[40], 2) * d[70] + 2 * d[5] * d[36] * d[41] * d[70] - 2 * d[4] * d[39] * d[41] * d[70] - 2 * d[3] * d[40] * d[41] * d[70] + d[0] * std::pow(d[41], 2) * d[70];
    coeffs[101] = 2 * d[6] * d[11] * d[46] * d[57] - 2 * d[8] * d[13] * d[46] * d[57] + 2 * d[2] * d[15] * d[46] * d[57] - 2 * d[4] * d[17] * d[46] * d[57] + 2 * d[6] * d[10] * d[47] * d[57] - 2 * d[7] * d[12] * d[47] * d[57] + 2 * d[1] * d[15] * d[47] * d[57] - 2 * d[3] * d[16] * d[47] * d[57] - 2 * d[7] * d[11] * d[48] * d[57] + 2 * d[8] * d[14] * d[48] * d[57] - 2 * d[2] * d[16] * d[48] * d[57] + 2 * d[5] * d[17] * d[48] * d[57] - 2 * d[8] * d[10] * d[49] * d[57] + 2 * d[7] * d[14] * d[49] * d[57] + 2 * d[5] * d[16] * d[49] * d[57] - 2 * d[1] * d[17] * d[49] * d[57] + 2 * d[8] * d[12] * d[50] * d[57] + 2 * d[7] * d[13] * d[50] * d[57] - 4 * d[6] * d[14] * d[50] * d[57] - 4 * d[5] * d[15] * d[50] * d[57] + 2 * d[4] * d[16] * d[50] * d[57] + 2 * d[3] * d[17] * d[50] * d[57] + 2 * d[2] * d[10] * d[51] * d[57] + 2 * d[1] * d[11] * d[51] * d[57] - 4 * d[5] * d[14] * d[51] * d[57] - 2 * d[3] * d[11] * d[52] * d[57] - 2 * d[2] * d[12] * d[52] * d[57] + 2 * d[5] * d[13] * d[52] * d[57] + 2 * d[4] * d[14] * d[52] * d[57] - 2 * d[4] * d[10] * d[53] * d[57] + 2 * d[5] * d[12] * d[53] * d[57] - 2 * d[1] * d[13] * d[53] * d[57] + 2 * d[3] * d[14] * d[53] * d[57] + d[11] * d[46] * std::pow(d[57], 2) + d[10] * d[47] * std::pow(d[57], 2) - 2 * d[14] * d[50] * std::pow(d[57], 2) + 2 * d[7] * d[11] * d[45] * d[58] - 2 * d[8] * d[14] * d[45] * d[58] + 2 * d[2] * d[16] * d[45] * d[58] - 2 * d[5] * d[17] * d[45] * d[58] + 2 * d[7] * d[9] * d[47] * d[58] - 2 * d[6] * d[12] * d[47] * d[58] - 2 * d[3] * d[15] * d[47] * d[58] + 2 * d[0] * d[16] * d[47] * d[58] - 2 * d[6] * d[11] * d[48] * d[58] + 2 * d[8] * d[13] * d[48] * d[58] - 2 * d[2] * d[15] * d[48] * d[58] + 2 * d[4] * d[17] * d[48] * d[58] + 2 * d[8] * d[12] * d[49] * d[58] - 4 * d[7] * d[13] * d[49] * d[58] + 2 * d[6] * d[14] * d[49] * d[58] + 2 * d[5] * d[15] * d[49] * d[58] - 4 * d[4] * d[16] * d[49] * d[58] + 2 * d[3] * d[17] * d[49] * d[58] - 2 * d[8] * d[9] * d[50] * d[58] + 2 * d[6] * d[13] * d[50] * d[58] + 2 * d[4] * d[15] * d[50] * d[58] - 2 * d[0] * d[17] * d[50] * d[58] - 2 * d[3] * d[11] * d[51] * d[58] - 2 * d[2] * d[12] * d[51] * d[58] + 2 * d[5] * d[13] * d[51] * d[58] + 2 * d[4] * d[14] * d[51] * d[58] + 2 * d[2] * d[9] * d[52] * d[58] + 2 * d[0] * d[11] * d[52] * d[58] - 4 * d[4] * d[13] * d[52] * d[58] - 2 * d[5] * d[9] * d[53] * d[58] + 2 * d[4] * d[12] * d[53] * d[58] + 2 * d[3] * d[13] * d[53] * d[58] - 2 * d[0] * d[14] * d[53] * d[58] - 2 * d[12] * d[47] * d[57] * d[58] - 2 * d[11] * d[48] * d[57] * d[58] + 2 * d[14] * d[49] * d[57] * d[58] + 2 * d[13] * d[50] * d[57] * d[58] + d[11] * d[45] * std::pow(d[58], 2) + d[9] * d[47] * std::pow(d[58], 2) - 2 * d[13] * d[49] * std::pow(d[58], 2) + 2 * d[8] * d[10] * d[45] * d[59] - 2 * d[7] * d[14] * d[45] * d[59] - 2 * d[5] * d[16] * d[45] * d[59] + 2 * d[1] * d[17] * d[45] * d[59] + 2 * d[8] * d[9] * d[46] * d[59] - 2 * d[6] * d[13] * d[46] * d[59] - 2 * d[4] * d[15] * d[46] * d[59] + 2 * d[0] * d[17] * d[46] * d[59] - 4 * d[8] * d[12] * d[48] * d[59] + 2 * d[7] * d[13] * d[48] * d[59] + 2 * d[6] * d[14] * d[48] * d[59] + 2 * d[5] * d[15] * d[48] * d[59] + 2 * d[4] * d[16] * d[48] * d[59] - 4 * d[3] * d[17] * d[48] * d[59] - 2 * d[6] * d[10] * d[49] * d[59] + 2 * d[7] * d[12] * d[49] * d[59] - 2 * d[1] * d[15] * d[49] * d[59] + 2 * d[3] * d[16] * d[49] * d[59] - 2 * d[7] * d[9] * d[50] * d[59] + 2 * d[6] * d[12] * d[50] * d[59] + 2 * d[3] * d[15] * d[50] * d[59] - 2 * d[0] * d[16] * d[50] * d[59] - 2 * d[4] * d[10] * d[51] * d[59] + 2 * d[5] * d[12] * d[51] * d[59] - 2 * d[1] * d[13] * d[51] * d[59] + 2 * d[3] * d[14] * d[51] * d[59] - 2 * d[5] * d[9] * d[52] * d[59] + 2 * d[4] * d[12] * d[52] * d[59] + 2 * d[3] * d[13] * d[52] * d[59] - 2 * d[0] * d[14] * d[52] * d[59] + 2 * d[1] * d[9] * d[53] * d[59] + 2 * d[0] * d[10] * d[53] * d[59] - 4 * d[3] * d[12] * d[53] * d[59] - 2 * d[13] * d[46] * d[57] * d[59] + 2 * d[14] * d[48] * d[57] * d[59] - 2 * d[10] * d[49] * d[57] * d[59] + 2 * d[12] * d[50] * d[57] * d[59] - 2 * d[14] * d[45] * d[58] * d[59] + 2 * d[13] * d[48] * d[58] * d[59] + 2 * d[12] * d[49] * d[58] * d[59] - 2 * d[9] * d[50] * d[58] * d[59] + d[10] * d[45] * std::pow(d[59], 2) + d[9] * d[46] * std::pow(d[59], 2) - 2 * d[12] * d[48] * std::pow(d[59], 2) - d[2] * d[10] * d[45] * d[70] - d[1] * d[11] * d[45] * d[70] + 2 * d[5] * d[14] * d[45] * d[70] - d[2] * d[9] * d[46] * d[70] - d[0] * d[11] * d[46] * d[70] + 2 * d[4] * d[13] * d[46] * d[70] - d[1] * d[9] * d[47] * d[70] - d[0] * d[10] * d[47] * d[70] + 2 * d[3] * d[12] * d[47] * d[70] + 2 * d[3] * d[11] * d[48] * d[70] + 2 * d[2] * d[12] * d[48] * d[70] - 2 * d[5] * d[13] * d[48] * d[70] - 2 * d[4] * d[14] * d[48] * d[70] + 2 * d[4] * d[10] * d[49] * d[70] - 2 * d[5] * d[12] * d[49] * d[70] + 2 * d[1] * d[13] * d[49] * d[70] - 2 * d[3] * d[14] * d[49] * d[70] + 2 * d[5] * d[9] * d[50] * d[70] - 2 * d[4] * d[12] * d[50] * d[70] - 2 * d[3] * d[13] * d[50] * d[70] + 2 * d[0] * d[14] * d[50] * d[70];
    coeffs[102] = 2 * d[6] * d[20] * d[46] * d[57] - 2 * d[8] * d[22] * d[46] * d[57] + 2 * d[2] * d[24] * d[46] * d[57] - 2 * d[4] * d[26] * d[46] * d[57] + 2 * d[6] * d[19] * d[47] * d[57] - 2 * d[7] * d[21] * d[47] * d[57] + 2 * d[1] * d[24] * d[47] * d[57] - 2 * d[3] * d[25] * d[47] * d[57] - 2 * d[7] * d[20] * d[48] * d[57] + 2 * d[8] * d[23] * d[48] * d[57] - 2 * d[2] * d[25] * d[48] * d[57] + 2 * d[5] * d[26] * d[48] * d[57] - 2 * d[8] * d[19] * d[49] * d[57] + 2 * d[7] * d[23] * d[49] * d[57] + 2 * d[5] * d[25] * d[49] * d[57] - 2 * d[1] * d[26] * d[49] * d[57] + 2 * d[8] * d[21] * d[50] * d[57] + 2 * d[7] * d[22] * d[50] * d[57] - 4 * d[6] * d[23] * d[50] * d[57] - 4 * d[5] * d[24] * d[50] * d[57] + 2 * d[4] * d[25] * d[50] * d[57] + 2 * d[3] * d[26] * d[50] * d[57] + 2 * d[2] * d[19] * d[51] * d[57] + 2 * d[1] * d[20] * d[51] * d[57] - 4 * d[5] * d[23] * d[51] * d[57] - 2 * d[3] * d[20] * d[52] * d[57] - 2 * d[2] * d[21] * d[52] * d[57] + 2 * d[5] * d[22] * d[52] * d[57] + 2 * d[4] * d[23] * d[52] * d[57] - 2 * d[4] * d[19] * d[53] * d[57] + 2 * d[5] * d[21] * d[53] * d[57] - 2 * d[1] * d[22] * d[53] * d[57] + 2 * d[3] * d[23] * d[53] * d[57] + d[20] * d[46] * std::pow(d[57], 2) + d[19] * d[47] * std::pow(d[57], 2) - 2 * d[23] * d[50] * std::pow(d[57], 2) + 2 * d[7] * d[20] * d[45] * d[58] - 2 * d[8] * d[23] * d[45] * d[58] + 2 * d[2] * d[25] * d[45] * d[58] - 2 * d[5] * d[26] * d[45] * d[58] + 2 * d[7] * d[18] * d[47] * d[58] - 2 * d[6] * d[21] * d[47] * d[58] - 2 * d[3] * d[24] * d[47] * d[58] + 2 * d[0] * d[25] * d[47] * d[58] - 2 * d[6] * d[20] * d[48] * d[58] + 2 * d[8] * d[22] * d[48] * d[58] - 2 * d[2] * d[24] * d[48] * d[58] + 2 * d[4] * d[26] * d[48] * d[58] + 2 * d[8] * d[21] * d[49] * d[58] - 4 * d[7] * d[22] * d[49] * d[58] + 2 * d[6] * d[23] * d[49] * d[58] + 2 * d[5] * d[24] * d[49] * d[58] - 4 * d[4] * d[25] * d[49] * d[58] + 2 * d[3] * d[26] * d[49] * d[58] - 2 * d[8] * d[18] * d[50] * d[58] + 2 * d[6] * d[22] * d[50] * d[58] + 2 * d[4] * d[24] * d[50] * d[58] - 2 * d[0] * d[26] * d[50] * d[58] - 2 * d[3] * d[20] * d[51] * d[58] - 2 * d[2] * d[21] * d[51] * d[58] + 2 * d[5] * d[22] * d[51] * d[58] + 2 * d[4] * d[23] * d[51] * d[58] + 2 * d[2] * d[18] * d[52] * d[58] + 2 * d[0] * d[20] * d[52] * d[58] - 4 * d[4] * d[22] * d[52] * d[58] - 2 * d[5] * d[18] * d[53] * d[58] + 2 * d[4] * d[21] * d[53] * d[58] + 2 * d[3] * d[22] * d[53] * d[58] - 2 * d[0] * d[23] * d[53] * d[58] - 2 * d[21] * d[47] * d[57] * d[58] - 2 * d[20] * d[48] * d[57] * d[58] + 2 * d[23] * d[49] * d[57] * d[58] + 2 * d[22] * d[50] * d[57] * d[58] + d[20] * d[45] * std::pow(d[58], 2) + d[18] * d[47] * std::pow(d[58], 2) - 2 * d[22] * d[49] * std::pow(d[58], 2) + 2 * d[8] * d[19] * d[45] * d[59] - 2 * d[7] * d[23] * d[45] * d[59] - 2 * d[5] * d[25] * d[45] * d[59] + 2 * d[1] * d[26] * d[45] * d[59] + 2 * d[8] * d[18] * d[46] * d[59] - 2 * d[6] * d[22] * d[46] * d[59] - 2 * d[4] * d[24] * d[46] * d[59] + 2 * d[0] * d[26] * d[46] * d[59] - 4 * d[8] * d[21] * d[48] * d[59] + 2 * d[7] * d[22] * d[48] * d[59] + 2 * d[6] * d[23] * d[48] * d[59] + 2 * d[5] * d[24] * d[48] * d[59] + 2 * d[4] * d[25] * d[48] * d[59] - 4 * d[3] * d[26] * d[48] * d[59] - 2 * d[6] * d[19] * d[49] * d[59] + 2 * d[7] * d[21] * d[49] * d[59] - 2 * d[1] * d[24] * d[49] * d[59] + 2 * d[3] * d[25] * d[49] * d[59] - 2 * d[7] * d[18] * d[50] * d[59] + 2 * d[6] * d[21] * d[50] * d[59] + 2 * d[3] * d[24] * d[50] * d[59] - 2 * d[0] * d[25] * d[50] * d[59] - 2 * d[4] * d[19] * d[51] * d[59] + 2 * d[5] * d[21] * d[51] * d[59] - 2 * d[1] * d[22] * d[51] * d[59] + 2 * d[3] * d[23] * d[51] * d[59] - 2 * d[5] * d[18] * d[52] * d[59] + 2 * d[4] * d[21] * d[52] * d[59] + 2 * d[3] * d[22] * d[52] * d[59] - 2 * d[0] * d[23] * d[52] * d[59] + 2 * d[1] * d[18] * d[53] * d[59] + 2 * d[0] * d[19] * d[53] * d[59] - 4 * d[3] * d[21] * d[53] * d[59] - 2 * d[22] * d[46] * d[57] * d[59] + 2 * d[23] * d[48] * d[57] * d[59] - 2 * d[19] * d[49] * d[57] * d[59] + 2 * d[21] * d[50] * d[57] * d[59] - 2 * d[23] * d[45] * d[58] * d[59] + 2 * d[22] * d[48] * d[58] * d[59] + 2 * d[21] * d[49] * d[58] * d[59] - 2 * d[18] * d[50] * d[58] * d[59] + d[19] * d[45] * std::pow(d[59], 2) + d[18] * d[46] * std::pow(d[59], 2) - 2 * d[21] * d[48] * std::pow(d[59], 2) - d[2] * d[19] * d[45] * d[70] - d[1] * d[20] * d[45] * d[70] + 2 * d[5] * d[23] * d[45] * d[70] - d[2] * d[18] * d[46] * d[70] - d[0] * d[20] * d[46] * d[70] + 2 * d[4] * d[22] * d[46] * d[70] - d[1] * d[18] * d[47] * d[70] - d[0] * d[19] * d[47] * d[70] + 2 * d[3] * d[21] * d[47] * d[70] + 2 * d[3] * d[20] * d[48] * d[70] + 2 * d[2] * d[21] * d[48] * d[70] - 2 * d[5] * d[22] * d[48] * d[70] - 2 * d[4] * d[23] * d[48] * d[70] + 2 * d[4] * d[19] * d[49] * d[70] - 2 * d[5] * d[21] * d[49] * d[70] + 2 * d[1] * d[22] * d[49] * d[70] - 2 * d[3] * d[23] * d[49] * d[70] + 2 * d[5] * d[18] * d[50] * d[70] - 2 * d[4] * d[21] * d[50] * d[70] - 2 * d[3] * d[22] * d[50] * d[70] + 2 * d[0] * d[23] * d[50] * d[70];
    coeffs[103] = 2 * d[6] * d[29] * d[46] * d[57] - 2 * d[8] * d[31] * d[46] * d[57] + 2 * d[2] * d[33] * d[46] * d[57] - 2 * d[4] * d[35] * d[46] * d[57] + 2 * d[6] * d[28] * d[47] * d[57] - 2 * d[7] * d[30] * d[47] * d[57] + 2 * d[1] * d[33] * d[47] * d[57] - 2 * d[3] * d[34] * d[47] * d[57] - 2 * d[7] * d[29] * d[48] * d[57] + 2 * d[8] * d[32] * d[48] * d[57] - 2 * d[2] * d[34] * d[48] * d[57] + 2 * d[5] * d[35] * d[48] * d[57] - 2 * d[8] * d[28] * d[49] * d[57] + 2 * d[7] * d[32] * d[49] * d[57] + 2 * d[5] * d[34] * d[49] * d[57] - 2 * d[1] * d[35] * d[49] * d[57] + 2 * d[8] * d[30] * d[50] * d[57] + 2 * d[7] * d[31] * d[50] * d[57] - 4 * d[6] * d[32] * d[50] * d[57] - 4 * d[5] * d[33] * d[50] * d[57] + 2 * d[4] * d[34] * d[50] * d[57] + 2 * d[3] * d[35] * d[50] * d[57] + 2 * d[2] * d[28] * d[51] * d[57] + 2 * d[1] * d[29] * d[51] * d[57] - 4 * d[5] * d[32] * d[51] * d[57] - 2 * d[3] * d[29] * d[52] * d[57] - 2 * d[2] * d[30] * d[52] * d[57] + 2 * d[5] * d[31] * d[52] * d[57] + 2 * d[4] * d[32] * d[52] * d[57] - 2 * d[4] * d[28] * d[53] * d[57] + 2 * d[5] * d[30] * d[53] * d[57] - 2 * d[1] * d[31] * d[53] * d[57] + 2 * d[3] * d[32] * d[53] * d[57] + d[29] * d[46] * std::pow(d[57], 2) + d[28] * d[47] * std::pow(d[57], 2) - 2 * d[32] * d[50] * std::pow(d[57], 2) + 2 * d[7] * d[29] * d[45] * d[58] - 2 * d[8] * d[32] * d[45] * d[58] + 2 * d[2] * d[34] * d[45] * d[58] - 2 * d[5] * d[35] * d[45] * d[58] + 2 * d[7] * d[27] * d[47] * d[58] - 2 * d[6] * d[30] * d[47] * d[58] - 2 * d[3] * d[33] * d[47] * d[58] + 2 * d[0] * d[34] * d[47] * d[58] - 2 * d[6] * d[29] * d[48] * d[58] + 2 * d[8] * d[31] * d[48] * d[58] - 2 * d[2] * d[33] * d[48] * d[58] + 2 * d[4] * d[35] * d[48] * d[58] + 2 * d[8] * d[30] * d[49] * d[58] - 4 * d[7] * d[31] * d[49] * d[58] + 2 * d[6] * d[32] * d[49] * d[58] + 2 * d[5] * d[33] * d[49] * d[58] - 4 * d[4] * d[34] * d[49] * d[58] + 2 * d[3] * d[35] * d[49] * d[58] - 2 * d[8] * d[27] * d[50] * d[58] + 2 * d[6] * d[31] * d[50] * d[58] + 2 * d[4] * d[33] * d[50] * d[58] - 2 * d[0] * d[35] * d[50] * d[58] - 2 * d[3] * d[29] * d[51] * d[58] - 2 * d[2] * d[30] * d[51] * d[58] + 2 * d[5] * d[31] * d[51] * d[58] + 2 * d[4] * d[32] * d[51] * d[58] + 2 * d[2] * d[27] * d[52] * d[58] + 2 * d[0] * d[29] * d[52] * d[58] - 4 * d[4] * d[31] * d[52] * d[58] - 2 * d[5] * d[27] * d[53] * d[58] + 2 * d[4] * d[30] * d[53] * d[58] + 2 * d[3] * d[31] * d[53] * d[58] - 2 * d[0] * d[32] * d[53] * d[58] - 2 * d[30] * d[47] * d[57] * d[58] - 2 * d[29] * d[48] * d[57] * d[58] + 2 * d[32] * d[49] * d[57] * d[58] + 2 * d[31] * d[50] * d[57] * d[58] + d[29] * d[45] * std::pow(d[58], 2) + d[27] * d[47] * std::pow(d[58], 2) - 2 * d[31] * d[49] * std::pow(d[58], 2) + 2 * d[8] * d[28] * d[45] * d[59] - 2 * d[7] * d[32] * d[45] * d[59] - 2 * d[5] * d[34] * d[45] * d[59] + 2 * d[1] * d[35] * d[45] * d[59] + 2 * d[8] * d[27] * d[46] * d[59] - 2 * d[6] * d[31] * d[46] * d[59] - 2 * d[4] * d[33] * d[46] * d[59] + 2 * d[0] * d[35] * d[46] * d[59] - 4 * d[8] * d[30] * d[48] * d[59] + 2 * d[7] * d[31] * d[48] * d[59] + 2 * d[6] * d[32] * d[48] * d[59] + 2 * d[5] * d[33] * d[48] * d[59] + 2 * d[4] * d[34] * d[48] * d[59] - 4 * d[3] * d[35] * d[48] * d[59] - 2 * d[6] * d[28] * d[49] * d[59] + 2 * d[7] * d[30] * d[49] * d[59] - 2 * d[1] * d[33] * d[49] * d[59] + 2 * d[3] * d[34] * d[49] * d[59] - 2 * d[7] * d[27] * d[50] * d[59] + 2 * d[6] * d[30] * d[50] * d[59] + 2 * d[3] * d[33] * d[50] * d[59] - 2 * d[0] * d[34] * d[50] * d[59] - 2 * d[4] * d[28] * d[51] * d[59] + 2 * d[5] * d[30] * d[51] * d[59] - 2 * d[1] * d[31] * d[51] * d[59] + 2 * d[3] * d[32] * d[51] * d[59] - 2 * d[5] * d[27] * d[52] * d[59] + 2 * d[4] * d[30] * d[52] * d[59] + 2 * d[3] * d[31] * d[52] * d[59] - 2 * d[0] * d[32] * d[52] * d[59] + 2 * d[1] * d[27] * d[53] * d[59] + 2 * d[0] * d[28] * d[53] * d[59] - 4 * d[3] * d[30] * d[53] * d[59] - 2 * d[31] * d[46] * d[57] * d[59] + 2 * d[32] * d[48] * d[57] * d[59] - 2 * d[28] * d[49] * d[57] * d[59] + 2 * d[30] * d[50] * d[57] * d[59] - 2 * d[32] * d[45] * d[58] * d[59] + 2 * d[31] * d[48] * d[58] * d[59] + 2 * d[30] * d[49] * d[58] * d[59] - 2 * d[27] * d[50] * d[58] * d[59] + d[28] * d[45] * std::pow(d[59], 2) + d[27] * d[46] * std::pow(d[59], 2) - 2 * d[30] * d[48] * std::pow(d[59], 2) - d[2] * d[28] * d[45] * d[70] - d[1] * d[29] * d[45] * d[70] + 2 * d[5] * d[32] * d[45] * d[70] - d[2] * d[27] * d[46] * d[70] - d[0] * d[29] * d[46] * d[70] + 2 * d[4] * d[31] * d[46] * d[70] - d[1] * d[27] * d[47] * d[70] - d[0] * d[28] * d[47] * d[70] + 2 * d[3] * d[30] * d[47] * d[70] + 2 * d[3] * d[29] * d[48] * d[70] + 2 * d[2] * d[30] * d[48] * d[70] - 2 * d[5] * d[31] * d[48] * d[70] - 2 * d[4] * d[32] * d[48] * d[70] + 2 * d[4] * d[28] * d[49] * d[70] - 2 * d[5] * d[30] * d[49] * d[70] + 2 * d[1] * d[31] * d[49] * d[70] - 2 * d[3] * d[32] * d[49] * d[70] + 2 * d[5] * d[27] * d[50] * d[70] - 2 * d[4] * d[30] * d[50] * d[70] - 2 * d[3] * d[31] * d[50] * d[70] + 2 * d[0] * d[32] * d[50] * d[70];
    coeffs[104] = 2 * d[6] * d[38] * d[46] * d[57] - 2 * d[8] * d[40] * d[46] * d[57] + 2 * d[2] * d[42] * d[46] * d[57] - 2 * d[4] * d[44] * d[46] * d[57] + 2 * d[6] * d[37] * d[47] * d[57] - 2 * d[7] * d[39] * d[47] * d[57] + 2 * d[1] * d[42] * d[47] * d[57] - 2 * d[3] * d[43] * d[47] * d[57] - 2 * d[7] * d[38] * d[48] * d[57] + 2 * d[8] * d[41] * d[48] * d[57] - 2 * d[2] * d[43] * d[48] * d[57] + 2 * d[5] * d[44] * d[48] * d[57] - 2 * d[8] * d[37] * d[49] * d[57] + 2 * d[7] * d[41] * d[49] * d[57] + 2 * d[5] * d[43] * d[49] * d[57] - 2 * d[1] * d[44] * d[49] * d[57] + 2 * d[8] * d[39] * d[50] * d[57] + 2 * d[7] * d[40] * d[50] * d[57] - 4 * d[6] * d[41] * d[50] * d[57] - 4 * d[5] * d[42] * d[50] * d[57] + 2 * d[4] * d[43] * d[50] * d[57] + 2 * d[3] * d[44] * d[50] * d[57] + 2 * d[2] * d[37] * d[51] * d[57] + 2 * d[1] * d[38] * d[51] * d[57] - 4 * d[5] * d[41] * d[51] * d[57] - 2 * d[3] * d[38] * d[52] * d[57] - 2 * d[2] * d[39] * d[52] * d[57] + 2 * d[5] * d[40] * d[52] * d[57] + 2 * d[4] * d[41] * d[52] * d[57] - 2 * d[4] * d[37] * d[53] * d[57] + 2 * d[5] * d[39] * d[53] * d[57] - 2 * d[1] * d[40] * d[53] * d[57] + 2 * d[3] * d[41] * d[53] * d[57] + d[38] * d[46] * std::pow(d[57], 2) + d[37] * d[47] * std::pow(d[57], 2) - 2 * d[41] * d[50] * std::pow(d[57], 2) + 2 * d[7] * d[38] * d[45] * d[58] - 2 * d[8] * d[41] * d[45] * d[58] + 2 * d[2] * d[43] * d[45] * d[58] - 2 * d[5] * d[44] * d[45] * d[58] + 2 * d[7] * d[36] * d[47] * d[58] - 2 * d[6] * d[39] * d[47] * d[58] - 2 * d[3] * d[42] * d[47] * d[58] + 2 * d[0] * d[43] * d[47] * d[58] - 2 * d[6] * d[38] * d[48] * d[58] + 2 * d[8] * d[40] * d[48] * d[58] - 2 * d[2] * d[42] * d[48] * d[58] + 2 * d[4] * d[44] * d[48] * d[58] + 2 * d[8] * d[39] * d[49] * d[58] - 4 * d[7] * d[40] * d[49] * d[58] + 2 * d[6] * d[41] * d[49] * d[58] + 2 * d[5] * d[42] * d[49] * d[58] - 4 * d[4] * d[43] * d[49] * d[58] + 2 * d[3] * d[44] * d[49] * d[58] - 2 * d[8] * d[36] * d[50] * d[58] + 2 * d[6] * d[40] * d[50] * d[58] + 2 * d[4] * d[42] * d[50] * d[58] - 2 * d[0] * d[44] * d[50] * d[58] - 2 * d[3] * d[38] * d[51] * d[58] - 2 * d[2] * d[39] * d[51] * d[58] + 2 * d[5] * d[40] * d[51] * d[58] + 2 * d[4] * d[41] * d[51] * d[58] + 2 * d[2] * d[36] * d[52] * d[58] + 2 * d[0] * d[38] * d[52] * d[58] - 4 * d[4] * d[40] * d[52] * d[58] - 2 * d[5] * d[36] * d[53] * d[58] + 2 * d[4] * d[39] * d[53] * d[58] + 2 * d[3] * d[40] * d[53] * d[58] - 2 * d[0] * d[41] * d[53] * d[58] - 2 * d[39] * d[47] * d[57] * d[58] - 2 * d[38] * d[48] * d[57] * d[58] + 2 * d[41] * d[49] * d[57] * d[58] + 2 * d[40] * d[50] * d[57] * d[58] + d[38] * d[45] * std::pow(d[58], 2) + d[36] * d[47] * std::pow(d[58], 2) - 2 * d[40] * d[49] * std::pow(d[58], 2) + 2 * d[8] * d[37] * d[45] * d[59] - 2 * d[7] * d[41] * d[45] * d[59] - 2 * d[5] * d[43] * d[45] * d[59] + 2 * d[1] * d[44] * d[45] * d[59] + 2 * d[8] * d[36] * d[46] * d[59] - 2 * d[6] * d[40] * d[46] * d[59] - 2 * d[4] * d[42] * d[46] * d[59] + 2 * d[0] * d[44] * d[46] * d[59] - 4 * d[8] * d[39] * d[48] * d[59] + 2 * d[7] * d[40] * d[48] * d[59] + 2 * d[6] * d[41] * d[48] * d[59] + 2 * d[5] * d[42] * d[48] * d[59] + 2 * d[4] * d[43] * d[48] * d[59] - 4 * d[3] * d[44] * d[48] * d[59] - 2 * d[6] * d[37] * d[49] * d[59] + 2 * d[7] * d[39] * d[49] * d[59] - 2 * d[1] * d[42] * d[49] * d[59] + 2 * d[3] * d[43] * d[49] * d[59] - 2 * d[7] * d[36] * d[50] * d[59] + 2 * d[6] * d[39] * d[50] * d[59] + 2 * d[3] * d[42] * d[50] * d[59] - 2 * d[0] * d[43] * d[50] * d[59] - 2 * d[4] * d[37] * d[51] * d[59] + 2 * d[5] * d[39] * d[51] * d[59] - 2 * d[1] * d[40] * d[51] * d[59] + 2 * d[3] * d[41] * d[51] * d[59] - 2 * d[5] * d[36] * d[52] * d[59] + 2 * d[4] * d[39] * d[52] * d[59] + 2 * d[3] * d[40] * d[52] * d[59] - 2 * d[0] * d[41] * d[52] * d[59] + 2 * d[1] * d[36] * d[53] * d[59] + 2 * d[0] * d[37] * d[53] * d[59] - 4 * d[3] * d[39] * d[53] * d[59] - 2 * d[40] * d[46] * d[57] * d[59] + 2 * d[41] * d[48] * d[57] * d[59] - 2 * d[37] * d[49] * d[57] * d[59] + 2 * d[39] * d[50] * d[57] * d[59] - 2 * d[41] * d[45] * d[58] * d[59] + 2 * d[40] * d[48] * d[58] * d[59] + 2 * d[39] * d[49] * d[58] * d[59] - 2 * d[36] * d[50] * d[58] * d[59] + d[37] * d[45] * std::pow(d[59], 2) + d[36] * d[46] * std::pow(d[59], 2) - 2 * d[39] * d[48] * std::pow(d[59], 2) - d[2] * d[37] * d[45] * d[70] - d[1] * d[38] * d[45] * d[70] + 2 * d[5] * d[41] * d[45] * d[70] - d[2] * d[36] * d[46] * d[70] - d[0] * d[38] * d[46] * d[70] + 2 * d[4] * d[40] * d[46] * d[70] - d[1] * d[36] * d[47] * d[70] - d[0] * d[37] * d[47] * d[70] + 2 * d[3] * d[39] * d[47] * d[70] + 2 * d[3] * d[38] * d[48] * d[70] + 2 * d[2] * d[39] * d[48] * d[70] - 2 * d[5] * d[40] * d[48] * d[70] - 2 * d[4] * d[41] * d[48] * d[70] + 2 * d[4] * d[37] * d[49] * d[70] - 2 * d[5] * d[39] * d[49] * d[70] + 2 * d[1] * d[40] * d[49] * d[70] - 2 * d[3] * d[41] * d[49] * d[70] + 2 * d[5] * d[36] * d[50] * d[70] - 2 * d[4] * d[39] * d[50] * d[70] - 2 * d[3] * d[40] * d[50] * d[70] + 2 * d[0] * d[41] * d[50] * d[70];
    coeffs[105] = 2 * d[6] * d[46] * d[47] * d[57] - 2 * d[7] * d[47] * d[48] * d[57] - 2 * d[8] * d[46] * d[49] * d[57] + 2 * d[8] * d[48] * d[50] * d[57] + 2 * d[7] * d[49] * d[50] * d[57] - 2 * d[6] * std::pow(d[50], 2) * d[57] + 2 * d[2] * d[46] * d[51] * d[57] + 2 * d[1] * d[47] * d[51] * d[57] - 4 * d[5] * d[50] * d[51] * d[57] - 2 * d[3] * d[47] * d[52] * d[57] - 2 * d[2] * d[48] * d[52] * d[57] + 2 * d[5] * d[49] * d[52] * d[57] + 2 * d[4] * d[50] * d[52] * d[57] - 2 * d[4] * d[46] * d[53] * d[57] + 2 * d[5] * d[48] * d[53] * d[57] - 2 * d[1] * d[49] * d[53] * d[57] + 2 * d[3] * d[50] * d[53] * d[57] + d[46] * d[47] * std::pow(d[57], 2) - std::pow(d[50], 2) * std::pow(d[57], 2) + 2 * d[7] * d[45] * d[47] * d[58] - 2 * d[6] * d[47] * d[48] * d[58] + 2 * d[8] * d[48] * d[49] * d[58] - 2 * d[7] * std::pow(d[49], 2) * d[58] - 2 * d[8] * d[45] * d[50] * d[58] + 2 * d[6] * d[49] * d[50] * d[58] - 2 * d[3] * d[47] * d[51] * d[58] - 2 * d[2] * d[48] * d[51] * d[58] + 2 * d[5] * d[49] * d[51] * d[58] + 2 * d[4] * d[50] * d[51] * d[58] + 2 * d[2] * d[45] * d[52] * d[58] + 2 * d[0] * d[47] * d[52] * d[58] - 4 * d[4] * d[49] * d[52] * d[58] - 2 * d[5] * d[45] * d[53] * d[58] + 2 * d[4] * d[48] * d[53] * d[58] + 2 * d[3] * d[49] * d[53] * d[58] - 2 * d[0] * d[50] * d[53] * d[58] - 2 * d[47] * d[48] * d[57] * d[58] + 2 * d[49] * d[50] * d[57] * d[58] + d[45] * d[47] * std::pow(d[58], 2) - std::pow(d[49], 2) * std::pow(d[58], 2) + 2 * d[8] * d[45] * d[46] * d[59] - 2 * d[8] * std::pow(d[48], 2) * d[59] - 2 * d[6] * d[46] * d[49] * d[59] + 2 * d[7] * d[48] * d[49] * d[59] - 2 * d[7] * d[45] * d[50] * d[59] + 2 * d[6] * d[48] * d[50] * d[59] - 2 * d[4] * d[46] * d[51] * d[59] + 2 * d[5] * d[48] * d[51] * d[59] - 2 * d[1] * d[49] * d[51] * d[59] + 2 * d[3] * d[50] * d[51] * d[59] - 2 * d[5] * d[45] * d[52] * d[59] + 2 * d[4] * d[48] * d[52] * d[59] + 2 * d[3] * d[49] * d[52] * d[59] - 2 * d[0] * d[50] * d[52] * d[59] + 2 * d[1] * d[45] * d[53] * d[59] + 2 * d[0] * d[46] * d[53] * d[59] - 4 * d[3] * d[48] * d[53] * d[59] - 2 * d[46] * d[49] * d[57] * d[59] + 2 * d[48] * d[50] * d[57] * d[59] + 2 * d[48] * d[49] * d[58] * d[59] - 2 * d[45] * d[50] * d[58] * d[59] + d[45] * d[46] * std::pow(d[59], 2) - std::pow(d[48], 2) * std::pow(d[59], 2) - d[2] * d[45] * d[46] * d[70] - d[1] * d[45] * d[47] * d[70] - d[0] * d[46] * d[47] * d[70] + 2 * d[3] * d[47] * d[48] * d[70] + d[2] * std::pow(d[48], 2) * d[70] + 2 * d[4] * d[46] * d[49] * d[70] - 2 * d[5] * d[48] * d[49] * d[70] + d[1] * std::pow(d[49], 2) * d[70] + 2 * d[5] * d[45] * d[50] * d[70] - 2 * d[4] * d[48] * d[50] * d[70] - 2 * d[3] * d[49] * d[50] * d[70] + d[0] * std::pow(d[50], 2) * d[70];
    coeffs[106] = 2 * d[2] * d[6] * d[10] * d[57] - 2 * d[4] * d[8] * d[10] * d[57] + 2 * d[1] * d[6] * d[11] * d[57] - 2 * d[3] * d[7] * d[11] * d[57] - 2 * d[2] * d[7] * d[12] * d[57] + 2 * d[5] * d[8] * d[12] * d[57] + 2 * d[5] * d[7] * d[13] * d[57] - 2 * d[1] * d[8] * d[13] * d[57] - 4 * d[5] * d[6] * d[14] * d[57] + 2 * d[4] * d[7] * d[14] * d[57] + 2 * d[3] * d[8] * d[14] * d[57] + 2 * d[1] * d[2] * d[15] * d[57] - 2 * std::pow(d[5], 2) * d[15] * d[57] - 2 * d[2] * d[3] * d[16] * d[57] + 2 * d[4] * d[5] * d[16] * d[57] - 2 * d[1] * d[4] * d[17] * d[57] + 2 * d[3] * d[5] * d[17] * d[57] + d[2] * d[10] * std::pow(d[57], 2) + d[1] * d[11] * std::pow(d[57], 2) - 2 * d[5] * d[14] * std::pow(d[57], 2) + 2 * d[2] * d[7] * d[9] * d[58] - 2 * d[5] * d[8] * d[9] * d[58] - 2 * d[3] * d[6] * d[11] * d[58] + 2 * d[0] * d[7] * d[11] * d[58] - 2 * d[2] * d[6] * d[12] * d[58] + 2 * d[4] * d[8] * d[12] * d[58] + 2 * d[5] * d[6] * d[13] * d[58] - 4 * d[4] * d[7] * d[13] * d[58] + 2 * d[3] * d[8] * d[13] * d[58] + 2 * d[4] * d[6] * d[14] * d[58] - 2 * d[0] * d[8] * d[14] * d[58] - 2 * d[2] * d[3] * d[15] * d[58] + 2 * d[4] * d[5] * d[15] * d[58] + 2 * d[0] * d[2] * d[16] * d[58] - 2 * std::pow(d[4], 2) * d[16] * d[58] + 2 * d[3] * d[4] * d[17] * d[58] - 2 * d[0] * d[5] * d[17] * d[58] - 2 * d[3] * d[11] * d[57] * d[58] - 2 * d[2] * d[12] * d[57] * d[58] + 2 * d[5] * d[13] * d[57] * d[58] + 2 * d[4] * d[14] * d[57] * d[58] + d[2] * d[9] * std::pow(d[58], 2) + d[0] * d[11] * std::pow(d[58], 2) - 2 * d[4] * d[13] * std::pow(d[58], 2) - 2 * d[5] * d[7] * d[9] * d[59] + 2 * d[1] * d[8] * d[9] * d[59] - 2 * d[4] * d[6] * d[10] * d[59] + 2 * d[0] * d[8] * d[10] * d[59] + 2 * d[5] * d[6] * d[12] * d[59] + 2 * d[4] * d[7] * d[12] * d[59] - 4 * d[3] * d[8] * d[12] * d[59] - 2 * d[1] * d[6] * d[13] * d[59] + 2 * d[3] * d[7] * d[13] * d[59] + 2 * d[3] * d[6] * d[14] * d[59] - 2 * d[0] * d[7] * d[14] * d[59] - 2 * d[1] * d[4] * d[15] * d[59] + 2 * d[3] * d[5] * d[15] * d[59] + 2 * d[3] * d[4] * d[16] * d[59] - 2 * d[0] * d[5] * d[16] * d[59] + 2 * d[0] * d[1] * d[17] * d[59] - 2 * std::pow(d[3], 2) * d[17] * d[59] - 2 * d[4] * d[10] * d[57] * d[59] + 2 * d[5] * d[12] * d[57] * d[59] - 2 * d[1] * d[13] * d[57] * d[59] + 2 * d[3] * d[14] * d[57] * d[59] - 2 * d[5] * d[9] * d[58] * d[59] + 2 * d[4] * d[12] * d[58] * d[59] + 2 * d[3] * d[13] * d[58] * d[59] - 2 * d[0] * d[14] * d[58] * d[59] + d[1] * d[9] * std::pow(d[59], 2) + d[0] * d[10] * std::pow(d[59], 2) - 2 * d[3] * d[12] * std::pow(d[59], 2) - d[1] * d[2] * d[9] * d[70] + std::pow(d[5], 2) * d[9] * d[70] - d[0] * d[2] * d[10] * d[70] + std::pow(d[4], 2) * d[10] * d[70] - d[0] * d[1] * d[11] * d[70] + std::pow(d[3], 2) * d[11] * d[70] + 2 * d[2] * d[3] * d[12] * d[70] - 2 * d[4] * d[5] * d[12] * d[70] + 2 * d[1] * d[4] * d[13] * d[70] - 2 * d[3] * d[5] * d[13] * d[70] - 2 * d[3] * d[4] * d[14] * d[70] + 2 * d[0] * d[5] * d[14] * d[70];
    coeffs[107] = 2 * d[2] * d[6] * d[19] * d[57] - 2 * d[4] * d[8] * d[19] * d[57] + 2 * d[1] * d[6] * d[20] * d[57] - 2 * d[3] * d[7] * d[20] * d[57] - 2 * d[2] * d[7] * d[21] * d[57] + 2 * d[5] * d[8] * d[21] * d[57] + 2 * d[5] * d[7] * d[22] * d[57] - 2 * d[1] * d[8] * d[22] * d[57] - 4 * d[5] * d[6] * d[23] * d[57] + 2 * d[4] * d[7] * d[23] * d[57] + 2 * d[3] * d[8] * d[23] * d[57] + 2 * d[1] * d[2] * d[24] * d[57] - 2 * std::pow(d[5], 2) * d[24] * d[57] - 2 * d[2] * d[3] * d[25] * d[57] + 2 * d[4] * d[5] * d[25] * d[57] - 2 * d[1] * d[4] * d[26] * d[57] + 2 * d[3] * d[5] * d[26] * d[57] + d[2] * d[19] * std::pow(d[57], 2) + d[1] * d[20] * std::pow(d[57], 2) - 2 * d[5] * d[23] * std::pow(d[57], 2) + 2 * d[2] * d[7] * d[18] * d[58] - 2 * d[5] * d[8] * d[18] * d[58] - 2 * d[3] * d[6] * d[20] * d[58] + 2 * d[0] * d[7] * d[20] * d[58] - 2 * d[2] * d[6] * d[21] * d[58] + 2 * d[4] * d[8] * d[21] * d[58] + 2 * d[5] * d[6] * d[22] * d[58] - 4 * d[4] * d[7] * d[22] * d[58] + 2 * d[3] * d[8] * d[22] * d[58] + 2 * d[4] * d[6] * d[23] * d[58] - 2 * d[0] * d[8] * d[23] * d[58] - 2 * d[2] * d[3] * d[24] * d[58] + 2 * d[4] * d[5] * d[24] * d[58] + 2 * d[0] * d[2] * d[25] * d[58] - 2 * std::pow(d[4], 2) * d[25] * d[58] + 2 * d[3] * d[4] * d[26] * d[58] - 2 * d[0] * d[5] * d[26] * d[58] - 2 * d[3] * d[20] * d[57] * d[58] - 2 * d[2] * d[21] * d[57] * d[58] + 2 * d[5] * d[22] * d[57] * d[58] + 2 * d[4] * d[23] * d[57] * d[58] + d[2] * d[18] * std::pow(d[58], 2) + d[0] * d[20] * std::pow(d[58], 2) - 2 * d[4] * d[22] * std::pow(d[58], 2) - 2 * d[5] * d[7] * d[18] * d[59] + 2 * d[1] * d[8] * d[18] * d[59] - 2 * d[4] * d[6] * d[19] * d[59] + 2 * d[0] * d[8] * d[19] * d[59] + 2 * d[5] * d[6] * d[21] * d[59] + 2 * d[4] * d[7] * d[21] * d[59] - 4 * d[3] * d[8] * d[21] * d[59] - 2 * d[1] * d[6] * d[22] * d[59] + 2 * d[3] * d[7] * d[22] * d[59] + 2 * d[3] * d[6] * d[23] * d[59] - 2 * d[0] * d[7] * d[23] * d[59] - 2 * d[1] * d[4] * d[24] * d[59] + 2 * d[3] * d[5] * d[24] * d[59] + 2 * d[3] * d[4] * d[25] * d[59] - 2 * d[0] * d[5] * d[25] * d[59] + 2 * d[0] * d[1] * d[26] * d[59] - 2 * std::pow(d[3], 2) * d[26] * d[59] - 2 * d[4] * d[19] * d[57] * d[59] + 2 * d[5] * d[21] * d[57] * d[59] - 2 * d[1] * d[22] * d[57] * d[59] + 2 * d[3] * d[23] * d[57] * d[59] - 2 * d[5] * d[18] * d[58] * d[59] + 2 * d[4] * d[21] * d[58] * d[59] + 2 * d[3] * d[22] * d[58] * d[59] - 2 * d[0] * d[23] * d[58] * d[59] + d[1] * d[18] * std::pow(d[59], 2) + d[0] * d[19] * std::pow(d[59], 2) - 2 * d[3] * d[21] * std::pow(d[59], 2) - d[1] * d[2] * d[18] * d[70] + std::pow(d[5], 2) * d[18] * d[70] - d[0] * d[2] * d[19] * d[70] + std::pow(d[4], 2) * d[19] * d[70] - d[0] * d[1] * d[20] * d[70] + std::pow(d[3], 2) * d[20] * d[70] + 2 * d[2] * d[3] * d[21] * d[70] - 2 * d[4] * d[5] * d[21] * d[70] + 2 * d[1] * d[4] * d[22] * d[70] - 2 * d[3] * d[5] * d[22] * d[70] - 2 * d[3] * d[4] * d[23] * d[70] + 2 * d[0] * d[5] * d[23] * d[70];
    coeffs[108] = 2 * d[2] * d[6] * d[28] * d[57] - 2 * d[4] * d[8] * d[28] * d[57] + 2 * d[1] * d[6] * d[29] * d[57] - 2 * d[3] * d[7] * d[29] * d[57] - 2 * d[2] * d[7] * d[30] * d[57] + 2 * d[5] * d[8] * d[30] * d[57] + 2 * d[5] * d[7] * d[31] * d[57] - 2 * d[1] * d[8] * d[31] * d[57] - 4 * d[5] * d[6] * d[32] * d[57] + 2 * d[4] * d[7] * d[32] * d[57] + 2 * d[3] * d[8] * d[32] * d[57] + 2 * d[1] * d[2] * d[33] * d[57] - 2 * std::pow(d[5], 2) * d[33] * d[57] - 2 * d[2] * d[3] * d[34] * d[57] + 2 * d[4] * d[5] * d[34] * d[57] - 2 * d[1] * d[4] * d[35] * d[57] + 2 * d[3] * d[5] * d[35] * d[57] + d[2] * d[28] * std::pow(d[57], 2) + d[1] * d[29] * std::pow(d[57], 2) - 2 * d[5] * d[32] * std::pow(d[57], 2) + 2 * d[2] * d[7] * d[27] * d[58] - 2 * d[5] * d[8] * d[27] * d[58] - 2 * d[3] * d[6] * d[29] * d[58] + 2 * d[0] * d[7] * d[29] * d[58] - 2 * d[2] * d[6] * d[30] * d[58] + 2 * d[4] * d[8] * d[30] * d[58] + 2 * d[5] * d[6] * d[31] * d[58] - 4 * d[4] * d[7] * d[31] * d[58] + 2 * d[3] * d[8] * d[31] * d[58] + 2 * d[4] * d[6] * d[32] * d[58] - 2 * d[0] * d[8] * d[32] * d[58] - 2 * d[2] * d[3] * d[33] * d[58] + 2 * d[4] * d[5] * d[33] * d[58] + 2 * d[0] * d[2] * d[34] * d[58] - 2 * std::pow(d[4], 2) * d[34] * d[58] + 2 * d[3] * d[4] * d[35] * d[58] - 2 * d[0] * d[5] * d[35] * d[58] - 2 * d[3] * d[29] * d[57] * d[58] - 2 * d[2] * d[30] * d[57] * d[58] + 2 * d[5] * d[31] * d[57] * d[58] + 2 * d[4] * d[32] * d[57] * d[58] + d[2] * d[27] * std::pow(d[58], 2) + d[0] * d[29] * std::pow(d[58], 2) - 2 * d[4] * d[31] * std::pow(d[58], 2) - 2 * d[5] * d[7] * d[27] * d[59] + 2 * d[1] * d[8] * d[27] * d[59] - 2 * d[4] * d[6] * d[28] * d[59] + 2 * d[0] * d[8] * d[28] * d[59] + 2 * d[5] * d[6] * d[30] * d[59] + 2 * d[4] * d[7] * d[30] * d[59] - 4 * d[3] * d[8] * d[30] * d[59] - 2 * d[1] * d[6] * d[31] * d[59] + 2 * d[3] * d[7] * d[31] * d[59] + 2 * d[3] * d[6] * d[32] * d[59] - 2 * d[0] * d[7] * d[32] * d[59] - 2 * d[1] * d[4] * d[33] * d[59] + 2 * d[3] * d[5] * d[33] * d[59] + 2 * d[3] * d[4] * d[34] * d[59] - 2 * d[0] * d[5] * d[34] * d[59] + 2 * d[0] * d[1] * d[35] * d[59] - 2 * std::pow(d[3], 2) * d[35] * d[59] - 2 * d[4] * d[28] * d[57] * d[59] + 2 * d[5] * d[30] * d[57] * d[59] - 2 * d[1] * d[31] * d[57] * d[59] + 2 * d[3] * d[32] * d[57] * d[59] - 2 * d[5] * d[27] * d[58] * d[59] + 2 * d[4] * d[30] * d[58] * d[59] + 2 * d[3] * d[31] * d[58] * d[59] - 2 * d[0] * d[32] * d[58] * d[59] + d[1] * d[27] * std::pow(d[59], 2) + d[0] * d[28] * std::pow(d[59], 2) - 2 * d[3] * d[30] * std::pow(d[59], 2) - d[1] * d[2] * d[27] * d[70] + std::pow(d[5], 2) * d[27] * d[70] - d[0] * d[2] * d[28] * d[70] + std::pow(d[4], 2) * d[28] * d[70] - d[0] * d[1] * d[29] * d[70] + std::pow(d[3], 2) * d[29] * d[70] + 2 * d[2] * d[3] * d[30] * d[70] - 2 * d[4] * d[5] * d[30] * d[70] + 2 * d[1] * d[4] * d[31] * d[70] - 2 * d[3] * d[5] * d[31] * d[70] - 2 * d[3] * d[4] * d[32] * d[70] + 2 * d[0] * d[5] * d[32] * d[70];
    coeffs[109] = 2 * d[2] * d[6] * d[37] * d[57] - 2 * d[4] * d[8] * d[37] * d[57] + 2 * d[1] * d[6] * d[38] * d[57] - 2 * d[3] * d[7] * d[38] * d[57] - 2 * d[2] * d[7] * d[39] * d[57] + 2 * d[5] * d[8] * d[39] * d[57] + 2 * d[5] * d[7] * d[40] * d[57] - 2 * d[1] * d[8] * d[40] * d[57] - 4 * d[5] * d[6] * d[41] * d[57] + 2 * d[4] * d[7] * d[41] * d[57] + 2 * d[3] * d[8] * d[41] * d[57] + 2 * d[1] * d[2] * d[42] * d[57] - 2 * std::pow(d[5], 2) * d[42] * d[57] - 2 * d[2] * d[3] * d[43] * d[57] + 2 * d[4] * d[5] * d[43] * d[57] - 2 * d[1] * d[4] * d[44] * d[57] + 2 * d[3] * d[5] * d[44] * d[57] + d[2] * d[37] * std::pow(d[57], 2) + d[1] * d[38] * std::pow(d[57], 2) - 2 * d[5] * d[41] * std::pow(d[57], 2) + 2 * d[2] * d[7] * d[36] * d[58] - 2 * d[5] * d[8] * d[36] * d[58] - 2 * d[3] * d[6] * d[38] * d[58] + 2 * d[0] * d[7] * d[38] * d[58] - 2 * d[2] * d[6] * d[39] * d[58] + 2 * d[4] * d[8] * d[39] * d[58] + 2 * d[5] * d[6] * d[40] * d[58] - 4 * d[4] * d[7] * d[40] * d[58] + 2 * d[3] * d[8] * d[40] * d[58] + 2 * d[4] * d[6] * d[41] * d[58] - 2 * d[0] * d[8] * d[41] * d[58] - 2 * d[2] * d[3] * d[42] * d[58] + 2 * d[4] * d[5] * d[42] * d[58] + 2 * d[0] * d[2] * d[43] * d[58] - 2 * std::pow(d[4], 2) * d[43] * d[58] + 2 * d[3] * d[4] * d[44] * d[58] - 2 * d[0] * d[5] * d[44] * d[58] - 2 * d[3] * d[38] * d[57] * d[58] - 2 * d[2] * d[39] * d[57] * d[58] + 2 * d[5] * d[40] * d[57] * d[58] + 2 * d[4] * d[41] * d[57] * d[58] + d[2] * d[36] * std::pow(d[58], 2) + d[0] * d[38] * std::pow(d[58], 2) - 2 * d[4] * d[40] * std::pow(d[58], 2) - 2 * d[5] * d[7] * d[36] * d[59] + 2 * d[1] * d[8] * d[36] * d[59] - 2 * d[4] * d[6] * d[37] * d[59] + 2 * d[0] * d[8] * d[37] * d[59] + 2 * d[5] * d[6] * d[39] * d[59] + 2 * d[4] * d[7] * d[39] * d[59] - 4 * d[3] * d[8] * d[39] * d[59] - 2 * d[1] * d[6] * d[40] * d[59] + 2 * d[3] * d[7] * d[40] * d[59] + 2 * d[3] * d[6] * d[41] * d[59] - 2 * d[0] * d[7] * d[41] * d[59] - 2 * d[1] * d[4] * d[42] * d[59] + 2 * d[3] * d[5] * d[42] * d[59] + 2 * d[3] * d[4] * d[43] * d[59] - 2 * d[0] * d[5] * d[43] * d[59] + 2 * d[0] * d[1] * d[44] * d[59] - 2 * std::pow(d[3], 2) * d[44] * d[59] - 2 * d[4] * d[37] * d[57] * d[59] + 2 * d[5] * d[39] * d[57] * d[59] - 2 * d[1] * d[40] * d[57] * d[59] + 2 * d[3] * d[41] * d[57] * d[59] - 2 * d[5] * d[36] * d[58] * d[59] + 2 * d[4] * d[39] * d[58] * d[59] + 2 * d[3] * d[40] * d[58] * d[59] - 2 * d[0] * d[41] * d[58] * d[59] + d[1] * d[36] * std::pow(d[59], 2) + d[0] * d[37] * std::pow(d[59], 2) - 2 * d[3] * d[39] * std::pow(d[59], 2) - d[1] * d[2] * d[36] * d[70] + std::pow(d[5], 2) * d[36] * d[70] - d[0] * d[2] * d[37] * d[70] + std::pow(d[4], 2) * d[37] * d[70] - d[0] * d[1] * d[38] * d[70] + std::pow(d[3], 2) * d[38] * d[70] + 2 * d[2] * d[3] * d[39] * d[70] - 2 * d[4] * d[5] * d[39] * d[70] + 2 * d[1] * d[4] * d[40] * d[70] - 2 * d[3] * d[5] * d[40] * d[70] - 2 * d[3] * d[4] * d[41] * d[70] + 2 * d[0] * d[5] * d[41] * d[70];
    coeffs[110] = 2 * d[2] * d[6] * d[46] * d[57] - 2 * d[4] * d[8] * d[46] * d[57] + 2 * d[1] * d[6] * d[47] * d[57] - 2 * d[3] * d[7] * d[47] * d[57] - 2 * d[2] * d[7] * d[48] * d[57] + 2 * d[5] * d[8] * d[48] * d[57] + 2 * d[5] * d[7] * d[49] * d[57] - 2 * d[1] * d[8] * d[49] * d[57] - 4 * d[5] * d[6] * d[50] * d[57] + 2 * d[4] * d[7] * d[50] * d[57] + 2 * d[3] * d[8] * d[50] * d[57] + 2 * d[1] * d[2] * d[51] * d[57] - 2 * std::pow(d[5], 2) * d[51] * d[57] - 2 * d[2] * d[3] * d[52] * d[57] + 2 * d[4] * d[5] * d[52] * d[57] - 2 * d[1] * d[4] * d[53] * d[57] + 2 * d[3] * d[5] * d[53] * d[57] + d[2] * d[46] * std::pow(d[57], 2) + d[1] * d[47] * std::pow(d[57], 2) - 2 * d[5] * d[50] * std::pow(d[57], 2) + 2 * d[2] * d[7] * d[45] * d[58] - 2 * d[5] * d[8] * d[45] * d[58] - 2 * d[3] * d[6] * d[47] * d[58] + 2 * d[0] * d[7] * d[47] * d[58] - 2 * d[2] * d[6] * d[48] * d[58] + 2 * d[4] * d[8] * d[48] * d[58] + 2 * d[5] * d[6] * d[49] * d[58] - 4 * d[4] * d[7] * d[49] * d[58] + 2 * d[3] * d[8] * d[49] * d[58] + 2 * d[4] * d[6] * d[50] * d[58] - 2 * d[0] * d[8] * d[50] * d[58] - 2 * d[2] * d[3] * d[51] * d[58] + 2 * d[4] * d[5] * d[51] * d[58] + 2 * d[0] * d[2] * d[52] * d[58] - 2 * std::pow(d[4], 2) * d[52] * d[58] + 2 * d[3] * d[4] * d[53] * d[58] - 2 * d[0] * d[5] * d[53] * d[58] - 2 * d[3] * d[47] * d[57] * d[58] - 2 * d[2] * d[48] * d[57] * d[58] + 2 * d[5] * d[49] * d[57] * d[58] + 2 * d[4] * d[50] * d[57] * d[58] + d[2] * d[45] * std::pow(d[58], 2) + d[0] * d[47] * std::pow(d[58], 2) - 2 * d[4] * d[49] * std::pow(d[58], 2) - 2 * d[5] * d[7] * d[45] * d[59] + 2 * d[1] * d[8] * d[45] * d[59] - 2 * d[4] * d[6] * d[46] * d[59] + 2 * d[0] * d[8] * d[46] * d[59] + 2 * d[5] * d[6] * d[48] * d[59] + 2 * d[4] * d[7] * d[48] * d[59] - 4 * d[3] * d[8] * d[48] * d[59] - 2 * d[1] * d[6] * d[49] * d[59] + 2 * d[3] * d[7] * d[49] * d[59] + 2 * d[3] * d[6] * d[50] * d[59] - 2 * d[0] * d[7] * d[50] * d[59] - 2 * d[1] * d[4] * d[51] * d[59] + 2 * d[3] * d[5] * d[51] * d[59] + 2 * d[3] * d[4] * d[52] * d[59] - 2 * d[0] * d[5] * d[52] * d[59] + 2 * d[0] * d[1] * d[53] * d[59] - 2 * std::pow(d[3], 2) * d[53] * d[59] - 2 * d[4] * d[46] * d[57] * d[59] + 2 * d[5] * d[48] * d[57] * d[59] - 2 * d[1] * d[49] * d[57] * d[59] + 2 * d[3] * d[50] * d[57] * d[59] - 2 * d[5] * d[45] * d[58] * d[59] + 2 * d[4] * d[48] * d[58] * d[59] + 2 * d[3] * d[49] * d[58] * d[59] - 2 * d[0] * d[50] * d[58] * d[59] + d[1] * d[45] * std::pow(d[59], 2) + d[0] * d[46] * std::pow(d[59], 2) - 2 * d[3] * d[48] * std::pow(d[59], 2) - d[1] * d[2] * d[45] * d[70] + std::pow(d[5], 2) * d[45] * d[70] - d[0] * d[2] * d[46] * d[70] + std::pow(d[4], 2) * d[46] * d[70] - d[0] * d[1] * d[47] * d[70] + std::pow(d[3], 2) * d[47] * d[70] + 2 * d[2] * d[3] * d[48] * d[70] - 2 * d[4] * d[5] * d[48] * d[70] + 2 * d[1] * d[4] * d[49] * d[70] - 2 * d[3] * d[5] * d[49] * d[70] - 2 * d[3] * d[4] * d[50] * d[70] + 2 * d[0] * d[5] * d[50] * d[70];
    coeffs[111] = 2 * d[1] * d[2] * d[6] * d[57] - 2 * std::pow(d[5], 2) * d[6] * d[57] - 2 * d[2] * d[3] * d[7] * d[57] + 2 * d[4] * d[5] * d[7] * d[57] - 2 * d[1] * d[4] * d[8] * d[57] + 2 * d[3] * d[5] * d[8] * d[57] + d[1] * d[2] * std::pow(d[57], 2) - std::pow(d[5], 2) * std::pow(d[57], 2) - 2 * d[2] * d[3] * d[6] * d[58] + 2 * d[4] * d[5] * d[6] * d[58] + 2 * d[0] * d[2] * d[7] * d[58] - 2 * std::pow(d[4], 2) * d[7] * d[58] + 2 * d[3] * d[4] * d[8] * d[58] - 2 * d[0] * d[5] * d[8] * d[58] - 2 * d[2] * d[3] * d[57] * d[58] + 2 * d[4] * d[5] * d[57] * d[58] + d[0] * d[2] * std::pow(d[58], 2) - std::pow(d[4], 2) * std::pow(d[58], 2) - 2 * d[1] * d[4] * d[6] * d[59] + 2 * d[3] * d[5] * d[6] * d[59] + 2 * d[3] * d[4] * d[7] * d[59] - 2 * d[0] * d[5] * d[7] * d[59] + 2 * d[0] * d[1] * d[8] * d[59] - 2 * std::pow(d[3], 2) * d[8] * d[59] - 2 * d[1] * d[4] * d[57] * d[59] + 2 * d[3] * d[5] * d[57] * d[59] + 2 * d[3] * d[4] * d[58] * d[59] - 2 * d[0] * d[5] * d[58] * d[59] + d[0] * d[1] * std::pow(d[59], 2) - std::pow(d[3], 2) * std::pow(d[59], 2) - d[0] * d[1] * d[2] * d[70] + d[2] * std::pow(d[3], 2) * d[70] + d[1] * std::pow(d[4], 2) * d[70] - 2 * d[3] * d[4] * d[5] * d[70] + d[0] * std::pow(d[5], 2) * d[70];
    coeffs[112] = 2 * d[10] * d[11] * d[15] * d[60] - 2 * std::pow(d[14], 2) * d[15] * d[60] - 2 * d[11] * d[12] * d[16] * d[60] + 2 * d[13] * d[14] * d[16] * d[60] - 2 * d[10] * d[13] * d[17] * d[60] + 2 * d[12] * d[14] * d[17] * d[60] - 2 * d[11] * d[12] * d[15] * d[61] + 2 * d[13] * d[14] * d[15] * d[61] + 2 * d[9] * d[11] * d[16] * d[61] - 2 * std::pow(d[13], 2) * d[16] * d[61] + 2 * d[12] * d[13] * d[17] * d[61] - 2 * d[9] * d[14] * d[17] * d[61] - 2 * d[10] * d[13] * d[15] * d[62] + 2 * d[12] * d[14] * d[15] * d[62] + 2 * d[12] * d[13] * d[16] * d[62] - 2 * d[9] * d[14] * d[16] * d[62] + 2 * d[9] * d[10] * d[17] * d[62] - 2 * std::pow(d[12], 2) * d[17] * d[62] - d[9] * d[10] * d[11] * d[71] + d[11] * std::pow(d[12], 2) * d[71] + d[10] * std::pow(d[13], 2) * d[71] - 2 * d[12] * d[13] * d[14] * d[71] + d[9] * std::pow(d[14], 2) * d[71];
    coeffs[113] = 2 * d[11] * d[15] * d[19] * d[60] - 2 * d[13] * d[17] * d[19] * d[60] + 2 * d[10] * d[15] * d[20] * d[60] - 2 * d[12] * d[16] * d[20] * d[60] - 2 * d[11] * d[16] * d[21] * d[60] + 2 * d[14] * d[17] * d[21] * d[60] + 2 * d[14] * d[16] * d[22] * d[60] - 2 * d[10] * d[17] * d[22] * d[60] - 4 * d[14] * d[15] * d[23] * d[60] + 2 * d[13] * d[16] * d[23] * d[60] + 2 * d[12] * d[17] * d[23] * d[60] + 2 * d[10] * d[11] * d[24] * d[60] - 2 * std::pow(d[14], 2) * d[24] * d[60] - 2 * d[11] * d[12] * d[25] * d[60] + 2 * d[13] * d[14] * d[25] * d[60] - 2 * d[10] * d[13] * d[26] * d[60] + 2 * d[12] * d[14] * d[26] * d[60] + 2 * d[11] * d[16] * d[18] * d[61] - 2 * d[14] * d[17] * d[18] * d[61] - 2 * d[12] * d[15] * d[20] * d[61] + 2 * d[9] * d[16] * d[20] * d[61] - 2 * d[11] * d[15] * d[21] * d[61] + 2 * d[13] * d[17] * d[21] * d[61] + 2 * d[14] * d[15] * d[22] * d[61] - 4 * d[13] * d[16] * d[22] * d[61] + 2 * d[12] * d[17] * d[22] * d[61] + 2 * d[13] * d[15] * d[23] * d[61] - 2 * d[9] * d[17] * d[23] * d[61] - 2 * d[11] * d[12] * d[24] * d[61] + 2 * d[13] * d[14] * d[24] * d[61] + 2 * d[9] * d[11] * d[25] * d[61] - 2 * std::pow(d[13], 2) * d[25] * d[61] + 2 * d[12] * d[13] * d[26] * d[61] - 2 * d[9] * d[14] * d[26] * d[61] - 2 * d[14] * d[16] * d[18] * d[62] + 2 * d[10] * d[17] * d[18] * d[62] - 2 * d[13] * d[15] * d[19] * d[62] + 2 * d[9] * d[17] * d[19] * d[62] + 2 * d[14] * d[15] * d[21] * d[62] + 2 * d[13] * d[16] * d[21] * d[62] - 4 * d[12] * d[17] * d[21] * d[62] - 2 * d[10] * d[15] * d[22] * d[62] + 2 * d[12] * d[16] * d[22] * d[62] + 2 * d[12] * d[15] * d[23] * d[62] - 2 * d[9] * d[16] * d[23] * d[62] - 2 * d[10] * d[13] * d[24] * d[62] + 2 * d[12] * d[14] * d[24] * d[62] + 2 * d[12] * d[13] * d[25] * d[62] - 2 * d[9] * d[14] * d[25] * d[62] + 2 * d[9] * d[10] * d[26] * d[62] - 2 * std::pow(d[12], 2) * d[26] * d[62] - d[10] * d[11] * d[18] * d[71] + std::pow(d[14], 2) * d[18] * d[71] - d[9] * d[11] * d[19] * d[71] + std::pow(d[13], 2) * d[19] * d[71] - d[9] * d[10] * d[20] * d[71] + std::pow(d[12], 2) * d[20] * d[71] + 2 * d[11] * d[12] * d[21] * d[71] - 2 * d[13] * d[14] * d[21] * d[71] + 2 * d[10] * d[13] * d[22] * d[71] - 2 * d[12] * d[14] * d[22] * d[71] - 2 * d[12] * d[13] * d[23] * d[71] + 2 * d[9] * d[14] * d[23] * d[71];
    coeffs[114] = 2 * d[15] * d[19] * d[20] * d[60] - 2 * d[16] * d[20] * d[21] * d[60] - 2 * d[17] * d[19] * d[22] * d[60] + 2 * d[17] * d[21] * d[23] * d[60] + 2 * d[16] * d[22] * d[23] * d[60] - 2 * d[15] * std::pow(d[23], 2) * d[60] + 2 * d[11] * d[19] * d[24] * d[60] + 2 * d[10] * d[20] * d[24] * d[60] - 4 * d[14] * d[23] * d[24] * d[60] - 2 * d[12] * d[20] * d[25] * d[60] - 2 * d[11] * d[21] * d[25] * d[60] + 2 * d[14] * d[22] * d[25] * d[60] + 2 * d[13] * d[23] * d[25] * d[60] - 2 * d[13] * d[19] * d[26] * d[60] + 2 * d[14] * d[21] * d[26] * d[60] - 2 * d[10] * d[22] * d[26] * d[60] + 2 * d[12] * d[23] * d[26] * d[60] + 2 * d[16] * d[18] * d[20] * d[61] - 2 * d[15] * d[20] * d[21] * d[61] + 2 * d[17] * d[21] * d[22] * d[61] - 2 * d[16] * std::pow(d[22], 2) * d[61] - 2 * d[17] * d[18] * d[23] * d[61] + 2 * d[15] * d[22] * d[23] * d[61] - 2 * d[12] * d[20] * d[24] * d[61] - 2 * d[11] * d[21] * d[24] * d[61] + 2 * d[14] * d[22] * d[24] * d[61] + 2 * d[13] * d[23] * d[24] * d[61] + 2 * d[11] * d[18] * d[25] * d[61] + 2 * d[9] * d[20] * d[25] * d[61] - 4 * d[13] * d[22] * d[25] * d[61] - 2 * d[14] * d[18] * d[26] * d[61] + 2 * d[13] * d[21] * d[26] * d[61] + 2 * d[12] * d[22] * d[26] * d[61] - 2 * d[9] * d[23] * d[26] * d[61] + 2 * d[17] * d[18] * d[19] * d[62] - 2 * d[17] * std::pow(d[21], 2) * d[62] - 2 * d[15] * d[19] * d[22] * d[62] + 2 * d[16] * d[21] * d[22] * d[62] - 2 * d[16] * d[18] * d[23] * d[62] + 2 * d[15] * d[21] * d[23] * d[62] - 2 * d[13] * d[19] * d[24] * d[62] + 2 * d[14] * d[21] * d[24] * d[62] - 2 * d[10] * d[22] * d[24] * d[62] + 2 * d[12] * d[23] * d[24] * d[62] - 2 * d[14] * d[18] * d[25] * d[62] + 2 * d[13] * d[21] * d[25] * d[62] + 2 * d[12] * d[22] * d[25] * d[62] - 2 * d[9] * d[23] * d[25] * d[62] + 2 * d[10] * d[18] * d[26] * d[62] + 2 * d[9] * d[19] * d[26] * d[62] - 4 * d[12] * d[21] * d[26] * d[62] - d[11] * d[18] * d[19] * d[71] - d[10] * d[18] * d[20] * d[71] - d[9] * d[19] * d[20] * d[71] + 2 * d[12] * d[20] * d[21] * d[71] + d[11] * std::pow(d[21], 2) * d[71] + 2 * d[13] * d[19] * d[22] * d[71] - 2 * d[14] * d[21] * d[22] * d[71] + d[10] * std::pow(d[22], 2) * d[71] + 2 * d[14] * d[18] * d[23] * d[71] - 2 * d[13] * d[21] * d[23] * d[71] - 2 * d[12] * d[22] * d[23] * d[71] + d[9] * std::pow(d[23], 2) * d[71];
    coeffs[115] = 2 * d[19] * d[20] * d[24] * d[60] - 2 * std::pow(d[23], 2) * d[24] * d[60] - 2 * d[20] * d[21] * d[25] * d[60] + 2 * d[22] * d[23] * d[25] * d[60] - 2 * d[19] * d[22] * d[26] * d[60] + 2 * d[21] * d[23] * d[26] * d[60] - 2 * d[20] * d[21] * d[24] * d[61] + 2 * d[22] * d[23] * d[24] * d[61] + 2 * d[18] * d[20] * d[25] * d[61] - 2 * std::pow(d[22], 2) * d[25] * d[61] + 2 * d[21] * d[22] * d[26] * d[61] - 2 * d[18] * d[23] * d[26] * d[61] - 2 * d[19] * d[22] * d[24] * d[62] + 2 * d[21] * d[23] * d[24] * d[62] + 2 * d[21] * d[22] * d[25] * d[62] - 2 * d[18] * d[23] * d[25] * d[62] + 2 * d[18] * d[19] * d[26] * d[62] - 2 * std::pow(d[21], 2) * d[26] * d[62] - d[18] * d[19] * d[20] * d[71] + d[20] * std::pow(d[21], 2) * d[71] + d[19] * std::pow(d[22], 2) * d[71] - 2 * d[21] * d[22] * d[23] * d[71] + d[18] * std::pow(d[23], 2) * d[71];
    coeffs[116] = 2 * d[11] * d[15] * d[28] * d[60] - 2 * d[13] * d[17] * d[28] * d[60] + 2 * d[10] * d[15] * d[29] * d[60] - 2 * d[12] * d[16] * d[29] * d[60] - 2 * d[11] * d[16] * d[30] * d[60] + 2 * d[14] * d[17] * d[30] * d[60] + 2 * d[14] * d[16] * d[31] * d[60] - 2 * d[10] * d[17] * d[31] * d[60] - 4 * d[14] * d[15] * d[32] * d[60] + 2 * d[13] * d[16] * d[32] * d[60] + 2 * d[12] * d[17] * d[32] * d[60] + 2 * d[10] * d[11] * d[33] * d[60] - 2 * std::pow(d[14], 2) * d[33] * d[60] - 2 * d[11] * d[12] * d[34] * d[60] + 2 * d[13] * d[14] * d[34] * d[60] - 2 * d[10] * d[13] * d[35] * d[60] + 2 * d[12] * d[14] * d[35] * d[60] + 2 * d[11] * d[16] * d[27] * d[61] - 2 * d[14] * d[17] * d[27] * d[61] - 2 * d[12] * d[15] * d[29] * d[61] + 2 * d[9] * d[16] * d[29] * d[61] - 2 * d[11] * d[15] * d[30] * d[61] + 2 * d[13] * d[17] * d[30] * d[61] + 2 * d[14] * d[15] * d[31] * d[61] - 4 * d[13] * d[16] * d[31] * d[61] + 2 * d[12] * d[17] * d[31] * d[61] + 2 * d[13] * d[15] * d[32] * d[61] - 2 * d[9] * d[17] * d[32] * d[61] - 2 * d[11] * d[12] * d[33] * d[61] + 2 * d[13] * d[14] * d[33] * d[61] + 2 * d[9] * d[11] * d[34] * d[61] - 2 * std::pow(d[13], 2) * d[34] * d[61] + 2 * d[12] * d[13] * d[35] * d[61] - 2 * d[9] * d[14] * d[35] * d[61] - 2 * d[14] * d[16] * d[27] * d[62] + 2 * d[10] * d[17] * d[27] * d[62] - 2 * d[13] * d[15] * d[28] * d[62] + 2 * d[9] * d[17] * d[28] * d[62] + 2 * d[14] * d[15] * d[30] * d[62] + 2 * d[13] * d[16] * d[30] * d[62] - 4 * d[12] * d[17] * d[30] * d[62] - 2 * d[10] * d[15] * d[31] * d[62] + 2 * d[12] * d[16] * d[31] * d[62] + 2 * d[12] * d[15] * d[32] * d[62] - 2 * d[9] * d[16] * d[32] * d[62] - 2 * d[10] * d[13] * d[33] * d[62] + 2 * d[12] * d[14] * d[33] * d[62] + 2 * d[12] * d[13] * d[34] * d[62] - 2 * d[9] * d[14] * d[34] * d[62] + 2 * d[9] * d[10] * d[35] * d[62] - 2 * std::pow(d[12], 2) * d[35] * d[62] - d[10] * d[11] * d[27] * d[71] + std::pow(d[14], 2) * d[27] * d[71] - d[9] * d[11] * d[28] * d[71] + std::pow(d[13], 2) * d[28] * d[71] - d[9] * d[10] * d[29] * d[71] + std::pow(d[12], 2) * d[29] * d[71] + 2 * d[11] * d[12] * d[30] * d[71] - 2 * d[13] * d[14] * d[30] * d[71] + 2 * d[10] * d[13] * d[31] * d[71] - 2 * d[12] * d[14] * d[31] * d[71] - 2 * d[12] * d[13] * d[32] * d[71] + 2 * d[9] * d[14] * d[32] * d[71];
    coeffs[117] = 2 * d[15] * d[20] * d[28] * d[60] - 2 * d[17] * d[22] * d[28] * d[60] + 2 * d[11] * d[24] * d[28] * d[60] - 2 * d[13] * d[26] * d[28] * d[60] + 2 * d[15] * d[19] * d[29] * d[60] - 2 * d[16] * d[21] * d[29] * d[60] + 2 * d[10] * d[24] * d[29] * d[60] - 2 * d[12] * d[25] * d[29] * d[60] - 2 * d[16] * d[20] * d[30] * d[60] + 2 * d[17] * d[23] * d[30] * d[60] - 2 * d[11] * d[25] * d[30] * d[60] + 2 * d[14] * d[26] * d[30] * d[60] - 2 * d[17] * d[19] * d[31] * d[60] + 2 * d[16] * d[23] * d[31] * d[60] + 2 * d[14] * d[25] * d[31] * d[60] - 2 * d[10] * d[26] * d[31] * d[60] + 2 * d[17] * d[21] * d[32] * d[60] + 2 * d[16] * d[22] * d[32] * d[60] - 4 * d[15] * d[23] * d[32] * d[60] - 4 * d[14] * d[24] * d[32] * d[60] + 2 * d[13] * d[25] * d[32] * d[60] + 2 * d[12] * d[26] * d[32] * d[60] + 2 * d[11] * d[19] * d[33] * d[60] + 2 * d[10] * d[20] * d[33] * d[60] - 4 * d[14] * d[23] * d[33] * d[60] - 2 * d[12] * d[20] * d[34] * d[60] - 2 * d[11] * d[21] * d[34] * d[60] + 2 * d[14] * d[22] * d[34] * d[60] + 2 * d[13] * d[23] * d[34] * d[60] - 2 * d[13] * d[19] * d[35] * d[60] + 2 * d[14] * d[21] * d[35] * d[60] - 2 * d[10] * d[22] * d[35] * d[60] + 2 * d[12] * d[23] * d[35] * d[60] + 2 * d[16] * d[20] * d[27] * d[61] - 2 * d[17] * d[23] * d[27] * d[61] + 2 * d[11] * d[25] * d[27] * d[61] - 2 * d[14] * d[26] * d[27] * d[61] + 2 * d[16] * d[18] * d[29] * d[61] - 2 * d[15] * d[21] * d[29] * d[61] - 2 * d[12] * d[24] * d[29] * d[61] + 2 * d[9] * d[25] * d[29] * d[61] - 2 * d[15] * d[20] * d[30] * d[61] + 2 * d[17] * d[22] * d[30] * d[61] - 2 * d[11] * d[24] * d[30] * d[61] + 2 * d[13] * d[26] * d[30] * d[61] + 2 * d[17] * d[21] * d[31] * d[61] - 4 * d[16] * d[22] * d[31] * d[61] + 2 * d[15] * d[23] * d[31] * d[61] + 2 * d[14] * d[24] * d[31] * d[61] - 4 * d[13] * d[25] * d[31] * d[61] + 2 * d[12] * d[26] * d[31] * d[61] - 2 * d[17] * d[18] * d[32] * d[61] + 2 * d[15] * d[22] * d[32] * d[61] + 2 * d[13] * d[24] * d[32] * d[61] - 2 * d[9] * d[26] * d[32] * d[61] - 2 * d[12] * d[20] * d[33] * d[61] - 2 * d[11] * d[21] * d[33] * d[61] + 2 * d[14] * d[22] * d[33] * d[61] + 2 * d[13] * d[23] * d[33] * d[61] + 2 * d[11] * d[18] * d[34] * d[61] + 2 * d[9] * d[20] * d[34] * d[61] - 4 * d[13] * d[22] * d[34] * d[61] - 2 * d[14] * d[18] * d[35] * d[61] + 2 * d[13] * d[21] * d[35] * d[61] + 2 * d[12] * d[22] * d[35] * d[61] - 2 * d[9] * d[23] * d[35] * d[61] + 2 * d[17] * d[19] * d[27] * d[62] - 2 * d[16] * d[23] * d[27] * d[62] - 2 * d[14] * d[25] * d[27] * d[62] + 2 * d[10] * d[26] * d[27] * d[62] + 2 * d[17] * d[18] * d[28] * d[62] - 2 * d[15] * d[22] * d[28] * d[62] - 2 * d[13] * d[24] * d[28] * d[62] + 2 * d[9] * d[26] * d[28] * d[62] - 4 * d[17] * d[21] * d[30] * d[62] + 2 * d[16] * d[22] * d[30] * d[62] + 2 * d[15] * d[23] * d[30] * d[62] + 2 * d[14] * d[24] * d[30] * d[62] + 2 * d[13] * d[25] * d[30] * d[62] - 4 * d[12] * d[26] * d[30] * d[62] - 2 * d[15] * d[19] * d[31] * d[62] + 2 * d[16] * d[21] * d[31] * d[62] - 2 * d[10] * d[24] * d[31] * d[62] + 2 * d[12] * d[25] * d[31] * d[62] - 2 * d[16] * d[18] * d[32] * d[62] + 2 * d[15] * d[21] * d[32] * d[62] + 2 * d[12] * d[24] * d[32] * d[62] - 2 * d[9] * d[25] * d[32] * d[62] - 2 * d[13] * d[19] * d[33] * d[62] + 2 * d[14] * d[21] * d[33] * d[62] - 2 * d[10] * d[22] * d[33] * d[62] + 2 * d[12] * d[23] * d[33] * d[62] - 2 * d[14] * d[18] * d[34] * d[62] + 2 * d[13] * d[21] * d[34] * d[62] + 2 * d[12] * d[22] * d[34] * d[62] - 2 * d[9] * d[23] * d[34] * d[62] + 2 * d[10] * d[18] * d[35] * d[62] + 2 * d[9] * d[19] * d[35] * d[62] - 4 * d[12] * d[21] * d[35] * d[62] - d[11] * d[19] * d[27] * d[71] - d[10] * d[20] * d[27] * d[71] + 2 * d[14] * d[23] * d[27] * d[71] - d[11] * d[18] * d[28] * d[71] - d[9] * d[20] * d[28] * d[71] + 2 * d[13] * d[22] * d[28] * d[71] - d[10] * d[18] * d[29] * d[71] - d[9] * d[19] * d[29] * d[71] + 2 * d[12] * d[21] * d[29] * d[71] + 2 * d[12] * d[20] * d[30] * d[71] + 2 * d[11] * d[21] * d[30] * d[71] - 2 * d[14] * d[22] * d[30] * d[71] - 2 * d[13] * d[23] * d[30] * d[71] + 2 * d[13] * d[19] * d[31] * d[71] - 2 * d[14] * d[21] * d[31] * d[71] + 2 * d[10] * d[22] * d[31] * d[71] - 2 * d[12] * d[23] * d[31] * d[71] + 2 * d[14] * d[18] * d[32] * d[71] - 2 * d[13] * d[21] * d[32] * d[71] - 2 * d[12] * d[22] * d[32] * d[71] + 2 * d[9] * d[23] * d[32] * d[71];
    coeffs[118] = 2 * d[20] * d[24] * d[28] * d[60] - 2 * d[22] * d[26] * d[28] * d[60] + 2 * d[19] * d[24] * d[29] * d[60] - 2 * d[21] * d[25] * d[29] * d[60] - 2 * d[20] * d[25] * d[30] * d[60] + 2 * d[23] * d[26] * d[30] * d[60] + 2 * d[23] * d[25] * d[31] * d[60] - 2 * d[19] * d[26] * d[31] * d[60] - 4 * d[23] * d[24] * d[32] * d[60] + 2 * d[22] * d[25] * d[32] * d[60] + 2 * d[21] * d[26] * d[32] * d[60] + 2 * d[19] * d[20] * d[33] * d[60] - 2 * std::pow(d[23], 2) * d[33] * d[60] - 2 * d[20] * d[21] * d[34] * d[60] + 2 * d[22] * d[23] * d[34] * d[60] - 2 * d[19] * d[22] * d[35] * d[60] + 2 * d[21] * d[23] * d[35] * d[60] + 2 * d[20] * d[25] * d[27] * d[61] - 2 * d[23] * d[26] * d[27] * d[61] - 2 * d[21] * d[24] * d[29] * d[61] + 2 * d[18] * d[25] * d[29] * d[61] - 2 * d[20] * d[24] * d[30] * d[61] + 2 * d[22] * d[26] * d[30] * d[61] + 2 * d[23] * d[24] * d[31] * d[61] - 4 * d[22] * d[25] * d[31] * d[61] + 2 * d[21] * d[26] * d[31] * d[61] + 2 * d[22] * d[24] * d[32] * d[61] - 2 * d[18] * d[26] * d[32] * d[61] - 2 * d[20] * d[21] * d[33] * d[61] + 2 * d[22] * d[23] * d[33] * d[61] + 2 * d[18] * d[20] * d[34] * d[61] - 2 * std::pow(d[22], 2) * d[34] * d[61] + 2 * d[21] * d[22] * d[35] * d[61] - 2 * d[18] * d[23] * d[35] * d[61] - 2 * d[23] * d[25] * d[27] * d[62] + 2 * d[19] * d[26] * d[27] * d[62] - 2 * d[22] * d[24] * d[28] * d[62] + 2 * d[18] * d[26] * d[28] * d[62] + 2 * d[23] * d[24] * d[30] * d[62] + 2 * d[22] * d[25] * d[30] * d[62] - 4 * d[21] * d[26] * d[30] * d[62] - 2 * d[19] * d[24] * d[31] * d[62] + 2 * d[21] * d[25] * d[31] * d[62] + 2 * d[21] * d[24] * d[32] * d[62] - 2 * d[18] * d[25] * d[32] * d[62] - 2 * d[19] * d[22] * d[33] * d[62] + 2 * d[21] * d[23] * d[33] * d[62] + 2 * d[21] * d[22] * d[34] * d[62] - 2 * d[18] * d[23] * d[34] * d[62] + 2 * d[18] * d[19] * d[35] * d[62] - 2 * std::pow(d[21], 2) * d[35] * d[62] - d[19] * d[20] * d[27] * d[71] + std::pow(d[23], 2) * d[27] * d[71] - d[18] * d[20] * d[28] * d[71] + std::pow(d[22], 2) * d[28] * d[71] - d[18] * d[19] * d[29] * d[71] + std::pow(d[21], 2) * d[29] * d[71] + 2 * d[20] * d[21] * d[30] * d[71] - 2 * d[22] * d[23] * d[30] * d[71] + 2 * d[19] * d[22] * d[31] * d[71] - 2 * d[21] * d[23] * d[31] * d[71] - 2 * d[21] * d[22] * d[32] * d[71] + 2 * d[18] * d[23] * d[32] * d[71];
    coeffs[119] = 2 * d[15] * d[28] * d[29] * d[60] - 2 * d[16] * d[29] * d[30] * d[60] - 2 * d[17] * d[28] * d[31] * d[60] + 2 * d[17] * d[30] * d[32] * d[60] + 2 * d[16] * d[31] * d[32] * d[60] - 2 * d[15] * std::pow(d[32], 2) * d[60] + 2 * d[11] * d[28] * d[33] * d[60] + 2 * d[10] * d[29] * d[33] * d[60] - 4 * d[14] * d[32] * d[33] * d[60] - 2 * d[12] * d[29] * d[34] * d[60] - 2 * d[11] * d[30] * d[34] * d[60] + 2 * d[14] * d[31] * d[34] * d[60] + 2 * d[13] * d[32] * d[34] * d[60] - 2 * d[13] * d[28] * d[35] * d[60] + 2 * d[14] * d[30] * d[35] * d[60] - 2 * d[10] * d[31] * d[35] * d[60] + 2 * d[12] * d[32] * d[35] * d[60] + 2 * d[16] * d[27] * d[29] * d[61] - 2 * d[15] * d[29] * d[30] * d[61] + 2 * d[17] * d[30] * d[31] * d[61] - 2 * d[16] * std::pow(d[31], 2) * d[61] - 2 * d[17] * d[27] * d[32] * d[61] + 2 * d[15] * d[31] * d[32] * d[61] - 2 * d[12] * d[29] * d[33] * d[61] - 2 * d[11] * d[30] * d[33] * d[61] + 2 * d[14] * d[31] * d[33] * d[61] + 2 * d[13] * d[32] * d[33] * d[61] + 2 * d[11] * d[27] * d[34] * d[61] + 2 * d[9] * d[29] * d[34] * d[61] - 4 * d[13] * d[31] * d[34] * d[61] - 2 * d[14] * d[27] * d[35] * d[61] + 2 * d[13] * d[30] * d[35] * d[61] + 2 * d[12] * d[31] * d[35] * d[61] - 2 * d[9] * d[32] * d[35] * d[61] + 2 * d[17] * d[27] * d[28] * d[62] - 2 * d[17] * std::pow(d[30], 2) * d[62] - 2 * d[15] * d[28] * d[31] * d[62] + 2 * d[16] * d[30] * d[31] * d[62] - 2 * d[16] * d[27] * d[32] * d[62] + 2 * d[15] * d[30] * d[32] * d[62] - 2 * d[13] * d[28] * d[33] * d[62] + 2 * d[14] * d[30] * d[33] * d[62] - 2 * d[10] * d[31] * d[33] * d[62] + 2 * d[12] * d[32] * d[33] * d[62] - 2 * d[14] * d[27] * d[34] * d[62] + 2 * d[13] * d[30] * d[34] * d[62] + 2 * d[12] * d[31] * d[34] * d[62] - 2 * d[9] * d[32] * d[34] * d[62] + 2 * d[10] * d[27] * d[35] * d[62] + 2 * d[9] * d[28] * d[35] * d[62] - 4 * d[12] * d[30] * d[35] * d[62] - d[11] * d[27] * d[28] * d[71] - d[10] * d[27] * d[29] * d[71] - d[9] * d[28] * d[29] * d[71] + 2 * d[12] * d[29] * d[30] * d[71] + d[11] * std::pow(d[30], 2) * d[71] + 2 * d[13] * d[28] * d[31] * d[71] - 2 * d[14] * d[30] * d[31] * d[71] + d[10] * std::pow(d[31], 2) * d[71] + 2 * d[14] * d[27] * d[32] * d[71] - 2 * d[13] * d[30] * d[32] * d[71] - 2 * d[12] * d[31] * d[32] * d[71] + d[9] * std::pow(d[32], 2) * d[71];
    coeffs[120] = 2 * d[24] * d[28] * d[29] * d[60] - 2 * d[25] * d[29] * d[30] * d[60] - 2 * d[26] * d[28] * d[31] * d[60] + 2 * d[26] * d[30] * d[32] * d[60] + 2 * d[25] * d[31] * d[32] * d[60] - 2 * d[24] * std::pow(d[32], 2) * d[60] + 2 * d[20] * d[28] * d[33] * d[60] + 2 * d[19] * d[29] * d[33] * d[60] - 4 * d[23] * d[32] * d[33] * d[60] - 2 * d[21] * d[29] * d[34] * d[60] - 2 * d[20] * d[30] * d[34] * d[60] + 2 * d[23] * d[31] * d[34] * d[60] + 2 * d[22] * d[32] * d[34] * d[60] - 2 * d[22] * d[28] * d[35] * d[60] + 2 * d[23] * d[30] * d[35] * d[60] - 2 * d[19] * d[31] * d[35] * d[60] + 2 * d[21] * d[32] * d[35] * d[60] + 2 * d[25] * d[27] * d[29] * d[61] - 2 * d[24] * d[29] * d[30] * d[61] + 2 * d[26] * d[30] * d[31] * d[61] - 2 * d[25] * std::pow(d[31], 2) * d[61] - 2 * d[26] * d[27] * d[32] * d[61] + 2 * d[24] * d[31] * d[32] * d[61] - 2 * d[21] * d[29] * d[33] * d[61] - 2 * d[20] * d[30] * d[33] * d[61] + 2 * d[23] * d[31] * d[33] * d[61] + 2 * d[22] * d[32] * d[33] * d[61] + 2 * d[20] * d[27] * d[34] * d[61] + 2 * d[18] * d[29] * d[34] * d[61] - 4 * d[22] * d[31] * d[34] * d[61] - 2 * d[23] * d[27] * d[35] * d[61] + 2 * d[22] * d[30] * d[35] * d[61] + 2 * d[21] * d[31] * d[35] * d[61] - 2 * d[18] * d[32] * d[35] * d[61] + 2 * d[26] * d[27] * d[28] * d[62] - 2 * d[26] * std::pow(d[30], 2) * d[62] - 2 * d[24] * d[28] * d[31] * d[62] + 2 * d[25] * d[30] * d[31] * d[62] - 2 * d[25] * d[27] * d[32] * d[62] + 2 * d[24] * d[30] * d[32] * d[62] - 2 * d[22] * d[28] * d[33] * d[62] + 2 * d[23] * d[30] * d[33] * d[62] - 2 * d[19] * d[31] * d[33] * d[62] + 2 * d[21] * d[32] * d[33] * d[62] - 2 * d[23] * d[27] * d[34] * d[62] + 2 * d[22] * d[30] * d[34] * d[62] + 2 * d[21] * d[31] * d[34] * d[62] - 2 * d[18] * d[32] * d[34] * d[62] + 2 * d[19] * d[27] * d[35] * d[62] + 2 * d[18] * d[28] * d[35] * d[62] - 4 * d[21] * d[30] * d[35] * d[62] - d[20] * d[27] * d[28] * d[71] - d[19] * d[27] * d[29] * d[71] - d[18] * d[28] * d[29] * d[71] + 2 * d[21] * d[29] * d[30] * d[71] + d[20] * std::pow(d[30], 2) * d[71] + 2 * d[22] * d[28] * d[31] * d[71] - 2 * d[23] * d[30] * d[31] * d[71] + d[19] * std::pow(d[31], 2) * d[71] + 2 * d[23] * d[27] * d[32] * d[71] - 2 * d[22] * d[30] * d[32] * d[71] - 2 * d[21] * d[31] * d[32] * d[71] + d[18] * std::pow(d[32], 2) * d[71];
    coeffs[121] = 2 * d[28] * d[29] * d[33] * d[60] - 2 * std::pow(d[32], 2) * d[33] * d[60] - 2 * d[29] * d[30] * d[34] * d[60] + 2 * d[31] * d[32] * d[34] * d[60] - 2 * d[28] * d[31] * d[35] * d[60] + 2 * d[30] * d[32] * d[35] * d[60] - 2 * d[29] * d[30] * d[33] * d[61] + 2 * d[31] * d[32] * d[33] * d[61] + 2 * d[27] * d[29] * d[34] * d[61] - 2 * std::pow(d[31], 2) * d[34] * d[61] + 2 * d[30] * d[31] * d[35] * d[61] - 2 * d[27] * d[32] * d[35] * d[61] - 2 * d[28] * d[31] * d[33] * d[62] + 2 * d[30] * d[32] * d[33] * d[62] + 2 * d[30] * d[31] * d[34] * d[62] - 2 * d[27] * d[32] * d[34] * d[62] + 2 * d[27] * d[28] * d[35] * d[62] - 2 * std::pow(d[30], 2) * d[35] * d[62] - d[27] * d[28] * d[29] * d[71] + d[29] * std::pow(d[30], 2) * d[71] + d[28] * std::pow(d[31], 2) * d[71] - 2 * d[30] * d[31] * d[32] * d[71] + d[27] * std::pow(d[32], 2) * d[71];
    coeffs[122] = 2 * d[11] * d[15] * d[37] * d[60] - 2 * d[13] * d[17] * d[37] * d[60] + 2 * d[10] * d[15] * d[38] * d[60] - 2 * d[12] * d[16] * d[38] * d[60] - 2 * d[11] * d[16] * d[39] * d[60] + 2 * d[14] * d[17] * d[39] * d[60] + 2 * d[14] * d[16] * d[40] * d[60] - 2 * d[10] * d[17] * d[40] * d[60] - 4 * d[14] * d[15] * d[41] * d[60] + 2 * d[13] * d[16] * d[41] * d[60] + 2 * d[12] * d[17] * d[41] * d[60] + 2 * d[10] * d[11] * d[42] * d[60] - 2 * std::pow(d[14], 2) * d[42] * d[60] - 2 * d[11] * d[12] * d[43] * d[60] + 2 * d[13] * d[14] * d[43] * d[60] - 2 * d[10] * d[13] * d[44] * d[60] + 2 * d[12] * d[14] * d[44] * d[60] + 2 * d[11] * d[16] * d[36] * d[61] - 2 * d[14] * d[17] * d[36] * d[61] - 2 * d[12] * d[15] * d[38] * d[61] + 2 * d[9] * d[16] * d[38] * d[61] - 2 * d[11] * d[15] * d[39] * d[61] + 2 * d[13] * d[17] * d[39] * d[61] + 2 * d[14] * d[15] * d[40] * d[61] - 4 * d[13] * d[16] * d[40] * d[61] + 2 * d[12] * d[17] * d[40] * d[61] + 2 * d[13] * d[15] * d[41] * d[61] - 2 * d[9] * d[17] * d[41] * d[61] - 2 * d[11] * d[12] * d[42] * d[61] + 2 * d[13] * d[14] * d[42] * d[61] + 2 * d[9] * d[11] * d[43] * d[61] - 2 * std::pow(d[13], 2) * d[43] * d[61] + 2 * d[12] * d[13] * d[44] * d[61] - 2 * d[9] * d[14] * d[44] * d[61] - 2 * d[14] * d[16] * d[36] * d[62] + 2 * d[10] * d[17] * d[36] * d[62] - 2 * d[13] * d[15] * d[37] * d[62] + 2 * d[9] * d[17] * d[37] * d[62] + 2 * d[14] * d[15] * d[39] * d[62] + 2 * d[13] * d[16] * d[39] * d[62] - 4 * d[12] * d[17] * d[39] * d[62] - 2 * d[10] * d[15] * d[40] * d[62] + 2 * d[12] * d[16] * d[40] * d[62] + 2 * d[12] * d[15] * d[41] * d[62] - 2 * d[9] * d[16] * d[41] * d[62] - 2 * d[10] * d[13] * d[42] * d[62] + 2 * d[12] * d[14] * d[42] * d[62] + 2 * d[12] * d[13] * d[43] * d[62] - 2 * d[9] * d[14] * d[43] * d[62] + 2 * d[9] * d[10] * d[44] * d[62] - 2 * std::pow(d[12], 2) * d[44] * d[62] - d[10] * d[11] * d[36] * d[71] + std::pow(d[14], 2) * d[36] * d[71] - d[9] * d[11] * d[37] * d[71] + std::pow(d[13], 2) * d[37] * d[71] - d[9] * d[10] * d[38] * d[71] + std::pow(d[12], 2) * d[38] * d[71] + 2 * d[11] * d[12] * d[39] * d[71] - 2 * d[13] * d[14] * d[39] * d[71] + 2 * d[10] * d[13] * d[40] * d[71] - 2 * d[12] * d[14] * d[40] * d[71] - 2 * d[12] * d[13] * d[41] * d[71] + 2 * d[9] * d[14] * d[41] * d[71];
    coeffs[123] = 2 * d[15] * d[20] * d[37] * d[60] - 2 * d[17] * d[22] * d[37] * d[60] + 2 * d[11] * d[24] * d[37] * d[60] - 2 * d[13] * d[26] * d[37] * d[60] + 2 * d[15] * d[19] * d[38] * d[60] - 2 * d[16] * d[21] * d[38] * d[60] + 2 * d[10] * d[24] * d[38] * d[60] - 2 * d[12] * d[25] * d[38] * d[60] - 2 * d[16] * d[20] * d[39] * d[60] + 2 * d[17] * d[23] * d[39] * d[60] - 2 * d[11] * d[25] * d[39] * d[60] + 2 * d[14] * d[26] * d[39] * d[60] - 2 * d[17] * d[19] * d[40] * d[60] + 2 * d[16] * d[23] * d[40] * d[60] + 2 * d[14] * d[25] * d[40] * d[60] - 2 * d[10] * d[26] * d[40] * d[60] + 2 * d[17] * d[21] * d[41] * d[60] + 2 * d[16] * d[22] * d[41] * d[60] - 4 * d[15] * d[23] * d[41] * d[60] - 4 * d[14] * d[24] * d[41] * d[60] + 2 * d[13] * d[25] * d[41] * d[60] + 2 * d[12] * d[26] * d[41] * d[60] + 2 * d[11] * d[19] * d[42] * d[60] + 2 * d[10] * d[20] * d[42] * d[60] - 4 * d[14] * d[23] * d[42] * d[60] - 2 * d[12] * d[20] * d[43] * d[60] - 2 * d[11] * d[21] * d[43] * d[60] + 2 * d[14] * d[22] * d[43] * d[60] + 2 * d[13] * d[23] * d[43] * d[60] - 2 * d[13] * d[19] * d[44] * d[60] + 2 * d[14] * d[21] * d[44] * d[60] - 2 * d[10] * d[22] * d[44] * d[60] + 2 * d[12] * d[23] * d[44] * d[60] + 2 * d[16] * d[20] * d[36] * d[61] - 2 * d[17] * d[23] * d[36] * d[61] + 2 * d[11] * d[25] * d[36] * d[61] - 2 * d[14] * d[26] * d[36] * d[61] + 2 * d[16] * d[18] * d[38] * d[61] - 2 * d[15] * d[21] * d[38] * d[61] - 2 * d[12] * d[24] * d[38] * d[61] + 2 * d[9] * d[25] * d[38] * d[61] - 2 * d[15] * d[20] * d[39] * d[61] + 2 * d[17] * d[22] * d[39] * d[61] - 2 * d[11] * d[24] * d[39] * d[61] + 2 * d[13] * d[26] * d[39] * d[61] + 2 * d[17] * d[21] * d[40] * d[61] - 4 * d[16] * d[22] * d[40] * d[61] + 2 * d[15] * d[23] * d[40] * d[61] + 2 * d[14] * d[24] * d[40] * d[61] - 4 * d[13] * d[25] * d[40] * d[61] + 2 * d[12] * d[26] * d[40] * d[61] - 2 * d[17] * d[18] * d[41] * d[61] + 2 * d[15] * d[22] * d[41] * d[61] + 2 * d[13] * d[24] * d[41] * d[61] - 2 * d[9] * d[26] * d[41] * d[61] - 2 * d[12] * d[20] * d[42] * d[61] - 2 * d[11] * d[21] * d[42] * d[61] + 2 * d[14] * d[22] * d[42] * d[61] + 2 * d[13] * d[23] * d[42] * d[61] + 2 * d[11] * d[18] * d[43] * d[61] + 2 * d[9] * d[20] * d[43] * d[61] - 4 * d[13] * d[22] * d[43] * d[61] - 2 * d[14] * d[18] * d[44] * d[61] + 2 * d[13] * d[21] * d[44] * d[61] + 2 * d[12] * d[22] * d[44] * d[61] - 2 * d[9] * d[23] * d[44] * d[61] + 2 * d[17] * d[19] * d[36] * d[62] - 2 * d[16] * d[23] * d[36] * d[62] - 2 * d[14] * d[25] * d[36] * d[62] + 2 * d[10] * d[26] * d[36] * d[62] + 2 * d[17] * d[18] * d[37] * d[62] - 2 * d[15] * d[22] * d[37] * d[62] - 2 * d[13] * d[24] * d[37] * d[62] + 2 * d[9] * d[26] * d[37] * d[62] - 4 * d[17] * d[21] * d[39] * d[62] + 2 * d[16] * d[22] * d[39] * d[62] + 2 * d[15] * d[23] * d[39] * d[62] + 2 * d[14] * d[24] * d[39] * d[62] + 2 * d[13] * d[25] * d[39] * d[62] - 4 * d[12] * d[26] * d[39] * d[62] - 2 * d[15] * d[19] * d[40] * d[62] + 2 * d[16] * d[21] * d[40] * d[62] - 2 * d[10] * d[24] * d[40] * d[62] + 2 * d[12] * d[25] * d[40] * d[62] - 2 * d[16] * d[18] * d[41] * d[62] + 2 * d[15] * d[21] * d[41] * d[62] + 2 * d[12] * d[24] * d[41] * d[62] - 2 * d[9] * d[25] * d[41] * d[62] - 2 * d[13] * d[19] * d[42] * d[62] + 2 * d[14] * d[21] * d[42] * d[62] - 2 * d[10] * d[22] * d[42] * d[62] + 2 * d[12] * d[23] * d[42] * d[62] - 2 * d[14] * d[18] * d[43] * d[62] + 2 * d[13] * d[21] * d[43] * d[62] + 2 * d[12] * d[22] * d[43] * d[62] - 2 * d[9] * d[23] * d[43] * d[62] + 2 * d[10] * d[18] * d[44] * d[62] + 2 * d[9] * d[19] * d[44] * d[62] - 4 * d[12] * d[21] * d[44] * d[62] - d[11] * d[19] * d[36] * d[71] - d[10] * d[20] * d[36] * d[71] + 2 * d[14] * d[23] * d[36] * d[71] - d[11] * d[18] * d[37] * d[71] - d[9] * d[20] * d[37] * d[71] + 2 * d[13] * d[22] * d[37] * d[71] - d[10] * d[18] * d[38] * d[71] - d[9] * d[19] * d[38] * d[71] + 2 * d[12] * d[21] * d[38] * d[71] + 2 * d[12] * d[20] * d[39] * d[71] + 2 * d[11] * d[21] * d[39] * d[71] - 2 * d[14] * d[22] * d[39] * d[71] - 2 * d[13] * d[23] * d[39] * d[71] + 2 * d[13] * d[19] * d[40] * d[71] - 2 * d[14] * d[21] * d[40] * d[71] + 2 * d[10] * d[22] * d[40] * d[71] - 2 * d[12] * d[23] * d[40] * d[71] + 2 * d[14] * d[18] * d[41] * d[71] - 2 * d[13] * d[21] * d[41] * d[71] - 2 * d[12] * d[22] * d[41] * d[71] + 2 * d[9] * d[23] * d[41] * d[71];
    coeffs[124] = 2 * d[20] * d[24] * d[37] * d[60] - 2 * d[22] * d[26] * d[37] * d[60] + 2 * d[19] * d[24] * d[38] * d[60] - 2 * d[21] * d[25] * d[38] * d[60] - 2 * d[20] * d[25] * d[39] * d[60] + 2 * d[23] * d[26] * d[39] * d[60] + 2 * d[23] * d[25] * d[40] * d[60] - 2 * d[19] * d[26] * d[40] * d[60] - 4 * d[23] * d[24] * d[41] * d[60] + 2 * d[22] * d[25] * d[41] * d[60] + 2 * d[21] * d[26] * d[41] * d[60] + 2 * d[19] * d[20] * d[42] * d[60] - 2 * std::pow(d[23], 2) * d[42] * d[60] - 2 * d[20] * d[21] * d[43] * d[60] + 2 * d[22] * d[23] * d[43] * d[60] - 2 * d[19] * d[22] * d[44] * d[60] + 2 * d[21] * d[23] * d[44] * d[60] + 2 * d[20] * d[25] * d[36] * d[61] - 2 * d[23] * d[26] * d[36] * d[61] - 2 * d[21] * d[24] * d[38] * d[61] + 2 * d[18] * d[25] * d[38] * d[61] - 2 * d[20] * d[24] * d[39] * d[61] + 2 * d[22] * d[26] * d[39] * d[61] + 2 * d[23] * d[24] * d[40] * d[61] - 4 * d[22] * d[25] * d[40] * d[61] + 2 * d[21] * d[26] * d[40] * d[61] + 2 * d[22] * d[24] * d[41] * d[61] - 2 * d[18] * d[26] * d[41] * d[61] - 2 * d[20] * d[21] * d[42] * d[61] + 2 * d[22] * d[23] * d[42] * d[61] + 2 * d[18] * d[20] * d[43] * d[61] - 2 * std::pow(d[22], 2) * d[43] * d[61] + 2 * d[21] * d[22] * d[44] * d[61] - 2 * d[18] * d[23] * d[44] * d[61] - 2 * d[23] * d[25] * d[36] * d[62] + 2 * d[19] * d[26] * d[36] * d[62] - 2 * d[22] * d[24] * d[37] * d[62] + 2 * d[18] * d[26] * d[37] * d[62] + 2 * d[23] * d[24] * d[39] * d[62] + 2 * d[22] * d[25] * d[39] * d[62] - 4 * d[21] * d[26] * d[39] * d[62] - 2 * d[19] * d[24] * d[40] * d[62] + 2 * d[21] * d[25] * d[40] * d[62] + 2 * d[21] * d[24] * d[41] * d[62] - 2 * d[18] * d[25] * d[41] * d[62] - 2 * d[19] * d[22] * d[42] * d[62] + 2 * d[21] * d[23] * d[42] * d[62] + 2 * d[21] * d[22] * d[43] * d[62] - 2 * d[18] * d[23] * d[43] * d[62] + 2 * d[18] * d[19] * d[44] * d[62] - 2 * std::pow(d[21], 2) * d[44] * d[62] - d[19] * d[20] * d[36] * d[71] + std::pow(d[23], 2) * d[36] * d[71] - d[18] * d[20] * d[37] * d[71] + std::pow(d[22], 2) * d[37] * d[71] - d[18] * d[19] * d[38] * d[71] + std::pow(d[21], 2) * d[38] * d[71] + 2 * d[20] * d[21] * d[39] * d[71] - 2 * d[22] * d[23] * d[39] * d[71] + 2 * d[19] * d[22] * d[40] * d[71] - 2 * d[21] * d[23] * d[40] * d[71] - 2 * d[21] * d[22] * d[41] * d[71] + 2 * d[18] * d[23] * d[41] * d[71];
    coeffs[125] = 2 * d[15] * d[29] * d[37] * d[60] - 2 * d[17] * d[31] * d[37] * d[60] + 2 * d[11] * d[33] * d[37] * d[60] - 2 * d[13] * d[35] * d[37] * d[60] + 2 * d[15] * d[28] * d[38] * d[60] - 2 * d[16] * d[30] * d[38] * d[60] + 2 * d[10] * d[33] * d[38] * d[60] - 2 * d[12] * d[34] * d[38] * d[60] - 2 * d[16] * d[29] * d[39] * d[60] + 2 * d[17] * d[32] * d[39] * d[60] - 2 * d[11] * d[34] * d[39] * d[60] + 2 * d[14] * d[35] * d[39] * d[60] - 2 * d[17] * d[28] * d[40] * d[60] + 2 * d[16] * d[32] * d[40] * d[60] + 2 * d[14] * d[34] * d[40] * d[60] - 2 * d[10] * d[35] * d[40] * d[60] + 2 * d[17] * d[30] * d[41] * d[60] + 2 * d[16] * d[31] * d[41] * d[60] - 4 * d[15] * d[32] * d[41] * d[60] - 4 * d[14] * d[33] * d[41] * d[60] + 2 * d[13] * d[34] * d[41] * d[60] + 2 * d[12] * d[35] * d[41] * d[60] + 2 * d[11] * d[28] * d[42] * d[60] + 2 * d[10] * d[29] * d[42] * d[60] - 4 * d[14] * d[32] * d[42] * d[60] - 2 * d[12] * d[29] * d[43] * d[60] - 2 * d[11] * d[30] * d[43] * d[60] + 2 * d[14] * d[31] * d[43] * d[60] + 2 * d[13] * d[32] * d[43] * d[60] - 2 * d[13] * d[28] * d[44] * d[60] + 2 * d[14] * d[30] * d[44] * d[60] - 2 * d[10] * d[31] * d[44] * d[60] + 2 * d[12] * d[32] * d[44] * d[60] + 2 * d[16] * d[29] * d[36] * d[61] - 2 * d[17] * d[32] * d[36] * d[61] + 2 * d[11] * d[34] * d[36] * d[61] - 2 * d[14] * d[35] * d[36] * d[61] + 2 * d[16] * d[27] * d[38] * d[61] - 2 * d[15] * d[30] * d[38] * d[61] - 2 * d[12] * d[33] * d[38] * d[61] + 2 * d[9] * d[34] * d[38] * d[61] - 2 * d[15] * d[29] * d[39] * d[61] + 2 * d[17] * d[31] * d[39] * d[61] - 2 * d[11] * d[33] * d[39] * d[61] + 2 * d[13] * d[35] * d[39] * d[61] + 2 * d[17] * d[30] * d[40] * d[61] - 4 * d[16] * d[31] * d[40] * d[61] + 2 * d[15] * d[32] * d[40] * d[61] + 2 * d[14] * d[33] * d[40] * d[61] - 4 * d[13] * d[34] * d[40] * d[61] + 2 * d[12] * d[35] * d[40] * d[61] - 2 * d[17] * d[27] * d[41] * d[61] + 2 * d[15] * d[31] * d[41] * d[61] + 2 * d[13] * d[33] * d[41] * d[61] - 2 * d[9] * d[35] * d[41] * d[61] - 2 * d[12] * d[29] * d[42] * d[61] - 2 * d[11] * d[30] * d[42] * d[61] + 2 * d[14] * d[31] * d[42] * d[61] + 2 * d[13] * d[32] * d[42] * d[61] + 2 * d[11] * d[27] * d[43] * d[61] + 2 * d[9] * d[29] * d[43] * d[61] - 4 * d[13] * d[31] * d[43] * d[61] - 2 * d[14] * d[27] * d[44] * d[61] + 2 * d[13] * d[30] * d[44] * d[61] + 2 * d[12] * d[31] * d[44] * d[61] - 2 * d[9] * d[32] * d[44] * d[61] + 2 * d[17] * d[28] * d[36] * d[62] - 2 * d[16] * d[32] * d[36] * d[62] - 2 * d[14] * d[34] * d[36] * d[62] + 2 * d[10] * d[35] * d[36] * d[62] + 2 * d[17] * d[27] * d[37] * d[62] - 2 * d[15] * d[31] * d[37] * d[62] - 2 * d[13] * d[33] * d[37] * d[62] + 2 * d[9] * d[35] * d[37] * d[62] - 4 * d[17] * d[30] * d[39] * d[62] + 2 * d[16] * d[31] * d[39] * d[62] + 2 * d[15] * d[32] * d[39] * d[62] + 2 * d[14] * d[33] * d[39] * d[62] + 2 * d[13] * d[34] * d[39] * d[62] - 4 * d[12] * d[35] * d[39] * d[62] - 2 * d[15] * d[28] * d[40] * d[62] + 2 * d[16] * d[30] * d[40] * d[62] - 2 * d[10] * d[33] * d[40] * d[62] + 2 * d[12] * d[34] * d[40] * d[62] - 2 * d[16] * d[27] * d[41] * d[62] + 2 * d[15] * d[30] * d[41] * d[62] + 2 * d[12] * d[33] * d[41] * d[62] - 2 * d[9] * d[34] * d[41] * d[62] - 2 * d[13] * d[28] * d[42] * d[62] + 2 * d[14] * d[30] * d[42] * d[62] - 2 * d[10] * d[31] * d[42] * d[62] + 2 * d[12] * d[32] * d[42] * d[62] - 2 * d[14] * d[27] * d[43] * d[62] + 2 * d[13] * d[30] * d[43] * d[62] + 2 * d[12] * d[31] * d[43] * d[62] - 2 * d[9] * d[32] * d[43] * d[62] + 2 * d[10] * d[27] * d[44] * d[62] + 2 * d[9] * d[28] * d[44] * d[62] - 4 * d[12] * d[30] * d[44] * d[62] - d[11] * d[28] * d[36] * d[71] - d[10] * d[29] * d[36] * d[71] + 2 * d[14] * d[32] * d[36] * d[71] - d[11] * d[27] * d[37] * d[71] - d[9] * d[29] * d[37] * d[71] + 2 * d[13] * d[31] * d[37] * d[71] - d[10] * d[27] * d[38] * d[71] - d[9] * d[28] * d[38] * d[71] + 2 * d[12] * d[30] * d[38] * d[71] + 2 * d[12] * d[29] * d[39] * d[71] + 2 * d[11] * d[30] * d[39] * d[71] - 2 * d[14] * d[31] * d[39] * d[71] - 2 * d[13] * d[32] * d[39] * d[71] + 2 * d[13] * d[28] * d[40] * d[71] - 2 * d[14] * d[30] * d[40] * d[71] + 2 * d[10] * d[31] * d[40] * d[71] - 2 * d[12] * d[32] * d[40] * d[71] + 2 * d[14] * d[27] * d[41] * d[71] - 2 * d[13] * d[30] * d[41] * d[71] - 2 * d[12] * d[31] * d[41] * d[71] + 2 * d[9] * d[32] * d[41] * d[71];
    coeffs[126] = 2 * d[24] * d[29] * d[37] * d[60] - 2 * d[26] * d[31] * d[37] * d[60] + 2 * d[20] * d[33] * d[37] * d[60] - 2 * d[22] * d[35] * d[37] * d[60] + 2 * d[24] * d[28] * d[38] * d[60] - 2 * d[25] * d[30] * d[38] * d[60] + 2 * d[19] * d[33] * d[38] * d[60] - 2 * d[21] * d[34] * d[38] * d[60] - 2 * d[25] * d[29] * d[39] * d[60] + 2 * d[26] * d[32] * d[39] * d[60] - 2 * d[20] * d[34] * d[39] * d[60] + 2 * d[23] * d[35] * d[39] * d[60] - 2 * d[26] * d[28] * d[40] * d[60] + 2 * d[25] * d[32] * d[40] * d[60] + 2 * d[23] * d[34] * d[40] * d[60] - 2 * d[19] * d[35] * d[40] * d[60] + 2 * d[26] * d[30] * d[41] * d[60] + 2 * d[25] * d[31] * d[41] * d[60] - 4 * d[24] * d[32] * d[41] * d[60] - 4 * d[23] * d[33] * d[41] * d[60] + 2 * d[22] * d[34] * d[41] * d[60] + 2 * d[21] * d[35] * d[41] * d[60] + 2 * d[20] * d[28] * d[42] * d[60] + 2 * d[19] * d[29] * d[42] * d[60] - 4 * d[23] * d[32] * d[42] * d[60] - 2 * d[21] * d[29] * d[43] * d[60] - 2 * d[20] * d[30] * d[43] * d[60] + 2 * d[23] * d[31] * d[43] * d[60] + 2 * d[22] * d[32] * d[43] * d[60] - 2 * d[22] * d[28] * d[44] * d[60] + 2 * d[23] * d[30] * d[44] * d[60] - 2 * d[19] * d[31] * d[44] * d[60] + 2 * d[21] * d[32] * d[44] * d[60] + 2 * d[25] * d[29] * d[36] * d[61] - 2 * d[26] * d[32] * d[36] * d[61] + 2 * d[20] * d[34] * d[36] * d[61] - 2 * d[23] * d[35] * d[36] * d[61] + 2 * d[25] * d[27] * d[38] * d[61] - 2 * d[24] * d[30] * d[38] * d[61] - 2 * d[21] * d[33] * d[38] * d[61] + 2 * d[18] * d[34] * d[38] * d[61] - 2 * d[24] * d[29] * d[39] * d[61] + 2 * d[26] * d[31] * d[39] * d[61] - 2 * d[20] * d[33] * d[39] * d[61] + 2 * d[22] * d[35] * d[39] * d[61] + 2 * d[26] * d[30] * d[40] * d[61] - 4 * d[25] * d[31] * d[40] * d[61] + 2 * d[24] * d[32] * d[40] * d[61] + 2 * d[23] * d[33] * d[40] * d[61] - 4 * d[22] * d[34] * d[40] * d[61] + 2 * d[21] * d[35] * d[40] * d[61] - 2 * d[26] * d[27] * d[41] * d[61] + 2 * d[24] * d[31] * d[41] * d[61] + 2 * d[22] * d[33] * d[41] * d[61] - 2 * d[18] * d[35] * d[41] * d[61] - 2 * d[21] * d[29] * d[42] * d[61] - 2 * d[20] * d[30] * d[42] * d[61] + 2 * d[23] * d[31] * d[42] * d[61] + 2 * d[22] * d[32] * d[42] * d[61] + 2 * d[20] * d[27] * d[43] * d[61] + 2 * d[18] * d[29] * d[43] * d[61] - 4 * d[22] * d[31] * d[43] * d[61] - 2 * d[23] * d[27] * d[44] * d[61] + 2 * d[22] * d[30] * d[44] * d[61] + 2 * d[21] * d[31] * d[44] * d[61] - 2 * d[18] * d[32] * d[44] * d[61] + 2 * d[26] * d[28] * d[36] * d[62] - 2 * d[25] * d[32] * d[36] * d[62] - 2 * d[23] * d[34] * d[36] * d[62] + 2 * d[19] * d[35] * d[36] * d[62] + 2 * d[26] * d[27] * d[37] * d[62] - 2 * d[24] * d[31] * d[37] * d[62] - 2 * d[22] * d[33] * d[37] * d[62] + 2 * d[18] * d[35] * d[37] * d[62] - 4 * d[26] * d[30] * d[39] * d[62] + 2 * d[25] * d[31] * d[39] * d[62] + 2 * d[24] * d[32] * d[39] * d[62] + 2 * d[23] * d[33] * d[39] * d[62] + 2 * d[22] * d[34] * d[39] * d[62] - 4 * d[21] * d[35] * d[39] * d[62] - 2 * d[24] * d[28] * d[40] * d[62] + 2 * d[25] * d[30] * d[40] * d[62] - 2 * d[19] * d[33] * d[40] * d[62] + 2 * d[21] * d[34] * d[40] * d[62] - 2 * d[25] * d[27] * d[41] * d[62] + 2 * d[24] * d[30] * d[41] * d[62] + 2 * d[21] * d[33] * d[41] * d[62] - 2 * d[18] * d[34] * d[41] * d[62] - 2 * d[22] * d[28] * d[42] * d[62] + 2 * d[23] * d[30] * d[42] * d[62] - 2 * d[19] * d[31] * d[42] * d[62] + 2 * d[21] * d[32] * d[42] * d[62] - 2 * d[23] * d[27] * d[43] * d[62] + 2 * d[22] * d[30] * d[43] * d[62] + 2 * d[21] * d[31] * d[43] * d[62] - 2 * d[18] * d[32] * d[43] * d[62] + 2 * d[19] * d[27] * d[44] * d[62] + 2 * d[18] * d[28] * d[44] * d[62] - 4 * d[21] * d[30] * d[44] * d[62] - d[20] * d[28] * d[36] * d[71] - d[19] * d[29] * d[36] * d[71] + 2 * d[23] * d[32] * d[36] * d[71] - d[20] * d[27] * d[37] * d[71] - d[18] * d[29] * d[37] * d[71] + 2 * d[22] * d[31] * d[37] * d[71] - d[19] * d[27] * d[38] * d[71] - d[18] * d[28] * d[38] * d[71] + 2 * d[21] * d[30] * d[38] * d[71] + 2 * d[21] * d[29] * d[39] * d[71] + 2 * d[20] * d[30] * d[39] * d[71] - 2 * d[23] * d[31] * d[39] * d[71] - 2 * d[22] * d[32] * d[39] * d[71] + 2 * d[22] * d[28] * d[40] * d[71] - 2 * d[23] * d[30] * d[40] * d[71] + 2 * d[19] * d[31] * d[40] * d[71] - 2 * d[21] * d[32] * d[40] * d[71] + 2 * d[23] * d[27] * d[41] * d[71] - 2 * d[22] * d[30] * d[41] * d[71] - 2 * d[21] * d[31] * d[41] * d[71] + 2 * d[18] * d[32] * d[41] * d[71];
    coeffs[127] = 2 * d[29] * d[33] * d[37] * d[60] - 2 * d[31] * d[35] * d[37] * d[60] + 2 * d[28] * d[33] * d[38] * d[60] - 2 * d[30] * d[34] * d[38] * d[60] - 2 * d[29] * d[34] * d[39] * d[60] + 2 * d[32] * d[35] * d[39] * d[60] + 2 * d[32] * d[34] * d[40] * d[60] - 2 * d[28] * d[35] * d[40] * d[60] - 4 * d[32] * d[33] * d[41] * d[60] + 2 * d[31] * d[34] * d[41] * d[60] + 2 * d[30] * d[35] * d[41] * d[60] + 2 * d[28] * d[29] * d[42] * d[60] - 2 * std::pow(d[32], 2) * d[42] * d[60] - 2 * d[29] * d[30] * d[43] * d[60] + 2 * d[31] * d[32] * d[43] * d[60] - 2 * d[28] * d[31] * d[44] * d[60] + 2 * d[30] * d[32] * d[44] * d[60] + 2 * d[29] * d[34] * d[36] * d[61] - 2 * d[32] * d[35] * d[36] * d[61] - 2 * d[30] * d[33] * d[38] * d[61] + 2 * d[27] * d[34] * d[38] * d[61] - 2 * d[29] * d[33] * d[39] * d[61] + 2 * d[31] * d[35] * d[39] * d[61] + 2 * d[32] * d[33] * d[40] * d[61] - 4 * d[31] * d[34] * d[40] * d[61] + 2 * d[30] * d[35] * d[40] * d[61] + 2 * d[31] * d[33] * d[41] * d[61] - 2 * d[27] * d[35] * d[41] * d[61] - 2 * d[29] * d[30] * d[42] * d[61] + 2 * d[31] * d[32] * d[42] * d[61] + 2 * d[27] * d[29] * d[43] * d[61] - 2 * std::pow(d[31], 2) * d[43] * d[61] + 2 * d[30] * d[31] * d[44] * d[61] - 2 * d[27] * d[32] * d[44] * d[61] - 2 * d[32] * d[34] * d[36] * d[62] + 2 * d[28] * d[35] * d[36] * d[62] - 2 * d[31] * d[33] * d[37] * d[62] + 2 * d[27] * d[35] * d[37] * d[62] + 2 * d[32] * d[33] * d[39] * d[62] + 2 * d[31] * d[34] * d[39] * d[62] - 4 * d[30] * d[35] * d[39] * d[62] - 2 * d[28] * d[33] * d[40] * d[62] + 2 * d[30] * d[34] * d[40] * d[62] + 2 * d[30] * d[33] * d[41] * d[62] - 2 * d[27] * d[34] * d[41] * d[62] - 2 * d[28] * d[31] * d[42] * d[62] + 2 * d[30] * d[32] * d[42] * d[62] + 2 * d[30] * d[31] * d[43] * d[62] - 2 * d[27] * d[32] * d[43] * d[62] + 2 * d[27] * d[28] * d[44] * d[62] - 2 * std::pow(d[30], 2) * d[44] * d[62] - d[28] * d[29] * d[36] * d[71] + std::pow(d[32], 2) * d[36] * d[71] - d[27] * d[29] * d[37] * d[71] + std::pow(d[31], 2) * d[37] * d[71] - d[27] * d[28] * d[38] * d[71] + std::pow(d[30], 2) * d[38] * d[71] + 2 * d[29] * d[30] * d[39] * d[71] - 2 * d[31] * d[32] * d[39] * d[71] + 2 * d[28] * d[31] * d[40] * d[71] - 2 * d[30] * d[32] * d[40] * d[71] - 2 * d[30] * d[31] * d[41] * d[71] + 2 * d[27] * d[32] * d[41] * d[71];
    coeffs[128] = 2 * d[15] * d[37] * d[38] * d[60] - 2 * d[16] * d[38] * d[39] * d[60] - 2 * d[17] * d[37] * d[40] * d[60] + 2 * d[17] * d[39] * d[41] * d[60] + 2 * d[16] * d[40] * d[41] * d[60] - 2 * d[15] * std::pow(d[41], 2) * d[60] + 2 * d[11] * d[37] * d[42] * d[60] + 2 * d[10] * d[38] * d[42] * d[60] - 4 * d[14] * d[41] * d[42] * d[60] - 2 * d[12] * d[38] * d[43] * d[60] - 2 * d[11] * d[39] * d[43] * d[60] + 2 * d[14] * d[40] * d[43] * d[60] + 2 * d[13] * d[41] * d[43] * d[60] - 2 * d[13] * d[37] * d[44] * d[60] + 2 * d[14] * d[39] * d[44] * d[60] - 2 * d[10] * d[40] * d[44] * d[60] + 2 * d[12] * d[41] * d[44] * d[60] + 2 * d[16] * d[36] * d[38] * d[61] - 2 * d[15] * d[38] * d[39] * d[61] + 2 * d[17] * d[39] * d[40] * d[61] - 2 * d[16] * std::pow(d[40], 2) * d[61] - 2 * d[17] * d[36] * d[41] * d[61] + 2 * d[15] * d[40] * d[41] * d[61] - 2 * d[12] * d[38] * d[42] * d[61] - 2 * d[11] * d[39] * d[42] * d[61] + 2 * d[14] * d[40] * d[42] * d[61] + 2 * d[13] * d[41] * d[42] * d[61] + 2 * d[11] * d[36] * d[43] * d[61] + 2 * d[9] * d[38] * d[43] * d[61] - 4 * d[13] * d[40] * d[43] * d[61] - 2 * d[14] * d[36] * d[44] * d[61] + 2 * d[13] * d[39] * d[44] * d[61] + 2 * d[12] * d[40] * d[44] * d[61] - 2 * d[9] * d[41] * d[44] * d[61] + 2 * d[17] * d[36] * d[37] * d[62] - 2 * d[17] * std::pow(d[39], 2) * d[62] - 2 * d[15] * d[37] * d[40] * d[62] + 2 * d[16] * d[39] * d[40] * d[62] - 2 * d[16] * d[36] * d[41] * d[62] + 2 * d[15] * d[39] * d[41] * d[62] - 2 * d[13] * d[37] * d[42] * d[62] + 2 * d[14] * d[39] * d[42] * d[62] - 2 * d[10] * d[40] * d[42] * d[62] + 2 * d[12] * d[41] * d[42] * d[62] - 2 * d[14] * d[36] * d[43] * d[62] + 2 * d[13] * d[39] * d[43] * d[62] + 2 * d[12] * d[40] * d[43] * d[62] - 2 * d[9] * d[41] * d[43] * d[62] + 2 * d[10] * d[36] * d[44] * d[62] + 2 * d[9] * d[37] * d[44] * d[62] - 4 * d[12] * d[39] * d[44] * d[62] - d[11] * d[36] * d[37] * d[71] - d[10] * d[36] * d[38] * d[71] - d[9] * d[37] * d[38] * d[71] + 2 * d[12] * d[38] * d[39] * d[71] + d[11] * std::pow(d[39], 2) * d[71] + 2 * d[13] * d[37] * d[40] * d[71] - 2 * d[14] * d[39] * d[40] * d[71] + d[10] * std::pow(d[40], 2) * d[71] + 2 * d[14] * d[36] * d[41] * d[71] - 2 * d[13] * d[39] * d[41] * d[71] - 2 * d[12] * d[40] * d[41] * d[71] + d[9] * std::pow(d[41], 2) * d[71];
    coeffs[129] = 2 * d[24] * d[37] * d[38] * d[60] - 2 * d[25] * d[38] * d[39] * d[60] - 2 * d[26] * d[37] * d[40] * d[60] + 2 * d[26] * d[39] * d[41] * d[60] + 2 * d[25] * d[40] * d[41] * d[60] - 2 * d[24] * std::pow(d[41], 2) * d[60] + 2 * d[20] * d[37] * d[42] * d[60] + 2 * d[19] * d[38] * d[42] * d[60] - 4 * d[23] * d[41] * d[42] * d[60] - 2 * d[21] * d[38] * d[43] * d[60] - 2 * d[20] * d[39] * d[43] * d[60] + 2 * d[23] * d[40] * d[43] * d[60] + 2 * d[22] * d[41] * d[43] * d[60] - 2 * d[22] * d[37] * d[44] * d[60] + 2 * d[23] * d[39] * d[44] * d[60] - 2 * d[19] * d[40] * d[44] * d[60] + 2 * d[21] * d[41] * d[44] * d[60] + 2 * d[25] * d[36] * d[38] * d[61] - 2 * d[24] * d[38] * d[39] * d[61] + 2 * d[26] * d[39] * d[40] * d[61] - 2 * d[25] * std::pow(d[40], 2) * d[61] - 2 * d[26] * d[36] * d[41] * d[61] + 2 * d[24] * d[40] * d[41] * d[61] - 2 * d[21] * d[38] * d[42] * d[61] - 2 * d[20] * d[39] * d[42] * d[61] + 2 * d[23] * d[40] * d[42] * d[61] + 2 * d[22] * d[41] * d[42] * d[61] + 2 * d[20] * d[36] * d[43] * d[61] + 2 * d[18] * d[38] * d[43] * d[61] - 4 * d[22] * d[40] * d[43] * d[61] - 2 * d[23] * d[36] * d[44] * d[61] + 2 * d[22] * d[39] * d[44] * d[61] + 2 * d[21] * d[40] * d[44] * d[61] - 2 * d[18] * d[41] * d[44] * d[61] + 2 * d[26] * d[36] * d[37] * d[62] - 2 * d[26] * std::pow(d[39], 2) * d[62] - 2 * d[24] * d[37] * d[40] * d[62] + 2 * d[25] * d[39] * d[40] * d[62] - 2 * d[25] * d[36] * d[41] * d[62] + 2 * d[24] * d[39] * d[41] * d[62] - 2 * d[22] * d[37] * d[42] * d[62] + 2 * d[23] * d[39] * d[42] * d[62] - 2 * d[19] * d[40] * d[42] * d[62] + 2 * d[21] * d[41] * d[42] * d[62] - 2 * d[23] * d[36] * d[43] * d[62] + 2 * d[22] * d[39] * d[43] * d[62] + 2 * d[21] * d[40] * d[43] * d[62] - 2 * d[18] * d[41] * d[43] * d[62] + 2 * d[19] * d[36] * d[44] * d[62] + 2 * d[18] * d[37] * d[44] * d[62] - 4 * d[21] * d[39] * d[44] * d[62] - d[20] * d[36] * d[37] * d[71] - d[19] * d[36] * d[38] * d[71] - d[18] * d[37] * d[38] * d[71] + 2 * d[21] * d[38] * d[39] * d[71] + d[20] * std::pow(d[39], 2) * d[71] + 2 * d[22] * d[37] * d[40] * d[71] - 2 * d[23] * d[39] * d[40] * d[71] + d[19] * std::pow(d[40], 2) * d[71] + 2 * d[23] * d[36] * d[41] * d[71] - 2 * d[22] * d[39] * d[41] * d[71] - 2 * d[21] * d[40] * d[41] * d[71] + d[18] * std::pow(d[41], 2) * d[71];
    coeffs[130] = 2 * d[33] * d[37] * d[38] * d[60] - 2 * d[34] * d[38] * d[39] * d[60] - 2 * d[35] * d[37] * d[40] * d[60] + 2 * d[35] * d[39] * d[41] * d[60] + 2 * d[34] * d[40] * d[41] * d[60] - 2 * d[33] * std::pow(d[41], 2) * d[60] + 2 * d[29] * d[37] * d[42] * d[60] + 2 * d[28] * d[38] * d[42] * d[60] - 4 * d[32] * d[41] * d[42] * d[60] - 2 * d[30] * d[38] * d[43] * d[60] - 2 * d[29] * d[39] * d[43] * d[60] + 2 * d[32] * d[40] * d[43] * d[60] + 2 * d[31] * d[41] * d[43] * d[60] - 2 * d[31] * d[37] * d[44] * d[60] + 2 * d[32] * d[39] * d[44] * d[60] - 2 * d[28] * d[40] * d[44] * d[60] + 2 * d[30] * d[41] * d[44] * d[60] + 2 * d[34] * d[36] * d[38] * d[61] - 2 * d[33] * d[38] * d[39] * d[61] + 2 * d[35] * d[39] * d[40] * d[61] - 2 * d[34] * std::pow(d[40], 2) * d[61] - 2 * d[35] * d[36] * d[41] * d[61] + 2 * d[33] * d[40] * d[41] * d[61] - 2 * d[30] * d[38] * d[42] * d[61] - 2 * d[29] * d[39] * d[42] * d[61] + 2 * d[32] * d[40] * d[42] * d[61] + 2 * d[31] * d[41] * d[42] * d[61] + 2 * d[29] * d[36] * d[43] * d[61] + 2 * d[27] * d[38] * d[43] * d[61] - 4 * d[31] * d[40] * d[43] * d[61] - 2 * d[32] * d[36] * d[44] * d[61] + 2 * d[31] * d[39] * d[44] * d[61] + 2 * d[30] * d[40] * d[44] * d[61] - 2 * d[27] * d[41] * d[44] * d[61] + 2 * d[35] * d[36] * d[37] * d[62] - 2 * d[35] * std::pow(d[39], 2) * d[62] - 2 * d[33] * d[37] * d[40] * d[62] + 2 * d[34] * d[39] * d[40] * d[62] - 2 * d[34] * d[36] * d[41] * d[62] + 2 * d[33] * d[39] * d[41] * d[62] - 2 * d[31] * d[37] * d[42] * d[62] + 2 * d[32] * d[39] * d[42] * d[62] - 2 * d[28] * d[40] * d[42] * d[62] + 2 * d[30] * d[41] * d[42] * d[62] - 2 * d[32] * d[36] * d[43] * d[62] + 2 * d[31] * d[39] * d[43] * d[62] + 2 * d[30] * d[40] * d[43] * d[62] - 2 * d[27] * d[41] * d[43] * d[62] + 2 * d[28] * d[36] * d[44] * d[62] + 2 * d[27] * d[37] * d[44] * d[62] - 4 * d[30] * d[39] * d[44] * d[62] - d[29] * d[36] * d[37] * d[71] - d[28] * d[36] * d[38] * d[71] - d[27] * d[37] * d[38] * d[71] + 2 * d[30] * d[38] * d[39] * d[71] + d[29] * std::pow(d[39], 2) * d[71] + 2 * d[31] * d[37] * d[40] * d[71] - 2 * d[32] * d[39] * d[40] * d[71] + d[28] * std::pow(d[40], 2) * d[71] + 2 * d[32] * d[36] * d[41] * d[71] - 2 * d[31] * d[39] * d[41] * d[71] - 2 * d[30] * d[40] * d[41] * d[71] + d[27] * std::pow(d[41], 2) * d[71];
    coeffs[131] = 2 * d[37] * d[38] * d[42] * d[60] - 2 * std::pow(d[41], 2) * d[42] * d[60] - 2 * d[38] * d[39] * d[43] * d[60] + 2 * d[40] * d[41] * d[43] * d[60] - 2 * d[37] * d[40] * d[44] * d[60] + 2 * d[39] * d[41] * d[44] * d[60] - 2 * d[38] * d[39] * d[42] * d[61] + 2 * d[40] * d[41] * d[42] * d[61] + 2 * d[36] * d[38] * d[43] * d[61] - 2 * std::pow(d[40], 2) * d[43] * d[61] + 2 * d[39] * d[40] * d[44] * d[61] - 2 * d[36] * d[41] * d[44] * d[61] - 2 * d[37] * d[40] * d[42] * d[62] + 2 * d[39] * d[41] * d[42] * d[62] + 2 * d[39] * d[40] * d[43] * d[62] - 2 * d[36] * d[41] * d[43] * d[62] + 2 * d[36] * d[37] * d[44] * d[62] - 2 * std::pow(d[39], 2) * d[44] * d[62] - d[36] * d[37] * d[38] * d[71] + d[38] * std::pow(d[39], 2) * d[71] + d[37] * std::pow(d[40], 2) * d[71] - 2 * d[39] * d[40] * d[41] * d[71] + d[36] * std::pow(d[41], 2) * d[71];
    coeffs[132] = 2 * d[11] * d[15] * d[46] * d[60] - 2 * d[13] * d[17] * d[46] * d[60] + 2 * d[10] * d[15] * d[47] * d[60] - 2 * d[12] * d[16] * d[47] * d[60] - 2 * d[11] * d[16] * d[48] * d[60] + 2 * d[14] * d[17] * d[48] * d[60] + 2 * d[14] * d[16] * d[49] * d[60] - 2 * d[10] * d[17] * d[49] * d[60] - 4 * d[14] * d[15] * d[50] * d[60] + 2 * d[13] * d[16] * d[50] * d[60] + 2 * d[12] * d[17] * d[50] * d[60] + 2 * d[10] * d[11] * d[51] * d[60] - 2 * std::pow(d[14], 2) * d[51] * d[60] - 2 * d[11] * d[12] * d[52] * d[60] + 2 * d[13] * d[14] * d[52] * d[60] - 2 * d[10] * d[13] * d[53] * d[60] + 2 * d[12] * d[14] * d[53] * d[60] + 2 * d[11] * d[16] * d[45] * d[61] - 2 * d[14] * d[17] * d[45] * d[61] - 2 * d[12] * d[15] * d[47] * d[61] + 2 * d[9] * d[16] * d[47] * d[61] - 2 * d[11] * d[15] * d[48] * d[61] + 2 * d[13] * d[17] * d[48] * d[61] + 2 * d[14] * d[15] * d[49] * d[61] - 4 * d[13] * d[16] * d[49] * d[61] + 2 * d[12] * d[17] * d[49] * d[61] + 2 * d[13] * d[15] * d[50] * d[61] - 2 * d[9] * d[17] * d[50] * d[61] - 2 * d[11] * d[12] * d[51] * d[61] + 2 * d[13] * d[14] * d[51] * d[61] + 2 * d[9] * d[11] * d[52] * d[61] - 2 * std::pow(d[13], 2) * d[52] * d[61] + 2 * d[12] * d[13] * d[53] * d[61] - 2 * d[9] * d[14] * d[53] * d[61] - 2 * d[14] * d[16] * d[45] * d[62] + 2 * d[10] * d[17] * d[45] * d[62] - 2 * d[13] * d[15] * d[46] * d[62] + 2 * d[9] * d[17] * d[46] * d[62] + 2 * d[14] * d[15] * d[48] * d[62] + 2 * d[13] * d[16] * d[48] * d[62] - 4 * d[12] * d[17] * d[48] * d[62] - 2 * d[10] * d[15] * d[49] * d[62] + 2 * d[12] * d[16] * d[49] * d[62] + 2 * d[12] * d[15] * d[50] * d[62] - 2 * d[9] * d[16] * d[50] * d[62] - 2 * d[10] * d[13] * d[51] * d[62] + 2 * d[12] * d[14] * d[51] * d[62] + 2 * d[12] * d[13] * d[52] * d[62] - 2 * d[9] * d[14] * d[52] * d[62] + 2 * d[9] * d[10] * d[53] * d[62] - 2 * std::pow(d[12], 2) * d[53] * d[62] - d[10] * d[11] * d[45] * d[71] + std::pow(d[14], 2) * d[45] * d[71] - d[9] * d[11] * d[46] * d[71] + std::pow(d[13], 2) * d[46] * d[71] - d[9] * d[10] * d[47] * d[71] + std::pow(d[12], 2) * d[47] * d[71] + 2 * d[11] * d[12] * d[48] * d[71] - 2 * d[13] * d[14] * d[48] * d[71] + 2 * d[10] * d[13] * d[49] * d[71] - 2 * d[12] * d[14] * d[49] * d[71] - 2 * d[12] * d[13] * d[50] * d[71] + 2 * d[9] * d[14] * d[50] * d[71];
    coeffs[133] = 2 * d[15] * d[20] * d[46] * d[60] - 2 * d[17] * d[22] * d[46] * d[60] + 2 * d[11] * d[24] * d[46] * d[60] - 2 * d[13] * d[26] * d[46] * d[60] + 2 * d[15] * d[19] * d[47] * d[60] - 2 * d[16] * d[21] * d[47] * d[60] + 2 * d[10] * d[24] * d[47] * d[60] - 2 * d[12] * d[25] * d[47] * d[60] - 2 * d[16] * d[20] * d[48] * d[60] + 2 * d[17] * d[23] * d[48] * d[60] - 2 * d[11] * d[25] * d[48] * d[60] + 2 * d[14] * d[26] * d[48] * d[60] - 2 * d[17] * d[19] * d[49] * d[60] + 2 * d[16] * d[23] * d[49] * d[60] + 2 * d[14] * d[25] * d[49] * d[60] - 2 * d[10] * d[26] * d[49] * d[60] + 2 * d[17] * d[21] * d[50] * d[60] + 2 * d[16] * d[22] * d[50] * d[60] - 4 * d[15] * d[23] * d[50] * d[60] - 4 * d[14] * d[24] * d[50] * d[60] + 2 * d[13] * d[25] * d[50] * d[60] + 2 * d[12] * d[26] * d[50] * d[60] + 2 * d[11] * d[19] * d[51] * d[60] + 2 * d[10] * d[20] * d[51] * d[60] - 4 * d[14] * d[23] * d[51] * d[60] - 2 * d[12] * d[20] * d[52] * d[60] - 2 * d[11] * d[21] * d[52] * d[60] + 2 * d[14] * d[22] * d[52] * d[60] + 2 * d[13] * d[23] * d[52] * d[60] - 2 * d[13] * d[19] * d[53] * d[60] + 2 * d[14] * d[21] * d[53] * d[60] - 2 * d[10] * d[22] * d[53] * d[60] + 2 * d[12] * d[23] * d[53] * d[60] + 2 * d[16] * d[20] * d[45] * d[61] - 2 * d[17] * d[23] * d[45] * d[61] + 2 * d[11] * d[25] * d[45] * d[61] - 2 * d[14] * d[26] * d[45] * d[61] + 2 * d[16] * d[18] * d[47] * d[61] - 2 * d[15] * d[21] * d[47] * d[61] - 2 * d[12] * d[24] * d[47] * d[61] + 2 * d[9] * d[25] * d[47] * d[61] - 2 * d[15] * d[20] * d[48] * d[61] + 2 * d[17] * d[22] * d[48] * d[61] - 2 * d[11] * d[24] * d[48] * d[61] + 2 * d[13] * d[26] * d[48] * d[61] + 2 * d[17] * d[21] * d[49] * d[61] - 4 * d[16] * d[22] * d[49] * d[61] + 2 * d[15] * d[23] * d[49] * d[61] + 2 * d[14] * d[24] * d[49] * d[61] - 4 * d[13] * d[25] * d[49] * d[61] + 2 * d[12] * d[26] * d[49] * d[61] - 2 * d[17] * d[18] * d[50] * d[61] + 2 * d[15] * d[22] * d[50] * d[61] + 2 * d[13] * d[24] * d[50] * d[61] - 2 * d[9] * d[26] * d[50] * d[61] - 2 * d[12] * d[20] * d[51] * d[61] - 2 * d[11] * d[21] * d[51] * d[61] + 2 * d[14] * d[22] * d[51] * d[61] + 2 * d[13] * d[23] * d[51] * d[61] + 2 * d[11] * d[18] * d[52] * d[61] + 2 * d[9] * d[20] * d[52] * d[61] - 4 * d[13] * d[22] * d[52] * d[61] - 2 * d[14] * d[18] * d[53] * d[61] + 2 * d[13] * d[21] * d[53] * d[61] + 2 * d[12] * d[22] * d[53] * d[61] - 2 * d[9] * d[23] * d[53] * d[61] + 2 * d[17] * d[19] * d[45] * d[62] - 2 * d[16] * d[23] * d[45] * d[62] - 2 * d[14] * d[25] * d[45] * d[62] + 2 * d[10] * d[26] * d[45] * d[62] + 2 * d[17] * d[18] * d[46] * d[62] - 2 * d[15] * d[22] * d[46] * d[62] - 2 * d[13] * d[24] * d[46] * d[62] + 2 * d[9] * d[26] * d[46] * d[62] - 4 * d[17] * d[21] * d[48] * d[62] + 2 * d[16] * d[22] * d[48] * d[62] + 2 * d[15] * d[23] * d[48] * d[62] + 2 * d[14] * d[24] * d[48] * d[62] + 2 * d[13] * d[25] * d[48] * d[62] - 4 * d[12] * d[26] * d[48] * d[62] - 2 * d[15] * d[19] * d[49] * d[62] + 2 * d[16] * d[21] * d[49] * d[62] - 2 * d[10] * d[24] * d[49] * d[62] + 2 * d[12] * d[25] * d[49] * d[62] - 2 * d[16] * d[18] * d[50] * d[62] + 2 * d[15] * d[21] * d[50] * d[62] + 2 * d[12] * d[24] * d[50] * d[62] - 2 * d[9] * d[25] * d[50] * d[62] - 2 * d[13] * d[19] * d[51] * d[62] + 2 * d[14] * d[21] * d[51] * d[62] - 2 * d[10] * d[22] * d[51] * d[62] + 2 * d[12] * d[23] * d[51] * d[62] - 2 * d[14] * d[18] * d[52] * d[62] + 2 * d[13] * d[21] * d[52] * d[62] + 2 * d[12] * d[22] * d[52] * d[62] - 2 * d[9] * d[23] * d[52] * d[62] + 2 * d[10] * d[18] * d[53] * d[62] + 2 * d[9] * d[19] * d[53] * d[62] - 4 * d[12] * d[21] * d[53] * d[62] - d[11] * d[19] * d[45] * d[71] - d[10] * d[20] * d[45] * d[71] + 2 * d[14] * d[23] * d[45] * d[71] - d[11] * d[18] * d[46] * d[71] - d[9] * d[20] * d[46] * d[71] + 2 * d[13] * d[22] * d[46] * d[71] - d[10] * d[18] * d[47] * d[71] - d[9] * d[19] * d[47] * d[71] + 2 * d[12] * d[21] * d[47] * d[71] + 2 * d[12] * d[20] * d[48] * d[71] + 2 * d[11] * d[21] * d[48] * d[71] - 2 * d[14] * d[22] * d[48] * d[71] - 2 * d[13] * d[23] * d[48] * d[71] + 2 * d[13] * d[19] * d[49] * d[71] - 2 * d[14] * d[21] * d[49] * d[71] + 2 * d[10] * d[22] * d[49] * d[71] - 2 * d[12] * d[23] * d[49] * d[71] + 2 * d[14] * d[18] * d[50] * d[71] - 2 * d[13] * d[21] * d[50] * d[71] - 2 * d[12] * d[22] * d[50] * d[71] + 2 * d[9] * d[23] * d[50] * d[71];
    coeffs[134] = 2 * d[20] * d[24] * d[46] * d[60] - 2 * d[22] * d[26] * d[46] * d[60] + 2 * d[19] * d[24] * d[47] * d[60] - 2 * d[21] * d[25] * d[47] * d[60] - 2 * d[20] * d[25] * d[48] * d[60] + 2 * d[23] * d[26] * d[48] * d[60] + 2 * d[23] * d[25] * d[49] * d[60] - 2 * d[19] * d[26] * d[49] * d[60] - 4 * d[23] * d[24] * d[50] * d[60] + 2 * d[22] * d[25] * d[50] * d[60] + 2 * d[21] * d[26] * d[50] * d[60] + 2 * d[19] * d[20] * d[51] * d[60] - 2 * std::pow(d[23], 2) * d[51] * d[60] - 2 * d[20] * d[21] * d[52] * d[60] + 2 * d[22] * d[23] * d[52] * d[60] - 2 * d[19] * d[22] * d[53] * d[60] + 2 * d[21] * d[23] * d[53] * d[60] + 2 * d[20] * d[25] * d[45] * d[61] - 2 * d[23] * d[26] * d[45] * d[61] - 2 * d[21] * d[24] * d[47] * d[61] + 2 * d[18] * d[25] * d[47] * d[61] - 2 * d[20] * d[24] * d[48] * d[61] + 2 * d[22] * d[26] * d[48] * d[61] + 2 * d[23] * d[24] * d[49] * d[61] - 4 * d[22] * d[25] * d[49] * d[61] + 2 * d[21] * d[26] * d[49] * d[61] + 2 * d[22] * d[24] * d[50] * d[61] - 2 * d[18] * d[26] * d[50] * d[61] - 2 * d[20] * d[21] * d[51] * d[61] + 2 * d[22] * d[23] * d[51] * d[61] + 2 * d[18] * d[20] * d[52] * d[61] - 2 * std::pow(d[22], 2) * d[52] * d[61] + 2 * d[21] * d[22] * d[53] * d[61] - 2 * d[18] * d[23] * d[53] * d[61] - 2 * d[23] * d[25] * d[45] * d[62] + 2 * d[19] * d[26] * d[45] * d[62] - 2 * d[22] * d[24] * d[46] * d[62] + 2 * d[18] * d[26] * d[46] * d[62] + 2 * d[23] * d[24] * d[48] * d[62] + 2 * d[22] * d[25] * d[48] * d[62] - 4 * d[21] * d[26] * d[48] * d[62] - 2 * d[19] * d[24] * d[49] * d[62] + 2 * d[21] * d[25] * d[49] * d[62] + 2 * d[21] * d[24] * d[50] * d[62] - 2 * d[18] * d[25] * d[50] * d[62] - 2 * d[19] * d[22] * d[51] * d[62] + 2 * d[21] * d[23] * d[51] * d[62] + 2 * d[21] * d[22] * d[52] * d[62] - 2 * d[18] * d[23] * d[52] * d[62] + 2 * d[18] * d[19] * d[53] * d[62] - 2 * std::pow(d[21], 2) * d[53] * d[62] - d[19] * d[20] * d[45] * d[71] + std::pow(d[23], 2) * d[45] * d[71] - d[18] * d[20] * d[46] * d[71] + std::pow(d[22], 2) * d[46] * d[71] - d[18] * d[19] * d[47] * d[71] + std::pow(d[21], 2) * d[47] * d[71] + 2 * d[20] * d[21] * d[48] * d[71] - 2 * d[22] * d[23] * d[48] * d[71] + 2 * d[19] * d[22] * d[49] * d[71] - 2 * d[21] * d[23] * d[49] * d[71] - 2 * d[21] * d[22] * d[50] * d[71] + 2 * d[18] * d[23] * d[50] * d[71];
    coeffs[135] = 2 * d[15] * d[29] * d[46] * d[60] - 2 * d[17] * d[31] * d[46] * d[60] + 2 * d[11] * d[33] * d[46] * d[60] - 2 * d[13] * d[35] * d[46] * d[60] + 2 * d[15] * d[28] * d[47] * d[60] - 2 * d[16] * d[30] * d[47] * d[60] + 2 * d[10] * d[33] * d[47] * d[60] - 2 * d[12] * d[34] * d[47] * d[60] - 2 * d[16] * d[29] * d[48] * d[60] + 2 * d[17] * d[32] * d[48] * d[60] - 2 * d[11] * d[34] * d[48] * d[60] + 2 * d[14] * d[35] * d[48] * d[60] - 2 * d[17] * d[28] * d[49] * d[60] + 2 * d[16] * d[32] * d[49] * d[60] + 2 * d[14] * d[34] * d[49] * d[60] - 2 * d[10] * d[35] * d[49] * d[60] + 2 * d[17] * d[30] * d[50] * d[60] + 2 * d[16] * d[31] * d[50] * d[60] - 4 * d[15] * d[32] * d[50] * d[60] - 4 * d[14] * d[33] * d[50] * d[60] + 2 * d[13] * d[34] * d[50] * d[60] + 2 * d[12] * d[35] * d[50] * d[60] + 2 * d[11] * d[28] * d[51] * d[60] + 2 * d[10] * d[29] * d[51] * d[60] - 4 * d[14] * d[32] * d[51] * d[60] - 2 * d[12] * d[29] * d[52] * d[60] - 2 * d[11] * d[30] * d[52] * d[60] + 2 * d[14] * d[31] * d[52] * d[60] + 2 * d[13] * d[32] * d[52] * d[60] - 2 * d[13] * d[28] * d[53] * d[60] + 2 * d[14] * d[30] * d[53] * d[60] - 2 * d[10] * d[31] * d[53] * d[60] + 2 * d[12] * d[32] * d[53] * d[60] + 2 * d[16] * d[29] * d[45] * d[61] - 2 * d[17] * d[32] * d[45] * d[61] + 2 * d[11] * d[34] * d[45] * d[61] - 2 * d[14] * d[35] * d[45] * d[61] + 2 * d[16] * d[27] * d[47] * d[61] - 2 * d[15] * d[30] * d[47] * d[61] - 2 * d[12] * d[33] * d[47] * d[61] + 2 * d[9] * d[34] * d[47] * d[61] - 2 * d[15] * d[29] * d[48] * d[61] + 2 * d[17] * d[31] * d[48] * d[61] - 2 * d[11] * d[33] * d[48] * d[61] + 2 * d[13] * d[35] * d[48] * d[61] + 2 * d[17] * d[30] * d[49] * d[61] - 4 * d[16] * d[31] * d[49] * d[61] + 2 * d[15] * d[32] * d[49] * d[61] + 2 * d[14] * d[33] * d[49] * d[61] - 4 * d[13] * d[34] * d[49] * d[61] + 2 * d[12] * d[35] * d[49] * d[61] - 2 * d[17] * d[27] * d[50] * d[61] + 2 * d[15] * d[31] * d[50] * d[61] + 2 * d[13] * d[33] * d[50] * d[61] - 2 * d[9] * d[35] * d[50] * d[61] - 2 * d[12] * d[29] * d[51] * d[61] - 2 * d[11] * d[30] * d[51] * d[61] + 2 * d[14] * d[31] * d[51] * d[61] + 2 * d[13] * d[32] * d[51] * d[61] + 2 * d[11] * d[27] * d[52] * d[61] + 2 * d[9] * d[29] * d[52] * d[61] - 4 * d[13] * d[31] * d[52] * d[61] - 2 * d[14] * d[27] * d[53] * d[61] + 2 * d[13] * d[30] * d[53] * d[61] + 2 * d[12] * d[31] * d[53] * d[61] - 2 * d[9] * d[32] * d[53] * d[61] + 2 * d[17] * d[28] * d[45] * d[62] - 2 * d[16] * d[32] * d[45] * d[62] - 2 * d[14] * d[34] * d[45] * d[62] + 2 * d[10] * d[35] * d[45] * d[62] + 2 * d[17] * d[27] * d[46] * d[62] - 2 * d[15] * d[31] * d[46] * d[62] - 2 * d[13] * d[33] * d[46] * d[62] + 2 * d[9] * d[35] * d[46] * d[62] - 4 * d[17] * d[30] * d[48] * d[62] + 2 * d[16] * d[31] * d[48] * d[62] + 2 * d[15] * d[32] * d[48] * d[62] + 2 * d[14] * d[33] * d[48] * d[62] + 2 * d[13] * d[34] * d[48] * d[62] - 4 * d[12] * d[35] * d[48] * d[62] - 2 * d[15] * d[28] * d[49] * d[62] + 2 * d[16] * d[30] * d[49] * d[62] - 2 * d[10] * d[33] * d[49] * d[62] + 2 * d[12] * d[34] * d[49] * d[62] - 2 * d[16] * d[27] * d[50] * d[62] + 2 * d[15] * d[30] * d[50] * d[62] + 2 * d[12] * d[33] * d[50] * d[62] - 2 * d[9] * d[34] * d[50] * d[62] - 2 * d[13] * d[28] * d[51] * d[62] + 2 * d[14] * d[30] * d[51] * d[62] - 2 * d[10] * d[31] * d[51] * d[62] + 2 * d[12] * d[32] * d[51] * d[62] - 2 * d[14] * d[27] * d[52] * d[62] + 2 * d[13] * d[30] * d[52] * d[62] + 2 * d[12] * d[31] * d[52] * d[62] - 2 * d[9] * d[32] * d[52] * d[62] + 2 * d[10] * d[27] * d[53] * d[62] + 2 * d[9] * d[28] * d[53] * d[62] - 4 * d[12] * d[30] * d[53] * d[62] - d[11] * d[28] * d[45] * d[71] - d[10] * d[29] * d[45] * d[71] + 2 * d[14] * d[32] * d[45] * d[71] - d[11] * d[27] * d[46] * d[71] - d[9] * d[29] * d[46] * d[71] + 2 * d[13] * d[31] * d[46] * d[71] - d[10] * d[27] * d[47] * d[71] - d[9] * d[28] * d[47] * d[71] + 2 * d[12] * d[30] * d[47] * d[71] + 2 * d[12] * d[29] * d[48] * d[71] + 2 * d[11] * d[30] * d[48] * d[71] - 2 * d[14] * d[31] * d[48] * d[71] - 2 * d[13] * d[32] * d[48] * d[71] + 2 * d[13] * d[28] * d[49] * d[71] - 2 * d[14] * d[30] * d[49] * d[71] + 2 * d[10] * d[31] * d[49] * d[71] - 2 * d[12] * d[32] * d[49] * d[71] + 2 * d[14] * d[27] * d[50] * d[71] - 2 * d[13] * d[30] * d[50] * d[71] - 2 * d[12] * d[31] * d[50] * d[71] + 2 * d[9] * d[32] * d[50] * d[71];
    coeffs[136] = 2 * d[24] * d[29] * d[46] * d[60] - 2 * d[26] * d[31] * d[46] * d[60] + 2 * d[20] * d[33] * d[46] * d[60] - 2 * d[22] * d[35] * d[46] * d[60] + 2 * d[24] * d[28] * d[47] * d[60] - 2 * d[25] * d[30] * d[47] * d[60] + 2 * d[19] * d[33] * d[47] * d[60] - 2 * d[21] * d[34] * d[47] * d[60] - 2 * d[25] * d[29] * d[48] * d[60] + 2 * d[26] * d[32] * d[48] * d[60] - 2 * d[20] * d[34] * d[48] * d[60] + 2 * d[23] * d[35] * d[48] * d[60] - 2 * d[26] * d[28] * d[49] * d[60] + 2 * d[25] * d[32] * d[49] * d[60] + 2 * d[23] * d[34] * d[49] * d[60] - 2 * d[19] * d[35] * d[49] * d[60] + 2 * d[26] * d[30] * d[50] * d[60] + 2 * d[25] * d[31] * d[50] * d[60] - 4 * d[24] * d[32] * d[50] * d[60] - 4 * d[23] * d[33] * d[50] * d[60] + 2 * d[22] * d[34] * d[50] * d[60] + 2 * d[21] * d[35] * d[50] * d[60] + 2 * d[20] * d[28] * d[51] * d[60] + 2 * d[19] * d[29] * d[51] * d[60] - 4 * d[23] * d[32] * d[51] * d[60] - 2 * d[21] * d[29] * d[52] * d[60] - 2 * d[20] * d[30] * d[52] * d[60] + 2 * d[23] * d[31] * d[52] * d[60] + 2 * d[22] * d[32] * d[52] * d[60] - 2 * d[22] * d[28] * d[53] * d[60] + 2 * d[23] * d[30] * d[53] * d[60] - 2 * d[19] * d[31] * d[53] * d[60] + 2 * d[21] * d[32] * d[53] * d[60] + 2 * d[25] * d[29] * d[45] * d[61] - 2 * d[26] * d[32] * d[45] * d[61] + 2 * d[20] * d[34] * d[45] * d[61] - 2 * d[23] * d[35] * d[45] * d[61] + 2 * d[25] * d[27] * d[47] * d[61] - 2 * d[24] * d[30] * d[47] * d[61] - 2 * d[21] * d[33] * d[47] * d[61] + 2 * d[18] * d[34] * d[47] * d[61] - 2 * d[24] * d[29] * d[48] * d[61] + 2 * d[26] * d[31] * d[48] * d[61] - 2 * d[20] * d[33] * d[48] * d[61] + 2 * d[22] * d[35] * d[48] * d[61] + 2 * d[26] * d[30] * d[49] * d[61] - 4 * d[25] * d[31] * d[49] * d[61] + 2 * d[24] * d[32] * d[49] * d[61] + 2 * d[23] * d[33] * d[49] * d[61] - 4 * d[22] * d[34] * d[49] * d[61] + 2 * d[21] * d[35] * d[49] * d[61] - 2 * d[26] * d[27] * d[50] * d[61] + 2 * d[24] * d[31] * d[50] * d[61] + 2 * d[22] * d[33] * d[50] * d[61] - 2 * d[18] * d[35] * d[50] * d[61] - 2 * d[21] * d[29] * d[51] * d[61] - 2 * d[20] * d[30] * d[51] * d[61] + 2 * d[23] * d[31] * d[51] * d[61] + 2 * d[22] * d[32] * d[51] * d[61] + 2 * d[20] * d[27] * d[52] * d[61] + 2 * d[18] * d[29] * d[52] * d[61] - 4 * d[22] * d[31] * d[52] * d[61] - 2 * d[23] * d[27] * d[53] * d[61] + 2 * d[22] * d[30] * d[53] * d[61] + 2 * d[21] * d[31] * d[53] * d[61] - 2 * d[18] * d[32] * d[53] * d[61] + 2 * d[26] * d[28] * d[45] * d[62] - 2 * d[25] * d[32] * d[45] * d[62] - 2 * d[23] * d[34] * d[45] * d[62] + 2 * d[19] * d[35] * d[45] * d[62] + 2 * d[26] * d[27] * d[46] * d[62] - 2 * d[24] * d[31] * d[46] * d[62] - 2 * d[22] * d[33] * d[46] * d[62] + 2 * d[18] * d[35] * d[46] * d[62] - 4 * d[26] * d[30] * d[48] * d[62] + 2 * d[25] * d[31] * d[48] * d[62] + 2 * d[24] * d[32] * d[48] * d[62] + 2 * d[23] * d[33] * d[48] * d[62] + 2 * d[22] * d[34] * d[48] * d[62] - 4 * d[21] * d[35] * d[48] * d[62] - 2 * d[24] * d[28] * d[49] * d[62] + 2 * d[25] * d[30] * d[49] * d[62] - 2 * d[19] * d[33] * d[49] * d[62] + 2 * d[21] * d[34] * d[49] * d[62] - 2 * d[25] * d[27] * d[50] * d[62] + 2 * d[24] * d[30] * d[50] * d[62] + 2 * d[21] * d[33] * d[50] * d[62] - 2 * d[18] * d[34] * d[50] * d[62] - 2 * d[22] * d[28] * d[51] * d[62] + 2 * d[23] * d[30] * d[51] * d[62] - 2 * d[19] * d[31] * d[51] * d[62] + 2 * d[21] * d[32] * d[51] * d[62] - 2 * d[23] * d[27] * d[52] * d[62] + 2 * d[22] * d[30] * d[52] * d[62] + 2 * d[21] * d[31] * d[52] * d[62] - 2 * d[18] * d[32] * d[52] * d[62] + 2 * d[19] * d[27] * d[53] * d[62] + 2 * d[18] * d[28] * d[53] * d[62] - 4 * d[21] * d[30] * d[53] * d[62] - d[20] * d[28] * d[45] * d[71] - d[19] * d[29] * d[45] * d[71] + 2 * d[23] * d[32] * d[45] * d[71] - d[20] * d[27] * d[46] * d[71] - d[18] * d[29] * d[46] * d[71] + 2 * d[22] * d[31] * d[46] * d[71] - d[19] * d[27] * d[47] * d[71] - d[18] * d[28] * d[47] * d[71] + 2 * d[21] * d[30] * d[47] * d[71] + 2 * d[21] * d[29] * d[48] * d[71] + 2 * d[20] * d[30] * d[48] * d[71] - 2 * d[23] * d[31] * d[48] * d[71] - 2 * d[22] * d[32] * d[48] * d[71] + 2 * d[22] * d[28] * d[49] * d[71] - 2 * d[23] * d[30] * d[49] * d[71] + 2 * d[19] * d[31] * d[49] * d[71] - 2 * d[21] * d[32] * d[49] * d[71] + 2 * d[23] * d[27] * d[50] * d[71] - 2 * d[22] * d[30] * d[50] * d[71] - 2 * d[21] * d[31] * d[50] * d[71] + 2 * d[18] * d[32] * d[50] * d[71];
    coeffs[137] = 2 * d[29] * d[33] * d[46] * d[60] - 2 * d[31] * d[35] * d[46] * d[60] + 2 * d[28] * d[33] * d[47] * d[60] - 2 * d[30] * d[34] * d[47] * d[60] - 2 * d[29] * d[34] * d[48] * d[60] + 2 * d[32] * d[35] * d[48] * d[60] + 2 * d[32] * d[34] * d[49] * d[60] - 2 * d[28] * d[35] * d[49] * d[60] - 4 * d[32] * d[33] * d[50] * d[60] + 2 * d[31] * d[34] * d[50] * d[60] + 2 * d[30] * d[35] * d[50] * d[60] + 2 * d[28] * d[29] * d[51] * d[60] - 2 * std::pow(d[32], 2) * d[51] * d[60] - 2 * d[29] * d[30] * d[52] * d[60] + 2 * d[31] * d[32] * d[52] * d[60] - 2 * d[28] * d[31] * d[53] * d[60] + 2 * d[30] * d[32] * d[53] * d[60] + 2 * d[29] * d[34] * d[45] * d[61] - 2 * d[32] * d[35] * d[45] * d[61] - 2 * d[30] * d[33] * d[47] * d[61] + 2 * d[27] * d[34] * d[47] * d[61] - 2 * d[29] * d[33] * d[48] * d[61] + 2 * d[31] * d[35] * d[48] * d[61] + 2 * d[32] * d[33] * d[49] * d[61] - 4 * d[31] * d[34] * d[49] * d[61] + 2 * d[30] * d[35] * d[49] * d[61] + 2 * d[31] * d[33] * d[50] * d[61] - 2 * d[27] * d[35] * d[50] * d[61] - 2 * d[29] * d[30] * d[51] * d[61] + 2 * d[31] * d[32] * d[51] * d[61] + 2 * d[27] * d[29] * d[52] * d[61] - 2 * std::pow(d[31], 2) * d[52] * d[61] + 2 * d[30] * d[31] * d[53] * d[61] - 2 * d[27] * d[32] * d[53] * d[61] - 2 * d[32] * d[34] * d[45] * d[62] + 2 * d[28] * d[35] * d[45] * d[62] - 2 * d[31] * d[33] * d[46] * d[62] + 2 * d[27] * d[35] * d[46] * d[62] + 2 * d[32] * d[33] * d[48] * d[62] + 2 * d[31] * d[34] * d[48] * d[62] - 4 * d[30] * d[35] * d[48] * d[62] - 2 * d[28] * d[33] * d[49] * d[62] + 2 * d[30] * d[34] * d[49] * d[62] + 2 * d[30] * d[33] * d[50] * d[62] - 2 * d[27] * d[34] * d[50] * d[62] - 2 * d[28] * d[31] * d[51] * d[62] + 2 * d[30] * d[32] * d[51] * d[62] + 2 * d[30] * d[31] * d[52] * d[62] - 2 * d[27] * d[32] * d[52] * d[62] + 2 * d[27] * d[28] * d[53] * d[62] - 2 * std::pow(d[30], 2) * d[53] * d[62] - d[28] * d[29] * d[45] * d[71] + std::pow(d[32], 2) * d[45] * d[71] - d[27] * d[29] * d[46] * d[71] + std::pow(d[31], 2) * d[46] * d[71] - d[27] * d[28] * d[47] * d[71] + std::pow(d[30], 2) * d[47] * d[71] + 2 * d[29] * d[30] * d[48] * d[71] - 2 * d[31] * d[32] * d[48] * d[71] + 2 * d[28] * d[31] * d[49] * d[71] - 2 * d[30] * d[32] * d[49] * d[71] - 2 * d[30] * d[31] * d[50] * d[71] + 2 * d[27] * d[32] * d[50] * d[71];
    coeffs[138] = 2 * d[15] * d[38] * d[46] * d[60] - 2 * d[17] * d[40] * d[46] * d[60] + 2 * d[11] * d[42] * d[46] * d[60] - 2 * d[13] * d[44] * d[46] * d[60] + 2 * d[15] * d[37] * d[47] * d[60] - 2 * d[16] * d[39] * d[47] * d[60] + 2 * d[10] * d[42] * d[47] * d[60] - 2 * d[12] * d[43] * d[47] * d[60] - 2 * d[16] * d[38] * d[48] * d[60] + 2 * d[17] * d[41] * d[48] * d[60] - 2 * d[11] * d[43] * d[48] * d[60] + 2 * d[14] * d[44] * d[48] * d[60] - 2 * d[17] * d[37] * d[49] * d[60] + 2 * d[16] * d[41] * d[49] * d[60] + 2 * d[14] * d[43] * d[49] * d[60] - 2 * d[10] * d[44] * d[49] * d[60] + 2 * d[17] * d[39] * d[50] * d[60] + 2 * d[16] * d[40] * d[50] * d[60] - 4 * d[15] * d[41] * d[50] * d[60] - 4 * d[14] * d[42] * d[50] * d[60] + 2 * d[13] * d[43] * d[50] * d[60] + 2 * d[12] * d[44] * d[50] * d[60] + 2 * d[11] * d[37] * d[51] * d[60] + 2 * d[10] * d[38] * d[51] * d[60] - 4 * d[14] * d[41] * d[51] * d[60] - 2 * d[12] * d[38] * d[52] * d[60] - 2 * d[11] * d[39] * d[52] * d[60] + 2 * d[14] * d[40] * d[52] * d[60] + 2 * d[13] * d[41] * d[52] * d[60] - 2 * d[13] * d[37] * d[53] * d[60] + 2 * d[14] * d[39] * d[53] * d[60] - 2 * d[10] * d[40] * d[53] * d[60] + 2 * d[12] * d[41] * d[53] * d[60] + 2 * d[16] * d[38] * d[45] * d[61] - 2 * d[17] * d[41] * d[45] * d[61] + 2 * d[11] * d[43] * d[45] * d[61] - 2 * d[14] * d[44] * d[45] * d[61] + 2 * d[16] * d[36] * d[47] * d[61] - 2 * d[15] * d[39] * d[47] * d[61] - 2 * d[12] * d[42] * d[47] * d[61] + 2 * d[9] * d[43] * d[47] * d[61] - 2 * d[15] * d[38] * d[48] * d[61] + 2 * d[17] * d[40] * d[48] * d[61] - 2 * d[11] * d[42] * d[48] * d[61] + 2 * d[13] * d[44] * d[48] * d[61] + 2 * d[17] * d[39] * d[49] * d[61] - 4 * d[16] * d[40] * d[49] * d[61] + 2 * d[15] * d[41] * d[49] * d[61] + 2 * d[14] * d[42] * d[49] * d[61] - 4 * d[13] * d[43] * d[49] * d[61] + 2 * d[12] * d[44] * d[49] * d[61] - 2 * d[17] * d[36] * d[50] * d[61] + 2 * d[15] * d[40] * d[50] * d[61] + 2 * d[13] * d[42] * d[50] * d[61] - 2 * d[9] * d[44] * d[50] * d[61] - 2 * d[12] * d[38] * d[51] * d[61] - 2 * d[11] * d[39] * d[51] * d[61] + 2 * d[14] * d[40] * d[51] * d[61] + 2 * d[13] * d[41] * d[51] * d[61] + 2 * d[11] * d[36] * d[52] * d[61] + 2 * d[9] * d[38] * d[52] * d[61] - 4 * d[13] * d[40] * d[52] * d[61] - 2 * d[14] * d[36] * d[53] * d[61] + 2 * d[13] * d[39] * d[53] * d[61] + 2 * d[12] * d[40] * d[53] * d[61] - 2 * d[9] * d[41] * d[53] * d[61] + 2 * d[17] * d[37] * d[45] * d[62] - 2 * d[16] * d[41] * d[45] * d[62] - 2 * d[14] * d[43] * d[45] * d[62] + 2 * d[10] * d[44] * d[45] * d[62] + 2 * d[17] * d[36] * d[46] * d[62] - 2 * d[15] * d[40] * d[46] * d[62] - 2 * d[13] * d[42] * d[46] * d[62] + 2 * d[9] * d[44] * d[46] * d[62] - 4 * d[17] * d[39] * d[48] * d[62] + 2 * d[16] * d[40] * d[48] * d[62] + 2 * d[15] * d[41] * d[48] * d[62] + 2 * d[14] * d[42] * d[48] * d[62] + 2 * d[13] * d[43] * d[48] * d[62] - 4 * d[12] * d[44] * d[48] * d[62] - 2 * d[15] * d[37] * d[49] * d[62] + 2 * d[16] * d[39] * d[49] * d[62] - 2 * d[10] * d[42] * d[49] * d[62] + 2 * d[12] * d[43] * d[49] * d[62] - 2 * d[16] * d[36] * d[50] * d[62] + 2 * d[15] * d[39] * d[50] * d[62] + 2 * d[12] * d[42] * d[50] * d[62] - 2 * d[9] * d[43] * d[50] * d[62] - 2 * d[13] * d[37] * d[51] * d[62] + 2 * d[14] * d[39] * d[51] * d[62] - 2 * d[10] * d[40] * d[51] * d[62] + 2 * d[12] * d[41] * d[51] * d[62] - 2 * d[14] * d[36] * d[52] * d[62] + 2 * d[13] * d[39] * d[52] * d[62] + 2 * d[12] * d[40] * d[52] * d[62] - 2 * d[9] * d[41] * d[52] * d[62] + 2 * d[10] * d[36] * d[53] * d[62] + 2 * d[9] * d[37] * d[53] * d[62] - 4 * d[12] * d[39] * d[53] * d[62] - d[11] * d[37] * d[45] * d[71] - d[10] * d[38] * d[45] * d[71] + 2 * d[14] * d[41] * d[45] * d[71] - d[11] * d[36] * d[46] * d[71] - d[9] * d[38] * d[46] * d[71] + 2 * d[13] * d[40] * d[46] * d[71] - d[10] * d[36] * d[47] * d[71] - d[9] * d[37] * d[47] * d[71] + 2 * d[12] * d[39] * d[47] * d[71] + 2 * d[12] * d[38] * d[48] * d[71] + 2 * d[11] * d[39] * d[48] * d[71] - 2 * d[14] * d[40] * d[48] * d[71] - 2 * d[13] * d[41] * d[48] * d[71] + 2 * d[13] * d[37] * d[49] * d[71] - 2 * d[14] * d[39] * d[49] * d[71] + 2 * d[10] * d[40] * d[49] * d[71] - 2 * d[12] * d[41] * d[49] * d[71] + 2 * d[14] * d[36] * d[50] * d[71] - 2 * d[13] * d[39] * d[50] * d[71] - 2 * d[12] * d[40] * d[50] * d[71] + 2 * d[9] * d[41] * d[50] * d[71];
    coeffs[139] = 2 * d[24] * d[38] * d[46] * d[60] - 2 * d[26] * d[40] * d[46] * d[60] + 2 * d[20] * d[42] * d[46] * d[60] - 2 * d[22] * d[44] * d[46] * d[60] + 2 * d[24] * d[37] * d[47] * d[60] - 2 * d[25] * d[39] * d[47] * d[60] + 2 * d[19] * d[42] * d[47] * d[60] - 2 * d[21] * d[43] * d[47] * d[60] - 2 * d[25] * d[38] * d[48] * d[60] + 2 * d[26] * d[41] * d[48] * d[60] - 2 * d[20] * d[43] * d[48] * d[60] + 2 * d[23] * d[44] * d[48] * d[60] - 2 * d[26] * d[37] * d[49] * d[60] + 2 * d[25] * d[41] * d[49] * d[60] + 2 * d[23] * d[43] * d[49] * d[60] - 2 * d[19] * d[44] * d[49] * d[60] + 2 * d[26] * d[39] * d[50] * d[60] + 2 * d[25] * d[40] * d[50] * d[60] - 4 * d[24] * d[41] * d[50] * d[60] - 4 * d[23] * d[42] * d[50] * d[60] + 2 * d[22] * d[43] * d[50] * d[60] + 2 * d[21] * d[44] * d[50] * d[60] + 2 * d[20] * d[37] * d[51] * d[60] + 2 * d[19] * d[38] * d[51] * d[60] - 4 * d[23] * d[41] * d[51] * d[60] - 2 * d[21] * d[38] * d[52] * d[60] - 2 * d[20] * d[39] * d[52] * d[60] + 2 * d[23] * d[40] * d[52] * d[60] + 2 * d[22] * d[41] * d[52] * d[60] - 2 * d[22] * d[37] * d[53] * d[60] + 2 * d[23] * d[39] * d[53] * d[60] - 2 * d[19] * d[40] * d[53] * d[60] + 2 * d[21] * d[41] * d[53] * d[60] + 2 * d[25] * d[38] * d[45] * d[61] - 2 * d[26] * d[41] * d[45] * d[61] + 2 * d[20] * d[43] * d[45] * d[61] - 2 * d[23] * d[44] * d[45] * d[61] + 2 * d[25] * d[36] * d[47] * d[61] - 2 * d[24] * d[39] * d[47] * d[61] - 2 * d[21] * d[42] * d[47] * d[61] + 2 * d[18] * d[43] * d[47] * d[61] - 2 * d[24] * d[38] * d[48] * d[61] + 2 * d[26] * d[40] * d[48] * d[61] - 2 * d[20] * d[42] * d[48] * d[61] + 2 * d[22] * d[44] * d[48] * d[61] + 2 * d[26] * d[39] * d[49] * d[61] - 4 * d[25] * d[40] * d[49] * d[61] + 2 * d[24] * d[41] * d[49] * d[61] + 2 * d[23] * d[42] * d[49] * d[61] - 4 * d[22] * d[43] * d[49] * d[61] + 2 * d[21] * d[44] * d[49] * d[61] - 2 * d[26] * d[36] * d[50] * d[61] + 2 * d[24] * d[40] * d[50] * d[61] + 2 * d[22] * d[42] * d[50] * d[61] - 2 * d[18] * d[44] * d[50] * d[61] - 2 * d[21] * d[38] * d[51] * d[61] - 2 * d[20] * d[39] * d[51] * d[61] + 2 * d[23] * d[40] * d[51] * d[61] + 2 * d[22] * d[41] * d[51] * d[61] + 2 * d[20] * d[36] * d[52] * d[61] + 2 * d[18] * d[38] * d[52] * d[61] - 4 * d[22] * d[40] * d[52] * d[61] - 2 * d[23] * d[36] * d[53] * d[61] + 2 * d[22] * d[39] * d[53] * d[61] + 2 * d[21] * d[40] * d[53] * d[61] - 2 * d[18] * d[41] * d[53] * d[61] + 2 * d[26] * d[37] * d[45] * d[62] - 2 * d[25] * d[41] * d[45] * d[62] - 2 * d[23] * d[43] * d[45] * d[62] + 2 * d[19] * d[44] * d[45] * d[62] + 2 * d[26] * d[36] * d[46] * d[62] - 2 * d[24] * d[40] * d[46] * d[62] - 2 * d[22] * d[42] * d[46] * d[62] + 2 * d[18] * d[44] * d[46] * d[62] - 4 * d[26] * d[39] * d[48] * d[62] + 2 * d[25] * d[40] * d[48] * d[62] + 2 * d[24] * d[41] * d[48] * d[62] + 2 * d[23] * d[42] * d[48] * d[62] + 2 * d[22] * d[43] * d[48] * d[62] - 4 * d[21] * d[44] * d[48] * d[62] - 2 * d[24] * d[37] * d[49] * d[62] + 2 * d[25] * d[39] * d[49] * d[62] - 2 * d[19] * d[42] * d[49] * d[62] + 2 * d[21] * d[43] * d[49] * d[62] - 2 * d[25] * d[36] * d[50] * d[62] + 2 * d[24] * d[39] * d[50] * d[62] + 2 * d[21] * d[42] * d[50] * d[62] - 2 * d[18] * d[43] * d[50] * d[62] - 2 * d[22] * d[37] * d[51] * d[62] + 2 * d[23] * d[39] * d[51] * d[62] - 2 * d[19] * d[40] * d[51] * d[62] + 2 * d[21] * d[41] * d[51] * d[62] - 2 * d[23] * d[36] * d[52] * d[62] + 2 * d[22] * d[39] * d[52] * d[62] + 2 * d[21] * d[40] * d[52] * d[62] - 2 * d[18] * d[41] * d[52] * d[62] + 2 * d[19] * d[36] * d[53] * d[62] + 2 * d[18] * d[37] * d[53] * d[62] - 4 * d[21] * d[39] * d[53] * d[62] - d[20] * d[37] * d[45] * d[71] - d[19] * d[38] * d[45] * d[71] + 2 * d[23] * d[41] * d[45] * d[71] - d[20] * d[36] * d[46] * d[71] - d[18] * d[38] * d[46] * d[71] + 2 * d[22] * d[40] * d[46] * d[71] - d[19] * d[36] * d[47] * d[71] - d[18] * d[37] * d[47] * d[71] + 2 * d[21] * d[39] * d[47] * d[71] + 2 * d[21] * d[38] * d[48] * d[71] + 2 * d[20] * d[39] * d[48] * d[71] - 2 * d[23] * d[40] * d[48] * d[71] - 2 * d[22] * d[41] * d[48] * d[71] + 2 * d[22] * d[37] * d[49] * d[71] - 2 * d[23] * d[39] * d[49] * d[71] + 2 * d[19] * d[40] * d[49] * d[71] - 2 * d[21] * d[41] * d[49] * d[71] + 2 * d[23] * d[36] * d[50] * d[71] - 2 * d[22] * d[39] * d[50] * d[71] - 2 * d[21] * d[40] * d[50] * d[71] + 2 * d[18] * d[41] * d[50] * d[71];
    coeffs[140] = 2 * d[33] * d[38] * d[46] * d[60] - 2 * d[35] * d[40] * d[46] * d[60] + 2 * d[29] * d[42] * d[46] * d[60] - 2 * d[31] * d[44] * d[46] * d[60] + 2 * d[33] * d[37] * d[47] * d[60] - 2 * d[34] * d[39] * d[47] * d[60] + 2 * d[28] * d[42] * d[47] * d[60] - 2 * d[30] * d[43] * d[47] * d[60] - 2 * d[34] * d[38] * d[48] * d[60] + 2 * d[35] * d[41] * d[48] * d[60] - 2 * d[29] * d[43] * d[48] * d[60] + 2 * d[32] * d[44] * d[48] * d[60] - 2 * d[35] * d[37] * d[49] * d[60] + 2 * d[34] * d[41] * d[49] * d[60] + 2 * d[32] * d[43] * d[49] * d[60] - 2 * d[28] * d[44] * d[49] * d[60] + 2 * d[35] * d[39] * d[50] * d[60] + 2 * d[34] * d[40] * d[50] * d[60] - 4 * d[33] * d[41] * d[50] * d[60] - 4 * d[32] * d[42] * d[50] * d[60] + 2 * d[31] * d[43] * d[50] * d[60] + 2 * d[30] * d[44] * d[50] * d[60] + 2 * d[29] * d[37] * d[51] * d[60] + 2 * d[28] * d[38] * d[51] * d[60] - 4 * d[32] * d[41] * d[51] * d[60] - 2 * d[30] * d[38] * d[52] * d[60] - 2 * d[29] * d[39] * d[52] * d[60] + 2 * d[32] * d[40] * d[52] * d[60] + 2 * d[31] * d[41] * d[52] * d[60] - 2 * d[31] * d[37] * d[53] * d[60] + 2 * d[32] * d[39] * d[53] * d[60] - 2 * d[28] * d[40] * d[53] * d[60] + 2 * d[30] * d[41] * d[53] * d[60] + 2 * d[34] * d[38] * d[45] * d[61] - 2 * d[35] * d[41] * d[45] * d[61] + 2 * d[29] * d[43] * d[45] * d[61] - 2 * d[32] * d[44] * d[45] * d[61] + 2 * d[34] * d[36] * d[47] * d[61] - 2 * d[33] * d[39] * d[47] * d[61] - 2 * d[30] * d[42] * d[47] * d[61] + 2 * d[27] * d[43] * d[47] * d[61] - 2 * d[33] * d[38] * d[48] * d[61] + 2 * d[35] * d[40] * d[48] * d[61] - 2 * d[29] * d[42] * d[48] * d[61] + 2 * d[31] * d[44] * d[48] * d[61] + 2 * d[35] * d[39] * d[49] * d[61] - 4 * d[34] * d[40] * d[49] * d[61] + 2 * d[33] * d[41] * d[49] * d[61] + 2 * d[32] * d[42] * d[49] * d[61] - 4 * d[31] * d[43] * d[49] * d[61] + 2 * d[30] * d[44] * d[49] * d[61] - 2 * d[35] * d[36] * d[50] * d[61] + 2 * d[33] * d[40] * d[50] * d[61] + 2 * d[31] * d[42] * d[50] * d[61] - 2 * d[27] * d[44] * d[50] * d[61] - 2 * d[30] * d[38] * d[51] * d[61] - 2 * d[29] * d[39] * d[51] * d[61] + 2 * d[32] * d[40] * d[51] * d[61] + 2 * d[31] * d[41] * d[51] * d[61] + 2 * d[29] * d[36] * d[52] * d[61] + 2 * d[27] * d[38] * d[52] * d[61] - 4 * d[31] * d[40] * d[52] * d[61] - 2 * d[32] * d[36] * d[53] * d[61] + 2 * d[31] * d[39] * d[53] * d[61] + 2 * d[30] * d[40] * d[53] * d[61] - 2 * d[27] * d[41] * d[53] * d[61] + 2 * d[35] * d[37] * d[45] * d[62] - 2 * d[34] * d[41] * d[45] * d[62] - 2 * d[32] * d[43] * d[45] * d[62] + 2 * d[28] * d[44] * d[45] * d[62] + 2 * d[35] * d[36] * d[46] * d[62] - 2 * d[33] * d[40] * d[46] * d[62] - 2 * d[31] * d[42] * d[46] * d[62] + 2 * d[27] * d[44] * d[46] * d[62] - 4 * d[35] * d[39] * d[48] * d[62] + 2 * d[34] * d[40] * d[48] * d[62] + 2 * d[33] * d[41] * d[48] * d[62] + 2 * d[32] * d[42] * d[48] * d[62] + 2 * d[31] * d[43] * d[48] * d[62] - 4 * d[30] * d[44] * d[48] * d[62] - 2 * d[33] * d[37] * d[49] * d[62] + 2 * d[34] * d[39] * d[49] * d[62] - 2 * d[28] * d[42] * d[49] * d[62] + 2 * d[30] * d[43] * d[49] * d[62] - 2 * d[34] * d[36] * d[50] * d[62] + 2 * d[33] * d[39] * d[50] * d[62] + 2 * d[30] * d[42] * d[50] * d[62] - 2 * d[27] * d[43] * d[50] * d[62] - 2 * d[31] * d[37] * d[51] * d[62] + 2 * d[32] * d[39] * d[51] * d[62] - 2 * d[28] * d[40] * d[51] * d[62] + 2 * d[30] * d[41] * d[51] * d[62] - 2 * d[32] * d[36] * d[52] * d[62] + 2 * d[31] * d[39] * d[52] * d[62] + 2 * d[30] * d[40] * d[52] * d[62] - 2 * d[27] * d[41] * d[52] * d[62] + 2 * d[28] * d[36] * d[53] * d[62] + 2 * d[27] * d[37] * d[53] * d[62] - 4 * d[30] * d[39] * d[53] * d[62] - d[29] * d[37] * d[45] * d[71] - d[28] * d[38] * d[45] * d[71] + 2 * d[32] * d[41] * d[45] * d[71] - d[29] * d[36] * d[46] * d[71] - d[27] * d[38] * d[46] * d[71] + 2 * d[31] * d[40] * d[46] * d[71] - d[28] * d[36] * d[47] * d[71] - d[27] * d[37] * d[47] * d[71] + 2 * d[30] * d[39] * d[47] * d[71] + 2 * d[30] * d[38] * d[48] * d[71] + 2 * d[29] * d[39] * d[48] * d[71] - 2 * d[32] * d[40] * d[48] * d[71] - 2 * d[31] * d[41] * d[48] * d[71] + 2 * d[31] * d[37] * d[49] * d[71] - 2 * d[32] * d[39] * d[49] * d[71] + 2 * d[28] * d[40] * d[49] * d[71] - 2 * d[30] * d[41] * d[49] * d[71] + 2 * d[32] * d[36] * d[50] * d[71] - 2 * d[31] * d[39] * d[50] * d[71] - 2 * d[30] * d[40] * d[50] * d[71] + 2 * d[27] * d[41] * d[50] * d[71];
    coeffs[141] = 2 * d[38] * d[42] * d[46] * d[60] - 2 * d[40] * d[44] * d[46] * d[60] + 2 * d[37] * d[42] * d[47] * d[60] - 2 * d[39] * d[43] * d[47] * d[60] - 2 * d[38] * d[43] * d[48] * d[60] + 2 * d[41] * d[44] * d[48] * d[60] + 2 * d[41] * d[43] * d[49] * d[60] - 2 * d[37] * d[44] * d[49] * d[60] - 4 * d[41] * d[42] * d[50] * d[60] + 2 * d[40] * d[43] * d[50] * d[60] + 2 * d[39] * d[44] * d[50] * d[60] + 2 * d[37] * d[38] * d[51] * d[60] - 2 * std::pow(d[41], 2) * d[51] * d[60] - 2 * d[38] * d[39] * d[52] * d[60] + 2 * d[40] * d[41] * d[52] * d[60] - 2 * d[37] * d[40] * d[53] * d[60] + 2 * d[39] * d[41] * d[53] * d[60] + 2 * d[38] * d[43] * d[45] * d[61] - 2 * d[41] * d[44] * d[45] * d[61] - 2 * d[39] * d[42] * d[47] * d[61] + 2 * d[36] * d[43] * d[47] * d[61] - 2 * d[38] * d[42] * d[48] * d[61] + 2 * d[40] * d[44] * d[48] * d[61] + 2 * d[41] * d[42] * d[49] * d[61] - 4 * d[40] * d[43] * d[49] * d[61] + 2 * d[39] * d[44] * d[49] * d[61] + 2 * d[40] * d[42] * d[50] * d[61] - 2 * d[36] * d[44] * d[50] * d[61] - 2 * d[38] * d[39] * d[51] * d[61] + 2 * d[40] * d[41] * d[51] * d[61] + 2 * d[36] * d[38] * d[52] * d[61] - 2 * std::pow(d[40], 2) * d[52] * d[61] + 2 * d[39] * d[40] * d[53] * d[61] - 2 * d[36] * d[41] * d[53] * d[61] - 2 * d[41] * d[43] * d[45] * d[62] + 2 * d[37] * d[44] * d[45] * d[62] - 2 * d[40] * d[42] * d[46] * d[62] + 2 * d[36] * d[44] * d[46] * d[62] + 2 * d[41] * d[42] * d[48] * d[62] + 2 * d[40] * d[43] * d[48] * d[62] - 4 * d[39] * d[44] * d[48] * d[62] - 2 * d[37] * d[42] * d[49] * d[62] + 2 * d[39] * d[43] * d[49] * d[62] + 2 * d[39] * d[42] * d[50] * d[62] - 2 * d[36] * d[43] * d[50] * d[62] - 2 * d[37] * d[40] * d[51] * d[62] + 2 * d[39] * d[41] * d[51] * d[62] + 2 * d[39] * d[40] * d[52] * d[62] - 2 * d[36] * d[41] * d[52] * d[62] + 2 * d[36] * d[37] * d[53] * d[62] - 2 * std::pow(d[39], 2) * d[53] * d[62] - d[37] * d[38] * d[45] * d[71] + std::pow(d[41], 2) * d[45] * d[71] - d[36] * d[38] * d[46] * d[71] + std::pow(d[40], 2) * d[46] * d[71] - d[36] * d[37] * d[47] * d[71] + std::pow(d[39], 2) * d[47] * d[71] + 2 * d[38] * d[39] * d[48] * d[71] - 2 * d[40] * d[41] * d[48] * d[71] + 2 * d[37] * d[40] * d[49] * d[71] - 2 * d[39] * d[41] * d[49] * d[71] - 2 * d[39] * d[40] * d[50] * d[71] + 2 * d[36] * d[41] * d[50] * d[71];
    coeffs[142] = 2 * d[15] * d[46] * d[47] * d[60] - 2 * d[16] * d[47] * d[48] * d[60] - 2 * d[17] * d[46] * d[49] * d[60] + 2 * d[17] * d[48] * d[50] * d[60] + 2 * d[16] * d[49] * d[50] * d[60] - 2 * d[15] * std::pow(d[50], 2) * d[60] + 2 * d[11] * d[46] * d[51] * d[60] + 2 * d[10] * d[47] * d[51] * d[60] - 4 * d[14] * d[50] * d[51] * d[60] - 2 * d[12] * d[47] * d[52] * d[60] - 2 * d[11] * d[48] * d[52] * d[60] + 2 * d[14] * d[49] * d[52] * d[60] + 2 * d[13] * d[50] * d[52] * d[60] - 2 * d[13] * d[46] * d[53] * d[60] + 2 * d[14] * d[48] * d[53] * d[60] - 2 * d[10] * d[49] * d[53] * d[60] + 2 * d[12] * d[50] * d[53] * d[60] + 2 * d[16] * d[45] * d[47] * d[61] - 2 * d[15] * d[47] * d[48] * d[61] + 2 * d[17] * d[48] * d[49] * d[61] - 2 * d[16] * std::pow(d[49], 2) * d[61] - 2 * d[17] * d[45] * d[50] * d[61] + 2 * d[15] * d[49] * d[50] * d[61] - 2 * d[12] * d[47] * d[51] * d[61] - 2 * d[11] * d[48] * d[51] * d[61] + 2 * d[14] * d[49] * d[51] * d[61] + 2 * d[13] * d[50] * d[51] * d[61] + 2 * d[11] * d[45] * d[52] * d[61] + 2 * d[9] * d[47] * d[52] * d[61] - 4 * d[13] * d[49] * d[52] * d[61] - 2 * d[14] * d[45] * d[53] * d[61] + 2 * d[13] * d[48] * d[53] * d[61] + 2 * d[12] * d[49] * d[53] * d[61] - 2 * d[9] * d[50] * d[53] * d[61] + 2 * d[17] * d[45] * d[46] * d[62] - 2 * d[17] * std::pow(d[48], 2) * d[62] - 2 * d[15] * d[46] * d[49] * d[62] + 2 * d[16] * d[48] * d[49] * d[62] - 2 * d[16] * d[45] * d[50] * d[62] + 2 * d[15] * d[48] * d[50] * d[62] - 2 * d[13] * d[46] * d[51] * d[62] + 2 * d[14] * d[48] * d[51] * d[62] - 2 * d[10] * d[49] * d[51] * d[62] + 2 * d[12] * d[50] * d[51] * d[62] - 2 * d[14] * d[45] * d[52] * d[62] + 2 * d[13] * d[48] * d[52] * d[62] + 2 * d[12] * d[49] * d[52] * d[62] - 2 * d[9] * d[50] * d[52] * d[62] + 2 * d[10] * d[45] * d[53] * d[62] + 2 * d[9] * d[46] * d[53] * d[62] - 4 * d[12] * d[48] * d[53] * d[62] - d[11] * d[45] * d[46] * d[71] - d[10] * d[45] * d[47] * d[71] - d[9] * d[46] * d[47] * d[71] + 2 * d[12] * d[47] * d[48] * d[71] + d[11] * std::pow(d[48], 2) * d[71] + 2 * d[13] * d[46] * d[49] * d[71] - 2 * d[14] * d[48] * d[49] * d[71] + d[10] * std::pow(d[49], 2) * d[71] + 2 * d[14] * d[45] * d[50] * d[71] - 2 * d[13] * d[48] * d[50] * d[71] - 2 * d[12] * d[49] * d[50] * d[71] + d[9] * std::pow(d[50], 2) * d[71];
    coeffs[143] = 2 * d[24] * d[46] * d[47] * d[60] - 2 * d[25] * d[47] * d[48] * d[60] - 2 * d[26] * d[46] * d[49] * d[60] + 2 * d[26] * d[48] * d[50] * d[60] + 2 * d[25] * d[49] * d[50] * d[60] - 2 * d[24] * std::pow(d[50], 2) * d[60] + 2 * d[20] * d[46] * d[51] * d[60] + 2 * d[19] * d[47] * d[51] * d[60] - 4 * d[23] * d[50] * d[51] * d[60] - 2 * d[21] * d[47] * d[52] * d[60] - 2 * d[20] * d[48] * d[52] * d[60] + 2 * d[23] * d[49] * d[52] * d[60] + 2 * d[22] * d[50] * d[52] * d[60] - 2 * d[22] * d[46] * d[53] * d[60] + 2 * d[23] * d[48] * d[53] * d[60] - 2 * d[19] * d[49] * d[53] * d[60] + 2 * d[21] * d[50] * d[53] * d[60] + 2 * d[25] * d[45] * d[47] * d[61] - 2 * d[24] * d[47] * d[48] * d[61] + 2 * d[26] * d[48] * d[49] * d[61] - 2 * d[25] * std::pow(d[49], 2) * d[61] - 2 * d[26] * d[45] * d[50] * d[61] + 2 * d[24] * d[49] * d[50] * d[61] - 2 * d[21] * d[47] * d[51] * d[61] - 2 * d[20] * d[48] * d[51] * d[61] + 2 * d[23] * d[49] * d[51] * d[61] + 2 * d[22] * d[50] * d[51] * d[61] + 2 * d[20] * d[45] * d[52] * d[61] + 2 * d[18] * d[47] * d[52] * d[61] - 4 * d[22] * d[49] * d[52] * d[61] - 2 * d[23] * d[45] * d[53] * d[61] + 2 * d[22] * d[48] * d[53] * d[61] + 2 * d[21] * d[49] * d[53] * d[61] - 2 * d[18] * d[50] * d[53] * d[61] + 2 * d[26] * d[45] * d[46] * d[62] - 2 * d[26] * std::pow(d[48], 2) * d[62] - 2 * d[24] * d[46] * d[49] * d[62] + 2 * d[25] * d[48] * d[49] * d[62] - 2 * d[25] * d[45] * d[50] * d[62] + 2 * d[24] * d[48] * d[50] * d[62] - 2 * d[22] * d[46] * d[51] * d[62] + 2 * d[23] * d[48] * d[51] * d[62] - 2 * d[19] * d[49] * d[51] * d[62] + 2 * d[21] * d[50] * d[51] * d[62] - 2 * d[23] * d[45] * d[52] * d[62] + 2 * d[22] * d[48] * d[52] * d[62] + 2 * d[21] * d[49] * d[52] * d[62] - 2 * d[18] * d[50] * d[52] * d[62] + 2 * d[19] * d[45] * d[53] * d[62] + 2 * d[18] * d[46] * d[53] * d[62] - 4 * d[21] * d[48] * d[53] * d[62] - d[20] * d[45] * d[46] * d[71] - d[19] * d[45] * d[47] * d[71] - d[18] * d[46] * d[47] * d[71] + 2 * d[21] * d[47] * d[48] * d[71] + d[20] * std::pow(d[48], 2) * d[71] + 2 * d[22] * d[46] * d[49] * d[71] - 2 * d[23] * d[48] * d[49] * d[71] + d[19] * std::pow(d[49], 2) * d[71] + 2 * d[23] * d[45] * d[50] * d[71] - 2 * d[22] * d[48] * d[50] * d[71] - 2 * d[21] * d[49] * d[50] * d[71] + d[18] * std::pow(d[50], 2) * d[71];
    coeffs[144] = 2 * d[33] * d[46] * d[47] * d[60] - 2 * d[34] * d[47] * d[48] * d[60] - 2 * d[35] * d[46] * d[49] * d[60] + 2 * d[35] * d[48] * d[50] * d[60] + 2 * d[34] * d[49] * d[50] * d[60] - 2 * d[33] * std::pow(d[50], 2) * d[60] + 2 * d[29] * d[46] * d[51] * d[60] + 2 * d[28] * d[47] * d[51] * d[60] - 4 * d[32] * d[50] * d[51] * d[60] - 2 * d[30] * d[47] * d[52] * d[60] - 2 * d[29] * d[48] * d[52] * d[60] + 2 * d[32] * d[49] * d[52] * d[60] + 2 * d[31] * d[50] * d[52] * d[60] - 2 * d[31] * d[46] * d[53] * d[60] + 2 * d[32] * d[48] * d[53] * d[60] - 2 * d[28] * d[49] * d[53] * d[60] + 2 * d[30] * d[50] * d[53] * d[60] + 2 * d[34] * d[45] * d[47] * d[61] - 2 * d[33] * d[47] * d[48] * d[61] + 2 * d[35] * d[48] * d[49] * d[61] - 2 * d[34] * std::pow(d[49], 2) * d[61] - 2 * d[35] * d[45] * d[50] * d[61] + 2 * d[33] * d[49] * d[50] * d[61] - 2 * d[30] * d[47] * d[51] * d[61] - 2 * d[29] * d[48] * d[51] * d[61] + 2 * d[32] * d[49] * d[51] * d[61] + 2 * d[31] * d[50] * d[51] * d[61] + 2 * d[29] * d[45] * d[52] * d[61] + 2 * d[27] * d[47] * d[52] * d[61] - 4 * d[31] * d[49] * d[52] * d[61] - 2 * d[32] * d[45] * d[53] * d[61] + 2 * d[31] * d[48] * d[53] * d[61] + 2 * d[30] * d[49] * d[53] * d[61] - 2 * d[27] * d[50] * d[53] * d[61] + 2 * d[35] * d[45] * d[46] * d[62] - 2 * d[35] * std::pow(d[48], 2) * d[62] - 2 * d[33] * d[46] * d[49] * d[62] + 2 * d[34] * d[48] * d[49] * d[62] - 2 * d[34] * d[45] * d[50] * d[62] + 2 * d[33] * d[48] * d[50] * d[62] - 2 * d[31] * d[46] * d[51] * d[62] + 2 * d[32] * d[48] * d[51] * d[62] - 2 * d[28] * d[49] * d[51] * d[62] + 2 * d[30] * d[50] * d[51] * d[62] - 2 * d[32] * d[45] * d[52] * d[62] + 2 * d[31] * d[48] * d[52] * d[62] + 2 * d[30] * d[49] * d[52] * d[62] - 2 * d[27] * d[50] * d[52] * d[62] + 2 * d[28] * d[45] * d[53] * d[62] + 2 * d[27] * d[46] * d[53] * d[62] - 4 * d[30] * d[48] * d[53] * d[62] - d[29] * d[45] * d[46] * d[71] - d[28] * d[45] * d[47] * d[71] - d[27] * d[46] * d[47] * d[71] + 2 * d[30] * d[47] * d[48] * d[71] + d[29] * std::pow(d[48], 2) * d[71] + 2 * d[31] * d[46] * d[49] * d[71] - 2 * d[32] * d[48] * d[49] * d[71] + d[28] * std::pow(d[49], 2) * d[71] + 2 * d[32] * d[45] * d[50] * d[71] - 2 * d[31] * d[48] * d[50] * d[71] - 2 * d[30] * d[49] * d[50] * d[71] + d[27] * std::pow(d[50], 2) * d[71];
    coeffs[145] = 2 * d[42] * d[46] * d[47] * d[60] - 2 * d[43] * d[47] * d[48] * d[60] - 2 * d[44] * d[46] * d[49] * d[60] + 2 * d[44] * d[48] * d[50] * d[60] + 2 * d[43] * d[49] * d[50] * d[60] - 2 * d[42] * std::pow(d[50], 2) * d[60] + 2 * d[38] * d[46] * d[51] * d[60] + 2 * d[37] * d[47] * d[51] * d[60] - 4 * d[41] * d[50] * d[51] * d[60] - 2 * d[39] * d[47] * d[52] * d[60] - 2 * d[38] * d[48] * d[52] * d[60] + 2 * d[41] * d[49] * d[52] * d[60] + 2 * d[40] * d[50] * d[52] * d[60] - 2 * d[40] * d[46] * d[53] * d[60] + 2 * d[41] * d[48] * d[53] * d[60] - 2 * d[37] * d[49] * d[53] * d[60] + 2 * d[39] * d[50] * d[53] * d[60] + 2 * d[43] * d[45] * d[47] * d[61] - 2 * d[42] * d[47] * d[48] * d[61] + 2 * d[44] * d[48] * d[49] * d[61] - 2 * d[43] * std::pow(d[49], 2) * d[61] - 2 * d[44] * d[45] * d[50] * d[61] + 2 * d[42] * d[49] * d[50] * d[61] - 2 * d[39] * d[47] * d[51] * d[61] - 2 * d[38] * d[48] * d[51] * d[61] + 2 * d[41] * d[49] * d[51] * d[61] + 2 * d[40] * d[50] * d[51] * d[61] + 2 * d[38] * d[45] * d[52] * d[61] + 2 * d[36] * d[47] * d[52] * d[61] - 4 * d[40] * d[49] * d[52] * d[61] - 2 * d[41] * d[45] * d[53] * d[61] + 2 * d[40] * d[48] * d[53] * d[61] + 2 * d[39] * d[49] * d[53] * d[61] - 2 * d[36] * d[50] * d[53] * d[61] + 2 * d[44] * d[45] * d[46] * d[62] - 2 * d[44] * std::pow(d[48], 2) * d[62] - 2 * d[42] * d[46] * d[49] * d[62] + 2 * d[43] * d[48] * d[49] * d[62] - 2 * d[43] * d[45] * d[50] * d[62] + 2 * d[42] * d[48] * d[50] * d[62] - 2 * d[40] * d[46] * d[51] * d[62] + 2 * d[41] * d[48] * d[51] * d[62] - 2 * d[37] * d[49] * d[51] * d[62] + 2 * d[39] * d[50] * d[51] * d[62] - 2 * d[41] * d[45] * d[52] * d[62] + 2 * d[40] * d[48] * d[52] * d[62] + 2 * d[39] * d[49] * d[52] * d[62] - 2 * d[36] * d[50] * d[52] * d[62] + 2 * d[37] * d[45] * d[53] * d[62] + 2 * d[36] * d[46] * d[53] * d[62] - 4 * d[39] * d[48] * d[53] * d[62] - d[38] * d[45] * d[46] * d[71] - d[37] * d[45] * d[47] * d[71] - d[36] * d[46] * d[47] * d[71] + 2 * d[39] * d[47] * d[48] * d[71] + d[38] * std::pow(d[48], 2) * d[71] + 2 * d[40] * d[46] * d[49] * d[71] - 2 * d[41] * d[48] * d[49] * d[71] + d[37] * std::pow(d[49], 2) * d[71] + 2 * d[41] * d[45] * d[50] * d[71] - 2 * d[40] * d[48] * d[50] * d[71] - 2 * d[39] * d[49] * d[50] * d[71] + d[36] * std::pow(d[50], 2) * d[71];
    coeffs[146] = 2 * d[46] * d[47] * d[51] * d[60] - 2 * std::pow(d[50], 2) * d[51] * d[60] - 2 * d[47] * d[48] * d[52] * d[60] + 2 * d[49] * d[50] * d[52] * d[60] - 2 * d[46] * d[49] * d[53] * d[60] + 2 * d[48] * d[50] * d[53] * d[60] - 2 * d[47] * d[48] * d[51] * d[61] + 2 * d[49] * d[50] * d[51] * d[61] + 2 * d[45] * d[47] * d[52] * d[61] - 2 * std::pow(d[49], 2) * d[52] * d[61] + 2 * d[48] * d[49] * d[53] * d[61] - 2 * d[45] * d[50] * d[53] * d[61] - 2 * d[46] * d[49] * d[51] * d[62] + 2 * d[48] * d[50] * d[51] * d[62] + 2 * d[48] * d[49] * d[52] * d[62] - 2 * d[45] * d[50] * d[52] * d[62] + 2 * d[45] * d[46] * d[53] * d[62] - 2 * std::pow(d[48], 2) * d[53] * d[62] - d[45] * d[46] * d[47] * d[71] + d[47] * std::pow(d[48], 2) * d[71] + d[46] * std::pow(d[49], 2) * d[71] - 2 * d[48] * d[49] * d[50] * d[71] + d[45] * std::pow(d[50], 2) * d[71];
    coeffs[147] = 2 * d[6] * d[10] * d[11] * d[60] - 2 * d[7] * d[11] * d[12] * d[60] - 2 * d[8] * d[10] * d[13] * d[60] + 2 * d[8] * d[12] * d[14] * d[60] + 2 * d[7] * d[13] * d[14] * d[60] - 2 * d[6] * std::pow(d[14], 2) * d[60] + 2 * d[2] * d[10] * d[15] * d[60] + 2 * d[1] * d[11] * d[15] * d[60] - 4 * d[5] * d[14] * d[15] * d[60] - 2 * d[3] * d[11] * d[16] * d[60] - 2 * d[2] * d[12] * d[16] * d[60] + 2 * d[5] * d[13] * d[16] * d[60] + 2 * d[4] * d[14] * d[16] * d[60] - 2 * d[4] * d[10] * d[17] * d[60] + 2 * d[5] * d[12] * d[17] * d[60] - 2 * d[1] * d[13] * d[17] * d[60] + 2 * d[3] * d[14] * d[17] * d[60] + d[10] * d[11] * std::pow(d[60], 2) - std::pow(d[14], 2) * std::pow(d[60], 2) + 2 * d[7] * d[9] * d[11] * d[61] - 2 * d[6] * d[11] * d[12] * d[61] + 2 * d[8] * d[12] * d[13] * d[61] - 2 * d[7] * std::pow(d[13], 2) * d[61] - 2 * d[8] * d[9] * d[14] * d[61] + 2 * d[6] * d[13] * d[14] * d[61] - 2 * d[3] * d[11] * d[15] * d[61] - 2 * d[2] * d[12] * d[15] * d[61] + 2 * d[5] * d[13] * d[15] * d[61] + 2 * d[4] * d[14] * d[15] * d[61] + 2 * d[2] * d[9] * d[16] * d[61] + 2 * d[0] * d[11] * d[16] * d[61] - 4 * d[4] * d[13] * d[16] * d[61] - 2 * d[5] * d[9] * d[17] * d[61] + 2 * d[4] * d[12] * d[17] * d[61] + 2 * d[3] * d[13] * d[17] * d[61] - 2 * d[0] * d[14] * d[17] * d[61] - 2 * d[11] * d[12] * d[60] * d[61] + 2 * d[13] * d[14] * d[60] * d[61] + d[9] * d[11] * std::pow(d[61], 2) - std::pow(d[13], 2) * std::pow(d[61], 2) + 2 * d[8] * d[9] * d[10] * d[62] - 2 * d[8] * std::pow(d[12], 2) * d[62] - 2 * d[6] * d[10] * d[13] * d[62] + 2 * d[7] * d[12] * d[13] * d[62] - 2 * d[7] * d[9] * d[14] * d[62] + 2 * d[6] * d[12] * d[14] * d[62] - 2 * d[4] * d[10] * d[15] * d[62] + 2 * d[5] * d[12] * d[15] * d[62] - 2 * d[1] * d[13] * d[15] * d[62] + 2 * d[3] * d[14] * d[15] * d[62] - 2 * d[5] * d[9] * d[16] * d[62] + 2 * d[4] * d[12] * d[16] * d[62] + 2 * d[3] * d[13] * d[16] * d[62] - 2 * d[0] * d[14] * d[16] * d[62] + 2 * d[1] * d[9] * d[17] * d[62] + 2 * d[0] * d[10] * d[17] * d[62] - 4 * d[3] * d[12] * d[17] * d[62] - 2 * d[10] * d[13] * d[60] * d[62] + 2 * d[12] * d[14] * d[60] * d[62] + 2 * d[12] * d[13] * d[61] * d[62] - 2 * d[9] * d[14] * d[61] * d[62] + d[9] * d[10] * std::pow(d[62], 2) - std::pow(d[12], 2) * std::pow(d[62], 2) - d[2] * d[9] * d[10] * d[71] - d[1] * d[9] * d[11] * d[71] - d[0] * d[10] * d[11] * d[71] + 2 * d[3] * d[11] * d[12] * d[71] + d[2] * std::pow(d[12], 2) * d[71] + 2 * d[4] * d[10] * d[13] * d[71] - 2 * d[5] * d[12] * d[13] * d[71] + d[1] * std::pow(d[13], 2) * d[71] + 2 * d[5] * d[9] * d[14] * d[71] - 2 * d[4] * d[12] * d[14] * d[71] - 2 * d[3] * d[13] * d[14] * d[71] + d[0] * std::pow(d[14], 2) * d[71];
    coeffs[148] = 2 * d[6] * d[11] * d[19] * d[60] - 2 * d[8] * d[13] * d[19] * d[60] + 2 * d[2] * d[15] * d[19] * d[60] - 2 * d[4] * d[17] * d[19] * d[60] + 2 * d[6] * d[10] * d[20] * d[60] - 2 * d[7] * d[12] * d[20] * d[60] + 2 * d[1] * d[15] * d[20] * d[60] - 2 * d[3] * d[16] * d[20] * d[60] - 2 * d[7] * d[11] * d[21] * d[60] + 2 * d[8] * d[14] * d[21] * d[60] - 2 * d[2] * d[16] * d[21] * d[60] + 2 * d[5] * d[17] * d[21] * d[60] - 2 * d[8] * d[10] * d[22] * d[60] + 2 * d[7] * d[14] * d[22] * d[60] + 2 * d[5] * d[16] * d[22] * d[60] - 2 * d[1] * d[17] * d[22] * d[60] + 2 * d[8] * d[12] * d[23] * d[60] + 2 * d[7] * d[13] * d[23] * d[60] - 4 * d[6] * d[14] * d[23] * d[60] - 4 * d[5] * d[15] * d[23] * d[60] + 2 * d[4] * d[16] * d[23] * d[60] + 2 * d[3] * d[17] * d[23] * d[60] + 2 * d[2] * d[10] * d[24] * d[60] + 2 * d[1] * d[11] * d[24] * d[60] - 4 * d[5] * d[14] * d[24] * d[60] - 2 * d[3] * d[11] * d[25] * d[60] - 2 * d[2] * d[12] * d[25] * d[60] + 2 * d[5] * d[13] * d[25] * d[60] + 2 * d[4] * d[14] * d[25] * d[60] - 2 * d[4] * d[10] * d[26] * d[60] + 2 * d[5] * d[12] * d[26] * d[60] - 2 * d[1] * d[13] * d[26] * d[60] + 2 * d[3] * d[14] * d[26] * d[60] + d[11] * d[19] * std::pow(d[60], 2) + d[10] * d[20] * std::pow(d[60], 2) - 2 * d[14] * d[23] * std::pow(d[60], 2) + 2 * d[7] * d[11] * d[18] * d[61] - 2 * d[8] * d[14] * d[18] * d[61] + 2 * d[2] * d[16] * d[18] * d[61] - 2 * d[5] * d[17] * d[18] * d[61] + 2 * d[7] * d[9] * d[20] * d[61] - 2 * d[6] * d[12] * d[20] * d[61] - 2 * d[3] * d[15] * d[20] * d[61] + 2 * d[0] * d[16] * d[20] * d[61] - 2 * d[6] * d[11] * d[21] * d[61] + 2 * d[8] * d[13] * d[21] * d[61] - 2 * d[2] * d[15] * d[21] * d[61] + 2 * d[4] * d[17] * d[21] * d[61] + 2 * d[8] * d[12] * d[22] * d[61] - 4 * d[7] * d[13] * d[22] * d[61] + 2 * d[6] * d[14] * d[22] * d[61] + 2 * d[5] * d[15] * d[22] * d[61] - 4 * d[4] * d[16] * d[22] * d[61] + 2 * d[3] * d[17] * d[22] * d[61] - 2 * d[8] * d[9] * d[23] * d[61] + 2 * d[6] * d[13] * d[23] * d[61] + 2 * d[4] * d[15] * d[23] * d[61] - 2 * d[0] * d[17] * d[23] * d[61] - 2 * d[3] * d[11] * d[24] * d[61] - 2 * d[2] * d[12] * d[24] * d[61] + 2 * d[5] * d[13] * d[24] * d[61] + 2 * d[4] * d[14] * d[24] * d[61] + 2 * d[2] * d[9] * d[25] * d[61] + 2 * d[0] * d[11] * d[25] * d[61] - 4 * d[4] * d[13] * d[25] * d[61] - 2 * d[5] * d[9] * d[26] * d[61] + 2 * d[4] * d[12] * d[26] * d[61] + 2 * d[3] * d[13] * d[26] * d[61] - 2 * d[0] * d[14] * d[26] * d[61] - 2 * d[12] * d[20] * d[60] * d[61] - 2 * d[11] * d[21] * d[60] * d[61] + 2 * d[14] * d[22] * d[60] * d[61] + 2 * d[13] * d[23] * d[60] * d[61] + d[11] * d[18] * std::pow(d[61], 2) + d[9] * d[20] * std::pow(d[61], 2) - 2 * d[13] * d[22] * std::pow(d[61], 2) + 2 * d[8] * d[10] * d[18] * d[62] - 2 * d[7] * d[14] * d[18] * d[62] - 2 * d[5] * d[16] * d[18] * d[62] + 2 * d[1] * d[17] * d[18] * d[62] + 2 * d[8] * d[9] * d[19] * d[62] - 2 * d[6] * d[13] * d[19] * d[62] - 2 * d[4] * d[15] * d[19] * d[62] + 2 * d[0] * d[17] * d[19] * d[62] - 4 * d[8] * d[12] * d[21] * d[62] + 2 * d[7] * d[13] * d[21] * d[62] + 2 * d[6] * d[14] * d[21] * d[62] + 2 * d[5] * d[15] * d[21] * d[62] + 2 * d[4] * d[16] * d[21] * d[62] - 4 * d[3] * d[17] * d[21] * d[62] - 2 * d[6] * d[10] * d[22] * d[62] + 2 * d[7] * d[12] * d[22] * d[62] - 2 * d[1] * d[15] * d[22] * d[62] + 2 * d[3] * d[16] * d[22] * d[62] - 2 * d[7] * d[9] * d[23] * d[62] + 2 * d[6] * d[12] * d[23] * d[62] + 2 * d[3] * d[15] * d[23] * d[62] - 2 * d[0] * d[16] * d[23] * d[62] - 2 * d[4] * d[10] * d[24] * d[62] + 2 * d[5] * d[12] * d[24] * d[62] - 2 * d[1] * d[13] * d[24] * d[62] + 2 * d[3] * d[14] * d[24] * d[62] - 2 * d[5] * d[9] * d[25] * d[62] + 2 * d[4] * d[12] * d[25] * d[62] + 2 * d[3] * d[13] * d[25] * d[62] - 2 * d[0] * d[14] * d[25] * d[62] + 2 * d[1] * d[9] * d[26] * d[62] + 2 * d[0] * d[10] * d[26] * d[62] - 4 * d[3] * d[12] * d[26] * d[62] - 2 * d[13] * d[19] * d[60] * d[62] + 2 * d[14] * d[21] * d[60] * d[62] - 2 * d[10] * d[22] * d[60] * d[62] + 2 * d[12] * d[23] * d[60] * d[62] - 2 * d[14] * d[18] * d[61] * d[62] + 2 * d[13] * d[21] * d[61] * d[62] + 2 * d[12] * d[22] * d[61] * d[62] - 2 * d[9] * d[23] * d[61] * d[62] + d[10] * d[18] * std::pow(d[62], 2) + d[9] * d[19] * std::pow(d[62], 2) - 2 * d[12] * d[21] * std::pow(d[62], 2) - d[2] * d[10] * d[18] * d[71] - d[1] * d[11] * d[18] * d[71] + 2 * d[5] * d[14] * d[18] * d[71] - d[2] * d[9] * d[19] * d[71] - d[0] * d[11] * d[19] * d[71] + 2 * d[4] * d[13] * d[19] * d[71] - d[1] * d[9] * d[20] * d[71] - d[0] * d[10] * d[20] * d[71] + 2 * d[3] * d[12] * d[20] * d[71] + 2 * d[3] * d[11] * d[21] * d[71] + 2 * d[2] * d[12] * d[21] * d[71] - 2 * d[5] * d[13] * d[21] * d[71] - 2 * d[4] * d[14] * d[21] * d[71] + 2 * d[4] * d[10] * d[22] * d[71] - 2 * d[5] * d[12] * d[22] * d[71] + 2 * d[1] * d[13] * d[22] * d[71] - 2 * d[3] * d[14] * d[22] * d[71] + 2 * d[5] * d[9] * d[23] * d[71] - 2 * d[4] * d[12] * d[23] * d[71] - 2 * d[3] * d[13] * d[23] * d[71] + 2 * d[0] * d[14] * d[23] * d[71];
    coeffs[149] = 2 * d[6] * d[19] * d[20] * d[60] - 2 * d[7] * d[20] * d[21] * d[60] - 2 * d[8] * d[19] * d[22] * d[60] + 2 * d[8] * d[21] * d[23] * d[60] + 2 * d[7] * d[22] * d[23] * d[60] - 2 * d[6] * std::pow(d[23], 2) * d[60] + 2 * d[2] * d[19] * d[24] * d[60] + 2 * d[1] * d[20] * d[24] * d[60] - 4 * d[5] * d[23] * d[24] * d[60] - 2 * d[3] * d[20] * d[25] * d[60] - 2 * d[2] * d[21] * d[25] * d[60] + 2 * d[5] * d[22] * d[25] * d[60] + 2 * d[4] * d[23] * d[25] * d[60] - 2 * d[4] * d[19] * d[26] * d[60] + 2 * d[5] * d[21] * d[26] * d[60] - 2 * d[1] * d[22] * d[26] * d[60] + 2 * d[3] * d[23] * d[26] * d[60] + d[19] * d[20] * std::pow(d[60], 2) - std::pow(d[23], 2) * std::pow(d[60], 2) + 2 * d[7] * d[18] * d[20] * d[61] - 2 * d[6] * d[20] * d[21] * d[61] + 2 * d[8] * d[21] * d[22] * d[61] - 2 * d[7] * std::pow(d[22], 2) * d[61] - 2 * d[8] * d[18] * d[23] * d[61] + 2 * d[6] * d[22] * d[23] * d[61] - 2 * d[3] * d[20] * d[24] * d[61] - 2 * d[2] * d[21] * d[24] * d[61] + 2 * d[5] * d[22] * d[24] * d[61] + 2 * d[4] * d[23] * d[24] * d[61] + 2 * d[2] * d[18] * d[25] * d[61] + 2 * d[0] * d[20] * d[25] * d[61] - 4 * d[4] * d[22] * d[25] * d[61] - 2 * d[5] * d[18] * d[26] * d[61] + 2 * d[4] * d[21] * d[26] * d[61] + 2 * d[3] * d[22] * d[26] * d[61] - 2 * d[0] * d[23] * d[26] * d[61] - 2 * d[20] * d[21] * d[60] * d[61] + 2 * d[22] * d[23] * d[60] * d[61] + d[18] * d[20] * std::pow(d[61], 2) - std::pow(d[22], 2) * std::pow(d[61], 2) + 2 * d[8] * d[18] * d[19] * d[62] - 2 * d[8] * std::pow(d[21], 2) * d[62] - 2 * d[6] * d[19] * d[22] * d[62] + 2 * d[7] * d[21] * d[22] * d[62] - 2 * d[7] * d[18] * d[23] * d[62] + 2 * d[6] * d[21] * d[23] * d[62] - 2 * d[4] * d[19] * d[24] * d[62] + 2 * d[5] * d[21] * d[24] * d[62] - 2 * d[1] * d[22] * d[24] * d[62] + 2 * d[3] * d[23] * d[24] * d[62] - 2 * d[5] * d[18] * d[25] * d[62] + 2 * d[4] * d[21] * d[25] * d[62] + 2 * d[3] * d[22] * d[25] * d[62] - 2 * d[0] * d[23] * d[25] * d[62] + 2 * d[1] * d[18] * d[26] * d[62] + 2 * d[0] * d[19] * d[26] * d[62] - 4 * d[3] * d[21] * d[26] * d[62] - 2 * d[19] * d[22] * d[60] * d[62] + 2 * d[21] * d[23] * d[60] * d[62] + 2 * d[21] * d[22] * d[61] * d[62] - 2 * d[18] * d[23] * d[61] * d[62] + d[18] * d[19] * std::pow(d[62], 2) - std::pow(d[21], 2) * std::pow(d[62], 2) - d[2] * d[18] * d[19] * d[71] - d[1] * d[18] * d[20] * d[71] - d[0] * d[19] * d[20] * d[71] + 2 * d[3] * d[20] * d[21] * d[71] + d[2] * std::pow(d[21], 2) * d[71] + 2 * d[4] * d[19] * d[22] * d[71] - 2 * d[5] * d[21] * d[22] * d[71] + d[1] * std::pow(d[22], 2) * d[71] + 2 * d[5] * d[18] * d[23] * d[71] - 2 * d[4] * d[21] * d[23] * d[71] - 2 * d[3] * d[22] * d[23] * d[71] + d[0] * std::pow(d[23], 2) * d[71];
    coeffs[150] = 2 * d[6] * d[11] * d[28] * d[60] - 2 * d[8] * d[13] * d[28] * d[60] + 2 * d[2] * d[15] * d[28] * d[60] - 2 * d[4] * d[17] * d[28] * d[60] + 2 * d[6] * d[10] * d[29] * d[60] - 2 * d[7] * d[12] * d[29] * d[60] + 2 * d[1] * d[15] * d[29] * d[60] - 2 * d[3] * d[16] * d[29] * d[60] - 2 * d[7] * d[11] * d[30] * d[60] + 2 * d[8] * d[14] * d[30] * d[60] - 2 * d[2] * d[16] * d[30] * d[60] + 2 * d[5] * d[17] * d[30] * d[60] - 2 * d[8] * d[10] * d[31] * d[60] + 2 * d[7] * d[14] * d[31] * d[60] + 2 * d[5] * d[16] * d[31] * d[60] - 2 * d[1] * d[17] * d[31] * d[60] + 2 * d[8] * d[12] * d[32] * d[60] + 2 * d[7] * d[13] * d[32] * d[60] - 4 * d[6] * d[14] * d[32] * d[60] - 4 * d[5] * d[15] * d[32] * d[60] + 2 * d[4] * d[16] * d[32] * d[60] + 2 * d[3] * d[17] * d[32] * d[60] + 2 * d[2] * d[10] * d[33] * d[60] + 2 * d[1] * d[11] * d[33] * d[60] - 4 * d[5] * d[14] * d[33] * d[60] - 2 * d[3] * d[11] * d[34] * d[60] - 2 * d[2] * d[12] * d[34] * d[60] + 2 * d[5] * d[13] * d[34] * d[60] + 2 * d[4] * d[14] * d[34] * d[60] - 2 * d[4] * d[10] * d[35] * d[60] + 2 * d[5] * d[12] * d[35] * d[60] - 2 * d[1] * d[13] * d[35] * d[60] + 2 * d[3] * d[14] * d[35] * d[60] + d[11] * d[28] * std::pow(d[60], 2) + d[10] * d[29] * std::pow(d[60], 2) - 2 * d[14] * d[32] * std::pow(d[60], 2) + 2 * d[7] * d[11] * d[27] * d[61] - 2 * d[8] * d[14] * d[27] * d[61] + 2 * d[2] * d[16] * d[27] * d[61] - 2 * d[5] * d[17] * d[27] * d[61] + 2 * d[7] * d[9] * d[29] * d[61] - 2 * d[6] * d[12] * d[29] * d[61] - 2 * d[3] * d[15] * d[29] * d[61] + 2 * d[0] * d[16] * d[29] * d[61] - 2 * d[6] * d[11] * d[30] * d[61] + 2 * d[8] * d[13] * d[30] * d[61] - 2 * d[2] * d[15] * d[30] * d[61] + 2 * d[4] * d[17] * d[30] * d[61] + 2 * d[8] * d[12] * d[31] * d[61] - 4 * d[7] * d[13] * d[31] * d[61] + 2 * d[6] * d[14] * d[31] * d[61] + 2 * d[5] * d[15] * d[31] * d[61] - 4 * d[4] * d[16] * d[31] * d[61] + 2 * d[3] * d[17] * d[31] * d[61] - 2 * d[8] * d[9] * d[32] * d[61] + 2 * d[6] * d[13] * d[32] * d[61] + 2 * d[4] * d[15] * d[32] * d[61] - 2 * d[0] * d[17] * d[32] * d[61] - 2 * d[3] * d[11] * d[33] * d[61] - 2 * d[2] * d[12] * d[33] * d[61] + 2 * d[5] * d[13] * d[33] * d[61] + 2 * d[4] * d[14] * d[33] * d[61] + 2 * d[2] * d[9] * d[34] * d[61] + 2 * d[0] * d[11] * d[34] * d[61] - 4 * d[4] * d[13] * d[34] * d[61] - 2 * d[5] * d[9] * d[35] * d[61] + 2 * d[4] * d[12] * d[35] * d[61] + 2 * d[3] * d[13] * d[35] * d[61] - 2 * d[0] * d[14] * d[35] * d[61] - 2 * d[12] * d[29] * d[60] * d[61] - 2 * d[11] * d[30] * d[60] * d[61] + 2 * d[14] * d[31] * d[60] * d[61] + 2 * d[13] * d[32] * d[60] * d[61] + d[11] * d[27] * std::pow(d[61], 2) + d[9] * d[29] * std::pow(d[61], 2) - 2 * d[13] * d[31] * std::pow(d[61], 2) + 2 * d[8] * d[10] * d[27] * d[62] - 2 * d[7] * d[14] * d[27] * d[62] - 2 * d[5] * d[16] * d[27] * d[62] + 2 * d[1] * d[17] * d[27] * d[62] + 2 * d[8] * d[9] * d[28] * d[62] - 2 * d[6] * d[13] * d[28] * d[62] - 2 * d[4] * d[15] * d[28] * d[62] + 2 * d[0] * d[17] * d[28] * d[62] - 4 * d[8] * d[12] * d[30] * d[62] + 2 * d[7] * d[13] * d[30] * d[62] + 2 * d[6] * d[14] * d[30] * d[62] + 2 * d[5] * d[15] * d[30] * d[62] + 2 * d[4] * d[16] * d[30] * d[62] - 4 * d[3] * d[17] * d[30] * d[62] - 2 * d[6] * d[10] * d[31] * d[62] + 2 * d[7] * d[12] * d[31] * d[62] - 2 * d[1] * d[15] * d[31] * d[62] + 2 * d[3] * d[16] * d[31] * d[62] - 2 * d[7] * d[9] * d[32] * d[62] + 2 * d[6] * d[12] * d[32] * d[62] + 2 * d[3] * d[15] * d[32] * d[62] - 2 * d[0] * d[16] * d[32] * d[62] - 2 * d[4] * d[10] * d[33] * d[62] + 2 * d[5] * d[12] * d[33] * d[62] - 2 * d[1] * d[13] * d[33] * d[62] + 2 * d[3] * d[14] * d[33] * d[62] - 2 * d[5] * d[9] * d[34] * d[62] + 2 * d[4] * d[12] * d[34] * d[62] + 2 * d[3] * d[13] * d[34] * d[62] - 2 * d[0] * d[14] * d[34] * d[62] + 2 * d[1] * d[9] * d[35] * d[62] + 2 * d[0] * d[10] * d[35] * d[62] - 4 * d[3] * d[12] * d[35] * d[62] - 2 * d[13] * d[28] * d[60] * d[62] + 2 * d[14] * d[30] * d[60] * d[62] - 2 * d[10] * d[31] * d[60] * d[62] + 2 * d[12] * d[32] * d[60] * d[62] - 2 * d[14] * d[27] * d[61] * d[62] + 2 * d[13] * d[30] * d[61] * d[62] + 2 * d[12] * d[31] * d[61] * d[62] - 2 * d[9] * d[32] * d[61] * d[62] + d[10] * d[27] * std::pow(d[62], 2) + d[9] * d[28] * std::pow(d[62], 2) - 2 * d[12] * d[30] * std::pow(d[62], 2) - d[2] * d[10] * d[27] * d[71] - d[1] * d[11] * d[27] * d[71] + 2 * d[5] * d[14] * d[27] * d[71] - d[2] * d[9] * d[28] * d[71] - d[0] * d[11] * d[28] * d[71] + 2 * d[4] * d[13] * d[28] * d[71] - d[1] * d[9] * d[29] * d[71] - d[0] * d[10] * d[29] * d[71] + 2 * d[3] * d[12] * d[29] * d[71] + 2 * d[3] * d[11] * d[30] * d[71] + 2 * d[2] * d[12] * d[30] * d[71] - 2 * d[5] * d[13] * d[30] * d[71] - 2 * d[4] * d[14] * d[30] * d[71] + 2 * d[4] * d[10] * d[31] * d[71] - 2 * d[5] * d[12] * d[31] * d[71] + 2 * d[1] * d[13] * d[31] * d[71] - 2 * d[3] * d[14] * d[31] * d[71] + 2 * d[5] * d[9] * d[32] * d[71] - 2 * d[4] * d[12] * d[32] * d[71] - 2 * d[3] * d[13] * d[32] * d[71] + 2 * d[0] * d[14] * d[32] * d[71];
    coeffs[151] = 2 * d[6] * d[20] * d[28] * d[60] - 2 * d[8] * d[22] * d[28] * d[60] + 2 * d[2] * d[24] * d[28] * d[60] - 2 * d[4] * d[26] * d[28] * d[60] + 2 * d[6] * d[19] * d[29] * d[60] - 2 * d[7] * d[21] * d[29] * d[60] + 2 * d[1] * d[24] * d[29] * d[60] - 2 * d[3] * d[25] * d[29] * d[60] - 2 * d[7] * d[20] * d[30] * d[60] + 2 * d[8] * d[23] * d[30] * d[60] - 2 * d[2] * d[25] * d[30] * d[60] + 2 * d[5] * d[26] * d[30] * d[60] - 2 * d[8] * d[19] * d[31] * d[60] + 2 * d[7] * d[23] * d[31] * d[60] + 2 * d[5] * d[25] * d[31] * d[60] - 2 * d[1] * d[26] * d[31] * d[60] + 2 * d[8] * d[21] * d[32] * d[60] + 2 * d[7] * d[22] * d[32] * d[60] - 4 * d[6] * d[23] * d[32] * d[60] - 4 * d[5] * d[24] * d[32] * d[60] + 2 * d[4] * d[25] * d[32] * d[60] + 2 * d[3] * d[26] * d[32] * d[60] + 2 * d[2] * d[19] * d[33] * d[60] + 2 * d[1] * d[20] * d[33] * d[60] - 4 * d[5] * d[23] * d[33] * d[60] - 2 * d[3] * d[20] * d[34] * d[60] - 2 * d[2] * d[21] * d[34] * d[60] + 2 * d[5] * d[22] * d[34] * d[60] + 2 * d[4] * d[23] * d[34] * d[60] - 2 * d[4] * d[19] * d[35] * d[60] + 2 * d[5] * d[21] * d[35] * d[60] - 2 * d[1] * d[22] * d[35] * d[60] + 2 * d[3] * d[23] * d[35] * d[60] + d[20] * d[28] * std::pow(d[60], 2) + d[19] * d[29] * std::pow(d[60], 2) - 2 * d[23] * d[32] * std::pow(d[60], 2) + 2 * d[7] * d[20] * d[27] * d[61] - 2 * d[8] * d[23] * d[27] * d[61] + 2 * d[2] * d[25] * d[27] * d[61] - 2 * d[5] * d[26] * d[27] * d[61] + 2 * d[7] * d[18] * d[29] * d[61] - 2 * d[6] * d[21] * d[29] * d[61] - 2 * d[3] * d[24] * d[29] * d[61] + 2 * d[0] * d[25] * d[29] * d[61] - 2 * d[6] * d[20] * d[30] * d[61] + 2 * d[8] * d[22] * d[30] * d[61] - 2 * d[2] * d[24] * d[30] * d[61] + 2 * d[4] * d[26] * d[30] * d[61] + 2 * d[8] * d[21] * d[31] * d[61] - 4 * d[7] * d[22] * d[31] * d[61] + 2 * d[6] * d[23] * d[31] * d[61] + 2 * d[5] * d[24] * d[31] * d[61] - 4 * d[4] * d[25] * d[31] * d[61] + 2 * d[3] * d[26] * d[31] * d[61] - 2 * d[8] * d[18] * d[32] * d[61] + 2 * d[6] * d[22] * d[32] * d[61] + 2 * d[4] * d[24] * d[32] * d[61] - 2 * d[0] * d[26] * d[32] * d[61] - 2 * d[3] * d[20] * d[33] * d[61] - 2 * d[2] * d[21] * d[33] * d[61] + 2 * d[5] * d[22] * d[33] * d[61] + 2 * d[4] * d[23] * d[33] * d[61] + 2 * d[2] * d[18] * d[34] * d[61] + 2 * d[0] * d[20] * d[34] * d[61] - 4 * d[4] * d[22] * d[34] * d[61] - 2 * d[5] * d[18] * d[35] * d[61] + 2 * d[4] * d[21] * d[35] * d[61] + 2 * d[3] * d[22] * d[35] * d[61] - 2 * d[0] * d[23] * d[35] * d[61] - 2 * d[21] * d[29] * d[60] * d[61] - 2 * d[20] * d[30] * d[60] * d[61] + 2 * d[23] * d[31] * d[60] * d[61] + 2 * d[22] * d[32] * d[60] * d[61] + d[20] * d[27] * std::pow(d[61], 2) + d[18] * d[29] * std::pow(d[61], 2) - 2 * d[22] * d[31] * std::pow(d[61], 2) + 2 * d[8] * d[19] * d[27] * d[62] - 2 * d[7] * d[23] * d[27] * d[62] - 2 * d[5] * d[25] * d[27] * d[62] + 2 * d[1] * d[26] * d[27] * d[62] + 2 * d[8] * d[18] * d[28] * d[62] - 2 * d[6] * d[22] * d[28] * d[62] - 2 * d[4] * d[24] * d[28] * d[62] + 2 * d[0] * d[26] * d[28] * d[62] - 4 * d[8] * d[21] * d[30] * d[62] + 2 * d[7] * d[22] * d[30] * d[62] + 2 * d[6] * d[23] * d[30] * d[62] + 2 * d[5] * d[24] * d[30] * d[62] + 2 * d[4] * d[25] * d[30] * d[62] - 4 * d[3] * d[26] * d[30] * d[62] - 2 * d[6] * d[19] * d[31] * d[62] + 2 * d[7] * d[21] * d[31] * d[62] - 2 * d[1] * d[24] * d[31] * d[62] + 2 * d[3] * d[25] * d[31] * d[62] - 2 * d[7] * d[18] * d[32] * d[62] + 2 * d[6] * d[21] * d[32] * d[62] + 2 * d[3] * d[24] * d[32] * d[62] - 2 * d[0] * d[25] * d[32] * d[62] - 2 * d[4] * d[19] * d[33] * d[62] + 2 * d[5] * d[21] * d[33] * d[62] - 2 * d[1] * d[22] * d[33] * d[62] + 2 * d[3] * d[23] * d[33] * d[62] - 2 * d[5] * d[18] * d[34] * d[62] + 2 * d[4] * d[21] * d[34] * d[62] + 2 * d[3] * d[22] * d[34] * d[62] - 2 * d[0] * d[23] * d[34] * d[62] + 2 * d[1] * d[18] * d[35] * d[62] + 2 * d[0] * d[19] * d[35] * d[62] - 4 * d[3] * d[21] * d[35] * d[62] - 2 * d[22] * d[28] * d[60] * d[62] + 2 * d[23] * d[30] * d[60] * d[62] - 2 * d[19] * d[31] * d[60] * d[62] + 2 * d[21] * d[32] * d[60] * d[62] - 2 * d[23] * d[27] * d[61] * d[62] + 2 * d[22] * d[30] * d[61] * d[62] + 2 * d[21] * d[31] * d[61] * d[62] - 2 * d[18] * d[32] * d[61] * d[62] + d[19] * d[27] * std::pow(d[62], 2) + d[18] * d[28] * std::pow(d[62], 2) - 2 * d[21] * d[30] * std::pow(d[62], 2) - d[2] * d[19] * d[27] * d[71] - d[1] * d[20] * d[27] * d[71] + 2 * d[5] * d[23] * d[27] * d[71] - d[2] * d[18] * d[28] * d[71] - d[0] * d[20] * d[28] * d[71] + 2 * d[4] * d[22] * d[28] * d[71] - d[1] * d[18] * d[29] * d[71] - d[0] * d[19] * d[29] * d[71] + 2 * d[3] * d[21] * d[29] * d[71] + 2 * d[3] * d[20] * d[30] * d[71] + 2 * d[2] * d[21] * d[30] * d[71] - 2 * d[5] * d[22] * d[30] * d[71] - 2 * d[4] * d[23] * d[30] * d[71] + 2 * d[4] * d[19] * d[31] * d[71] - 2 * d[5] * d[21] * d[31] * d[71] + 2 * d[1] * d[22] * d[31] * d[71] - 2 * d[3] * d[23] * d[31] * d[71] + 2 * d[5] * d[18] * d[32] * d[71] - 2 * d[4] * d[21] * d[32] * d[71] - 2 * d[3] * d[22] * d[32] * d[71] + 2 * d[0] * d[23] * d[32] * d[71];
    coeffs[152] = 2 * d[6] * d[28] * d[29] * d[60] - 2 * d[7] * d[29] * d[30] * d[60] - 2 * d[8] * d[28] * d[31] * d[60] + 2 * d[8] * d[30] * d[32] * d[60] + 2 * d[7] * d[31] * d[32] * d[60] - 2 * d[6] * std::pow(d[32], 2) * d[60] + 2 * d[2] * d[28] * d[33] * d[60] + 2 * d[1] * d[29] * d[33] * d[60] - 4 * d[5] * d[32] * d[33] * d[60] - 2 * d[3] * d[29] * d[34] * d[60] - 2 * d[2] * d[30] * d[34] * d[60] + 2 * d[5] * d[31] * d[34] * d[60] + 2 * d[4] * d[32] * d[34] * d[60] - 2 * d[4] * d[28] * d[35] * d[60] + 2 * d[5] * d[30] * d[35] * d[60] - 2 * d[1] * d[31] * d[35] * d[60] + 2 * d[3] * d[32] * d[35] * d[60] + d[28] * d[29] * std::pow(d[60], 2) - std::pow(d[32], 2) * std::pow(d[60], 2) + 2 * d[7] * d[27] * d[29] * d[61] - 2 * d[6] * d[29] * d[30] * d[61] + 2 * d[8] * d[30] * d[31] * d[61] - 2 * d[7] * std::pow(d[31], 2) * d[61] - 2 * d[8] * d[27] * d[32] * d[61] + 2 * d[6] * d[31] * d[32] * d[61] - 2 * d[3] * d[29] * d[33] * d[61] - 2 * d[2] * d[30] * d[33] * d[61] + 2 * d[5] * d[31] * d[33] * d[61] + 2 * d[4] * d[32] * d[33] * d[61] + 2 * d[2] * d[27] * d[34] * d[61] + 2 * d[0] * d[29] * d[34] * d[61] - 4 * d[4] * d[31] * d[34] * d[61] - 2 * d[5] * d[27] * d[35] * d[61] + 2 * d[4] * d[30] * d[35] * d[61] + 2 * d[3] * d[31] * d[35] * d[61] - 2 * d[0] * d[32] * d[35] * d[61] - 2 * d[29] * d[30] * d[60] * d[61] + 2 * d[31] * d[32] * d[60] * d[61] + d[27] * d[29] * std::pow(d[61], 2) - std::pow(d[31], 2) * std::pow(d[61], 2) + 2 * d[8] * d[27] * d[28] * d[62] - 2 * d[8] * std::pow(d[30], 2) * d[62] - 2 * d[6] * d[28] * d[31] * d[62] + 2 * d[7] * d[30] * d[31] * d[62] - 2 * d[7] * d[27] * d[32] * d[62] + 2 * d[6] * d[30] * d[32] * d[62] - 2 * d[4] * d[28] * d[33] * d[62] + 2 * d[5] * d[30] * d[33] * d[62] - 2 * d[1] * d[31] * d[33] * d[62] + 2 * d[3] * d[32] * d[33] * d[62] - 2 * d[5] * d[27] * d[34] * d[62] + 2 * d[4] * d[30] * d[34] * d[62] + 2 * d[3] * d[31] * d[34] * d[62] - 2 * d[0] * d[32] * d[34] * d[62] + 2 * d[1] * d[27] * d[35] * d[62] + 2 * d[0] * d[28] * d[35] * d[62] - 4 * d[3] * d[30] * d[35] * d[62] - 2 * d[28] * d[31] * d[60] * d[62] + 2 * d[30] * d[32] * d[60] * d[62] + 2 * d[30] * d[31] * d[61] * d[62] - 2 * d[27] * d[32] * d[61] * d[62] + d[27] * d[28] * std::pow(d[62], 2) - std::pow(d[30], 2) * std::pow(d[62], 2) - d[2] * d[27] * d[28] * d[71] - d[1] * d[27] * d[29] * d[71] - d[0] * d[28] * d[29] * d[71] + 2 * d[3] * d[29] * d[30] * d[71] + d[2] * std::pow(d[30], 2) * d[71] + 2 * d[4] * d[28] * d[31] * d[71] - 2 * d[5] * d[30] * d[31] * d[71] + d[1] * std::pow(d[31], 2) * d[71] + 2 * d[5] * d[27] * d[32] * d[71] - 2 * d[4] * d[30] * d[32] * d[71] - 2 * d[3] * d[31] * d[32] * d[71] + d[0] * std::pow(d[32], 2) * d[71];
    coeffs[153] = 2 * d[6] * d[11] * d[37] * d[60] - 2 * d[8] * d[13] * d[37] * d[60] + 2 * d[2] * d[15] * d[37] * d[60] - 2 * d[4] * d[17] * d[37] * d[60] + 2 * d[6] * d[10] * d[38] * d[60] - 2 * d[7] * d[12] * d[38] * d[60] + 2 * d[1] * d[15] * d[38] * d[60] - 2 * d[3] * d[16] * d[38] * d[60] - 2 * d[7] * d[11] * d[39] * d[60] + 2 * d[8] * d[14] * d[39] * d[60] - 2 * d[2] * d[16] * d[39] * d[60] + 2 * d[5] * d[17] * d[39] * d[60] - 2 * d[8] * d[10] * d[40] * d[60] + 2 * d[7] * d[14] * d[40] * d[60] + 2 * d[5] * d[16] * d[40] * d[60] - 2 * d[1] * d[17] * d[40] * d[60] + 2 * d[8] * d[12] * d[41] * d[60] + 2 * d[7] * d[13] * d[41] * d[60] - 4 * d[6] * d[14] * d[41] * d[60] - 4 * d[5] * d[15] * d[41] * d[60] + 2 * d[4] * d[16] * d[41] * d[60] + 2 * d[3] * d[17] * d[41] * d[60] + 2 * d[2] * d[10] * d[42] * d[60] + 2 * d[1] * d[11] * d[42] * d[60] - 4 * d[5] * d[14] * d[42] * d[60] - 2 * d[3] * d[11] * d[43] * d[60] - 2 * d[2] * d[12] * d[43] * d[60] + 2 * d[5] * d[13] * d[43] * d[60] + 2 * d[4] * d[14] * d[43] * d[60] - 2 * d[4] * d[10] * d[44] * d[60] + 2 * d[5] * d[12] * d[44] * d[60] - 2 * d[1] * d[13] * d[44] * d[60] + 2 * d[3] * d[14] * d[44] * d[60] + d[11] * d[37] * std::pow(d[60], 2) + d[10] * d[38] * std::pow(d[60], 2) - 2 * d[14] * d[41] * std::pow(d[60], 2) + 2 * d[7] * d[11] * d[36] * d[61] - 2 * d[8] * d[14] * d[36] * d[61] + 2 * d[2] * d[16] * d[36] * d[61] - 2 * d[5] * d[17] * d[36] * d[61] + 2 * d[7] * d[9] * d[38] * d[61] - 2 * d[6] * d[12] * d[38] * d[61] - 2 * d[3] * d[15] * d[38] * d[61] + 2 * d[0] * d[16] * d[38] * d[61] - 2 * d[6] * d[11] * d[39] * d[61] + 2 * d[8] * d[13] * d[39] * d[61] - 2 * d[2] * d[15] * d[39] * d[61] + 2 * d[4] * d[17] * d[39] * d[61] + 2 * d[8] * d[12] * d[40] * d[61] - 4 * d[7] * d[13] * d[40] * d[61] + 2 * d[6] * d[14] * d[40] * d[61] + 2 * d[5] * d[15] * d[40] * d[61] - 4 * d[4] * d[16] * d[40] * d[61] + 2 * d[3] * d[17] * d[40] * d[61] - 2 * d[8] * d[9] * d[41] * d[61] + 2 * d[6] * d[13] * d[41] * d[61] + 2 * d[4] * d[15] * d[41] * d[61] - 2 * d[0] * d[17] * d[41] * d[61] - 2 * d[3] * d[11] * d[42] * d[61] - 2 * d[2] * d[12] * d[42] * d[61] + 2 * d[5] * d[13] * d[42] * d[61] + 2 * d[4] * d[14] * d[42] * d[61] + 2 * d[2] * d[9] * d[43] * d[61] + 2 * d[0] * d[11] * d[43] * d[61] - 4 * d[4] * d[13] * d[43] * d[61] - 2 * d[5] * d[9] * d[44] * d[61] + 2 * d[4] * d[12] * d[44] * d[61] + 2 * d[3] * d[13] * d[44] * d[61] - 2 * d[0] * d[14] * d[44] * d[61] - 2 * d[12] * d[38] * d[60] * d[61] - 2 * d[11] * d[39] * d[60] * d[61] + 2 * d[14] * d[40] * d[60] * d[61] + 2 * d[13] * d[41] * d[60] * d[61] + d[11] * d[36] * std::pow(d[61], 2) + d[9] * d[38] * std::pow(d[61], 2) - 2 * d[13] * d[40] * std::pow(d[61], 2) + 2 * d[8] * d[10] * d[36] * d[62] - 2 * d[7] * d[14] * d[36] * d[62] - 2 * d[5] * d[16] * d[36] * d[62] + 2 * d[1] * d[17] * d[36] * d[62] + 2 * d[8] * d[9] * d[37] * d[62] - 2 * d[6] * d[13] * d[37] * d[62] - 2 * d[4] * d[15] * d[37] * d[62] + 2 * d[0] * d[17] * d[37] * d[62] - 4 * d[8] * d[12] * d[39] * d[62] + 2 * d[7] * d[13] * d[39] * d[62] + 2 * d[6] * d[14] * d[39] * d[62] + 2 * d[5] * d[15] * d[39] * d[62] + 2 * d[4] * d[16] * d[39] * d[62] - 4 * d[3] * d[17] * d[39] * d[62] - 2 * d[6] * d[10] * d[40] * d[62] + 2 * d[7] * d[12] * d[40] * d[62] - 2 * d[1] * d[15] * d[40] * d[62] + 2 * d[3] * d[16] * d[40] * d[62] - 2 * d[7] * d[9] * d[41] * d[62] + 2 * d[6] * d[12] * d[41] * d[62] + 2 * d[3] * d[15] * d[41] * d[62] - 2 * d[0] * d[16] * d[41] * d[62] - 2 * d[4] * d[10] * d[42] * d[62] + 2 * d[5] * d[12] * d[42] * d[62] - 2 * d[1] * d[13] * d[42] * d[62] + 2 * d[3] * d[14] * d[42] * d[62] - 2 * d[5] * d[9] * d[43] * d[62] + 2 * d[4] * d[12] * d[43] * d[62] + 2 * d[3] * d[13] * d[43] * d[62] - 2 * d[0] * d[14] * d[43] * d[62] + 2 * d[1] * d[9] * d[44] * d[62] + 2 * d[0] * d[10] * d[44] * d[62] - 4 * d[3] * d[12] * d[44] * d[62] - 2 * d[13] * d[37] * d[60] * d[62] + 2 * d[14] * d[39] * d[60] * d[62] - 2 * d[10] * d[40] * d[60] * d[62] + 2 * d[12] * d[41] * d[60] * d[62] - 2 * d[14] * d[36] * d[61] * d[62] + 2 * d[13] * d[39] * d[61] * d[62] + 2 * d[12] * d[40] * d[61] * d[62] - 2 * d[9] * d[41] * d[61] * d[62] + d[10] * d[36] * std::pow(d[62], 2) + d[9] * d[37] * std::pow(d[62], 2) - 2 * d[12] * d[39] * std::pow(d[62], 2) - d[2] * d[10] * d[36] * d[71] - d[1] * d[11] * d[36] * d[71] + 2 * d[5] * d[14] * d[36] * d[71] - d[2] * d[9] * d[37] * d[71] - d[0] * d[11] * d[37] * d[71] + 2 * d[4] * d[13] * d[37] * d[71] - d[1] * d[9] * d[38] * d[71] - d[0] * d[10] * d[38] * d[71] + 2 * d[3] * d[12] * d[38] * d[71] + 2 * d[3] * d[11] * d[39] * d[71] + 2 * d[2] * d[12] * d[39] * d[71] - 2 * d[5] * d[13] * d[39] * d[71] - 2 * d[4] * d[14] * d[39] * d[71] + 2 * d[4] * d[10] * d[40] * d[71] - 2 * d[5] * d[12] * d[40] * d[71] + 2 * d[1] * d[13] * d[40] * d[71] - 2 * d[3] * d[14] * d[40] * d[71] + 2 * d[5] * d[9] * d[41] * d[71] - 2 * d[4] * d[12] * d[41] * d[71] - 2 * d[3] * d[13] * d[41] * d[71] + 2 * d[0] * d[14] * d[41] * d[71];
    coeffs[154] = 2 * d[6] * d[20] * d[37] * d[60] - 2 * d[8] * d[22] * d[37] * d[60] + 2 * d[2] * d[24] * d[37] * d[60] - 2 * d[4] * d[26] * d[37] * d[60] + 2 * d[6] * d[19] * d[38] * d[60] - 2 * d[7] * d[21] * d[38] * d[60] + 2 * d[1] * d[24] * d[38] * d[60] - 2 * d[3] * d[25] * d[38] * d[60] - 2 * d[7] * d[20] * d[39] * d[60] + 2 * d[8] * d[23] * d[39] * d[60] - 2 * d[2] * d[25] * d[39] * d[60] + 2 * d[5] * d[26] * d[39] * d[60] - 2 * d[8] * d[19] * d[40] * d[60] + 2 * d[7] * d[23] * d[40] * d[60] + 2 * d[5] * d[25] * d[40] * d[60] - 2 * d[1] * d[26] * d[40] * d[60] + 2 * d[8] * d[21] * d[41] * d[60] + 2 * d[7] * d[22] * d[41] * d[60] - 4 * d[6] * d[23] * d[41] * d[60] - 4 * d[5] * d[24] * d[41] * d[60] + 2 * d[4] * d[25] * d[41] * d[60] + 2 * d[3] * d[26] * d[41] * d[60] + 2 * d[2] * d[19] * d[42] * d[60] + 2 * d[1] * d[20] * d[42] * d[60] - 4 * d[5] * d[23] * d[42] * d[60] - 2 * d[3] * d[20] * d[43] * d[60] - 2 * d[2] * d[21] * d[43] * d[60] + 2 * d[5] * d[22] * d[43] * d[60] + 2 * d[4] * d[23] * d[43] * d[60] - 2 * d[4] * d[19] * d[44] * d[60] + 2 * d[5] * d[21] * d[44] * d[60] - 2 * d[1] * d[22] * d[44] * d[60] + 2 * d[3] * d[23] * d[44] * d[60] + d[20] * d[37] * std::pow(d[60], 2) + d[19] * d[38] * std::pow(d[60], 2) - 2 * d[23] * d[41] * std::pow(d[60], 2) + 2 * d[7] * d[20] * d[36] * d[61] - 2 * d[8] * d[23] * d[36] * d[61] + 2 * d[2] * d[25] * d[36] * d[61] - 2 * d[5] * d[26] * d[36] * d[61] + 2 * d[7] * d[18] * d[38] * d[61] - 2 * d[6] * d[21] * d[38] * d[61] - 2 * d[3] * d[24] * d[38] * d[61] + 2 * d[0] * d[25] * d[38] * d[61] - 2 * d[6] * d[20] * d[39] * d[61] + 2 * d[8] * d[22] * d[39] * d[61] - 2 * d[2] * d[24] * d[39] * d[61] + 2 * d[4] * d[26] * d[39] * d[61] + 2 * d[8] * d[21] * d[40] * d[61] - 4 * d[7] * d[22] * d[40] * d[61] + 2 * d[6] * d[23] * d[40] * d[61] + 2 * d[5] * d[24] * d[40] * d[61] - 4 * d[4] * d[25] * d[40] * d[61] + 2 * d[3] * d[26] * d[40] * d[61] - 2 * d[8] * d[18] * d[41] * d[61] + 2 * d[6] * d[22] * d[41] * d[61] + 2 * d[4] * d[24] * d[41] * d[61] - 2 * d[0] * d[26] * d[41] * d[61] - 2 * d[3] * d[20] * d[42] * d[61] - 2 * d[2] * d[21] * d[42] * d[61] + 2 * d[5] * d[22] * d[42] * d[61] + 2 * d[4] * d[23] * d[42] * d[61] + 2 * d[2] * d[18] * d[43] * d[61] + 2 * d[0] * d[20] * d[43] * d[61] - 4 * d[4] * d[22] * d[43] * d[61] - 2 * d[5] * d[18] * d[44] * d[61] + 2 * d[4] * d[21] * d[44] * d[61] + 2 * d[3] * d[22] * d[44] * d[61] - 2 * d[0] * d[23] * d[44] * d[61] - 2 * d[21] * d[38] * d[60] * d[61] - 2 * d[20] * d[39] * d[60] * d[61] + 2 * d[23] * d[40] * d[60] * d[61] + 2 * d[22] * d[41] * d[60] * d[61] + d[20] * d[36] * std::pow(d[61], 2) + d[18] * d[38] * std::pow(d[61], 2) - 2 * d[22] * d[40] * std::pow(d[61], 2) + 2 * d[8] * d[19] * d[36] * d[62] - 2 * d[7] * d[23] * d[36] * d[62] - 2 * d[5] * d[25] * d[36] * d[62] + 2 * d[1] * d[26] * d[36] * d[62] + 2 * d[8] * d[18] * d[37] * d[62] - 2 * d[6] * d[22] * d[37] * d[62] - 2 * d[4] * d[24] * d[37] * d[62] + 2 * d[0] * d[26] * d[37] * d[62] - 4 * d[8] * d[21] * d[39] * d[62] + 2 * d[7] * d[22] * d[39] * d[62] + 2 * d[6] * d[23] * d[39] * d[62] + 2 * d[5] * d[24] * d[39] * d[62] + 2 * d[4] * d[25] * d[39] * d[62] - 4 * d[3] * d[26] * d[39] * d[62] - 2 * d[6] * d[19] * d[40] * d[62] + 2 * d[7] * d[21] * d[40] * d[62] - 2 * d[1] * d[24] * d[40] * d[62] + 2 * d[3] * d[25] * d[40] * d[62] - 2 * d[7] * d[18] * d[41] * d[62] + 2 * d[6] * d[21] * d[41] * d[62] + 2 * d[3] * d[24] * d[41] * d[62] - 2 * d[0] * d[25] * d[41] * d[62] - 2 * d[4] * d[19] * d[42] * d[62] + 2 * d[5] * d[21] * d[42] * d[62] - 2 * d[1] * d[22] * d[42] * d[62] + 2 * d[3] * d[23] * d[42] * d[62] - 2 * d[5] * d[18] * d[43] * d[62] + 2 * d[4] * d[21] * d[43] * d[62] + 2 * d[3] * d[22] * d[43] * d[62] - 2 * d[0] * d[23] * d[43] * d[62] + 2 * d[1] * d[18] * d[44] * d[62] + 2 * d[0] * d[19] * d[44] * d[62] - 4 * d[3] * d[21] * d[44] * d[62] - 2 * d[22] * d[37] * d[60] * d[62] + 2 * d[23] * d[39] * d[60] * d[62] - 2 * d[19] * d[40] * d[60] * d[62] + 2 * d[21] * d[41] * d[60] * d[62] - 2 * d[23] * d[36] * d[61] * d[62] + 2 * d[22] * d[39] * d[61] * d[62] + 2 * d[21] * d[40] * d[61] * d[62] - 2 * d[18] * d[41] * d[61] * d[62] + d[19] * d[36] * std::pow(d[62], 2) + d[18] * d[37] * std::pow(d[62], 2) - 2 * d[21] * d[39] * std::pow(d[62], 2) - d[2] * d[19] * d[36] * d[71] - d[1] * d[20] * d[36] * d[71] + 2 * d[5] * d[23] * d[36] * d[71] - d[2] * d[18] * d[37] * d[71] - d[0] * d[20] * d[37] * d[71] + 2 * d[4] * d[22] * d[37] * d[71] - d[1] * d[18] * d[38] * d[71] - d[0] * d[19] * d[38] * d[71] + 2 * d[3] * d[21] * d[38] * d[71] + 2 * d[3] * d[20] * d[39] * d[71] + 2 * d[2] * d[21] * d[39] * d[71] - 2 * d[5] * d[22] * d[39] * d[71] - 2 * d[4] * d[23] * d[39] * d[71] + 2 * d[4] * d[19] * d[40] * d[71] - 2 * d[5] * d[21] * d[40] * d[71] + 2 * d[1] * d[22] * d[40] * d[71] - 2 * d[3] * d[23] * d[40] * d[71] + 2 * d[5] * d[18] * d[41] * d[71] - 2 * d[4] * d[21] * d[41] * d[71] - 2 * d[3] * d[22] * d[41] * d[71] + 2 * d[0] * d[23] * d[41] * d[71];
    coeffs[155] = 2 * d[6] * d[29] * d[37] * d[60] - 2 * d[8] * d[31] * d[37] * d[60] + 2 * d[2] * d[33] * d[37] * d[60] - 2 * d[4] * d[35] * d[37] * d[60] + 2 * d[6] * d[28] * d[38] * d[60] - 2 * d[7] * d[30] * d[38] * d[60] + 2 * d[1] * d[33] * d[38] * d[60] - 2 * d[3] * d[34] * d[38] * d[60] - 2 * d[7] * d[29] * d[39] * d[60] + 2 * d[8] * d[32] * d[39] * d[60] - 2 * d[2] * d[34] * d[39] * d[60] + 2 * d[5] * d[35] * d[39] * d[60] - 2 * d[8] * d[28] * d[40] * d[60] + 2 * d[7] * d[32] * d[40] * d[60] + 2 * d[5] * d[34] * d[40] * d[60] - 2 * d[1] * d[35] * d[40] * d[60] + 2 * d[8] * d[30] * d[41] * d[60] + 2 * d[7] * d[31] * d[41] * d[60] - 4 * d[6] * d[32] * d[41] * d[60] - 4 * d[5] * d[33] * d[41] * d[60] + 2 * d[4] * d[34] * d[41] * d[60] + 2 * d[3] * d[35] * d[41] * d[60] + 2 * d[2] * d[28] * d[42] * d[60] + 2 * d[1] * d[29] * d[42] * d[60] - 4 * d[5] * d[32] * d[42] * d[60] - 2 * d[3] * d[29] * d[43] * d[60] - 2 * d[2] * d[30] * d[43] * d[60] + 2 * d[5] * d[31] * d[43] * d[60] + 2 * d[4] * d[32] * d[43] * d[60] - 2 * d[4] * d[28] * d[44] * d[60] + 2 * d[5] * d[30] * d[44] * d[60] - 2 * d[1] * d[31] * d[44] * d[60] + 2 * d[3] * d[32] * d[44] * d[60] + d[29] * d[37] * std::pow(d[60], 2) + d[28] * d[38] * std::pow(d[60], 2) - 2 * d[32] * d[41] * std::pow(d[60], 2) + 2 * d[7] * d[29] * d[36] * d[61] - 2 * d[8] * d[32] * d[36] * d[61] + 2 * d[2] * d[34] * d[36] * d[61] - 2 * d[5] * d[35] * d[36] * d[61] + 2 * d[7] * d[27] * d[38] * d[61] - 2 * d[6] * d[30] * d[38] * d[61] - 2 * d[3] * d[33] * d[38] * d[61] + 2 * d[0] * d[34] * d[38] * d[61] - 2 * d[6] * d[29] * d[39] * d[61] + 2 * d[8] * d[31] * d[39] * d[61] - 2 * d[2] * d[33] * d[39] * d[61] + 2 * d[4] * d[35] * d[39] * d[61] + 2 * d[8] * d[30] * d[40] * d[61] - 4 * d[7] * d[31] * d[40] * d[61] + 2 * d[6] * d[32] * d[40] * d[61] + 2 * d[5] * d[33] * d[40] * d[61] - 4 * d[4] * d[34] * d[40] * d[61] + 2 * d[3] * d[35] * d[40] * d[61] - 2 * d[8] * d[27] * d[41] * d[61] + 2 * d[6] * d[31] * d[41] * d[61] + 2 * d[4] * d[33] * d[41] * d[61] - 2 * d[0] * d[35] * d[41] * d[61] - 2 * d[3] * d[29] * d[42] * d[61] - 2 * d[2] * d[30] * d[42] * d[61] + 2 * d[5] * d[31] * d[42] * d[61] + 2 * d[4] * d[32] * d[42] * d[61] + 2 * d[2] * d[27] * d[43] * d[61] + 2 * d[0] * d[29] * d[43] * d[61] - 4 * d[4] * d[31] * d[43] * d[61] - 2 * d[5] * d[27] * d[44] * d[61] + 2 * d[4] * d[30] * d[44] * d[61] + 2 * d[3] * d[31] * d[44] * d[61] - 2 * d[0] * d[32] * d[44] * d[61] - 2 * d[30] * d[38] * d[60] * d[61] - 2 * d[29] * d[39] * d[60] * d[61] + 2 * d[32] * d[40] * d[60] * d[61] + 2 * d[31] * d[41] * d[60] * d[61] + d[29] * d[36] * std::pow(d[61], 2) + d[27] * d[38] * std::pow(d[61], 2) - 2 * d[31] * d[40] * std::pow(d[61], 2) + 2 * d[8] * d[28] * d[36] * d[62] - 2 * d[7] * d[32] * d[36] * d[62] - 2 * d[5] * d[34] * d[36] * d[62] + 2 * d[1] * d[35] * d[36] * d[62] + 2 * d[8] * d[27] * d[37] * d[62] - 2 * d[6] * d[31] * d[37] * d[62] - 2 * d[4] * d[33] * d[37] * d[62] + 2 * d[0] * d[35] * d[37] * d[62] - 4 * d[8] * d[30] * d[39] * d[62] + 2 * d[7] * d[31] * d[39] * d[62] + 2 * d[6] * d[32] * d[39] * d[62] + 2 * d[5] * d[33] * d[39] * d[62] + 2 * d[4] * d[34] * d[39] * d[62] - 4 * d[3] * d[35] * d[39] * d[62] - 2 * d[6] * d[28] * d[40] * d[62] + 2 * d[7] * d[30] * d[40] * d[62] - 2 * d[1] * d[33] * d[40] * d[62] + 2 * d[3] * d[34] * d[40] * d[62] - 2 * d[7] * d[27] * d[41] * d[62] + 2 * d[6] * d[30] * d[41] * d[62] + 2 * d[3] * d[33] * d[41] * d[62] - 2 * d[0] * d[34] * d[41] * d[62] - 2 * d[4] * d[28] * d[42] * d[62] + 2 * d[5] * d[30] * d[42] * d[62] - 2 * d[1] * d[31] * d[42] * d[62] + 2 * d[3] * d[32] * d[42] * d[62] - 2 * d[5] * d[27] * d[43] * d[62] + 2 * d[4] * d[30] * d[43] * d[62] + 2 * d[3] * d[31] * d[43] * d[62] - 2 * d[0] * d[32] * d[43] * d[62] + 2 * d[1] * d[27] * d[44] * d[62] + 2 * d[0] * d[28] * d[44] * d[62] - 4 * d[3] * d[30] * d[44] * d[62] - 2 * d[31] * d[37] * d[60] * d[62] + 2 * d[32] * d[39] * d[60] * d[62] - 2 * d[28] * d[40] * d[60] * d[62] + 2 * d[30] * d[41] * d[60] * d[62] - 2 * d[32] * d[36] * d[61] * d[62] + 2 * d[31] * d[39] * d[61] * d[62] + 2 * d[30] * d[40] * d[61] * d[62] - 2 * d[27] * d[41] * d[61] * d[62] + d[28] * d[36] * std::pow(d[62], 2) + d[27] * d[37] * std::pow(d[62], 2) - 2 * d[30] * d[39] * std::pow(d[62], 2) - d[2] * d[28] * d[36] * d[71] - d[1] * d[29] * d[36] * d[71] + 2 * d[5] * d[32] * d[36] * d[71] - d[2] * d[27] * d[37] * d[71] - d[0] * d[29] * d[37] * d[71] + 2 * d[4] * d[31] * d[37] * d[71] - d[1] * d[27] * d[38] * d[71] - d[0] * d[28] * d[38] * d[71] + 2 * d[3] * d[30] * d[38] * d[71] + 2 * d[3] * d[29] * d[39] * d[71] + 2 * d[2] * d[30] * d[39] * d[71] - 2 * d[5] * d[31] * d[39] * d[71] - 2 * d[4] * d[32] * d[39] * d[71] + 2 * d[4] * d[28] * d[40] * d[71] - 2 * d[5] * d[30] * d[40] * d[71] + 2 * d[1] * d[31] * d[40] * d[71] - 2 * d[3] * d[32] * d[40] * d[71] + 2 * d[5] * d[27] * d[41] * d[71] - 2 * d[4] * d[30] * d[41] * d[71] - 2 * d[3] * d[31] * d[41] * d[71] + 2 * d[0] * d[32] * d[41] * d[71];
    coeffs[156] = 2 * d[6] * d[37] * d[38] * d[60] - 2 * d[7] * d[38] * d[39] * d[60] - 2 * d[8] * d[37] * d[40] * d[60] + 2 * d[8] * d[39] * d[41] * d[60] + 2 * d[7] * d[40] * d[41] * d[60] - 2 * d[6] * std::pow(d[41], 2) * d[60] + 2 * d[2] * d[37] * d[42] * d[60] + 2 * d[1] * d[38] * d[42] * d[60] - 4 * d[5] * d[41] * d[42] * d[60] - 2 * d[3] * d[38] * d[43] * d[60] - 2 * d[2] * d[39] * d[43] * d[60] + 2 * d[5] * d[40] * d[43] * d[60] + 2 * d[4] * d[41] * d[43] * d[60] - 2 * d[4] * d[37] * d[44] * d[60] + 2 * d[5] * d[39] * d[44] * d[60] - 2 * d[1] * d[40] * d[44] * d[60] + 2 * d[3] * d[41] * d[44] * d[60] + d[37] * d[38] * std::pow(d[60], 2) - std::pow(d[41], 2) * std::pow(d[60], 2) + 2 * d[7] * d[36] * d[38] * d[61] - 2 * d[6] * d[38] * d[39] * d[61] + 2 * d[8] * d[39] * d[40] * d[61] - 2 * d[7] * std::pow(d[40], 2) * d[61] - 2 * d[8] * d[36] * d[41] * d[61] + 2 * d[6] * d[40] * d[41] * d[61] - 2 * d[3] * d[38] * d[42] * d[61] - 2 * d[2] * d[39] * d[42] * d[61] + 2 * d[5] * d[40] * d[42] * d[61] + 2 * d[4] * d[41] * d[42] * d[61] + 2 * d[2] * d[36] * d[43] * d[61] + 2 * d[0] * d[38] * d[43] * d[61] - 4 * d[4] * d[40] * d[43] * d[61] - 2 * d[5] * d[36] * d[44] * d[61] + 2 * d[4] * d[39] * d[44] * d[61] + 2 * d[3] * d[40] * d[44] * d[61] - 2 * d[0] * d[41] * d[44] * d[61] - 2 * d[38] * d[39] * d[60] * d[61] + 2 * d[40] * d[41] * d[60] * d[61] + d[36] * d[38] * std::pow(d[61], 2) - std::pow(d[40], 2) * std::pow(d[61], 2) + 2 * d[8] * d[36] * d[37] * d[62] - 2 * d[8] * std::pow(d[39], 2) * d[62] - 2 * d[6] * d[37] * d[40] * d[62] + 2 * d[7] * d[39] * d[40] * d[62] - 2 * d[7] * d[36] * d[41] * d[62] + 2 * d[6] * d[39] * d[41] * d[62] - 2 * d[4] * d[37] * d[42] * d[62] + 2 * d[5] * d[39] * d[42] * d[62] - 2 * d[1] * d[40] * d[42] * d[62] + 2 * d[3] * d[41] * d[42] * d[62] - 2 * d[5] * d[36] * d[43] * d[62] + 2 * d[4] * d[39] * d[43] * d[62] + 2 * d[3] * d[40] * d[43] * d[62] - 2 * d[0] * d[41] * d[43] * d[62] + 2 * d[1] * d[36] * d[44] * d[62] + 2 * d[0] * d[37] * d[44] * d[62] - 4 * d[3] * d[39] * d[44] * d[62] - 2 * d[37] * d[40] * d[60] * d[62] + 2 * d[39] * d[41] * d[60] * d[62] + 2 * d[39] * d[40] * d[61] * d[62] - 2 * d[36] * d[41] * d[61] * d[62] + d[36] * d[37] * std::pow(d[62], 2) - std::pow(d[39], 2) * std::pow(d[62], 2) - d[2] * d[36] * d[37] * d[71] - d[1] * d[36] * d[38] * d[71] - d[0] * d[37] * d[38] * d[71] + 2 * d[3] * d[38] * d[39] * d[71] + d[2] * std::pow(d[39], 2) * d[71] + 2 * d[4] * d[37] * d[40] * d[71] - 2 * d[5] * d[39] * d[40] * d[71] + d[1] * std::pow(d[40], 2) * d[71] + 2 * d[5] * d[36] * d[41] * d[71] - 2 * d[4] * d[39] * d[41] * d[71] - 2 * d[3] * d[40] * d[41] * d[71] + d[0] * std::pow(d[41], 2) * d[71];
    coeffs[157] = 2 * d[6] * d[11] * d[46] * d[60] - 2 * d[8] * d[13] * d[46] * d[60] + 2 * d[2] * d[15] * d[46] * d[60] - 2 * d[4] * d[17] * d[46] * d[60] + 2 * d[6] * d[10] * d[47] * d[60] - 2 * d[7] * d[12] * d[47] * d[60] + 2 * d[1] * d[15] * d[47] * d[60] - 2 * d[3] * d[16] * d[47] * d[60] - 2 * d[7] * d[11] * d[48] * d[60] + 2 * d[8] * d[14] * d[48] * d[60] - 2 * d[2] * d[16] * d[48] * d[60] + 2 * d[5] * d[17] * d[48] * d[60] - 2 * d[8] * d[10] * d[49] * d[60] + 2 * d[7] * d[14] * d[49] * d[60] + 2 * d[5] * d[16] * d[49] * d[60] - 2 * d[1] * d[17] * d[49] * d[60] + 2 * d[8] * d[12] * d[50] * d[60] + 2 * d[7] * d[13] * d[50] * d[60] - 4 * d[6] * d[14] * d[50] * d[60] - 4 * d[5] * d[15] * d[50] * d[60] + 2 * d[4] * d[16] * d[50] * d[60] + 2 * d[3] * d[17] * d[50] * d[60] + 2 * d[2] * d[10] * d[51] * d[60] + 2 * d[1] * d[11] * d[51] * d[60] - 4 * d[5] * d[14] * d[51] * d[60] - 2 * d[3] * d[11] * d[52] * d[60] - 2 * d[2] * d[12] * d[52] * d[60] + 2 * d[5] * d[13] * d[52] * d[60] + 2 * d[4] * d[14] * d[52] * d[60] - 2 * d[4] * d[10] * d[53] * d[60] + 2 * d[5] * d[12] * d[53] * d[60] - 2 * d[1] * d[13] * d[53] * d[60] + 2 * d[3] * d[14] * d[53] * d[60] + d[11] * d[46] * std::pow(d[60], 2) + d[10] * d[47] * std::pow(d[60], 2) - 2 * d[14] * d[50] * std::pow(d[60], 2) + 2 * d[7] * d[11] * d[45] * d[61] - 2 * d[8] * d[14] * d[45] * d[61] + 2 * d[2] * d[16] * d[45] * d[61] - 2 * d[5] * d[17] * d[45] * d[61] + 2 * d[7] * d[9] * d[47] * d[61] - 2 * d[6] * d[12] * d[47] * d[61] - 2 * d[3] * d[15] * d[47] * d[61] + 2 * d[0] * d[16] * d[47] * d[61] - 2 * d[6] * d[11] * d[48] * d[61] + 2 * d[8] * d[13] * d[48] * d[61] - 2 * d[2] * d[15] * d[48] * d[61] + 2 * d[4] * d[17] * d[48] * d[61] + 2 * d[8] * d[12] * d[49] * d[61] - 4 * d[7] * d[13] * d[49] * d[61] + 2 * d[6] * d[14] * d[49] * d[61] + 2 * d[5] * d[15] * d[49] * d[61] - 4 * d[4] * d[16] * d[49] * d[61] + 2 * d[3] * d[17] * d[49] * d[61] - 2 * d[8] * d[9] * d[50] * d[61] + 2 * d[6] * d[13] * d[50] * d[61] + 2 * d[4] * d[15] * d[50] * d[61] - 2 * d[0] * d[17] * d[50] * d[61] - 2 * d[3] * d[11] * d[51] * d[61] - 2 * d[2] * d[12] * d[51] * d[61] + 2 * d[5] * d[13] * d[51] * d[61] + 2 * d[4] * d[14] * d[51] * d[61] + 2 * d[2] * d[9] * d[52] * d[61] + 2 * d[0] * d[11] * d[52] * d[61] - 4 * d[4] * d[13] * d[52] * d[61] - 2 * d[5] * d[9] * d[53] * d[61] + 2 * d[4] * d[12] * d[53] * d[61] + 2 * d[3] * d[13] * d[53] * d[61] - 2 * d[0] * d[14] * d[53] * d[61] - 2 * d[12] * d[47] * d[60] * d[61] - 2 * d[11] * d[48] * d[60] * d[61] + 2 * d[14] * d[49] * d[60] * d[61] + 2 * d[13] * d[50] * d[60] * d[61] + d[11] * d[45] * std::pow(d[61], 2) + d[9] * d[47] * std::pow(d[61], 2) - 2 * d[13] * d[49] * std::pow(d[61], 2) + 2 * d[8] * d[10] * d[45] * d[62] - 2 * d[7] * d[14] * d[45] * d[62] - 2 * d[5] * d[16] * d[45] * d[62] + 2 * d[1] * d[17] * d[45] * d[62] + 2 * d[8] * d[9] * d[46] * d[62] - 2 * d[6] * d[13] * d[46] * d[62] - 2 * d[4] * d[15] * d[46] * d[62] + 2 * d[0] * d[17] * d[46] * d[62] - 4 * d[8] * d[12] * d[48] * d[62] + 2 * d[7] * d[13] * d[48] * d[62] + 2 * d[6] * d[14] * d[48] * d[62] + 2 * d[5] * d[15] * d[48] * d[62] + 2 * d[4] * d[16] * d[48] * d[62] - 4 * d[3] * d[17] * d[48] * d[62] - 2 * d[6] * d[10] * d[49] * d[62] + 2 * d[7] * d[12] * d[49] * d[62] - 2 * d[1] * d[15] * d[49] * d[62] + 2 * d[3] * d[16] * d[49] * d[62] - 2 * d[7] * d[9] * d[50] * d[62] + 2 * d[6] * d[12] * d[50] * d[62] + 2 * d[3] * d[15] * d[50] * d[62] - 2 * d[0] * d[16] * d[50] * d[62] - 2 * d[4] * d[10] * d[51] * d[62] + 2 * d[5] * d[12] * d[51] * d[62] - 2 * d[1] * d[13] * d[51] * d[62] + 2 * d[3] * d[14] * d[51] * d[62] - 2 * d[5] * d[9] * d[52] * d[62] + 2 * d[4] * d[12] * d[52] * d[62] + 2 * d[3] * d[13] * d[52] * d[62] - 2 * d[0] * d[14] * d[52] * d[62] + 2 * d[1] * d[9] * d[53] * d[62] + 2 * d[0] * d[10] * d[53] * d[62] - 4 * d[3] * d[12] * d[53] * d[62] - 2 * d[13] * d[46] * d[60] * d[62] + 2 * d[14] * d[48] * d[60] * d[62] - 2 * d[10] * d[49] * d[60] * d[62] + 2 * d[12] * d[50] * d[60] * d[62] - 2 * d[14] * d[45] * d[61] * d[62] + 2 * d[13] * d[48] * d[61] * d[62] + 2 * d[12] * d[49] * d[61] * d[62] - 2 * d[9] * d[50] * d[61] * d[62] + d[10] * d[45] * std::pow(d[62], 2) + d[9] * d[46] * std::pow(d[62], 2) - 2 * d[12] * d[48] * std::pow(d[62], 2) - d[2] * d[10] * d[45] * d[71] - d[1] * d[11] * d[45] * d[71] + 2 * d[5] * d[14] * d[45] * d[71] - d[2] * d[9] * d[46] * d[71] - d[0] * d[11] * d[46] * d[71] + 2 * d[4] * d[13] * d[46] * d[71] - d[1] * d[9] * d[47] * d[71] - d[0] * d[10] * d[47] * d[71] + 2 * d[3] * d[12] * d[47] * d[71] + 2 * d[3] * d[11] * d[48] * d[71] + 2 * d[2] * d[12] * d[48] * d[71] - 2 * d[5] * d[13] * d[48] * d[71] - 2 * d[4] * d[14] * d[48] * d[71] + 2 * d[4] * d[10] * d[49] * d[71] - 2 * d[5] * d[12] * d[49] * d[71] + 2 * d[1] * d[13] * d[49] * d[71] - 2 * d[3] * d[14] * d[49] * d[71] + 2 * d[5] * d[9] * d[50] * d[71] - 2 * d[4] * d[12] * d[50] * d[71] - 2 * d[3] * d[13] * d[50] * d[71] + 2 * d[0] * d[14] * d[50] * d[71];
    coeffs[158] = 2 * d[6] * d[20] * d[46] * d[60] - 2 * d[8] * d[22] * d[46] * d[60] + 2 * d[2] * d[24] * d[46] * d[60] - 2 * d[4] * d[26] * d[46] * d[60] + 2 * d[6] * d[19] * d[47] * d[60] - 2 * d[7] * d[21] * d[47] * d[60] + 2 * d[1] * d[24] * d[47] * d[60] - 2 * d[3] * d[25] * d[47] * d[60] - 2 * d[7] * d[20] * d[48] * d[60] + 2 * d[8] * d[23] * d[48] * d[60] - 2 * d[2] * d[25] * d[48] * d[60] + 2 * d[5] * d[26] * d[48] * d[60] - 2 * d[8] * d[19] * d[49] * d[60] + 2 * d[7] * d[23] * d[49] * d[60] + 2 * d[5] * d[25] * d[49] * d[60] - 2 * d[1] * d[26] * d[49] * d[60] + 2 * d[8] * d[21] * d[50] * d[60] + 2 * d[7] * d[22] * d[50] * d[60] - 4 * d[6] * d[23] * d[50] * d[60] - 4 * d[5] * d[24] * d[50] * d[60] + 2 * d[4] * d[25] * d[50] * d[60] + 2 * d[3] * d[26] * d[50] * d[60] + 2 * d[2] * d[19] * d[51] * d[60] + 2 * d[1] * d[20] * d[51] * d[60] - 4 * d[5] * d[23] * d[51] * d[60] - 2 * d[3] * d[20] * d[52] * d[60] - 2 * d[2] * d[21] * d[52] * d[60] + 2 * d[5] * d[22] * d[52] * d[60] + 2 * d[4] * d[23] * d[52] * d[60] - 2 * d[4] * d[19] * d[53] * d[60] + 2 * d[5] * d[21] * d[53] * d[60] - 2 * d[1] * d[22] * d[53] * d[60] + 2 * d[3] * d[23] * d[53] * d[60] + d[20] * d[46] * std::pow(d[60], 2) + d[19] * d[47] * std::pow(d[60], 2) - 2 * d[23] * d[50] * std::pow(d[60], 2) + 2 * d[7] * d[20] * d[45] * d[61] - 2 * d[8] * d[23] * d[45] * d[61] + 2 * d[2] * d[25] * d[45] * d[61] - 2 * d[5] * d[26] * d[45] * d[61] + 2 * d[7] * d[18] * d[47] * d[61] - 2 * d[6] * d[21] * d[47] * d[61] - 2 * d[3] * d[24] * d[47] * d[61] + 2 * d[0] * d[25] * d[47] * d[61] - 2 * d[6] * d[20] * d[48] * d[61] + 2 * d[8] * d[22] * d[48] * d[61] - 2 * d[2] * d[24] * d[48] * d[61] + 2 * d[4] * d[26] * d[48] * d[61] + 2 * d[8] * d[21] * d[49] * d[61] - 4 * d[7] * d[22] * d[49] * d[61] + 2 * d[6] * d[23] * d[49] * d[61] + 2 * d[5] * d[24] * d[49] * d[61] - 4 * d[4] * d[25] * d[49] * d[61] + 2 * d[3] * d[26] * d[49] * d[61] - 2 * d[8] * d[18] * d[50] * d[61] + 2 * d[6] * d[22] * d[50] * d[61] + 2 * d[4] * d[24] * d[50] * d[61] - 2 * d[0] * d[26] * d[50] * d[61] - 2 * d[3] * d[20] * d[51] * d[61] - 2 * d[2] * d[21] * d[51] * d[61] + 2 * d[5] * d[22] * d[51] * d[61] + 2 * d[4] * d[23] * d[51] * d[61] + 2 * d[2] * d[18] * d[52] * d[61] + 2 * d[0] * d[20] * d[52] * d[61] - 4 * d[4] * d[22] * d[52] * d[61] - 2 * d[5] * d[18] * d[53] * d[61] + 2 * d[4] * d[21] * d[53] * d[61] + 2 * d[3] * d[22] * d[53] * d[61] - 2 * d[0] * d[23] * d[53] * d[61] - 2 * d[21] * d[47] * d[60] * d[61] - 2 * d[20] * d[48] * d[60] * d[61] + 2 * d[23] * d[49] * d[60] * d[61] + 2 * d[22] * d[50] * d[60] * d[61] + d[20] * d[45] * std::pow(d[61], 2) + d[18] * d[47] * std::pow(d[61], 2) - 2 * d[22] * d[49] * std::pow(d[61], 2) + 2 * d[8] * d[19] * d[45] * d[62] - 2 * d[7] * d[23] * d[45] * d[62] - 2 * d[5] * d[25] * d[45] * d[62] + 2 * d[1] * d[26] * d[45] * d[62] + 2 * d[8] * d[18] * d[46] * d[62] - 2 * d[6] * d[22] * d[46] * d[62] - 2 * d[4] * d[24] * d[46] * d[62] + 2 * d[0] * d[26] * d[46] * d[62] - 4 * d[8] * d[21] * d[48] * d[62] + 2 * d[7] * d[22] * d[48] * d[62] + 2 * d[6] * d[23] * d[48] * d[62] + 2 * d[5] * d[24] * d[48] * d[62] + 2 * d[4] * d[25] * d[48] * d[62] - 4 * d[3] * d[26] * d[48] * d[62] - 2 * d[6] * d[19] * d[49] * d[62] + 2 * d[7] * d[21] * d[49] * d[62] - 2 * d[1] * d[24] * d[49] * d[62] + 2 * d[3] * d[25] * d[49] * d[62] - 2 * d[7] * d[18] * d[50] * d[62] + 2 * d[6] * d[21] * d[50] * d[62] + 2 * d[3] * d[24] * d[50] * d[62] - 2 * d[0] * d[25] * d[50] * d[62] - 2 * d[4] * d[19] * d[51] * d[62] + 2 * d[5] * d[21] * d[51] * d[62] - 2 * d[1] * d[22] * d[51] * d[62] + 2 * d[3] * d[23] * d[51] * d[62] - 2 * d[5] * d[18] * d[52] * d[62] + 2 * d[4] * d[21] * d[52] * d[62] + 2 * d[3] * d[22] * d[52] * d[62] - 2 * d[0] * d[23] * d[52] * d[62] + 2 * d[1] * d[18] * d[53] * d[62] + 2 * d[0] * d[19] * d[53] * d[62] - 4 * d[3] * d[21] * d[53] * d[62] - 2 * d[22] * d[46] * d[60] * d[62] + 2 * d[23] * d[48] * d[60] * d[62] - 2 * d[19] * d[49] * d[60] * d[62] + 2 * d[21] * d[50] * d[60] * d[62] - 2 * d[23] * d[45] * d[61] * d[62] + 2 * d[22] * d[48] * d[61] * d[62] + 2 * d[21] * d[49] * d[61] * d[62] - 2 * d[18] * d[50] * d[61] * d[62] + d[19] * d[45] * std::pow(d[62], 2) + d[18] * d[46] * std::pow(d[62], 2) - 2 * d[21] * d[48] * std::pow(d[62], 2) - d[2] * d[19] * d[45] * d[71] - d[1] * d[20] * d[45] * d[71] + 2 * d[5] * d[23] * d[45] * d[71] - d[2] * d[18] * d[46] * d[71] - d[0] * d[20] * d[46] * d[71] + 2 * d[4] * d[22] * d[46] * d[71] - d[1] * d[18] * d[47] * d[71] - d[0] * d[19] * d[47] * d[71] + 2 * d[3] * d[21] * d[47] * d[71] + 2 * d[3] * d[20] * d[48] * d[71] + 2 * d[2] * d[21] * d[48] * d[71] - 2 * d[5] * d[22] * d[48] * d[71] - 2 * d[4] * d[23] * d[48] * d[71] + 2 * d[4] * d[19] * d[49] * d[71] - 2 * d[5] * d[21] * d[49] * d[71] + 2 * d[1] * d[22] * d[49] * d[71] - 2 * d[3] * d[23] * d[49] * d[71] + 2 * d[5] * d[18] * d[50] * d[71] - 2 * d[4] * d[21] * d[50] * d[71] - 2 * d[3] * d[22] * d[50] * d[71] + 2 * d[0] * d[23] * d[50] * d[71];
    coeffs[159] = 2 * d[6] * d[29] * d[46] * d[60] - 2 * d[8] * d[31] * d[46] * d[60] + 2 * d[2] * d[33] * d[46] * d[60] - 2 * d[4] * d[35] * d[46] * d[60] + 2 * d[6] * d[28] * d[47] * d[60] - 2 * d[7] * d[30] * d[47] * d[60] + 2 * d[1] * d[33] * d[47] * d[60] - 2 * d[3] * d[34] * d[47] * d[60] - 2 * d[7] * d[29] * d[48] * d[60] + 2 * d[8] * d[32] * d[48] * d[60] - 2 * d[2] * d[34] * d[48] * d[60] + 2 * d[5] * d[35] * d[48] * d[60] - 2 * d[8] * d[28] * d[49] * d[60] + 2 * d[7] * d[32] * d[49] * d[60] + 2 * d[5] * d[34] * d[49] * d[60] - 2 * d[1] * d[35] * d[49] * d[60] + 2 * d[8] * d[30] * d[50] * d[60] + 2 * d[7] * d[31] * d[50] * d[60] - 4 * d[6] * d[32] * d[50] * d[60] - 4 * d[5] * d[33] * d[50] * d[60] + 2 * d[4] * d[34] * d[50] * d[60] + 2 * d[3] * d[35] * d[50] * d[60] + 2 * d[2] * d[28] * d[51] * d[60] + 2 * d[1] * d[29] * d[51] * d[60] - 4 * d[5] * d[32] * d[51] * d[60] - 2 * d[3] * d[29] * d[52] * d[60] - 2 * d[2] * d[30] * d[52] * d[60] + 2 * d[5] * d[31] * d[52] * d[60] + 2 * d[4] * d[32] * d[52] * d[60] - 2 * d[4] * d[28] * d[53] * d[60] + 2 * d[5] * d[30] * d[53] * d[60] - 2 * d[1] * d[31] * d[53] * d[60] + 2 * d[3] * d[32] * d[53] * d[60] + d[29] * d[46] * std::pow(d[60], 2) + d[28] * d[47] * std::pow(d[60], 2) - 2 * d[32] * d[50] * std::pow(d[60], 2) + 2 * d[7] * d[29] * d[45] * d[61] - 2 * d[8] * d[32] * d[45] * d[61] + 2 * d[2] * d[34] * d[45] * d[61] - 2 * d[5] * d[35] * d[45] * d[61] + 2 * d[7] * d[27] * d[47] * d[61] - 2 * d[6] * d[30] * d[47] * d[61] - 2 * d[3] * d[33] * d[47] * d[61] + 2 * d[0] * d[34] * d[47] * d[61] - 2 * d[6] * d[29] * d[48] * d[61] + 2 * d[8] * d[31] * d[48] * d[61] - 2 * d[2] * d[33] * d[48] * d[61] + 2 * d[4] * d[35] * d[48] * d[61] + 2 * d[8] * d[30] * d[49] * d[61] - 4 * d[7] * d[31] * d[49] * d[61] + 2 * d[6] * d[32] * d[49] * d[61] + 2 * d[5] * d[33] * d[49] * d[61] - 4 * d[4] * d[34] * d[49] * d[61] + 2 * d[3] * d[35] * d[49] * d[61] - 2 * d[8] * d[27] * d[50] * d[61] + 2 * d[6] * d[31] * d[50] * d[61] + 2 * d[4] * d[33] * d[50] * d[61] - 2 * d[0] * d[35] * d[50] * d[61] - 2 * d[3] * d[29] * d[51] * d[61] - 2 * d[2] * d[30] * d[51] * d[61] + 2 * d[5] * d[31] * d[51] * d[61] + 2 * d[4] * d[32] * d[51] * d[61] + 2 * d[2] * d[27] * d[52] * d[61] + 2 * d[0] * d[29] * d[52] * d[61] - 4 * d[4] * d[31] * d[52] * d[61] - 2 * d[5] * d[27] * d[53] * d[61] + 2 * d[4] * d[30] * d[53] * d[61] + 2 * d[3] * d[31] * d[53] * d[61] - 2 * d[0] * d[32] * d[53] * d[61] - 2 * d[30] * d[47] * d[60] * d[61] - 2 * d[29] * d[48] * d[60] * d[61] + 2 * d[32] * d[49] * d[60] * d[61] + 2 * d[31] * d[50] * d[60] * d[61] + d[29] * d[45] * std::pow(d[61], 2) + d[27] * d[47] * std::pow(d[61], 2) - 2 * d[31] * d[49] * std::pow(d[61], 2) + 2 * d[8] * d[28] * d[45] * d[62] - 2 * d[7] * d[32] * d[45] * d[62] - 2 * d[5] * d[34] * d[45] * d[62] + 2 * d[1] * d[35] * d[45] * d[62] + 2 * d[8] * d[27] * d[46] * d[62] - 2 * d[6] * d[31] * d[46] * d[62] - 2 * d[4] * d[33] * d[46] * d[62] + 2 * d[0] * d[35] * d[46] * d[62] - 4 * d[8] * d[30] * d[48] * d[62] + 2 * d[7] * d[31] * d[48] * d[62] + 2 * d[6] * d[32] * d[48] * d[62] + 2 * d[5] * d[33] * d[48] * d[62] + 2 * d[4] * d[34] * d[48] * d[62] - 4 * d[3] * d[35] * d[48] * d[62] - 2 * d[6] * d[28] * d[49] * d[62] + 2 * d[7] * d[30] * d[49] * d[62] - 2 * d[1] * d[33] * d[49] * d[62] + 2 * d[3] * d[34] * d[49] * d[62] - 2 * d[7] * d[27] * d[50] * d[62] + 2 * d[6] * d[30] * d[50] * d[62] + 2 * d[3] * d[33] * d[50] * d[62] - 2 * d[0] * d[34] * d[50] * d[62] - 2 * d[4] * d[28] * d[51] * d[62] + 2 * d[5] * d[30] * d[51] * d[62] - 2 * d[1] * d[31] * d[51] * d[62] + 2 * d[3] * d[32] * d[51] * d[62] - 2 * d[5] * d[27] * d[52] * d[62] + 2 * d[4] * d[30] * d[52] * d[62] + 2 * d[3] * d[31] * d[52] * d[62] - 2 * d[0] * d[32] * d[52] * d[62] + 2 * d[1] * d[27] * d[53] * d[62] + 2 * d[0] * d[28] * d[53] * d[62] - 4 * d[3] * d[30] * d[53] * d[62] - 2 * d[31] * d[46] * d[60] * d[62] + 2 * d[32] * d[48] * d[60] * d[62] - 2 * d[28] * d[49] * d[60] * d[62] + 2 * d[30] * d[50] * d[60] * d[62] - 2 * d[32] * d[45] * d[61] * d[62] + 2 * d[31] * d[48] * d[61] * d[62] + 2 * d[30] * d[49] * d[61] * d[62] - 2 * d[27] * d[50] * d[61] * d[62] + d[28] * d[45] * std::pow(d[62], 2) + d[27] * d[46] * std::pow(d[62], 2) - 2 * d[30] * d[48] * std::pow(d[62], 2) - d[2] * d[28] * d[45] * d[71] - d[1] * d[29] * d[45] * d[71] + 2 * d[5] * d[32] * d[45] * d[71] - d[2] * d[27] * d[46] * d[71] - d[0] * d[29] * d[46] * d[71] + 2 * d[4] * d[31] * d[46] * d[71] - d[1] * d[27] * d[47] * d[71] - d[0] * d[28] * d[47] * d[71] + 2 * d[3] * d[30] * d[47] * d[71] + 2 * d[3] * d[29] * d[48] * d[71] + 2 * d[2] * d[30] * d[48] * d[71] - 2 * d[5] * d[31] * d[48] * d[71] - 2 * d[4] * d[32] * d[48] * d[71] + 2 * d[4] * d[28] * d[49] * d[71] - 2 * d[5] * d[30] * d[49] * d[71] + 2 * d[1] * d[31] * d[49] * d[71] - 2 * d[3] * d[32] * d[49] * d[71] + 2 * d[5] * d[27] * d[50] * d[71] - 2 * d[4] * d[30] * d[50] * d[71] - 2 * d[3] * d[31] * d[50] * d[71] + 2 * d[0] * d[32] * d[50] * d[71];
    coeffs[160] = 2 * d[6] * d[38] * d[46] * d[60] - 2 * d[8] * d[40] * d[46] * d[60] + 2 * d[2] * d[42] * d[46] * d[60] - 2 * d[4] * d[44] * d[46] * d[60] + 2 * d[6] * d[37] * d[47] * d[60] - 2 * d[7] * d[39] * d[47] * d[60] + 2 * d[1] * d[42] * d[47] * d[60] - 2 * d[3] * d[43] * d[47] * d[60] - 2 * d[7] * d[38] * d[48] * d[60] + 2 * d[8] * d[41] * d[48] * d[60] - 2 * d[2] * d[43] * d[48] * d[60] + 2 * d[5] * d[44] * d[48] * d[60] - 2 * d[8] * d[37] * d[49] * d[60] + 2 * d[7] * d[41] * d[49] * d[60] + 2 * d[5] * d[43] * d[49] * d[60] - 2 * d[1] * d[44] * d[49] * d[60] + 2 * d[8] * d[39] * d[50] * d[60] + 2 * d[7] * d[40] * d[50] * d[60] - 4 * d[6] * d[41] * d[50] * d[60] - 4 * d[5] * d[42] * d[50] * d[60] + 2 * d[4] * d[43] * d[50] * d[60] + 2 * d[3] * d[44] * d[50] * d[60] + 2 * d[2] * d[37] * d[51] * d[60] + 2 * d[1] * d[38] * d[51] * d[60] - 4 * d[5] * d[41] * d[51] * d[60] - 2 * d[3] * d[38] * d[52] * d[60] - 2 * d[2] * d[39] * d[52] * d[60] + 2 * d[5] * d[40] * d[52] * d[60] + 2 * d[4] * d[41] * d[52] * d[60] - 2 * d[4] * d[37] * d[53] * d[60] + 2 * d[5] * d[39] * d[53] * d[60] - 2 * d[1] * d[40] * d[53] * d[60] + 2 * d[3] * d[41] * d[53] * d[60] + d[38] * d[46] * std::pow(d[60], 2) + d[37] * d[47] * std::pow(d[60], 2) - 2 * d[41] * d[50] * std::pow(d[60], 2) + 2 * d[7] * d[38] * d[45] * d[61] - 2 * d[8] * d[41] * d[45] * d[61] + 2 * d[2] * d[43] * d[45] * d[61] - 2 * d[5] * d[44] * d[45] * d[61] + 2 * d[7] * d[36] * d[47] * d[61] - 2 * d[6] * d[39] * d[47] * d[61] - 2 * d[3] * d[42] * d[47] * d[61] + 2 * d[0] * d[43] * d[47] * d[61] - 2 * d[6] * d[38] * d[48] * d[61] + 2 * d[8] * d[40] * d[48] * d[61] - 2 * d[2] * d[42] * d[48] * d[61] + 2 * d[4] * d[44] * d[48] * d[61] + 2 * d[8] * d[39] * d[49] * d[61] - 4 * d[7] * d[40] * d[49] * d[61] + 2 * d[6] * d[41] * d[49] * d[61] + 2 * d[5] * d[42] * d[49] * d[61] - 4 * d[4] * d[43] * d[49] * d[61] + 2 * d[3] * d[44] * d[49] * d[61] - 2 * d[8] * d[36] * d[50] * d[61] + 2 * d[6] * d[40] * d[50] * d[61] + 2 * d[4] * d[42] * d[50] * d[61] - 2 * d[0] * d[44] * d[50] * d[61] - 2 * d[3] * d[38] * d[51] * d[61] - 2 * d[2] * d[39] * d[51] * d[61] + 2 * d[5] * d[40] * d[51] * d[61] + 2 * d[4] * d[41] * d[51] * d[61] + 2 * d[2] * d[36] * d[52] * d[61] + 2 * d[0] * d[38] * d[52] * d[61] - 4 * d[4] * d[40] * d[52] * d[61] - 2 * d[5] * d[36] * d[53] * d[61] + 2 * d[4] * d[39] * d[53] * d[61] + 2 * d[3] * d[40] * d[53] * d[61] - 2 * d[0] * d[41] * d[53] * d[61] - 2 * d[39] * d[47] * d[60] * d[61] - 2 * d[38] * d[48] * d[60] * d[61] + 2 * d[41] * d[49] * d[60] * d[61] + 2 * d[40] * d[50] * d[60] * d[61] + d[38] * d[45] * std::pow(d[61], 2) + d[36] * d[47] * std::pow(d[61], 2) - 2 * d[40] * d[49] * std::pow(d[61], 2) + 2 * d[8] * d[37] * d[45] * d[62] - 2 * d[7] * d[41] * d[45] * d[62] - 2 * d[5] * d[43] * d[45] * d[62] + 2 * d[1] * d[44] * d[45] * d[62] + 2 * d[8] * d[36] * d[46] * d[62] - 2 * d[6] * d[40] * d[46] * d[62] - 2 * d[4] * d[42] * d[46] * d[62] + 2 * d[0] * d[44] * d[46] * d[62] - 4 * d[8] * d[39] * d[48] * d[62] + 2 * d[7] * d[40] * d[48] * d[62] + 2 * d[6] * d[41] * d[48] * d[62] + 2 * d[5] * d[42] * d[48] * d[62] + 2 * d[4] * d[43] * d[48] * d[62] - 4 * d[3] * d[44] * d[48] * d[62] - 2 * d[6] * d[37] * d[49] * d[62] + 2 * d[7] * d[39] * d[49] * d[62] - 2 * d[1] * d[42] * d[49] * d[62] + 2 * d[3] * d[43] * d[49] * d[62] - 2 * d[7] * d[36] * d[50] * d[62] + 2 * d[6] * d[39] * d[50] * d[62] + 2 * d[3] * d[42] * d[50] * d[62] - 2 * d[0] * d[43] * d[50] * d[62] - 2 * d[4] * d[37] * d[51] * d[62] + 2 * d[5] * d[39] * d[51] * d[62] - 2 * d[1] * d[40] * d[51] * d[62] + 2 * d[3] * d[41] * d[51] * d[62] - 2 * d[5] * d[36] * d[52] * d[62] + 2 * d[4] * d[39] * d[52] * d[62] + 2 * d[3] * d[40] * d[52] * d[62] - 2 * d[0] * d[41] * d[52] * d[62] + 2 * d[1] * d[36] * d[53] * d[62] + 2 * d[0] * d[37] * d[53] * d[62] - 4 * d[3] * d[39] * d[53] * d[62] - 2 * d[40] * d[46] * d[60] * d[62] + 2 * d[41] * d[48] * d[60] * d[62] - 2 * d[37] * d[49] * d[60] * d[62] + 2 * d[39] * d[50] * d[60] * d[62] - 2 * d[41] * d[45] * d[61] * d[62] + 2 * d[40] * d[48] * d[61] * d[62] + 2 * d[39] * d[49] * d[61] * d[62] - 2 * d[36] * d[50] * d[61] * d[62] + d[37] * d[45] * std::pow(d[62], 2) + d[36] * d[46] * std::pow(d[62], 2) - 2 * d[39] * d[48] * std::pow(d[62], 2) - d[2] * d[37] * d[45] * d[71] - d[1] * d[38] * d[45] * d[71] + 2 * d[5] * d[41] * d[45] * d[71] - d[2] * d[36] * d[46] * d[71] - d[0] * d[38] * d[46] * d[71] + 2 * d[4] * d[40] * d[46] * d[71] - d[1] * d[36] * d[47] * d[71] - d[0] * d[37] * d[47] * d[71] + 2 * d[3] * d[39] * d[47] * d[71] + 2 * d[3] * d[38] * d[48] * d[71] + 2 * d[2] * d[39] * d[48] * d[71] - 2 * d[5] * d[40] * d[48] * d[71] - 2 * d[4] * d[41] * d[48] * d[71] + 2 * d[4] * d[37] * d[49] * d[71] - 2 * d[5] * d[39] * d[49] * d[71] + 2 * d[1] * d[40] * d[49] * d[71] - 2 * d[3] * d[41] * d[49] * d[71] + 2 * d[5] * d[36] * d[50] * d[71] - 2 * d[4] * d[39] * d[50] * d[71] - 2 * d[3] * d[40] * d[50] * d[71] + 2 * d[0] * d[41] * d[50] * d[71];
    coeffs[161] = 2 * d[6] * d[46] * d[47] * d[60] - 2 * d[7] * d[47] * d[48] * d[60] - 2 * d[8] * d[46] * d[49] * d[60] + 2 * d[8] * d[48] * d[50] * d[60] + 2 * d[7] * d[49] * d[50] * d[60] - 2 * d[6] * std::pow(d[50], 2) * d[60] + 2 * d[2] * d[46] * d[51] * d[60] + 2 * d[1] * d[47] * d[51] * d[60] - 4 * d[5] * d[50] * d[51] * d[60] - 2 * d[3] * d[47] * d[52] * d[60] - 2 * d[2] * d[48] * d[52] * d[60] + 2 * d[5] * d[49] * d[52] * d[60] + 2 * d[4] * d[50] * d[52] * d[60] - 2 * d[4] * d[46] * d[53] * d[60] + 2 * d[5] * d[48] * d[53] * d[60] - 2 * d[1] * d[49] * d[53] * d[60] + 2 * d[3] * d[50] * d[53] * d[60] + d[46] * d[47] * std::pow(d[60], 2) - std::pow(d[50], 2) * std::pow(d[60], 2) + 2 * d[7] * d[45] * d[47] * d[61] - 2 * d[6] * d[47] * d[48] * d[61] + 2 * d[8] * d[48] * d[49] * d[61] - 2 * d[7] * std::pow(d[49], 2) * d[61] - 2 * d[8] * d[45] * d[50] * d[61] + 2 * d[6] * d[49] * d[50] * d[61] - 2 * d[3] * d[47] * d[51] * d[61] - 2 * d[2] * d[48] * d[51] * d[61] + 2 * d[5] * d[49] * d[51] * d[61] + 2 * d[4] * d[50] * d[51] * d[61] + 2 * d[2] * d[45] * d[52] * d[61] + 2 * d[0] * d[47] * d[52] * d[61] - 4 * d[4] * d[49] * d[52] * d[61] - 2 * d[5] * d[45] * d[53] * d[61] + 2 * d[4] * d[48] * d[53] * d[61] + 2 * d[3] * d[49] * d[53] * d[61] - 2 * d[0] * d[50] * d[53] * d[61] - 2 * d[47] * d[48] * d[60] * d[61] + 2 * d[49] * d[50] * d[60] * d[61] + d[45] * d[47] * std::pow(d[61], 2) - std::pow(d[49], 2) * std::pow(d[61], 2) + 2 * d[8] * d[45] * d[46] * d[62] - 2 * d[8] * std::pow(d[48], 2) * d[62] - 2 * d[6] * d[46] * d[49] * d[62] + 2 * d[7] * d[48] * d[49] * d[62] - 2 * d[7] * d[45] * d[50] * d[62] + 2 * d[6] * d[48] * d[50] * d[62] - 2 * d[4] * d[46] * d[51] * d[62] + 2 * d[5] * d[48] * d[51] * d[62] - 2 * d[1] * d[49] * d[51] * d[62] + 2 * d[3] * d[50] * d[51] * d[62] - 2 * d[5] * d[45] * d[52] * d[62] + 2 * d[4] * d[48] * d[52] * d[62] + 2 * d[3] * d[49] * d[52] * d[62] - 2 * d[0] * d[50] * d[52] * d[62] + 2 * d[1] * d[45] * d[53] * d[62] + 2 * d[0] * d[46] * d[53] * d[62] - 4 * d[3] * d[48] * d[53] * d[62] - 2 * d[46] * d[49] * d[60] * d[62] + 2 * d[48] * d[50] * d[60] * d[62] + 2 * d[48] * d[49] * d[61] * d[62] - 2 * d[45] * d[50] * d[61] * d[62] + d[45] * d[46] * std::pow(d[62], 2) - std::pow(d[48], 2) * std::pow(d[62], 2) - d[2] * d[45] * d[46] * d[71] - d[1] * d[45] * d[47] * d[71] - d[0] * d[46] * d[47] * d[71] + 2 * d[3] * d[47] * d[48] * d[71] + d[2] * std::pow(d[48], 2) * d[71] + 2 * d[4] * d[46] * d[49] * d[71] - 2 * d[5] * d[48] * d[49] * d[71] + d[1] * std::pow(d[49], 2) * d[71] + 2 * d[5] * d[45] * d[50] * d[71] - 2 * d[4] * d[48] * d[50] * d[71] - 2 * d[3] * d[49] * d[50] * d[71] + d[0] * std::pow(d[50], 2) * d[71];
    coeffs[162] = 2 * d[2] * d[6] * d[10] * d[60] - 2 * d[4] * d[8] * d[10] * d[60] + 2 * d[1] * d[6] * d[11] * d[60] - 2 * d[3] * d[7] * d[11] * d[60] - 2 * d[2] * d[7] * d[12] * d[60] + 2 * d[5] * d[8] * d[12] * d[60] + 2 * d[5] * d[7] * d[13] * d[60] - 2 * d[1] * d[8] * d[13] * d[60] - 4 * d[5] * d[6] * d[14] * d[60] + 2 * d[4] * d[7] * d[14] * d[60] + 2 * d[3] * d[8] * d[14] * d[60] + 2 * d[1] * d[2] * d[15] * d[60] - 2 * std::pow(d[5], 2) * d[15] * d[60] - 2 * d[2] * d[3] * d[16] * d[60] + 2 * d[4] * d[5] * d[16] * d[60] - 2 * d[1] * d[4] * d[17] * d[60] + 2 * d[3] * d[5] * d[17] * d[60] + d[2] * d[10] * std::pow(d[60], 2) + d[1] * d[11] * std::pow(d[60], 2) - 2 * d[5] * d[14] * std::pow(d[60], 2) + 2 * d[2] * d[7] * d[9] * d[61] - 2 * d[5] * d[8] * d[9] * d[61] - 2 * d[3] * d[6] * d[11] * d[61] + 2 * d[0] * d[7] * d[11] * d[61] - 2 * d[2] * d[6] * d[12] * d[61] + 2 * d[4] * d[8] * d[12] * d[61] + 2 * d[5] * d[6] * d[13] * d[61] - 4 * d[4] * d[7] * d[13] * d[61] + 2 * d[3] * d[8] * d[13] * d[61] + 2 * d[4] * d[6] * d[14] * d[61] - 2 * d[0] * d[8] * d[14] * d[61] - 2 * d[2] * d[3] * d[15] * d[61] + 2 * d[4] * d[5] * d[15] * d[61] + 2 * d[0] * d[2] * d[16] * d[61] - 2 * std::pow(d[4], 2) * d[16] * d[61] + 2 * d[3] * d[4] * d[17] * d[61] - 2 * d[0] * d[5] * d[17] * d[61] - 2 * d[3] * d[11] * d[60] * d[61] - 2 * d[2] * d[12] * d[60] * d[61] + 2 * d[5] * d[13] * d[60] * d[61] + 2 * d[4] * d[14] * d[60] * d[61] + d[2] * d[9] * std::pow(d[61], 2) + d[0] * d[11] * std::pow(d[61], 2) - 2 * d[4] * d[13] * std::pow(d[61], 2) - 2 * d[5] * d[7] * d[9] * d[62] + 2 * d[1] * d[8] * d[9] * d[62] - 2 * d[4] * d[6] * d[10] * d[62] + 2 * d[0] * d[8] * d[10] * d[62] + 2 * d[5] * d[6] * d[12] * d[62] + 2 * d[4] * d[7] * d[12] * d[62] - 4 * d[3] * d[8] * d[12] * d[62] - 2 * d[1] * d[6] * d[13] * d[62] + 2 * d[3] * d[7] * d[13] * d[62] + 2 * d[3] * d[6] * d[14] * d[62] - 2 * d[0] * d[7] * d[14] * d[62] - 2 * d[1] * d[4] * d[15] * d[62] + 2 * d[3] * d[5] * d[15] * d[62] + 2 * d[3] * d[4] * d[16] * d[62] - 2 * d[0] * d[5] * d[16] * d[62] + 2 * d[0] * d[1] * d[17] * d[62] - 2 * std::pow(d[3], 2) * d[17] * d[62] - 2 * d[4] * d[10] * d[60] * d[62] + 2 * d[5] * d[12] * d[60] * d[62] - 2 * d[1] * d[13] * d[60] * d[62] + 2 * d[3] * d[14] * d[60] * d[62] - 2 * d[5] * d[9] * d[61] * d[62] + 2 * d[4] * d[12] * d[61] * d[62] + 2 * d[3] * d[13] * d[61] * d[62] - 2 * d[0] * d[14] * d[61] * d[62] + d[1] * d[9] * std::pow(d[62], 2) + d[0] * d[10] * std::pow(d[62], 2) - 2 * d[3] * d[12] * std::pow(d[62], 2) - d[1] * d[2] * d[9] * d[71] + std::pow(d[5], 2) * d[9] * d[71] - d[0] * d[2] * d[10] * d[71] + std::pow(d[4], 2) * d[10] * d[71] - d[0] * d[1] * d[11] * d[71] + std::pow(d[3], 2) * d[11] * d[71] + 2 * d[2] * d[3] * d[12] * d[71] - 2 * d[4] * d[5] * d[12] * d[71] + 2 * d[1] * d[4] * d[13] * d[71] - 2 * d[3] * d[5] * d[13] * d[71] - 2 * d[3] * d[4] * d[14] * d[71] + 2 * d[0] * d[5] * d[14] * d[71];
    coeffs[163] = 2 * d[2] * d[6] * d[19] * d[60] - 2 * d[4] * d[8] * d[19] * d[60] + 2 * d[1] * d[6] * d[20] * d[60] - 2 * d[3] * d[7] * d[20] * d[60] - 2 * d[2] * d[7] * d[21] * d[60] + 2 * d[5] * d[8] * d[21] * d[60] + 2 * d[5] * d[7] * d[22] * d[60] - 2 * d[1] * d[8] * d[22] * d[60] - 4 * d[5] * d[6] * d[23] * d[60] + 2 * d[4] * d[7] * d[23] * d[60] + 2 * d[3] * d[8] * d[23] * d[60] + 2 * d[1] * d[2] * d[24] * d[60] - 2 * std::pow(d[5], 2) * d[24] * d[60] - 2 * d[2] * d[3] * d[25] * d[60] + 2 * d[4] * d[5] * d[25] * d[60] - 2 * d[1] * d[4] * d[26] * d[60] + 2 * d[3] * d[5] * d[26] * d[60] + d[2] * d[19] * std::pow(d[60], 2) + d[1] * d[20] * std::pow(d[60], 2) - 2 * d[5] * d[23] * std::pow(d[60], 2) + 2 * d[2] * d[7] * d[18] * d[61] - 2 * d[5] * d[8] * d[18] * d[61] - 2 * d[3] * d[6] * d[20] * d[61] + 2 * d[0] * d[7] * d[20] * d[61] - 2 * d[2] * d[6] * d[21] * d[61] + 2 * d[4] * d[8] * d[21] * d[61] + 2 * d[5] * d[6] * d[22] * d[61] - 4 * d[4] * d[7] * d[22] * d[61] + 2 * d[3] * d[8] * d[22] * d[61] + 2 * d[4] * d[6] * d[23] * d[61] - 2 * d[0] * d[8] * d[23] * d[61] - 2 * d[2] * d[3] * d[24] * d[61] + 2 * d[4] * d[5] * d[24] * d[61] + 2 * d[0] * d[2] * d[25] * d[61] - 2 * std::pow(d[4], 2) * d[25] * d[61] + 2 * d[3] * d[4] * d[26] * d[61] - 2 * d[0] * d[5] * d[26] * d[61] - 2 * d[3] * d[20] * d[60] * d[61] - 2 * d[2] * d[21] * d[60] * d[61] + 2 * d[5] * d[22] * d[60] * d[61] + 2 * d[4] * d[23] * d[60] * d[61] + d[2] * d[18] * std::pow(d[61], 2) + d[0] * d[20] * std::pow(d[61], 2) - 2 * d[4] * d[22] * std::pow(d[61], 2) - 2 * d[5] * d[7] * d[18] * d[62] + 2 * d[1] * d[8] * d[18] * d[62] - 2 * d[4] * d[6] * d[19] * d[62] + 2 * d[0] * d[8] * d[19] * d[62] + 2 * d[5] * d[6] * d[21] * d[62] + 2 * d[4] * d[7] * d[21] * d[62] - 4 * d[3] * d[8] * d[21] * d[62] - 2 * d[1] * d[6] * d[22] * d[62] + 2 * d[3] * d[7] * d[22] * d[62] + 2 * d[3] * d[6] * d[23] * d[62] - 2 * d[0] * d[7] * d[23] * d[62] - 2 * d[1] * d[4] * d[24] * d[62] + 2 * d[3] * d[5] * d[24] * d[62] + 2 * d[3] * d[4] * d[25] * d[62] - 2 * d[0] * d[5] * d[25] * d[62] + 2 * d[0] * d[1] * d[26] * d[62] - 2 * std::pow(d[3], 2) * d[26] * d[62] - 2 * d[4] * d[19] * d[60] * d[62] + 2 * d[5] * d[21] * d[60] * d[62] - 2 * d[1] * d[22] * d[60] * d[62] + 2 * d[3] * d[23] * d[60] * d[62] - 2 * d[5] * d[18] * d[61] * d[62] + 2 * d[4] * d[21] * d[61] * d[62] + 2 * d[3] * d[22] * d[61] * d[62] - 2 * d[0] * d[23] * d[61] * d[62] + d[1] * d[18] * std::pow(d[62], 2) + d[0] * d[19] * std::pow(d[62], 2) - 2 * d[3] * d[21] * std::pow(d[62], 2) - d[1] * d[2] * d[18] * d[71] + std::pow(d[5], 2) * d[18] * d[71] - d[0] * d[2] * d[19] * d[71] + std::pow(d[4], 2) * d[19] * d[71] - d[0] * d[1] * d[20] * d[71] + std::pow(d[3], 2) * d[20] * d[71] + 2 * d[2] * d[3] * d[21] * d[71] - 2 * d[4] * d[5] * d[21] * d[71] + 2 * d[1] * d[4] * d[22] * d[71] - 2 * d[3] * d[5] * d[22] * d[71] - 2 * d[3] * d[4] * d[23] * d[71] + 2 * d[0] * d[5] * d[23] * d[71];
    coeffs[164] = 2 * d[2] * d[6] * d[28] * d[60] - 2 * d[4] * d[8] * d[28] * d[60] + 2 * d[1] * d[6] * d[29] * d[60] - 2 * d[3] * d[7] * d[29] * d[60] - 2 * d[2] * d[7] * d[30] * d[60] + 2 * d[5] * d[8] * d[30] * d[60] + 2 * d[5] * d[7] * d[31] * d[60] - 2 * d[1] * d[8] * d[31] * d[60] - 4 * d[5] * d[6] * d[32] * d[60] + 2 * d[4] * d[7] * d[32] * d[60] + 2 * d[3] * d[8] * d[32] * d[60] + 2 * d[1] * d[2] * d[33] * d[60] - 2 * std::pow(d[5], 2) * d[33] * d[60] - 2 * d[2] * d[3] * d[34] * d[60] + 2 * d[4] * d[5] * d[34] * d[60] - 2 * d[1] * d[4] * d[35] * d[60] + 2 * d[3] * d[5] * d[35] * d[60] + d[2] * d[28] * std::pow(d[60], 2) + d[1] * d[29] * std::pow(d[60], 2) - 2 * d[5] * d[32] * std::pow(d[60], 2) + 2 * d[2] * d[7] * d[27] * d[61] - 2 * d[5] * d[8] * d[27] * d[61] - 2 * d[3] * d[6] * d[29] * d[61] + 2 * d[0] * d[7] * d[29] * d[61] - 2 * d[2] * d[6] * d[30] * d[61] + 2 * d[4] * d[8] * d[30] * d[61] + 2 * d[5] * d[6] * d[31] * d[61] - 4 * d[4] * d[7] * d[31] * d[61] + 2 * d[3] * d[8] * d[31] * d[61] + 2 * d[4] * d[6] * d[32] * d[61] - 2 * d[0] * d[8] * d[32] * d[61] - 2 * d[2] * d[3] * d[33] * d[61] + 2 * d[4] * d[5] * d[33] * d[61] + 2 * d[0] * d[2] * d[34] * d[61] - 2 * std::pow(d[4], 2) * d[34] * d[61] + 2 * d[3] * d[4] * d[35] * d[61] - 2 * d[0] * d[5] * d[35] * d[61] - 2 * d[3] * d[29] * d[60] * d[61] - 2 * d[2] * d[30] * d[60] * d[61] + 2 * d[5] * d[31] * d[60] * d[61] + 2 * d[4] * d[32] * d[60] * d[61] + d[2] * d[27] * std::pow(d[61], 2) + d[0] * d[29] * std::pow(d[61], 2) - 2 * d[4] * d[31] * std::pow(d[61], 2) - 2 * d[5] * d[7] * d[27] * d[62] + 2 * d[1] * d[8] * d[27] * d[62] - 2 * d[4] * d[6] * d[28] * d[62] + 2 * d[0] * d[8] * d[28] * d[62] + 2 * d[5] * d[6] * d[30] * d[62] + 2 * d[4] * d[7] * d[30] * d[62] - 4 * d[3] * d[8] * d[30] * d[62] - 2 * d[1] * d[6] * d[31] * d[62] + 2 * d[3] * d[7] * d[31] * d[62] + 2 * d[3] * d[6] * d[32] * d[62] - 2 * d[0] * d[7] * d[32] * d[62] - 2 * d[1] * d[4] * d[33] * d[62] + 2 * d[3] * d[5] * d[33] * d[62] + 2 * d[3] * d[4] * d[34] * d[62] - 2 * d[0] * d[5] * d[34] * d[62] + 2 * d[0] * d[1] * d[35] * d[62] - 2 * std::pow(d[3], 2) * d[35] * d[62] - 2 * d[4] * d[28] * d[60] * d[62] + 2 * d[5] * d[30] * d[60] * d[62] - 2 * d[1] * d[31] * d[60] * d[62] + 2 * d[3] * d[32] * d[60] * d[62] - 2 * d[5] * d[27] * d[61] * d[62] + 2 * d[4] * d[30] * d[61] * d[62] + 2 * d[3] * d[31] * d[61] * d[62] - 2 * d[0] * d[32] * d[61] * d[62] + d[1] * d[27] * std::pow(d[62], 2) + d[0] * d[28] * std::pow(d[62], 2) - 2 * d[3] * d[30] * std::pow(d[62], 2) - d[1] * d[2] * d[27] * d[71] + std::pow(d[5], 2) * d[27] * d[71] - d[0] * d[2] * d[28] * d[71] + std::pow(d[4], 2) * d[28] * d[71] - d[0] * d[1] * d[29] * d[71] + std::pow(d[3], 2) * d[29] * d[71] + 2 * d[2] * d[3] * d[30] * d[71] - 2 * d[4] * d[5] * d[30] * d[71] + 2 * d[1] * d[4] * d[31] * d[71] - 2 * d[3] * d[5] * d[31] * d[71] - 2 * d[3] * d[4] * d[32] * d[71] + 2 * d[0] * d[5] * d[32] * d[71];
    coeffs[165] = 2 * d[2] * d[6] * d[37] * d[60] - 2 * d[4] * d[8] * d[37] * d[60] + 2 * d[1] * d[6] * d[38] * d[60] - 2 * d[3] * d[7] * d[38] * d[60] - 2 * d[2] * d[7] * d[39] * d[60] + 2 * d[5] * d[8] * d[39] * d[60] + 2 * d[5] * d[7] * d[40] * d[60] - 2 * d[1] * d[8] * d[40] * d[60] - 4 * d[5] * d[6] * d[41] * d[60] + 2 * d[4] * d[7] * d[41] * d[60] + 2 * d[3] * d[8] * d[41] * d[60] + 2 * d[1] * d[2] * d[42] * d[60] - 2 * std::pow(d[5], 2) * d[42] * d[60] - 2 * d[2] * d[3] * d[43] * d[60] + 2 * d[4] * d[5] * d[43] * d[60] - 2 * d[1] * d[4] * d[44] * d[60] + 2 * d[3] * d[5] * d[44] * d[60] + d[2] * d[37] * std::pow(d[60], 2) + d[1] * d[38] * std::pow(d[60], 2) - 2 * d[5] * d[41] * std::pow(d[60], 2) + 2 * d[2] * d[7] * d[36] * d[61] - 2 * d[5] * d[8] * d[36] * d[61] - 2 * d[3] * d[6] * d[38] * d[61] + 2 * d[0] * d[7] * d[38] * d[61] - 2 * d[2] * d[6] * d[39] * d[61] + 2 * d[4] * d[8] * d[39] * d[61] + 2 * d[5] * d[6] * d[40] * d[61] - 4 * d[4] * d[7] * d[40] * d[61] + 2 * d[3] * d[8] * d[40] * d[61] + 2 * d[4] * d[6] * d[41] * d[61] - 2 * d[0] * d[8] * d[41] * d[61] - 2 * d[2] * d[3] * d[42] * d[61] + 2 * d[4] * d[5] * d[42] * d[61] + 2 * d[0] * d[2] * d[43] * d[61] - 2 * std::pow(d[4], 2) * d[43] * d[61] + 2 * d[3] * d[4] * d[44] * d[61] - 2 * d[0] * d[5] * d[44] * d[61] - 2 * d[3] * d[38] * d[60] * d[61] - 2 * d[2] * d[39] * d[60] * d[61] + 2 * d[5] * d[40] * d[60] * d[61] + 2 * d[4] * d[41] * d[60] * d[61] + d[2] * d[36] * std::pow(d[61], 2) + d[0] * d[38] * std::pow(d[61], 2) - 2 * d[4] * d[40] * std::pow(d[61], 2) - 2 * d[5] * d[7] * d[36] * d[62] + 2 * d[1] * d[8] * d[36] * d[62] - 2 * d[4] * d[6] * d[37] * d[62] + 2 * d[0] * d[8] * d[37] * d[62] + 2 * d[5] * d[6] * d[39] * d[62] + 2 * d[4] * d[7] * d[39] * d[62] - 4 * d[3] * d[8] * d[39] * d[62] - 2 * d[1] * d[6] * d[40] * d[62] + 2 * d[3] * d[7] * d[40] * d[62] + 2 * d[3] * d[6] * d[41] * d[62] - 2 * d[0] * d[7] * d[41] * d[62] - 2 * d[1] * d[4] * d[42] * d[62] + 2 * d[3] * d[5] * d[42] * d[62] + 2 * d[3] * d[4] * d[43] * d[62] - 2 * d[0] * d[5] * d[43] * d[62] + 2 * d[0] * d[1] * d[44] * d[62] - 2 * std::pow(d[3], 2) * d[44] * d[62] - 2 * d[4] * d[37] * d[60] * d[62] + 2 * d[5] * d[39] * d[60] * d[62] - 2 * d[1] * d[40] * d[60] * d[62] + 2 * d[3] * d[41] * d[60] * d[62] - 2 * d[5] * d[36] * d[61] * d[62] + 2 * d[4] * d[39] * d[61] * d[62] + 2 * d[3] * d[40] * d[61] * d[62] - 2 * d[0] * d[41] * d[61] * d[62] + d[1] * d[36] * std::pow(d[62], 2) + d[0] * d[37] * std::pow(d[62], 2) - 2 * d[3] * d[39] * std::pow(d[62], 2) - d[1] * d[2] * d[36] * d[71] + std::pow(d[5], 2) * d[36] * d[71] - d[0] * d[2] * d[37] * d[71] + std::pow(d[4], 2) * d[37] * d[71] - d[0] * d[1] * d[38] * d[71] + std::pow(d[3], 2) * d[38] * d[71] + 2 * d[2] * d[3] * d[39] * d[71] - 2 * d[4] * d[5] * d[39] * d[71] + 2 * d[1] * d[4] * d[40] * d[71] - 2 * d[3] * d[5] * d[40] * d[71] - 2 * d[3] * d[4] * d[41] * d[71] + 2 * d[0] * d[5] * d[41] * d[71];
    coeffs[166] = 2 * d[2] * d[6] * d[46] * d[60] - 2 * d[4] * d[8] * d[46] * d[60] + 2 * d[1] * d[6] * d[47] * d[60] - 2 * d[3] * d[7] * d[47] * d[60] - 2 * d[2] * d[7] * d[48] * d[60] + 2 * d[5] * d[8] * d[48] * d[60] + 2 * d[5] * d[7] * d[49] * d[60] - 2 * d[1] * d[8] * d[49] * d[60] - 4 * d[5] * d[6] * d[50] * d[60] + 2 * d[4] * d[7] * d[50] * d[60] + 2 * d[3] * d[8] * d[50] * d[60] + 2 * d[1] * d[2] * d[51] * d[60] - 2 * std::pow(d[5], 2) * d[51] * d[60] - 2 * d[2] * d[3] * d[52] * d[60] + 2 * d[4] * d[5] * d[52] * d[60] - 2 * d[1] * d[4] * d[53] * d[60] + 2 * d[3] * d[5] * d[53] * d[60] + d[2] * d[46] * std::pow(d[60], 2) + d[1] * d[47] * std::pow(d[60], 2) - 2 * d[5] * d[50] * std::pow(d[60], 2) + 2 * d[2] * d[7] * d[45] * d[61] - 2 * d[5] * d[8] * d[45] * d[61] - 2 * d[3] * d[6] * d[47] * d[61] + 2 * d[0] * d[7] * d[47] * d[61] - 2 * d[2] * d[6] * d[48] * d[61] + 2 * d[4] * d[8] * d[48] * d[61] + 2 * d[5] * d[6] * d[49] * d[61] - 4 * d[4] * d[7] * d[49] * d[61] + 2 * d[3] * d[8] * d[49] * d[61] + 2 * d[4] * d[6] * d[50] * d[61] - 2 * d[0] * d[8] * d[50] * d[61] - 2 * d[2] * d[3] * d[51] * d[61] + 2 * d[4] * d[5] * d[51] * d[61] + 2 * d[0] * d[2] * d[52] * d[61] - 2 * std::pow(d[4], 2) * d[52] * d[61] + 2 * d[3] * d[4] * d[53] * d[61] - 2 * d[0] * d[5] * d[53] * d[61] - 2 * d[3] * d[47] * d[60] * d[61] - 2 * d[2] * d[48] * d[60] * d[61] + 2 * d[5] * d[49] * d[60] * d[61] + 2 * d[4] * d[50] * d[60] * d[61] + d[2] * d[45] * std::pow(d[61], 2) + d[0] * d[47] * std::pow(d[61], 2) - 2 * d[4] * d[49] * std::pow(d[61], 2) - 2 * d[5] * d[7] * d[45] * d[62] + 2 * d[1] * d[8] * d[45] * d[62] - 2 * d[4] * d[6] * d[46] * d[62] + 2 * d[0] * d[8] * d[46] * d[62] + 2 * d[5] * d[6] * d[48] * d[62] + 2 * d[4] * d[7] * d[48] * d[62] - 4 * d[3] * d[8] * d[48] * d[62] - 2 * d[1] * d[6] * d[49] * d[62] + 2 * d[3] * d[7] * d[49] * d[62] + 2 * d[3] * d[6] * d[50] * d[62] - 2 * d[0] * d[7] * d[50] * d[62] - 2 * d[1] * d[4] * d[51] * d[62] + 2 * d[3] * d[5] * d[51] * d[62] + 2 * d[3] * d[4] * d[52] * d[62] - 2 * d[0] * d[5] * d[52] * d[62] + 2 * d[0] * d[1] * d[53] * d[62] - 2 * std::pow(d[3], 2) * d[53] * d[62] - 2 * d[4] * d[46] * d[60] * d[62] + 2 * d[5] * d[48] * d[60] * d[62] - 2 * d[1] * d[49] * d[60] * d[62] + 2 * d[3] * d[50] * d[60] * d[62] - 2 * d[5] * d[45] * d[61] * d[62] + 2 * d[4] * d[48] * d[61] * d[62] + 2 * d[3] * d[49] * d[61] * d[62] - 2 * d[0] * d[50] * d[61] * d[62] + d[1] * d[45] * std::pow(d[62], 2) + d[0] * d[46] * std::pow(d[62], 2) - 2 * d[3] * d[48] * std::pow(d[62], 2) - d[1] * d[2] * d[45] * d[71] + std::pow(d[5], 2) * d[45] * d[71] - d[0] * d[2] * d[46] * d[71] + std::pow(d[4], 2) * d[46] * d[71] - d[0] * d[1] * d[47] * d[71] + std::pow(d[3], 2) * d[47] * d[71] + 2 * d[2] * d[3] * d[48] * d[71] - 2 * d[4] * d[5] * d[48] * d[71] + 2 * d[1] * d[4] * d[49] * d[71] - 2 * d[3] * d[5] * d[49] * d[71] - 2 * d[3] * d[4] * d[50] * d[71] + 2 * d[0] * d[5] * d[50] * d[71];
    coeffs[167] = 2 * d[1] * d[2] * d[6] * d[60] - 2 * std::pow(d[5], 2) * d[6] * d[60] - 2 * d[2] * d[3] * d[7] * d[60] + 2 * d[4] * d[5] * d[7] * d[60] - 2 * d[1] * d[4] * d[8] * d[60] + 2 * d[3] * d[5] * d[8] * d[60] + d[1] * d[2] * std::pow(d[60], 2) - std::pow(d[5], 2) * std::pow(d[60], 2) - 2 * d[2] * d[3] * d[6] * d[61] + 2 * d[4] * d[5] * d[6] * d[61] + 2 * d[0] * d[2] * d[7] * d[61] - 2 * std::pow(d[4], 2) * d[7] * d[61] + 2 * d[3] * d[4] * d[8] * d[61] - 2 * d[0] * d[5] * d[8] * d[61] - 2 * d[2] * d[3] * d[60] * d[61] + 2 * d[4] * d[5] * d[60] * d[61] + d[0] * d[2] * std::pow(d[61], 2) - std::pow(d[4], 2) * std::pow(d[61], 2) - 2 * d[1] * d[4] * d[6] * d[62] + 2 * d[3] * d[5] * d[6] * d[62] + 2 * d[3] * d[4] * d[7] * d[62] - 2 * d[0] * d[5] * d[7] * d[62] + 2 * d[0] * d[1] * d[8] * d[62] - 2 * std::pow(d[3], 2) * d[8] * d[62] - 2 * d[1] * d[4] * d[60] * d[62] + 2 * d[3] * d[5] * d[60] * d[62] + 2 * d[3] * d[4] * d[61] * d[62] - 2 * d[0] * d[5] * d[61] * d[62] + d[0] * d[1] * std::pow(d[62], 2) - std::pow(d[3], 2) * std::pow(d[62], 2) - d[0] * d[1] * d[2] * d[71] + d[2] * std::pow(d[3], 2) * d[71] + d[1] * std::pow(d[4], 2) * d[71] - 2 * d[3] * d[4] * d[5] * d[71] + d[0] * std::pow(d[5], 2) * d[71];
    coeffs[168] = 2 * d[10] * d[11] * d[15] * d[63] - 2 * std::pow(d[14], 2) * d[15] * d[63] - 2 * d[11] * d[12] * d[16] * d[63] + 2 * d[13] * d[14] * d[16] * d[63] - 2 * d[10] * d[13] * d[17] * d[63] + 2 * d[12] * d[14] * d[17] * d[63] - 2 * d[11] * d[12] * d[15] * d[64] + 2 * d[13] * d[14] * d[15] * d[64] + 2 * d[9] * d[11] * d[16] * d[64] - 2 * std::pow(d[13], 2) * d[16] * d[64] + 2 * d[12] * d[13] * d[17] * d[64] - 2 * d[9] * d[14] * d[17] * d[64] - 2 * d[10] * d[13] * d[15] * d[65] + 2 * d[12] * d[14] * d[15] * d[65] + 2 * d[12] * d[13] * d[16] * d[65] - 2 * d[9] * d[14] * d[16] * d[65] + 2 * d[9] * d[10] * d[17] * d[65] - 2 * std::pow(d[12], 2) * d[17] * d[65] - d[9] * d[10] * d[11] * d[72] + d[11] * std::pow(d[12], 2) * d[72] + d[10] * std::pow(d[13], 2) * d[72] - 2 * d[12] * d[13] * d[14] * d[72] + d[9] * std::pow(d[14], 2) * d[72];
    coeffs[169] = 2 * d[11] * d[15] * d[19] * d[63] - 2 * d[13] * d[17] * d[19] * d[63] + 2 * d[10] * d[15] * d[20] * d[63] - 2 * d[12] * d[16] * d[20] * d[63] - 2 * d[11] * d[16] * d[21] * d[63] + 2 * d[14] * d[17] * d[21] * d[63] + 2 * d[14] * d[16] * d[22] * d[63] - 2 * d[10] * d[17] * d[22] * d[63] - 4 * d[14] * d[15] * d[23] * d[63] + 2 * d[13] * d[16] * d[23] * d[63] + 2 * d[12] * d[17] * d[23] * d[63] + 2 * d[10] * d[11] * d[24] * d[63] - 2 * std::pow(d[14], 2) * d[24] * d[63] - 2 * d[11] * d[12] * d[25] * d[63] + 2 * d[13] * d[14] * d[25] * d[63] - 2 * d[10] * d[13] * d[26] * d[63] + 2 * d[12] * d[14] * d[26] * d[63] + 2 * d[11] * d[16] * d[18] * d[64] - 2 * d[14] * d[17] * d[18] * d[64] - 2 * d[12] * d[15] * d[20] * d[64] + 2 * d[9] * d[16] * d[20] * d[64] - 2 * d[11] * d[15] * d[21] * d[64] + 2 * d[13] * d[17] * d[21] * d[64] + 2 * d[14] * d[15] * d[22] * d[64] - 4 * d[13] * d[16] * d[22] * d[64] + 2 * d[12] * d[17] * d[22] * d[64] + 2 * d[13] * d[15] * d[23] * d[64] - 2 * d[9] * d[17] * d[23] * d[64] - 2 * d[11] * d[12] * d[24] * d[64] + 2 * d[13] * d[14] * d[24] * d[64] + 2 * d[9] * d[11] * d[25] * d[64] - 2 * std::pow(d[13], 2) * d[25] * d[64] + 2 * d[12] * d[13] * d[26] * d[64] - 2 * d[9] * d[14] * d[26] * d[64] - 2 * d[14] * d[16] * d[18] * d[65] + 2 * d[10] * d[17] * d[18] * d[65] - 2 * d[13] * d[15] * d[19] * d[65] + 2 * d[9] * d[17] * d[19] * d[65] + 2 * d[14] * d[15] * d[21] * d[65] + 2 * d[13] * d[16] * d[21] * d[65] - 4 * d[12] * d[17] * d[21] * d[65] - 2 * d[10] * d[15] * d[22] * d[65] + 2 * d[12] * d[16] * d[22] * d[65] + 2 * d[12] * d[15] * d[23] * d[65] - 2 * d[9] * d[16] * d[23] * d[65] - 2 * d[10] * d[13] * d[24] * d[65] + 2 * d[12] * d[14] * d[24] * d[65] + 2 * d[12] * d[13] * d[25] * d[65] - 2 * d[9] * d[14] * d[25] * d[65] + 2 * d[9] * d[10] * d[26] * d[65] - 2 * std::pow(d[12], 2) * d[26] * d[65] - d[10] * d[11] * d[18] * d[72] + std::pow(d[14], 2) * d[18] * d[72] - d[9] * d[11] * d[19] * d[72] + std::pow(d[13], 2) * d[19] * d[72] - d[9] * d[10] * d[20] * d[72] + std::pow(d[12], 2) * d[20] * d[72] + 2 * d[11] * d[12] * d[21] * d[72] - 2 * d[13] * d[14] * d[21] * d[72] + 2 * d[10] * d[13] * d[22] * d[72] - 2 * d[12] * d[14] * d[22] * d[72] - 2 * d[12] * d[13] * d[23] * d[72] + 2 * d[9] * d[14] * d[23] * d[72];
    coeffs[170] = 2 * d[15] * d[19] * d[20] * d[63] - 2 * d[16] * d[20] * d[21] * d[63] - 2 * d[17] * d[19] * d[22] * d[63] + 2 * d[17] * d[21] * d[23] * d[63] + 2 * d[16] * d[22] * d[23] * d[63] - 2 * d[15] * std::pow(d[23], 2) * d[63] + 2 * d[11] * d[19] * d[24] * d[63] + 2 * d[10] * d[20] * d[24] * d[63] - 4 * d[14] * d[23] * d[24] * d[63] - 2 * d[12] * d[20] * d[25] * d[63] - 2 * d[11] * d[21] * d[25] * d[63] + 2 * d[14] * d[22] * d[25] * d[63] + 2 * d[13] * d[23] * d[25] * d[63] - 2 * d[13] * d[19] * d[26] * d[63] + 2 * d[14] * d[21] * d[26] * d[63] - 2 * d[10] * d[22] * d[26] * d[63] + 2 * d[12] * d[23] * d[26] * d[63] + 2 * d[16] * d[18] * d[20] * d[64] - 2 * d[15] * d[20] * d[21] * d[64] + 2 * d[17] * d[21] * d[22] * d[64] - 2 * d[16] * std::pow(d[22], 2) * d[64] - 2 * d[17] * d[18] * d[23] * d[64] + 2 * d[15] * d[22] * d[23] * d[64] - 2 * d[12] * d[20] * d[24] * d[64] - 2 * d[11] * d[21] * d[24] * d[64] + 2 * d[14] * d[22] * d[24] * d[64] + 2 * d[13] * d[23] * d[24] * d[64] + 2 * d[11] * d[18] * d[25] * d[64] + 2 * d[9] * d[20] * d[25] * d[64] - 4 * d[13] * d[22] * d[25] * d[64] - 2 * d[14] * d[18] * d[26] * d[64] + 2 * d[13] * d[21] * d[26] * d[64] + 2 * d[12] * d[22] * d[26] * d[64] - 2 * d[9] * d[23] * d[26] * d[64] + 2 * d[17] * d[18] * d[19] * d[65] - 2 * d[17] * std::pow(d[21], 2) * d[65] - 2 * d[15] * d[19] * d[22] * d[65] + 2 * d[16] * d[21] * d[22] * d[65] - 2 * d[16] * d[18] * d[23] * d[65] + 2 * d[15] * d[21] * d[23] * d[65] - 2 * d[13] * d[19] * d[24] * d[65] + 2 * d[14] * d[21] * d[24] * d[65] - 2 * d[10] * d[22] * d[24] * d[65] + 2 * d[12] * d[23] * d[24] * d[65] - 2 * d[14] * d[18] * d[25] * d[65] + 2 * d[13] * d[21] * d[25] * d[65] + 2 * d[12] * d[22] * d[25] * d[65] - 2 * d[9] * d[23] * d[25] * d[65] + 2 * d[10] * d[18] * d[26] * d[65] + 2 * d[9] * d[19] * d[26] * d[65] - 4 * d[12] * d[21] * d[26] * d[65] - d[11] * d[18] * d[19] * d[72] - d[10] * d[18] * d[20] * d[72] - d[9] * d[19] * d[20] * d[72] + 2 * d[12] * d[20] * d[21] * d[72] + d[11] * std::pow(d[21], 2) * d[72] + 2 * d[13] * d[19] * d[22] * d[72] - 2 * d[14] * d[21] * d[22] * d[72] + d[10] * std::pow(d[22], 2) * d[72] + 2 * d[14] * d[18] * d[23] * d[72] - 2 * d[13] * d[21] * d[23] * d[72] - 2 * d[12] * d[22] * d[23] * d[72] + d[9] * std::pow(d[23], 2) * d[72];
    coeffs[171] = 2 * d[19] * d[20] * d[24] * d[63] - 2 * std::pow(d[23], 2) * d[24] * d[63] - 2 * d[20] * d[21] * d[25] * d[63] + 2 * d[22] * d[23] * d[25] * d[63] - 2 * d[19] * d[22] * d[26] * d[63] + 2 * d[21] * d[23] * d[26] * d[63] - 2 * d[20] * d[21] * d[24] * d[64] + 2 * d[22] * d[23] * d[24] * d[64] + 2 * d[18] * d[20] * d[25] * d[64] - 2 * std::pow(d[22], 2) * d[25] * d[64] + 2 * d[21] * d[22] * d[26] * d[64] - 2 * d[18] * d[23] * d[26] * d[64] - 2 * d[19] * d[22] * d[24] * d[65] + 2 * d[21] * d[23] * d[24] * d[65] + 2 * d[21] * d[22] * d[25] * d[65] - 2 * d[18] * d[23] * d[25] * d[65] + 2 * d[18] * d[19] * d[26] * d[65] - 2 * std::pow(d[21], 2) * d[26] * d[65] - d[18] * d[19] * d[20] * d[72] + d[20] * std::pow(d[21], 2) * d[72] + d[19] * std::pow(d[22], 2) * d[72] - 2 * d[21] * d[22] * d[23] * d[72] + d[18] * std::pow(d[23], 2) * d[72];
    coeffs[172] = 2 * d[11] * d[15] * d[28] * d[63] - 2 * d[13] * d[17] * d[28] * d[63] + 2 * d[10] * d[15] * d[29] * d[63] - 2 * d[12] * d[16] * d[29] * d[63] - 2 * d[11] * d[16] * d[30] * d[63] + 2 * d[14] * d[17] * d[30] * d[63] + 2 * d[14] * d[16] * d[31] * d[63] - 2 * d[10] * d[17] * d[31] * d[63] - 4 * d[14] * d[15] * d[32] * d[63] + 2 * d[13] * d[16] * d[32] * d[63] + 2 * d[12] * d[17] * d[32] * d[63] + 2 * d[10] * d[11] * d[33] * d[63] - 2 * std::pow(d[14], 2) * d[33] * d[63] - 2 * d[11] * d[12] * d[34] * d[63] + 2 * d[13] * d[14] * d[34] * d[63] - 2 * d[10] * d[13] * d[35] * d[63] + 2 * d[12] * d[14] * d[35] * d[63] + 2 * d[11] * d[16] * d[27] * d[64] - 2 * d[14] * d[17] * d[27] * d[64] - 2 * d[12] * d[15] * d[29] * d[64] + 2 * d[9] * d[16] * d[29] * d[64] - 2 * d[11] * d[15] * d[30] * d[64] + 2 * d[13] * d[17] * d[30] * d[64] + 2 * d[14] * d[15] * d[31] * d[64] - 4 * d[13] * d[16] * d[31] * d[64] + 2 * d[12] * d[17] * d[31] * d[64] + 2 * d[13] * d[15] * d[32] * d[64] - 2 * d[9] * d[17] * d[32] * d[64] - 2 * d[11] * d[12] * d[33] * d[64] + 2 * d[13] * d[14] * d[33] * d[64] + 2 * d[9] * d[11] * d[34] * d[64] - 2 * std::pow(d[13], 2) * d[34] * d[64] + 2 * d[12] * d[13] * d[35] * d[64] - 2 * d[9] * d[14] * d[35] * d[64] - 2 * d[14] * d[16] * d[27] * d[65] + 2 * d[10] * d[17] * d[27] * d[65] - 2 * d[13] * d[15] * d[28] * d[65] + 2 * d[9] * d[17] * d[28] * d[65] + 2 * d[14] * d[15] * d[30] * d[65] + 2 * d[13] * d[16] * d[30] * d[65] - 4 * d[12] * d[17] * d[30] * d[65] - 2 * d[10] * d[15] * d[31] * d[65] + 2 * d[12] * d[16] * d[31] * d[65] + 2 * d[12] * d[15] * d[32] * d[65] - 2 * d[9] * d[16] * d[32] * d[65] - 2 * d[10] * d[13] * d[33] * d[65] + 2 * d[12] * d[14] * d[33] * d[65] + 2 * d[12] * d[13] * d[34] * d[65] - 2 * d[9] * d[14] * d[34] * d[65] + 2 * d[9] * d[10] * d[35] * d[65] - 2 * std::pow(d[12], 2) * d[35] * d[65] - d[10] * d[11] * d[27] * d[72] + std::pow(d[14], 2) * d[27] * d[72] - d[9] * d[11] * d[28] * d[72] + std::pow(d[13], 2) * d[28] * d[72] - d[9] * d[10] * d[29] * d[72] + std::pow(d[12], 2) * d[29] * d[72] + 2 * d[11] * d[12] * d[30] * d[72] - 2 * d[13] * d[14] * d[30] * d[72] + 2 * d[10] * d[13] * d[31] * d[72] - 2 * d[12] * d[14] * d[31] * d[72] - 2 * d[12] * d[13] * d[32] * d[72] + 2 * d[9] * d[14] * d[32] * d[72];
    coeffs[173] = 2 * d[15] * d[20] * d[28] * d[63] - 2 * d[17] * d[22] * d[28] * d[63] + 2 * d[11] * d[24] * d[28] * d[63] - 2 * d[13] * d[26] * d[28] * d[63] + 2 * d[15] * d[19] * d[29] * d[63] - 2 * d[16] * d[21] * d[29] * d[63] + 2 * d[10] * d[24] * d[29] * d[63] - 2 * d[12] * d[25] * d[29] * d[63] - 2 * d[16] * d[20] * d[30] * d[63] + 2 * d[17] * d[23] * d[30] * d[63] - 2 * d[11] * d[25] * d[30] * d[63] + 2 * d[14] * d[26] * d[30] * d[63] - 2 * d[17] * d[19] * d[31] * d[63] + 2 * d[16] * d[23] * d[31] * d[63] + 2 * d[14] * d[25] * d[31] * d[63] - 2 * d[10] * d[26] * d[31] * d[63] + 2 * d[17] * d[21] * d[32] * d[63] + 2 * d[16] * d[22] * d[32] * d[63] - 4 * d[15] * d[23] * d[32] * d[63] - 4 * d[14] * d[24] * d[32] * d[63] + 2 * d[13] * d[25] * d[32] * d[63] + 2 * d[12] * d[26] * d[32] * d[63] + 2 * d[11] * d[19] * d[33] * d[63] + 2 * d[10] * d[20] * d[33] * d[63] - 4 * d[14] * d[23] * d[33] * d[63] - 2 * d[12] * d[20] * d[34] * d[63] - 2 * d[11] * d[21] * d[34] * d[63] + 2 * d[14] * d[22] * d[34] * d[63] + 2 * d[13] * d[23] * d[34] * d[63] - 2 * d[13] * d[19] * d[35] * d[63] + 2 * d[14] * d[21] * d[35] * d[63] - 2 * d[10] * d[22] * d[35] * d[63] + 2 * d[12] * d[23] * d[35] * d[63] + 2 * d[16] * d[20] * d[27] * d[64] - 2 * d[17] * d[23] * d[27] * d[64] + 2 * d[11] * d[25] * d[27] * d[64] - 2 * d[14] * d[26] * d[27] * d[64] + 2 * d[16] * d[18] * d[29] * d[64] - 2 * d[15] * d[21] * d[29] * d[64] - 2 * d[12] * d[24] * d[29] * d[64] + 2 * d[9] * d[25] * d[29] * d[64] - 2 * d[15] * d[20] * d[30] * d[64] + 2 * d[17] * d[22] * d[30] * d[64] - 2 * d[11] * d[24] * d[30] * d[64] + 2 * d[13] * d[26] * d[30] * d[64] + 2 * d[17] * d[21] * d[31] * d[64] - 4 * d[16] * d[22] * d[31] * d[64] + 2 * d[15] * d[23] * d[31] * d[64] + 2 * d[14] * d[24] * d[31] * d[64] - 4 * d[13] * d[25] * d[31] * d[64] + 2 * d[12] * d[26] * d[31] * d[64] - 2 * d[17] * d[18] * d[32] * d[64] + 2 * d[15] * d[22] * d[32] * d[64] + 2 * d[13] * d[24] * d[32] * d[64] - 2 * d[9] * d[26] * d[32] * d[64] - 2 * d[12] * d[20] * d[33] * d[64] - 2 * d[11] * d[21] * d[33] * d[64] + 2 * d[14] * d[22] * d[33] * d[64] + 2 * d[13] * d[23] * d[33] * d[64] + 2 * d[11] * d[18] * d[34] * d[64] + 2 * d[9] * d[20] * d[34] * d[64] - 4 * d[13] * d[22] * d[34] * d[64] - 2 * d[14] * d[18] * d[35] * d[64] + 2 * d[13] * d[21] * d[35] * d[64] + 2 * d[12] * d[22] * d[35] * d[64] - 2 * d[9] * d[23] * d[35] * d[64] + 2 * d[17] * d[19] * d[27] * d[65] - 2 * d[16] * d[23] * d[27] * d[65] - 2 * d[14] * d[25] * d[27] * d[65] + 2 * d[10] * d[26] * d[27] * d[65] + 2 * d[17] * d[18] * d[28] * d[65] - 2 * d[15] * d[22] * d[28] * d[65] - 2 * d[13] * d[24] * d[28] * d[65] + 2 * d[9] * d[26] * d[28] * d[65] - 4 * d[17] * d[21] * d[30] * d[65] + 2 * d[16] * d[22] * d[30] * d[65] + 2 * d[15] * d[23] * d[30] * d[65] + 2 * d[14] * d[24] * d[30] * d[65] + 2 * d[13] * d[25] * d[30] * d[65] - 4 * d[12] * d[26] * d[30] * d[65] - 2 * d[15] * d[19] * d[31] * d[65] + 2 * d[16] * d[21] * d[31] * d[65] - 2 * d[10] * d[24] * d[31] * d[65] + 2 * d[12] * d[25] * d[31] * d[65] - 2 * d[16] * d[18] * d[32] * d[65] + 2 * d[15] * d[21] * d[32] * d[65] + 2 * d[12] * d[24] * d[32] * d[65] - 2 * d[9] * d[25] * d[32] * d[65] - 2 * d[13] * d[19] * d[33] * d[65] + 2 * d[14] * d[21] * d[33] * d[65] - 2 * d[10] * d[22] * d[33] * d[65] + 2 * d[12] * d[23] * d[33] * d[65] - 2 * d[14] * d[18] * d[34] * d[65] + 2 * d[13] * d[21] * d[34] * d[65] + 2 * d[12] * d[22] * d[34] * d[65] - 2 * d[9] * d[23] * d[34] * d[65] + 2 * d[10] * d[18] * d[35] * d[65] + 2 * d[9] * d[19] * d[35] * d[65] - 4 * d[12] * d[21] * d[35] * d[65] - d[11] * d[19] * d[27] * d[72] - d[10] * d[20] * d[27] * d[72] + 2 * d[14] * d[23] * d[27] * d[72] - d[11] * d[18] * d[28] * d[72] - d[9] * d[20] * d[28] * d[72] + 2 * d[13] * d[22] * d[28] * d[72] - d[10] * d[18] * d[29] * d[72] - d[9] * d[19] * d[29] * d[72] + 2 * d[12] * d[21] * d[29] * d[72] + 2 * d[12] * d[20] * d[30] * d[72] + 2 * d[11] * d[21] * d[30] * d[72] - 2 * d[14] * d[22] * d[30] * d[72] - 2 * d[13] * d[23] * d[30] * d[72] + 2 * d[13] * d[19] * d[31] * d[72] - 2 * d[14] * d[21] * d[31] * d[72] + 2 * d[10] * d[22] * d[31] * d[72] - 2 * d[12] * d[23] * d[31] * d[72] + 2 * d[14] * d[18] * d[32] * d[72] - 2 * d[13] * d[21] * d[32] * d[72] - 2 * d[12] * d[22] * d[32] * d[72] + 2 * d[9] * d[23] * d[32] * d[72];
    coeffs[174] = 2 * d[20] * d[24] * d[28] * d[63] - 2 * d[22] * d[26] * d[28] * d[63] + 2 * d[19] * d[24] * d[29] * d[63] - 2 * d[21] * d[25] * d[29] * d[63] - 2 * d[20] * d[25] * d[30] * d[63] + 2 * d[23] * d[26] * d[30] * d[63] + 2 * d[23] * d[25] * d[31] * d[63] - 2 * d[19] * d[26] * d[31] * d[63] - 4 * d[23] * d[24] * d[32] * d[63] + 2 * d[22] * d[25] * d[32] * d[63] + 2 * d[21] * d[26] * d[32] * d[63] + 2 * d[19] * d[20] * d[33] * d[63] - 2 * std::pow(d[23], 2) * d[33] * d[63] - 2 * d[20] * d[21] * d[34] * d[63] + 2 * d[22] * d[23] * d[34] * d[63] - 2 * d[19] * d[22] * d[35] * d[63] + 2 * d[21] * d[23] * d[35] * d[63] + 2 * d[20] * d[25] * d[27] * d[64] - 2 * d[23] * d[26] * d[27] * d[64] - 2 * d[21] * d[24] * d[29] * d[64] + 2 * d[18] * d[25] * d[29] * d[64] - 2 * d[20] * d[24] * d[30] * d[64] + 2 * d[22] * d[26] * d[30] * d[64] + 2 * d[23] * d[24] * d[31] * d[64] - 4 * d[22] * d[25] * d[31] * d[64] + 2 * d[21] * d[26] * d[31] * d[64] + 2 * d[22] * d[24] * d[32] * d[64] - 2 * d[18] * d[26] * d[32] * d[64] - 2 * d[20] * d[21] * d[33] * d[64] + 2 * d[22] * d[23] * d[33] * d[64] + 2 * d[18] * d[20] * d[34] * d[64] - 2 * std::pow(d[22], 2) * d[34] * d[64] + 2 * d[21] * d[22] * d[35] * d[64] - 2 * d[18] * d[23] * d[35] * d[64] - 2 * d[23] * d[25] * d[27] * d[65] + 2 * d[19] * d[26] * d[27] * d[65] - 2 * d[22] * d[24] * d[28] * d[65] + 2 * d[18] * d[26] * d[28] * d[65] + 2 * d[23] * d[24] * d[30] * d[65] + 2 * d[22] * d[25] * d[30] * d[65] - 4 * d[21] * d[26] * d[30] * d[65] - 2 * d[19] * d[24] * d[31] * d[65] + 2 * d[21] * d[25] * d[31] * d[65] + 2 * d[21] * d[24] * d[32] * d[65] - 2 * d[18] * d[25] * d[32] * d[65] - 2 * d[19] * d[22] * d[33] * d[65] + 2 * d[21] * d[23] * d[33] * d[65] + 2 * d[21] * d[22] * d[34] * d[65] - 2 * d[18] * d[23] * d[34] * d[65] + 2 * d[18] * d[19] * d[35] * d[65] - 2 * std::pow(d[21], 2) * d[35] * d[65] - d[19] * d[20] * d[27] * d[72] + std::pow(d[23], 2) * d[27] * d[72] - d[18] * d[20] * d[28] * d[72] + std::pow(d[22], 2) * d[28] * d[72] - d[18] * d[19] * d[29] * d[72] + std::pow(d[21], 2) * d[29] * d[72] + 2 * d[20] * d[21] * d[30] * d[72] - 2 * d[22] * d[23] * d[30] * d[72] + 2 * d[19] * d[22] * d[31] * d[72] - 2 * d[21] * d[23] * d[31] * d[72] - 2 * d[21] * d[22] * d[32] * d[72] + 2 * d[18] * d[23] * d[32] * d[72];
    coeffs[175] = 2 * d[15] * d[28] * d[29] * d[63] - 2 * d[16] * d[29] * d[30] * d[63] - 2 * d[17] * d[28] * d[31] * d[63] + 2 * d[17] * d[30] * d[32] * d[63] + 2 * d[16] * d[31] * d[32] * d[63] - 2 * d[15] * std::pow(d[32], 2) * d[63] + 2 * d[11] * d[28] * d[33] * d[63] + 2 * d[10] * d[29] * d[33] * d[63] - 4 * d[14] * d[32] * d[33] * d[63] - 2 * d[12] * d[29] * d[34] * d[63] - 2 * d[11] * d[30] * d[34] * d[63] + 2 * d[14] * d[31] * d[34] * d[63] + 2 * d[13] * d[32] * d[34] * d[63] - 2 * d[13] * d[28] * d[35] * d[63] + 2 * d[14] * d[30] * d[35] * d[63] - 2 * d[10] * d[31] * d[35] * d[63] + 2 * d[12] * d[32] * d[35] * d[63] + 2 * d[16] * d[27] * d[29] * d[64] - 2 * d[15] * d[29] * d[30] * d[64] + 2 * d[17] * d[30] * d[31] * d[64] - 2 * d[16] * std::pow(d[31], 2) * d[64] - 2 * d[17] * d[27] * d[32] * d[64] + 2 * d[15] * d[31] * d[32] * d[64] - 2 * d[12] * d[29] * d[33] * d[64] - 2 * d[11] * d[30] * d[33] * d[64] + 2 * d[14] * d[31] * d[33] * d[64] + 2 * d[13] * d[32] * d[33] * d[64] + 2 * d[11] * d[27] * d[34] * d[64] + 2 * d[9] * d[29] * d[34] * d[64] - 4 * d[13] * d[31] * d[34] * d[64] - 2 * d[14] * d[27] * d[35] * d[64] + 2 * d[13] * d[30] * d[35] * d[64] + 2 * d[12] * d[31] * d[35] * d[64] - 2 * d[9] * d[32] * d[35] * d[64] + 2 * d[17] * d[27] * d[28] * d[65] - 2 * d[17] * std::pow(d[30], 2) * d[65] - 2 * d[15] * d[28] * d[31] * d[65] + 2 * d[16] * d[30] * d[31] * d[65] - 2 * d[16] * d[27] * d[32] * d[65] + 2 * d[15] * d[30] * d[32] * d[65] - 2 * d[13] * d[28] * d[33] * d[65] + 2 * d[14] * d[30] * d[33] * d[65] - 2 * d[10] * d[31] * d[33] * d[65] + 2 * d[12] * d[32] * d[33] * d[65] - 2 * d[14] * d[27] * d[34] * d[65] + 2 * d[13] * d[30] * d[34] * d[65] + 2 * d[12] * d[31] * d[34] * d[65] - 2 * d[9] * d[32] * d[34] * d[65] + 2 * d[10] * d[27] * d[35] * d[65] + 2 * d[9] * d[28] * d[35] * d[65] - 4 * d[12] * d[30] * d[35] * d[65] - d[11] * d[27] * d[28] * d[72] - d[10] * d[27] * d[29] * d[72] - d[9] * d[28] * d[29] * d[72] + 2 * d[12] * d[29] * d[30] * d[72] + d[11] * std::pow(d[30], 2) * d[72] + 2 * d[13] * d[28] * d[31] * d[72] - 2 * d[14] * d[30] * d[31] * d[72] + d[10] * std::pow(d[31], 2) * d[72] + 2 * d[14] * d[27] * d[32] * d[72] - 2 * d[13] * d[30] * d[32] * d[72] - 2 * d[12] * d[31] * d[32] * d[72] + d[9] * std::pow(d[32], 2) * d[72];
    coeffs[176] = 2 * d[24] * d[28] * d[29] * d[63] - 2 * d[25] * d[29] * d[30] * d[63] - 2 * d[26] * d[28] * d[31] * d[63] + 2 * d[26] * d[30] * d[32] * d[63] + 2 * d[25] * d[31] * d[32] * d[63] - 2 * d[24] * std::pow(d[32], 2) * d[63] + 2 * d[20] * d[28] * d[33] * d[63] + 2 * d[19] * d[29] * d[33] * d[63] - 4 * d[23] * d[32] * d[33] * d[63] - 2 * d[21] * d[29] * d[34] * d[63] - 2 * d[20] * d[30] * d[34] * d[63] + 2 * d[23] * d[31] * d[34] * d[63] + 2 * d[22] * d[32] * d[34] * d[63] - 2 * d[22] * d[28] * d[35] * d[63] + 2 * d[23] * d[30] * d[35] * d[63] - 2 * d[19] * d[31] * d[35] * d[63] + 2 * d[21] * d[32] * d[35] * d[63] + 2 * d[25] * d[27] * d[29] * d[64] - 2 * d[24] * d[29] * d[30] * d[64] + 2 * d[26] * d[30] * d[31] * d[64] - 2 * d[25] * std::pow(d[31], 2) * d[64] - 2 * d[26] * d[27] * d[32] * d[64] + 2 * d[24] * d[31] * d[32] * d[64] - 2 * d[21] * d[29] * d[33] * d[64] - 2 * d[20] * d[30] * d[33] * d[64] + 2 * d[23] * d[31] * d[33] * d[64] + 2 * d[22] * d[32] * d[33] * d[64] + 2 * d[20] * d[27] * d[34] * d[64] + 2 * d[18] * d[29] * d[34] * d[64] - 4 * d[22] * d[31] * d[34] * d[64] - 2 * d[23] * d[27] * d[35] * d[64] + 2 * d[22] * d[30] * d[35] * d[64] + 2 * d[21] * d[31] * d[35] * d[64] - 2 * d[18] * d[32] * d[35] * d[64] + 2 * d[26] * d[27] * d[28] * d[65] - 2 * d[26] * std::pow(d[30], 2) * d[65] - 2 * d[24] * d[28] * d[31] * d[65] + 2 * d[25] * d[30] * d[31] * d[65] - 2 * d[25] * d[27] * d[32] * d[65] + 2 * d[24] * d[30] * d[32] * d[65] - 2 * d[22] * d[28] * d[33] * d[65] + 2 * d[23] * d[30] * d[33] * d[65] - 2 * d[19] * d[31] * d[33] * d[65] + 2 * d[21] * d[32] * d[33] * d[65] - 2 * d[23] * d[27] * d[34] * d[65] + 2 * d[22] * d[30] * d[34] * d[65] + 2 * d[21] * d[31] * d[34] * d[65] - 2 * d[18] * d[32] * d[34] * d[65] + 2 * d[19] * d[27] * d[35] * d[65] + 2 * d[18] * d[28] * d[35] * d[65] - 4 * d[21] * d[30] * d[35] * d[65] - d[20] * d[27] * d[28] * d[72] - d[19] * d[27] * d[29] * d[72] - d[18] * d[28] * d[29] * d[72] + 2 * d[21] * d[29] * d[30] * d[72] + d[20] * std::pow(d[30], 2) * d[72] + 2 * d[22] * d[28] * d[31] * d[72] - 2 * d[23] * d[30] * d[31] * d[72] + d[19] * std::pow(d[31], 2) * d[72] + 2 * d[23] * d[27] * d[32] * d[72] - 2 * d[22] * d[30] * d[32] * d[72] - 2 * d[21] * d[31] * d[32] * d[72] + d[18] * std::pow(d[32], 2) * d[72];
    coeffs[177] = 2 * d[28] * d[29] * d[33] * d[63] - 2 * std::pow(d[32], 2) * d[33] * d[63] - 2 * d[29] * d[30] * d[34] * d[63] + 2 * d[31] * d[32] * d[34] * d[63] - 2 * d[28] * d[31] * d[35] * d[63] + 2 * d[30] * d[32] * d[35] * d[63] - 2 * d[29] * d[30] * d[33] * d[64] + 2 * d[31] * d[32] * d[33] * d[64] + 2 * d[27] * d[29] * d[34] * d[64] - 2 * std::pow(d[31], 2) * d[34] * d[64] + 2 * d[30] * d[31] * d[35] * d[64] - 2 * d[27] * d[32] * d[35] * d[64] - 2 * d[28] * d[31] * d[33] * d[65] + 2 * d[30] * d[32] * d[33] * d[65] + 2 * d[30] * d[31] * d[34] * d[65] - 2 * d[27] * d[32] * d[34] * d[65] + 2 * d[27] * d[28] * d[35] * d[65] - 2 * std::pow(d[30], 2) * d[35] * d[65] - d[27] * d[28] * d[29] * d[72] + d[29] * std::pow(d[30], 2) * d[72] + d[28] * std::pow(d[31], 2) * d[72] - 2 * d[30] * d[31] * d[32] * d[72] + d[27] * std::pow(d[32], 2) * d[72];
    coeffs[178] = 2 * d[11] * d[15] * d[37] * d[63] - 2 * d[13] * d[17] * d[37] * d[63] + 2 * d[10] * d[15] * d[38] * d[63] - 2 * d[12] * d[16] * d[38] * d[63] - 2 * d[11] * d[16] * d[39] * d[63] + 2 * d[14] * d[17] * d[39] * d[63] + 2 * d[14] * d[16] * d[40] * d[63] - 2 * d[10] * d[17] * d[40] * d[63] - 4 * d[14] * d[15] * d[41] * d[63] + 2 * d[13] * d[16] * d[41] * d[63] + 2 * d[12] * d[17] * d[41] * d[63] + 2 * d[10] * d[11] * d[42] * d[63] - 2 * std::pow(d[14], 2) * d[42] * d[63] - 2 * d[11] * d[12] * d[43] * d[63] + 2 * d[13] * d[14] * d[43] * d[63] - 2 * d[10] * d[13] * d[44] * d[63] + 2 * d[12] * d[14] * d[44] * d[63] + 2 * d[11] * d[16] * d[36] * d[64] - 2 * d[14] * d[17] * d[36] * d[64] - 2 * d[12] * d[15] * d[38] * d[64] + 2 * d[9] * d[16] * d[38] * d[64] - 2 * d[11] * d[15] * d[39] * d[64] + 2 * d[13] * d[17] * d[39] * d[64] + 2 * d[14] * d[15] * d[40] * d[64] - 4 * d[13] * d[16] * d[40] * d[64] + 2 * d[12] * d[17] * d[40] * d[64] + 2 * d[13] * d[15] * d[41] * d[64] - 2 * d[9] * d[17] * d[41] * d[64] - 2 * d[11] * d[12] * d[42] * d[64] + 2 * d[13] * d[14] * d[42] * d[64] + 2 * d[9] * d[11] * d[43] * d[64] - 2 * std::pow(d[13], 2) * d[43] * d[64] + 2 * d[12] * d[13] * d[44] * d[64] - 2 * d[9] * d[14] * d[44] * d[64] - 2 * d[14] * d[16] * d[36] * d[65] + 2 * d[10] * d[17] * d[36] * d[65] - 2 * d[13] * d[15] * d[37] * d[65] + 2 * d[9] * d[17] * d[37] * d[65] + 2 * d[14] * d[15] * d[39] * d[65] + 2 * d[13] * d[16] * d[39] * d[65] - 4 * d[12] * d[17] * d[39] * d[65] - 2 * d[10] * d[15] * d[40] * d[65] + 2 * d[12] * d[16] * d[40] * d[65] + 2 * d[12] * d[15] * d[41] * d[65] - 2 * d[9] * d[16] * d[41] * d[65] - 2 * d[10] * d[13] * d[42] * d[65] + 2 * d[12] * d[14] * d[42] * d[65] + 2 * d[12] * d[13] * d[43] * d[65] - 2 * d[9] * d[14] * d[43] * d[65] + 2 * d[9] * d[10] * d[44] * d[65] - 2 * std::pow(d[12], 2) * d[44] * d[65] - d[10] * d[11] * d[36] * d[72] + std::pow(d[14], 2) * d[36] * d[72] - d[9] * d[11] * d[37] * d[72] + std::pow(d[13], 2) * d[37] * d[72] - d[9] * d[10] * d[38] * d[72] + std::pow(d[12], 2) * d[38] * d[72] + 2 * d[11] * d[12] * d[39] * d[72] - 2 * d[13] * d[14] * d[39] * d[72] + 2 * d[10] * d[13] * d[40] * d[72] - 2 * d[12] * d[14] * d[40] * d[72] - 2 * d[12] * d[13] * d[41] * d[72] + 2 * d[9] * d[14] * d[41] * d[72];
    coeffs[179] = 2 * d[15] * d[20] * d[37] * d[63] - 2 * d[17] * d[22] * d[37] * d[63] + 2 * d[11] * d[24] * d[37] * d[63] - 2 * d[13] * d[26] * d[37] * d[63] + 2 * d[15] * d[19] * d[38] * d[63] - 2 * d[16] * d[21] * d[38] * d[63] + 2 * d[10] * d[24] * d[38] * d[63] - 2 * d[12] * d[25] * d[38] * d[63] - 2 * d[16] * d[20] * d[39] * d[63] + 2 * d[17] * d[23] * d[39] * d[63] - 2 * d[11] * d[25] * d[39] * d[63] + 2 * d[14] * d[26] * d[39] * d[63] - 2 * d[17] * d[19] * d[40] * d[63] + 2 * d[16] * d[23] * d[40] * d[63] + 2 * d[14] * d[25] * d[40] * d[63] - 2 * d[10] * d[26] * d[40] * d[63] + 2 * d[17] * d[21] * d[41] * d[63] + 2 * d[16] * d[22] * d[41] * d[63] - 4 * d[15] * d[23] * d[41] * d[63] - 4 * d[14] * d[24] * d[41] * d[63] + 2 * d[13] * d[25] * d[41] * d[63] + 2 * d[12] * d[26] * d[41] * d[63] + 2 * d[11] * d[19] * d[42] * d[63] + 2 * d[10] * d[20] * d[42] * d[63] - 4 * d[14] * d[23] * d[42] * d[63] - 2 * d[12] * d[20] * d[43] * d[63] - 2 * d[11] * d[21] * d[43] * d[63] + 2 * d[14] * d[22] * d[43] * d[63] + 2 * d[13] * d[23] * d[43] * d[63] - 2 * d[13] * d[19] * d[44] * d[63] + 2 * d[14] * d[21] * d[44] * d[63] - 2 * d[10] * d[22] * d[44] * d[63] + 2 * d[12] * d[23] * d[44] * d[63] + 2 * d[16] * d[20] * d[36] * d[64] - 2 * d[17] * d[23] * d[36] * d[64] + 2 * d[11] * d[25] * d[36] * d[64] - 2 * d[14] * d[26] * d[36] * d[64] + 2 * d[16] * d[18] * d[38] * d[64] - 2 * d[15] * d[21] * d[38] * d[64] - 2 * d[12] * d[24] * d[38] * d[64] + 2 * d[9] * d[25] * d[38] * d[64] - 2 * d[15] * d[20] * d[39] * d[64] + 2 * d[17] * d[22] * d[39] * d[64] - 2 * d[11] * d[24] * d[39] * d[64] + 2 * d[13] * d[26] * d[39] * d[64] + 2 * d[17] * d[21] * d[40] * d[64] - 4 * d[16] * d[22] * d[40] * d[64] + 2 * d[15] * d[23] * d[40] * d[64] + 2 * d[14] * d[24] * d[40] * d[64] - 4 * d[13] * d[25] * d[40] * d[64] + 2 * d[12] * d[26] * d[40] * d[64] - 2 * d[17] * d[18] * d[41] * d[64] + 2 * d[15] * d[22] * d[41] * d[64] + 2 * d[13] * d[24] * d[41] * d[64] - 2 * d[9] * d[26] * d[41] * d[64] - 2 * d[12] * d[20] * d[42] * d[64] - 2 * d[11] * d[21] * d[42] * d[64] + 2 * d[14] * d[22] * d[42] * d[64] + 2 * d[13] * d[23] * d[42] * d[64] + 2 * d[11] * d[18] * d[43] * d[64] + 2 * d[9] * d[20] * d[43] * d[64] - 4 * d[13] * d[22] * d[43] * d[64] - 2 * d[14] * d[18] * d[44] * d[64] + 2 * d[13] * d[21] * d[44] * d[64] + 2 * d[12] * d[22] * d[44] * d[64] - 2 * d[9] * d[23] * d[44] * d[64] + 2 * d[17] * d[19] * d[36] * d[65] - 2 * d[16] * d[23] * d[36] * d[65] - 2 * d[14] * d[25] * d[36] * d[65] + 2 * d[10] * d[26] * d[36] * d[65] + 2 * d[17] * d[18] * d[37] * d[65] - 2 * d[15] * d[22] * d[37] * d[65] - 2 * d[13] * d[24] * d[37] * d[65] + 2 * d[9] * d[26] * d[37] * d[65] - 4 * d[17] * d[21] * d[39] * d[65] + 2 * d[16] * d[22] * d[39] * d[65] + 2 * d[15] * d[23] * d[39] * d[65] + 2 * d[14] * d[24] * d[39] * d[65] + 2 * d[13] * d[25] * d[39] * d[65] - 4 * d[12] * d[26] * d[39] * d[65] - 2 * d[15] * d[19] * d[40] * d[65] + 2 * d[16] * d[21] * d[40] * d[65] - 2 * d[10] * d[24] * d[40] * d[65] + 2 * d[12] * d[25] * d[40] * d[65] - 2 * d[16] * d[18] * d[41] * d[65] + 2 * d[15] * d[21] * d[41] * d[65] + 2 * d[12] * d[24] * d[41] * d[65] - 2 * d[9] * d[25] * d[41] * d[65] - 2 * d[13] * d[19] * d[42] * d[65] + 2 * d[14] * d[21] * d[42] * d[65] - 2 * d[10] * d[22] * d[42] * d[65] + 2 * d[12] * d[23] * d[42] * d[65] - 2 * d[14] * d[18] * d[43] * d[65] + 2 * d[13] * d[21] * d[43] * d[65] + 2 * d[12] * d[22] * d[43] * d[65] - 2 * d[9] * d[23] * d[43] * d[65] + 2 * d[10] * d[18] * d[44] * d[65] + 2 * d[9] * d[19] * d[44] * d[65] - 4 * d[12] * d[21] * d[44] * d[65] - d[11] * d[19] * d[36] * d[72] - d[10] * d[20] * d[36] * d[72] + 2 * d[14] * d[23] * d[36] * d[72] - d[11] * d[18] * d[37] * d[72] - d[9] * d[20] * d[37] * d[72] + 2 * d[13] * d[22] * d[37] * d[72] - d[10] * d[18] * d[38] * d[72] - d[9] * d[19] * d[38] * d[72] + 2 * d[12] * d[21] * d[38] * d[72] + 2 * d[12] * d[20] * d[39] * d[72] + 2 * d[11] * d[21] * d[39] * d[72] - 2 * d[14] * d[22] * d[39] * d[72] - 2 * d[13] * d[23] * d[39] * d[72] + 2 * d[13] * d[19] * d[40] * d[72] - 2 * d[14] * d[21] * d[40] * d[72] + 2 * d[10] * d[22] * d[40] * d[72] - 2 * d[12] * d[23] * d[40] * d[72] + 2 * d[14] * d[18] * d[41] * d[72] - 2 * d[13] * d[21] * d[41] * d[72] - 2 * d[12] * d[22] * d[41] * d[72] + 2 * d[9] * d[23] * d[41] * d[72];
    coeffs[180] = 2 * d[20] * d[24] * d[37] * d[63] - 2 * d[22] * d[26] * d[37] * d[63] + 2 * d[19] * d[24] * d[38] * d[63] - 2 * d[21] * d[25] * d[38] * d[63] - 2 * d[20] * d[25] * d[39] * d[63] + 2 * d[23] * d[26] * d[39] * d[63] + 2 * d[23] * d[25] * d[40] * d[63] - 2 * d[19] * d[26] * d[40] * d[63] - 4 * d[23] * d[24] * d[41] * d[63] + 2 * d[22] * d[25] * d[41] * d[63] + 2 * d[21] * d[26] * d[41] * d[63] + 2 * d[19] * d[20] * d[42] * d[63] - 2 * std::pow(d[23], 2) * d[42] * d[63] - 2 * d[20] * d[21] * d[43] * d[63] + 2 * d[22] * d[23] * d[43] * d[63] - 2 * d[19] * d[22] * d[44] * d[63] + 2 * d[21] * d[23] * d[44] * d[63] + 2 * d[20] * d[25] * d[36] * d[64] - 2 * d[23] * d[26] * d[36] * d[64] - 2 * d[21] * d[24] * d[38] * d[64] + 2 * d[18] * d[25] * d[38] * d[64] - 2 * d[20] * d[24] * d[39] * d[64] + 2 * d[22] * d[26] * d[39] * d[64] + 2 * d[23] * d[24] * d[40] * d[64] - 4 * d[22] * d[25] * d[40] * d[64] + 2 * d[21] * d[26] * d[40] * d[64] + 2 * d[22] * d[24] * d[41] * d[64] - 2 * d[18] * d[26] * d[41] * d[64] - 2 * d[20] * d[21] * d[42] * d[64] + 2 * d[22] * d[23] * d[42] * d[64] + 2 * d[18] * d[20] * d[43] * d[64] - 2 * std::pow(d[22], 2) * d[43] * d[64] + 2 * d[21] * d[22] * d[44] * d[64] - 2 * d[18] * d[23] * d[44] * d[64] - 2 * d[23] * d[25] * d[36] * d[65] + 2 * d[19] * d[26] * d[36] * d[65] - 2 * d[22] * d[24] * d[37] * d[65] + 2 * d[18] * d[26] * d[37] * d[65] + 2 * d[23] * d[24] * d[39] * d[65] + 2 * d[22] * d[25] * d[39] * d[65] - 4 * d[21] * d[26] * d[39] * d[65] - 2 * d[19] * d[24] * d[40] * d[65] + 2 * d[21] * d[25] * d[40] * d[65] + 2 * d[21] * d[24] * d[41] * d[65] - 2 * d[18] * d[25] * d[41] * d[65] - 2 * d[19] * d[22] * d[42] * d[65] + 2 * d[21] * d[23] * d[42] * d[65] + 2 * d[21] * d[22] * d[43] * d[65] - 2 * d[18] * d[23] * d[43] * d[65] + 2 * d[18] * d[19] * d[44] * d[65] - 2 * std::pow(d[21], 2) * d[44] * d[65] - d[19] * d[20] * d[36] * d[72] + std::pow(d[23], 2) * d[36] * d[72] - d[18] * d[20] * d[37] * d[72] + std::pow(d[22], 2) * d[37] * d[72] - d[18] * d[19] * d[38] * d[72] + std::pow(d[21], 2) * d[38] * d[72] + 2 * d[20] * d[21] * d[39] * d[72] - 2 * d[22] * d[23] * d[39] * d[72] + 2 * d[19] * d[22] * d[40] * d[72] - 2 * d[21] * d[23] * d[40] * d[72] - 2 * d[21] * d[22] * d[41] * d[72] + 2 * d[18] * d[23] * d[41] * d[72];
    coeffs[181] = 2 * d[15] * d[29] * d[37] * d[63] - 2 * d[17] * d[31] * d[37] * d[63] + 2 * d[11] * d[33] * d[37] * d[63] - 2 * d[13] * d[35] * d[37] * d[63] + 2 * d[15] * d[28] * d[38] * d[63] - 2 * d[16] * d[30] * d[38] * d[63] + 2 * d[10] * d[33] * d[38] * d[63] - 2 * d[12] * d[34] * d[38] * d[63] - 2 * d[16] * d[29] * d[39] * d[63] + 2 * d[17] * d[32] * d[39] * d[63] - 2 * d[11] * d[34] * d[39] * d[63] + 2 * d[14] * d[35] * d[39] * d[63] - 2 * d[17] * d[28] * d[40] * d[63] + 2 * d[16] * d[32] * d[40] * d[63] + 2 * d[14] * d[34] * d[40] * d[63] - 2 * d[10] * d[35] * d[40] * d[63] + 2 * d[17] * d[30] * d[41] * d[63] + 2 * d[16] * d[31] * d[41] * d[63] - 4 * d[15] * d[32] * d[41] * d[63] - 4 * d[14] * d[33] * d[41] * d[63] + 2 * d[13] * d[34] * d[41] * d[63] + 2 * d[12] * d[35] * d[41] * d[63] + 2 * d[11] * d[28] * d[42] * d[63] + 2 * d[10] * d[29] * d[42] * d[63] - 4 * d[14] * d[32] * d[42] * d[63] - 2 * d[12] * d[29] * d[43] * d[63] - 2 * d[11] * d[30] * d[43] * d[63] + 2 * d[14] * d[31] * d[43] * d[63] + 2 * d[13] * d[32] * d[43] * d[63] - 2 * d[13] * d[28] * d[44] * d[63] + 2 * d[14] * d[30] * d[44] * d[63] - 2 * d[10] * d[31] * d[44] * d[63] + 2 * d[12] * d[32] * d[44] * d[63] + 2 * d[16] * d[29] * d[36] * d[64] - 2 * d[17] * d[32] * d[36] * d[64] + 2 * d[11] * d[34] * d[36] * d[64] - 2 * d[14] * d[35] * d[36] * d[64] + 2 * d[16] * d[27] * d[38] * d[64] - 2 * d[15] * d[30] * d[38] * d[64] - 2 * d[12] * d[33] * d[38] * d[64] + 2 * d[9] * d[34] * d[38] * d[64] - 2 * d[15] * d[29] * d[39] * d[64] + 2 * d[17] * d[31] * d[39] * d[64] - 2 * d[11] * d[33] * d[39] * d[64] + 2 * d[13] * d[35] * d[39] * d[64] + 2 * d[17] * d[30] * d[40] * d[64] - 4 * d[16] * d[31] * d[40] * d[64] + 2 * d[15] * d[32] * d[40] * d[64] + 2 * d[14] * d[33] * d[40] * d[64] - 4 * d[13] * d[34] * d[40] * d[64] + 2 * d[12] * d[35] * d[40] * d[64] - 2 * d[17] * d[27] * d[41] * d[64] + 2 * d[15] * d[31] * d[41] * d[64] + 2 * d[13] * d[33] * d[41] * d[64] - 2 * d[9] * d[35] * d[41] * d[64] - 2 * d[12] * d[29] * d[42] * d[64] - 2 * d[11] * d[30] * d[42] * d[64] + 2 * d[14] * d[31] * d[42] * d[64] + 2 * d[13] * d[32] * d[42] * d[64] + 2 * d[11] * d[27] * d[43] * d[64] + 2 * d[9] * d[29] * d[43] * d[64] - 4 * d[13] * d[31] * d[43] * d[64] - 2 * d[14] * d[27] * d[44] * d[64] + 2 * d[13] * d[30] * d[44] * d[64] + 2 * d[12] * d[31] * d[44] * d[64] - 2 * d[9] * d[32] * d[44] * d[64] + 2 * d[17] * d[28] * d[36] * d[65] - 2 * d[16] * d[32] * d[36] * d[65] - 2 * d[14] * d[34] * d[36] * d[65] + 2 * d[10] * d[35] * d[36] * d[65] + 2 * d[17] * d[27] * d[37] * d[65] - 2 * d[15] * d[31] * d[37] * d[65] - 2 * d[13] * d[33] * d[37] * d[65] + 2 * d[9] * d[35] * d[37] * d[65] - 4 * d[17] * d[30] * d[39] * d[65] + 2 * d[16] * d[31] * d[39] * d[65] + 2 * d[15] * d[32] * d[39] * d[65] + 2 * d[14] * d[33] * d[39] * d[65] + 2 * d[13] * d[34] * d[39] * d[65] - 4 * d[12] * d[35] * d[39] * d[65] - 2 * d[15] * d[28] * d[40] * d[65] + 2 * d[16] * d[30] * d[40] * d[65] - 2 * d[10] * d[33] * d[40] * d[65] + 2 * d[12] * d[34] * d[40] * d[65] - 2 * d[16] * d[27] * d[41] * d[65] + 2 * d[15] * d[30] * d[41] * d[65] + 2 * d[12] * d[33] * d[41] * d[65] - 2 * d[9] * d[34] * d[41] * d[65] - 2 * d[13] * d[28] * d[42] * d[65] + 2 * d[14] * d[30] * d[42] * d[65] - 2 * d[10] * d[31] * d[42] * d[65] + 2 * d[12] * d[32] * d[42] * d[65] - 2 * d[14] * d[27] * d[43] * d[65] + 2 * d[13] * d[30] * d[43] * d[65] + 2 * d[12] * d[31] * d[43] * d[65] - 2 * d[9] * d[32] * d[43] * d[65] + 2 * d[10] * d[27] * d[44] * d[65] + 2 * d[9] * d[28] * d[44] * d[65] - 4 * d[12] * d[30] * d[44] * d[65] - d[11] * d[28] * d[36] * d[72] - d[10] * d[29] * d[36] * d[72] + 2 * d[14] * d[32] * d[36] * d[72] - d[11] * d[27] * d[37] * d[72] - d[9] * d[29] * d[37] * d[72] + 2 * d[13] * d[31] * d[37] * d[72] - d[10] * d[27] * d[38] * d[72] - d[9] * d[28] * d[38] * d[72] + 2 * d[12] * d[30] * d[38] * d[72] + 2 * d[12] * d[29] * d[39] * d[72] + 2 * d[11] * d[30] * d[39] * d[72] - 2 * d[14] * d[31] * d[39] * d[72] - 2 * d[13] * d[32] * d[39] * d[72] + 2 * d[13] * d[28] * d[40] * d[72] - 2 * d[14] * d[30] * d[40] * d[72] + 2 * d[10] * d[31] * d[40] * d[72] - 2 * d[12] * d[32] * d[40] * d[72] + 2 * d[14] * d[27] * d[41] * d[72] - 2 * d[13] * d[30] * d[41] * d[72] - 2 * d[12] * d[31] * d[41] * d[72] + 2 * d[9] * d[32] * d[41] * d[72];
    coeffs[182] = 2 * d[24] * d[29] * d[37] * d[63] - 2 * d[26] * d[31] * d[37] * d[63] + 2 * d[20] * d[33] * d[37] * d[63] - 2 * d[22] * d[35] * d[37] * d[63] + 2 * d[24] * d[28] * d[38] * d[63] - 2 * d[25] * d[30] * d[38] * d[63] + 2 * d[19] * d[33] * d[38] * d[63] - 2 * d[21] * d[34] * d[38] * d[63] - 2 * d[25] * d[29] * d[39] * d[63] + 2 * d[26] * d[32] * d[39] * d[63] - 2 * d[20] * d[34] * d[39] * d[63] + 2 * d[23] * d[35] * d[39] * d[63] - 2 * d[26] * d[28] * d[40] * d[63] + 2 * d[25] * d[32] * d[40] * d[63] + 2 * d[23] * d[34] * d[40] * d[63] - 2 * d[19] * d[35] * d[40] * d[63] + 2 * d[26] * d[30] * d[41] * d[63] + 2 * d[25] * d[31] * d[41] * d[63] - 4 * d[24] * d[32] * d[41] * d[63] - 4 * d[23] * d[33] * d[41] * d[63] + 2 * d[22] * d[34] * d[41] * d[63] + 2 * d[21] * d[35] * d[41] * d[63] + 2 * d[20] * d[28] * d[42] * d[63] + 2 * d[19] * d[29] * d[42] * d[63] - 4 * d[23] * d[32] * d[42] * d[63] - 2 * d[21] * d[29] * d[43] * d[63] - 2 * d[20] * d[30] * d[43] * d[63] + 2 * d[23] * d[31] * d[43] * d[63] + 2 * d[22] * d[32] * d[43] * d[63] - 2 * d[22] * d[28] * d[44] * d[63] + 2 * d[23] * d[30] * d[44] * d[63] - 2 * d[19] * d[31] * d[44] * d[63] + 2 * d[21] * d[32] * d[44] * d[63] + 2 * d[25] * d[29] * d[36] * d[64] - 2 * d[26] * d[32] * d[36] * d[64] + 2 * d[20] * d[34] * d[36] * d[64] - 2 * d[23] * d[35] * d[36] * d[64] + 2 * d[25] * d[27] * d[38] * d[64] - 2 * d[24] * d[30] * d[38] * d[64] - 2 * d[21] * d[33] * d[38] * d[64] + 2 * d[18] * d[34] * d[38] * d[64] - 2 * d[24] * d[29] * d[39] * d[64] + 2 * d[26] * d[31] * d[39] * d[64] - 2 * d[20] * d[33] * d[39] * d[64] + 2 * d[22] * d[35] * d[39] * d[64] + 2 * d[26] * d[30] * d[40] * d[64] - 4 * d[25] * d[31] * d[40] * d[64] + 2 * d[24] * d[32] * d[40] * d[64] + 2 * d[23] * d[33] * d[40] * d[64] - 4 * d[22] * d[34] * d[40] * d[64] + 2 * d[21] * d[35] * d[40] * d[64] - 2 * d[26] * d[27] * d[41] * d[64] + 2 * d[24] * d[31] * d[41] * d[64] + 2 * d[22] * d[33] * d[41] * d[64] - 2 * d[18] * d[35] * d[41] * d[64] - 2 * d[21] * d[29] * d[42] * d[64] - 2 * d[20] * d[30] * d[42] * d[64] + 2 * d[23] * d[31] * d[42] * d[64] + 2 * d[22] * d[32] * d[42] * d[64] + 2 * d[20] * d[27] * d[43] * d[64] + 2 * d[18] * d[29] * d[43] * d[64] - 4 * d[22] * d[31] * d[43] * d[64] - 2 * d[23] * d[27] * d[44] * d[64] + 2 * d[22] * d[30] * d[44] * d[64] + 2 * d[21] * d[31] * d[44] * d[64] - 2 * d[18] * d[32] * d[44] * d[64] + 2 * d[26] * d[28] * d[36] * d[65] - 2 * d[25] * d[32] * d[36] * d[65] - 2 * d[23] * d[34] * d[36] * d[65] + 2 * d[19] * d[35] * d[36] * d[65] + 2 * d[26] * d[27] * d[37] * d[65] - 2 * d[24] * d[31] * d[37] * d[65] - 2 * d[22] * d[33] * d[37] * d[65] + 2 * d[18] * d[35] * d[37] * d[65] - 4 * d[26] * d[30] * d[39] * d[65] + 2 * d[25] * d[31] * d[39] * d[65] + 2 * d[24] * d[32] * d[39] * d[65] + 2 * d[23] * d[33] * d[39] * d[65] + 2 * d[22] * d[34] * d[39] * d[65] - 4 * d[21] * d[35] * d[39] * d[65] - 2 * d[24] * d[28] * d[40] * d[65] + 2 * d[25] * d[30] * d[40] * d[65] - 2 * d[19] * d[33] * d[40] * d[65] + 2 * d[21] * d[34] * d[40] * d[65] - 2 * d[25] * d[27] * d[41] * d[65] + 2 * d[24] * d[30] * d[41] * d[65] + 2 * d[21] * d[33] * d[41] * d[65] - 2 * d[18] * d[34] * d[41] * d[65] - 2 * d[22] * d[28] * d[42] * d[65] + 2 * d[23] * d[30] * d[42] * d[65] - 2 * d[19] * d[31] * d[42] * d[65] + 2 * d[21] * d[32] * d[42] * d[65] - 2 * d[23] * d[27] * d[43] * d[65] + 2 * d[22] * d[30] * d[43] * d[65] + 2 * d[21] * d[31] * d[43] * d[65] - 2 * d[18] * d[32] * d[43] * d[65] + 2 * d[19] * d[27] * d[44] * d[65] + 2 * d[18] * d[28] * d[44] * d[65] - 4 * d[21] * d[30] * d[44] * d[65] - d[20] * d[28] * d[36] * d[72] - d[19] * d[29] * d[36] * d[72] + 2 * d[23] * d[32] * d[36] * d[72] - d[20] * d[27] * d[37] * d[72] - d[18] * d[29] * d[37] * d[72] + 2 * d[22] * d[31] * d[37] * d[72] - d[19] * d[27] * d[38] * d[72] - d[18] * d[28] * d[38] * d[72] + 2 * d[21] * d[30] * d[38] * d[72] + 2 * d[21] * d[29] * d[39] * d[72] + 2 * d[20] * d[30] * d[39] * d[72] - 2 * d[23] * d[31] * d[39] * d[72] - 2 * d[22] * d[32] * d[39] * d[72] + 2 * d[22] * d[28] * d[40] * d[72] - 2 * d[23] * d[30] * d[40] * d[72] + 2 * d[19] * d[31] * d[40] * d[72] - 2 * d[21] * d[32] * d[40] * d[72] + 2 * d[23] * d[27] * d[41] * d[72] - 2 * d[22] * d[30] * d[41] * d[72] - 2 * d[21] * d[31] * d[41] * d[72] + 2 * d[18] * d[32] * d[41] * d[72];
    coeffs[183] = 2 * d[29] * d[33] * d[37] * d[63] - 2 * d[31] * d[35] * d[37] * d[63] + 2 * d[28] * d[33] * d[38] * d[63] - 2 * d[30] * d[34] * d[38] * d[63] - 2 * d[29] * d[34] * d[39] * d[63] + 2 * d[32] * d[35] * d[39] * d[63] + 2 * d[32] * d[34] * d[40] * d[63] - 2 * d[28] * d[35] * d[40] * d[63] - 4 * d[32] * d[33] * d[41] * d[63] + 2 * d[31] * d[34] * d[41] * d[63] + 2 * d[30] * d[35] * d[41] * d[63] + 2 * d[28] * d[29] * d[42] * d[63] - 2 * std::pow(d[32], 2) * d[42] * d[63] - 2 * d[29] * d[30] * d[43] * d[63] + 2 * d[31] * d[32] * d[43] * d[63] - 2 * d[28] * d[31] * d[44] * d[63] + 2 * d[30] * d[32] * d[44] * d[63] + 2 * d[29] * d[34] * d[36] * d[64] - 2 * d[32] * d[35] * d[36] * d[64] - 2 * d[30] * d[33] * d[38] * d[64] + 2 * d[27] * d[34] * d[38] * d[64] - 2 * d[29] * d[33] * d[39] * d[64] + 2 * d[31] * d[35] * d[39] * d[64] + 2 * d[32] * d[33] * d[40] * d[64] - 4 * d[31] * d[34] * d[40] * d[64] + 2 * d[30] * d[35] * d[40] * d[64] + 2 * d[31] * d[33] * d[41] * d[64] - 2 * d[27] * d[35] * d[41] * d[64] - 2 * d[29] * d[30] * d[42] * d[64] + 2 * d[31] * d[32] * d[42] * d[64] + 2 * d[27] * d[29] * d[43] * d[64] - 2 * std::pow(d[31], 2) * d[43] * d[64] + 2 * d[30] * d[31] * d[44] * d[64] - 2 * d[27] * d[32] * d[44] * d[64] - 2 * d[32] * d[34] * d[36] * d[65] + 2 * d[28] * d[35] * d[36] * d[65] - 2 * d[31] * d[33] * d[37] * d[65] + 2 * d[27] * d[35] * d[37] * d[65] + 2 * d[32] * d[33] * d[39] * d[65] + 2 * d[31] * d[34] * d[39] * d[65] - 4 * d[30] * d[35] * d[39] * d[65] - 2 * d[28] * d[33] * d[40] * d[65] + 2 * d[30] * d[34] * d[40] * d[65] + 2 * d[30] * d[33] * d[41] * d[65] - 2 * d[27] * d[34] * d[41] * d[65] - 2 * d[28] * d[31] * d[42] * d[65] + 2 * d[30] * d[32] * d[42] * d[65] + 2 * d[30] * d[31] * d[43] * d[65] - 2 * d[27] * d[32] * d[43] * d[65] + 2 * d[27] * d[28] * d[44] * d[65] - 2 * std::pow(d[30], 2) * d[44] * d[65] - d[28] * d[29] * d[36] * d[72] + std::pow(d[32], 2) * d[36] * d[72] - d[27] * d[29] * d[37] * d[72] + std::pow(d[31], 2) * d[37] * d[72] - d[27] * d[28] * d[38] * d[72] + std::pow(d[30], 2) * d[38] * d[72] + 2 * d[29] * d[30] * d[39] * d[72] - 2 * d[31] * d[32] * d[39] * d[72] + 2 * d[28] * d[31] * d[40] * d[72] - 2 * d[30] * d[32] * d[40] * d[72] - 2 * d[30] * d[31] * d[41] * d[72] + 2 * d[27] * d[32] * d[41] * d[72];
    coeffs[184] = 2 * d[15] * d[37] * d[38] * d[63] - 2 * d[16] * d[38] * d[39] * d[63] - 2 * d[17] * d[37] * d[40] * d[63] + 2 * d[17] * d[39] * d[41] * d[63] + 2 * d[16] * d[40] * d[41] * d[63] - 2 * d[15] * std::pow(d[41], 2) * d[63] + 2 * d[11] * d[37] * d[42] * d[63] + 2 * d[10] * d[38] * d[42] * d[63] - 4 * d[14] * d[41] * d[42] * d[63] - 2 * d[12] * d[38] * d[43] * d[63] - 2 * d[11] * d[39] * d[43] * d[63] + 2 * d[14] * d[40] * d[43] * d[63] + 2 * d[13] * d[41] * d[43] * d[63] - 2 * d[13] * d[37] * d[44] * d[63] + 2 * d[14] * d[39] * d[44] * d[63] - 2 * d[10] * d[40] * d[44] * d[63] + 2 * d[12] * d[41] * d[44] * d[63] + 2 * d[16] * d[36] * d[38] * d[64] - 2 * d[15] * d[38] * d[39] * d[64] + 2 * d[17] * d[39] * d[40] * d[64] - 2 * d[16] * std::pow(d[40], 2) * d[64] - 2 * d[17] * d[36] * d[41] * d[64] + 2 * d[15] * d[40] * d[41] * d[64] - 2 * d[12] * d[38] * d[42] * d[64] - 2 * d[11] * d[39] * d[42] * d[64] + 2 * d[14] * d[40] * d[42] * d[64] + 2 * d[13] * d[41] * d[42] * d[64] + 2 * d[11] * d[36] * d[43] * d[64] + 2 * d[9] * d[38] * d[43] * d[64] - 4 * d[13] * d[40] * d[43] * d[64] - 2 * d[14] * d[36] * d[44] * d[64] + 2 * d[13] * d[39] * d[44] * d[64] + 2 * d[12] * d[40] * d[44] * d[64] - 2 * d[9] * d[41] * d[44] * d[64] + 2 * d[17] * d[36] * d[37] * d[65] - 2 * d[17] * std::pow(d[39], 2) * d[65] - 2 * d[15] * d[37] * d[40] * d[65] + 2 * d[16] * d[39] * d[40] * d[65] - 2 * d[16] * d[36] * d[41] * d[65] + 2 * d[15] * d[39] * d[41] * d[65] - 2 * d[13] * d[37] * d[42] * d[65] + 2 * d[14] * d[39] * d[42] * d[65] - 2 * d[10] * d[40] * d[42] * d[65] + 2 * d[12] * d[41] * d[42] * d[65] - 2 * d[14] * d[36] * d[43] * d[65] + 2 * d[13] * d[39] * d[43] * d[65] + 2 * d[12] * d[40] * d[43] * d[65] - 2 * d[9] * d[41] * d[43] * d[65] + 2 * d[10] * d[36] * d[44] * d[65] + 2 * d[9] * d[37] * d[44] * d[65] - 4 * d[12] * d[39] * d[44] * d[65] - d[11] * d[36] * d[37] * d[72] - d[10] * d[36] * d[38] * d[72] - d[9] * d[37] * d[38] * d[72] + 2 * d[12] * d[38] * d[39] * d[72] + d[11] * std::pow(d[39], 2) * d[72] + 2 * d[13] * d[37] * d[40] * d[72] - 2 * d[14] * d[39] * d[40] * d[72] + d[10] * std::pow(d[40], 2) * d[72] + 2 * d[14] * d[36] * d[41] * d[72] - 2 * d[13] * d[39] * d[41] * d[72] - 2 * d[12] * d[40] * d[41] * d[72] + d[9] * std::pow(d[41], 2) * d[72];
    coeffs[185] = 2 * d[24] * d[37] * d[38] * d[63] - 2 * d[25] * d[38] * d[39] * d[63] - 2 * d[26] * d[37] * d[40] * d[63] + 2 * d[26] * d[39] * d[41] * d[63] + 2 * d[25] * d[40] * d[41] * d[63] - 2 * d[24] * std::pow(d[41], 2) * d[63] + 2 * d[20] * d[37] * d[42] * d[63] + 2 * d[19] * d[38] * d[42] * d[63] - 4 * d[23] * d[41] * d[42] * d[63] - 2 * d[21] * d[38] * d[43] * d[63] - 2 * d[20] * d[39] * d[43] * d[63] + 2 * d[23] * d[40] * d[43] * d[63] + 2 * d[22] * d[41] * d[43] * d[63] - 2 * d[22] * d[37] * d[44] * d[63] + 2 * d[23] * d[39] * d[44] * d[63] - 2 * d[19] * d[40] * d[44] * d[63] + 2 * d[21] * d[41] * d[44] * d[63] + 2 * d[25] * d[36] * d[38] * d[64] - 2 * d[24] * d[38] * d[39] * d[64] + 2 * d[26] * d[39] * d[40] * d[64] - 2 * d[25] * std::pow(d[40], 2) * d[64] - 2 * d[26] * d[36] * d[41] * d[64] + 2 * d[24] * d[40] * d[41] * d[64] - 2 * d[21] * d[38] * d[42] * d[64] - 2 * d[20] * d[39] * d[42] * d[64] + 2 * d[23] * d[40] * d[42] * d[64] + 2 * d[22] * d[41] * d[42] * d[64] + 2 * d[20] * d[36] * d[43] * d[64] + 2 * d[18] * d[38] * d[43] * d[64] - 4 * d[22] * d[40] * d[43] * d[64] - 2 * d[23] * d[36] * d[44] * d[64] + 2 * d[22] * d[39] * d[44] * d[64] + 2 * d[21] * d[40] * d[44] * d[64] - 2 * d[18] * d[41] * d[44] * d[64] + 2 * d[26] * d[36] * d[37] * d[65] - 2 * d[26] * std::pow(d[39], 2) * d[65] - 2 * d[24] * d[37] * d[40] * d[65] + 2 * d[25] * d[39] * d[40] * d[65] - 2 * d[25] * d[36] * d[41] * d[65] + 2 * d[24] * d[39] * d[41] * d[65] - 2 * d[22] * d[37] * d[42] * d[65] + 2 * d[23] * d[39] * d[42] * d[65] - 2 * d[19] * d[40] * d[42] * d[65] + 2 * d[21] * d[41] * d[42] * d[65] - 2 * d[23] * d[36] * d[43] * d[65] + 2 * d[22] * d[39] * d[43] * d[65] + 2 * d[21] * d[40] * d[43] * d[65] - 2 * d[18] * d[41] * d[43] * d[65] + 2 * d[19] * d[36] * d[44] * d[65] + 2 * d[18] * d[37] * d[44] * d[65] - 4 * d[21] * d[39] * d[44] * d[65] - d[20] * d[36] * d[37] * d[72] - d[19] * d[36] * d[38] * d[72] - d[18] * d[37] * d[38] * d[72] + 2 * d[21] * d[38] * d[39] * d[72] + d[20] * std::pow(d[39], 2) * d[72] + 2 * d[22] * d[37] * d[40] * d[72] - 2 * d[23] * d[39] * d[40] * d[72] + d[19] * std::pow(d[40], 2) * d[72] + 2 * d[23] * d[36] * d[41] * d[72] - 2 * d[22] * d[39] * d[41] * d[72] - 2 * d[21] * d[40] * d[41] * d[72] + d[18] * std::pow(d[41], 2) * d[72];
    coeffs[186] = 2 * d[33] * d[37] * d[38] * d[63] - 2 * d[34] * d[38] * d[39] * d[63] - 2 * d[35] * d[37] * d[40] * d[63] + 2 * d[35] * d[39] * d[41] * d[63] + 2 * d[34] * d[40] * d[41] * d[63] - 2 * d[33] * std::pow(d[41], 2) * d[63] + 2 * d[29] * d[37] * d[42] * d[63] + 2 * d[28] * d[38] * d[42] * d[63] - 4 * d[32] * d[41] * d[42] * d[63] - 2 * d[30] * d[38] * d[43] * d[63] - 2 * d[29] * d[39] * d[43] * d[63] + 2 * d[32] * d[40] * d[43] * d[63] + 2 * d[31] * d[41] * d[43] * d[63] - 2 * d[31] * d[37] * d[44] * d[63] + 2 * d[32] * d[39] * d[44] * d[63] - 2 * d[28] * d[40] * d[44] * d[63] + 2 * d[30] * d[41] * d[44] * d[63] + 2 * d[34] * d[36] * d[38] * d[64] - 2 * d[33] * d[38] * d[39] * d[64] + 2 * d[35] * d[39] * d[40] * d[64] - 2 * d[34] * std::pow(d[40], 2) * d[64] - 2 * d[35] * d[36] * d[41] * d[64] + 2 * d[33] * d[40] * d[41] * d[64] - 2 * d[30] * d[38] * d[42] * d[64] - 2 * d[29] * d[39] * d[42] * d[64] + 2 * d[32] * d[40] * d[42] * d[64] + 2 * d[31] * d[41] * d[42] * d[64] + 2 * d[29] * d[36] * d[43] * d[64] + 2 * d[27] * d[38] * d[43] * d[64] - 4 * d[31] * d[40] * d[43] * d[64] - 2 * d[32] * d[36] * d[44] * d[64] + 2 * d[31] * d[39] * d[44] * d[64] + 2 * d[30] * d[40] * d[44] * d[64] - 2 * d[27] * d[41] * d[44] * d[64] + 2 * d[35] * d[36] * d[37] * d[65] - 2 * d[35] * std::pow(d[39], 2) * d[65] - 2 * d[33] * d[37] * d[40] * d[65] + 2 * d[34] * d[39] * d[40] * d[65] - 2 * d[34] * d[36] * d[41] * d[65] + 2 * d[33] * d[39] * d[41] * d[65] - 2 * d[31] * d[37] * d[42] * d[65] + 2 * d[32] * d[39] * d[42] * d[65] - 2 * d[28] * d[40] * d[42] * d[65] + 2 * d[30] * d[41] * d[42] * d[65] - 2 * d[32] * d[36] * d[43] * d[65] + 2 * d[31] * d[39] * d[43] * d[65] + 2 * d[30] * d[40] * d[43] * d[65] - 2 * d[27] * d[41] * d[43] * d[65] + 2 * d[28] * d[36] * d[44] * d[65] + 2 * d[27] * d[37] * d[44] * d[65] - 4 * d[30] * d[39] * d[44] * d[65] - d[29] * d[36] * d[37] * d[72] - d[28] * d[36] * d[38] * d[72] - d[27] * d[37] * d[38] * d[72] + 2 * d[30] * d[38] * d[39] * d[72] + d[29] * std::pow(d[39], 2) * d[72] + 2 * d[31] * d[37] * d[40] * d[72] - 2 * d[32] * d[39] * d[40] * d[72] + d[28] * std::pow(d[40], 2) * d[72] + 2 * d[32] * d[36] * d[41] * d[72] - 2 * d[31] * d[39] * d[41] * d[72] - 2 * d[30] * d[40] * d[41] * d[72] + d[27] * std::pow(d[41], 2) * d[72];
    coeffs[187] = 2 * d[37] * d[38] * d[42] * d[63] - 2 * std::pow(d[41], 2) * d[42] * d[63] - 2 * d[38] * d[39] * d[43] * d[63] + 2 * d[40] * d[41] * d[43] * d[63] - 2 * d[37] * d[40] * d[44] * d[63] + 2 * d[39] * d[41] * d[44] * d[63] - 2 * d[38] * d[39] * d[42] * d[64] + 2 * d[40] * d[41] * d[42] * d[64] + 2 * d[36] * d[38] * d[43] * d[64] - 2 * std::pow(d[40], 2) * d[43] * d[64] + 2 * d[39] * d[40] * d[44] * d[64] - 2 * d[36] * d[41] * d[44] * d[64] - 2 * d[37] * d[40] * d[42] * d[65] + 2 * d[39] * d[41] * d[42] * d[65] + 2 * d[39] * d[40] * d[43] * d[65] - 2 * d[36] * d[41] * d[43] * d[65] + 2 * d[36] * d[37] * d[44] * d[65] - 2 * std::pow(d[39], 2) * d[44] * d[65] - d[36] * d[37] * d[38] * d[72] + d[38] * std::pow(d[39], 2) * d[72] + d[37] * std::pow(d[40], 2) * d[72] - 2 * d[39] * d[40] * d[41] * d[72] + d[36] * std::pow(d[41], 2) * d[72];
    coeffs[188] = 2 * d[11] * d[15] * d[46] * d[63] - 2 * d[13] * d[17] * d[46] * d[63] + 2 * d[10] * d[15] * d[47] * d[63] - 2 * d[12] * d[16] * d[47] * d[63] - 2 * d[11] * d[16] * d[48] * d[63] + 2 * d[14] * d[17] * d[48] * d[63] + 2 * d[14] * d[16] * d[49] * d[63] - 2 * d[10] * d[17] * d[49] * d[63] - 4 * d[14] * d[15] * d[50] * d[63] + 2 * d[13] * d[16] * d[50] * d[63] + 2 * d[12] * d[17] * d[50] * d[63] + 2 * d[10] * d[11] * d[51] * d[63] - 2 * std::pow(d[14], 2) * d[51] * d[63] - 2 * d[11] * d[12] * d[52] * d[63] + 2 * d[13] * d[14] * d[52] * d[63] - 2 * d[10] * d[13] * d[53] * d[63] + 2 * d[12] * d[14] * d[53] * d[63] + 2 * d[11] * d[16] * d[45] * d[64] - 2 * d[14] * d[17] * d[45] * d[64] - 2 * d[12] * d[15] * d[47] * d[64] + 2 * d[9] * d[16] * d[47] * d[64] - 2 * d[11] * d[15] * d[48] * d[64] + 2 * d[13] * d[17] * d[48] * d[64] + 2 * d[14] * d[15] * d[49] * d[64] - 4 * d[13] * d[16] * d[49] * d[64] + 2 * d[12] * d[17] * d[49] * d[64] + 2 * d[13] * d[15] * d[50] * d[64] - 2 * d[9] * d[17] * d[50] * d[64] - 2 * d[11] * d[12] * d[51] * d[64] + 2 * d[13] * d[14] * d[51] * d[64] + 2 * d[9] * d[11] * d[52] * d[64] - 2 * std::pow(d[13], 2) * d[52] * d[64] + 2 * d[12] * d[13] * d[53] * d[64] - 2 * d[9] * d[14] * d[53] * d[64] - 2 * d[14] * d[16] * d[45] * d[65] + 2 * d[10] * d[17] * d[45] * d[65] - 2 * d[13] * d[15] * d[46] * d[65] + 2 * d[9] * d[17] * d[46] * d[65] + 2 * d[14] * d[15] * d[48] * d[65] + 2 * d[13] * d[16] * d[48] * d[65] - 4 * d[12] * d[17] * d[48] * d[65] - 2 * d[10] * d[15] * d[49] * d[65] + 2 * d[12] * d[16] * d[49] * d[65] + 2 * d[12] * d[15] * d[50] * d[65] - 2 * d[9] * d[16] * d[50] * d[65] - 2 * d[10] * d[13] * d[51] * d[65] + 2 * d[12] * d[14] * d[51] * d[65] + 2 * d[12] * d[13] * d[52] * d[65] - 2 * d[9] * d[14] * d[52] * d[65] + 2 * d[9] * d[10] * d[53] * d[65] - 2 * std::pow(d[12], 2) * d[53] * d[65] - d[10] * d[11] * d[45] * d[72] + std::pow(d[14], 2) * d[45] * d[72] - d[9] * d[11] * d[46] * d[72] + std::pow(d[13], 2) * d[46] * d[72] - d[9] * d[10] * d[47] * d[72] + std::pow(d[12], 2) * d[47] * d[72] + 2 * d[11] * d[12] * d[48] * d[72] - 2 * d[13] * d[14] * d[48] * d[72] + 2 * d[10] * d[13] * d[49] * d[72] - 2 * d[12] * d[14] * d[49] * d[72] - 2 * d[12] * d[13] * d[50] * d[72] + 2 * d[9] * d[14] * d[50] * d[72];
    coeffs[189] = 2 * d[15] * d[20] * d[46] * d[63] - 2 * d[17] * d[22] * d[46] * d[63] + 2 * d[11] * d[24] * d[46] * d[63] - 2 * d[13] * d[26] * d[46] * d[63] + 2 * d[15] * d[19] * d[47] * d[63] - 2 * d[16] * d[21] * d[47] * d[63] + 2 * d[10] * d[24] * d[47] * d[63] - 2 * d[12] * d[25] * d[47] * d[63] - 2 * d[16] * d[20] * d[48] * d[63] + 2 * d[17] * d[23] * d[48] * d[63] - 2 * d[11] * d[25] * d[48] * d[63] + 2 * d[14] * d[26] * d[48] * d[63] - 2 * d[17] * d[19] * d[49] * d[63] + 2 * d[16] * d[23] * d[49] * d[63] + 2 * d[14] * d[25] * d[49] * d[63] - 2 * d[10] * d[26] * d[49] * d[63] + 2 * d[17] * d[21] * d[50] * d[63] + 2 * d[16] * d[22] * d[50] * d[63] - 4 * d[15] * d[23] * d[50] * d[63] - 4 * d[14] * d[24] * d[50] * d[63] + 2 * d[13] * d[25] * d[50] * d[63] + 2 * d[12] * d[26] * d[50] * d[63] + 2 * d[11] * d[19] * d[51] * d[63] + 2 * d[10] * d[20] * d[51] * d[63] - 4 * d[14] * d[23] * d[51] * d[63] - 2 * d[12] * d[20] * d[52] * d[63] - 2 * d[11] * d[21] * d[52] * d[63] + 2 * d[14] * d[22] * d[52] * d[63] + 2 * d[13] * d[23] * d[52] * d[63] - 2 * d[13] * d[19] * d[53] * d[63] + 2 * d[14] * d[21] * d[53] * d[63] - 2 * d[10] * d[22] * d[53] * d[63] + 2 * d[12] * d[23] * d[53] * d[63] + 2 * d[16] * d[20] * d[45] * d[64] - 2 * d[17] * d[23] * d[45] * d[64] + 2 * d[11] * d[25] * d[45] * d[64] - 2 * d[14] * d[26] * d[45] * d[64] + 2 * d[16] * d[18] * d[47] * d[64] - 2 * d[15] * d[21] * d[47] * d[64] - 2 * d[12] * d[24] * d[47] * d[64] + 2 * d[9] * d[25] * d[47] * d[64] - 2 * d[15] * d[20] * d[48] * d[64] + 2 * d[17] * d[22] * d[48] * d[64] - 2 * d[11] * d[24] * d[48] * d[64] + 2 * d[13] * d[26] * d[48] * d[64] + 2 * d[17] * d[21] * d[49] * d[64] - 4 * d[16] * d[22] * d[49] * d[64] + 2 * d[15] * d[23] * d[49] * d[64] + 2 * d[14] * d[24] * d[49] * d[64] - 4 * d[13] * d[25] * d[49] * d[64] + 2 * d[12] * d[26] * d[49] * d[64] - 2 * d[17] * d[18] * d[50] * d[64] + 2 * d[15] * d[22] * d[50] * d[64] + 2 * d[13] * d[24] * d[50] * d[64] - 2 * d[9] * d[26] * d[50] * d[64] - 2 * d[12] * d[20] * d[51] * d[64] - 2 * d[11] * d[21] * d[51] * d[64] + 2 * d[14] * d[22] * d[51] * d[64] + 2 * d[13] * d[23] * d[51] * d[64] + 2 * d[11] * d[18] * d[52] * d[64] + 2 * d[9] * d[20] * d[52] * d[64] - 4 * d[13] * d[22] * d[52] * d[64] - 2 * d[14] * d[18] * d[53] * d[64] + 2 * d[13] * d[21] * d[53] * d[64] + 2 * d[12] * d[22] * d[53] * d[64] - 2 * d[9] * d[23] * d[53] * d[64] + 2 * d[17] * d[19] * d[45] * d[65] - 2 * d[16] * d[23] * d[45] * d[65] - 2 * d[14] * d[25] * d[45] * d[65] + 2 * d[10] * d[26] * d[45] * d[65] + 2 * d[17] * d[18] * d[46] * d[65] - 2 * d[15] * d[22] * d[46] * d[65] - 2 * d[13] * d[24] * d[46] * d[65] + 2 * d[9] * d[26] * d[46] * d[65] - 4 * d[17] * d[21] * d[48] * d[65] + 2 * d[16] * d[22] * d[48] * d[65] + 2 * d[15] * d[23] * d[48] * d[65] + 2 * d[14] * d[24] * d[48] * d[65] + 2 * d[13] * d[25] * d[48] * d[65] - 4 * d[12] * d[26] * d[48] * d[65] - 2 * d[15] * d[19] * d[49] * d[65] + 2 * d[16] * d[21] * d[49] * d[65] - 2 * d[10] * d[24] * d[49] * d[65] + 2 * d[12] * d[25] * d[49] * d[65] - 2 * d[16] * d[18] * d[50] * d[65] + 2 * d[15] * d[21] * d[50] * d[65] + 2 * d[12] * d[24] * d[50] * d[65] - 2 * d[9] * d[25] * d[50] * d[65] - 2 * d[13] * d[19] * d[51] * d[65] + 2 * d[14] * d[21] * d[51] * d[65] - 2 * d[10] * d[22] * d[51] * d[65] + 2 * d[12] * d[23] * d[51] * d[65] - 2 * d[14] * d[18] * d[52] * d[65] + 2 * d[13] * d[21] * d[52] * d[65] + 2 * d[12] * d[22] * d[52] * d[65] - 2 * d[9] * d[23] * d[52] * d[65] + 2 * d[10] * d[18] * d[53] * d[65] + 2 * d[9] * d[19] * d[53] * d[65] - 4 * d[12] * d[21] * d[53] * d[65] - d[11] * d[19] * d[45] * d[72] - d[10] * d[20] * d[45] * d[72] + 2 * d[14] * d[23] * d[45] * d[72] - d[11] * d[18] * d[46] * d[72] - d[9] * d[20] * d[46] * d[72] + 2 * d[13] * d[22] * d[46] * d[72] - d[10] * d[18] * d[47] * d[72] - d[9] * d[19] * d[47] * d[72] + 2 * d[12] * d[21] * d[47] * d[72] + 2 * d[12] * d[20] * d[48] * d[72] + 2 * d[11] * d[21] * d[48] * d[72] - 2 * d[14] * d[22] * d[48] * d[72] - 2 * d[13] * d[23] * d[48] * d[72] + 2 * d[13] * d[19] * d[49] * d[72] - 2 * d[14] * d[21] * d[49] * d[72] + 2 * d[10] * d[22] * d[49] * d[72] - 2 * d[12] * d[23] * d[49] * d[72] + 2 * d[14] * d[18] * d[50] * d[72] - 2 * d[13] * d[21] * d[50] * d[72] - 2 * d[12] * d[22] * d[50] * d[72] + 2 * d[9] * d[23] * d[50] * d[72];
    coeffs[190] = 2 * d[20] * d[24] * d[46] * d[63] - 2 * d[22] * d[26] * d[46] * d[63] + 2 * d[19] * d[24] * d[47] * d[63] - 2 * d[21] * d[25] * d[47] * d[63] - 2 * d[20] * d[25] * d[48] * d[63] + 2 * d[23] * d[26] * d[48] * d[63] + 2 * d[23] * d[25] * d[49] * d[63] - 2 * d[19] * d[26] * d[49] * d[63] - 4 * d[23] * d[24] * d[50] * d[63] + 2 * d[22] * d[25] * d[50] * d[63] + 2 * d[21] * d[26] * d[50] * d[63] + 2 * d[19] * d[20] * d[51] * d[63] - 2 * std::pow(d[23], 2) * d[51] * d[63] - 2 * d[20] * d[21] * d[52] * d[63] + 2 * d[22] * d[23] * d[52] * d[63] - 2 * d[19] * d[22] * d[53] * d[63] + 2 * d[21] * d[23] * d[53] * d[63] + 2 * d[20] * d[25] * d[45] * d[64] - 2 * d[23] * d[26] * d[45] * d[64] - 2 * d[21] * d[24] * d[47] * d[64] + 2 * d[18] * d[25] * d[47] * d[64] - 2 * d[20] * d[24] * d[48] * d[64] + 2 * d[22] * d[26] * d[48] * d[64] + 2 * d[23] * d[24] * d[49] * d[64] - 4 * d[22] * d[25] * d[49] * d[64] + 2 * d[21] * d[26] * d[49] * d[64] + 2 * d[22] * d[24] * d[50] * d[64] - 2 * d[18] * d[26] * d[50] * d[64] - 2 * d[20] * d[21] * d[51] * d[64] + 2 * d[22] * d[23] * d[51] * d[64] + 2 * d[18] * d[20] * d[52] * d[64] - 2 * std::pow(d[22], 2) * d[52] * d[64] + 2 * d[21] * d[22] * d[53] * d[64] - 2 * d[18] * d[23] * d[53] * d[64] - 2 * d[23] * d[25] * d[45] * d[65] + 2 * d[19] * d[26] * d[45] * d[65] - 2 * d[22] * d[24] * d[46] * d[65] + 2 * d[18] * d[26] * d[46] * d[65] + 2 * d[23] * d[24] * d[48] * d[65] + 2 * d[22] * d[25] * d[48] * d[65] - 4 * d[21] * d[26] * d[48] * d[65] - 2 * d[19] * d[24] * d[49] * d[65] + 2 * d[21] * d[25] * d[49] * d[65] + 2 * d[21] * d[24] * d[50] * d[65] - 2 * d[18] * d[25] * d[50] * d[65] - 2 * d[19] * d[22] * d[51] * d[65] + 2 * d[21] * d[23] * d[51] * d[65] + 2 * d[21] * d[22] * d[52] * d[65] - 2 * d[18] * d[23] * d[52] * d[65] + 2 * d[18] * d[19] * d[53] * d[65] - 2 * std::pow(d[21], 2) * d[53] * d[65] - d[19] * d[20] * d[45] * d[72] + std::pow(d[23], 2) * d[45] * d[72] - d[18] * d[20] * d[46] * d[72] + std::pow(d[22], 2) * d[46] * d[72] - d[18] * d[19] * d[47] * d[72] + std::pow(d[21], 2) * d[47] * d[72] + 2 * d[20] * d[21] * d[48] * d[72] - 2 * d[22] * d[23] * d[48] * d[72] + 2 * d[19] * d[22] * d[49] * d[72] - 2 * d[21] * d[23] * d[49] * d[72] - 2 * d[21] * d[22] * d[50] * d[72] + 2 * d[18] * d[23] * d[50] * d[72];
    coeffs[191] = 2 * d[15] * d[29] * d[46] * d[63] - 2 * d[17] * d[31] * d[46] * d[63] + 2 * d[11] * d[33] * d[46] * d[63] - 2 * d[13] * d[35] * d[46] * d[63] + 2 * d[15] * d[28] * d[47] * d[63] - 2 * d[16] * d[30] * d[47] * d[63] + 2 * d[10] * d[33] * d[47] * d[63] - 2 * d[12] * d[34] * d[47] * d[63] - 2 * d[16] * d[29] * d[48] * d[63] + 2 * d[17] * d[32] * d[48] * d[63] - 2 * d[11] * d[34] * d[48] * d[63] + 2 * d[14] * d[35] * d[48] * d[63] - 2 * d[17] * d[28] * d[49] * d[63] + 2 * d[16] * d[32] * d[49] * d[63] + 2 * d[14] * d[34] * d[49] * d[63] - 2 * d[10] * d[35] * d[49] * d[63] + 2 * d[17] * d[30] * d[50] * d[63] + 2 * d[16] * d[31] * d[50] * d[63] - 4 * d[15] * d[32] * d[50] * d[63] - 4 * d[14] * d[33] * d[50] * d[63] + 2 * d[13] * d[34] * d[50] * d[63] + 2 * d[12] * d[35] * d[50] * d[63] + 2 * d[11] * d[28] * d[51] * d[63] + 2 * d[10] * d[29] * d[51] * d[63] - 4 * d[14] * d[32] * d[51] * d[63] - 2 * d[12] * d[29] * d[52] * d[63] - 2 * d[11] * d[30] * d[52] * d[63] + 2 * d[14] * d[31] * d[52] * d[63] + 2 * d[13] * d[32] * d[52] * d[63] - 2 * d[13] * d[28] * d[53] * d[63] + 2 * d[14] * d[30] * d[53] * d[63] - 2 * d[10] * d[31] * d[53] * d[63] + 2 * d[12] * d[32] * d[53] * d[63] + 2 * d[16] * d[29] * d[45] * d[64] - 2 * d[17] * d[32] * d[45] * d[64] + 2 * d[11] * d[34] * d[45] * d[64] - 2 * d[14] * d[35] * d[45] * d[64] + 2 * d[16] * d[27] * d[47] * d[64] - 2 * d[15] * d[30] * d[47] * d[64] - 2 * d[12] * d[33] * d[47] * d[64] + 2 * d[9] * d[34] * d[47] * d[64] - 2 * d[15] * d[29] * d[48] * d[64] + 2 * d[17] * d[31] * d[48] * d[64] - 2 * d[11] * d[33] * d[48] * d[64] + 2 * d[13] * d[35] * d[48] * d[64] + 2 * d[17] * d[30] * d[49] * d[64] - 4 * d[16] * d[31] * d[49] * d[64] + 2 * d[15] * d[32] * d[49] * d[64] + 2 * d[14] * d[33] * d[49] * d[64] - 4 * d[13] * d[34] * d[49] * d[64] + 2 * d[12] * d[35] * d[49] * d[64] - 2 * d[17] * d[27] * d[50] * d[64] + 2 * d[15] * d[31] * d[50] * d[64] + 2 * d[13] * d[33] * d[50] * d[64] - 2 * d[9] * d[35] * d[50] * d[64] - 2 * d[12] * d[29] * d[51] * d[64] - 2 * d[11] * d[30] * d[51] * d[64] + 2 * d[14] * d[31] * d[51] * d[64] + 2 * d[13] * d[32] * d[51] * d[64] + 2 * d[11] * d[27] * d[52] * d[64] + 2 * d[9] * d[29] * d[52] * d[64] - 4 * d[13] * d[31] * d[52] * d[64] - 2 * d[14] * d[27] * d[53] * d[64] + 2 * d[13] * d[30] * d[53] * d[64] + 2 * d[12] * d[31] * d[53] * d[64] - 2 * d[9] * d[32] * d[53] * d[64] + 2 * d[17] * d[28] * d[45] * d[65] - 2 * d[16] * d[32] * d[45] * d[65] - 2 * d[14] * d[34] * d[45] * d[65] + 2 * d[10] * d[35] * d[45] * d[65] + 2 * d[17] * d[27] * d[46] * d[65] - 2 * d[15] * d[31] * d[46] * d[65] - 2 * d[13] * d[33] * d[46] * d[65] + 2 * d[9] * d[35] * d[46] * d[65] - 4 * d[17] * d[30] * d[48] * d[65] + 2 * d[16] * d[31] * d[48] * d[65] + 2 * d[15] * d[32] * d[48] * d[65] + 2 * d[14] * d[33] * d[48] * d[65] + 2 * d[13] * d[34] * d[48] * d[65] - 4 * d[12] * d[35] * d[48] * d[65] - 2 * d[15] * d[28] * d[49] * d[65] + 2 * d[16] * d[30] * d[49] * d[65] - 2 * d[10] * d[33] * d[49] * d[65] + 2 * d[12] * d[34] * d[49] * d[65] - 2 * d[16] * d[27] * d[50] * d[65] + 2 * d[15] * d[30] * d[50] * d[65] + 2 * d[12] * d[33] * d[50] * d[65] - 2 * d[9] * d[34] * d[50] * d[65] - 2 * d[13] * d[28] * d[51] * d[65] + 2 * d[14] * d[30] * d[51] * d[65] - 2 * d[10] * d[31] * d[51] * d[65] + 2 * d[12] * d[32] * d[51] * d[65] - 2 * d[14] * d[27] * d[52] * d[65] + 2 * d[13] * d[30] * d[52] * d[65] + 2 * d[12] * d[31] * d[52] * d[65] - 2 * d[9] * d[32] * d[52] * d[65] + 2 * d[10] * d[27] * d[53] * d[65] + 2 * d[9] * d[28] * d[53] * d[65] - 4 * d[12] * d[30] * d[53] * d[65] - d[11] * d[28] * d[45] * d[72] - d[10] * d[29] * d[45] * d[72] + 2 * d[14] * d[32] * d[45] * d[72] - d[11] * d[27] * d[46] * d[72] - d[9] * d[29] * d[46] * d[72] + 2 * d[13] * d[31] * d[46] * d[72] - d[10] * d[27] * d[47] * d[72] - d[9] * d[28] * d[47] * d[72] + 2 * d[12] * d[30] * d[47] * d[72] + 2 * d[12] * d[29] * d[48] * d[72] + 2 * d[11] * d[30] * d[48] * d[72] - 2 * d[14] * d[31] * d[48] * d[72] - 2 * d[13] * d[32] * d[48] * d[72] + 2 * d[13] * d[28] * d[49] * d[72] - 2 * d[14] * d[30] * d[49] * d[72] + 2 * d[10] * d[31] * d[49] * d[72] - 2 * d[12] * d[32] * d[49] * d[72] + 2 * d[14] * d[27] * d[50] * d[72] - 2 * d[13] * d[30] * d[50] * d[72] - 2 * d[12] * d[31] * d[50] * d[72] + 2 * d[9] * d[32] * d[50] * d[72];
    coeffs[192] = 2 * d[24] * d[29] * d[46] * d[63] - 2 * d[26] * d[31] * d[46] * d[63] + 2 * d[20] * d[33] * d[46] * d[63] - 2 * d[22] * d[35] * d[46] * d[63] + 2 * d[24] * d[28] * d[47] * d[63] - 2 * d[25] * d[30] * d[47] * d[63] + 2 * d[19] * d[33] * d[47] * d[63] - 2 * d[21] * d[34] * d[47] * d[63] - 2 * d[25] * d[29] * d[48] * d[63] + 2 * d[26] * d[32] * d[48] * d[63] - 2 * d[20] * d[34] * d[48] * d[63] + 2 * d[23] * d[35] * d[48] * d[63] - 2 * d[26] * d[28] * d[49] * d[63] + 2 * d[25] * d[32] * d[49] * d[63] + 2 * d[23] * d[34] * d[49] * d[63] - 2 * d[19] * d[35] * d[49] * d[63] + 2 * d[26] * d[30] * d[50] * d[63] + 2 * d[25] * d[31] * d[50] * d[63] - 4 * d[24] * d[32] * d[50] * d[63] - 4 * d[23] * d[33] * d[50] * d[63] + 2 * d[22] * d[34] * d[50] * d[63] + 2 * d[21] * d[35] * d[50] * d[63] + 2 * d[20] * d[28] * d[51] * d[63] + 2 * d[19] * d[29] * d[51] * d[63] - 4 * d[23] * d[32] * d[51] * d[63] - 2 * d[21] * d[29] * d[52] * d[63] - 2 * d[20] * d[30] * d[52] * d[63] + 2 * d[23] * d[31] * d[52] * d[63] + 2 * d[22] * d[32] * d[52] * d[63] - 2 * d[22] * d[28] * d[53] * d[63] + 2 * d[23] * d[30] * d[53] * d[63] - 2 * d[19] * d[31] * d[53] * d[63] + 2 * d[21] * d[32] * d[53] * d[63] + 2 * d[25] * d[29] * d[45] * d[64] - 2 * d[26] * d[32] * d[45] * d[64] + 2 * d[20] * d[34] * d[45] * d[64] - 2 * d[23] * d[35] * d[45] * d[64] + 2 * d[25] * d[27] * d[47] * d[64] - 2 * d[24] * d[30] * d[47] * d[64] - 2 * d[21] * d[33] * d[47] * d[64] + 2 * d[18] * d[34] * d[47] * d[64] - 2 * d[24] * d[29] * d[48] * d[64] + 2 * d[26] * d[31] * d[48] * d[64] - 2 * d[20] * d[33] * d[48] * d[64] + 2 * d[22] * d[35] * d[48] * d[64] + 2 * d[26] * d[30] * d[49] * d[64] - 4 * d[25] * d[31] * d[49] * d[64] + 2 * d[24] * d[32] * d[49] * d[64] + 2 * d[23] * d[33] * d[49] * d[64] - 4 * d[22] * d[34] * d[49] * d[64] + 2 * d[21] * d[35] * d[49] * d[64] - 2 * d[26] * d[27] * d[50] * d[64] + 2 * d[24] * d[31] * d[50] * d[64] + 2 * d[22] * d[33] * d[50] * d[64] - 2 * d[18] * d[35] * d[50] * d[64] - 2 * d[21] * d[29] * d[51] * d[64] - 2 * d[20] * d[30] * d[51] * d[64] + 2 * d[23] * d[31] * d[51] * d[64] + 2 * d[22] * d[32] * d[51] * d[64] + 2 * d[20] * d[27] * d[52] * d[64] + 2 * d[18] * d[29] * d[52] * d[64] - 4 * d[22] * d[31] * d[52] * d[64] - 2 * d[23] * d[27] * d[53] * d[64] + 2 * d[22] * d[30] * d[53] * d[64] + 2 * d[21] * d[31] * d[53] * d[64] - 2 * d[18] * d[32] * d[53] * d[64] + 2 * d[26] * d[28] * d[45] * d[65] - 2 * d[25] * d[32] * d[45] * d[65] - 2 * d[23] * d[34] * d[45] * d[65] + 2 * d[19] * d[35] * d[45] * d[65] + 2 * d[26] * d[27] * d[46] * d[65] - 2 * d[24] * d[31] * d[46] * d[65] - 2 * d[22] * d[33] * d[46] * d[65] + 2 * d[18] * d[35] * d[46] * d[65] - 4 * d[26] * d[30] * d[48] * d[65] + 2 * d[25] * d[31] * d[48] * d[65] + 2 * d[24] * d[32] * d[48] * d[65] + 2 * d[23] * d[33] * d[48] * d[65] + 2 * d[22] * d[34] * d[48] * d[65] - 4 * d[21] * d[35] * d[48] * d[65] - 2 * d[24] * d[28] * d[49] * d[65] + 2 * d[25] * d[30] * d[49] * d[65] - 2 * d[19] * d[33] * d[49] * d[65] + 2 * d[21] * d[34] * d[49] * d[65] - 2 * d[25] * d[27] * d[50] * d[65] + 2 * d[24] * d[30] * d[50] * d[65] + 2 * d[21] * d[33] * d[50] * d[65] - 2 * d[18] * d[34] * d[50] * d[65] - 2 * d[22] * d[28] * d[51] * d[65] + 2 * d[23] * d[30] * d[51] * d[65] - 2 * d[19] * d[31] * d[51] * d[65] + 2 * d[21] * d[32] * d[51] * d[65] - 2 * d[23] * d[27] * d[52] * d[65] + 2 * d[22] * d[30] * d[52] * d[65] + 2 * d[21] * d[31] * d[52] * d[65] - 2 * d[18] * d[32] * d[52] * d[65] + 2 * d[19] * d[27] * d[53] * d[65] + 2 * d[18] * d[28] * d[53] * d[65] - 4 * d[21] * d[30] * d[53] * d[65] - d[20] * d[28] * d[45] * d[72] - d[19] * d[29] * d[45] * d[72] + 2 * d[23] * d[32] * d[45] * d[72] - d[20] * d[27] * d[46] * d[72] - d[18] * d[29] * d[46] * d[72] + 2 * d[22] * d[31] * d[46] * d[72] - d[19] * d[27] * d[47] * d[72] - d[18] * d[28] * d[47] * d[72] + 2 * d[21] * d[30] * d[47] * d[72] + 2 * d[21] * d[29] * d[48] * d[72] + 2 * d[20] * d[30] * d[48] * d[72] - 2 * d[23] * d[31] * d[48] * d[72] - 2 * d[22] * d[32] * d[48] * d[72] + 2 * d[22] * d[28] * d[49] * d[72] - 2 * d[23] * d[30] * d[49] * d[72] + 2 * d[19] * d[31] * d[49] * d[72] - 2 * d[21] * d[32] * d[49] * d[72] + 2 * d[23] * d[27] * d[50] * d[72] - 2 * d[22] * d[30] * d[50] * d[72] - 2 * d[21] * d[31] * d[50] * d[72] + 2 * d[18] * d[32] * d[50] * d[72];
    coeffs[193] = 2 * d[29] * d[33] * d[46] * d[63] - 2 * d[31] * d[35] * d[46] * d[63] + 2 * d[28] * d[33] * d[47] * d[63] - 2 * d[30] * d[34] * d[47] * d[63] - 2 * d[29] * d[34] * d[48] * d[63] + 2 * d[32] * d[35] * d[48] * d[63] + 2 * d[32] * d[34] * d[49] * d[63] - 2 * d[28] * d[35] * d[49] * d[63] - 4 * d[32] * d[33] * d[50] * d[63] + 2 * d[31] * d[34] * d[50] * d[63] + 2 * d[30] * d[35] * d[50] * d[63] + 2 * d[28] * d[29] * d[51] * d[63] - 2 * std::pow(d[32], 2) * d[51] * d[63] - 2 * d[29] * d[30] * d[52] * d[63] + 2 * d[31] * d[32] * d[52] * d[63] - 2 * d[28] * d[31] * d[53] * d[63] + 2 * d[30] * d[32] * d[53] * d[63] + 2 * d[29] * d[34] * d[45] * d[64] - 2 * d[32] * d[35] * d[45] * d[64] - 2 * d[30] * d[33] * d[47] * d[64] + 2 * d[27] * d[34] * d[47] * d[64] - 2 * d[29] * d[33] * d[48] * d[64] + 2 * d[31] * d[35] * d[48] * d[64] + 2 * d[32] * d[33] * d[49] * d[64] - 4 * d[31] * d[34] * d[49] * d[64] + 2 * d[30] * d[35] * d[49] * d[64] + 2 * d[31] * d[33] * d[50] * d[64] - 2 * d[27] * d[35] * d[50] * d[64] - 2 * d[29] * d[30] * d[51] * d[64] + 2 * d[31] * d[32] * d[51] * d[64] + 2 * d[27] * d[29] * d[52] * d[64] - 2 * std::pow(d[31], 2) * d[52] * d[64] + 2 * d[30] * d[31] * d[53] * d[64] - 2 * d[27] * d[32] * d[53] * d[64] - 2 * d[32] * d[34] * d[45] * d[65] + 2 * d[28] * d[35] * d[45] * d[65] - 2 * d[31] * d[33] * d[46] * d[65] + 2 * d[27] * d[35] * d[46] * d[65] + 2 * d[32] * d[33] * d[48] * d[65] + 2 * d[31] * d[34] * d[48] * d[65] - 4 * d[30] * d[35] * d[48] * d[65] - 2 * d[28] * d[33] * d[49] * d[65] + 2 * d[30] * d[34] * d[49] * d[65] + 2 * d[30] * d[33] * d[50] * d[65] - 2 * d[27] * d[34] * d[50] * d[65] - 2 * d[28] * d[31] * d[51] * d[65] + 2 * d[30] * d[32] * d[51] * d[65] + 2 * d[30] * d[31] * d[52] * d[65] - 2 * d[27] * d[32] * d[52] * d[65] + 2 * d[27] * d[28] * d[53] * d[65] - 2 * std::pow(d[30], 2) * d[53] * d[65] - d[28] * d[29] * d[45] * d[72] + std::pow(d[32], 2) * d[45] * d[72] - d[27] * d[29] * d[46] * d[72] + std::pow(d[31], 2) * d[46] * d[72] - d[27] * d[28] * d[47] * d[72] + std::pow(d[30], 2) * d[47] * d[72] + 2 * d[29] * d[30] * d[48] * d[72] - 2 * d[31] * d[32] * d[48] * d[72] + 2 * d[28] * d[31] * d[49] * d[72] - 2 * d[30] * d[32] * d[49] * d[72] - 2 * d[30] * d[31] * d[50] * d[72] + 2 * d[27] * d[32] * d[50] * d[72];
    coeffs[194] = 2 * d[15] * d[38] * d[46] * d[63] - 2 * d[17] * d[40] * d[46] * d[63] + 2 * d[11] * d[42] * d[46] * d[63] - 2 * d[13] * d[44] * d[46] * d[63] + 2 * d[15] * d[37] * d[47] * d[63] - 2 * d[16] * d[39] * d[47] * d[63] + 2 * d[10] * d[42] * d[47] * d[63] - 2 * d[12] * d[43] * d[47] * d[63] - 2 * d[16] * d[38] * d[48] * d[63] + 2 * d[17] * d[41] * d[48] * d[63] - 2 * d[11] * d[43] * d[48] * d[63] + 2 * d[14] * d[44] * d[48] * d[63] - 2 * d[17] * d[37] * d[49] * d[63] + 2 * d[16] * d[41] * d[49] * d[63] + 2 * d[14] * d[43] * d[49] * d[63] - 2 * d[10] * d[44] * d[49] * d[63] + 2 * d[17] * d[39] * d[50] * d[63] + 2 * d[16] * d[40] * d[50] * d[63] - 4 * d[15] * d[41] * d[50] * d[63] - 4 * d[14] * d[42] * d[50] * d[63] + 2 * d[13] * d[43] * d[50] * d[63] + 2 * d[12] * d[44] * d[50] * d[63] + 2 * d[11] * d[37] * d[51] * d[63] + 2 * d[10] * d[38] * d[51] * d[63] - 4 * d[14] * d[41] * d[51] * d[63] - 2 * d[12] * d[38] * d[52] * d[63] - 2 * d[11] * d[39] * d[52] * d[63] + 2 * d[14] * d[40] * d[52] * d[63] + 2 * d[13] * d[41] * d[52] * d[63] - 2 * d[13] * d[37] * d[53] * d[63] + 2 * d[14] * d[39] * d[53] * d[63] - 2 * d[10] * d[40] * d[53] * d[63] + 2 * d[12] * d[41] * d[53] * d[63] + 2 * d[16] * d[38] * d[45] * d[64] - 2 * d[17] * d[41] * d[45] * d[64] + 2 * d[11] * d[43] * d[45] * d[64] - 2 * d[14] * d[44] * d[45] * d[64] + 2 * d[16] * d[36] * d[47] * d[64] - 2 * d[15] * d[39] * d[47] * d[64] - 2 * d[12] * d[42] * d[47] * d[64] + 2 * d[9] * d[43] * d[47] * d[64] - 2 * d[15] * d[38] * d[48] * d[64] + 2 * d[17] * d[40] * d[48] * d[64] - 2 * d[11] * d[42] * d[48] * d[64] + 2 * d[13] * d[44] * d[48] * d[64] + 2 * d[17] * d[39] * d[49] * d[64] - 4 * d[16] * d[40] * d[49] * d[64] + 2 * d[15] * d[41] * d[49] * d[64] + 2 * d[14] * d[42] * d[49] * d[64] - 4 * d[13] * d[43] * d[49] * d[64] + 2 * d[12] * d[44] * d[49] * d[64] - 2 * d[17] * d[36] * d[50] * d[64] + 2 * d[15] * d[40] * d[50] * d[64] + 2 * d[13] * d[42] * d[50] * d[64] - 2 * d[9] * d[44] * d[50] * d[64] - 2 * d[12] * d[38] * d[51] * d[64] - 2 * d[11] * d[39] * d[51] * d[64] + 2 * d[14] * d[40] * d[51] * d[64] + 2 * d[13] * d[41] * d[51] * d[64] + 2 * d[11] * d[36] * d[52] * d[64] + 2 * d[9] * d[38] * d[52] * d[64] - 4 * d[13] * d[40] * d[52] * d[64] - 2 * d[14] * d[36] * d[53] * d[64] + 2 * d[13] * d[39] * d[53] * d[64] + 2 * d[12] * d[40] * d[53] * d[64] - 2 * d[9] * d[41] * d[53] * d[64] + 2 * d[17] * d[37] * d[45] * d[65] - 2 * d[16] * d[41] * d[45] * d[65] - 2 * d[14] * d[43] * d[45] * d[65] + 2 * d[10] * d[44] * d[45] * d[65] + 2 * d[17] * d[36] * d[46] * d[65] - 2 * d[15] * d[40] * d[46] * d[65] - 2 * d[13] * d[42] * d[46] * d[65] + 2 * d[9] * d[44] * d[46] * d[65] - 4 * d[17] * d[39] * d[48] * d[65] + 2 * d[16] * d[40] * d[48] * d[65] + 2 * d[15] * d[41] * d[48] * d[65] + 2 * d[14] * d[42] * d[48] * d[65] + 2 * d[13] * d[43] * d[48] * d[65] - 4 * d[12] * d[44] * d[48] * d[65] - 2 * d[15] * d[37] * d[49] * d[65] + 2 * d[16] * d[39] * d[49] * d[65] - 2 * d[10] * d[42] * d[49] * d[65] + 2 * d[12] * d[43] * d[49] * d[65] - 2 * d[16] * d[36] * d[50] * d[65] + 2 * d[15] * d[39] * d[50] * d[65] + 2 * d[12] * d[42] * d[50] * d[65] - 2 * d[9] * d[43] * d[50] * d[65] - 2 * d[13] * d[37] * d[51] * d[65] + 2 * d[14] * d[39] * d[51] * d[65] - 2 * d[10] * d[40] * d[51] * d[65] + 2 * d[12] * d[41] * d[51] * d[65] - 2 * d[14] * d[36] * d[52] * d[65] + 2 * d[13] * d[39] * d[52] * d[65] + 2 * d[12] * d[40] * d[52] * d[65] - 2 * d[9] * d[41] * d[52] * d[65] + 2 * d[10] * d[36] * d[53] * d[65] + 2 * d[9] * d[37] * d[53] * d[65] - 4 * d[12] * d[39] * d[53] * d[65] - d[11] * d[37] * d[45] * d[72] - d[10] * d[38] * d[45] * d[72] + 2 * d[14] * d[41] * d[45] * d[72] - d[11] * d[36] * d[46] * d[72] - d[9] * d[38] * d[46] * d[72] + 2 * d[13] * d[40] * d[46] * d[72] - d[10] * d[36] * d[47] * d[72] - d[9] * d[37] * d[47] * d[72] + 2 * d[12] * d[39] * d[47] * d[72] + 2 * d[12] * d[38] * d[48] * d[72] + 2 * d[11] * d[39] * d[48] * d[72] - 2 * d[14] * d[40] * d[48] * d[72] - 2 * d[13] * d[41] * d[48] * d[72] + 2 * d[13] * d[37] * d[49] * d[72] - 2 * d[14] * d[39] * d[49] * d[72] + 2 * d[10] * d[40] * d[49] * d[72] - 2 * d[12] * d[41] * d[49] * d[72] + 2 * d[14] * d[36] * d[50] * d[72] - 2 * d[13] * d[39] * d[50] * d[72] - 2 * d[12] * d[40] * d[50] * d[72] + 2 * d[9] * d[41] * d[50] * d[72];
    coeffs[195] = 2 * d[24] * d[38] * d[46] * d[63] - 2 * d[26] * d[40] * d[46] * d[63] + 2 * d[20] * d[42] * d[46] * d[63] - 2 * d[22] * d[44] * d[46] * d[63] + 2 * d[24] * d[37] * d[47] * d[63] - 2 * d[25] * d[39] * d[47] * d[63] + 2 * d[19] * d[42] * d[47] * d[63] - 2 * d[21] * d[43] * d[47] * d[63] - 2 * d[25] * d[38] * d[48] * d[63] + 2 * d[26] * d[41] * d[48] * d[63] - 2 * d[20] * d[43] * d[48] * d[63] + 2 * d[23] * d[44] * d[48] * d[63] - 2 * d[26] * d[37] * d[49] * d[63] + 2 * d[25] * d[41] * d[49] * d[63] + 2 * d[23] * d[43] * d[49] * d[63] - 2 * d[19] * d[44] * d[49] * d[63] + 2 * d[26] * d[39] * d[50] * d[63] + 2 * d[25] * d[40] * d[50] * d[63] - 4 * d[24] * d[41] * d[50] * d[63] - 4 * d[23] * d[42] * d[50] * d[63] + 2 * d[22] * d[43] * d[50] * d[63] + 2 * d[21] * d[44] * d[50] * d[63] + 2 * d[20] * d[37] * d[51] * d[63] + 2 * d[19] * d[38] * d[51] * d[63] - 4 * d[23] * d[41] * d[51] * d[63] - 2 * d[21] * d[38] * d[52] * d[63] - 2 * d[20] * d[39] * d[52] * d[63] + 2 * d[23] * d[40] * d[52] * d[63] + 2 * d[22] * d[41] * d[52] * d[63] - 2 * d[22] * d[37] * d[53] * d[63] + 2 * d[23] * d[39] * d[53] * d[63] - 2 * d[19] * d[40] * d[53] * d[63] + 2 * d[21] * d[41] * d[53] * d[63] + 2 * d[25] * d[38] * d[45] * d[64] - 2 * d[26] * d[41] * d[45] * d[64] + 2 * d[20] * d[43] * d[45] * d[64] - 2 * d[23] * d[44] * d[45] * d[64] + 2 * d[25] * d[36] * d[47] * d[64] - 2 * d[24] * d[39] * d[47] * d[64] - 2 * d[21] * d[42] * d[47] * d[64] + 2 * d[18] * d[43] * d[47] * d[64] - 2 * d[24] * d[38] * d[48] * d[64] + 2 * d[26] * d[40] * d[48] * d[64] - 2 * d[20] * d[42] * d[48] * d[64] + 2 * d[22] * d[44] * d[48] * d[64] + 2 * d[26] * d[39] * d[49] * d[64] - 4 * d[25] * d[40] * d[49] * d[64] + 2 * d[24] * d[41] * d[49] * d[64] + 2 * d[23] * d[42] * d[49] * d[64] - 4 * d[22] * d[43] * d[49] * d[64] + 2 * d[21] * d[44] * d[49] * d[64] - 2 * d[26] * d[36] * d[50] * d[64] + 2 * d[24] * d[40] * d[50] * d[64] + 2 * d[22] * d[42] * d[50] * d[64] - 2 * d[18] * d[44] * d[50] * d[64] - 2 * d[21] * d[38] * d[51] * d[64] - 2 * d[20] * d[39] * d[51] * d[64] + 2 * d[23] * d[40] * d[51] * d[64] + 2 * d[22] * d[41] * d[51] * d[64] + 2 * d[20] * d[36] * d[52] * d[64] + 2 * d[18] * d[38] * d[52] * d[64] - 4 * d[22] * d[40] * d[52] * d[64] - 2 * d[23] * d[36] * d[53] * d[64] + 2 * d[22] * d[39] * d[53] * d[64] + 2 * d[21] * d[40] * d[53] * d[64] - 2 * d[18] * d[41] * d[53] * d[64] + 2 * d[26] * d[37] * d[45] * d[65] - 2 * d[25] * d[41] * d[45] * d[65] - 2 * d[23] * d[43] * d[45] * d[65] + 2 * d[19] * d[44] * d[45] * d[65] + 2 * d[26] * d[36] * d[46] * d[65] - 2 * d[24] * d[40] * d[46] * d[65] - 2 * d[22] * d[42] * d[46] * d[65] + 2 * d[18] * d[44] * d[46] * d[65] - 4 * d[26] * d[39] * d[48] * d[65] + 2 * d[25] * d[40] * d[48] * d[65] + 2 * d[24] * d[41] * d[48] * d[65] + 2 * d[23] * d[42] * d[48] * d[65] + 2 * d[22] * d[43] * d[48] * d[65] - 4 * d[21] * d[44] * d[48] * d[65] - 2 * d[24] * d[37] * d[49] * d[65] + 2 * d[25] * d[39] * d[49] * d[65] - 2 * d[19] * d[42] * d[49] * d[65] + 2 * d[21] * d[43] * d[49] * d[65] - 2 * d[25] * d[36] * d[50] * d[65] + 2 * d[24] * d[39] * d[50] * d[65] + 2 * d[21] * d[42] * d[50] * d[65] - 2 * d[18] * d[43] * d[50] * d[65] - 2 * d[22] * d[37] * d[51] * d[65] + 2 * d[23] * d[39] * d[51] * d[65] - 2 * d[19] * d[40] * d[51] * d[65] + 2 * d[21] * d[41] * d[51] * d[65] - 2 * d[23] * d[36] * d[52] * d[65] + 2 * d[22] * d[39] * d[52] * d[65] + 2 * d[21] * d[40] * d[52] * d[65] - 2 * d[18] * d[41] * d[52] * d[65] + 2 * d[19] * d[36] * d[53] * d[65] + 2 * d[18] * d[37] * d[53] * d[65] - 4 * d[21] * d[39] * d[53] * d[65] - d[20] * d[37] * d[45] * d[72] - d[19] * d[38] * d[45] * d[72] + 2 * d[23] * d[41] * d[45] * d[72] - d[20] * d[36] * d[46] * d[72] - d[18] * d[38] * d[46] * d[72] + 2 * d[22] * d[40] * d[46] * d[72] - d[19] * d[36] * d[47] * d[72] - d[18] * d[37] * d[47] * d[72] + 2 * d[21] * d[39] * d[47] * d[72] + 2 * d[21] * d[38] * d[48] * d[72] + 2 * d[20] * d[39] * d[48] * d[72] - 2 * d[23] * d[40] * d[48] * d[72] - 2 * d[22] * d[41] * d[48] * d[72] + 2 * d[22] * d[37] * d[49] * d[72] - 2 * d[23] * d[39] * d[49] * d[72] + 2 * d[19] * d[40] * d[49] * d[72] - 2 * d[21] * d[41] * d[49] * d[72] + 2 * d[23] * d[36] * d[50] * d[72] - 2 * d[22] * d[39] * d[50] * d[72] - 2 * d[21] * d[40] * d[50] * d[72] + 2 * d[18] * d[41] * d[50] * d[72];
    coeffs[196] = 2 * d[33] * d[38] * d[46] * d[63] - 2 * d[35] * d[40] * d[46] * d[63] + 2 * d[29] * d[42] * d[46] * d[63] - 2 * d[31] * d[44] * d[46] * d[63] + 2 * d[33] * d[37] * d[47] * d[63] - 2 * d[34] * d[39] * d[47] * d[63] + 2 * d[28] * d[42] * d[47] * d[63] - 2 * d[30] * d[43] * d[47] * d[63] - 2 * d[34] * d[38] * d[48] * d[63] + 2 * d[35] * d[41] * d[48] * d[63] - 2 * d[29] * d[43] * d[48] * d[63] + 2 * d[32] * d[44] * d[48] * d[63] - 2 * d[35] * d[37] * d[49] * d[63] + 2 * d[34] * d[41] * d[49] * d[63] + 2 * d[32] * d[43] * d[49] * d[63] - 2 * d[28] * d[44] * d[49] * d[63] + 2 * d[35] * d[39] * d[50] * d[63] + 2 * d[34] * d[40] * d[50] * d[63] - 4 * d[33] * d[41] * d[50] * d[63] - 4 * d[32] * d[42] * d[50] * d[63] + 2 * d[31] * d[43] * d[50] * d[63] + 2 * d[30] * d[44] * d[50] * d[63] + 2 * d[29] * d[37] * d[51] * d[63] + 2 * d[28] * d[38] * d[51] * d[63] - 4 * d[32] * d[41] * d[51] * d[63] - 2 * d[30] * d[38] * d[52] * d[63] - 2 * d[29] * d[39] * d[52] * d[63] + 2 * d[32] * d[40] * d[52] * d[63] + 2 * d[31] * d[41] * d[52] * d[63] - 2 * d[31] * d[37] * d[53] * d[63] + 2 * d[32] * d[39] * d[53] * d[63] - 2 * d[28] * d[40] * d[53] * d[63] + 2 * d[30] * d[41] * d[53] * d[63] + 2 * d[34] * d[38] * d[45] * d[64] - 2 * d[35] * d[41] * d[45] * d[64] + 2 * d[29] * d[43] * d[45] * d[64] - 2 * d[32] * d[44] * d[45] * d[64] + 2 * d[34] * d[36] * d[47] * d[64] - 2 * d[33] * d[39] * d[47] * d[64] - 2 * d[30] * d[42] * d[47] * d[64] + 2 * d[27] * d[43] * d[47] * d[64] - 2 * d[33] * d[38] * d[48] * d[64] + 2 * d[35] * d[40] * d[48] * d[64] - 2 * d[29] * d[42] * d[48] * d[64] + 2 * d[31] * d[44] * d[48] * d[64] + 2 * d[35] * d[39] * d[49] * d[64] - 4 * d[34] * d[40] * d[49] * d[64] + 2 * d[33] * d[41] * d[49] * d[64] + 2 * d[32] * d[42] * d[49] * d[64] - 4 * d[31] * d[43] * d[49] * d[64] + 2 * d[30] * d[44] * d[49] * d[64] - 2 * d[35] * d[36] * d[50] * d[64] + 2 * d[33] * d[40] * d[50] * d[64] + 2 * d[31] * d[42] * d[50] * d[64] - 2 * d[27] * d[44] * d[50] * d[64] - 2 * d[30] * d[38] * d[51] * d[64] - 2 * d[29] * d[39] * d[51] * d[64] + 2 * d[32] * d[40] * d[51] * d[64] + 2 * d[31] * d[41] * d[51] * d[64] + 2 * d[29] * d[36] * d[52] * d[64] + 2 * d[27] * d[38] * d[52] * d[64] - 4 * d[31] * d[40] * d[52] * d[64] - 2 * d[32] * d[36] * d[53] * d[64] + 2 * d[31] * d[39] * d[53] * d[64] + 2 * d[30] * d[40] * d[53] * d[64] - 2 * d[27] * d[41] * d[53] * d[64] + 2 * d[35] * d[37] * d[45] * d[65] - 2 * d[34] * d[41] * d[45] * d[65] - 2 * d[32] * d[43] * d[45] * d[65] + 2 * d[28] * d[44] * d[45] * d[65] + 2 * d[35] * d[36] * d[46] * d[65] - 2 * d[33] * d[40] * d[46] * d[65] - 2 * d[31] * d[42] * d[46] * d[65] + 2 * d[27] * d[44] * d[46] * d[65] - 4 * d[35] * d[39] * d[48] * d[65] + 2 * d[34] * d[40] * d[48] * d[65] + 2 * d[33] * d[41] * d[48] * d[65] + 2 * d[32] * d[42] * d[48] * d[65] + 2 * d[31] * d[43] * d[48] * d[65] - 4 * d[30] * d[44] * d[48] * d[65] - 2 * d[33] * d[37] * d[49] * d[65] + 2 * d[34] * d[39] * d[49] * d[65] - 2 * d[28] * d[42] * d[49] * d[65] + 2 * d[30] * d[43] * d[49] * d[65] - 2 * d[34] * d[36] * d[50] * d[65] + 2 * d[33] * d[39] * d[50] * d[65] + 2 * d[30] * d[42] * d[50] * d[65] - 2 * d[27] * d[43] * d[50] * d[65] - 2 * d[31] * d[37] * d[51] * d[65] + 2 * d[32] * d[39] * d[51] * d[65] - 2 * d[28] * d[40] * d[51] * d[65] + 2 * d[30] * d[41] * d[51] * d[65] - 2 * d[32] * d[36] * d[52] * d[65] + 2 * d[31] * d[39] * d[52] * d[65] + 2 * d[30] * d[40] * d[52] * d[65] - 2 * d[27] * d[41] * d[52] * d[65] + 2 * d[28] * d[36] * d[53] * d[65] + 2 * d[27] * d[37] * d[53] * d[65] - 4 * d[30] * d[39] * d[53] * d[65] - d[29] * d[37] * d[45] * d[72] - d[28] * d[38] * d[45] * d[72] + 2 * d[32] * d[41] * d[45] * d[72] - d[29] * d[36] * d[46] * d[72] - d[27] * d[38] * d[46] * d[72] + 2 * d[31] * d[40] * d[46] * d[72] - d[28] * d[36] * d[47] * d[72] - d[27] * d[37] * d[47] * d[72] + 2 * d[30] * d[39] * d[47] * d[72] + 2 * d[30] * d[38] * d[48] * d[72] + 2 * d[29] * d[39] * d[48] * d[72] - 2 * d[32] * d[40] * d[48] * d[72] - 2 * d[31] * d[41] * d[48] * d[72] + 2 * d[31] * d[37] * d[49] * d[72] - 2 * d[32] * d[39] * d[49] * d[72] + 2 * d[28] * d[40] * d[49] * d[72] - 2 * d[30] * d[41] * d[49] * d[72] + 2 * d[32] * d[36] * d[50] * d[72] - 2 * d[31] * d[39] * d[50] * d[72] - 2 * d[30] * d[40] * d[50] * d[72] + 2 * d[27] * d[41] * d[50] * d[72];
    coeffs[197] = 2 * d[38] * d[42] * d[46] * d[63] - 2 * d[40] * d[44] * d[46] * d[63] + 2 * d[37] * d[42] * d[47] * d[63] - 2 * d[39] * d[43] * d[47] * d[63] - 2 * d[38] * d[43] * d[48] * d[63] + 2 * d[41] * d[44] * d[48] * d[63] + 2 * d[41] * d[43] * d[49] * d[63] - 2 * d[37] * d[44] * d[49] * d[63] - 4 * d[41] * d[42] * d[50] * d[63] + 2 * d[40] * d[43] * d[50] * d[63] + 2 * d[39] * d[44] * d[50] * d[63] + 2 * d[37] * d[38] * d[51] * d[63] - 2 * std::pow(d[41], 2) * d[51] * d[63] - 2 * d[38] * d[39] * d[52] * d[63] + 2 * d[40] * d[41] * d[52] * d[63] - 2 * d[37] * d[40] * d[53] * d[63] + 2 * d[39] * d[41] * d[53] * d[63] + 2 * d[38] * d[43] * d[45] * d[64] - 2 * d[41] * d[44] * d[45] * d[64] - 2 * d[39] * d[42] * d[47] * d[64] + 2 * d[36] * d[43] * d[47] * d[64] - 2 * d[38] * d[42] * d[48] * d[64] + 2 * d[40] * d[44] * d[48] * d[64] + 2 * d[41] * d[42] * d[49] * d[64] - 4 * d[40] * d[43] * d[49] * d[64] + 2 * d[39] * d[44] * d[49] * d[64] + 2 * d[40] * d[42] * d[50] * d[64] - 2 * d[36] * d[44] * d[50] * d[64] - 2 * d[38] * d[39] * d[51] * d[64] + 2 * d[40] * d[41] * d[51] * d[64] + 2 * d[36] * d[38] * d[52] * d[64] - 2 * std::pow(d[40], 2) * d[52] * d[64] + 2 * d[39] * d[40] * d[53] * d[64] - 2 * d[36] * d[41] * d[53] * d[64] - 2 * d[41] * d[43] * d[45] * d[65] + 2 * d[37] * d[44] * d[45] * d[65] - 2 * d[40] * d[42] * d[46] * d[65] + 2 * d[36] * d[44] * d[46] * d[65] + 2 * d[41] * d[42] * d[48] * d[65] + 2 * d[40] * d[43] * d[48] * d[65] - 4 * d[39] * d[44] * d[48] * d[65] - 2 * d[37] * d[42] * d[49] * d[65] + 2 * d[39] * d[43] * d[49] * d[65] + 2 * d[39] * d[42] * d[50] * d[65] - 2 * d[36] * d[43] * d[50] * d[65] - 2 * d[37] * d[40] * d[51] * d[65] + 2 * d[39] * d[41] * d[51] * d[65] + 2 * d[39] * d[40] * d[52] * d[65] - 2 * d[36] * d[41] * d[52] * d[65] + 2 * d[36] * d[37] * d[53] * d[65] - 2 * std::pow(d[39], 2) * d[53] * d[65] - d[37] * d[38] * d[45] * d[72] + std::pow(d[41], 2) * d[45] * d[72] - d[36] * d[38] * d[46] * d[72] + std::pow(d[40], 2) * d[46] * d[72] - d[36] * d[37] * d[47] * d[72] + std::pow(d[39], 2) * d[47] * d[72] + 2 * d[38] * d[39] * d[48] * d[72] - 2 * d[40] * d[41] * d[48] * d[72] + 2 * d[37] * d[40] * d[49] * d[72] - 2 * d[39] * d[41] * d[49] * d[72] - 2 * d[39] * d[40] * d[50] * d[72] + 2 * d[36] * d[41] * d[50] * d[72];
    coeffs[198] = 2 * d[15] * d[46] * d[47] * d[63] - 2 * d[16] * d[47] * d[48] * d[63] - 2 * d[17] * d[46] * d[49] * d[63] + 2 * d[17] * d[48] * d[50] * d[63] + 2 * d[16] * d[49] * d[50] * d[63] - 2 * d[15] * std::pow(d[50], 2) * d[63] + 2 * d[11] * d[46] * d[51] * d[63] + 2 * d[10] * d[47] * d[51] * d[63] - 4 * d[14] * d[50] * d[51] * d[63] - 2 * d[12] * d[47] * d[52] * d[63] - 2 * d[11] * d[48] * d[52] * d[63] + 2 * d[14] * d[49] * d[52] * d[63] + 2 * d[13] * d[50] * d[52] * d[63] - 2 * d[13] * d[46] * d[53] * d[63] + 2 * d[14] * d[48] * d[53] * d[63] - 2 * d[10] * d[49] * d[53] * d[63] + 2 * d[12] * d[50] * d[53] * d[63] + 2 * d[16] * d[45] * d[47] * d[64] - 2 * d[15] * d[47] * d[48] * d[64] + 2 * d[17] * d[48] * d[49] * d[64] - 2 * d[16] * std::pow(d[49], 2) * d[64] - 2 * d[17] * d[45] * d[50] * d[64] + 2 * d[15] * d[49] * d[50] * d[64] - 2 * d[12] * d[47] * d[51] * d[64] - 2 * d[11] * d[48] * d[51] * d[64] + 2 * d[14] * d[49] * d[51] * d[64] + 2 * d[13] * d[50] * d[51] * d[64] + 2 * d[11] * d[45] * d[52] * d[64] + 2 * d[9] * d[47] * d[52] * d[64] - 4 * d[13] * d[49] * d[52] * d[64] - 2 * d[14] * d[45] * d[53] * d[64] + 2 * d[13] * d[48] * d[53] * d[64] + 2 * d[12] * d[49] * d[53] * d[64] - 2 * d[9] * d[50] * d[53] * d[64] + 2 * d[17] * d[45] * d[46] * d[65] - 2 * d[17] * std::pow(d[48], 2) * d[65] - 2 * d[15] * d[46] * d[49] * d[65] + 2 * d[16] * d[48] * d[49] * d[65] - 2 * d[16] * d[45] * d[50] * d[65] + 2 * d[15] * d[48] * d[50] * d[65] - 2 * d[13] * d[46] * d[51] * d[65] + 2 * d[14] * d[48] * d[51] * d[65] - 2 * d[10] * d[49] * d[51] * d[65] + 2 * d[12] * d[50] * d[51] * d[65] - 2 * d[14] * d[45] * d[52] * d[65] + 2 * d[13] * d[48] * d[52] * d[65] + 2 * d[12] * d[49] * d[52] * d[65] - 2 * d[9] * d[50] * d[52] * d[65] + 2 * d[10] * d[45] * d[53] * d[65] + 2 * d[9] * d[46] * d[53] * d[65] - 4 * d[12] * d[48] * d[53] * d[65] - d[11] * d[45] * d[46] * d[72] - d[10] * d[45] * d[47] * d[72] - d[9] * d[46] * d[47] * d[72] + 2 * d[12] * d[47] * d[48] * d[72] + d[11] * std::pow(d[48], 2) * d[72] + 2 * d[13] * d[46] * d[49] * d[72] - 2 * d[14] * d[48] * d[49] * d[72] + d[10] * std::pow(d[49], 2) * d[72] + 2 * d[14] * d[45] * d[50] * d[72] - 2 * d[13] * d[48] * d[50] * d[72] - 2 * d[12] * d[49] * d[50] * d[72] + d[9] * std::pow(d[50], 2) * d[72];
    coeffs[199] = 2 * d[24] * d[46] * d[47] * d[63] - 2 * d[25] * d[47] * d[48] * d[63] - 2 * d[26] * d[46] * d[49] * d[63] + 2 * d[26] * d[48] * d[50] * d[63] + 2 * d[25] * d[49] * d[50] * d[63] - 2 * d[24] * std::pow(d[50], 2) * d[63] + 2 * d[20] * d[46] * d[51] * d[63] + 2 * d[19] * d[47] * d[51] * d[63] - 4 * d[23] * d[50] * d[51] * d[63] - 2 * d[21] * d[47] * d[52] * d[63] - 2 * d[20] * d[48] * d[52] * d[63] + 2 * d[23] * d[49] * d[52] * d[63] + 2 * d[22] * d[50] * d[52] * d[63] - 2 * d[22] * d[46] * d[53] * d[63] + 2 * d[23] * d[48] * d[53] * d[63] - 2 * d[19] * d[49] * d[53] * d[63] + 2 * d[21] * d[50] * d[53] * d[63] + 2 * d[25] * d[45] * d[47] * d[64] - 2 * d[24] * d[47] * d[48] * d[64] + 2 * d[26] * d[48] * d[49] * d[64] - 2 * d[25] * std::pow(d[49], 2) * d[64] - 2 * d[26] * d[45] * d[50] * d[64] + 2 * d[24] * d[49] * d[50] * d[64] - 2 * d[21] * d[47] * d[51] * d[64] - 2 * d[20] * d[48] * d[51] * d[64] + 2 * d[23] * d[49] * d[51] * d[64] + 2 * d[22] * d[50] * d[51] * d[64] + 2 * d[20] * d[45] * d[52] * d[64] + 2 * d[18] * d[47] * d[52] * d[64] - 4 * d[22] * d[49] * d[52] * d[64] - 2 * d[23] * d[45] * d[53] * d[64] + 2 * d[22] * d[48] * d[53] * d[64] + 2 * d[21] * d[49] * d[53] * d[64] - 2 * d[18] * d[50] * d[53] * d[64] + 2 * d[26] * d[45] * d[46] * d[65] - 2 * d[26] * std::pow(d[48], 2) * d[65] - 2 * d[24] * d[46] * d[49] * d[65] + 2 * d[25] * d[48] * d[49] * d[65] - 2 * d[25] * d[45] * d[50] * d[65] + 2 * d[24] * d[48] * d[50] * d[65] - 2 * d[22] * d[46] * d[51] * d[65] + 2 * d[23] * d[48] * d[51] * d[65] - 2 * d[19] * d[49] * d[51] * d[65] + 2 * d[21] * d[50] * d[51] * d[65] - 2 * d[23] * d[45] * d[52] * d[65] + 2 * d[22] * d[48] * d[52] * d[65] + 2 * d[21] * d[49] * d[52] * d[65] - 2 * d[18] * d[50] * d[52] * d[65] + 2 * d[19] * d[45] * d[53] * d[65] + 2 * d[18] * d[46] * d[53] * d[65] - 4 * d[21] * d[48] * d[53] * d[65] - d[20] * d[45] * d[46] * d[72] - d[19] * d[45] * d[47] * d[72] - d[18] * d[46] * d[47] * d[72] + 2 * d[21] * d[47] * d[48] * d[72] + d[20] * std::pow(d[48], 2) * d[72] + 2 * d[22] * d[46] * d[49] * d[72] - 2 * d[23] * d[48] * d[49] * d[72] + d[19] * std::pow(d[49], 2) * d[72] + 2 * d[23] * d[45] * d[50] * d[72] - 2 * d[22] * d[48] * d[50] * d[72] - 2 * d[21] * d[49] * d[50] * d[72] + d[18] * std::pow(d[50], 2) * d[72];
    coeffs[200] = 2 * d[33] * d[46] * d[47] * d[63] - 2 * d[34] * d[47] * d[48] * d[63] - 2 * d[35] * d[46] * d[49] * d[63] + 2 * d[35] * d[48] * d[50] * d[63] + 2 * d[34] * d[49] * d[50] * d[63] - 2 * d[33] * std::pow(d[50], 2) * d[63] + 2 * d[29] * d[46] * d[51] * d[63] + 2 * d[28] * d[47] * d[51] * d[63] - 4 * d[32] * d[50] * d[51] * d[63] - 2 * d[30] * d[47] * d[52] * d[63] - 2 * d[29] * d[48] * d[52] * d[63] + 2 * d[32] * d[49] * d[52] * d[63] + 2 * d[31] * d[50] * d[52] * d[63] - 2 * d[31] * d[46] * d[53] * d[63] + 2 * d[32] * d[48] * d[53] * d[63] - 2 * d[28] * d[49] * d[53] * d[63] + 2 * d[30] * d[50] * d[53] * d[63] + 2 * d[34] * d[45] * d[47] * d[64] - 2 * d[33] * d[47] * d[48] * d[64] + 2 * d[35] * d[48] * d[49] * d[64] - 2 * d[34] * std::pow(d[49], 2) * d[64] - 2 * d[35] * d[45] * d[50] * d[64] + 2 * d[33] * d[49] * d[50] * d[64] - 2 * d[30] * d[47] * d[51] * d[64] - 2 * d[29] * d[48] * d[51] * d[64] + 2 * d[32] * d[49] * d[51] * d[64] + 2 * d[31] * d[50] * d[51] * d[64] + 2 * d[29] * d[45] * d[52] * d[64] + 2 * d[27] * d[47] * d[52] * d[64] - 4 * d[31] * d[49] * d[52] * d[64] - 2 * d[32] * d[45] * d[53] * d[64] + 2 * d[31] * d[48] * d[53] * d[64] + 2 * d[30] * d[49] * d[53] * d[64] - 2 * d[27] * d[50] * d[53] * d[64] + 2 * d[35] * d[45] * d[46] * d[65] - 2 * d[35] * std::pow(d[48], 2) * d[65] - 2 * d[33] * d[46] * d[49] * d[65] + 2 * d[34] * d[48] * d[49] * d[65] - 2 * d[34] * d[45] * d[50] * d[65] + 2 * d[33] * d[48] * d[50] * d[65] - 2 * d[31] * d[46] * d[51] * d[65] + 2 * d[32] * d[48] * d[51] * d[65] - 2 * d[28] * d[49] * d[51] * d[65] + 2 * d[30] * d[50] * d[51] * d[65] - 2 * d[32] * d[45] * d[52] * d[65] + 2 * d[31] * d[48] * d[52] * d[65] + 2 * d[30] * d[49] * d[52] * d[65] - 2 * d[27] * d[50] * d[52] * d[65] + 2 * d[28] * d[45] * d[53] * d[65] + 2 * d[27] * d[46] * d[53] * d[65] - 4 * d[30] * d[48] * d[53] * d[65] - d[29] * d[45] * d[46] * d[72] - d[28] * d[45] * d[47] * d[72] - d[27] * d[46] * d[47] * d[72] + 2 * d[30] * d[47] * d[48] * d[72] + d[29] * std::pow(d[48], 2) * d[72] + 2 * d[31] * d[46] * d[49] * d[72] - 2 * d[32] * d[48] * d[49] * d[72] + d[28] * std::pow(d[49], 2) * d[72] + 2 * d[32] * d[45] * d[50] * d[72] - 2 * d[31] * d[48] * d[50] * d[72] - 2 * d[30] * d[49] * d[50] * d[72] + d[27] * std::pow(d[50], 2) * d[72];
    coeffs[201] = 2 * d[42] * d[46] * d[47] * d[63] - 2 * d[43] * d[47] * d[48] * d[63] - 2 * d[44] * d[46] * d[49] * d[63] + 2 * d[44] * d[48] * d[50] * d[63] + 2 * d[43] * d[49] * d[50] * d[63] - 2 * d[42] * std::pow(d[50], 2) * d[63] + 2 * d[38] * d[46] * d[51] * d[63] + 2 * d[37] * d[47] * d[51] * d[63] - 4 * d[41] * d[50] * d[51] * d[63] - 2 * d[39] * d[47] * d[52] * d[63] - 2 * d[38] * d[48] * d[52] * d[63] + 2 * d[41] * d[49] * d[52] * d[63] + 2 * d[40] * d[50] * d[52] * d[63] - 2 * d[40] * d[46] * d[53] * d[63] + 2 * d[41] * d[48] * d[53] * d[63] - 2 * d[37] * d[49] * d[53] * d[63] + 2 * d[39] * d[50] * d[53] * d[63] + 2 * d[43] * d[45] * d[47] * d[64] - 2 * d[42] * d[47] * d[48] * d[64] + 2 * d[44] * d[48] * d[49] * d[64] - 2 * d[43] * std::pow(d[49], 2) * d[64] - 2 * d[44] * d[45] * d[50] * d[64] + 2 * d[42] * d[49] * d[50] * d[64] - 2 * d[39] * d[47] * d[51] * d[64] - 2 * d[38] * d[48] * d[51] * d[64] + 2 * d[41] * d[49] * d[51] * d[64] + 2 * d[40] * d[50] * d[51] * d[64] + 2 * d[38] * d[45] * d[52] * d[64] + 2 * d[36] * d[47] * d[52] * d[64] - 4 * d[40] * d[49] * d[52] * d[64] - 2 * d[41] * d[45] * d[53] * d[64] + 2 * d[40] * d[48] * d[53] * d[64] + 2 * d[39] * d[49] * d[53] * d[64] - 2 * d[36] * d[50] * d[53] * d[64] + 2 * d[44] * d[45] * d[46] * d[65] - 2 * d[44] * std::pow(d[48], 2) * d[65] - 2 * d[42] * d[46] * d[49] * d[65] + 2 * d[43] * d[48] * d[49] * d[65] - 2 * d[43] * d[45] * d[50] * d[65] + 2 * d[42] * d[48] * d[50] * d[65] - 2 * d[40] * d[46] * d[51] * d[65] + 2 * d[41] * d[48] * d[51] * d[65] - 2 * d[37] * d[49] * d[51] * d[65] + 2 * d[39] * d[50] * d[51] * d[65] - 2 * d[41] * d[45] * d[52] * d[65] + 2 * d[40] * d[48] * d[52] * d[65] + 2 * d[39] * d[49] * d[52] * d[65] - 2 * d[36] * d[50] * d[52] * d[65] + 2 * d[37] * d[45] * d[53] * d[65] + 2 * d[36] * d[46] * d[53] * d[65] - 4 * d[39] * d[48] * d[53] * d[65] - d[38] * d[45] * d[46] * d[72] - d[37] * d[45] * d[47] * d[72] - d[36] * d[46] * d[47] * d[72] + 2 * d[39] * d[47] * d[48] * d[72] + d[38] * std::pow(d[48], 2) * d[72] + 2 * d[40] * d[46] * d[49] * d[72] - 2 * d[41] * d[48] * d[49] * d[72] + d[37] * std::pow(d[49], 2) * d[72] + 2 * d[41] * d[45] * d[50] * d[72] - 2 * d[40] * d[48] * d[50] * d[72] - 2 * d[39] * d[49] * d[50] * d[72] + d[36] * std::pow(d[50], 2) * d[72];
    coeffs[202] = 2 * d[46] * d[47] * d[51] * d[63] - 2 * std::pow(d[50], 2) * d[51] * d[63] - 2 * d[47] * d[48] * d[52] * d[63] + 2 * d[49] * d[50] * d[52] * d[63] - 2 * d[46] * d[49] * d[53] * d[63] + 2 * d[48] * d[50] * d[53] * d[63] - 2 * d[47] * d[48] * d[51] * d[64] + 2 * d[49] * d[50] * d[51] * d[64] + 2 * d[45] * d[47] * d[52] * d[64] - 2 * std::pow(d[49], 2) * d[52] * d[64] + 2 * d[48] * d[49] * d[53] * d[64] - 2 * d[45] * d[50] * d[53] * d[64] - 2 * d[46] * d[49] * d[51] * d[65] + 2 * d[48] * d[50] * d[51] * d[65] + 2 * d[48] * d[49] * d[52] * d[65] - 2 * d[45] * d[50] * d[52] * d[65] + 2 * d[45] * d[46] * d[53] * d[65] - 2 * std::pow(d[48], 2) * d[53] * d[65] - d[45] * d[46] * d[47] * d[72] + d[47] * std::pow(d[48], 2) * d[72] + d[46] * std::pow(d[49], 2) * d[72] - 2 * d[48] * d[49] * d[50] * d[72] + d[45] * std::pow(d[50], 2) * d[72];
    coeffs[203] = 2 * d[6] * d[10] * d[11] * d[63] - 2 * d[7] * d[11] * d[12] * d[63] - 2 * d[8] * d[10] * d[13] * d[63] + 2 * d[8] * d[12] * d[14] * d[63] + 2 * d[7] * d[13] * d[14] * d[63] - 2 * d[6] * std::pow(d[14], 2) * d[63] + 2 * d[2] * d[10] * d[15] * d[63] + 2 * d[1] * d[11] * d[15] * d[63] - 4 * d[5] * d[14] * d[15] * d[63] - 2 * d[3] * d[11] * d[16] * d[63] - 2 * d[2] * d[12] * d[16] * d[63] + 2 * d[5] * d[13] * d[16] * d[63] + 2 * d[4] * d[14] * d[16] * d[63] - 2 * d[4] * d[10] * d[17] * d[63] + 2 * d[5] * d[12] * d[17] * d[63] - 2 * d[1] * d[13] * d[17] * d[63] + 2 * d[3] * d[14] * d[17] * d[63] + d[10] * d[11] * std::pow(d[63], 2) - std::pow(d[14], 2) * std::pow(d[63], 2) + 2 * d[7] * d[9] * d[11] * d[64] - 2 * d[6] * d[11] * d[12] * d[64] + 2 * d[8] * d[12] * d[13] * d[64] - 2 * d[7] * std::pow(d[13], 2) * d[64] - 2 * d[8] * d[9] * d[14] * d[64] + 2 * d[6] * d[13] * d[14] * d[64] - 2 * d[3] * d[11] * d[15] * d[64] - 2 * d[2] * d[12] * d[15] * d[64] + 2 * d[5] * d[13] * d[15] * d[64] + 2 * d[4] * d[14] * d[15] * d[64] + 2 * d[2] * d[9] * d[16] * d[64] + 2 * d[0] * d[11] * d[16] * d[64] - 4 * d[4] * d[13] * d[16] * d[64] - 2 * d[5] * d[9] * d[17] * d[64] + 2 * d[4] * d[12] * d[17] * d[64] + 2 * d[3] * d[13] * d[17] * d[64] - 2 * d[0] * d[14] * d[17] * d[64] - 2 * d[11] * d[12] * d[63] * d[64] + 2 * d[13] * d[14] * d[63] * d[64] + d[9] * d[11] * std::pow(d[64], 2) - std::pow(d[13], 2) * std::pow(d[64], 2) + 2 * d[8] * d[9] * d[10] * d[65] - 2 * d[8] * std::pow(d[12], 2) * d[65] - 2 * d[6] * d[10] * d[13] * d[65] + 2 * d[7] * d[12] * d[13] * d[65] - 2 * d[7] * d[9] * d[14] * d[65] + 2 * d[6] * d[12] * d[14] * d[65] - 2 * d[4] * d[10] * d[15] * d[65] + 2 * d[5] * d[12] * d[15] * d[65] - 2 * d[1] * d[13] * d[15] * d[65] + 2 * d[3] * d[14] * d[15] * d[65] - 2 * d[5] * d[9] * d[16] * d[65] + 2 * d[4] * d[12] * d[16] * d[65] + 2 * d[3] * d[13] * d[16] * d[65] - 2 * d[0] * d[14] * d[16] * d[65] + 2 * d[1] * d[9] * d[17] * d[65] + 2 * d[0] * d[10] * d[17] * d[65] - 4 * d[3] * d[12] * d[17] * d[65] - 2 * d[10] * d[13] * d[63] * d[65] + 2 * d[12] * d[14] * d[63] * d[65] + 2 * d[12] * d[13] * d[64] * d[65] - 2 * d[9] * d[14] * d[64] * d[65] + d[9] * d[10] * std::pow(d[65], 2) - std::pow(d[12], 2) * std::pow(d[65], 2) - d[2] * d[9] * d[10] * d[72] - d[1] * d[9] * d[11] * d[72] - d[0] * d[10] * d[11] * d[72] + 2 * d[3] * d[11] * d[12] * d[72] + d[2] * std::pow(d[12], 2) * d[72] + 2 * d[4] * d[10] * d[13] * d[72] - 2 * d[5] * d[12] * d[13] * d[72] + d[1] * std::pow(d[13], 2) * d[72] + 2 * d[5] * d[9] * d[14] * d[72] - 2 * d[4] * d[12] * d[14] * d[72] - 2 * d[3] * d[13] * d[14] * d[72] + d[0] * std::pow(d[14], 2) * d[72];
    coeffs[204] = 2 * d[6] * d[11] * d[19] * d[63] - 2 * d[8] * d[13] * d[19] * d[63] + 2 * d[2] * d[15] * d[19] * d[63] - 2 * d[4] * d[17] * d[19] * d[63] + 2 * d[6] * d[10] * d[20] * d[63] - 2 * d[7] * d[12] * d[20] * d[63] + 2 * d[1] * d[15] * d[20] * d[63] - 2 * d[3] * d[16] * d[20] * d[63] - 2 * d[7] * d[11] * d[21] * d[63] + 2 * d[8] * d[14] * d[21] * d[63] - 2 * d[2] * d[16] * d[21] * d[63] + 2 * d[5] * d[17] * d[21] * d[63] - 2 * d[8] * d[10] * d[22] * d[63] + 2 * d[7] * d[14] * d[22] * d[63] + 2 * d[5] * d[16] * d[22] * d[63] - 2 * d[1] * d[17] * d[22] * d[63] + 2 * d[8] * d[12] * d[23] * d[63] + 2 * d[7] * d[13] * d[23] * d[63] - 4 * d[6] * d[14] * d[23] * d[63] - 4 * d[5] * d[15] * d[23] * d[63] + 2 * d[4] * d[16] * d[23] * d[63] + 2 * d[3] * d[17] * d[23] * d[63] + 2 * d[2] * d[10] * d[24] * d[63] + 2 * d[1] * d[11] * d[24] * d[63] - 4 * d[5] * d[14] * d[24] * d[63] - 2 * d[3] * d[11] * d[25] * d[63] - 2 * d[2] * d[12] * d[25] * d[63] + 2 * d[5] * d[13] * d[25] * d[63] + 2 * d[4] * d[14] * d[25] * d[63] - 2 * d[4] * d[10] * d[26] * d[63] + 2 * d[5] * d[12] * d[26] * d[63] - 2 * d[1] * d[13] * d[26] * d[63] + 2 * d[3] * d[14] * d[26] * d[63] + d[11] * d[19] * std::pow(d[63], 2) + d[10] * d[20] * std::pow(d[63], 2) - 2 * d[14] * d[23] * std::pow(d[63], 2) + 2 * d[7] * d[11] * d[18] * d[64] - 2 * d[8] * d[14] * d[18] * d[64] + 2 * d[2] * d[16] * d[18] * d[64] - 2 * d[5] * d[17] * d[18] * d[64] + 2 * d[7] * d[9] * d[20] * d[64] - 2 * d[6] * d[12] * d[20] * d[64] - 2 * d[3] * d[15] * d[20] * d[64] + 2 * d[0] * d[16] * d[20] * d[64] - 2 * d[6] * d[11] * d[21] * d[64] + 2 * d[8] * d[13] * d[21] * d[64] - 2 * d[2] * d[15] * d[21] * d[64] + 2 * d[4] * d[17] * d[21] * d[64] + 2 * d[8] * d[12] * d[22] * d[64] - 4 * d[7] * d[13] * d[22] * d[64] + 2 * d[6] * d[14] * d[22] * d[64] + 2 * d[5] * d[15] * d[22] * d[64] - 4 * d[4] * d[16] * d[22] * d[64] + 2 * d[3] * d[17] * d[22] * d[64] - 2 * d[8] * d[9] * d[23] * d[64] + 2 * d[6] * d[13] * d[23] * d[64] + 2 * d[4] * d[15] * d[23] * d[64] - 2 * d[0] * d[17] * d[23] * d[64] - 2 * d[3] * d[11] * d[24] * d[64] - 2 * d[2] * d[12] * d[24] * d[64] + 2 * d[5] * d[13] * d[24] * d[64] + 2 * d[4] * d[14] * d[24] * d[64] + 2 * d[2] * d[9] * d[25] * d[64] + 2 * d[0] * d[11] * d[25] * d[64] - 4 * d[4] * d[13] * d[25] * d[64] - 2 * d[5] * d[9] * d[26] * d[64] + 2 * d[4] * d[12] * d[26] * d[64] + 2 * d[3] * d[13] * d[26] * d[64] - 2 * d[0] * d[14] * d[26] * d[64] - 2 * d[12] * d[20] * d[63] * d[64] - 2 * d[11] * d[21] * d[63] * d[64] + 2 * d[14] * d[22] * d[63] * d[64] + 2 * d[13] * d[23] * d[63] * d[64] + d[11] * d[18] * std::pow(d[64], 2) + d[9] * d[20] * std::pow(d[64], 2) - 2 * d[13] * d[22] * std::pow(d[64], 2) + 2 * d[8] * d[10] * d[18] * d[65] - 2 * d[7] * d[14] * d[18] * d[65] - 2 * d[5] * d[16] * d[18] * d[65] + 2 * d[1] * d[17] * d[18] * d[65] + 2 * d[8] * d[9] * d[19] * d[65] - 2 * d[6] * d[13] * d[19] * d[65] - 2 * d[4] * d[15] * d[19] * d[65] + 2 * d[0] * d[17] * d[19] * d[65] - 4 * d[8] * d[12] * d[21] * d[65] + 2 * d[7] * d[13] * d[21] * d[65] + 2 * d[6] * d[14] * d[21] * d[65] + 2 * d[5] * d[15] * d[21] * d[65] + 2 * d[4] * d[16] * d[21] * d[65] - 4 * d[3] * d[17] * d[21] * d[65] - 2 * d[6] * d[10] * d[22] * d[65] + 2 * d[7] * d[12] * d[22] * d[65] - 2 * d[1] * d[15] * d[22] * d[65] + 2 * d[3] * d[16] * d[22] * d[65] - 2 * d[7] * d[9] * d[23] * d[65] + 2 * d[6] * d[12] * d[23] * d[65] + 2 * d[3] * d[15] * d[23] * d[65] - 2 * d[0] * d[16] * d[23] * d[65] - 2 * d[4] * d[10] * d[24] * d[65] + 2 * d[5] * d[12] * d[24] * d[65] - 2 * d[1] * d[13] * d[24] * d[65] + 2 * d[3] * d[14] * d[24] * d[65] - 2 * d[5] * d[9] * d[25] * d[65] + 2 * d[4] * d[12] * d[25] * d[65] + 2 * d[3] * d[13] * d[25] * d[65] - 2 * d[0] * d[14] * d[25] * d[65] + 2 * d[1] * d[9] * d[26] * d[65] + 2 * d[0] * d[10] * d[26] * d[65] - 4 * d[3] * d[12] * d[26] * d[65] - 2 * d[13] * d[19] * d[63] * d[65] + 2 * d[14] * d[21] * d[63] * d[65] - 2 * d[10] * d[22] * d[63] * d[65] + 2 * d[12] * d[23] * d[63] * d[65] - 2 * d[14] * d[18] * d[64] * d[65] + 2 * d[13] * d[21] * d[64] * d[65] + 2 * d[12] * d[22] * d[64] * d[65] - 2 * d[9] * d[23] * d[64] * d[65] + d[10] * d[18] * std::pow(d[65], 2) + d[9] * d[19] * std::pow(d[65], 2) - 2 * d[12] * d[21] * std::pow(d[65], 2) - d[2] * d[10] * d[18] * d[72] - d[1] * d[11] * d[18] * d[72] + 2 * d[5] * d[14] * d[18] * d[72] - d[2] * d[9] * d[19] * d[72] - d[0] * d[11] * d[19] * d[72] + 2 * d[4] * d[13] * d[19] * d[72] - d[1] * d[9] * d[20] * d[72] - d[0] * d[10] * d[20] * d[72] + 2 * d[3] * d[12] * d[20] * d[72] + 2 * d[3] * d[11] * d[21] * d[72] + 2 * d[2] * d[12] * d[21] * d[72] - 2 * d[5] * d[13] * d[21] * d[72] - 2 * d[4] * d[14] * d[21] * d[72] + 2 * d[4] * d[10] * d[22] * d[72] - 2 * d[5] * d[12] * d[22] * d[72] + 2 * d[1] * d[13] * d[22] * d[72] - 2 * d[3] * d[14] * d[22] * d[72] + 2 * d[5] * d[9] * d[23] * d[72] - 2 * d[4] * d[12] * d[23] * d[72] - 2 * d[3] * d[13] * d[23] * d[72] + 2 * d[0] * d[14] * d[23] * d[72];
    coeffs[205] = 2 * d[6] * d[19] * d[20] * d[63] - 2 * d[7] * d[20] * d[21] * d[63] - 2 * d[8] * d[19] * d[22] * d[63] + 2 * d[8] * d[21] * d[23] * d[63] + 2 * d[7] * d[22] * d[23] * d[63] - 2 * d[6] * std::pow(d[23], 2) * d[63] + 2 * d[2] * d[19] * d[24] * d[63] + 2 * d[1] * d[20] * d[24] * d[63] - 4 * d[5] * d[23] * d[24] * d[63] - 2 * d[3] * d[20] * d[25] * d[63] - 2 * d[2] * d[21] * d[25] * d[63] + 2 * d[5] * d[22] * d[25] * d[63] + 2 * d[4] * d[23] * d[25] * d[63] - 2 * d[4] * d[19] * d[26] * d[63] + 2 * d[5] * d[21] * d[26] * d[63] - 2 * d[1] * d[22] * d[26] * d[63] + 2 * d[3] * d[23] * d[26] * d[63] + d[19] * d[20] * std::pow(d[63], 2) - std::pow(d[23], 2) * std::pow(d[63], 2) + 2 * d[7] * d[18] * d[20] * d[64] - 2 * d[6] * d[20] * d[21] * d[64] + 2 * d[8] * d[21] * d[22] * d[64] - 2 * d[7] * std::pow(d[22], 2) * d[64] - 2 * d[8] * d[18] * d[23] * d[64] + 2 * d[6] * d[22] * d[23] * d[64] - 2 * d[3] * d[20] * d[24] * d[64] - 2 * d[2] * d[21] * d[24] * d[64] + 2 * d[5] * d[22] * d[24] * d[64] + 2 * d[4] * d[23] * d[24] * d[64] + 2 * d[2] * d[18] * d[25] * d[64] + 2 * d[0] * d[20] * d[25] * d[64] - 4 * d[4] * d[22] * d[25] * d[64] - 2 * d[5] * d[18] * d[26] * d[64] + 2 * d[4] * d[21] * d[26] * d[64] + 2 * d[3] * d[22] * d[26] * d[64] - 2 * d[0] * d[23] * d[26] * d[64] - 2 * d[20] * d[21] * d[63] * d[64] + 2 * d[22] * d[23] * d[63] * d[64] + d[18] * d[20] * std::pow(d[64], 2) - std::pow(d[22], 2) * std::pow(d[64], 2) + 2 * d[8] * d[18] * d[19] * d[65] - 2 * d[8] * std::pow(d[21], 2) * d[65] - 2 * d[6] * d[19] * d[22] * d[65] + 2 * d[7] * d[21] * d[22] * d[65] - 2 * d[7] * d[18] * d[23] * d[65] + 2 * d[6] * d[21] * d[23] * d[65] - 2 * d[4] * d[19] * d[24] * d[65] + 2 * d[5] * d[21] * d[24] * d[65] - 2 * d[1] * d[22] * d[24] * d[65] + 2 * d[3] * d[23] * d[24] * d[65] - 2 * d[5] * d[18] * d[25] * d[65] + 2 * d[4] * d[21] * d[25] * d[65] + 2 * d[3] * d[22] * d[25] * d[65] - 2 * d[0] * d[23] * d[25] * d[65] + 2 * d[1] * d[18] * d[26] * d[65] + 2 * d[0] * d[19] * d[26] * d[65] - 4 * d[3] * d[21] * d[26] * d[65] - 2 * d[19] * d[22] * d[63] * d[65] + 2 * d[21] * d[23] * d[63] * d[65] + 2 * d[21] * d[22] * d[64] * d[65] - 2 * d[18] * d[23] * d[64] * d[65] + d[18] * d[19] * std::pow(d[65], 2) - std::pow(d[21], 2) * std::pow(d[65], 2) - d[2] * d[18] * d[19] * d[72] - d[1] * d[18] * d[20] * d[72] - d[0] * d[19] * d[20] * d[72] + 2 * d[3] * d[20] * d[21] * d[72] + d[2] * std::pow(d[21], 2) * d[72] + 2 * d[4] * d[19] * d[22] * d[72] - 2 * d[5] * d[21] * d[22] * d[72] + d[1] * std::pow(d[22], 2) * d[72] + 2 * d[5] * d[18] * d[23] * d[72] - 2 * d[4] * d[21] * d[23] * d[72] - 2 * d[3] * d[22] * d[23] * d[72] + d[0] * std::pow(d[23], 2) * d[72];
    coeffs[206] = 2 * d[6] * d[11] * d[28] * d[63] - 2 * d[8] * d[13] * d[28] * d[63] + 2 * d[2] * d[15] * d[28] * d[63] - 2 * d[4] * d[17] * d[28] * d[63] + 2 * d[6] * d[10] * d[29] * d[63] - 2 * d[7] * d[12] * d[29] * d[63] + 2 * d[1] * d[15] * d[29] * d[63] - 2 * d[3] * d[16] * d[29] * d[63] - 2 * d[7] * d[11] * d[30] * d[63] + 2 * d[8] * d[14] * d[30] * d[63] - 2 * d[2] * d[16] * d[30] * d[63] + 2 * d[5] * d[17] * d[30] * d[63] - 2 * d[8] * d[10] * d[31] * d[63] + 2 * d[7] * d[14] * d[31] * d[63] + 2 * d[5] * d[16] * d[31] * d[63] - 2 * d[1] * d[17] * d[31] * d[63] + 2 * d[8] * d[12] * d[32] * d[63] + 2 * d[7] * d[13] * d[32] * d[63] - 4 * d[6] * d[14] * d[32] * d[63] - 4 * d[5] * d[15] * d[32] * d[63] + 2 * d[4] * d[16] * d[32] * d[63] + 2 * d[3] * d[17] * d[32] * d[63] + 2 * d[2] * d[10] * d[33] * d[63] + 2 * d[1] * d[11] * d[33] * d[63] - 4 * d[5] * d[14] * d[33] * d[63] - 2 * d[3] * d[11] * d[34] * d[63] - 2 * d[2] * d[12] * d[34] * d[63] + 2 * d[5] * d[13] * d[34] * d[63] + 2 * d[4] * d[14] * d[34] * d[63] - 2 * d[4] * d[10] * d[35] * d[63] + 2 * d[5] * d[12] * d[35] * d[63] - 2 * d[1] * d[13] * d[35] * d[63] + 2 * d[3] * d[14] * d[35] * d[63] + d[11] * d[28] * std::pow(d[63], 2) + d[10] * d[29] * std::pow(d[63], 2) - 2 * d[14] * d[32] * std::pow(d[63], 2) + 2 * d[7] * d[11] * d[27] * d[64] - 2 * d[8] * d[14] * d[27] * d[64] + 2 * d[2] * d[16] * d[27] * d[64] - 2 * d[5] * d[17] * d[27] * d[64] + 2 * d[7] * d[9] * d[29] * d[64] - 2 * d[6] * d[12] * d[29] * d[64] - 2 * d[3] * d[15] * d[29] * d[64] + 2 * d[0] * d[16] * d[29] * d[64] - 2 * d[6] * d[11] * d[30] * d[64] + 2 * d[8] * d[13] * d[30] * d[64] - 2 * d[2] * d[15] * d[30] * d[64] + 2 * d[4] * d[17] * d[30] * d[64] + 2 * d[8] * d[12] * d[31] * d[64] - 4 * d[7] * d[13] * d[31] * d[64] + 2 * d[6] * d[14] * d[31] * d[64] + 2 * d[5] * d[15] * d[31] * d[64] - 4 * d[4] * d[16] * d[31] * d[64] + 2 * d[3] * d[17] * d[31] * d[64] - 2 * d[8] * d[9] * d[32] * d[64] + 2 * d[6] * d[13] * d[32] * d[64] + 2 * d[4] * d[15] * d[32] * d[64] - 2 * d[0] * d[17] * d[32] * d[64] - 2 * d[3] * d[11] * d[33] * d[64] - 2 * d[2] * d[12] * d[33] * d[64] + 2 * d[5] * d[13] * d[33] * d[64] + 2 * d[4] * d[14] * d[33] * d[64] + 2 * d[2] * d[9] * d[34] * d[64] + 2 * d[0] * d[11] * d[34] * d[64] - 4 * d[4] * d[13] * d[34] * d[64] - 2 * d[5] * d[9] * d[35] * d[64] + 2 * d[4] * d[12] * d[35] * d[64] + 2 * d[3] * d[13] * d[35] * d[64] - 2 * d[0] * d[14] * d[35] * d[64] - 2 * d[12] * d[29] * d[63] * d[64] - 2 * d[11] * d[30] * d[63] * d[64] + 2 * d[14] * d[31] * d[63] * d[64] + 2 * d[13] * d[32] * d[63] * d[64] + d[11] * d[27] * std::pow(d[64], 2) + d[9] * d[29] * std::pow(d[64], 2) - 2 * d[13] * d[31] * std::pow(d[64], 2) + 2 * d[8] * d[10] * d[27] * d[65] - 2 * d[7] * d[14] * d[27] * d[65] - 2 * d[5] * d[16] * d[27] * d[65] + 2 * d[1] * d[17] * d[27] * d[65] + 2 * d[8] * d[9] * d[28] * d[65] - 2 * d[6] * d[13] * d[28] * d[65] - 2 * d[4] * d[15] * d[28] * d[65] + 2 * d[0] * d[17] * d[28] * d[65] - 4 * d[8] * d[12] * d[30] * d[65] + 2 * d[7] * d[13] * d[30] * d[65] + 2 * d[6] * d[14] * d[30] * d[65] + 2 * d[5] * d[15] * d[30] * d[65] + 2 * d[4] * d[16] * d[30] * d[65] - 4 * d[3] * d[17] * d[30] * d[65] - 2 * d[6] * d[10] * d[31] * d[65] + 2 * d[7] * d[12] * d[31] * d[65] - 2 * d[1] * d[15] * d[31] * d[65] + 2 * d[3] * d[16] * d[31] * d[65] - 2 * d[7] * d[9] * d[32] * d[65] + 2 * d[6] * d[12] * d[32] * d[65] + 2 * d[3] * d[15] * d[32] * d[65] - 2 * d[0] * d[16] * d[32] * d[65] - 2 * d[4] * d[10] * d[33] * d[65] + 2 * d[5] * d[12] * d[33] * d[65] - 2 * d[1] * d[13] * d[33] * d[65] + 2 * d[3] * d[14] * d[33] * d[65] - 2 * d[5] * d[9] * d[34] * d[65] + 2 * d[4] * d[12] * d[34] * d[65] + 2 * d[3] * d[13] * d[34] * d[65] - 2 * d[0] * d[14] * d[34] * d[65] + 2 * d[1] * d[9] * d[35] * d[65] + 2 * d[0] * d[10] * d[35] * d[65] - 4 * d[3] * d[12] * d[35] * d[65] - 2 * d[13] * d[28] * d[63] * d[65] + 2 * d[14] * d[30] * d[63] * d[65] - 2 * d[10] * d[31] * d[63] * d[65] + 2 * d[12] * d[32] * d[63] * d[65] - 2 * d[14] * d[27] * d[64] * d[65] + 2 * d[13] * d[30] * d[64] * d[65] + 2 * d[12] * d[31] * d[64] * d[65] - 2 * d[9] * d[32] * d[64] * d[65] + d[10] * d[27] * std::pow(d[65], 2) + d[9] * d[28] * std::pow(d[65], 2) - 2 * d[12] * d[30] * std::pow(d[65], 2) - d[2] * d[10] * d[27] * d[72] - d[1] * d[11] * d[27] * d[72] + 2 * d[5] * d[14] * d[27] * d[72] - d[2] * d[9] * d[28] * d[72] - d[0] * d[11] * d[28] * d[72] + 2 * d[4] * d[13] * d[28] * d[72] - d[1] * d[9] * d[29] * d[72] - d[0] * d[10] * d[29] * d[72] + 2 * d[3] * d[12] * d[29] * d[72] + 2 * d[3] * d[11] * d[30] * d[72] + 2 * d[2] * d[12] * d[30] * d[72] - 2 * d[5] * d[13] * d[30] * d[72] - 2 * d[4] * d[14] * d[30] * d[72] + 2 * d[4] * d[10] * d[31] * d[72] - 2 * d[5] * d[12] * d[31] * d[72] + 2 * d[1] * d[13] * d[31] * d[72] - 2 * d[3] * d[14] * d[31] * d[72] + 2 * d[5] * d[9] * d[32] * d[72] - 2 * d[4] * d[12] * d[32] * d[72] - 2 * d[3] * d[13] * d[32] * d[72] + 2 * d[0] * d[14] * d[32] * d[72];
    coeffs[207] = 2 * d[6] * d[20] * d[28] * d[63] - 2 * d[8] * d[22] * d[28] * d[63] + 2 * d[2] * d[24] * d[28] * d[63] - 2 * d[4] * d[26] * d[28] * d[63] + 2 * d[6] * d[19] * d[29] * d[63] - 2 * d[7] * d[21] * d[29] * d[63] + 2 * d[1] * d[24] * d[29] * d[63] - 2 * d[3] * d[25] * d[29] * d[63] - 2 * d[7] * d[20] * d[30] * d[63] + 2 * d[8] * d[23] * d[30] * d[63] - 2 * d[2] * d[25] * d[30] * d[63] + 2 * d[5] * d[26] * d[30] * d[63] - 2 * d[8] * d[19] * d[31] * d[63] + 2 * d[7] * d[23] * d[31] * d[63] + 2 * d[5] * d[25] * d[31] * d[63] - 2 * d[1] * d[26] * d[31] * d[63] + 2 * d[8] * d[21] * d[32] * d[63] + 2 * d[7] * d[22] * d[32] * d[63] - 4 * d[6] * d[23] * d[32] * d[63] - 4 * d[5] * d[24] * d[32] * d[63] + 2 * d[4] * d[25] * d[32] * d[63] + 2 * d[3] * d[26] * d[32] * d[63] + 2 * d[2] * d[19] * d[33] * d[63] + 2 * d[1] * d[20] * d[33] * d[63] - 4 * d[5] * d[23] * d[33] * d[63] - 2 * d[3] * d[20] * d[34] * d[63] - 2 * d[2] * d[21] * d[34] * d[63] + 2 * d[5] * d[22] * d[34] * d[63] + 2 * d[4] * d[23] * d[34] * d[63] - 2 * d[4] * d[19] * d[35] * d[63] + 2 * d[5] * d[21] * d[35] * d[63] - 2 * d[1] * d[22] * d[35] * d[63] + 2 * d[3] * d[23] * d[35] * d[63] + d[20] * d[28] * std::pow(d[63], 2) + d[19] * d[29] * std::pow(d[63], 2) - 2 * d[23] * d[32] * std::pow(d[63], 2) + 2 * d[7] * d[20] * d[27] * d[64] - 2 * d[8] * d[23] * d[27] * d[64] + 2 * d[2] * d[25] * d[27] * d[64] - 2 * d[5] * d[26] * d[27] * d[64] + 2 * d[7] * d[18] * d[29] * d[64] - 2 * d[6] * d[21] * d[29] * d[64] - 2 * d[3] * d[24] * d[29] * d[64] + 2 * d[0] * d[25] * d[29] * d[64] - 2 * d[6] * d[20] * d[30] * d[64] + 2 * d[8] * d[22] * d[30] * d[64] - 2 * d[2] * d[24] * d[30] * d[64] + 2 * d[4] * d[26] * d[30] * d[64] + 2 * d[8] * d[21] * d[31] * d[64] - 4 * d[7] * d[22] * d[31] * d[64] + 2 * d[6] * d[23] * d[31] * d[64] + 2 * d[5] * d[24] * d[31] * d[64] - 4 * d[4] * d[25] * d[31] * d[64] + 2 * d[3] * d[26] * d[31] * d[64] - 2 * d[8] * d[18] * d[32] * d[64] + 2 * d[6] * d[22] * d[32] * d[64] + 2 * d[4] * d[24] * d[32] * d[64] - 2 * d[0] * d[26] * d[32] * d[64] - 2 * d[3] * d[20] * d[33] * d[64] - 2 * d[2] * d[21] * d[33] * d[64] + 2 * d[5] * d[22] * d[33] * d[64] + 2 * d[4] * d[23] * d[33] * d[64] + 2 * d[2] * d[18] * d[34] * d[64] + 2 * d[0] * d[20] * d[34] * d[64] - 4 * d[4] * d[22] * d[34] * d[64] - 2 * d[5] * d[18] * d[35] * d[64] + 2 * d[4] * d[21] * d[35] * d[64] + 2 * d[3] * d[22] * d[35] * d[64] - 2 * d[0] * d[23] * d[35] * d[64] - 2 * d[21] * d[29] * d[63] * d[64] - 2 * d[20] * d[30] * d[63] * d[64] + 2 * d[23] * d[31] * d[63] * d[64] + 2 * d[22] * d[32] * d[63] * d[64] + d[20] * d[27] * std::pow(d[64], 2) + d[18] * d[29] * std::pow(d[64], 2) - 2 * d[22] * d[31] * std::pow(d[64], 2) + 2 * d[8] * d[19] * d[27] * d[65] - 2 * d[7] * d[23] * d[27] * d[65] - 2 * d[5] * d[25] * d[27] * d[65] + 2 * d[1] * d[26] * d[27] * d[65] + 2 * d[8] * d[18] * d[28] * d[65] - 2 * d[6] * d[22] * d[28] * d[65] - 2 * d[4] * d[24] * d[28] * d[65] + 2 * d[0] * d[26] * d[28] * d[65] - 4 * d[8] * d[21] * d[30] * d[65] + 2 * d[7] * d[22] * d[30] * d[65] + 2 * d[6] * d[23] * d[30] * d[65] + 2 * d[5] * d[24] * d[30] * d[65] + 2 * d[4] * d[25] * d[30] * d[65] - 4 * d[3] * d[26] * d[30] * d[65] - 2 * d[6] * d[19] * d[31] * d[65] + 2 * d[7] * d[21] * d[31] * d[65] - 2 * d[1] * d[24] * d[31] * d[65] + 2 * d[3] * d[25] * d[31] * d[65] - 2 * d[7] * d[18] * d[32] * d[65] + 2 * d[6] * d[21] * d[32] * d[65] + 2 * d[3] * d[24] * d[32] * d[65] - 2 * d[0] * d[25] * d[32] * d[65] - 2 * d[4] * d[19] * d[33] * d[65] + 2 * d[5] * d[21] * d[33] * d[65] - 2 * d[1] * d[22] * d[33] * d[65] + 2 * d[3] * d[23] * d[33] * d[65] - 2 * d[5] * d[18] * d[34] * d[65] + 2 * d[4] * d[21] * d[34] * d[65] + 2 * d[3] * d[22] * d[34] * d[65] - 2 * d[0] * d[23] * d[34] * d[65] + 2 * d[1] * d[18] * d[35] * d[65] + 2 * d[0] * d[19] * d[35] * d[65] - 4 * d[3] * d[21] * d[35] * d[65] - 2 * d[22] * d[28] * d[63] * d[65] + 2 * d[23] * d[30] * d[63] * d[65] - 2 * d[19] * d[31] * d[63] * d[65] + 2 * d[21] * d[32] * d[63] * d[65] - 2 * d[23] * d[27] * d[64] * d[65] + 2 * d[22] * d[30] * d[64] * d[65] + 2 * d[21] * d[31] * d[64] * d[65] - 2 * d[18] * d[32] * d[64] * d[65] + d[19] * d[27] * std::pow(d[65], 2) + d[18] * d[28] * std::pow(d[65], 2) - 2 * d[21] * d[30] * std::pow(d[65], 2) - d[2] * d[19] * d[27] * d[72] - d[1] * d[20] * d[27] * d[72] + 2 * d[5] * d[23] * d[27] * d[72] - d[2] * d[18] * d[28] * d[72] - d[0] * d[20] * d[28] * d[72] + 2 * d[4] * d[22] * d[28] * d[72] - d[1] * d[18] * d[29] * d[72] - d[0] * d[19] * d[29] * d[72] + 2 * d[3] * d[21] * d[29] * d[72] + 2 * d[3] * d[20] * d[30] * d[72] + 2 * d[2] * d[21] * d[30] * d[72] - 2 * d[5] * d[22] * d[30] * d[72] - 2 * d[4] * d[23] * d[30] * d[72] + 2 * d[4] * d[19] * d[31] * d[72] - 2 * d[5] * d[21] * d[31] * d[72] + 2 * d[1] * d[22] * d[31] * d[72] - 2 * d[3] * d[23] * d[31] * d[72] + 2 * d[5] * d[18] * d[32] * d[72] - 2 * d[4] * d[21] * d[32] * d[72] - 2 * d[3] * d[22] * d[32] * d[72] + 2 * d[0] * d[23] * d[32] * d[72];
    coeffs[208] = 2 * d[6] * d[28] * d[29] * d[63] - 2 * d[7] * d[29] * d[30] * d[63] - 2 * d[8] * d[28] * d[31] * d[63] + 2 * d[8] * d[30] * d[32] * d[63] + 2 * d[7] * d[31] * d[32] * d[63] - 2 * d[6] * std::pow(d[32], 2) * d[63] + 2 * d[2] * d[28] * d[33] * d[63] + 2 * d[1] * d[29] * d[33] * d[63] - 4 * d[5] * d[32] * d[33] * d[63] - 2 * d[3] * d[29] * d[34] * d[63] - 2 * d[2] * d[30] * d[34] * d[63] + 2 * d[5] * d[31] * d[34] * d[63] + 2 * d[4] * d[32] * d[34] * d[63] - 2 * d[4] * d[28] * d[35] * d[63] + 2 * d[5] * d[30] * d[35] * d[63] - 2 * d[1] * d[31] * d[35] * d[63] + 2 * d[3] * d[32] * d[35] * d[63] + d[28] * d[29] * std::pow(d[63], 2) - std::pow(d[32], 2) * std::pow(d[63], 2) + 2 * d[7] * d[27] * d[29] * d[64] - 2 * d[6] * d[29] * d[30] * d[64] + 2 * d[8] * d[30] * d[31] * d[64] - 2 * d[7] * std::pow(d[31], 2) * d[64] - 2 * d[8] * d[27] * d[32] * d[64] + 2 * d[6] * d[31] * d[32] * d[64] - 2 * d[3] * d[29] * d[33] * d[64] - 2 * d[2] * d[30] * d[33] * d[64] + 2 * d[5] * d[31] * d[33] * d[64] + 2 * d[4] * d[32] * d[33] * d[64] + 2 * d[2] * d[27] * d[34] * d[64] + 2 * d[0] * d[29] * d[34] * d[64] - 4 * d[4] * d[31] * d[34] * d[64] - 2 * d[5] * d[27] * d[35] * d[64] + 2 * d[4] * d[30] * d[35] * d[64] + 2 * d[3] * d[31] * d[35] * d[64] - 2 * d[0] * d[32] * d[35] * d[64] - 2 * d[29] * d[30] * d[63] * d[64] + 2 * d[31] * d[32] * d[63] * d[64] + d[27] * d[29] * std::pow(d[64], 2) - std::pow(d[31], 2) * std::pow(d[64], 2) + 2 * d[8] * d[27] * d[28] * d[65] - 2 * d[8] * std::pow(d[30], 2) * d[65] - 2 * d[6] * d[28] * d[31] * d[65] + 2 * d[7] * d[30] * d[31] * d[65] - 2 * d[7] * d[27] * d[32] * d[65] + 2 * d[6] * d[30] * d[32] * d[65] - 2 * d[4] * d[28] * d[33] * d[65] + 2 * d[5] * d[30] * d[33] * d[65] - 2 * d[1] * d[31] * d[33] * d[65] + 2 * d[3] * d[32] * d[33] * d[65] - 2 * d[5] * d[27] * d[34] * d[65] + 2 * d[4] * d[30] * d[34] * d[65] + 2 * d[3] * d[31] * d[34] * d[65] - 2 * d[0] * d[32] * d[34] * d[65] + 2 * d[1] * d[27] * d[35] * d[65] + 2 * d[0] * d[28] * d[35] * d[65] - 4 * d[3] * d[30] * d[35] * d[65] - 2 * d[28] * d[31] * d[63] * d[65] + 2 * d[30] * d[32] * d[63] * d[65] + 2 * d[30] * d[31] * d[64] * d[65] - 2 * d[27] * d[32] * d[64] * d[65] + d[27] * d[28] * std::pow(d[65], 2) - std::pow(d[30], 2) * std::pow(d[65], 2) - d[2] * d[27] * d[28] * d[72] - d[1] * d[27] * d[29] * d[72] - d[0] * d[28] * d[29] * d[72] + 2 * d[3] * d[29] * d[30] * d[72] + d[2] * std::pow(d[30], 2) * d[72] + 2 * d[4] * d[28] * d[31] * d[72] - 2 * d[5] * d[30] * d[31] * d[72] + d[1] * std::pow(d[31], 2) * d[72] + 2 * d[5] * d[27] * d[32] * d[72] - 2 * d[4] * d[30] * d[32] * d[72] - 2 * d[3] * d[31] * d[32] * d[72] + d[0] * std::pow(d[32], 2) * d[72];
    coeffs[209] = 2 * d[6] * d[11] * d[37] * d[63] - 2 * d[8] * d[13] * d[37] * d[63] + 2 * d[2] * d[15] * d[37] * d[63] - 2 * d[4] * d[17] * d[37] * d[63] + 2 * d[6] * d[10] * d[38] * d[63] - 2 * d[7] * d[12] * d[38] * d[63] + 2 * d[1] * d[15] * d[38] * d[63] - 2 * d[3] * d[16] * d[38] * d[63] - 2 * d[7] * d[11] * d[39] * d[63] + 2 * d[8] * d[14] * d[39] * d[63] - 2 * d[2] * d[16] * d[39] * d[63] + 2 * d[5] * d[17] * d[39] * d[63] - 2 * d[8] * d[10] * d[40] * d[63] + 2 * d[7] * d[14] * d[40] * d[63] + 2 * d[5] * d[16] * d[40] * d[63] - 2 * d[1] * d[17] * d[40] * d[63] + 2 * d[8] * d[12] * d[41] * d[63] + 2 * d[7] * d[13] * d[41] * d[63] - 4 * d[6] * d[14] * d[41] * d[63] - 4 * d[5] * d[15] * d[41] * d[63] + 2 * d[4] * d[16] * d[41] * d[63] + 2 * d[3] * d[17] * d[41] * d[63] + 2 * d[2] * d[10] * d[42] * d[63] + 2 * d[1] * d[11] * d[42] * d[63] - 4 * d[5] * d[14] * d[42] * d[63] - 2 * d[3] * d[11] * d[43] * d[63] - 2 * d[2] * d[12] * d[43] * d[63] + 2 * d[5] * d[13] * d[43] * d[63] + 2 * d[4] * d[14] * d[43] * d[63] - 2 * d[4] * d[10] * d[44] * d[63] + 2 * d[5] * d[12] * d[44] * d[63] - 2 * d[1] * d[13] * d[44] * d[63] + 2 * d[3] * d[14] * d[44] * d[63] + d[11] * d[37] * std::pow(d[63], 2) + d[10] * d[38] * std::pow(d[63], 2) - 2 * d[14] * d[41] * std::pow(d[63], 2) + 2 * d[7] * d[11] * d[36] * d[64] - 2 * d[8] * d[14] * d[36] * d[64] + 2 * d[2] * d[16] * d[36] * d[64] - 2 * d[5] * d[17] * d[36] * d[64] + 2 * d[7] * d[9] * d[38] * d[64] - 2 * d[6] * d[12] * d[38] * d[64] - 2 * d[3] * d[15] * d[38] * d[64] + 2 * d[0] * d[16] * d[38] * d[64] - 2 * d[6] * d[11] * d[39] * d[64] + 2 * d[8] * d[13] * d[39] * d[64] - 2 * d[2] * d[15] * d[39] * d[64] + 2 * d[4] * d[17] * d[39] * d[64] + 2 * d[8] * d[12] * d[40] * d[64] - 4 * d[7] * d[13] * d[40] * d[64] + 2 * d[6] * d[14] * d[40] * d[64] + 2 * d[5] * d[15] * d[40] * d[64] - 4 * d[4] * d[16] * d[40] * d[64] + 2 * d[3] * d[17] * d[40] * d[64] - 2 * d[8] * d[9] * d[41] * d[64] + 2 * d[6] * d[13] * d[41] * d[64] + 2 * d[4] * d[15] * d[41] * d[64] - 2 * d[0] * d[17] * d[41] * d[64] - 2 * d[3] * d[11] * d[42] * d[64] - 2 * d[2] * d[12] * d[42] * d[64] + 2 * d[5] * d[13] * d[42] * d[64] + 2 * d[4] * d[14] * d[42] * d[64] + 2 * d[2] * d[9] * d[43] * d[64] + 2 * d[0] * d[11] * d[43] * d[64] - 4 * d[4] * d[13] * d[43] * d[64] - 2 * d[5] * d[9] * d[44] * d[64] + 2 * d[4] * d[12] * d[44] * d[64] + 2 * d[3] * d[13] * d[44] * d[64] - 2 * d[0] * d[14] * d[44] * d[64] - 2 * d[12] * d[38] * d[63] * d[64] - 2 * d[11] * d[39] * d[63] * d[64] + 2 * d[14] * d[40] * d[63] * d[64] + 2 * d[13] * d[41] * d[63] * d[64] + d[11] * d[36] * std::pow(d[64], 2) + d[9] * d[38] * std::pow(d[64], 2) - 2 * d[13] * d[40] * std::pow(d[64], 2) + 2 * d[8] * d[10] * d[36] * d[65] - 2 * d[7] * d[14] * d[36] * d[65] - 2 * d[5] * d[16] * d[36] * d[65] + 2 * d[1] * d[17] * d[36] * d[65] + 2 * d[8] * d[9] * d[37] * d[65] - 2 * d[6] * d[13] * d[37] * d[65] - 2 * d[4] * d[15] * d[37] * d[65] + 2 * d[0] * d[17] * d[37] * d[65] - 4 * d[8] * d[12] * d[39] * d[65] + 2 * d[7] * d[13] * d[39] * d[65] + 2 * d[6] * d[14] * d[39] * d[65] + 2 * d[5] * d[15] * d[39] * d[65] + 2 * d[4] * d[16] * d[39] * d[65] - 4 * d[3] * d[17] * d[39] * d[65] - 2 * d[6] * d[10] * d[40] * d[65] + 2 * d[7] * d[12] * d[40] * d[65] - 2 * d[1] * d[15] * d[40] * d[65] + 2 * d[3] * d[16] * d[40] * d[65] - 2 * d[7] * d[9] * d[41] * d[65] + 2 * d[6] * d[12] * d[41] * d[65] + 2 * d[3] * d[15] * d[41] * d[65] - 2 * d[0] * d[16] * d[41] * d[65] - 2 * d[4] * d[10] * d[42] * d[65] + 2 * d[5] * d[12] * d[42] * d[65] - 2 * d[1] * d[13] * d[42] * d[65] + 2 * d[3] * d[14] * d[42] * d[65] - 2 * d[5] * d[9] * d[43] * d[65] + 2 * d[4] * d[12] * d[43] * d[65] + 2 * d[3] * d[13] * d[43] * d[65] - 2 * d[0] * d[14] * d[43] * d[65] + 2 * d[1] * d[9] * d[44] * d[65] + 2 * d[0] * d[10] * d[44] * d[65] - 4 * d[3] * d[12] * d[44] * d[65] - 2 * d[13] * d[37] * d[63] * d[65] + 2 * d[14] * d[39] * d[63] * d[65] - 2 * d[10] * d[40] * d[63] * d[65] + 2 * d[12] * d[41] * d[63] * d[65] - 2 * d[14] * d[36] * d[64] * d[65] + 2 * d[13] * d[39] * d[64] * d[65] + 2 * d[12] * d[40] * d[64] * d[65] - 2 * d[9] * d[41] * d[64] * d[65] + d[10] * d[36] * std::pow(d[65], 2) + d[9] * d[37] * std::pow(d[65], 2) - 2 * d[12] * d[39] * std::pow(d[65], 2) - d[2] * d[10] * d[36] * d[72] - d[1] * d[11] * d[36] * d[72] + 2 * d[5] * d[14] * d[36] * d[72] - d[2] * d[9] * d[37] * d[72] - d[0] * d[11] * d[37] * d[72] + 2 * d[4] * d[13] * d[37] * d[72] - d[1] * d[9] * d[38] * d[72] - d[0] * d[10] * d[38] * d[72] + 2 * d[3] * d[12] * d[38] * d[72] + 2 * d[3] * d[11] * d[39] * d[72] + 2 * d[2] * d[12] * d[39] * d[72] - 2 * d[5] * d[13] * d[39] * d[72] - 2 * d[4] * d[14] * d[39] * d[72] + 2 * d[4] * d[10] * d[40] * d[72] - 2 * d[5] * d[12] * d[40] * d[72] + 2 * d[1] * d[13] * d[40] * d[72] - 2 * d[3] * d[14] * d[40] * d[72] + 2 * d[5] * d[9] * d[41] * d[72] - 2 * d[4] * d[12] * d[41] * d[72] - 2 * d[3] * d[13] * d[41] * d[72] + 2 * d[0] * d[14] * d[41] * d[72];
    coeffs[210] = 2 * d[6] * d[20] * d[37] * d[63] - 2 * d[8] * d[22] * d[37] * d[63] + 2 * d[2] * d[24] * d[37] * d[63] - 2 * d[4] * d[26] * d[37] * d[63] + 2 * d[6] * d[19] * d[38] * d[63] - 2 * d[7] * d[21] * d[38] * d[63] + 2 * d[1] * d[24] * d[38] * d[63] - 2 * d[3] * d[25] * d[38] * d[63] - 2 * d[7] * d[20] * d[39] * d[63] + 2 * d[8] * d[23] * d[39] * d[63] - 2 * d[2] * d[25] * d[39] * d[63] + 2 * d[5] * d[26] * d[39] * d[63] - 2 * d[8] * d[19] * d[40] * d[63] + 2 * d[7] * d[23] * d[40] * d[63] + 2 * d[5] * d[25] * d[40] * d[63] - 2 * d[1] * d[26] * d[40] * d[63] + 2 * d[8] * d[21] * d[41] * d[63] + 2 * d[7] * d[22] * d[41] * d[63] - 4 * d[6] * d[23] * d[41] * d[63] - 4 * d[5] * d[24] * d[41] * d[63] + 2 * d[4] * d[25] * d[41] * d[63] + 2 * d[3] * d[26] * d[41] * d[63] + 2 * d[2] * d[19] * d[42] * d[63] + 2 * d[1] * d[20] * d[42] * d[63] - 4 * d[5] * d[23] * d[42] * d[63] - 2 * d[3] * d[20] * d[43] * d[63] - 2 * d[2] * d[21] * d[43] * d[63] + 2 * d[5] * d[22] * d[43] * d[63] + 2 * d[4] * d[23] * d[43] * d[63] - 2 * d[4] * d[19] * d[44] * d[63] + 2 * d[5] * d[21] * d[44] * d[63] - 2 * d[1] * d[22] * d[44] * d[63] + 2 * d[3] * d[23] * d[44] * d[63] + d[20] * d[37] * std::pow(d[63], 2) + d[19] * d[38] * std::pow(d[63], 2) - 2 * d[23] * d[41] * std::pow(d[63], 2) + 2 * d[7] * d[20] * d[36] * d[64] - 2 * d[8] * d[23] * d[36] * d[64] + 2 * d[2] * d[25] * d[36] * d[64] - 2 * d[5] * d[26] * d[36] * d[64] + 2 * d[7] * d[18] * d[38] * d[64] - 2 * d[6] * d[21] * d[38] * d[64] - 2 * d[3] * d[24] * d[38] * d[64] + 2 * d[0] * d[25] * d[38] * d[64] - 2 * d[6] * d[20] * d[39] * d[64] + 2 * d[8] * d[22] * d[39] * d[64] - 2 * d[2] * d[24] * d[39] * d[64] + 2 * d[4] * d[26] * d[39] * d[64] + 2 * d[8] * d[21] * d[40] * d[64] - 4 * d[7] * d[22] * d[40] * d[64] + 2 * d[6] * d[23] * d[40] * d[64] + 2 * d[5] * d[24] * d[40] * d[64] - 4 * d[4] * d[25] * d[40] * d[64] + 2 * d[3] * d[26] * d[40] * d[64] - 2 * d[8] * d[18] * d[41] * d[64] + 2 * d[6] * d[22] * d[41] * d[64] + 2 * d[4] * d[24] * d[41] * d[64] - 2 * d[0] * d[26] * d[41] * d[64] - 2 * d[3] * d[20] * d[42] * d[64] - 2 * d[2] * d[21] * d[42] * d[64] + 2 * d[5] * d[22] * d[42] * d[64] + 2 * d[4] * d[23] * d[42] * d[64] + 2 * d[2] * d[18] * d[43] * d[64] + 2 * d[0] * d[20] * d[43] * d[64] - 4 * d[4] * d[22] * d[43] * d[64] - 2 * d[5] * d[18] * d[44] * d[64] + 2 * d[4] * d[21] * d[44] * d[64] + 2 * d[3] * d[22] * d[44] * d[64] - 2 * d[0] * d[23] * d[44] * d[64] - 2 * d[21] * d[38] * d[63] * d[64] - 2 * d[20] * d[39] * d[63] * d[64] + 2 * d[23] * d[40] * d[63] * d[64] + 2 * d[22] * d[41] * d[63] * d[64] + d[20] * d[36] * std::pow(d[64], 2) + d[18] * d[38] * std::pow(d[64], 2) - 2 * d[22] * d[40] * std::pow(d[64], 2) + 2 * d[8] * d[19] * d[36] * d[65] - 2 * d[7] * d[23] * d[36] * d[65] - 2 * d[5] * d[25] * d[36] * d[65] + 2 * d[1] * d[26] * d[36] * d[65] + 2 * d[8] * d[18] * d[37] * d[65] - 2 * d[6] * d[22] * d[37] * d[65] - 2 * d[4] * d[24] * d[37] * d[65] + 2 * d[0] * d[26] * d[37] * d[65] - 4 * d[8] * d[21] * d[39] * d[65] + 2 * d[7] * d[22] * d[39] * d[65] + 2 * d[6] * d[23] * d[39] * d[65] + 2 * d[5] * d[24] * d[39] * d[65] + 2 * d[4] * d[25] * d[39] * d[65] - 4 * d[3] * d[26] * d[39] * d[65] - 2 * d[6] * d[19] * d[40] * d[65] + 2 * d[7] * d[21] * d[40] * d[65] - 2 * d[1] * d[24] * d[40] * d[65] + 2 * d[3] * d[25] * d[40] * d[65] - 2 * d[7] * d[18] * d[41] * d[65] + 2 * d[6] * d[21] * d[41] * d[65] + 2 * d[3] * d[24] * d[41] * d[65] - 2 * d[0] * d[25] * d[41] * d[65] - 2 * d[4] * d[19] * d[42] * d[65] + 2 * d[5] * d[21] * d[42] * d[65] - 2 * d[1] * d[22] * d[42] * d[65] + 2 * d[3] * d[23] * d[42] * d[65] - 2 * d[5] * d[18] * d[43] * d[65] + 2 * d[4] * d[21] * d[43] * d[65] + 2 * d[3] * d[22] * d[43] * d[65] - 2 * d[0] * d[23] * d[43] * d[65] + 2 * d[1] * d[18] * d[44] * d[65] + 2 * d[0] * d[19] * d[44] * d[65] - 4 * d[3] * d[21] * d[44] * d[65] - 2 * d[22] * d[37] * d[63] * d[65] + 2 * d[23] * d[39] * d[63] * d[65] - 2 * d[19] * d[40] * d[63] * d[65] + 2 * d[21] * d[41] * d[63] * d[65] - 2 * d[23] * d[36] * d[64] * d[65] + 2 * d[22] * d[39] * d[64] * d[65] + 2 * d[21] * d[40] * d[64] * d[65] - 2 * d[18] * d[41] * d[64] * d[65] + d[19] * d[36] * std::pow(d[65], 2) + d[18] * d[37] * std::pow(d[65], 2) - 2 * d[21] * d[39] * std::pow(d[65], 2) - d[2] * d[19] * d[36] * d[72] - d[1] * d[20] * d[36] * d[72] + 2 * d[5] * d[23] * d[36] * d[72] - d[2] * d[18] * d[37] * d[72] - d[0] * d[20] * d[37] * d[72] + 2 * d[4] * d[22] * d[37] * d[72] - d[1] * d[18] * d[38] * d[72] - d[0] * d[19] * d[38] * d[72] + 2 * d[3] * d[21] * d[38] * d[72] + 2 * d[3] * d[20] * d[39] * d[72] + 2 * d[2] * d[21] * d[39] * d[72] - 2 * d[5] * d[22] * d[39] * d[72] - 2 * d[4] * d[23] * d[39] * d[72] + 2 * d[4] * d[19] * d[40] * d[72] - 2 * d[5] * d[21] * d[40] * d[72] + 2 * d[1] * d[22] * d[40] * d[72] - 2 * d[3] * d[23] * d[40] * d[72] + 2 * d[5] * d[18] * d[41] * d[72] - 2 * d[4] * d[21] * d[41] * d[72] - 2 * d[3] * d[22] * d[41] * d[72] + 2 * d[0] * d[23] * d[41] * d[72];
    coeffs[211] = 2 * d[6] * d[29] * d[37] * d[63] - 2 * d[8] * d[31] * d[37] * d[63] + 2 * d[2] * d[33] * d[37] * d[63] - 2 * d[4] * d[35] * d[37] * d[63] + 2 * d[6] * d[28] * d[38] * d[63] - 2 * d[7] * d[30] * d[38] * d[63] + 2 * d[1] * d[33] * d[38] * d[63] - 2 * d[3] * d[34] * d[38] * d[63] - 2 * d[7] * d[29] * d[39] * d[63] + 2 * d[8] * d[32] * d[39] * d[63] - 2 * d[2] * d[34] * d[39] * d[63] + 2 * d[5] * d[35] * d[39] * d[63] - 2 * d[8] * d[28] * d[40] * d[63] + 2 * d[7] * d[32] * d[40] * d[63] + 2 * d[5] * d[34] * d[40] * d[63] - 2 * d[1] * d[35] * d[40] * d[63] + 2 * d[8] * d[30] * d[41] * d[63] + 2 * d[7] * d[31] * d[41] * d[63] - 4 * d[6] * d[32] * d[41] * d[63] - 4 * d[5] * d[33] * d[41] * d[63] + 2 * d[4] * d[34] * d[41] * d[63] + 2 * d[3] * d[35] * d[41] * d[63] + 2 * d[2] * d[28] * d[42] * d[63] + 2 * d[1] * d[29] * d[42] * d[63] - 4 * d[5] * d[32] * d[42] * d[63] - 2 * d[3] * d[29] * d[43] * d[63] - 2 * d[2] * d[30] * d[43] * d[63] + 2 * d[5] * d[31] * d[43] * d[63] + 2 * d[4] * d[32] * d[43] * d[63] - 2 * d[4] * d[28] * d[44] * d[63] + 2 * d[5] * d[30] * d[44] * d[63] - 2 * d[1] * d[31] * d[44] * d[63] + 2 * d[3] * d[32] * d[44] * d[63] + d[29] * d[37] * std::pow(d[63], 2) + d[28] * d[38] * std::pow(d[63], 2) - 2 * d[32] * d[41] * std::pow(d[63], 2) + 2 * d[7] * d[29] * d[36] * d[64] - 2 * d[8] * d[32] * d[36] * d[64] + 2 * d[2] * d[34] * d[36] * d[64] - 2 * d[5] * d[35] * d[36] * d[64] + 2 * d[7] * d[27] * d[38] * d[64] - 2 * d[6] * d[30] * d[38] * d[64] - 2 * d[3] * d[33] * d[38] * d[64] + 2 * d[0] * d[34] * d[38] * d[64] - 2 * d[6] * d[29] * d[39] * d[64] + 2 * d[8] * d[31] * d[39] * d[64] - 2 * d[2] * d[33] * d[39] * d[64] + 2 * d[4] * d[35] * d[39] * d[64] + 2 * d[8] * d[30] * d[40] * d[64] - 4 * d[7] * d[31] * d[40] * d[64] + 2 * d[6] * d[32] * d[40] * d[64] + 2 * d[5] * d[33] * d[40] * d[64] - 4 * d[4] * d[34] * d[40] * d[64] + 2 * d[3] * d[35] * d[40] * d[64] - 2 * d[8] * d[27] * d[41] * d[64] + 2 * d[6] * d[31] * d[41] * d[64] + 2 * d[4] * d[33] * d[41] * d[64] - 2 * d[0] * d[35] * d[41] * d[64] - 2 * d[3] * d[29] * d[42] * d[64] - 2 * d[2] * d[30] * d[42] * d[64] + 2 * d[5] * d[31] * d[42] * d[64] + 2 * d[4] * d[32] * d[42] * d[64] + 2 * d[2] * d[27] * d[43] * d[64] + 2 * d[0] * d[29] * d[43] * d[64] - 4 * d[4] * d[31] * d[43] * d[64] - 2 * d[5] * d[27] * d[44] * d[64] + 2 * d[4] * d[30] * d[44] * d[64] + 2 * d[3] * d[31] * d[44] * d[64] - 2 * d[0] * d[32] * d[44] * d[64] - 2 * d[30] * d[38] * d[63] * d[64] - 2 * d[29] * d[39] * d[63] * d[64] + 2 * d[32] * d[40] * d[63] * d[64] + 2 * d[31] * d[41] * d[63] * d[64] + d[29] * d[36] * std::pow(d[64], 2) + d[27] * d[38] * std::pow(d[64], 2) - 2 * d[31] * d[40] * std::pow(d[64], 2) + 2 * d[8] * d[28] * d[36] * d[65] - 2 * d[7] * d[32] * d[36] * d[65] - 2 * d[5] * d[34] * d[36] * d[65] + 2 * d[1] * d[35] * d[36] * d[65] + 2 * d[8] * d[27] * d[37] * d[65] - 2 * d[6] * d[31] * d[37] * d[65] - 2 * d[4] * d[33] * d[37] * d[65] + 2 * d[0] * d[35] * d[37] * d[65] - 4 * d[8] * d[30] * d[39] * d[65] + 2 * d[7] * d[31] * d[39] * d[65] + 2 * d[6] * d[32] * d[39] * d[65] + 2 * d[5] * d[33] * d[39] * d[65] + 2 * d[4] * d[34] * d[39] * d[65] - 4 * d[3] * d[35] * d[39] * d[65] - 2 * d[6] * d[28] * d[40] * d[65] + 2 * d[7] * d[30] * d[40] * d[65] - 2 * d[1] * d[33] * d[40] * d[65] + 2 * d[3] * d[34] * d[40] * d[65] - 2 * d[7] * d[27] * d[41] * d[65] + 2 * d[6] * d[30] * d[41] * d[65] + 2 * d[3] * d[33] * d[41] * d[65] - 2 * d[0] * d[34] * d[41] * d[65] - 2 * d[4] * d[28] * d[42] * d[65] + 2 * d[5] * d[30] * d[42] * d[65] - 2 * d[1] * d[31] * d[42] * d[65] + 2 * d[3] * d[32] * d[42] * d[65] - 2 * d[5] * d[27] * d[43] * d[65] + 2 * d[4] * d[30] * d[43] * d[65] + 2 * d[3] * d[31] * d[43] * d[65] - 2 * d[0] * d[32] * d[43] * d[65] + 2 * d[1] * d[27] * d[44] * d[65] + 2 * d[0] * d[28] * d[44] * d[65] - 4 * d[3] * d[30] * d[44] * d[65] - 2 * d[31] * d[37] * d[63] * d[65] + 2 * d[32] * d[39] * d[63] * d[65] - 2 * d[28] * d[40] * d[63] * d[65] + 2 * d[30] * d[41] * d[63] * d[65] - 2 * d[32] * d[36] * d[64] * d[65] + 2 * d[31] * d[39] * d[64] * d[65] + 2 * d[30] * d[40] * d[64] * d[65] - 2 * d[27] * d[41] * d[64] * d[65] + d[28] * d[36] * std::pow(d[65], 2) + d[27] * d[37] * std::pow(d[65], 2) - 2 * d[30] * d[39] * std::pow(d[65], 2) - d[2] * d[28] * d[36] * d[72] - d[1] * d[29] * d[36] * d[72] + 2 * d[5] * d[32] * d[36] * d[72] - d[2] * d[27] * d[37] * d[72] - d[0] * d[29] * d[37] * d[72] + 2 * d[4] * d[31] * d[37] * d[72] - d[1] * d[27] * d[38] * d[72] - d[0] * d[28] * d[38] * d[72] + 2 * d[3] * d[30] * d[38] * d[72] + 2 * d[3] * d[29] * d[39] * d[72] + 2 * d[2] * d[30] * d[39] * d[72] - 2 * d[5] * d[31] * d[39] * d[72] - 2 * d[4] * d[32] * d[39] * d[72] + 2 * d[4] * d[28] * d[40] * d[72] - 2 * d[5] * d[30] * d[40] * d[72] + 2 * d[1] * d[31] * d[40] * d[72] - 2 * d[3] * d[32] * d[40] * d[72] + 2 * d[5] * d[27] * d[41] * d[72] - 2 * d[4] * d[30] * d[41] * d[72] - 2 * d[3] * d[31] * d[41] * d[72] + 2 * d[0] * d[32] * d[41] * d[72];
    coeffs[212] = 2 * d[6] * d[37] * d[38] * d[63] - 2 * d[7] * d[38] * d[39] * d[63] - 2 * d[8] * d[37] * d[40] * d[63] + 2 * d[8] * d[39] * d[41] * d[63] + 2 * d[7] * d[40] * d[41] * d[63] - 2 * d[6] * std::pow(d[41], 2) * d[63] + 2 * d[2] * d[37] * d[42] * d[63] + 2 * d[1] * d[38] * d[42] * d[63] - 4 * d[5] * d[41] * d[42] * d[63] - 2 * d[3] * d[38] * d[43] * d[63] - 2 * d[2] * d[39] * d[43] * d[63] + 2 * d[5] * d[40] * d[43] * d[63] + 2 * d[4] * d[41] * d[43] * d[63] - 2 * d[4] * d[37] * d[44] * d[63] + 2 * d[5] * d[39] * d[44] * d[63] - 2 * d[1] * d[40] * d[44] * d[63] + 2 * d[3] * d[41] * d[44] * d[63] + d[37] * d[38] * std::pow(d[63], 2) - std::pow(d[41], 2) * std::pow(d[63], 2) + 2 * d[7] * d[36] * d[38] * d[64] - 2 * d[6] * d[38] * d[39] * d[64] + 2 * d[8] * d[39] * d[40] * d[64] - 2 * d[7] * std::pow(d[40], 2) * d[64] - 2 * d[8] * d[36] * d[41] * d[64] + 2 * d[6] * d[40] * d[41] * d[64] - 2 * d[3] * d[38] * d[42] * d[64] - 2 * d[2] * d[39] * d[42] * d[64] + 2 * d[5] * d[40] * d[42] * d[64] + 2 * d[4] * d[41] * d[42] * d[64] + 2 * d[2] * d[36] * d[43] * d[64] + 2 * d[0] * d[38] * d[43] * d[64] - 4 * d[4] * d[40] * d[43] * d[64] - 2 * d[5] * d[36] * d[44] * d[64] + 2 * d[4] * d[39] * d[44] * d[64] + 2 * d[3] * d[40] * d[44] * d[64] - 2 * d[0] * d[41] * d[44] * d[64] - 2 * d[38] * d[39] * d[63] * d[64] + 2 * d[40] * d[41] * d[63] * d[64] + d[36] * d[38] * std::pow(d[64], 2) - std::pow(d[40], 2) * std::pow(d[64], 2) + 2 * d[8] * d[36] * d[37] * d[65] - 2 * d[8] * std::pow(d[39], 2) * d[65] - 2 * d[6] * d[37] * d[40] * d[65] + 2 * d[7] * d[39] * d[40] * d[65] - 2 * d[7] * d[36] * d[41] * d[65] + 2 * d[6] * d[39] * d[41] * d[65] - 2 * d[4] * d[37] * d[42] * d[65] + 2 * d[5] * d[39] * d[42] * d[65] - 2 * d[1] * d[40] * d[42] * d[65] + 2 * d[3] * d[41] * d[42] * d[65] - 2 * d[5] * d[36] * d[43] * d[65] + 2 * d[4] * d[39] * d[43] * d[65] + 2 * d[3] * d[40] * d[43] * d[65] - 2 * d[0] * d[41] * d[43] * d[65] + 2 * d[1] * d[36] * d[44] * d[65] + 2 * d[0] * d[37] * d[44] * d[65] - 4 * d[3] * d[39] * d[44] * d[65] - 2 * d[37] * d[40] * d[63] * d[65] + 2 * d[39] * d[41] * d[63] * d[65] + 2 * d[39] * d[40] * d[64] * d[65] - 2 * d[36] * d[41] * d[64] * d[65] + d[36] * d[37] * std::pow(d[65], 2) - std::pow(d[39], 2) * std::pow(d[65], 2) - d[2] * d[36] * d[37] * d[72] - d[1] * d[36] * d[38] * d[72] - d[0] * d[37] * d[38] * d[72] + 2 * d[3] * d[38] * d[39] * d[72] + d[2] * std::pow(d[39], 2) * d[72] + 2 * d[4] * d[37] * d[40] * d[72] - 2 * d[5] * d[39] * d[40] * d[72] + d[1] * std::pow(d[40], 2) * d[72] + 2 * d[5] * d[36] * d[41] * d[72] - 2 * d[4] * d[39] * d[41] * d[72] - 2 * d[3] * d[40] * d[41] * d[72] + d[0] * std::pow(d[41], 2) * d[72];
    coeffs[213] = 2 * d[6] * d[11] * d[46] * d[63] - 2 * d[8] * d[13] * d[46] * d[63] + 2 * d[2] * d[15] * d[46] * d[63] - 2 * d[4] * d[17] * d[46] * d[63] + 2 * d[6] * d[10] * d[47] * d[63] - 2 * d[7] * d[12] * d[47] * d[63] + 2 * d[1] * d[15] * d[47] * d[63] - 2 * d[3] * d[16] * d[47] * d[63] - 2 * d[7] * d[11] * d[48] * d[63] + 2 * d[8] * d[14] * d[48] * d[63] - 2 * d[2] * d[16] * d[48] * d[63] + 2 * d[5] * d[17] * d[48] * d[63] - 2 * d[8] * d[10] * d[49] * d[63] + 2 * d[7] * d[14] * d[49] * d[63] + 2 * d[5] * d[16] * d[49] * d[63] - 2 * d[1] * d[17] * d[49] * d[63] + 2 * d[8] * d[12] * d[50] * d[63] + 2 * d[7] * d[13] * d[50] * d[63] - 4 * d[6] * d[14] * d[50] * d[63] - 4 * d[5] * d[15] * d[50] * d[63] + 2 * d[4] * d[16] * d[50] * d[63] + 2 * d[3] * d[17] * d[50] * d[63] + 2 * d[2] * d[10] * d[51] * d[63] + 2 * d[1] * d[11] * d[51] * d[63] - 4 * d[5] * d[14] * d[51] * d[63] - 2 * d[3] * d[11] * d[52] * d[63] - 2 * d[2] * d[12] * d[52] * d[63] + 2 * d[5] * d[13] * d[52] * d[63] + 2 * d[4] * d[14] * d[52] * d[63] - 2 * d[4] * d[10] * d[53] * d[63] + 2 * d[5] * d[12] * d[53] * d[63] - 2 * d[1] * d[13] * d[53] * d[63] + 2 * d[3] * d[14] * d[53] * d[63] + d[11] * d[46] * std::pow(d[63], 2) + d[10] * d[47] * std::pow(d[63], 2) - 2 * d[14] * d[50] * std::pow(d[63], 2) + 2 * d[7] * d[11] * d[45] * d[64] - 2 * d[8] * d[14] * d[45] * d[64] + 2 * d[2] * d[16] * d[45] * d[64] - 2 * d[5] * d[17] * d[45] * d[64] + 2 * d[7] * d[9] * d[47] * d[64] - 2 * d[6] * d[12] * d[47] * d[64] - 2 * d[3] * d[15] * d[47] * d[64] + 2 * d[0] * d[16] * d[47] * d[64] - 2 * d[6] * d[11] * d[48] * d[64] + 2 * d[8] * d[13] * d[48] * d[64] - 2 * d[2] * d[15] * d[48] * d[64] + 2 * d[4] * d[17] * d[48] * d[64] + 2 * d[8] * d[12] * d[49] * d[64] - 4 * d[7] * d[13] * d[49] * d[64] + 2 * d[6] * d[14] * d[49] * d[64] + 2 * d[5] * d[15] * d[49] * d[64] - 4 * d[4] * d[16] * d[49] * d[64] + 2 * d[3] * d[17] * d[49] * d[64] - 2 * d[8] * d[9] * d[50] * d[64] + 2 * d[6] * d[13] * d[50] * d[64] + 2 * d[4] * d[15] * d[50] * d[64] - 2 * d[0] * d[17] * d[50] * d[64] - 2 * d[3] * d[11] * d[51] * d[64] - 2 * d[2] * d[12] * d[51] * d[64] + 2 * d[5] * d[13] * d[51] * d[64] + 2 * d[4] * d[14] * d[51] * d[64] + 2 * d[2] * d[9] * d[52] * d[64] + 2 * d[0] * d[11] * d[52] * d[64] - 4 * d[4] * d[13] * d[52] * d[64] - 2 * d[5] * d[9] * d[53] * d[64] + 2 * d[4] * d[12] * d[53] * d[64] + 2 * d[3] * d[13] * d[53] * d[64] - 2 * d[0] * d[14] * d[53] * d[64] - 2 * d[12] * d[47] * d[63] * d[64] - 2 * d[11] * d[48] * d[63] * d[64] + 2 * d[14] * d[49] * d[63] * d[64] + 2 * d[13] * d[50] * d[63] * d[64] + d[11] * d[45] * std::pow(d[64], 2) + d[9] * d[47] * std::pow(d[64], 2) - 2 * d[13] * d[49] * std::pow(d[64], 2) + 2 * d[8] * d[10] * d[45] * d[65] - 2 * d[7] * d[14] * d[45] * d[65] - 2 * d[5] * d[16] * d[45] * d[65] + 2 * d[1] * d[17] * d[45] * d[65] + 2 * d[8] * d[9] * d[46] * d[65] - 2 * d[6] * d[13] * d[46] * d[65] - 2 * d[4] * d[15] * d[46] * d[65] + 2 * d[0] * d[17] * d[46] * d[65] - 4 * d[8] * d[12] * d[48] * d[65] + 2 * d[7] * d[13] * d[48] * d[65] + 2 * d[6] * d[14] * d[48] * d[65] + 2 * d[5] * d[15] * d[48] * d[65] + 2 * d[4] * d[16] * d[48] * d[65] - 4 * d[3] * d[17] * d[48] * d[65] - 2 * d[6] * d[10] * d[49] * d[65] + 2 * d[7] * d[12] * d[49] * d[65] - 2 * d[1] * d[15] * d[49] * d[65] + 2 * d[3] * d[16] * d[49] * d[65] - 2 * d[7] * d[9] * d[50] * d[65] + 2 * d[6] * d[12] * d[50] * d[65] + 2 * d[3] * d[15] * d[50] * d[65] - 2 * d[0] * d[16] * d[50] * d[65] - 2 * d[4] * d[10] * d[51] * d[65] + 2 * d[5] * d[12] * d[51] * d[65] - 2 * d[1] * d[13] * d[51] * d[65] + 2 * d[3] * d[14] * d[51] * d[65] - 2 * d[5] * d[9] * d[52] * d[65] + 2 * d[4] * d[12] * d[52] * d[65] + 2 * d[3] * d[13] * d[52] * d[65] - 2 * d[0] * d[14] * d[52] * d[65] + 2 * d[1] * d[9] * d[53] * d[65] + 2 * d[0] * d[10] * d[53] * d[65] - 4 * d[3] * d[12] * d[53] * d[65] - 2 * d[13] * d[46] * d[63] * d[65] + 2 * d[14] * d[48] * d[63] * d[65] - 2 * d[10] * d[49] * d[63] * d[65] + 2 * d[12] * d[50] * d[63] * d[65] - 2 * d[14] * d[45] * d[64] * d[65] + 2 * d[13] * d[48] * d[64] * d[65] + 2 * d[12] * d[49] * d[64] * d[65] - 2 * d[9] * d[50] * d[64] * d[65] + d[10] * d[45] * std::pow(d[65], 2) + d[9] * d[46] * std::pow(d[65], 2) - 2 * d[12] * d[48] * std::pow(d[65], 2) - d[2] * d[10] * d[45] * d[72] - d[1] * d[11] * d[45] * d[72] + 2 * d[5] * d[14] * d[45] * d[72] - d[2] * d[9] * d[46] * d[72] - d[0] * d[11] * d[46] * d[72] + 2 * d[4] * d[13] * d[46] * d[72] - d[1] * d[9] * d[47] * d[72] - d[0] * d[10] * d[47] * d[72] + 2 * d[3] * d[12] * d[47] * d[72] + 2 * d[3] * d[11] * d[48] * d[72] + 2 * d[2] * d[12] * d[48] * d[72] - 2 * d[5] * d[13] * d[48] * d[72] - 2 * d[4] * d[14] * d[48] * d[72] + 2 * d[4] * d[10] * d[49] * d[72] - 2 * d[5] * d[12] * d[49] * d[72] + 2 * d[1] * d[13] * d[49] * d[72] - 2 * d[3] * d[14] * d[49] * d[72] + 2 * d[5] * d[9] * d[50] * d[72] - 2 * d[4] * d[12] * d[50] * d[72] - 2 * d[3] * d[13] * d[50] * d[72] + 2 * d[0] * d[14] * d[50] * d[72];
    coeffs[214] = 2 * d[6] * d[20] * d[46] * d[63] - 2 * d[8] * d[22] * d[46] * d[63] + 2 * d[2] * d[24] * d[46] * d[63] - 2 * d[4] * d[26] * d[46] * d[63] + 2 * d[6] * d[19] * d[47] * d[63] - 2 * d[7] * d[21] * d[47] * d[63] + 2 * d[1] * d[24] * d[47] * d[63] - 2 * d[3] * d[25] * d[47] * d[63] - 2 * d[7] * d[20] * d[48] * d[63] + 2 * d[8] * d[23] * d[48] * d[63] - 2 * d[2] * d[25] * d[48] * d[63] + 2 * d[5] * d[26] * d[48] * d[63] - 2 * d[8] * d[19] * d[49] * d[63] + 2 * d[7] * d[23] * d[49] * d[63] + 2 * d[5] * d[25] * d[49] * d[63] - 2 * d[1] * d[26] * d[49] * d[63] + 2 * d[8] * d[21] * d[50] * d[63] + 2 * d[7] * d[22] * d[50] * d[63] - 4 * d[6] * d[23] * d[50] * d[63] - 4 * d[5] * d[24] * d[50] * d[63] + 2 * d[4] * d[25] * d[50] * d[63] + 2 * d[3] * d[26] * d[50] * d[63] + 2 * d[2] * d[19] * d[51] * d[63] + 2 * d[1] * d[20] * d[51] * d[63] - 4 * d[5] * d[23] * d[51] * d[63] - 2 * d[3] * d[20] * d[52] * d[63] - 2 * d[2] * d[21] * d[52] * d[63] + 2 * d[5] * d[22] * d[52] * d[63] + 2 * d[4] * d[23] * d[52] * d[63] - 2 * d[4] * d[19] * d[53] * d[63] + 2 * d[5] * d[21] * d[53] * d[63] - 2 * d[1] * d[22] * d[53] * d[63] + 2 * d[3] * d[23] * d[53] * d[63] + d[20] * d[46] * std::pow(d[63], 2) + d[19] * d[47] * std::pow(d[63], 2) - 2 * d[23] * d[50] * std::pow(d[63], 2) + 2 * d[7] * d[20] * d[45] * d[64] - 2 * d[8] * d[23] * d[45] * d[64] + 2 * d[2] * d[25] * d[45] * d[64] - 2 * d[5] * d[26] * d[45] * d[64] + 2 * d[7] * d[18] * d[47] * d[64] - 2 * d[6] * d[21] * d[47] * d[64] - 2 * d[3] * d[24] * d[47] * d[64] + 2 * d[0] * d[25] * d[47] * d[64] - 2 * d[6] * d[20] * d[48] * d[64] + 2 * d[8] * d[22] * d[48] * d[64] - 2 * d[2] * d[24] * d[48] * d[64] + 2 * d[4] * d[26] * d[48] * d[64] + 2 * d[8] * d[21] * d[49] * d[64] - 4 * d[7] * d[22] * d[49] * d[64] + 2 * d[6] * d[23] * d[49] * d[64] + 2 * d[5] * d[24] * d[49] * d[64] - 4 * d[4] * d[25] * d[49] * d[64] + 2 * d[3] * d[26] * d[49] * d[64] - 2 * d[8] * d[18] * d[50] * d[64] + 2 * d[6] * d[22] * d[50] * d[64] + 2 * d[4] * d[24] * d[50] * d[64] - 2 * d[0] * d[26] * d[50] * d[64] - 2 * d[3] * d[20] * d[51] * d[64] - 2 * d[2] * d[21] * d[51] * d[64] + 2 * d[5] * d[22] * d[51] * d[64] + 2 * d[4] * d[23] * d[51] * d[64] + 2 * d[2] * d[18] * d[52] * d[64] + 2 * d[0] * d[20] * d[52] * d[64] - 4 * d[4] * d[22] * d[52] * d[64] - 2 * d[5] * d[18] * d[53] * d[64] + 2 * d[4] * d[21] * d[53] * d[64] + 2 * d[3] * d[22] * d[53] * d[64] - 2 * d[0] * d[23] * d[53] * d[64] - 2 * d[21] * d[47] * d[63] * d[64] - 2 * d[20] * d[48] * d[63] * d[64] + 2 * d[23] * d[49] * d[63] * d[64] + 2 * d[22] * d[50] * d[63] * d[64] + d[20] * d[45] * std::pow(d[64], 2) + d[18] * d[47] * std::pow(d[64], 2) - 2 * d[22] * d[49] * std::pow(d[64], 2) + 2 * d[8] * d[19] * d[45] * d[65] - 2 * d[7] * d[23] * d[45] * d[65] - 2 * d[5] * d[25] * d[45] * d[65] + 2 * d[1] * d[26] * d[45] * d[65] + 2 * d[8] * d[18] * d[46] * d[65] - 2 * d[6] * d[22] * d[46] * d[65] - 2 * d[4] * d[24] * d[46] * d[65] + 2 * d[0] * d[26] * d[46] * d[65] - 4 * d[8] * d[21] * d[48] * d[65] + 2 * d[7] * d[22] * d[48] * d[65] + 2 * d[6] * d[23] * d[48] * d[65] + 2 * d[5] * d[24] * d[48] * d[65] + 2 * d[4] * d[25] * d[48] * d[65] - 4 * d[3] * d[26] * d[48] * d[65] - 2 * d[6] * d[19] * d[49] * d[65] + 2 * d[7] * d[21] * d[49] * d[65] - 2 * d[1] * d[24] * d[49] * d[65] + 2 * d[3] * d[25] * d[49] * d[65] - 2 * d[7] * d[18] * d[50] * d[65] + 2 * d[6] * d[21] * d[50] * d[65] + 2 * d[3] * d[24] * d[50] * d[65] - 2 * d[0] * d[25] * d[50] * d[65] - 2 * d[4] * d[19] * d[51] * d[65] + 2 * d[5] * d[21] * d[51] * d[65] - 2 * d[1] * d[22] * d[51] * d[65] + 2 * d[3] * d[23] * d[51] * d[65] - 2 * d[5] * d[18] * d[52] * d[65] + 2 * d[4] * d[21] * d[52] * d[65] + 2 * d[3] * d[22] * d[52] * d[65] - 2 * d[0] * d[23] * d[52] * d[65] + 2 * d[1] * d[18] * d[53] * d[65] + 2 * d[0] * d[19] * d[53] * d[65] - 4 * d[3] * d[21] * d[53] * d[65] - 2 * d[22] * d[46] * d[63] * d[65] + 2 * d[23] * d[48] * d[63] * d[65] - 2 * d[19] * d[49] * d[63] * d[65] + 2 * d[21] * d[50] * d[63] * d[65] - 2 * d[23] * d[45] * d[64] * d[65] + 2 * d[22] * d[48] * d[64] * d[65] + 2 * d[21] * d[49] * d[64] * d[65] - 2 * d[18] * d[50] * d[64] * d[65] + d[19] * d[45] * std::pow(d[65], 2) + d[18] * d[46] * std::pow(d[65], 2) - 2 * d[21] * d[48] * std::pow(d[65], 2) - d[2] * d[19] * d[45] * d[72] - d[1] * d[20] * d[45] * d[72] + 2 * d[5] * d[23] * d[45] * d[72] - d[2] * d[18] * d[46] * d[72] - d[0] * d[20] * d[46] * d[72] + 2 * d[4] * d[22] * d[46] * d[72] - d[1] * d[18] * d[47] * d[72] - d[0] * d[19] * d[47] * d[72] + 2 * d[3] * d[21] * d[47] * d[72] + 2 * d[3] * d[20] * d[48] * d[72] + 2 * d[2] * d[21] * d[48] * d[72] - 2 * d[5] * d[22] * d[48] * d[72] - 2 * d[4] * d[23] * d[48] * d[72] + 2 * d[4] * d[19] * d[49] * d[72] - 2 * d[5] * d[21] * d[49] * d[72] + 2 * d[1] * d[22] * d[49] * d[72] - 2 * d[3] * d[23] * d[49] * d[72] + 2 * d[5] * d[18] * d[50] * d[72] - 2 * d[4] * d[21] * d[50] * d[72] - 2 * d[3] * d[22] * d[50] * d[72] + 2 * d[0] * d[23] * d[50] * d[72];
    coeffs[215] = 2 * d[6] * d[29] * d[46] * d[63] - 2 * d[8] * d[31] * d[46] * d[63] + 2 * d[2] * d[33] * d[46] * d[63] - 2 * d[4] * d[35] * d[46] * d[63] + 2 * d[6] * d[28] * d[47] * d[63] - 2 * d[7] * d[30] * d[47] * d[63] + 2 * d[1] * d[33] * d[47] * d[63] - 2 * d[3] * d[34] * d[47] * d[63] - 2 * d[7] * d[29] * d[48] * d[63] + 2 * d[8] * d[32] * d[48] * d[63] - 2 * d[2] * d[34] * d[48] * d[63] + 2 * d[5] * d[35] * d[48] * d[63] - 2 * d[8] * d[28] * d[49] * d[63] + 2 * d[7] * d[32] * d[49] * d[63] + 2 * d[5] * d[34] * d[49] * d[63] - 2 * d[1] * d[35] * d[49] * d[63] + 2 * d[8] * d[30] * d[50] * d[63] + 2 * d[7] * d[31] * d[50] * d[63] - 4 * d[6] * d[32] * d[50] * d[63] - 4 * d[5] * d[33] * d[50] * d[63] + 2 * d[4] * d[34] * d[50] * d[63] + 2 * d[3] * d[35] * d[50] * d[63] + 2 * d[2] * d[28] * d[51] * d[63] + 2 * d[1] * d[29] * d[51] * d[63] - 4 * d[5] * d[32] * d[51] * d[63] - 2 * d[3] * d[29] * d[52] * d[63] - 2 * d[2] * d[30] * d[52] * d[63] + 2 * d[5] * d[31] * d[52] * d[63] + 2 * d[4] * d[32] * d[52] * d[63] - 2 * d[4] * d[28] * d[53] * d[63] + 2 * d[5] * d[30] * d[53] * d[63] - 2 * d[1] * d[31] * d[53] * d[63] + 2 * d[3] * d[32] * d[53] * d[63] + d[29] * d[46] * std::pow(d[63], 2) + d[28] * d[47] * std::pow(d[63], 2) - 2 * d[32] * d[50] * std::pow(d[63], 2) + 2 * d[7] * d[29] * d[45] * d[64] - 2 * d[8] * d[32] * d[45] * d[64] + 2 * d[2] * d[34] * d[45] * d[64] - 2 * d[5] * d[35] * d[45] * d[64] + 2 * d[7] * d[27] * d[47] * d[64] - 2 * d[6] * d[30] * d[47] * d[64] - 2 * d[3] * d[33] * d[47] * d[64] + 2 * d[0] * d[34] * d[47] * d[64] - 2 * d[6] * d[29] * d[48] * d[64] + 2 * d[8] * d[31] * d[48] * d[64] - 2 * d[2] * d[33] * d[48] * d[64] + 2 * d[4] * d[35] * d[48] * d[64] + 2 * d[8] * d[30] * d[49] * d[64] - 4 * d[7] * d[31] * d[49] * d[64] + 2 * d[6] * d[32] * d[49] * d[64] + 2 * d[5] * d[33] * d[49] * d[64] - 4 * d[4] * d[34] * d[49] * d[64] + 2 * d[3] * d[35] * d[49] * d[64] - 2 * d[8] * d[27] * d[50] * d[64] + 2 * d[6] * d[31] * d[50] * d[64] + 2 * d[4] * d[33] * d[50] * d[64] - 2 * d[0] * d[35] * d[50] * d[64] - 2 * d[3] * d[29] * d[51] * d[64] - 2 * d[2] * d[30] * d[51] * d[64] + 2 * d[5] * d[31] * d[51] * d[64] + 2 * d[4] * d[32] * d[51] * d[64] + 2 * d[2] * d[27] * d[52] * d[64] + 2 * d[0] * d[29] * d[52] * d[64] - 4 * d[4] * d[31] * d[52] * d[64] - 2 * d[5] * d[27] * d[53] * d[64] + 2 * d[4] * d[30] * d[53] * d[64] + 2 * d[3] * d[31] * d[53] * d[64] - 2 * d[0] * d[32] * d[53] * d[64] - 2 * d[30] * d[47] * d[63] * d[64] - 2 * d[29] * d[48] * d[63] * d[64] + 2 * d[32] * d[49] * d[63] * d[64] + 2 * d[31] * d[50] * d[63] * d[64] + d[29] * d[45] * std::pow(d[64], 2) + d[27] * d[47] * std::pow(d[64], 2) - 2 * d[31] * d[49] * std::pow(d[64], 2) + 2 * d[8] * d[28] * d[45] * d[65] - 2 * d[7] * d[32] * d[45] * d[65] - 2 * d[5] * d[34] * d[45] * d[65] + 2 * d[1] * d[35] * d[45] * d[65] + 2 * d[8] * d[27] * d[46] * d[65] - 2 * d[6] * d[31] * d[46] * d[65] - 2 * d[4] * d[33] * d[46] * d[65] + 2 * d[0] * d[35] * d[46] * d[65] - 4 * d[8] * d[30] * d[48] * d[65] + 2 * d[7] * d[31] * d[48] * d[65] + 2 * d[6] * d[32] * d[48] * d[65] + 2 * d[5] * d[33] * d[48] * d[65] + 2 * d[4] * d[34] * d[48] * d[65] - 4 * d[3] * d[35] * d[48] * d[65] - 2 * d[6] * d[28] * d[49] * d[65] + 2 * d[7] * d[30] * d[49] * d[65] - 2 * d[1] * d[33] * d[49] * d[65] + 2 * d[3] * d[34] * d[49] * d[65] - 2 * d[7] * d[27] * d[50] * d[65] + 2 * d[6] * d[30] * d[50] * d[65] + 2 * d[3] * d[33] * d[50] * d[65] - 2 * d[0] * d[34] * d[50] * d[65] - 2 * d[4] * d[28] * d[51] * d[65] + 2 * d[5] * d[30] * d[51] * d[65] - 2 * d[1] * d[31] * d[51] * d[65] + 2 * d[3] * d[32] * d[51] * d[65] - 2 * d[5] * d[27] * d[52] * d[65] + 2 * d[4] * d[30] * d[52] * d[65] + 2 * d[3] * d[31] * d[52] * d[65] - 2 * d[0] * d[32] * d[52] * d[65] + 2 * d[1] * d[27] * d[53] * d[65] + 2 * d[0] * d[28] * d[53] * d[65] - 4 * d[3] * d[30] * d[53] * d[65] - 2 * d[31] * d[46] * d[63] * d[65] + 2 * d[32] * d[48] * d[63] * d[65] - 2 * d[28] * d[49] * d[63] * d[65] + 2 * d[30] * d[50] * d[63] * d[65] - 2 * d[32] * d[45] * d[64] * d[65] + 2 * d[31] * d[48] * d[64] * d[65] + 2 * d[30] * d[49] * d[64] * d[65] - 2 * d[27] * d[50] * d[64] * d[65] + d[28] * d[45] * std::pow(d[65], 2) + d[27] * d[46] * std::pow(d[65], 2) - 2 * d[30] * d[48] * std::pow(d[65], 2) - d[2] * d[28] * d[45] * d[72] - d[1] * d[29] * d[45] * d[72] + 2 * d[5] * d[32] * d[45] * d[72] - d[2] * d[27] * d[46] * d[72] - d[0] * d[29] * d[46] * d[72] + 2 * d[4] * d[31] * d[46] * d[72] - d[1] * d[27] * d[47] * d[72] - d[0] * d[28] * d[47] * d[72] + 2 * d[3] * d[30] * d[47] * d[72] + 2 * d[3] * d[29] * d[48] * d[72] + 2 * d[2] * d[30] * d[48] * d[72] - 2 * d[5] * d[31] * d[48] * d[72] - 2 * d[4] * d[32] * d[48] * d[72] + 2 * d[4] * d[28] * d[49] * d[72] - 2 * d[5] * d[30] * d[49] * d[72] + 2 * d[1] * d[31] * d[49] * d[72] - 2 * d[3] * d[32] * d[49] * d[72] + 2 * d[5] * d[27] * d[50] * d[72] - 2 * d[4] * d[30] * d[50] * d[72] - 2 * d[3] * d[31] * d[50] * d[72] + 2 * d[0] * d[32] * d[50] * d[72];
    coeffs[216] = 2 * d[6] * d[38] * d[46] * d[63] - 2 * d[8] * d[40] * d[46] * d[63] + 2 * d[2] * d[42] * d[46] * d[63] - 2 * d[4] * d[44] * d[46] * d[63] + 2 * d[6] * d[37] * d[47] * d[63] - 2 * d[7] * d[39] * d[47] * d[63] + 2 * d[1] * d[42] * d[47] * d[63] - 2 * d[3] * d[43] * d[47] * d[63] - 2 * d[7] * d[38] * d[48] * d[63] + 2 * d[8] * d[41] * d[48] * d[63] - 2 * d[2] * d[43] * d[48] * d[63] + 2 * d[5] * d[44] * d[48] * d[63] - 2 * d[8] * d[37] * d[49] * d[63] + 2 * d[7] * d[41] * d[49] * d[63] + 2 * d[5] * d[43] * d[49] * d[63] - 2 * d[1] * d[44] * d[49] * d[63] + 2 * d[8] * d[39] * d[50] * d[63] + 2 * d[7] * d[40] * d[50] * d[63] - 4 * d[6] * d[41] * d[50] * d[63] - 4 * d[5] * d[42] * d[50] * d[63] + 2 * d[4] * d[43] * d[50] * d[63] + 2 * d[3] * d[44] * d[50] * d[63] + 2 * d[2] * d[37] * d[51] * d[63] + 2 * d[1] * d[38] * d[51] * d[63] - 4 * d[5] * d[41] * d[51] * d[63] - 2 * d[3] * d[38] * d[52] * d[63] - 2 * d[2] * d[39] * d[52] * d[63] + 2 * d[5] * d[40] * d[52] * d[63] + 2 * d[4] * d[41] * d[52] * d[63] - 2 * d[4] * d[37] * d[53] * d[63] + 2 * d[5] * d[39] * d[53] * d[63] - 2 * d[1] * d[40] * d[53] * d[63] + 2 * d[3] * d[41] * d[53] * d[63] + d[38] * d[46] * std::pow(d[63], 2) + d[37] * d[47] * std::pow(d[63], 2) - 2 * d[41] * d[50] * std::pow(d[63], 2) + 2 * d[7] * d[38] * d[45] * d[64] - 2 * d[8] * d[41] * d[45] * d[64] + 2 * d[2] * d[43] * d[45] * d[64] - 2 * d[5] * d[44] * d[45] * d[64] + 2 * d[7] * d[36] * d[47] * d[64] - 2 * d[6] * d[39] * d[47] * d[64] - 2 * d[3] * d[42] * d[47] * d[64] + 2 * d[0] * d[43] * d[47] * d[64] - 2 * d[6] * d[38] * d[48] * d[64] + 2 * d[8] * d[40] * d[48] * d[64] - 2 * d[2] * d[42] * d[48] * d[64] + 2 * d[4] * d[44] * d[48] * d[64] + 2 * d[8] * d[39] * d[49] * d[64] - 4 * d[7] * d[40] * d[49] * d[64] + 2 * d[6] * d[41] * d[49] * d[64] + 2 * d[5] * d[42] * d[49] * d[64] - 4 * d[4] * d[43] * d[49] * d[64] + 2 * d[3] * d[44] * d[49] * d[64] - 2 * d[8] * d[36] * d[50] * d[64] + 2 * d[6] * d[40] * d[50] * d[64] + 2 * d[4] * d[42] * d[50] * d[64] - 2 * d[0] * d[44] * d[50] * d[64] - 2 * d[3] * d[38] * d[51] * d[64] - 2 * d[2] * d[39] * d[51] * d[64] + 2 * d[5] * d[40] * d[51] * d[64] + 2 * d[4] * d[41] * d[51] * d[64] + 2 * d[2] * d[36] * d[52] * d[64] + 2 * d[0] * d[38] * d[52] * d[64] - 4 * d[4] * d[40] * d[52] * d[64] - 2 * d[5] * d[36] * d[53] * d[64] + 2 * d[4] * d[39] * d[53] * d[64] + 2 * d[3] * d[40] * d[53] * d[64] - 2 * d[0] * d[41] * d[53] * d[64] - 2 * d[39] * d[47] * d[63] * d[64] - 2 * d[38] * d[48] * d[63] * d[64] + 2 * d[41] * d[49] * d[63] * d[64] + 2 * d[40] * d[50] * d[63] * d[64] + d[38] * d[45] * std::pow(d[64], 2) + d[36] * d[47] * std::pow(d[64], 2) - 2 * d[40] * d[49] * std::pow(d[64], 2) + 2 * d[8] * d[37] * d[45] * d[65] - 2 * d[7] * d[41] * d[45] * d[65] - 2 * d[5] * d[43] * d[45] * d[65] + 2 * d[1] * d[44] * d[45] * d[65] + 2 * d[8] * d[36] * d[46] * d[65] - 2 * d[6] * d[40] * d[46] * d[65] - 2 * d[4] * d[42] * d[46] * d[65] + 2 * d[0] * d[44] * d[46] * d[65] - 4 * d[8] * d[39] * d[48] * d[65] + 2 * d[7] * d[40] * d[48] * d[65] + 2 * d[6] * d[41] * d[48] * d[65] + 2 * d[5] * d[42] * d[48] * d[65] + 2 * d[4] * d[43] * d[48] * d[65] - 4 * d[3] * d[44] * d[48] * d[65] - 2 * d[6] * d[37] * d[49] * d[65] + 2 * d[7] * d[39] * d[49] * d[65] - 2 * d[1] * d[42] * d[49] * d[65] + 2 * d[3] * d[43] * d[49] * d[65] - 2 * d[7] * d[36] * d[50] * d[65] + 2 * d[6] * d[39] * d[50] * d[65] + 2 * d[3] * d[42] * d[50] * d[65] - 2 * d[0] * d[43] * d[50] * d[65] - 2 * d[4] * d[37] * d[51] * d[65] + 2 * d[5] * d[39] * d[51] * d[65] - 2 * d[1] * d[40] * d[51] * d[65] + 2 * d[3] * d[41] * d[51] * d[65] - 2 * d[5] * d[36] * d[52] * d[65] + 2 * d[4] * d[39] * d[52] * d[65] + 2 * d[3] * d[40] * d[52] * d[65] - 2 * d[0] * d[41] * d[52] * d[65] + 2 * d[1] * d[36] * d[53] * d[65] + 2 * d[0] * d[37] * d[53] * d[65] - 4 * d[3] * d[39] * d[53] * d[65] - 2 * d[40] * d[46] * d[63] * d[65] + 2 * d[41] * d[48] * d[63] * d[65] - 2 * d[37] * d[49] * d[63] * d[65] + 2 * d[39] * d[50] * d[63] * d[65] - 2 * d[41] * d[45] * d[64] * d[65] + 2 * d[40] * d[48] * d[64] * d[65] + 2 * d[39] * d[49] * d[64] * d[65] - 2 * d[36] * d[50] * d[64] * d[65] + d[37] * d[45] * std::pow(d[65], 2) + d[36] * d[46] * std::pow(d[65], 2) - 2 * d[39] * d[48] * std::pow(d[65], 2) - d[2] * d[37] * d[45] * d[72] - d[1] * d[38] * d[45] * d[72] + 2 * d[5] * d[41] * d[45] * d[72] - d[2] * d[36] * d[46] * d[72] - d[0] * d[38] * d[46] * d[72] + 2 * d[4] * d[40] * d[46] * d[72] - d[1] * d[36] * d[47] * d[72] - d[0] * d[37] * d[47] * d[72] + 2 * d[3] * d[39] * d[47] * d[72] + 2 * d[3] * d[38] * d[48] * d[72] + 2 * d[2] * d[39] * d[48] * d[72] - 2 * d[5] * d[40] * d[48] * d[72] - 2 * d[4] * d[41] * d[48] * d[72] + 2 * d[4] * d[37] * d[49] * d[72] - 2 * d[5] * d[39] * d[49] * d[72] + 2 * d[1] * d[40] * d[49] * d[72] - 2 * d[3] * d[41] * d[49] * d[72] + 2 * d[5] * d[36] * d[50] * d[72] - 2 * d[4] * d[39] * d[50] * d[72] - 2 * d[3] * d[40] * d[50] * d[72] + 2 * d[0] * d[41] * d[50] * d[72];
    coeffs[217] = 2 * d[6] * d[46] * d[47] * d[63] - 2 * d[7] * d[47] * d[48] * d[63] - 2 * d[8] * d[46] * d[49] * d[63] + 2 * d[8] * d[48] * d[50] * d[63] + 2 * d[7] * d[49] * d[50] * d[63] - 2 * d[6] * std::pow(d[50], 2) * d[63] + 2 * d[2] * d[46] * d[51] * d[63] + 2 * d[1] * d[47] * d[51] * d[63] - 4 * d[5] * d[50] * d[51] * d[63] - 2 * d[3] * d[47] * d[52] * d[63] - 2 * d[2] * d[48] * d[52] * d[63] + 2 * d[5] * d[49] * d[52] * d[63] + 2 * d[4] * d[50] * d[52] * d[63] - 2 * d[4] * d[46] * d[53] * d[63] + 2 * d[5] * d[48] * d[53] * d[63] - 2 * d[1] * d[49] * d[53] * d[63] + 2 * d[3] * d[50] * d[53] * d[63] + d[46] * d[47] * std::pow(d[63], 2) - std::pow(d[50], 2) * std::pow(d[63], 2) + 2 * d[7] * d[45] * d[47] * d[64] - 2 * d[6] * d[47] * d[48] * d[64] + 2 * d[8] * d[48] * d[49] * d[64] - 2 * d[7] * std::pow(d[49], 2) * d[64] - 2 * d[8] * d[45] * d[50] * d[64] + 2 * d[6] * d[49] * d[50] * d[64] - 2 * d[3] * d[47] * d[51] * d[64] - 2 * d[2] * d[48] * d[51] * d[64] + 2 * d[5] * d[49] * d[51] * d[64] + 2 * d[4] * d[50] * d[51] * d[64] + 2 * d[2] * d[45] * d[52] * d[64] + 2 * d[0] * d[47] * d[52] * d[64] - 4 * d[4] * d[49] * d[52] * d[64] - 2 * d[5] * d[45] * d[53] * d[64] + 2 * d[4] * d[48] * d[53] * d[64] + 2 * d[3] * d[49] * d[53] * d[64] - 2 * d[0] * d[50] * d[53] * d[64] - 2 * d[47] * d[48] * d[63] * d[64] + 2 * d[49] * d[50] * d[63] * d[64] + d[45] * d[47] * std::pow(d[64], 2) - std::pow(d[49], 2) * std::pow(d[64], 2) + 2 * d[8] * d[45] * d[46] * d[65] - 2 * d[8] * std::pow(d[48], 2) * d[65] - 2 * d[6] * d[46] * d[49] * d[65] + 2 * d[7] * d[48] * d[49] * d[65] - 2 * d[7] * d[45] * d[50] * d[65] + 2 * d[6] * d[48] * d[50] * d[65] - 2 * d[4] * d[46] * d[51] * d[65] + 2 * d[5] * d[48] * d[51] * d[65] - 2 * d[1] * d[49] * d[51] * d[65] + 2 * d[3] * d[50] * d[51] * d[65] - 2 * d[5] * d[45] * d[52] * d[65] + 2 * d[4] * d[48] * d[52] * d[65] + 2 * d[3] * d[49] * d[52] * d[65] - 2 * d[0] * d[50] * d[52] * d[65] + 2 * d[1] * d[45] * d[53] * d[65] + 2 * d[0] * d[46] * d[53] * d[65] - 4 * d[3] * d[48] * d[53] * d[65] - 2 * d[46] * d[49] * d[63] * d[65] + 2 * d[48] * d[50] * d[63] * d[65] + 2 * d[48] * d[49] * d[64] * d[65] - 2 * d[45] * d[50] * d[64] * d[65] + d[45] * d[46] * std::pow(d[65], 2) - std::pow(d[48], 2) * std::pow(d[65], 2) - d[2] * d[45] * d[46] * d[72] - d[1] * d[45] * d[47] * d[72] - d[0] * d[46] * d[47] * d[72] + 2 * d[3] * d[47] * d[48] * d[72] + d[2] * std::pow(d[48], 2) * d[72] + 2 * d[4] * d[46] * d[49] * d[72] - 2 * d[5] * d[48] * d[49] * d[72] + d[1] * std::pow(d[49], 2) * d[72] + 2 * d[5] * d[45] * d[50] * d[72] - 2 * d[4] * d[48] * d[50] * d[72] - 2 * d[3] * d[49] * d[50] * d[72] + d[0] * std::pow(d[50], 2) * d[72];
    coeffs[218] = 2 * d[2] * d[6] * d[10] * d[63] - 2 * d[4] * d[8] * d[10] * d[63] + 2 * d[1] * d[6] * d[11] * d[63] - 2 * d[3] * d[7] * d[11] * d[63] - 2 * d[2] * d[7] * d[12] * d[63] + 2 * d[5] * d[8] * d[12] * d[63] + 2 * d[5] * d[7] * d[13] * d[63] - 2 * d[1] * d[8] * d[13] * d[63] - 4 * d[5] * d[6] * d[14] * d[63] + 2 * d[4] * d[7] * d[14] * d[63] + 2 * d[3] * d[8] * d[14] * d[63] + 2 * d[1] * d[2] * d[15] * d[63] - 2 * std::pow(d[5], 2) * d[15] * d[63] - 2 * d[2] * d[3] * d[16] * d[63] + 2 * d[4] * d[5] * d[16] * d[63] - 2 * d[1] * d[4] * d[17] * d[63] + 2 * d[3] * d[5] * d[17] * d[63] + d[2] * d[10] * std::pow(d[63], 2) + d[1] * d[11] * std::pow(d[63], 2) - 2 * d[5] * d[14] * std::pow(d[63], 2) + 2 * d[2] * d[7] * d[9] * d[64] - 2 * d[5] * d[8] * d[9] * d[64] - 2 * d[3] * d[6] * d[11] * d[64] + 2 * d[0] * d[7] * d[11] * d[64] - 2 * d[2] * d[6] * d[12] * d[64] + 2 * d[4] * d[8] * d[12] * d[64] + 2 * d[5] * d[6] * d[13] * d[64] - 4 * d[4] * d[7] * d[13] * d[64] + 2 * d[3] * d[8] * d[13] * d[64] + 2 * d[4] * d[6] * d[14] * d[64] - 2 * d[0] * d[8] * d[14] * d[64] - 2 * d[2] * d[3] * d[15] * d[64] + 2 * d[4] * d[5] * d[15] * d[64] + 2 * d[0] * d[2] * d[16] * d[64] - 2 * std::pow(d[4], 2) * d[16] * d[64] + 2 * d[3] * d[4] * d[17] * d[64] - 2 * d[0] * d[5] * d[17] * d[64] - 2 * d[3] * d[11] * d[63] * d[64] - 2 * d[2] * d[12] * d[63] * d[64] + 2 * d[5] * d[13] * d[63] * d[64] + 2 * d[4] * d[14] * d[63] * d[64] + d[2] * d[9] * std::pow(d[64], 2) + d[0] * d[11] * std::pow(d[64], 2) - 2 * d[4] * d[13] * std::pow(d[64], 2) - 2 * d[5] * d[7] * d[9] * d[65] + 2 * d[1] * d[8] * d[9] * d[65] - 2 * d[4] * d[6] * d[10] * d[65] + 2 * d[0] * d[8] * d[10] * d[65] + 2 * d[5] * d[6] * d[12] * d[65] + 2 * d[4] * d[7] * d[12] * d[65] - 4 * d[3] * d[8] * d[12] * d[65] - 2 * d[1] * d[6] * d[13] * d[65] + 2 * d[3] * d[7] * d[13] * d[65] + 2 * d[3] * d[6] * d[14] * d[65] - 2 * d[0] * d[7] * d[14] * d[65] - 2 * d[1] * d[4] * d[15] * d[65] + 2 * d[3] * d[5] * d[15] * d[65] + 2 * d[3] * d[4] * d[16] * d[65] - 2 * d[0] * d[5] * d[16] * d[65] + 2 * d[0] * d[1] * d[17] * d[65] - 2 * std::pow(d[3], 2) * d[17] * d[65] - 2 * d[4] * d[10] * d[63] * d[65] + 2 * d[5] * d[12] * d[63] * d[65] - 2 * d[1] * d[13] * d[63] * d[65] + 2 * d[3] * d[14] * d[63] * d[65] - 2 * d[5] * d[9] * d[64] * d[65] + 2 * d[4] * d[12] * d[64] * d[65] + 2 * d[3] * d[13] * d[64] * d[65] - 2 * d[0] * d[14] * d[64] * d[65] + d[1] * d[9] * std::pow(d[65], 2) + d[0] * d[10] * std::pow(d[65], 2) - 2 * d[3] * d[12] * std::pow(d[65], 2) - d[1] * d[2] * d[9] * d[72] + std::pow(d[5], 2) * d[9] * d[72] - d[0] * d[2] * d[10] * d[72] + std::pow(d[4], 2) * d[10] * d[72] - d[0] * d[1] * d[11] * d[72] + std::pow(d[3], 2) * d[11] * d[72] + 2 * d[2] * d[3] * d[12] * d[72] - 2 * d[4] * d[5] * d[12] * d[72] + 2 * d[1] * d[4] * d[13] * d[72] - 2 * d[3] * d[5] * d[13] * d[72] - 2 * d[3] * d[4] * d[14] * d[72] + 2 * d[0] * d[5] * d[14] * d[72];
    coeffs[219] = 2 * d[2] * d[6] * d[19] * d[63] - 2 * d[4] * d[8] * d[19] * d[63] + 2 * d[1] * d[6] * d[20] * d[63] - 2 * d[3] * d[7] * d[20] * d[63] - 2 * d[2] * d[7] * d[21] * d[63] + 2 * d[5] * d[8] * d[21] * d[63] + 2 * d[5] * d[7] * d[22] * d[63] - 2 * d[1] * d[8] * d[22] * d[63] - 4 * d[5] * d[6] * d[23] * d[63] + 2 * d[4] * d[7] * d[23] * d[63] + 2 * d[3] * d[8] * d[23] * d[63] + 2 * d[1] * d[2] * d[24] * d[63] - 2 * std::pow(d[5], 2) * d[24] * d[63] - 2 * d[2] * d[3] * d[25] * d[63] + 2 * d[4] * d[5] * d[25] * d[63] - 2 * d[1] * d[4] * d[26] * d[63] + 2 * d[3] * d[5] * d[26] * d[63] + d[2] * d[19] * std::pow(d[63], 2) + d[1] * d[20] * std::pow(d[63], 2) - 2 * d[5] * d[23] * std::pow(d[63], 2) + 2 * d[2] * d[7] * d[18] * d[64] - 2 * d[5] * d[8] * d[18] * d[64] - 2 * d[3] * d[6] * d[20] * d[64] + 2 * d[0] * d[7] * d[20] * d[64] - 2 * d[2] * d[6] * d[21] * d[64] + 2 * d[4] * d[8] * d[21] * d[64] + 2 * d[5] * d[6] * d[22] * d[64] - 4 * d[4] * d[7] * d[22] * d[64] + 2 * d[3] * d[8] * d[22] * d[64] + 2 * d[4] * d[6] * d[23] * d[64] - 2 * d[0] * d[8] * d[23] * d[64] - 2 * d[2] * d[3] * d[24] * d[64] + 2 * d[4] * d[5] * d[24] * d[64] + 2 * d[0] * d[2] * d[25] * d[64] - 2 * std::pow(d[4], 2) * d[25] * d[64] + 2 * d[3] * d[4] * d[26] * d[64] - 2 * d[0] * d[5] * d[26] * d[64] - 2 * d[3] * d[20] * d[63] * d[64] - 2 * d[2] * d[21] * d[63] * d[64] + 2 * d[5] * d[22] * d[63] * d[64] + 2 * d[4] * d[23] * d[63] * d[64] + d[2] * d[18] * std::pow(d[64], 2) + d[0] * d[20] * std::pow(d[64], 2) - 2 * d[4] * d[22] * std::pow(d[64], 2) - 2 * d[5] * d[7] * d[18] * d[65] + 2 * d[1] * d[8] * d[18] * d[65] - 2 * d[4] * d[6] * d[19] * d[65] + 2 * d[0] * d[8] * d[19] * d[65] + 2 * d[5] * d[6] * d[21] * d[65] + 2 * d[4] * d[7] * d[21] * d[65] - 4 * d[3] * d[8] * d[21] * d[65] - 2 * d[1] * d[6] * d[22] * d[65] + 2 * d[3] * d[7] * d[22] * d[65] + 2 * d[3] * d[6] * d[23] * d[65] - 2 * d[0] * d[7] * d[23] * d[65] - 2 * d[1] * d[4] * d[24] * d[65] + 2 * d[3] * d[5] * d[24] * d[65] + 2 * d[3] * d[4] * d[25] * d[65] - 2 * d[0] * d[5] * d[25] * d[65] + 2 * d[0] * d[1] * d[26] * d[65] - 2 * std::pow(d[3], 2) * d[26] * d[65] - 2 * d[4] * d[19] * d[63] * d[65] + 2 * d[5] * d[21] * d[63] * d[65] - 2 * d[1] * d[22] * d[63] * d[65] + 2 * d[3] * d[23] * d[63] * d[65] - 2 * d[5] * d[18] * d[64] * d[65] + 2 * d[4] * d[21] * d[64] * d[65] + 2 * d[3] * d[22] * d[64] * d[65] - 2 * d[0] * d[23] * d[64] * d[65] + d[1] * d[18] * std::pow(d[65], 2) + d[0] * d[19] * std::pow(d[65], 2) - 2 * d[3] * d[21] * std::pow(d[65], 2) - d[1] * d[2] * d[18] * d[72] + std::pow(d[5], 2) * d[18] * d[72] - d[0] * d[2] * d[19] * d[72] + std::pow(d[4], 2) * d[19] * d[72] - d[0] * d[1] * d[20] * d[72] + std::pow(d[3], 2) * d[20] * d[72] + 2 * d[2] * d[3] * d[21] * d[72] - 2 * d[4] * d[5] * d[21] * d[72] + 2 * d[1] * d[4] * d[22] * d[72] - 2 * d[3] * d[5] * d[22] * d[72] - 2 * d[3] * d[4] * d[23] * d[72] + 2 * d[0] * d[5] * d[23] * d[72];
    coeffs[220] = 2 * d[2] * d[6] * d[28] * d[63] - 2 * d[4] * d[8] * d[28] * d[63] + 2 * d[1] * d[6] * d[29] * d[63] - 2 * d[3] * d[7] * d[29] * d[63] - 2 * d[2] * d[7] * d[30] * d[63] + 2 * d[5] * d[8] * d[30] * d[63] + 2 * d[5] * d[7] * d[31] * d[63] - 2 * d[1] * d[8] * d[31] * d[63] - 4 * d[5] * d[6] * d[32] * d[63] + 2 * d[4] * d[7] * d[32] * d[63] + 2 * d[3] * d[8] * d[32] * d[63] + 2 * d[1] * d[2] * d[33] * d[63] - 2 * std::pow(d[5], 2) * d[33] * d[63] - 2 * d[2] * d[3] * d[34] * d[63] + 2 * d[4] * d[5] * d[34] * d[63] - 2 * d[1] * d[4] * d[35] * d[63] + 2 * d[3] * d[5] * d[35] * d[63] + d[2] * d[28] * std::pow(d[63], 2) + d[1] * d[29] * std::pow(d[63], 2) - 2 * d[5] * d[32] * std::pow(d[63], 2) + 2 * d[2] * d[7] * d[27] * d[64] - 2 * d[5] * d[8] * d[27] * d[64] - 2 * d[3] * d[6] * d[29] * d[64] + 2 * d[0] * d[7] * d[29] * d[64] - 2 * d[2] * d[6] * d[30] * d[64] + 2 * d[4] * d[8] * d[30] * d[64] + 2 * d[5] * d[6] * d[31] * d[64] - 4 * d[4] * d[7] * d[31] * d[64] + 2 * d[3] * d[8] * d[31] * d[64] + 2 * d[4] * d[6] * d[32] * d[64] - 2 * d[0] * d[8] * d[32] * d[64] - 2 * d[2] * d[3] * d[33] * d[64] + 2 * d[4] * d[5] * d[33] * d[64] + 2 * d[0] * d[2] * d[34] * d[64] - 2 * std::pow(d[4], 2) * d[34] * d[64] + 2 * d[3] * d[4] * d[35] * d[64] - 2 * d[0] * d[5] * d[35] * d[64] - 2 * d[3] * d[29] * d[63] * d[64] - 2 * d[2] * d[30] * d[63] * d[64] + 2 * d[5] * d[31] * d[63] * d[64] + 2 * d[4] * d[32] * d[63] * d[64] + d[2] * d[27] * std::pow(d[64], 2) + d[0] * d[29] * std::pow(d[64], 2) - 2 * d[4] * d[31] * std::pow(d[64], 2) - 2 * d[5] * d[7] * d[27] * d[65] + 2 * d[1] * d[8] * d[27] * d[65] - 2 * d[4] * d[6] * d[28] * d[65] + 2 * d[0] * d[8] * d[28] * d[65] + 2 * d[5] * d[6] * d[30] * d[65] + 2 * d[4] * d[7] * d[30] * d[65] - 4 * d[3] * d[8] * d[30] * d[65] - 2 * d[1] * d[6] * d[31] * d[65] + 2 * d[3] * d[7] * d[31] * d[65] + 2 * d[3] * d[6] * d[32] * d[65] - 2 * d[0] * d[7] * d[32] * d[65] - 2 * d[1] * d[4] * d[33] * d[65] + 2 * d[3] * d[5] * d[33] * d[65] + 2 * d[3] * d[4] * d[34] * d[65] - 2 * d[0] * d[5] * d[34] * d[65] + 2 * d[0] * d[1] * d[35] * d[65] - 2 * std::pow(d[3], 2) * d[35] * d[65] - 2 * d[4] * d[28] * d[63] * d[65] + 2 * d[5] * d[30] * d[63] * d[65] - 2 * d[1] * d[31] * d[63] * d[65] + 2 * d[3] * d[32] * d[63] * d[65] - 2 * d[5] * d[27] * d[64] * d[65] + 2 * d[4] * d[30] * d[64] * d[65] + 2 * d[3] * d[31] * d[64] * d[65] - 2 * d[0] * d[32] * d[64] * d[65] + d[1] * d[27] * std::pow(d[65], 2) + d[0] * d[28] * std::pow(d[65], 2) - 2 * d[3] * d[30] * std::pow(d[65], 2) - d[1] * d[2] * d[27] * d[72] + std::pow(d[5], 2) * d[27] * d[72] - d[0] * d[2] * d[28] * d[72] + std::pow(d[4], 2) * d[28] * d[72] - d[0] * d[1] * d[29] * d[72] + std::pow(d[3], 2) * d[29] * d[72] + 2 * d[2] * d[3] * d[30] * d[72] - 2 * d[4] * d[5] * d[30] * d[72] + 2 * d[1] * d[4] * d[31] * d[72] - 2 * d[3] * d[5] * d[31] * d[72] - 2 * d[3] * d[4] * d[32] * d[72] + 2 * d[0] * d[5] * d[32] * d[72];
    coeffs[221] = 2 * d[2] * d[6] * d[37] * d[63] - 2 * d[4] * d[8] * d[37] * d[63] + 2 * d[1] * d[6] * d[38] * d[63] - 2 * d[3] * d[7] * d[38] * d[63] - 2 * d[2] * d[7] * d[39] * d[63] + 2 * d[5] * d[8] * d[39] * d[63] + 2 * d[5] * d[7] * d[40] * d[63] - 2 * d[1] * d[8] * d[40] * d[63] - 4 * d[5] * d[6] * d[41] * d[63] + 2 * d[4] * d[7] * d[41] * d[63] + 2 * d[3] * d[8] * d[41] * d[63] + 2 * d[1] * d[2] * d[42] * d[63] - 2 * std::pow(d[5], 2) * d[42] * d[63] - 2 * d[2] * d[3] * d[43] * d[63] + 2 * d[4] * d[5] * d[43] * d[63] - 2 * d[1] * d[4] * d[44] * d[63] + 2 * d[3] * d[5] * d[44] * d[63] + d[2] * d[37] * std::pow(d[63], 2) + d[1] * d[38] * std::pow(d[63], 2) - 2 * d[5] * d[41] * std::pow(d[63], 2) + 2 * d[2] * d[7] * d[36] * d[64] - 2 * d[5] * d[8] * d[36] * d[64] - 2 * d[3] * d[6] * d[38] * d[64] + 2 * d[0] * d[7] * d[38] * d[64] - 2 * d[2] * d[6] * d[39] * d[64] + 2 * d[4] * d[8] * d[39] * d[64] + 2 * d[5] * d[6] * d[40] * d[64] - 4 * d[4] * d[7] * d[40] * d[64] + 2 * d[3] * d[8] * d[40] * d[64] + 2 * d[4] * d[6] * d[41] * d[64] - 2 * d[0] * d[8] * d[41] * d[64] - 2 * d[2] * d[3] * d[42] * d[64] + 2 * d[4] * d[5] * d[42] * d[64] + 2 * d[0] * d[2] * d[43] * d[64] - 2 * std::pow(d[4], 2) * d[43] * d[64] + 2 * d[3] * d[4] * d[44] * d[64] - 2 * d[0] * d[5] * d[44] * d[64] - 2 * d[3] * d[38] * d[63] * d[64] - 2 * d[2] * d[39] * d[63] * d[64] + 2 * d[5] * d[40] * d[63] * d[64] + 2 * d[4] * d[41] * d[63] * d[64] + d[2] * d[36] * std::pow(d[64], 2) + d[0] * d[38] * std::pow(d[64], 2) - 2 * d[4] * d[40] * std::pow(d[64], 2) - 2 * d[5] * d[7] * d[36] * d[65] + 2 * d[1] * d[8] * d[36] * d[65] - 2 * d[4] * d[6] * d[37] * d[65] + 2 * d[0] * d[8] * d[37] * d[65] + 2 * d[5] * d[6] * d[39] * d[65] + 2 * d[4] * d[7] * d[39] * d[65] - 4 * d[3] * d[8] * d[39] * d[65] - 2 * d[1] * d[6] * d[40] * d[65] + 2 * d[3] * d[7] * d[40] * d[65] + 2 * d[3] * d[6] * d[41] * d[65] - 2 * d[0] * d[7] * d[41] * d[65] - 2 * d[1] * d[4] * d[42] * d[65] + 2 * d[3] * d[5] * d[42] * d[65] + 2 * d[3] * d[4] * d[43] * d[65] - 2 * d[0] * d[5] * d[43] * d[65] + 2 * d[0] * d[1] * d[44] * d[65] - 2 * std::pow(d[3], 2) * d[44] * d[65] - 2 * d[4] * d[37] * d[63] * d[65] + 2 * d[5] * d[39] * d[63] * d[65] - 2 * d[1] * d[40] * d[63] * d[65] + 2 * d[3] * d[41] * d[63] * d[65] - 2 * d[5] * d[36] * d[64] * d[65] + 2 * d[4] * d[39] * d[64] * d[65] + 2 * d[3] * d[40] * d[64] * d[65] - 2 * d[0] * d[41] * d[64] * d[65] + d[1] * d[36] * std::pow(d[65], 2) + d[0] * d[37] * std::pow(d[65], 2) - 2 * d[3] * d[39] * std::pow(d[65], 2) - d[1] * d[2] * d[36] * d[72] + std::pow(d[5], 2) * d[36] * d[72] - d[0] * d[2] * d[37] * d[72] + std::pow(d[4], 2) * d[37] * d[72] - d[0] * d[1] * d[38] * d[72] + std::pow(d[3], 2) * d[38] * d[72] + 2 * d[2] * d[3] * d[39] * d[72] - 2 * d[4] * d[5] * d[39] * d[72] + 2 * d[1] * d[4] * d[40] * d[72] - 2 * d[3] * d[5] * d[40] * d[72] - 2 * d[3] * d[4] * d[41] * d[72] + 2 * d[0] * d[5] * d[41] * d[72];
    coeffs[222] = 2 * d[2] * d[6] * d[46] * d[63] - 2 * d[4] * d[8] * d[46] * d[63] + 2 * d[1] * d[6] * d[47] * d[63] - 2 * d[3] * d[7] * d[47] * d[63] - 2 * d[2] * d[7] * d[48] * d[63] + 2 * d[5] * d[8] * d[48] * d[63] + 2 * d[5] * d[7] * d[49] * d[63] - 2 * d[1] * d[8] * d[49] * d[63] - 4 * d[5] * d[6] * d[50] * d[63] + 2 * d[4] * d[7] * d[50] * d[63] + 2 * d[3] * d[8] * d[50] * d[63] + 2 * d[1] * d[2] * d[51] * d[63] - 2 * std::pow(d[5], 2) * d[51] * d[63] - 2 * d[2] * d[3] * d[52] * d[63] + 2 * d[4] * d[5] * d[52] * d[63] - 2 * d[1] * d[4] * d[53] * d[63] + 2 * d[3] * d[5] * d[53] * d[63] + d[2] * d[46] * std::pow(d[63], 2) + d[1] * d[47] * std::pow(d[63], 2) - 2 * d[5] * d[50] * std::pow(d[63], 2) + 2 * d[2] * d[7] * d[45] * d[64] - 2 * d[5] * d[8] * d[45] * d[64] - 2 * d[3] * d[6] * d[47] * d[64] + 2 * d[0] * d[7] * d[47] * d[64] - 2 * d[2] * d[6] * d[48] * d[64] + 2 * d[4] * d[8] * d[48] * d[64] + 2 * d[5] * d[6] * d[49] * d[64] - 4 * d[4] * d[7] * d[49] * d[64] + 2 * d[3] * d[8] * d[49] * d[64] + 2 * d[4] * d[6] * d[50] * d[64] - 2 * d[0] * d[8] * d[50] * d[64] - 2 * d[2] * d[3] * d[51] * d[64] + 2 * d[4] * d[5] * d[51] * d[64] + 2 * d[0] * d[2] * d[52] * d[64] - 2 * std::pow(d[4], 2) * d[52] * d[64] + 2 * d[3] * d[4] * d[53] * d[64] - 2 * d[0] * d[5] * d[53] * d[64] - 2 * d[3] * d[47] * d[63] * d[64] - 2 * d[2] * d[48] * d[63] * d[64] + 2 * d[5] * d[49] * d[63] * d[64] + 2 * d[4] * d[50] * d[63] * d[64] + d[2] * d[45] * std::pow(d[64], 2) + d[0] * d[47] * std::pow(d[64], 2) - 2 * d[4] * d[49] * std::pow(d[64], 2) - 2 * d[5] * d[7] * d[45] * d[65] + 2 * d[1] * d[8] * d[45] * d[65] - 2 * d[4] * d[6] * d[46] * d[65] + 2 * d[0] * d[8] * d[46] * d[65] + 2 * d[5] * d[6] * d[48] * d[65] + 2 * d[4] * d[7] * d[48] * d[65] - 4 * d[3] * d[8] * d[48] * d[65] - 2 * d[1] * d[6] * d[49] * d[65] + 2 * d[3] * d[7] * d[49] * d[65] + 2 * d[3] * d[6] * d[50] * d[65] - 2 * d[0] * d[7] * d[50] * d[65] - 2 * d[1] * d[4] * d[51] * d[65] + 2 * d[3] * d[5] * d[51] * d[65] + 2 * d[3] * d[4] * d[52] * d[65] - 2 * d[0] * d[5] * d[52] * d[65] + 2 * d[0] * d[1] * d[53] * d[65] - 2 * std::pow(d[3], 2) * d[53] * d[65] - 2 * d[4] * d[46] * d[63] * d[65] + 2 * d[5] * d[48] * d[63] * d[65] - 2 * d[1] * d[49] * d[63] * d[65] + 2 * d[3] * d[50] * d[63] * d[65] - 2 * d[5] * d[45] * d[64] * d[65] + 2 * d[4] * d[48] * d[64] * d[65] + 2 * d[3] * d[49] * d[64] * d[65] - 2 * d[0] * d[50] * d[64] * d[65] + d[1] * d[45] * std::pow(d[65], 2) + d[0] * d[46] * std::pow(d[65], 2) - 2 * d[3] * d[48] * std::pow(d[65], 2) - d[1] * d[2] * d[45] * d[72] + std::pow(d[5], 2) * d[45] * d[72] - d[0] * d[2] * d[46] * d[72] + std::pow(d[4], 2) * d[46] * d[72] - d[0] * d[1] * d[47] * d[72] + std::pow(d[3], 2) * d[47] * d[72] + 2 * d[2] * d[3] * d[48] * d[72] - 2 * d[4] * d[5] * d[48] * d[72] + 2 * d[1] * d[4] * d[49] * d[72] - 2 * d[3] * d[5] * d[49] * d[72] - 2 * d[3] * d[4] * d[50] * d[72] + 2 * d[0] * d[5] * d[50] * d[72];
    coeffs[223] = 2 * d[1] * d[2] * d[6] * d[63] - 2 * std::pow(d[5], 2) * d[6] * d[63] - 2 * d[2] * d[3] * d[7] * d[63] + 2 * d[4] * d[5] * d[7] * d[63] - 2 * d[1] * d[4] * d[8] * d[63] + 2 * d[3] * d[5] * d[8] * d[63] + d[1] * d[2] * std::pow(d[63], 2) - std::pow(d[5], 2) * std::pow(d[63], 2) - 2 * d[2] * d[3] * d[6] * d[64] + 2 * d[4] * d[5] * d[6] * d[64] + 2 * d[0] * d[2] * d[7] * d[64] - 2 * std::pow(d[4], 2) * d[7] * d[64] + 2 * d[3] * d[4] * d[8] * d[64] - 2 * d[0] * d[5] * d[8] * d[64] - 2 * d[2] * d[3] * d[63] * d[64] + 2 * d[4] * d[5] * d[63] * d[64] + d[0] * d[2] * std::pow(d[64], 2) - std::pow(d[4], 2) * std::pow(d[64], 2) - 2 * d[1] * d[4] * d[6] * d[65] + 2 * d[3] * d[5] * d[6] * d[65] + 2 * d[3] * d[4] * d[7] * d[65] - 2 * d[0] * d[5] * d[7] * d[65] + 2 * d[0] * d[1] * d[8] * d[65] - 2 * std::pow(d[3], 2) * d[8] * d[65] - 2 * d[1] * d[4] * d[63] * d[65] + 2 * d[3] * d[5] * d[63] * d[65] + 2 * d[3] * d[4] * d[64] * d[65] - 2 * d[0] * d[5] * d[64] * d[65] + d[0] * d[1] * std::pow(d[65], 2) - std::pow(d[3], 2) * std::pow(d[65], 2) - d[0] * d[1] * d[2] * d[72] + d[2] * std::pow(d[3], 2) * d[72] + d[1] * std::pow(d[4], 2) * d[72] - 2 * d[3] * d[4] * d[5] * d[72] + d[0] * std::pow(d[5], 2) * d[72];
    coeffs[224] = 2 * d[10] * d[11] * d[15] * d[66] - 2 * std::pow(d[14], 2) * d[15] * d[66] - 2 * d[11] * d[12] * d[16] * d[66] + 2 * d[13] * d[14] * d[16] * d[66] - 2 * d[10] * d[13] * d[17] * d[66] + 2 * d[12] * d[14] * d[17] * d[66] - 2 * d[11] * d[12] * d[15] * d[67] + 2 * d[13] * d[14] * d[15] * d[67] + 2 * d[9] * d[11] * d[16] * d[67] - 2 * std::pow(d[13], 2) * d[16] * d[67] + 2 * d[12] * d[13] * d[17] * d[67] - 2 * d[9] * d[14] * d[17] * d[67] - 2 * d[10] * d[13] * d[15] * d[68] + 2 * d[12] * d[14] * d[15] * d[68] + 2 * d[12] * d[13] * d[16] * d[68] - 2 * d[9] * d[14] * d[16] * d[68] + 2 * d[9] * d[10] * d[17] * d[68] - 2 * std::pow(d[12], 2) * d[17] * d[68] - d[9] * d[10] * d[11] * d[73] + d[11] * std::pow(d[12], 2) * d[73] + d[10] * std::pow(d[13], 2) * d[73] - 2 * d[12] * d[13] * d[14] * d[73] + d[9] * std::pow(d[14], 2) * d[73];
    coeffs[225] = 2 * d[11] * d[15] * d[19] * d[66] - 2 * d[13] * d[17] * d[19] * d[66] + 2 * d[10] * d[15] * d[20] * d[66] - 2 * d[12] * d[16] * d[20] * d[66] - 2 * d[11] * d[16] * d[21] * d[66] + 2 * d[14] * d[17] * d[21] * d[66] + 2 * d[14] * d[16] * d[22] * d[66] - 2 * d[10] * d[17] * d[22] * d[66] - 4 * d[14] * d[15] * d[23] * d[66] + 2 * d[13] * d[16] * d[23] * d[66] + 2 * d[12] * d[17] * d[23] * d[66] + 2 * d[10] * d[11] * d[24] * d[66] - 2 * std::pow(d[14], 2) * d[24] * d[66] - 2 * d[11] * d[12] * d[25] * d[66] + 2 * d[13] * d[14] * d[25] * d[66] - 2 * d[10] * d[13] * d[26] * d[66] + 2 * d[12] * d[14] * d[26] * d[66] + 2 * d[11] * d[16] * d[18] * d[67] - 2 * d[14] * d[17] * d[18] * d[67] - 2 * d[12] * d[15] * d[20] * d[67] + 2 * d[9] * d[16] * d[20] * d[67] - 2 * d[11] * d[15] * d[21] * d[67] + 2 * d[13] * d[17] * d[21] * d[67] + 2 * d[14] * d[15] * d[22] * d[67] - 4 * d[13] * d[16] * d[22] * d[67] + 2 * d[12] * d[17] * d[22] * d[67] + 2 * d[13] * d[15] * d[23] * d[67] - 2 * d[9] * d[17] * d[23] * d[67] - 2 * d[11] * d[12] * d[24] * d[67] + 2 * d[13] * d[14] * d[24] * d[67] + 2 * d[9] * d[11] * d[25] * d[67] - 2 * std::pow(d[13], 2) * d[25] * d[67] + 2 * d[12] * d[13] * d[26] * d[67] - 2 * d[9] * d[14] * d[26] * d[67] - 2 * d[14] * d[16] * d[18] * d[68] + 2 * d[10] * d[17] * d[18] * d[68] - 2 * d[13] * d[15] * d[19] * d[68] + 2 * d[9] * d[17] * d[19] * d[68] + 2 * d[14] * d[15] * d[21] * d[68] + 2 * d[13] * d[16] * d[21] * d[68] - 4 * d[12] * d[17] * d[21] * d[68] - 2 * d[10] * d[15] * d[22] * d[68] + 2 * d[12] * d[16] * d[22] * d[68] + 2 * d[12] * d[15] * d[23] * d[68] - 2 * d[9] * d[16] * d[23] * d[68] - 2 * d[10] * d[13] * d[24] * d[68] + 2 * d[12] * d[14] * d[24] * d[68] + 2 * d[12] * d[13] * d[25] * d[68] - 2 * d[9] * d[14] * d[25] * d[68] + 2 * d[9] * d[10] * d[26] * d[68] - 2 * std::pow(d[12], 2) * d[26] * d[68] - d[10] * d[11] * d[18] * d[73] + std::pow(d[14], 2) * d[18] * d[73] - d[9] * d[11] * d[19] * d[73] + std::pow(d[13], 2) * d[19] * d[73] - d[9] * d[10] * d[20] * d[73] + std::pow(d[12], 2) * d[20] * d[73] + 2 * d[11] * d[12] * d[21] * d[73] - 2 * d[13] * d[14] * d[21] * d[73] + 2 * d[10] * d[13] * d[22] * d[73] - 2 * d[12] * d[14] * d[22] * d[73] - 2 * d[12] * d[13] * d[23] * d[73] + 2 * d[9] * d[14] * d[23] * d[73];
    coeffs[226] = 2 * d[15] * d[19] * d[20] * d[66] - 2 * d[16] * d[20] * d[21] * d[66] - 2 * d[17] * d[19] * d[22] * d[66] + 2 * d[17] * d[21] * d[23] * d[66] + 2 * d[16] * d[22] * d[23] * d[66] - 2 * d[15] * std::pow(d[23], 2) * d[66] + 2 * d[11] * d[19] * d[24] * d[66] + 2 * d[10] * d[20] * d[24] * d[66] - 4 * d[14] * d[23] * d[24] * d[66] - 2 * d[12] * d[20] * d[25] * d[66] - 2 * d[11] * d[21] * d[25] * d[66] + 2 * d[14] * d[22] * d[25] * d[66] + 2 * d[13] * d[23] * d[25] * d[66] - 2 * d[13] * d[19] * d[26] * d[66] + 2 * d[14] * d[21] * d[26] * d[66] - 2 * d[10] * d[22] * d[26] * d[66] + 2 * d[12] * d[23] * d[26] * d[66] + 2 * d[16] * d[18] * d[20] * d[67] - 2 * d[15] * d[20] * d[21] * d[67] + 2 * d[17] * d[21] * d[22] * d[67] - 2 * d[16] * std::pow(d[22], 2) * d[67] - 2 * d[17] * d[18] * d[23] * d[67] + 2 * d[15] * d[22] * d[23] * d[67] - 2 * d[12] * d[20] * d[24] * d[67] - 2 * d[11] * d[21] * d[24] * d[67] + 2 * d[14] * d[22] * d[24] * d[67] + 2 * d[13] * d[23] * d[24] * d[67] + 2 * d[11] * d[18] * d[25] * d[67] + 2 * d[9] * d[20] * d[25] * d[67] - 4 * d[13] * d[22] * d[25] * d[67] - 2 * d[14] * d[18] * d[26] * d[67] + 2 * d[13] * d[21] * d[26] * d[67] + 2 * d[12] * d[22] * d[26] * d[67] - 2 * d[9] * d[23] * d[26] * d[67] + 2 * d[17] * d[18] * d[19] * d[68] - 2 * d[17] * std::pow(d[21], 2) * d[68] - 2 * d[15] * d[19] * d[22] * d[68] + 2 * d[16] * d[21] * d[22] * d[68] - 2 * d[16] * d[18] * d[23] * d[68] + 2 * d[15] * d[21] * d[23] * d[68] - 2 * d[13] * d[19] * d[24] * d[68] + 2 * d[14] * d[21] * d[24] * d[68] - 2 * d[10] * d[22] * d[24] * d[68] + 2 * d[12] * d[23] * d[24] * d[68] - 2 * d[14] * d[18] * d[25] * d[68] + 2 * d[13] * d[21] * d[25] * d[68] + 2 * d[12] * d[22] * d[25] * d[68] - 2 * d[9] * d[23] * d[25] * d[68] + 2 * d[10] * d[18] * d[26] * d[68] + 2 * d[9] * d[19] * d[26] * d[68] - 4 * d[12] * d[21] * d[26] * d[68] - d[11] * d[18] * d[19] * d[73] - d[10] * d[18] * d[20] * d[73] - d[9] * d[19] * d[20] * d[73] + 2 * d[12] * d[20] * d[21] * d[73] + d[11] * std::pow(d[21], 2) * d[73] + 2 * d[13] * d[19] * d[22] * d[73] - 2 * d[14] * d[21] * d[22] * d[73] + d[10] * std::pow(d[22], 2) * d[73] + 2 * d[14] * d[18] * d[23] * d[73] - 2 * d[13] * d[21] * d[23] * d[73] - 2 * d[12] * d[22] * d[23] * d[73] + d[9] * std::pow(d[23], 2) * d[73];
    coeffs[227] = 2 * d[19] * d[20] * d[24] * d[66] - 2 * std::pow(d[23], 2) * d[24] * d[66] - 2 * d[20] * d[21] * d[25] * d[66] + 2 * d[22] * d[23] * d[25] * d[66] - 2 * d[19] * d[22] * d[26] * d[66] + 2 * d[21] * d[23] * d[26] * d[66] - 2 * d[20] * d[21] * d[24] * d[67] + 2 * d[22] * d[23] * d[24] * d[67] + 2 * d[18] * d[20] * d[25] * d[67] - 2 * std::pow(d[22], 2) * d[25] * d[67] + 2 * d[21] * d[22] * d[26] * d[67] - 2 * d[18] * d[23] * d[26] * d[67] - 2 * d[19] * d[22] * d[24] * d[68] + 2 * d[21] * d[23] * d[24] * d[68] + 2 * d[21] * d[22] * d[25] * d[68] - 2 * d[18] * d[23] * d[25] * d[68] + 2 * d[18] * d[19] * d[26] * d[68] - 2 * std::pow(d[21], 2) * d[26] * d[68] - d[18] * d[19] * d[20] * d[73] + d[20] * std::pow(d[21], 2) * d[73] + d[19] * std::pow(d[22], 2) * d[73] - 2 * d[21] * d[22] * d[23] * d[73] + d[18] * std::pow(d[23], 2) * d[73];
    coeffs[228] = 2 * d[11] * d[15] * d[28] * d[66] - 2 * d[13] * d[17] * d[28] * d[66] + 2 * d[10] * d[15] * d[29] * d[66] - 2 * d[12] * d[16] * d[29] * d[66] - 2 * d[11] * d[16] * d[30] * d[66] + 2 * d[14] * d[17] * d[30] * d[66] + 2 * d[14] * d[16] * d[31] * d[66] - 2 * d[10] * d[17] * d[31] * d[66] - 4 * d[14] * d[15] * d[32] * d[66] + 2 * d[13] * d[16] * d[32] * d[66] + 2 * d[12] * d[17] * d[32] * d[66] + 2 * d[10] * d[11] * d[33] * d[66] - 2 * std::pow(d[14], 2) * d[33] * d[66] - 2 * d[11] * d[12] * d[34] * d[66] + 2 * d[13] * d[14] * d[34] * d[66] - 2 * d[10] * d[13] * d[35] * d[66] + 2 * d[12] * d[14] * d[35] * d[66] + 2 * d[11] * d[16] * d[27] * d[67] - 2 * d[14] * d[17] * d[27] * d[67] - 2 * d[12] * d[15] * d[29] * d[67] + 2 * d[9] * d[16] * d[29] * d[67] - 2 * d[11] * d[15] * d[30] * d[67] + 2 * d[13] * d[17] * d[30] * d[67] + 2 * d[14] * d[15] * d[31] * d[67] - 4 * d[13] * d[16] * d[31] * d[67] + 2 * d[12] * d[17] * d[31] * d[67] + 2 * d[13] * d[15] * d[32] * d[67] - 2 * d[9] * d[17] * d[32] * d[67] - 2 * d[11] * d[12] * d[33] * d[67] + 2 * d[13] * d[14] * d[33] * d[67] + 2 * d[9] * d[11] * d[34] * d[67] - 2 * std::pow(d[13], 2) * d[34] * d[67] + 2 * d[12] * d[13] * d[35] * d[67] - 2 * d[9] * d[14] * d[35] * d[67] - 2 * d[14] * d[16] * d[27] * d[68] + 2 * d[10] * d[17] * d[27] * d[68] - 2 * d[13] * d[15] * d[28] * d[68] + 2 * d[9] * d[17] * d[28] * d[68] + 2 * d[14] * d[15] * d[30] * d[68] + 2 * d[13] * d[16] * d[30] * d[68] - 4 * d[12] * d[17] * d[30] * d[68] - 2 * d[10] * d[15] * d[31] * d[68] + 2 * d[12] * d[16] * d[31] * d[68] + 2 * d[12] * d[15] * d[32] * d[68] - 2 * d[9] * d[16] * d[32] * d[68] - 2 * d[10] * d[13] * d[33] * d[68] + 2 * d[12] * d[14] * d[33] * d[68] + 2 * d[12] * d[13] * d[34] * d[68] - 2 * d[9] * d[14] * d[34] * d[68] + 2 * d[9] * d[10] * d[35] * d[68] - 2 * std::pow(d[12], 2) * d[35] * d[68] - d[10] * d[11] * d[27] * d[73] + std::pow(d[14], 2) * d[27] * d[73] - d[9] * d[11] * d[28] * d[73] + std::pow(d[13], 2) * d[28] * d[73] - d[9] * d[10] * d[29] * d[73] + std::pow(d[12], 2) * d[29] * d[73] + 2 * d[11] * d[12] * d[30] * d[73] - 2 * d[13] * d[14] * d[30] * d[73] + 2 * d[10] * d[13] * d[31] * d[73] - 2 * d[12] * d[14] * d[31] * d[73] - 2 * d[12] * d[13] * d[32] * d[73] + 2 * d[9] * d[14] * d[32] * d[73];
    coeffs[229] = 2 * d[15] * d[20] * d[28] * d[66] - 2 * d[17] * d[22] * d[28] * d[66] + 2 * d[11] * d[24] * d[28] * d[66] - 2 * d[13] * d[26] * d[28] * d[66] + 2 * d[15] * d[19] * d[29] * d[66] - 2 * d[16] * d[21] * d[29] * d[66] + 2 * d[10] * d[24] * d[29] * d[66] - 2 * d[12] * d[25] * d[29] * d[66] - 2 * d[16] * d[20] * d[30] * d[66] + 2 * d[17] * d[23] * d[30] * d[66] - 2 * d[11] * d[25] * d[30] * d[66] + 2 * d[14] * d[26] * d[30] * d[66] - 2 * d[17] * d[19] * d[31] * d[66] + 2 * d[16] * d[23] * d[31] * d[66] + 2 * d[14] * d[25] * d[31] * d[66] - 2 * d[10] * d[26] * d[31] * d[66] + 2 * d[17] * d[21] * d[32] * d[66] + 2 * d[16] * d[22] * d[32] * d[66] - 4 * d[15] * d[23] * d[32] * d[66] - 4 * d[14] * d[24] * d[32] * d[66] + 2 * d[13] * d[25] * d[32] * d[66] + 2 * d[12] * d[26] * d[32] * d[66] + 2 * d[11] * d[19] * d[33] * d[66] + 2 * d[10] * d[20] * d[33] * d[66] - 4 * d[14] * d[23] * d[33] * d[66] - 2 * d[12] * d[20] * d[34] * d[66] - 2 * d[11] * d[21] * d[34] * d[66] + 2 * d[14] * d[22] * d[34] * d[66] + 2 * d[13] * d[23] * d[34] * d[66] - 2 * d[13] * d[19] * d[35] * d[66] + 2 * d[14] * d[21] * d[35] * d[66] - 2 * d[10] * d[22] * d[35] * d[66] + 2 * d[12] * d[23] * d[35] * d[66] + 2 * d[16] * d[20] * d[27] * d[67] - 2 * d[17] * d[23] * d[27] * d[67] + 2 * d[11] * d[25] * d[27] * d[67] - 2 * d[14] * d[26] * d[27] * d[67] + 2 * d[16] * d[18] * d[29] * d[67] - 2 * d[15] * d[21] * d[29] * d[67] - 2 * d[12] * d[24] * d[29] * d[67] + 2 * d[9] * d[25] * d[29] * d[67] - 2 * d[15] * d[20] * d[30] * d[67] + 2 * d[17] * d[22] * d[30] * d[67] - 2 * d[11] * d[24] * d[30] * d[67] + 2 * d[13] * d[26] * d[30] * d[67] + 2 * d[17] * d[21] * d[31] * d[67] - 4 * d[16] * d[22] * d[31] * d[67] + 2 * d[15] * d[23] * d[31] * d[67] + 2 * d[14] * d[24] * d[31] * d[67] - 4 * d[13] * d[25] * d[31] * d[67] + 2 * d[12] * d[26] * d[31] * d[67] - 2 * d[17] * d[18] * d[32] * d[67] + 2 * d[15] * d[22] * d[32] * d[67] + 2 * d[13] * d[24] * d[32] * d[67] - 2 * d[9] * d[26] * d[32] * d[67] - 2 * d[12] * d[20] * d[33] * d[67] - 2 * d[11] * d[21] * d[33] * d[67] + 2 * d[14] * d[22] * d[33] * d[67] + 2 * d[13] * d[23] * d[33] * d[67] + 2 * d[11] * d[18] * d[34] * d[67] + 2 * d[9] * d[20] * d[34] * d[67] - 4 * d[13] * d[22] * d[34] * d[67] - 2 * d[14] * d[18] * d[35] * d[67] + 2 * d[13] * d[21] * d[35] * d[67] + 2 * d[12] * d[22] * d[35] * d[67] - 2 * d[9] * d[23] * d[35] * d[67] + 2 * d[17] * d[19] * d[27] * d[68] - 2 * d[16] * d[23] * d[27] * d[68] - 2 * d[14] * d[25] * d[27] * d[68] + 2 * d[10] * d[26] * d[27] * d[68] + 2 * d[17] * d[18] * d[28] * d[68] - 2 * d[15] * d[22] * d[28] * d[68] - 2 * d[13] * d[24] * d[28] * d[68] + 2 * d[9] * d[26] * d[28] * d[68] - 4 * d[17] * d[21] * d[30] * d[68] + 2 * d[16] * d[22] * d[30] * d[68] + 2 * d[15] * d[23] * d[30] * d[68] + 2 * d[14] * d[24] * d[30] * d[68] + 2 * d[13] * d[25] * d[30] * d[68] - 4 * d[12] * d[26] * d[30] * d[68] - 2 * d[15] * d[19] * d[31] * d[68] + 2 * d[16] * d[21] * d[31] * d[68] - 2 * d[10] * d[24] * d[31] * d[68] + 2 * d[12] * d[25] * d[31] * d[68] - 2 * d[16] * d[18] * d[32] * d[68] + 2 * d[15] * d[21] * d[32] * d[68] + 2 * d[12] * d[24] * d[32] * d[68] - 2 * d[9] * d[25] * d[32] * d[68] - 2 * d[13] * d[19] * d[33] * d[68] + 2 * d[14] * d[21] * d[33] * d[68] - 2 * d[10] * d[22] * d[33] * d[68] + 2 * d[12] * d[23] * d[33] * d[68] - 2 * d[14] * d[18] * d[34] * d[68] + 2 * d[13] * d[21] * d[34] * d[68] + 2 * d[12] * d[22] * d[34] * d[68] - 2 * d[9] * d[23] * d[34] * d[68] + 2 * d[10] * d[18] * d[35] * d[68] + 2 * d[9] * d[19] * d[35] * d[68] - 4 * d[12] * d[21] * d[35] * d[68] - d[11] * d[19] * d[27] * d[73] - d[10] * d[20] * d[27] * d[73] + 2 * d[14] * d[23] * d[27] * d[73] - d[11] * d[18] * d[28] * d[73] - d[9] * d[20] * d[28] * d[73] + 2 * d[13] * d[22] * d[28] * d[73] - d[10] * d[18] * d[29] * d[73] - d[9] * d[19] * d[29] * d[73] + 2 * d[12] * d[21] * d[29] * d[73] + 2 * d[12] * d[20] * d[30] * d[73] + 2 * d[11] * d[21] * d[30] * d[73] - 2 * d[14] * d[22] * d[30] * d[73] - 2 * d[13] * d[23] * d[30] * d[73] + 2 * d[13] * d[19] * d[31] * d[73] - 2 * d[14] * d[21] * d[31] * d[73] + 2 * d[10] * d[22] * d[31] * d[73] - 2 * d[12] * d[23] * d[31] * d[73] + 2 * d[14] * d[18] * d[32] * d[73] - 2 * d[13] * d[21] * d[32] * d[73] - 2 * d[12] * d[22] * d[32] * d[73] + 2 * d[9] * d[23] * d[32] * d[73];
    coeffs[230] = 2 * d[20] * d[24] * d[28] * d[66] - 2 * d[22] * d[26] * d[28] * d[66] + 2 * d[19] * d[24] * d[29] * d[66] - 2 * d[21] * d[25] * d[29] * d[66] - 2 * d[20] * d[25] * d[30] * d[66] + 2 * d[23] * d[26] * d[30] * d[66] + 2 * d[23] * d[25] * d[31] * d[66] - 2 * d[19] * d[26] * d[31] * d[66] - 4 * d[23] * d[24] * d[32] * d[66] + 2 * d[22] * d[25] * d[32] * d[66] + 2 * d[21] * d[26] * d[32] * d[66] + 2 * d[19] * d[20] * d[33] * d[66] - 2 * std::pow(d[23], 2) * d[33] * d[66] - 2 * d[20] * d[21] * d[34] * d[66] + 2 * d[22] * d[23] * d[34] * d[66] - 2 * d[19] * d[22] * d[35] * d[66] + 2 * d[21] * d[23] * d[35] * d[66] + 2 * d[20] * d[25] * d[27] * d[67] - 2 * d[23] * d[26] * d[27] * d[67] - 2 * d[21] * d[24] * d[29] * d[67] + 2 * d[18] * d[25] * d[29] * d[67] - 2 * d[20] * d[24] * d[30] * d[67] + 2 * d[22] * d[26] * d[30] * d[67] + 2 * d[23] * d[24] * d[31] * d[67] - 4 * d[22] * d[25] * d[31] * d[67] + 2 * d[21] * d[26] * d[31] * d[67] + 2 * d[22] * d[24] * d[32] * d[67] - 2 * d[18] * d[26] * d[32] * d[67] - 2 * d[20] * d[21] * d[33] * d[67] + 2 * d[22] * d[23] * d[33] * d[67] + 2 * d[18] * d[20] * d[34] * d[67] - 2 * std::pow(d[22], 2) * d[34] * d[67] + 2 * d[21] * d[22] * d[35] * d[67] - 2 * d[18] * d[23] * d[35] * d[67] - 2 * d[23] * d[25] * d[27] * d[68] + 2 * d[19] * d[26] * d[27] * d[68] - 2 * d[22] * d[24] * d[28] * d[68] + 2 * d[18] * d[26] * d[28] * d[68] + 2 * d[23] * d[24] * d[30] * d[68] + 2 * d[22] * d[25] * d[30] * d[68] - 4 * d[21] * d[26] * d[30] * d[68] - 2 * d[19] * d[24] * d[31] * d[68] + 2 * d[21] * d[25] * d[31] * d[68] + 2 * d[21] * d[24] * d[32] * d[68] - 2 * d[18] * d[25] * d[32] * d[68] - 2 * d[19] * d[22] * d[33] * d[68] + 2 * d[21] * d[23] * d[33] * d[68] + 2 * d[21] * d[22] * d[34] * d[68] - 2 * d[18] * d[23] * d[34] * d[68] + 2 * d[18] * d[19] * d[35] * d[68] - 2 * std::pow(d[21], 2) * d[35] * d[68] - d[19] * d[20] * d[27] * d[73] + std::pow(d[23], 2) * d[27] * d[73] - d[18] * d[20] * d[28] * d[73] + std::pow(d[22], 2) * d[28] * d[73] - d[18] * d[19] * d[29] * d[73] + std::pow(d[21], 2) * d[29] * d[73] + 2 * d[20] * d[21] * d[30] * d[73] - 2 * d[22] * d[23] * d[30] * d[73] + 2 * d[19] * d[22] * d[31] * d[73] - 2 * d[21] * d[23] * d[31] * d[73] - 2 * d[21] * d[22] * d[32] * d[73] + 2 * d[18] * d[23] * d[32] * d[73];
    coeffs[231] = 2 * d[15] * d[28] * d[29] * d[66] - 2 * d[16] * d[29] * d[30] * d[66] - 2 * d[17] * d[28] * d[31] * d[66] + 2 * d[17] * d[30] * d[32] * d[66] + 2 * d[16] * d[31] * d[32] * d[66] - 2 * d[15] * std::pow(d[32], 2) * d[66] + 2 * d[11] * d[28] * d[33] * d[66] + 2 * d[10] * d[29] * d[33] * d[66] - 4 * d[14] * d[32] * d[33] * d[66] - 2 * d[12] * d[29] * d[34] * d[66] - 2 * d[11] * d[30] * d[34] * d[66] + 2 * d[14] * d[31] * d[34] * d[66] + 2 * d[13] * d[32] * d[34] * d[66] - 2 * d[13] * d[28] * d[35] * d[66] + 2 * d[14] * d[30] * d[35] * d[66] - 2 * d[10] * d[31] * d[35] * d[66] + 2 * d[12] * d[32] * d[35] * d[66] + 2 * d[16] * d[27] * d[29] * d[67] - 2 * d[15] * d[29] * d[30] * d[67] + 2 * d[17] * d[30] * d[31] * d[67] - 2 * d[16] * std::pow(d[31], 2) * d[67] - 2 * d[17] * d[27] * d[32] * d[67] + 2 * d[15] * d[31] * d[32] * d[67] - 2 * d[12] * d[29] * d[33] * d[67] - 2 * d[11] * d[30] * d[33] * d[67] + 2 * d[14] * d[31] * d[33] * d[67] + 2 * d[13] * d[32] * d[33] * d[67] + 2 * d[11] * d[27] * d[34] * d[67] + 2 * d[9] * d[29] * d[34] * d[67] - 4 * d[13] * d[31] * d[34] * d[67] - 2 * d[14] * d[27] * d[35] * d[67] + 2 * d[13] * d[30] * d[35] * d[67] + 2 * d[12] * d[31] * d[35] * d[67] - 2 * d[9] * d[32] * d[35] * d[67] + 2 * d[17] * d[27] * d[28] * d[68] - 2 * d[17] * std::pow(d[30], 2) * d[68] - 2 * d[15] * d[28] * d[31] * d[68] + 2 * d[16] * d[30] * d[31] * d[68] - 2 * d[16] * d[27] * d[32] * d[68] + 2 * d[15] * d[30] * d[32] * d[68] - 2 * d[13] * d[28] * d[33] * d[68] + 2 * d[14] * d[30] * d[33] * d[68] - 2 * d[10] * d[31] * d[33] * d[68] + 2 * d[12] * d[32] * d[33] * d[68] - 2 * d[14] * d[27] * d[34] * d[68] + 2 * d[13] * d[30] * d[34] * d[68] + 2 * d[12] * d[31] * d[34] * d[68] - 2 * d[9] * d[32] * d[34] * d[68] + 2 * d[10] * d[27] * d[35] * d[68] + 2 * d[9] * d[28] * d[35] * d[68] - 4 * d[12] * d[30] * d[35] * d[68] - d[11] * d[27] * d[28] * d[73] - d[10] * d[27] * d[29] * d[73] - d[9] * d[28] * d[29] * d[73] + 2 * d[12] * d[29] * d[30] * d[73] + d[11] * std::pow(d[30], 2) * d[73] + 2 * d[13] * d[28] * d[31] * d[73] - 2 * d[14] * d[30] * d[31] * d[73] + d[10] * std::pow(d[31], 2) * d[73] + 2 * d[14] * d[27] * d[32] * d[73] - 2 * d[13] * d[30] * d[32] * d[73] - 2 * d[12] * d[31] * d[32] * d[73] + d[9] * std::pow(d[32], 2) * d[73];
    coeffs[232] = 2 * d[24] * d[28] * d[29] * d[66] - 2 * d[25] * d[29] * d[30] * d[66] - 2 * d[26] * d[28] * d[31] * d[66] + 2 * d[26] * d[30] * d[32] * d[66] + 2 * d[25] * d[31] * d[32] * d[66] - 2 * d[24] * std::pow(d[32], 2) * d[66] + 2 * d[20] * d[28] * d[33] * d[66] + 2 * d[19] * d[29] * d[33] * d[66] - 4 * d[23] * d[32] * d[33] * d[66] - 2 * d[21] * d[29] * d[34] * d[66] - 2 * d[20] * d[30] * d[34] * d[66] + 2 * d[23] * d[31] * d[34] * d[66] + 2 * d[22] * d[32] * d[34] * d[66] - 2 * d[22] * d[28] * d[35] * d[66] + 2 * d[23] * d[30] * d[35] * d[66] - 2 * d[19] * d[31] * d[35] * d[66] + 2 * d[21] * d[32] * d[35] * d[66] + 2 * d[25] * d[27] * d[29] * d[67] - 2 * d[24] * d[29] * d[30] * d[67] + 2 * d[26] * d[30] * d[31] * d[67] - 2 * d[25] * std::pow(d[31], 2) * d[67] - 2 * d[26] * d[27] * d[32] * d[67] + 2 * d[24] * d[31] * d[32] * d[67] - 2 * d[21] * d[29] * d[33] * d[67] - 2 * d[20] * d[30] * d[33] * d[67] + 2 * d[23] * d[31] * d[33] * d[67] + 2 * d[22] * d[32] * d[33] * d[67] + 2 * d[20] * d[27] * d[34] * d[67] + 2 * d[18] * d[29] * d[34] * d[67] - 4 * d[22] * d[31] * d[34] * d[67] - 2 * d[23] * d[27] * d[35] * d[67] + 2 * d[22] * d[30] * d[35] * d[67] + 2 * d[21] * d[31] * d[35] * d[67] - 2 * d[18] * d[32] * d[35] * d[67] + 2 * d[26] * d[27] * d[28] * d[68] - 2 * d[26] * std::pow(d[30], 2) * d[68] - 2 * d[24] * d[28] * d[31] * d[68] + 2 * d[25] * d[30] * d[31] * d[68] - 2 * d[25] * d[27] * d[32] * d[68] + 2 * d[24] * d[30] * d[32] * d[68] - 2 * d[22] * d[28] * d[33] * d[68] + 2 * d[23] * d[30] * d[33] * d[68] - 2 * d[19] * d[31] * d[33] * d[68] + 2 * d[21] * d[32] * d[33] * d[68] - 2 * d[23] * d[27] * d[34] * d[68] + 2 * d[22] * d[30] * d[34] * d[68] + 2 * d[21] * d[31] * d[34] * d[68] - 2 * d[18] * d[32] * d[34] * d[68] + 2 * d[19] * d[27] * d[35] * d[68] + 2 * d[18] * d[28] * d[35] * d[68] - 4 * d[21] * d[30] * d[35] * d[68] - d[20] * d[27] * d[28] * d[73] - d[19] * d[27] * d[29] * d[73] - d[18] * d[28] * d[29] * d[73] + 2 * d[21] * d[29] * d[30] * d[73] + d[20] * std::pow(d[30], 2) * d[73] + 2 * d[22] * d[28] * d[31] * d[73] - 2 * d[23] * d[30] * d[31] * d[73] + d[19] * std::pow(d[31], 2) * d[73] + 2 * d[23] * d[27] * d[32] * d[73] - 2 * d[22] * d[30] * d[32] * d[73] - 2 * d[21] * d[31] * d[32] * d[73] + d[18] * std::pow(d[32], 2) * d[73];
    coeffs[233] = 2 * d[28] * d[29] * d[33] * d[66] - 2 * std::pow(d[32], 2) * d[33] * d[66] - 2 * d[29] * d[30] * d[34] * d[66] + 2 * d[31] * d[32] * d[34] * d[66] - 2 * d[28] * d[31] * d[35] * d[66] + 2 * d[30] * d[32] * d[35] * d[66] - 2 * d[29] * d[30] * d[33] * d[67] + 2 * d[31] * d[32] * d[33] * d[67] + 2 * d[27] * d[29] * d[34] * d[67] - 2 * std::pow(d[31], 2) * d[34] * d[67] + 2 * d[30] * d[31] * d[35] * d[67] - 2 * d[27] * d[32] * d[35] * d[67] - 2 * d[28] * d[31] * d[33] * d[68] + 2 * d[30] * d[32] * d[33] * d[68] + 2 * d[30] * d[31] * d[34] * d[68] - 2 * d[27] * d[32] * d[34] * d[68] + 2 * d[27] * d[28] * d[35] * d[68] - 2 * std::pow(d[30], 2) * d[35] * d[68] - d[27] * d[28] * d[29] * d[73] + d[29] * std::pow(d[30], 2) * d[73] + d[28] * std::pow(d[31], 2) * d[73] - 2 * d[30] * d[31] * d[32] * d[73] + d[27] * std::pow(d[32], 2) * d[73];
    coeffs[234] = 2 * d[11] * d[15] * d[37] * d[66] - 2 * d[13] * d[17] * d[37] * d[66] + 2 * d[10] * d[15] * d[38] * d[66] - 2 * d[12] * d[16] * d[38] * d[66] - 2 * d[11] * d[16] * d[39] * d[66] + 2 * d[14] * d[17] * d[39] * d[66] + 2 * d[14] * d[16] * d[40] * d[66] - 2 * d[10] * d[17] * d[40] * d[66] - 4 * d[14] * d[15] * d[41] * d[66] + 2 * d[13] * d[16] * d[41] * d[66] + 2 * d[12] * d[17] * d[41] * d[66] + 2 * d[10] * d[11] * d[42] * d[66] - 2 * std::pow(d[14], 2) * d[42] * d[66] - 2 * d[11] * d[12] * d[43] * d[66] + 2 * d[13] * d[14] * d[43] * d[66] - 2 * d[10] * d[13] * d[44] * d[66] + 2 * d[12] * d[14] * d[44] * d[66] + 2 * d[11] * d[16] * d[36] * d[67] - 2 * d[14] * d[17] * d[36] * d[67] - 2 * d[12] * d[15] * d[38] * d[67] + 2 * d[9] * d[16] * d[38] * d[67] - 2 * d[11] * d[15] * d[39] * d[67] + 2 * d[13] * d[17] * d[39] * d[67] + 2 * d[14] * d[15] * d[40] * d[67] - 4 * d[13] * d[16] * d[40] * d[67] + 2 * d[12] * d[17] * d[40] * d[67] + 2 * d[13] * d[15] * d[41] * d[67] - 2 * d[9] * d[17] * d[41] * d[67] - 2 * d[11] * d[12] * d[42] * d[67] + 2 * d[13] * d[14] * d[42] * d[67] + 2 * d[9] * d[11] * d[43] * d[67] - 2 * std::pow(d[13], 2) * d[43] * d[67] + 2 * d[12] * d[13] * d[44] * d[67] - 2 * d[9] * d[14] * d[44] * d[67] - 2 * d[14] * d[16] * d[36] * d[68] + 2 * d[10] * d[17] * d[36] * d[68] - 2 * d[13] * d[15] * d[37] * d[68] + 2 * d[9] * d[17] * d[37] * d[68] + 2 * d[14] * d[15] * d[39] * d[68] + 2 * d[13] * d[16] * d[39] * d[68] - 4 * d[12] * d[17] * d[39] * d[68] - 2 * d[10] * d[15] * d[40] * d[68] + 2 * d[12] * d[16] * d[40] * d[68] + 2 * d[12] * d[15] * d[41] * d[68] - 2 * d[9] * d[16] * d[41] * d[68] - 2 * d[10] * d[13] * d[42] * d[68] + 2 * d[12] * d[14] * d[42] * d[68] + 2 * d[12] * d[13] * d[43] * d[68] - 2 * d[9] * d[14] * d[43] * d[68] + 2 * d[9] * d[10] * d[44] * d[68] - 2 * std::pow(d[12], 2) * d[44] * d[68] - d[10] * d[11] * d[36] * d[73] + std::pow(d[14], 2) * d[36] * d[73] - d[9] * d[11] * d[37] * d[73] + std::pow(d[13], 2) * d[37] * d[73] - d[9] * d[10] * d[38] * d[73] + std::pow(d[12], 2) * d[38] * d[73] + 2 * d[11] * d[12] * d[39] * d[73] - 2 * d[13] * d[14] * d[39] * d[73] + 2 * d[10] * d[13] * d[40] * d[73] - 2 * d[12] * d[14] * d[40] * d[73] - 2 * d[12] * d[13] * d[41] * d[73] + 2 * d[9] * d[14] * d[41] * d[73];
    coeffs[235] = 2 * d[15] * d[20] * d[37] * d[66] - 2 * d[17] * d[22] * d[37] * d[66] + 2 * d[11] * d[24] * d[37] * d[66] - 2 * d[13] * d[26] * d[37] * d[66] + 2 * d[15] * d[19] * d[38] * d[66] - 2 * d[16] * d[21] * d[38] * d[66] + 2 * d[10] * d[24] * d[38] * d[66] - 2 * d[12] * d[25] * d[38] * d[66] - 2 * d[16] * d[20] * d[39] * d[66] + 2 * d[17] * d[23] * d[39] * d[66] - 2 * d[11] * d[25] * d[39] * d[66] + 2 * d[14] * d[26] * d[39] * d[66] - 2 * d[17] * d[19] * d[40] * d[66] + 2 * d[16] * d[23] * d[40] * d[66] + 2 * d[14] * d[25] * d[40] * d[66] - 2 * d[10] * d[26] * d[40] * d[66] + 2 * d[17] * d[21] * d[41] * d[66] + 2 * d[16] * d[22] * d[41] * d[66] - 4 * d[15] * d[23] * d[41] * d[66] - 4 * d[14] * d[24] * d[41] * d[66] + 2 * d[13] * d[25] * d[41] * d[66] + 2 * d[12] * d[26] * d[41] * d[66] + 2 * d[11] * d[19] * d[42] * d[66] + 2 * d[10] * d[20] * d[42] * d[66] - 4 * d[14] * d[23] * d[42] * d[66] - 2 * d[12] * d[20] * d[43] * d[66] - 2 * d[11] * d[21] * d[43] * d[66] + 2 * d[14] * d[22] * d[43] * d[66] + 2 * d[13] * d[23] * d[43] * d[66] - 2 * d[13] * d[19] * d[44] * d[66] + 2 * d[14] * d[21] * d[44] * d[66] - 2 * d[10] * d[22] * d[44] * d[66] + 2 * d[12] * d[23] * d[44] * d[66] + 2 * d[16] * d[20] * d[36] * d[67] - 2 * d[17] * d[23] * d[36] * d[67] + 2 * d[11] * d[25] * d[36] * d[67] - 2 * d[14] * d[26] * d[36] * d[67] + 2 * d[16] * d[18] * d[38] * d[67] - 2 * d[15] * d[21] * d[38] * d[67] - 2 * d[12] * d[24] * d[38] * d[67] + 2 * d[9] * d[25] * d[38] * d[67] - 2 * d[15] * d[20] * d[39] * d[67] + 2 * d[17] * d[22] * d[39] * d[67] - 2 * d[11] * d[24] * d[39] * d[67] + 2 * d[13] * d[26] * d[39] * d[67] + 2 * d[17] * d[21] * d[40] * d[67] - 4 * d[16] * d[22] * d[40] * d[67] + 2 * d[15] * d[23] * d[40] * d[67] + 2 * d[14] * d[24] * d[40] * d[67] - 4 * d[13] * d[25] * d[40] * d[67] + 2 * d[12] * d[26] * d[40] * d[67] - 2 * d[17] * d[18] * d[41] * d[67] + 2 * d[15] * d[22] * d[41] * d[67] + 2 * d[13] * d[24] * d[41] * d[67] - 2 * d[9] * d[26] * d[41] * d[67] - 2 * d[12] * d[20] * d[42] * d[67] - 2 * d[11] * d[21] * d[42] * d[67] + 2 * d[14] * d[22] * d[42] * d[67] + 2 * d[13] * d[23] * d[42] * d[67] + 2 * d[11] * d[18] * d[43] * d[67] + 2 * d[9] * d[20] * d[43] * d[67] - 4 * d[13] * d[22] * d[43] * d[67] - 2 * d[14] * d[18] * d[44] * d[67] + 2 * d[13] * d[21] * d[44] * d[67] + 2 * d[12] * d[22] * d[44] * d[67] - 2 * d[9] * d[23] * d[44] * d[67] + 2 * d[17] * d[19] * d[36] * d[68] - 2 * d[16] * d[23] * d[36] * d[68] - 2 * d[14] * d[25] * d[36] * d[68] + 2 * d[10] * d[26] * d[36] * d[68] + 2 * d[17] * d[18] * d[37] * d[68] - 2 * d[15] * d[22] * d[37] * d[68] - 2 * d[13] * d[24] * d[37] * d[68] + 2 * d[9] * d[26] * d[37] * d[68] - 4 * d[17] * d[21] * d[39] * d[68] + 2 * d[16] * d[22] * d[39] * d[68] + 2 * d[15] * d[23] * d[39] * d[68] + 2 * d[14] * d[24] * d[39] * d[68] + 2 * d[13] * d[25] * d[39] * d[68] - 4 * d[12] * d[26] * d[39] * d[68] - 2 * d[15] * d[19] * d[40] * d[68] + 2 * d[16] * d[21] * d[40] * d[68] - 2 * d[10] * d[24] * d[40] * d[68] + 2 * d[12] * d[25] * d[40] * d[68] - 2 * d[16] * d[18] * d[41] * d[68] + 2 * d[15] * d[21] * d[41] * d[68] + 2 * d[12] * d[24] * d[41] * d[68] - 2 * d[9] * d[25] * d[41] * d[68] - 2 * d[13] * d[19] * d[42] * d[68] + 2 * d[14] * d[21] * d[42] * d[68] - 2 * d[10] * d[22] * d[42] * d[68] + 2 * d[12] * d[23] * d[42] * d[68] - 2 * d[14] * d[18] * d[43] * d[68] + 2 * d[13] * d[21] * d[43] * d[68] + 2 * d[12] * d[22] * d[43] * d[68] - 2 * d[9] * d[23] * d[43] * d[68] + 2 * d[10] * d[18] * d[44] * d[68] + 2 * d[9] * d[19] * d[44] * d[68] - 4 * d[12] * d[21] * d[44] * d[68] - d[11] * d[19] * d[36] * d[73] - d[10] * d[20] * d[36] * d[73] + 2 * d[14] * d[23] * d[36] * d[73] - d[11] * d[18] * d[37] * d[73] - d[9] * d[20] * d[37] * d[73] + 2 * d[13] * d[22] * d[37] * d[73] - d[10] * d[18] * d[38] * d[73] - d[9] * d[19] * d[38] * d[73] + 2 * d[12] * d[21] * d[38] * d[73] + 2 * d[12] * d[20] * d[39] * d[73] + 2 * d[11] * d[21] * d[39] * d[73] - 2 * d[14] * d[22] * d[39] * d[73] - 2 * d[13] * d[23] * d[39] * d[73] + 2 * d[13] * d[19] * d[40] * d[73] - 2 * d[14] * d[21] * d[40] * d[73] + 2 * d[10] * d[22] * d[40] * d[73] - 2 * d[12] * d[23] * d[40] * d[73] + 2 * d[14] * d[18] * d[41] * d[73] - 2 * d[13] * d[21] * d[41] * d[73] - 2 * d[12] * d[22] * d[41] * d[73] + 2 * d[9] * d[23] * d[41] * d[73];
    coeffs[236] = 2 * d[20] * d[24] * d[37] * d[66] - 2 * d[22] * d[26] * d[37] * d[66] + 2 * d[19] * d[24] * d[38] * d[66] - 2 * d[21] * d[25] * d[38] * d[66] - 2 * d[20] * d[25] * d[39] * d[66] + 2 * d[23] * d[26] * d[39] * d[66] + 2 * d[23] * d[25] * d[40] * d[66] - 2 * d[19] * d[26] * d[40] * d[66] - 4 * d[23] * d[24] * d[41] * d[66] + 2 * d[22] * d[25] * d[41] * d[66] + 2 * d[21] * d[26] * d[41] * d[66] + 2 * d[19] * d[20] * d[42] * d[66] - 2 * std::pow(d[23], 2) * d[42] * d[66] - 2 * d[20] * d[21] * d[43] * d[66] + 2 * d[22] * d[23] * d[43] * d[66] - 2 * d[19] * d[22] * d[44] * d[66] + 2 * d[21] * d[23] * d[44] * d[66] + 2 * d[20] * d[25] * d[36] * d[67] - 2 * d[23] * d[26] * d[36] * d[67] - 2 * d[21] * d[24] * d[38] * d[67] + 2 * d[18] * d[25] * d[38] * d[67] - 2 * d[20] * d[24] * d[39] * d[67] + 2 * d[22] * d[26] * d[39] * d[67] + 2 * d[23] * d[24] * d[40] * d[67] - 4 * d[22] * d[25] * d[40] * d[67] + 2 * d[21] * d[26] * d[40] * d[67] + 2 * d[22] * d[24] * d[41] * d[67] - 2 * d[18] * d[26] * d[41] * d[67] - 2 * d[20] * d[21] * d[42] * d[67] + 2 * d[22] * d[23] * d[42] * d[67] + 2 * d[18] * d[20] * d[43] * d[67] - 2 * std::pow(d[22], 2) * d[43] * d[67] + 2 * d[21] * d[22] * d[44] * d[67] - 2 * d[18] * d[23] * d[44] * d[67] - 2 * d[23] * d[25] * d[36] * d[68] + 2 * d[19] * d[26] * d[36] * d[68] - 2 * d[22] * d[24] * d[37] * d[68] + 2 * d[18] * d[26] * d[37] * d[68] + 2 * d[23] * d[24] * d[39] * d[68] + 2 * d[22] * d[25] * d[39] * d[68] - 4 * d[21] * d[26] * d[39] * d[68] - 2 * d[19] * d[24] * d[40] * d[68] + 2 * d[21] * d[25] * d[40] * d[68] + 2 * d[21] * d[24] * d[41] * d[68] - 2 * d[18] * d[25] * d[41] * d[68] - 2 * d[19] * d[22] * d[42] * d[68] + 2 * d[21] * d[23] * d[42] * d[68] + 2 * d[21] * d[22] * d[43] * d[68] - 2 * d[18] * d[23] * d[43] * d[68] + 2 * d[18] * d[19] * d[44] * d[68] - 2 * std::pow(d[21], 2) * d[44] * d[68] - d[19] * d[20] * d[36] * d[73] + std::pow(d[23], 2) * d[36] * d[73] - d[18] * d[20] * d[37] * d[73] + std::pow(d[22], 2) * d[37] * d[73] - d[18] * d[19] * d[38] * d[73] + std::pow(d[21], 2) * d[38] * d[73] + 2 * d[20] * d[21] * d[39] * d[73] - 2 * d[22] * d[23] * d[39] * d[73] + 2 * d[19] * d[22] * d[40] * d[73] - 2 * d[21] * d[23] * d[40] * d[73] - 2 * d[21] * d[22] * d[41] * d[73] + 2 * d[18] * d[23] * d[41] * d[73];
    coeffs[237] = 2 * d[15] * d[29] * d[37] * d[66] - 2 * d[17] * d[31] * d[37] * d[66] + 2 * d[11] * d[33] * d[37] * d[66] - 2 * d[13] * d[35] * d[37] * d[66] + 2 * d[15] * d[28] * d[38] * d[66] - 2 * d[16] * d[30] * d[38] * d[66] + 2 * d[10] * d[33] * d[38] * d[66] - 2 * d[12] * d[34] * d[38] * d[66] - 2 * d[16] * d[29] * d[39] * d[66] + 2 * d[17] * d[32] * d[39] * d[66] - 2 * d[11] * d[34] * d[39] * d[66] + 2 * d[14] * d[35] * d[39] * d[66] - 2 * d[17] * d[28] * d[40] * d[66] + 2 * d[16] * d[32] * d[40] * d[66] + 2 * d[14] * d[34] * d[40] * d[66] - 2 * d[10] * d[35] * d[40] * d[66] + 2 * d[17] * d[30] * d[41] * d[66] + 2 * d[16] * d[31] * d[41] * d[66] - 4 * d[15] * d[32] * d[41] * d[66] - 4 * d[14] * d[33] * d[41] * d[66] + 2 * d[13] * d[34] * d[41] * d[66] + 2 * d[12] * d[35] * d[41] * d[66] + 2 * d[11] * d[28] * d[42] * d[66] + 2 * d[10] * d[29] * d[42] * d[66] - 4 * d[14] * d[32] * d[42] * d[66] - 2 * d[12] * d[29] * d[43] * d[66] - 2 * d[11] * d[30] * d[43] * d[66] + 2 * d[14] * d[31] * d[43] * d[66] + 2 * d[13] * d[32] * d[43] * d[66] - 2 * d[13] * d[28] * d[44] * d[66] + 2 * d[14] * d[30] * d[44] * d[66] - 2 * d[10] * d[31] * d[44] * d[66] + 2 * d[12] * d[32] * d[44] * d[66] + 2 * d[16] * d[29] * d[36] * d[67] - 2 * d[17] * d[32] * d[36] * d[67] + 2 * d[11] * d[34] * d[36] * d[67] - 2 * d[14] * d[35] * d[36] * d[67] + 2 * d[16] * d[27] * d[38] * d[67] - 2 * d[15] * d[30] * d[38] * d[67] - 2 * d[12] * d[33] * d[38] * d[67] + 2 * d[9] * d[34] * d[38] * d[67] - 2 * d[15] * d[29] * d[39] * d[67] + 2 * d[17] * d[31] * d[39] * d[67] - 2 * d[11] * d[33] * d[39] * d[67] + 2 * d[13] * d[35] * d[39] * d[67] + 2 * d[17] * d[30] * d[40] * d[67] - 4 * d[16] * d[31] * d[40] * d[67] + 2 * d[15] * d[32] * d[40] * d[67] + 2 * d[14] * d[33] * d[40] * d[67] - 4 * d[13] * d[34] * d[40] * d[67] + 2 * d[12] * d[35] * d[40] * d[67] - 2 * d[17] * d[27] * d[41] * d[67] + 2 * d[15] * d[31] * d[41] * d[67] + 2 * d[13] * d[33] * d[41] * d[67] - 2 * d[9] * d[35] * d[41] * d[67] - 2 * d[12] * d[29] * d[42] * d[67] - 2 * d[11] * d[30] * d[42] * d[67] + 2 * d[14] * d[31] * d[42] * d[67] + 2 * d[13] * d[32] * d[42] * d[67] + 2 * d[11] * d[27] * d[43] * d[67] + 2 * d[9] * d[29] * d[43] * d[67] - 4 * d[13] * d[31] * d[43] * d[67] - 2 * d[14] * d[27] * d[44] * d[67] + 2 * d[13] * d[30] * d[44] * d[67] + 2 * d[12] * d[31] * d[44] * d[67] - 2 * d[9] * d[32] * d[44] * d[67] + 2 * d[17] * d[28] * d[36] * d[68] - 2 * d[16] * d[32] * d[36] * d[68] - 2 * d[14] * d[34] * d[36] * d[68] + 2 * d[10] * d[35] * d[36] * d[68] + 2 * d[17] * d[27] * d[37] * d[68] - 2 * d[15] * d[31] * d[37] * d[68] - 2 * d[13] * d[33] * d[37] * d[68] + 2 * d[9] * d[35] * d[37] * d[68] - 4 * d[17] * d[30] * d[39] * d[68] + 2 * d[16] * d[31] * d[39] * d[68] + 2 * d[15] * d[32] * d[39] * d[68] + 2 * d[14] * d[33] * d[39] * d[68] + 2 * d[13] * d[34] * d[39] * d[68] - 4 * d[12] * d[35] * d[39] * d[68] - 2 * d[15] * d[28] * d[40] * d[68] + 2 * d[16] * d[30] * d[40] * d[68] - 2 * d[10] * d[33] * d[40] * d[68] + 2 * d[12] * d[34] * d[40] * d[68] - 2 * d[16] * d[27] * d[41] * d[68] + 2 * d[15] * d[30] * d[41] * d[68] + 2 * d[12] * d[33] * d[41] * d[68] - 2 * d[9] * d[34] * d[41] * d[68] - 2 * d[13] * d[28] * d[42] * d[68] + 2 * d[14] * d[30] * d[42] * d[68] - 2 * d[10] * d[31] * d[42] * d[68] + 2 * d[12] * d[32] * d[42] * d[68] - 2 * d[14] * d[27] * d[43] * d[68] + 2 * d[13] * d[30] * d[43] * d[68] + 2 * d[12] * d[31] * d[43] * d[68] - 2 * d[9] * d[32] * d[43] * d[68] + 2 * d[10] * d[27] * d[44] * d[68] + 2 * d[9] * d[28] * d[44] * d[68] - 4 * d[12] * d[30] * d[44] * d[68] - d[11] * d[28] * d[36] * d[73] - d[10] * d[29] * d[36] * d[73] + 2 * d[14] * d[32] * d[36] * d[73] - d[11] * d[27] * d[37] * d[73] - d[9] * d[29] * d[37] * d[73] + 2 * d[13] * d[31] * d[37] * d[73] - d[10] * d[27] * d[38] * d[73] - d[9] * d[28] * d[38] * d[73] + 2 * d[12] * d[30] * d[38] * d[73] + 2 * d[12] * d[29] * d[39] * d[73] + 2 * d[11] * d[30] * d[39] * d[73] - 2 * d[14] * d[31] * d[39] * d[73] - 2 * d[13] * d[32] * d[39] * d[73] + 2 * d[13] * d[28] * d[40] * d[73] - 2 * d[14] * d[30] * d[40] * d[73] + 2 * d[10] * d[31] * d[40] * d[73] - 2 * d[12] * d[32] * d[40] * d[73] + 2 * d[14] * d[27] * d[41] * d[73] - 2 * d[13] * d[30] * d[41] * d[73] - 2 * d[12] * d[31] * d[41] * d[73] + 2 * d[9] * d[32] * d[41] * d[73];
    coeffs[238] = 2 * d[24] * d[29] * d[37] * d[66] - 2 * d[26] * d[31] * d[37] * d[66] + 2 * d[20] * d[33] * d[37] * d[66] - 2 * d[22] * d[35] * d[37] * d[66] + 2 * d[24] * d[28] * d[38] * d[66] - 2 * d[25] * d[30] * d[38] * d[66] + 2 * d[19] * d[33] * d[38] * d[66] - 2 * d[21] * d[34] * d[38] * d[66] - 2 * d[25] * d[29] * d[39] * d[66] + 2 * d[26] * d[32] * d[39] * d[66] - 2 * d[20] * d[34] * d[39] * d[66] + 2 * d[23] * d[35] * d[39] * d[66] - 2 * d[26] * d[28] * d[40] * d[66] + 2 * d[25] * d[32] * d[40] * d[66] + 2 * d[23] * d[34] * d[40] * d[66] - 2 * d[19] * d[35] * d[40] * d[66] + 2 * d[26] * d[30] * d[41] * d[66] + 2 * d[25] * d[31] * d[41] * d[66] - 4 * d[24] * d[32] * d[41] * d[66] - 4 * d[23] * d[33] * d[41] * d[66] + 2 * d[22] * d[34] * d[41] * d[66] + 2 * d[21] * d[35] * d[41] * d[66] + 2 * d[20] * d[28] * d[42] * d[66] + 2 * d[19] * d[29] * d[42] * d[66] - 4 * d[23] * d[32] * d[42] * d[66] - 2 * d[21] * d[29] * d[43] * d[66] - 2 * d[20] * d[30] * d[43] * d[66] + 2 * d[23] * d[31] * d[43] * d[66] + 2 * d[22] * d[32] * d[43] * d[66] - 2 * d[22] * d[28] * d[44] * d[66] + 2 * d[23] * d[30] * d[44] * d[66] - 2 * d[19] * d[31] * d[44] * d[66] + 2 * d[21] * d[32] * d[44] * d[66] + 2 * d[25] * d[29] * d[36] * d[67] - 2 * d[26] * d[32] * d[36] * d[67] + 2 * d[20] * d[34] * d[36] * d[67] - 2 * d[23] * d[35] * d[36] * d[67] + 2 * d[25] * d[27] * d[38] * d[67] - 2 * d[24] * d[30] * d[38] * d[67] - 2 * d[21] * d[33] * d[38] * d[67] + 2 * d[18] * d[34] * d[38] * d[67] - 2 * d[24] * d[29] * d[39] * d[67] + 2 * d[26] * d[31] * d[39] * d[67] - 2 * d[20] * d[33] * d[39] * d[67] + 2 * d[22] * d[35] * d[39] * d[67] + 2 * d[26] * d[30] * d[40] * d[67] - 4 * d[25] * d[31] * d[40] * d[67] + 2 * d[24] * d[32] * d[40] * d[67] + 2 * d[23] * d[33] * d[40] * d[67] - 4 * d[22] * d[34] * d[40] * d[67] + 2 * d[21] * d[35] * d[40] * d[67] - 2 * d[26] * d[27] * d[41] * d[67] + 2 * d[24] * d[31] * d[41] * d[67] + 2 * d[22] * d[33] * d[41] * d[67] - 2 * d[18] * d[35] * d[41] * d[67] - 2 * d[21] * d[29] * d[42] * d[67] - 2 * d[20] * d[30] * d[42] * d[67] + 2 * d[23] * d[31] * d[42] * d[67] + 2 * d[22] * d[32] * d[42] * d[67] + 2 * d[20] * d[27] * d[43] * d[67] + 2 * d[18] * d[29] * d[43] * d[67] - 4 * d[22] * d[31] * d[43] * d[67] - 2 * d[23] * d[27] * d[44] * d[67] + 2 * d[22] * d[30] * d[44] * d[67] + 2 * d[21] * d[31] * d[44] * d[67] - 2 * d[18] * d[32] * d[44] * d[67] + 2 * d[26] * d[28] * d[36] * d[68] - 2 * d[25] * d[32] * d[36] * d[68] - 2 * d[23] * d[34] * d[36] * d[68] + 2 * d[19] * d[35] * d[36] * d[68] + 2 * d[26] * d[27] * d[37] * d[68] - 2 * d[24] * d[31] * d[37] * d[68] - 2 * d[22] * d[33] * d[37] * d[68] + 2 * d[18] * d[35] * d[37] * d[68] - 4 * d[26] * d[30] * d[39] * d[68] + 2 * d[25] * d[31] * d[39] * d[68] + 2 * d[24] * d[32] * d[39] * d[68] + 2 * d[23] * d[33] * d[39] * d[68] + 2 * d[22] * d[34] * d[39] * d[68] - 4 * d[21] * d[35] * d[39] * d[68] - 2 * d[24] * d[28] * d[40] * d[68] + 2 * d[25] * d[30] * d[40] * d[68] - 2 * d[19] * d[33] * d[40] * d[68] + 2 * d[21] * d[34] * d[40] * d[68] - 2 * d[25] * d[27] * d[41] * d[68] + 2 * d[24] * d[30] * d[41] * d[68] + 2 * d[21] * d[33] * d[41] * d[68] - 2 * d[18] * d[34] * d[41] * d[68] - 2 * d[22] * d[28] * d[42] * d[68] + 2 * d[23] * d[30] * d[42] * d[68] - 2 * d[19] * d[31] * d[42] * d[68] + 2 * d[21] * d[32] * d[42] * d[68] - 2 * d[23] * d[27] * d[43] * d[68] + 2 * d[22] * d[30] * d[43] * d[68] + 2 * d[21] * d[31] * d[43] * d[68] - 2 * d[18] * d[32] * d[43] * d[68] + 2 * d[19] * d[27] * d[44] * d[68] + 2 * d[18] * d[28] * d[44] * d[68] - 4 * d[21] * d[30] * d[44] * d[68] - d[20] * d[28] * d[36] * d[73] - d[19] * d[29] * d[36] * d[73] + 2 * d[23] * d[32] * d[36] * d[73] - d[20] * d[27] * d[37] * d[73] - d[18] * d[29] * d[37] * d[73] + 2 * d[22] * d[31] * d[37] * d[73] - d[19] * d[27] * d[38] * d[73] - d[18] * d[28] * d[38] * d[73] + 2 * d[21] * d[30] * d[38] * d[73] + 2 * d[21] * d[29] * d[39] * d[73] + 2 * d[20] * d[30] * d[39] * d[73] - 2 * d[23] * d[31] * d[39] * d[73] - 2 * d[22] * d[32] * d[39] * d[73] + 2 * d[22] * d[28] * d[40] * d[73] - 2 * d[23] * d[30] * d[40] * d[73] + 2 * d[19] * d[31] * d[40] * d[73] - 2 * d[21] * d[32] * d[40] * d[73] + 2 * d[23] * d[27] * d[41] * d[73] - 2 * d[22] * d[30] * d[41] * d[73] - 2 * d[21] * d[31] * d[41] * d[73] + 2 * d[18] * d[32] * d[41] * d[73];
    coeffs[239] = 2 * d[29] * d[33] * d[37] * d[66] - 2 * d[31] * d[35] * d[37] * d[66] + 2 * d[28] * d[33] * d[38] * d[66] - 2 * d[30] * d[34] * d[38] * d[66] - 2 * d[29] * d[34] * d[39] * d[66] + 2 * d[32] * d[35] * d[39] * d[66] + 2 * d[32] * d[34] * d[40] * d[66] - 2 * d[28] * d[35] * d[40] * d[66] - 4 * d[32] * d[33] * d[41] * d[66] + 2 * d[31] * d[34] * d[41] * d[66] + 2 * d[30] * d[35] * d[41] * d[66] + 2 * d[28] * d[29] * d[42] * d[66] - 2 * std::pow(d[32], 2) * d[42] * d[66] - 2 * d[29] * d[30] * d[43] * d[66] + 2 * d[31] * d[32] * d[43] * d[66] - 2 * d[28] * d[31] * d[44] * d[66] + 2 * d[30] * d[32] * d[44] * d[66] + 2 * d[29] * d[34] * d[36] * d[67] - 2 * d[32] * d[35] * d[36] * d[67] - 2 * d[30] * d[33] * d[38] * d[67] + 2 * d[27] * d[34] * d[38] * d[67] - 2 * d[29] * d[33] * d[39] * d[67] + 2 * d[31] * d[35] * d[39] * d[67] + 2 * d[32] * d[33] * d[40] * d[67] - 4 * d[31] * d[34] * d[40] * d[67] + 2 * d[30] * d[35] * d[40] * d[67] + 2 * d[31] * d[33] * d[41] * d[67] - 2 * d[27] * d[35] * d[41] * d[67] - 2 * d[29] * d[30] * d[42] * d[67] + 2 * d[31] * d[32] * d[42] * d[67] + 2 * d[27] * d[29] * d[43] * d[67] - 2 * std::pow(d[31], 2) * d[43] * d[67] + 2 * d[30] * d[31] * d[44] * d[67] - 2 * d[27] * d[32] * d[44] * d[67] - 2 * d[32] * d[34] * d[36] * d[68] + 2 * d[28] * d[35] * d[36] * d[68] - 2 * d[31] * d[33] * d[37] * d[68] + 2 * d[27] * d[35] * d[37] * d[68] + 2 * d[32] * d[33] * d[39] * d[68] + 2 * d[31] * d[34] * d[39] * d[68] - 4 * d[30] * d[35] * d[39] * d[68] - 2 * d[28] * d[33] * d[40] * d[68] + 2 * d[30] * d[34] * d[40] * d[68] + 2 * d[30] * d[33] * d[41] * d[68] - 2 * d[27] * d[34] * d[41] * d[68] - 2 * d[28] * d[31] * d[42] * d[68] + 2 * d[30] * d[32] * d[42] * d[68] + 2 * d[30] * d[31] * d[43] * d[68] - 2 * d[27] * d[32] * d[43] * d[68] + 2 * d[27] * d[28] * d[44] * d[68] - 2 * std::pow(d[30], 2) * d[44] * d[68] - d[28] * d[29] * d[36] * d[73] + std::pow(d[32], 2) * d[36] * d[73] - d[27] * d[29] * d[37] * d[73] + std::pow(d[31], 2) * d[37] * d[73] - d[27] * d[28] * d[38] * d[73] + std::pow(d[30], 2) * d[38] * d[73] + 2 * d[29] * d[30] * d[39] * d[73] - 2 * d[31] * d[32] * d[39] * d[73] + 2 * d[28] * d[31] * d[40] * d[73] - 2 * d[30] * d[32] * d[40] * d[73] - 2 * d[30] * d[31] * d[41] * d[73] + 2 * d[27] * d[32] * d[41] * d[73];
    coeffs[240] = 2 * d[15] * d[37] * d[38] * d[66] - 2 * d[16] * d[38] * d[39] * d[66] - 2 * d[17] * d[37] * d[40] * d[66] + 2 * d[17] * d[39] * d[41] * d[66] + 2 * d[16] * d[40] * d[41] * d[66] - 2 * d[15] * std::pow(d[41], 2) * d[66] + 2 * d[11] * d[37] * d[42] * d[66] + 2 * d[10] * d[38] * d[42] * d[66] - 4 * d[14] * d[41] * d[42] * d[66] - 2 * d[12] * d[38] * d[43] * d[66] - 2 * d[11] * d[39] * d[43] * d[66] + 2 * d[14] * d[40] * d[43] * d[66] + 2 * d[13] * d[41] * d[43] * d[66] - 2 * d[13] * d[37] * d[44] * d[66] + 2 * d[14] * d[39] * d[44] * d[66] - 2 * d[10] * d[40] * d[44] * d[66] + 2 * d[12] * d[41] * d[44] * d[66] + 2 * d[16] * d[36] * d[38] * d[67] - 2 * d[15] * d[38] * d[39] * d[67] + 2 * d[17] * d[39] * d[40] * d[67] - 2 * d[16] * std::pow(d[40], 2) * d[67] - 2 * d[17] * d[36] * d[41] * d[67] + 2 * d[15] * d[40] * d[41] * d[67] - 2 * d[12] * d[38] * d[42] * d[67] - 2 * d[11] * d[39] * d[42] * d[67] + 2 * d[14] * d[40] * d[42] * d[67] + 2 * d[13] * d[41] * d[42] * d[67] + 2 * d[11] * d[36] * d[43] * d[67] + 2 * d[9] * d[38] * d[43] * d[67] - 4 * d[13] * d[40] * d[43] * d[67] - 2 * d[14] * d[36] * d[44] * d[67] + 2 * d[13] * d[39] * d[44] * d[67] + 2 * d[12] * d[40] * d[44] * d[67] - 2 * d[9] * d[41] * d[44] * d[67] + 2 * d[17] * d[36] * d[37] * d[68] - 2 * d[17] * std::pow(d[39], 2) * d[68] - 2 * d[15] * d[37] * d[40] * d[68] + 2 * d[16] * d[39] * d[40] * d[68] - 2 * d[16] * d[36] * d[41] * d[68] + 2 * d[15] * d[39] * d[41] * d[68] - 2 * d[13] * d[37] * d[42] * d[68] + 2 * d[14] * d[39] * d[42] * d[68] - 2 * d[10] * d[40] * d[42] * d[68] + 2 * d[12] * d[41] * d[42] * d[68] - 2 * d[14] * d[36] * d[43] * d[68] + 2 * d[13] * d[39] * d[43] * d[68] + 2 * d[12] * d[40] * d[43] * d[68] - 2 * d[9] * d[41] * d[43] * d[68] + 2 * d[10] * d[36] * d[44] * d[68] + 2 * d[9] * d[37] * d[44] * d[68] - 4 * d[12] * d[39] * d[44] * d[68] - d[11] * d[36] * d[37] * d[73] - d[10] * d[36] * d[38] * d[73] - d[9] * d[37] * d[38] * d[73] + 2 * d[12] * d[38] * d[39] * d[73] + d[11] * std::pow(d[39], 2) * d[73] + 2 * d[13] * d[37] * d[40] * d[73] - 2 * d[14] * d[39] * d[40] * d[73] + d[10] * std::pow(d[40], 2) * d[73] + 2 * d[14] * d[36] * d[41] * d[73] - 2 * d[13] * d[39] * d[41] * d[73] - 2 * d[12] * d[40] * d[41] * d[73] + d[9] * std::pow(d[41], 2) * d[73];
    coeffs[241] = 2 * d[24] * d[37] * d[38] * d[66] - 2 * d[25] * d[38] * d[39] * d[66] - 2 * d[26] * d[37] * d[40] * d[66] + 2 * d[26] * d[39] * d[41] * d[66] + 2 * d[25] * d[40] * d[41] * d[66] - 2 * d[24] * std::pow(d[41], 2) * d[66] + 2 * d[20] * d[37] * d[42] * d[66] + 2 * d[19] * d[38] * d[42] * d[66] - 4 * d[23] * d[41] * d[42] * d[66] - 2 * d[21] * d[38] * d[43] * d[66] - 2 * d[20] * d[39] * d[43] * d[66] + 2 * d[23] * d[40] * d[43] * d[66] + 2 * d[22] * d[41] * d[43] * d[66] - 2 * d[22] * d[37] * d[44] * d[66] + 2 * d[23] * d[39] * d[44] * d[66] - 2 * d[19] * d[40] * d[44] * d[66] + 2 * d[21] * d[41] * d[44] * d[66] + 2 * d[25] * d[36] * d[38] * d[67] - 2 * d[24] * d[38] * d[39] * d[67] + 2 * d[26] * d[39] * d[40] * d[67] - 2 * d[25] * std::pow(d[40], 2) * d[67] - 2 * d[26] * d[36] * d[41] * d[67] + 2 * d[24] * d[40] * d[41] * d[67] - 2 * d[21] * d[38] * d[42] * d[67] - 2 * d[20] * d[39] * d[42] * d[67] + 2 * d[23] * d[40] * d[42] * d[67] + 2 * d[22] * d[41] * d[42] * d[67] + 2 * d[20] * d[36] * d[43] * d[67] + 2 * d[18] * d[38] * d[43] * d[67] - 4 * d[22] * d[40] * d[43] * d[67] - 2 * d[23] * d[36] * d[44] * d[67] + 2 * d[22] * d[39] * d[44] * d[67] + 2 * d[21] * d[40] * d[44] * d[67] - 2 * d[18] * d[41] * d[44] * d[67] + 2 * d[26] * d[36] * d[37] * d[68] - 2 * d[26] * std::pow(d[39], 2) * d[68] - 2 * d[24] * d[37] * d[40] * d[68] + 2 * d[25] * d[39] * d[40] * d[68] - 2 * d[25] * d[36] * d[41] * d[68] + 2 * d[24] * d[39] * d[41] * d[68] - 2 * d[22] * d[37] * d[42] * d[68] + 2 * d[23] * d[39] * d[42] * d[68] - 2 * d[19] * d[40] * d[42] * d[68] + 2 * d[21] * d[41] * d[42] * d[68] - 2 * d[23] * d[36] * d[43] * d[68] + 2 * d[22] * d[39] * d[43] * d[68] + 2 * d[21] * d[40] * d[43] * d[68] - 2 * d[18] * d[41] * d[43] * d[68] + 2 * d[19] * d[36] * d[44] * d[68] + 2 * d[18] * d[37] * d[44] * d[68] - 4 * d[21] * d[39] * d[44] * d[68] - d[20] * d[36] * d[37] * d[73] - d[19] * d[36] * d[38] * d[73] - d[18] * d[37] * d[38] * d[73] + 2 * d[21] * d[38] * d[39] * d[73] + d[20] * std::pow(d[39], 2) * d[73] + 2 * d[22] * d[37] * d[40] * d[73] - 2 * d[23] * d[39] * d[40] * d[73] + d[19] * std::pow(d[40], 2) * d[73] + 2 * d[23] * d[36] * d[41] * d[73] - 2 * d[22] * d[39] * d[41] * d[73] - 2 * d[21] * d[40] * d[41] * d[73] + d[18] * std::pow(d[41], 2) * d[73];
    coeffs[242] = 2 * d[33] * d[37] * d[38] * d[66] - 2 * d[34] * d[38] * d[39] * d[66] - 2 * d[35] * d[37] * d[40] * d[66] + 2 * d[35] * d[39] * d[41] * d[66] + 2 * d[34] * d[40] * d[41] * d[66] - 2 * d[33] * std::pow(d[41], 2) * d[66] + 2 * d[29] * d[37] * d[42] * d[66] + 2 * d[28] * d[38] * d[42] * d[66] - 4 * d[32] * d[41] * d[42] * d[66] - 2 * d[30] * d[38] * d[43] * d[66] - 2 * d[29] * d[39] * d[43] * d[66] + 2 * d[32] * d[40] * d[43] * d[66] + 2 * d[31] * d[41] * d[43] * d[66] - 2 * d[31] * d[37] * d[44] * d[66] + 2 * d[32] * d[39] * d[44] * d[66] - 2 * d[28] * d[40] * d[44] * d[66] + 2 * d[30] * d[41] * d[44] * d[66] + 2 * d[34] * d[36] * d[38] * d[67] - 2 * d[33] * d[38] * d[39] * d[67] + 2 * d[35] * d[39] * d[40] * d[67] - 2 * d[34] * std::pow(d[40], 2) * d[67] - 2 * d[35] * d[36] * d[41] * d[67] + 2 * d[33] * d[40] * d[41] * d[67] - 2 * d[30] * d[38] * d[42] * d[67] - 2 * d[29] * d[39] * d[42] * d[67] + 2 * d[32] * d[40] * d[42] * d[67] + 2 * d[31] * d[41] * d[42] * d[67] + 2 * d[29] * d[36] * d[43] * d[67] + 2 * d[27] * d[38] * d[43] * d[67] - 4 * d[31] * d[40] * d[43] * d[67] - 2 * d[32] * d[36] * d[44] * d[67] + 2 * d[31] * d[39] * d[44] * d[67] + 2 * d[30] * d[40] * d[44] * d[67] - 2 * d[27] * d[41] * d[44] * d[67] + 2 * d[35] * d[36] * d[37] * d[68] - 2 * d[35] * std::pow(d[39], 2) * d[68] - 2 * d[33] * d[37] * d[40] * d[68] + 2 * d[34] * d[39] * d[40] * d[68] - 2 * d[34] * d[36] * d[41] * d[68] + 2 * d[33] * d[39] * d[41] * d[68] - 2 * d[31] * d[37] * d[42] * d[68] + 2 * d[32] * d[39] * d[42] * d[68] - 2 * d[28] * d[40] * d[42] * d[68] + 2 * d[30] * d[41] * d[42] * d[68] - 2 * d[32] * d[36] * d[43] * d[68] + 2 * d[31] * d[39] * d[43] * d[68] + 2 * d[30] * d[40] * d[43] * d[68] - 2 * d[27] * d[41] * d[43] * d[68] + 2 * d[28] * d[36] * d[44] * d[68] + 2 * d[27] * d[37] * d[44] * d[68] - 4 * d[30] * d[39] * d[44] * d[68] - d[29] * d[36] * d[37] * d[73] - d[28] * d[36] * d[38] * d[73] - d[27] * d[37] * d[38] * d[73] + 2 * d[30] * d[38] * d[39] * d[73] + d[29] * std::pow(d[39], 2) * d[73] + 2 * d[31] * d[37] * d[40] * d[73] - 2 * d[32] * d[39] * d[40] * d[73] + d[28] * std::pow(d[40], 2) * d[73] + 2 * d[32] * d[36] * d[41] * d[73] - 2 * d[31] * d[39] * d[41] * d[73] - 2 * d[30] * d[40] * d[41] * d[73] + d[27] * std::pow(d[41], 2) * d[73];
    coeffs[243] = 2 * d[37] * d[38] * d[42] * d[66] - 2 * std::pow(d[41], 2) * d[42] * d[66] - 2 * d[38] * d[39] * d[43] * d[66] + 2 * d[40] * d[41] * d[43] * d[66] - 2 * d[37] * d[40] * d[44] * d[66] + 2 * d[39] * d[41] * d[44] * d[66] - 2 * d[38] * d[39] * d[42] * d[67] + 2 * d[40] * d[41] * d[42] * d[67] + 2 * d[36] * d[38] * d[43] * d[67] - 2 * std::pow(d[40], 2) * d[43] * d[67] + 2 * d[39] * d[40] * d[44] * d[67] - 2 * d[36] * d[41] * d[44] * d[67] - 2 * d[37] * d[40] * d[42] * d[68] + 2 * d[39] * d[41] * d[42] * d[68] + 2 * d[39] * d[40] * d[43] * d[68] - 2 * d[36] * d[41] * d[43] * d[68] + 2 * d[36] * d[37] * d[44] * d[68] - 2 * std::pow(d[39], 2) * d[44] * d[68] - d[36] * d[37] * d[38] * d[73] + d[38] * std::pow(d[39], 2) * d[73] + d[37] * std::pow(d[40], 2) * d[73] - 2 * d[39] * d[40] * d[41] * d[73] + d[36] * std::pow(d[41], 2) * d[73];
    coeffs[244] = 2 * d[11] * d[15] * d[46] * d[66] - 2 * d[13] * d[17] * d[46] * d[66] + 2 * d[10] * d[15] * d[47] * d[66] - 2 * d[12] * d[16] * d[47] * d[66] - 2 * d[11] * d[16] * d[48] * d[66] + 2 * d[14] * d[17] * d[48] * d[66] + 2 * d[14] * d[16] * d[49] * d[66] - 2 * d[10] * d[17] * d[49] * d[66] - 4 * d[14] * d[15] * d[50] * d[66] + 2 * d[13] * d[16] * d[50] * d[66] + 2 * d[12] * d[17] * d[50] * d[66] + 2 * d[10] * d[11] * d[51] * d[66] - 2 * std::pow(d[14], 2) * d[51] * d[66] - 2 * d[11] * d[12] * d[52] * d[66] + 2 * d[13] * d[14] * d[52] * d[66] - 2 * d[10] * d[13] * d[53] * d[66] + 2 * d[12] * d[14] * d[53] * d[66] + 2 * d[11] * d[16] * d[45] * d[67] - 2 * d[14] * d[17] * d[45] * d[67] - 2 * d[12] * d[15] * d[47] * d[67] + 2 * d[9] * d[16] * d[47] * d[67] - 2 * d[11] * d[15] * d[48] * d[67] + 2 * d[13] * d[17] * d[48] * d[67] + 2 * d[14] * d[15] * d[49] * d[67] - 4 * d[13] * d[16] * d[49] * d[67] + 2 * d[12] * d[17] * d[49] * d[67] + 2 * d[13] * d[15] * d[50] * d[67] - 2 * d[9] * d[17] * d[50] * d[67] - 2 * d[11] * d[12] * d[51] * d[67] + 2 * d[13] * d[14] * d[51] * d[67] + 2 * d[9] * d[11] * d[52] * d[67] - 2 * std::pow(d[13], 2) * d[52] * d[67] + 2 * d[12] * d[13] * d[53] * d[67] - 2 * d[9] * d[14] * d[53] * d[67] - 2 * d[14] * d[16] * d[45] * d[68] + 2 * d[10] * d[17] * d[45] * d[68] - 2 * d[13] * d[15] * d[46] * d[68] + 2 * d[9] * d[17] * d[46] * d[68] + 2 * d[14] * d[15] * d[48] * d[68] + 2 * d[13] * d[16] * d[48] * d[68] - 4 * d[12] * d[17] * d[48] * d[68] - 2 * d[10] * d[15] * d[49] * d[68] + 2 * d[12] * d[16] * d[49] * d[68] + 2 * d[12] * d[15] * d[50] * d[68] - 2 * d[9] * d[16] * d[50] * d[68] - 2 * d[10] * d[13] * d[51] * d[68] + 2 * d[12] * d[14] * d[51] * d[68] + 2 * d[12] * d[13] * d[52] * d[68] - 2 * d[9] * d[14] * d[52] * d[68] + 2 * d[9] * d[10] * d[53] * d[68] - 2 * std::pow(d[12], 2) * d[53] * d[68] - d[10] * d[11] * d[45] * d[73] + std::pow(d[14], 2) * d[45] * d[73] - d[9] * d[11] * d[46] * d[73] + std::pow(d[13], 2) * d[46] * d[73] - d[9] * d[10] * d[47] * d[73] + std::pow(d[12], 2) * d[47] * d[73] + 2 * d[11] * d[12] * d[48] * d[73] - 2 * d[13] * d[14] * d[48] * d[73] + 2 * d[10] * d[13] * d[49] * d[73] - 2 * d[12] * d[14] * d[49] * d[73] - 2 * d[12] * d[13] * d[50] * d[73] + 2 * d[9] * d[14] * d[50] * d[73];
    coeffs[245] = 2 * d[15] * d[20] * d[46] * d[66] - 2 * d[17] * d[22] * d[46] * d[66] + 2 * d[11] * d[24] * d[46] * d[66] - 2 * d[13] * d[26] * d[46] * d[66] + 2 * d[15] * d[19] * d[47] * d[66] - 2 * d[16] * d[21] * d[47] * d[66] + 2 * d[10] * d[24] * d[47] * d[66] - 2 * d[12] * d[25] * d[47] * d[66] - 2 * d[16] * d[20] * d[48] * d[66] + 2 * d[17] * d[23] * d[48] * d[66] - 2 * d[11] * d[25] * d[48] * d[66] + 2 * d[14] * d[26] * d[48] * d[66] - 2 * d[17] * d[19] * d[49] * d[66] + 2 * d[16] * d[23] * d[49] * d[66] + 2 * d[14] * d[25] * d[49] * d[66] - 2 * d[10] * d[26] * d[49] * d[66] + 2 * d[17] * d[21] * d[50] * d[66] + 2 * d[16] * d[22] * d[50] * d[66] - 4 * d[15] * d[23] * d[50] * d[66] - 4 * d[14] * d[24] * d[50] * d[66] + 2 * d[13] * d[25] * d[50] * d[66] + 2 * d[12] * d[26] * d[50] * d[66] + 2 * d[11] * d[19] * d[51] * d[66] + 2 * d[10] * d[20] * d[51] * d[66] - 4 * d[14] * d[23] * d[51] * d[66] - 2 * d[12] * d[20] * d[52] * d[66] - 2 * d[11] * d[21] * d[52] * d[66] + 2 * d[14] * d[22] * d[52] * d[66] + 2 * d[13] * d[23] * d[52] * d[66] - 2 * d[13] * d[19] * d[53] * d[66] + 2 * d[14] * d[21] * d[53] * d[66] - 2 * d[10] * d[22] * d[53] * d[66] + 2 * d[12] * d[23] * d[53] * d[66] + 2 * d[16] * d[20] * d[45] * d[67] - 2 * d[17] * d[23] * d[45] * d[67] + 2 * d[11] * d[25] * d[45] * d[67] - 2 * d[14] * d[26] * d[45] * d[67] + 2 * d[16] * d[18] * d[47] * d[67] - 2 * d[15] * d[21] * d[47] * d[67] - 2 * d[12] * d[24] * d[47] * d[67] + 2 * d[9] * d[25] * d[47] * d[67] - 2 * d[15] * d[20] * d[48] * d[67] + 2 * d[17] * d[22] * d[48] * d[67] - 2 * d[11] * d[24] * d[48] * d[67] + 2 * d[13] * d[26] * d[48] * d[67] + 2 * d[17] * d[21] * d[49] * d[67] - 4 * d[16] * d[22] * d[49] * d[67] + 2 * d[15] * d[23] * d[49] * d[67] + 2 * d[14] * d[24] * d[49] * d[67] - 4 * d[13] * d[25] * d[49] * d[67] + 2 * d[12] * d[26] * d[49] * d[67] - 2 * d[17] * d[18] * d[50] * d[67] + 2 * d[15] * d[22] * d[50] * d[67] + 2 * d[13] * d[24] * d[50] * d[67] - 2 * d[9] * d[26] * d[50] * d[67] - 2 * d[12] * d[20] * d[51] * d[67] - 2 * d[11] * d[21] * d[51] * d[67] + 2 * d[14] * d[22] * d[51] * d[67] + 2 * d[13] * d[23] * d[51] * d[67] + 2 * d[11] * d[18] * d[52] * d[67] + 2 * d[9] * d[20] * d[52] * d[67] - 4 * d[13] * d[22] * d[52] * d[67] - 2 * d[14] * d[18] * d[53] * d[67] + 2 * d[13] * d[21] * d[53] * d[67] + 2 * d[12] * d[22] * d[53] * d[67] - 2 * d[9] * d[23] * d[53] * d[67] + 2 * d[17] * d[19] * d[45] * d[68] - 2 * d[16] * d[23] * d[45] * d[68] - 2 * d[14] * d[25] * d[45] * d[68] + 2 * d[10] * d[26] * d[45] * d[68] + 2 * d[17] * d[18] * d[46] * d[68] - 2 * d[15] * d[22] * d[46] * d[68] - 2 * d[13] * d[24] * d[46] * d[68] + 2 * d[9] * d[26] * d[46] * d[68] - 4 * d[17] * d[21] * d[48] * d[68] + 2 * d[16] * d[22] * d[48] * d[68] + 2 * d[15] * d[23] * d[48] * d[68] + 2 * d[14] * d[24] * d[48] * d[68] + 2 * d[13] * d[25] * d[48] * d[68] - 4 * d[12] * d[26] * d[48] * d[68] - 2 * d[15] * d[19] * d[49] * d[68] + 2 * d[16] * d[21] * d[49] * d[68] - 2 * d[10] * d[24] * d[49] * d[68] + 2 * d[12] * d[25] * d[49] * d[68] - 2 * d[16] * d[18] * d[50] * d[68] + 2 * d[15] * d[21] * d[50] * d[68] + 2 * d[12] * d[24] * d[50] * d[68] - 2 * d[9] * d[25] * d[50] * d[68] - 2 * d[13] * d[19] * d[51] * d[68] + 2 * d[14] * d[21] * d[51] * d[68] - 2 * d[10] * d[22] * d[51] * d[68] + 2 * d[12] * d[23] * d[51] * d[68] - 2 * d[14] * d[18] * d[52] * d[68] + 2 * d[13] * d[21] * d[52] * d[68] + 2 * d[12] * d[22] * d[52] * d[68] - 2 * d[9] * d[23] * d[52] * d[68] + 2 * d[10] * d[18] * d[53] * d[68] + 2 * d[9] * d[19] * d[53] * d[68] - 4 * d[12] * d[21] * d[53] * d[68] - d[11] * d[19] * d[45] * d[73] - d[10] * d[20] * d[45] * d[73] + 2 * d[14] * d[23] * d[45] * d[73] - d[11] * d[18] * d[46] * d[73] - d[9] * d[20] * d[46] * d[73] + 2 * d[13] * d[22] * d[46] * d[73] - d[10] * d[18] * d[47] * d[73] - d[9] * d[19] * d[47] * d[73] + 2 * d[12] * d[21] * d[47] * d[73] + 2 * d[12] * d[20] * d[48] * d[73] + 2 * d[11] * d[21] * d[48] * d[73] - 2 * d[14] * d[22] * d[48] * d[73] - 2 * d[13] * d[23] * d[48] * d[73] + 2 * d[13] * d[19] * d[49] * d[73] - 2 * d[14] * d[21] * d[49] * d[73] + 2 * d[10] * d[22] * d[49] * d[73] - 2 * d[12] * d[23] * d[49] * d[73] + 2 * d[14] * d[18] * d[50] * d[73] - 2 * d[13] * d[21] * d[50] * d[73] - 2 * d[12] * d[22] * d[50] * d[73] + 2 * d[9] * d[23] * d[50] * d[73];
    coeffs[246] = 2 * d[20] * d[24] * d[46] * d[66] - 2 * d[22] * d[26] * d[46] * d[66] + 2 * d[19] * d[24] * d[47] * d[66] - 2 * d[21] * d[25] * d[47] * d[66] - 2 * d[20] * d[25] * d[48] * d[66] + 2 * d[23] * d[26] * d[48] * d[66] + 2 * d[23] * d[25] * d[49] * d[66] - 2 * d[19] * d[26] * d[49] * d[66] - 4 * d[23] * d[24] * d[50] * d[66] + 2 * d[22] * d[25] * d[50] * d[66] + 2 * d[21] * d[26] * d[50] * d[66] + 2 * d[19] * d[20] * d[51] * d[66] - 2 * std::pow(d[23], 2) * d[51] * d[66] - 2 * d[20] * d[21] * d[52] * d[66] + 2 * d[22] * d[23] * d[52] * d[66] - 2 * d[19] * d[22] * d[53] * d[66] + 2 * d[21] * d[23] * d[53] * d[66] + 2 * d[20] * d[25] * d[45] * d[67] - 2 * d[23] * d[26] * d[45] * d[67] - 2 * d[21] * d[24] * d[47] * d[67] + 2 * d[18] * d[25] * d[47] * d[67] - 2 * d[20] * d[24] * d[48] * d[67] + 2 * d[22] * d[26] * d[48] * d[67] + 2 * d[23] * d[24] * d[49] * d[67] - 4 * d[22] * d[25] * d[49] * d[67] + 2 * d[21] * d[26] * d[49] * d[67] + 2 * d[22] * d[24] * d[50] * d[67] - 2 * d[18] * d[26] * d[50] * d[67] - 2 * d[20] * d[21] * d[51] * d[67] + 2 * d[22] * d[23] * d[51] * d[67] + 2 * d[18] * d[20] * d[52] * d[67] - 2 * std::pow(d[22], 2) * d[52] * d[67] + 2 * d[21] * d[22] * d[53] * d[67] - 2 * d[18] * d[23] * d[53] * d[67] - 2 * d[23] * d[25] * d[45] * d[68] + 2 * d[19] * d[26] * d[45] * d[68] - 2 * d[22] * d[24] * d[46] * d[68] + 2 * d[18] * d[26] * d[46] * d[68] + 2 * d[23] * d[24] * d[48] * d[68] + 2 * d[22] * d[25] * d[48] * d[68] - 4 * d[21] * d[26] * d[48] * d[68] - 2 * d[19] * d[24] * d[49] * d[68] + 2 * d[21] * d[25] * d[49] * d[68] + 2 * d[21] * d[24] * d[50] * d[68] - 2 * d[18] * d[25] * d[50] * d[68] - 2 * d[19] * d[22] * d[51] * d[68] + 2 * d[21] * d[23] * d[51] * d[68] + 2 * d[21] * d[22] * d[52] * d[68] - 2 * d[18] * d[23] * d[52] * d[68] + 2 * d[18] * d[19] * d[53] * d[68] - 2 * std::pow(d[21], 2) * d[53] * d[68] - d[19] * d[20] * d[45] * d[73] + std::pow(d[23], 2) * d[45] * d[73] - d[18] * d[20] * d[46] * d[73] + std::pow(d[22], 2) * d[46] * d[73] - d[18] * d[19] * d[47] * d[73] + std::pow(d[21], 2) * d[47] * d[73] + 2 * d[20] * d[21] * d[48] * d[73] - 2 * d[22] * d[23] * d[48] * d[73] + 2 * d[19] * d[22] * d[49] * d[73] - 2 * d[21] * d[23] * d[49] * d[73] - 2 * d[21] * d[22] * d[50] * d[73] + 2 * d[18] * d[23] * d[50] * d[73];
    coeffs[247] = 2 * d[15] * d[29] * d[46] * d[66] - 2 * d[17] * d[31] * d[46] * d[66] + 2 * d[11] * d[33] * d[46] * d[66] - 2 * d[13] * d[35] * d[46] * d[66] + 2 * d[15] * d[28] * d[47] * d[66] - 2 * d[16] * d[30] * d[47] * d[66] + 2 * d[10] * d[33] * d[47] * d[66] - 2 * d[12] * d[34] * d[47] * d[66] - 2 * d[16] * d[29] * d[48] * d[66] + 2 * d[17] * d[32] * d[48] * d[66] - 2 * d[11] * d[34] * d[48] * d[66] + 2 * d[14] * d[35] * d[48] * d[66] - 2 * d[17] * d[28] * d[49] * d[66] + 2 * d[16] * d[32] * d[49] * d[66] + 2 * d[14] * d[34] * d[49] * d[66] - 2 * d[10] * d[35] * d[49] * d[66] + 2 * d[17] * d[30] * d[50] * d[66] + 2 * d[16] * d[31] * d[50] * d[66] - 4 * d[15] * d[32] * d[50] * d[66] - 4 * d[14] * d[33] * d[50] * d[66] + 2 * d[13] * d[34] * d[50] * d[66] + 2 * d[12] * d[35] * d[50] * d[66] + 2 * d[11] * d[28] * d[51] * d[66] + 2 * d[10] * d[29] * d[51] * d[66] - 4 * d[14] * d[32] * d[51] * d[66] - 2 * d[12] * d[29] * d[52] * d[66] - 2 * d[11] * d[30] * d[52] * d[66] + 2 * d[14] * d[31] * d[52] * d[66] + 2 * d[13] * d[32] * d[52] * d[66] - 2 * d[13] * d[28] * d[53] * d[66] + 2 * d[14] * d[30] * d[53] * d[66] - 2 * d[10] * d[31] * d[53] * d[66] + 2 * d[12] * d[32] * d[53] * d[66] + 2 * d[16] * d[29] * d[45] * d[67] - 2 * d[17] * d[32] * d[45] * d[67] + 2 * d[11] * d[34] * d[45] * d[67] - 2 * d[14] * d[35] * d[45] * d[67] + 2 * d[16] * d[27] * d[47] * d[67] - 2 * d[15] * d[30] * d[47] * d[67] - 2 * d[12] * d[33] * d[47] * d[67] + 2 * d[9] * d[34] * d[47] * d[67] - 2 * d[15] * d[29] * d[48] * d[67] + 2 * d[17] * d[31] * d[48] * d[67] - 2 * d[11] * d[33] * d[48] * d[67] + 2 * d[13] * d[35] * d[48] * d[67] + 2 * d[17] * d[30] * d[49] * d[67] - 4 * d[16] * d[31] * d[49] * d[67] + 2 * d[15] * d[32] * d[49] * d[67] + 2 * d[14] * d[33] * d[49] * d[67] - 4 * d[13] * d[34] * d[49] * d[67] + 2 * d[12] * d[35] * d[49] * d[67] - 2 * d[17] * d[27] * d[50] * d[67] + 2 * d[15] * d[31] * d[50] * d[67] + 2 * d[13] * d[33] * d[50] * d[67] - 2 * d[9] * d[35] * d[50] * d[67] - 2 * d[12] * d[29] * d[51] * d[67] - 2 * d[11] * d[30] * d[51] * d[67] + 2 * d[14] * d[31] * d[51] * d[67] + 2 * d[13] * d[32] * d[51] * d[67] + 2 * d[11] * d[27] * d[52] * d[67] + 2 * d[9] * d[29] * d[52] * d[67] - 4 * d[13] * d[31] * d[52] * d[67] - 2 * d[14] * d[27] * d[53] * d[67] + 2 * d[13] * d[30] * d[53] * d[67] + 2 * d[12] * d[31] * d[53] * d[67] - 2 * d[9] * d[32] * d[53] * d[67] + 2 * d[17] * d[28] * d[45] * d[68] - 2 * d[16] * d[32] * d[45] * d[68] - 2 * d[14] * d[34] * d[45] * d[68] + 2 * d[10] * d[35] * d[45] * d[68] + 2 * d[17] * d[27] * d[46] * d[68] - 2 * d[15] * d[31] * d[46] * d[68] - 2 * d[13] * d[33] * d[46] * d[68] + 2 * d[9] * d[35] * d[46] * d[68] - 4 * d[17] * d[30] * d[48] * d[68] + 2 * d[16] * d[31] * d[48] * d[68] + 2 * d[15] * d[32] * d[48] * d[68] + 2 * d[14] * d[33] * d[48] * d[68] + 2 * d[13] * d[34] * d[48] * d[68] - 4 * d[12] * d[35] * d[48] * d[68] - 2 * d[15] * d[28] * d[49] * d[68] + 2 * d[16] * d[30] * d[49] * d[68] - 2 * d[10] * d[33] * d[49] * d[68] + 2 * d[12] * d[34] * d[49] * d[68] - 2 * d[16] * d[27] * d[50] * d[68] + 2 * d[15] * d[30] * d[50] * d[68] + 2 * d[12] * d[33] * d[50] * d[68] - 2 * d[9] * d[34] * d[50] * d[68] - 2 * d[13] * d[28] * d[51] * d[68] + 2 * d[14] * d[30] * d[51] * d[68] - 2 * d[10] * d[31] * d[51] * d[68] + 2 * d[12] * d[32] * d[51] * d[68] - 2 * d[14] * d[27] * d[52] * d[68] + 2 * d[13] * d[30] * d[52] * d[68] + 2 * d[12] * d[31] * d[52] * d[68] - 2 * d[9] * d[32] * d[52] * d[68] + 2 * d[10] * d[27] * d[53] * d[68] + 2 * d[9] * d[28] * d[53] * d[68] - 4 * d[12] * d[30] * d[53] * d[68] - d[11] * d[28] * d[45] * d[73] - d[10] * d[29] * d[45] * d[73] + 2 * d[14] * d[32] * d[45] * d[73] - d[11] * d[27] * d[46] * d[73] - d[9] * d[29] * d[46] * d[73] + 2 * d[13] * d[31] * d[46] * d[73] - d[10] * d[27] * d[47] * d[73] - d[9] * d[28] * d[47] * d[73] + 2 * d[12] * d[30] * d[47] * d[73] + 2 * d[12] * d[29] * d[48] * d[73] + 2 * d[11] * d[30] * d[48] * d[73] - 2 * d[14] * d[31] * d[48] * d[73] - 2 * d[13] * d[32] * d[48] * d[73] + 2 * d[13] * d[28] * d[49] * d[73] - 2 * d[14] * d[30] * d[49] * d[73] + 2 * d[10] * d[31] * d[49] * d[73] - 2 * d[12] * d[32] * d[49] * d[73] + 2 * d[14] * d[27] * d[50] * d[73] - 2 * d[13] * d[30] * d[50] * d[73] - 2 * d[12] * d[31] * d[50] * d[73] + 2 * d[9] * d[32] * d[50] * d[73];
    coeffs[248] = 2 * d[24] * d[29] * d[46] * d[66] - 2 * d[26] * d[31] * d[46] * d[66] + 2 * d[20] * d[33] * d[46] * d[66] - 2 * d[22] * d[35] * d[46] * d[66] + 2 * d[24] * d[28] * d[47] * d[66] - 2 * d[25] * d[30] * d[47] * d[66] + 2 * d[19] * d[33] * d[47] * d[66] - 2 * d[21] * d[34] * d[47] * d[66] - 2 * d[25] * d[29] * d[48] * d[66] + 2 * d[26] * d[32] * d[48] * d[66] - 2 * d[20] * d[34] * d[48] * d[66] + 2 * d[23] * d[35] * d[48] * d[66] - 2 * d[26] * d[28] * d[49] * d[66] + 2 * d[25] * d[32] * d[49] * d[66] + 2 * d[23] * d[34] * d[49] * d[66] - 2 * d[19] * d[35] * d[49] * d[66] + 2 * d[26] * d[30] * d[50] * d[66] + 2 * d[25] * d[31] * d[50] * d[66] - 4 * d[24] * d[32] * d[50] * d[66] - 4 * d[23] * d[33] * d[50] * d[66] + 2 * d[22] * d[34] * d[50] * d[66] + 2 * d[21] * d[35] * d[50] * d[66] + 2 * d[20] * d[28] * d[51] * d[66] + 2 * d[19] * d[29] * d[51] * d[66] - 4 * d[23] * d[32] * d[51] * d[66] - 2 * d[21] * d[29] * d[52] * d[66] - 2 * d[20] * d[30] * d[52] * d[66] + 2 * d[23] * d[31] * d[52] * d[66] + 2 * d[22] * d[32] * d[52] * d[66] - 2 * d[22] * d[28] * d[53] * d[66] + 2 * d[23] * d[30] * d[53] * d[66] - 2 * d[19] * d[31] * d[53] * d[66] + 2 * d[21] * d[32] * d[53] * d[66] + 2 * d[25] * d[29] * d[45] * d[67] - 2 * d[26] * d[32] * d[45] * d[67] + 2 * d[20] * d[34] * d[45] * d[67] - 2 * d[23] * d[35] * d[45] * d[67] + 2 * d[25] * d[27] * d[47] * d[67] - 2 * d[24] * d[30] * d[47] * d[67] - 2 * d[21] * d[33] * d[47] * d[67] + 2 * d[18] * d[34] * d[47] * d[67] - 2 * d[24] * d[29] * d[48] * d[67] + 2 * d[26] * d[31] * d[48] * d[67] - 2 * d[20] * d[33] * d[48] * d[67] + 2 * d[22] * d[35] * d[48] * d[67] + 2 * d[26] * d[30] * d[49] * d[67] - 4 * d[25] * d[31] * d[49] * d[67] + 2 * d[24] * d[32] * d[49] * d[67] + 2 * d[23] * d[33] * d[49] * d[67] - 4 * d[22] * d[34] * d[49] * d[67] + 2 * d[21] * d[35] * d[49] * d[67] - 2 * d[26] * d[27] * d[50] * d[67] + 2 * d[24] * d[31] * d[50] * d[67] + 2 * d[22] * d[33] * d[50] * d[67] - 2 * d[18] * d[35] * d[50] * d[67] - 2 * d[21] * d[29] * d[51] * d[67] - 2 * d[20] * d[30] * d[51] * d[67] + 2 * d[23] * d[31] * d[51] * d[67] + 2 * d[22] * d[32] * d[51] * d[67] + 2 * d[20] * d[27] * d[52] * d[67] + 2 * d[18] * d[29] * d[52] * d[67] - 4 * d[22] * d[31] * d[52] * d[67] - 2 * d[23] * d[27] * d[53] * d[67] + 2 * d[22] * d[30] * d[53] * d[67] + 2 * d[21] * d[31] * d[53] * d[67] - 2 * d[18] * d[32] * d[53] * d[67] + 2 * d[26] * d[28] * d[45] * d[68] - 2 * d[25] * d[32] * d[45] * d[68] - 2 * d[23] * d[34] * d[45] * d[68] + 2 * d[19] * d[35] * d[45] * d[68] + 2 * d[26] * d[27] * d[46] * d[68] - 2 * d[24] * d[31] * d[46] * d[68] - 2 * d[22] * d[33] * d[46] * d[68] + 2 * d[18] * d[35] * d[46] * d[68] - 4 * d[26] * d[30] * d[48] * d[68] + 2 * d[25] * d[31] * d[48] * d[68] + 2 * d[24] * d[32] * d[48] * d[68] + 2 * d[23] * d[33] * d[48] * d[68] + 2 * d[22] * d[34] * d[48] * d[68] - 4 * d[21] * d[35] * d[48] * d[68] - 2 * d[24] * d[28] * d[49] * d[68] + 2 * d[25] * d[30] * d[49] * d[68] - 2 * d[19] * d[33] * d[49] * d[68] + 2 * d[21] * d[34] * d[49] * d[68] - 2 * d[25] * d[27] * d[50] * d[68] + 2 * d[24] * d[30] * d[50] * d[68] + 2 * d[21] * d[33] * d[50] * d[68] - 2 * d[18] * d[34] * d[50] * d[68] - 2 * d[22] * d[28] * d[51] * d[68] + 2 * d[23] * d[30] * d[51] * d[68] - 2 * d[19] * d[31] * d[51] * d[68] + 2 * d[21] * d[32] * d[51] * d[68] - 2 * d[23] * d[27] * d[52] * d[68] + 2 * d[22] * d[30] * d[52] * d[68] + 2 * d[21] * d[31] * d[52] * d[68] - 2 * d[18] * d[32] * d[52] * d[68] + 2 * d[19] * d[27] * d[53] * d[68] + 2 * d[18] * d[28] * d[53] * d[68] - 4 * d[21] * d[30] * d[53] * d[68] - d[20] * d[28] * d[45] * d[73] - d[19] * d[29] * d[45] * d[73] + 2 * d[23] * d[32] * d[45] * d[73] - d[20] * d[27] * d[46] * d[73] - d[18] * d[29] * d[46] * d[73] + 2 * d[22] * d[31] * d[46] * d[73] - d[19] * d[27] * d[47] * d[73] - d[18] * d[28] * d[47] * d[73] + 2 * d[21] * d[30] * d[47] * d[73] + 2 * d[21] * d[29] * d[48] * d[73] + 2 * d[20] * d[30] * d[48] * d[73] - 2 * d[23] * d[31] * d[48] * d[73] - 2 * d[22] * d[32] * d[48] * d[73] + 2 * d[22] * d[28] * d[49] * d[73] - 2 * d[23] * d[30] * d[49] * d[73] + 2 * d[19] * d[31] * d[49] * d[73] - 2 * d[21] * d[32] * d[49] * d[73] + 2 * d[23] * d[27] * d[50] * d[73] - 2 * d[22] * d[30] * d[50] * d[73] - 2 * d[21] * d[31] * d[50] * d[73] + 2 * d[18] * d[32] * d[50] * d[73];
    coeffs[249] = 2 * d[29] * d[33] * d[46] * d[66] - 2 * d[31] * d[35] * d[46] * d[66] + 2 * d[28] * d[33] * d[47] * d[66] - 2 * d[30] * d[34] * d[47] * d[66] - 2 * d[29] * d[34] * d[48] * d[66] + 2 * d[32] * d[35] * d[48] * d[66] + 2 * d[32] * d[34] * d[49] * d[66] - 2 * d[28] * d[35] * d[49] * d[66] - 4 * d[32] * d[33] * d[50] * d[66] + 2 * d[31] * d[34] * d[50] * d[66] + 2 * d[30] * d[35] * d[50] * d[66] + 2 * d[28] * d[29] * d[51] * d[66] - 2 * std::pow(d[32], 2) * d[51] * d[66] - 2 * d[29] * d[30] * d[52] * d[66] + 2 * d[31] * d[32] * d[52] * d[66] - 2 * d[28] * d[31] * d[53] * d[66] + 2 * d[30] * d[32] * d[53] * d[66] + 2 * d[29] * d[34] * d[45] * d[67] - 2 * d[32] * d[35] * d[45] * d[67] - 2 * d[30] * d[33] * d[47] * d[67] + 2 * d[27] * d[34] * d[47] * d[67] - 2 * d[29] * d[33] * d[48] * d[67] + 2 * d[31] * d[35] * d[48] * d[67] + 2 * d[32] * d[33] * d[49] * d[67] - 4 * d[31] * d[34] * d[49] * d[67] + 2 * d[30] * d[35] * d[49] * d[67] + 2 * d[31] * d[33] * d[50] * d[67] - 2 * d[27] * d[35] * d[50] * d[67] - 2 * d[29] * d[30] * d[51] * d[67] + 2 * d[31] * d[32] * d[51] * d[67] + 2 * d[27] * d[29] * d[52] * d[67] - 2 * std::pow(d[31], 2) * d[52] * d[67] + 2 * d[30] * d[31] * d[53] * d[67] - 2 * d[27] * d[32] * d[53] * d[67] - 2 * d[32] * d[34] * d[45] * d[68] + 2 * d[28] * d[35] * d[45] * d[68] - 2 * d[31] * d[33] * d[46] * d[68] + 2 * d[27] * d[35] * d[46] * d[68] + 2 * d[32] * d[33] * d[48] * d[68] + 2 * d[31] * d[34] * d[48] * d[68] - 4 * d[30] * d[35] * d[48] * d[68] - 2 * d[28] * d[33] * d[49] * d[68] + 2 * d[30] * d[34] * d[49] * d[68] + 2 * d[30] * d[33] * d[50] * d[68] - 2 * d[27] * d[34] * d[50] * d[68] - 2 * d[28] * d[31] * d[51] * d[68] + 2 * d[30] * d[32] * d[51] * d[68] + 2 * d[30] * d[31] * d[52] * d[68] - 2 * d[27] * d[32] * d[52] * d[68] + 2 * d[27] * d[28] * d[53] * d[68] - 2 * std::pow(d[30], 2) * d[53] * d[68] - d[28] * d[29] * d[45] * d[73] + std::pow(d[32], 2) * d[45] * d[73] - d[27] * d[29] * d[46] * d[73] + std::pow(d[31], 2) * d[46] * d[73] - d[27] * d[28] * d[47] * d[73] + std::pow(d[30], 2) * d[47] * d[73] + 2 * d[29] * d[30] * d[48] * d[73] - 2 * d[31] * d[32] * d[48] * d[73] + 2 * d[28] * d[31] * d[49] * d[73] - 2 * d[30] * d[32] * d[49] * d[73] - 2 * d[30] * d[31] * d[50] * d[73] + 2 * d[27] * d[32] * d[50] * d[73];
    coeffs[250] = 2 * d[15] * d[38] * d[46] * d[66] - 2 * d[17] * d[40] * d[46] * d[66] + 2 * d[11] * d[42] * d[46] * d[66] - 2 * d[13] * d[44] * d[46] * d[66] + 2 * d[15] * d[37] * d[47] * d[66] - 2 * d[16] * d[39] * d[47] * d[66] + 2 * d[10] * d[42] * d[47] * d[66] - 2 * d[12] * d[43] * d[47] * d[66] - 2 * d[16] * d[38] * d[48] * d[66] + 2 * d[17] * d[41] * d[48] * d[66] - 2 * d[11] * d[43] * d[48] * d[66] + 2 * d[14] * d[44] * d[48] * d[66] - 2 * d[17] * d[37] * d[49] * d[66] + 2 * d[16] * d[41] * d[49] * d[66] + 2 * d[14] * d[43] * d[49] * d[66] - 2 * d[10] * d[44] * d[49] * d[66] + 2 * d[17] * d[39] * d[50] * d[66] + 2 * d[16] * d[40] * d[50] * d[66] - 4 * d[15] * d[41] * d[50] * d[66] - 4 * d[14] * d[42] * d[50] * d[66] + 2 * d[13] * d[43] * d[50] * d[66] + 2 * d[12] * d[44] * d[50] * d[66] + 2 * d[11] * d[37] * d[51] * d[66] + 2 * d[10] * d[38] * d[51] * d[66] - 4 * d[14] * d[41] * d[51] * d[66] - 2 * d[12] * d[38] * d[52] * d[66] - 2 * d[11] * d[39] * d[52] * d[66] + 2 * d[14] * d[40] * d[52] * d[66] + 2 * d[13] * d[41] * d[52] * d[66] - 2 * d[13] * d[37] * d[53] * d[66] + 2 * d[14] * d[39] * d[53] * d[66] - 2 * d[10] * d[40] * d[53] * d[66] + 2 * d[12] * d[41] * d[53] * d[66] + 2 * d[16] * d[38] * d[45] * d[67] - 2 * d[17] * d[41] * d[45] * d[67] + 2 * d[11] * d[43] * d[45] * d[67] - 2 * d[14] * d[44] * d[45] * d[67] + 2 * d[16] * d[36] * d[47] * d[67] - 2 * d[15] * d[39] * d[47] * d[67] - 2 * d[12] * d[42] * d[47] * d[67] + 2 * d[9] * d[43] * d[47] * d[67] - 2 * d[15] * d[38] * d[48] * d[67] + 2 * d[17] * d[40] * d[48] * d[67] - 2 * d[11] * d[42] * d[48] * d[67] + 2 * d[13] * d[44] * d[48] * d[67] + 2 * d[17] * d[39] * d[49] * d[67] - 4 * d[16] * d[40] * d[49] * d[67] + 2 * d[15] * d[41] * d[49] * d[67] + 2 * d[14] * d[42] * d[49] * d[67] - 4 * d[13] * d[43] * d[49] * d[67] + 2 * d[12] * d[44] * d[49] * d[67] - 2 * d[17] * d[36] * d[50] * d[67] + 2 * d[15] * d[40] * d[50] * d[67] + 2 * d[13] * d[42] * d[50] * d[67] - 2 * d[9] * d[44] * d[50] * d[67] - 2 * d[12] * d[38] * d[51] * d[67] - 2 * d[11] * d[39] * d[51] * d[67] + 2 * d[14] * d[40] * d[51] * d[67] + 2 * d[13] * d[41] * d[51] * d[67] + 2 * d[11] * d[36] * d[52] * d[67] + 2 * d[9] * d[38] * d[52] * d[67] - 4 * d[13] * d[40] * d[52] * d[67] - 2 * d[14] * d[36] * d[53] * d[67] + 2 * d[13] * d[39] * d[53] * d[67] + 2 * d[12] * d[40] * d[53] * d[67] - 2 * d[9] * d[41] * d[53] * d[67] + 2 * d[17] * d[37] * d[45] * d[68] - 2 * d[16] * d[41] * d[45] * d[68] - 2 * d[14] * d[43] * d[45] * d[68] + 2 * d[10] * d[44] * d[45] * d[68] + 2 * d[17] * d[36] * d[46] * d[68] - 2 * d[15] * d[40] * d[46] * d[68] - 2 * d[13] * d[42] * d[46] * d[68] + 2 * d[9] * d[44] * d[46] * d[68] - 4 * d[17] * d[39] * d[48] * d[68] + 2 * d[16] * d[40] * d[48] * d[68] + 2 * d[15] * d[41] * d[48] * d[68] + 2 * d[14] * d[42] * d[48] * d[68] + 2 * d[13] * d[43] * d[48] * d[68] - 4 * d[12] * d[44] * d[48] * d[68] - 2 * d[15] * d[37] * d[49] * d[68] + 2 * d[16] * d[39] * d[49] * d[68] - 2 * d[10] * d[42] * d[49] * d[68] + 2 * d[12] * d[43] * d[49] * d[68] - 2 * d[16] * d[36] * d[50] * d[68] + 2 * d[15] * d[39] * d[50] * d[68] + 2 * d[12] * d[42] * d[50] * d[68] - 2 * d[9] * d[43] * d[50] * d[68] - 2 * d[13] * d[37] * d[51] * d[68] + 2 * d[14] * d[39] * d[51] * d[68] - 2 * d[10] * d[40] * d[51] * d[68] + 2 * d[12] * d[41] * d[51] * d[68] - 2 * d[14] * d[36] * d[52] * d[68] + 2 * d[13] * d[39] * d[52] * d[68] + 2 * d[12] * d[40] * d[52] * d[68] - 2 * d[9] * d[41] * d[52] * d[68] + 2 * d[10] * d[36] * d[53] * d[68] + 2 * d[9] * d[37] * d[53] * d[68] - 4 * d[12] * d[39] * d[53] * d[68] - d[11] * d[37] * d[45] * d[73] - d[10] * d[38] * d[45] * d[73] + 2 * d[14] * d[41] * d[45] * d[73] - d[11] * d[36] * d[46] * d[73] - d[9] * d[38] * d[46] * d[73] + 2 * d[13] * d[40] * d[46] * d[73] - d[10] * d[36] * d[47] * d[73] - d[9] * d[37] * d[47] * d[73] + 2 * d[12] * d[39] * d[47] * d[73] + 2 * d[12] * d[38] * d[48] * d[73] + 2 * d[11] * d[39] * d[48] * d[73] - 2 * d[14] * d[40] * d[48] * d[73] - 2 * d[13] * d[41] * d[48] * d[73] + 2 * d[13] * d[37] * d[49] * d[73] - 2 * d[14] * d[39] * d[49] * d[73] + 2 * d[10] * d[40] * d[49] * d[73] - 2 * d[12] * d[41] * d[49] * d[73] + 2 * d[14] * d[36] * d[50] * d[73] - 2 * d[13] * d[39] * d[50] * d[73] - 2 * d[12] * d[40] * d[50] * d[73] + 2 * d[9] * d[41] * d[50] * d[73];
    coeffs[251] = 2 * d[24] * d[38] * d[46] * d[66] - 2 * d[26] * d[40] * d[46] * d[66] + 2 * d[20] * d[42] * d[46] * d[66] - 2 * d[22] * d[44] * d[46] * d[66] + 2 * d[24] * d[37] * d[47] * d[66] - 2 * d[25] * d[39] * d[47] * d[66] + 2 * d[19] * d[42] * d[47] * d[66] - 2 * d[21] * d[43] * d[47] * d[66] - 2 * d[25] * d[38] * d[48] * d[66] + 2 * d[26] * d[41] * d[48] * d[66] - 2 * d[20] * d[43] * d[48] * d[66] + 2 * d[23] * d[44] * d[48] * d[66] - 2 * d[26] * d[37] * d[49] * d[66] + 2 * d[25] * d[41] * d[49] * d[66] + 2 * d[23] * d[43] * d[49] * d[66] - 2 * d[19] * d[44] * d[49] * d[66] + 2 * d[26] * d[39] * d[50] * d[66] + 2 * d[25] * d[40] * d[50] * d[66] - 4 * d[24] * d[41] * d[50] * d[66] - 4 * d[23] * d[42] * d[50] * d[66] + 2 * d[22] * d[43] * d[50] * d[66] + 2 * d[21] * d[44] * d[50] * d[66] + 2 * d[20] * d[37] * d[51] * d[66] + 2 * d[19] * d[38] * d[51] * d[66] - 4 * d[23] * d[41] * d[51] * d[66] - 2 * d[21] * d[38] * d[52] * d[66] - 2 * d[20] * d[39] * d[52] * d[66] + 2 * d[23] * d[40] * d[52] * d[66] + 2 * d[22] * d[41] * d[52] * d[66] - 2 * d[22] * d[37] * d[53] * d[66] + 2 * d[23] * d[39] * d[53] * d[66] - 2 * d[19] * d[40] * d[53] * d[66] + 2 * d[21] * d[41] * d[53] * d[66] + 2 * d[25] * d[38] * d[45] * d[67] - 2 * d[26] * d[41] * d[45] * d[67] + 2 * d[20] * d[43] * d[45] * d[67] - 2 * d[23] * d[44] * d[45] * d[67] + 2 * d[25] * d[36] * d[47] * d[67] - 2 * d[24] * d[39] * d[47] * d[67] - 2 * d[21] * d[42] * d[47] * d[67] + 2 * d[18] * d[43] * d[47] * d[67] - 2 * d[24] * d[38] * d[48] * d[67] + 2 * d[26] * d[40] * d[48] * d[67] - 2 * d[20] * d[42] * d[48] * d[67] + 2 * d[22] * d[44] * d[48] * d[67] + 2 * d[26] * d[39] * d[49] * d[67] - 4 * d[25] * d[40] * d[49] * d[67] + 2 * d[24] * d[41] * d[49] * d[67] + 2 * d[23] * d[42] * d[49] * d[67] - 4 * d[22] * d[43] * d[49] * d[67] + 2 * d[21] * d[44] * d[49] * d[67] - 2 * d[26] * d[36] * d[50] * d[67] + 2 * d[24] * d[40] * d[50] * d[67] + 2 * d[22] * d[42] * d[50] * d[67] - 2 * d[18] * d[44] * d[50] * d[67] - 2 * d[21] * d[38] * d[51] * d[67] - 2 * d[20] * d[39] * d[51] * d[67] + 2 * d[23] * d[40] * d[51] * d[67] + 2 * d[22] * d[41] * d[51] * d[67] + 2 * d[20] * d[36] * d[52] * d[67] + 2 * d[18] * d[38] * d[52] * d[67] - 4 * d[22] * d[40] * d[52] * d[67] - 2 * d[23] * d[36] * d[53] * d[67] + 2 * d[22] * d[39] * d[53] * d[67] + 2 * d[21] * d[40] * d[53] * d[67] - 2 * d[18] * d[41] * d[53] * d[67] + 2 * d[26] * d[37] * d[45] * d[68] - 2 * d[25] * d[41] * d[45] * d[68] - 2 * d[23] * d[43] * d[45] * d[68] + 2 * d[19] * d[44] * d[45] * d[68] + 2 * d[26] * d[36] * d[46] * d[68] - 2 * d[24] * d[40] * d[46] * d[68] - 2 * d[22] * d[42] * d[46] * d[68] + 2 * d[18] * d[44] * d[46] * d[68] - 4 * d[26] * d[39] * d[48] * d[68] + 2 * d[25] * d[40] * d[48] * d[68] + 2 * d[24] * d[41] * d[48] * d[68] + 2 * d[23] * d[42] * d[48] * d[68] + 2 * d[22] * d[43] * d[48] * d[68] - 4 * d[21] * d[44] * d[48] * d[68] - 2 * d[24] * d[37] * d[49] * d[68] + 2 * d[25] * d[39] * d[49] * d[68] - 2 * d[19] * d[42] * d[49] * d[68] + 2 * d[21] * d[43] * d[49] * d[68] - 2 * d[25] * d[36] * d[50] * d[68] + 2 * d[24] * d[39] * d[50] * d[68] + 2 * d[21] * d[42] * d[50] * d[68] - 2 * d[18] * d[43] * d[50] * d[68] - 2 * d[22] * d[37] * d[51] * d[68] + 2 * d[23] * d[39] * d[51] * d[68] - 2 * d[19] * d[40] * d[51] * d[68] + 2 * d[21] * d[41] * d[51] * d[68] - 2 * d[23] * d[36] * d[52] * d[68] + 2 * d[22] * d[39] * d[52] * d[68] + 2 * d[21] * d[40] * d[52] * d[68] - 2 * d[18] * d[41] * d[52] * d[68] + 2 * d[19] * d[36] * d[53] * d[68] + 2 * d[18] * d[37] * d[53] * d[68] - 4 * d[21] * d[39] * d[53] * d[68] - d[20] * d[37] * d[45] * d[73] - d[19] * d[38] * d[45] * d[73] + 2 * d[23] * d[41] * d[45] * d[73] - d[20] * d[36] * d[46] * d[73] - d[18] * d[38] * d[46] * d[73] + 2 * d[22] * d[40] * d[46] * d[73] - d[19] * d[36] * d[47] * d[73] - d[18] * d[37] * d[47] * d[73] + 2 * d[21] * d[39] * d[47] * d[73] + 2 * d[21] * d[38] * d[48] * d[73] + 2 * d[20] * d[39] * d[48] * d[73] - 2 * d[23] * d[40] * d[48] * d[73] - 2 * d[22] * d[41] * d[48] * d[73] + 2 * d[22] * d[37] * d[49] * d[73] - 2 * d[23] * d[39] * d[49] * d[73] + 2 * d[19] * d[40] * d[49] * d[73] - 2 * d[21] * d[41] * d[49] * d[73] + 2 * d[23] * d[36] * d[50] * d[73] - 2 * d[22] * d[39] * d[50] * d[73] - 2 * d[21] * d[40] * d[50] * d[73] + 2 * d[18] * d[41] * d[50] * d[73];
    coeffs[252] = 2 * d[33] * d[38] * d[46] * d[66] - 2 * d[35] * d[40] * d[46] * d[66] + 2 * d[29] * d[42] * d[46] * d[66] - 2 * d[31] * d[44] * d[46] * d[66] + 2 * d[33] * d[37] * d[47] * d[66] - 2 * d[34] * d[39] * d[47] * d[66] + 2 * d[28] * d[42] * d[47] * d[66] - 2 * d[30] * d[43] * d[47] * d[66] - 2 * d[34] * d[38] * d[48] * d[66] + 2 * d[35] * d[41] * d[48] * d[66] - 2 * d[29] * d[43] * d[48] * d[66] + 2 * d[32] * d[44] * d[48] * d[66] - 2 * d[35] * d[37] * d[49] * d[66] + 2 * d[34] * d[41] * d[49] * d[66] + 2 * d[32] * d[43] * d[49] * d[66] - 2 * d[28] * d[44] * d[49] * d[66] + 2 * d[35] * d[39] * d[50] * d[66] + 2 * d[34] * d[40] * d[50] * d[66] - 4 * d[33] * d[41] * d[50] * d[66] - 4 * d[32] * d[42] * d[50] * d[66] + 2 * d[31] * d[43] * d[50] * d[66] + 2 * d[30] * d[44] * d[50] * d[66] + 2 * d[29] * d[37] * d[51] * d[66] + 2 * d[28] * d[38] * d[51] * d[66] - 4 * d[32] * d[41] * d[51] * d[66] - 2 * d[30] * d[38] * d[52] * d[66] - 2 * d[29] * d[39] * d[52] * d[66] + 2 * d[32] * d[40] * d[52] * d[66] + 2 * d[31] * d[41] * d[52] * d[66] - 2 * d[31] * d[37] * d[53] * d[66] + 2 * d[32] * d[39] * d[53] * d[66] - 2 * d[28] * d[40] * d[53] * d[66] + 2 * d[30] * d[41] * d[53] * d[66] + 2 * d[34] * d[38] * d[45] * d[67] - 2 * d[35] * d[41] * d[45] * d[67] + 2 * d[29] * d[43] * d[45] * d[67] - 2 * d[32] * d[44] * d[45] * d[67] + 2 * d[34] * d[36] * d[47] * d[67] - 2 * d[33] * d[39] * d[47] * d[67] - 2 * d[30] * d[42] * d[47] * d[67] + 2 * d[27] * d[43] * d[47] * d[67] - 2 * d[33] * d[38] * d[48] * d[67] + 2 * d[35] * d[40] * d[48] * d[67] - 2 * d[29] * d[42] * d[48] * d[67] + 2 * d[31] * d[44] * d[48] * d[67] + 2 * d[35] * d[39] * d[49] * d[67] - 4 * d[34] * d[40] * d[49] * d[67] + 2 * d[33] * d[41] * d[49] * d[67] + 2 * d[32] * d[42] * d[49] * d[67] - 4 * d[31] * d[43] * d[49] * d[67] + 2 * d[30] * d[44] * d[49] * d[67] - 2 * d[35] * d[36] * d[50] * d[67] + 2 * d[33] * d[40] * d[50] * d[67] + 2 * d[31] * d[42] * d[50] * d[67] - 2 * d[27] * d[44] * d[50] * d[67] - 2 * d[30] * d[38] * d[51] * d[67] - 2 * d[29] * d[39] * d[51] * d[67] + 2 * d[32] * d[40] * d[51] * d[67] + 2 * d[31] * d[41] * d[51] * d[67] + 2 * d[29] * d[36] * d[52] * d[67] + 2 * d[27] * d[38] * d[52] * d[67] - 4 * d[31] * d[40] * d[52] * d[67] - 2 * d[32] * d[36] * d[53] * d[67] + 2 * d[31] * d[39] * d[53] * d[67] + 2 * d[30] * d[40] * d[53] * d[67] - 2 * d[27] * d[41] * d[53] * d[67] + 2 * d[35] * d[37] * d[45] * d[68] - 2 * d[34] * d[41] * d[45] * d[68] - 2 * d[32] * d[43] * d[45] * d[68] + 2 * d[28] * d[44] * d[45] * d[68] + 2 * d[35] * d[36] * d[46] * d[68] - 2 * d[33] * d[40] * d[46] * d[68] - 2 * d[31] * d[42] * d[46] * d[68] + 2 * d[27] * d[44] * d[46] * d[68] - 4 * d[35] * d[39] * d[48] * d[68] + 2 * d[34] * d[40] * d[48] * d[68] + 2 * d[33] * d[41] * d[48] * d[68] + 2 * d[32] * d[42] * d[48] * d[68] + 2 * d[31] * d[43] * d[48] * d[68] - 4 * d[30] * d[44] * d[48] * d[68] - 2 * d[33] * d[37] * d[49] * d[68] + 2 * d[34] * d[39] * d[49] * d[68] - 2 * d[28] * d[42] * d[49] * d[68] + 2 * d[30] * d[43] * d[49] * d[68] - 2 * d[34] * d[36] * d[50] * d[68] + 2 * d[33] * d[39] * d[50] * d[68] + 2 * d[30] * d[42] * d[50] * d[68] - 2 * d[27] * d[43] * d[50] * d[68] - 2 * d[31] * d[37] * d[51] * d[68] + 2 * d[32] * d[39] * d[51] * d[68] - 2 * d[28] * d[40] * d[51] * d[68] + 2 * d[30] * d[41] * d[51] * d[68] - 2 * d[32] * d[36] * d[52] * d[68] + 2 * d[31] * d[39] * d[52] * d[68] + 2 * d[30] * d[40] * d[52] * d[68] - 2 * d[27] * d[41] * d[52] * d[68] + 2 * d[28] * d[36] * d[53] * d[68] + 2 * d[27] * d[37] * d[53] * d[68] - 4 * d[30] * d[39] * d[53] * d[68] - d[29] * d[37] * d[45] * d[73] - d[28] * d[38] * d[45] * d[73] + 2 * d[32] * d[41] * d[45] * d[73] - d[29] * d[36] * d[46] * d[73] - d[27] * d[38] * d[46] * d[73] + 2 * d[31] * d[40] * d[46] * d[73] - d[28] * d[36] * d[47] * d[73] - d[27] * d[37] * d[47] * d[73] + 2 * d[30] * d[39] * d[47] * d[73] + 2 * d[30] * d[38] * d[48] * d[73] + 2 * d[29] * d[39] * d[48] * d[73] - 2 * d[32] * d[40] * d[48] * d[73] - 2 * d[31] * d[41] * d[48] * d[73] + 2 * d[31] * d[37] * d[49] * d[73] - 2 * d[32] * d[39] * d[49] * d[73] + 2 * d[28] * d[40] * d[49] * d[73] - 2 * d[30] * d[41] * d[49] * d[73] + 2 * d[32] * d[36] * d[50] * d[73] - 2 * d[31] * d[39] * d[50] * d[73] - 2 * d[30] * d[40] * d[50] * d[73] + 2 * d[27] * d[41] * d[50] * d[73];
    coeffs[253] = 2 * d[38] * d[42] * d[46] * d[66] - 2 * d[40] * d[44] * d[46] * d[66] + 2 * d[37] * d[42] * d[47] * d[66] - 2 * d[39] * d[43] * d[47] * d[66] - 2 * d[38] * d[43] * d[48] * d[66] + 2 * d[41] * d[44] * d[48] * d[66] + 2 * d[41] * d[43] * d[49] * d[66] - 2 * d[37] * d[44] * d[49] * d[66] - 4 * d[41] * d[42] * d[50] * d[66] + 2 * d[40] * d[43] * d[50] * d[66] + 2 * d[39] * d[44] * d[50] * d[66] + 2 * d[37] * d[38] * d[51] * d[66] - 2 * std::pow(d[41], 2) * d[51] * d[66] - 2 * d[38] * d[39] * d[52] * d[66] + 2 * d[40] * d[41] * d[52] * d[66] - 2 * d[37] * d[40] * d[53] * d[66] + 2 * d[39] * d[41] * d[53] * d[66] + 2 * d[38] * d[43] * d[45] * d[67] - 2 * d[41] * d[44] * d[45] * d[67] - 2 * d[39] * d[42] * d[47] * d[67] + 2 * d[36] * d[43] * d[47] * d[67] - 2 * d[38] * d[42] * d[48] * d[67] + 2 * d[40] * d[44] * d[48] * d[67] + 2 * d[41] * d[42] * d[49] * d[67] - 4 * d[40] * d[43] * d[49] * d[67] + 2 * d[39] * d[44] * d[49] * d[67] + 2 * d[40] * d[42] * d[50] * d[67] - 2 * d[36] * d[44] * d[50] * d[67] - 2 * d[38] * d[39] * d[51] * d[67] + 2 * d[40] * d[41] * d[51] * d[67] + 2 * d[36] * d[38] * d[52] * d[67] - 2 * std::pow(d[40], 2) * d[52] * d[67] + 2 * d[39] * d[40] * d[53] * d[67] - 2 * d[36] * d[41] * d[53] * d[67] - 2 * d[41] * d[43] * d[45] * d[68] + 2 * d[37] * d[44] * d[45] * d[68] - 2 * d[40] * d[42] * d[46] * d[68] + 2 * d[36] * d[44] * d[46] * d[68] + 2 * d[41] * d[42] * d[48] * d[68] + 2 * d[40] * d[43] * d[48] * d[68] - 4 * d[39] * d[44] * d[48] * d[68] - 2 * d[37] * d[42] * d[49] * d[68] + 2 * d[39] * d[43] * d[49] * d[68] + 2 * d[39] * d[42] * d[50] * d[68] - 2 * d[36] * d[43] * d[50] * d[68] - 2 * d[37] * d[40] * d[51] * d[68] + 2 * d[39] * d[41] * d[51] * d[68] + 2 * d[39] * d[40] * d[52] * d[68] - 2 * d[36] * d[41] * d[52] * d[68] + 2 * d[36] * d[37] * d[53] * d[68] - 2 * std::pow(d[39], 2) * d[53] * d[68] - d[37] * d[38] * d[45] * d[73] + std::pow(d[41], 2) * d[45] * d[73] - d[36] * d[38] * d[46] * d[73] + std::pow(d[40], 2) * d[46] * d[73] - d[36] * d[37] * d[47] * d[73] + std::pow(d[39], 2) * d[47] * d[73] + 2 * d[38] * d[39] * d[48] * d[73] - 2 * d[40] * d[41] * d[48] * d[73] + 2 * d[37] * d[40] * d[49] * d[73] - 2 * d[39] * d[41] * d[49] * d[73] - 2 * d[39] * d[40] * d[50] * d[73] + 2 * d[36] * d[41] * d[50] * d[73];
    coeffs[254] = 2 * d[15] * d[46] * d[47] * d[66] - 2 * d[16] * d[47] * d[48] * d[66] - 2 * d[17] * d[46] * d[49] * d[66] + 2 * d[17] * d[48] * d[50] * d[66] + 2 * d[16] * d[49] * d[50] * d[66] - 2 * d[15] * std::pow(d[50], 2) * d[66] + 2 * d[11] * d[46] * d[51] * d[66] + 2 * d[10] * d[47] * d[51] * d[66] - 4 * d[14] * d[50] * d[51] * d[66] - 2 * d[12] * d[47] * d[52] * d[66] - 2 * d[11] * d[48] * d[52] * d[66] + 2 * d[14] * d[49] * d[52] * d[66] + 2 * d[13] * d[50] * d[52] * d[66] - 2 * d[13] * d[46] * d[53] * d[66] + 2 * d[14] * d[48] * d[53] * d[66] - 2 * d[10] * d[49] * d[53] * d[66] + 2 * d[12] * d[50] * d[53] * d[66] + 2 * d[16] * d[45] * d[47] * d[67] - 2 * d[15] * d[47] * d[48] * d[67] + 2 * d[17] * d[48] * d[49] * d[67] - 2 * d[16] * std::pow(d[49], 2) * d[67] - 2 * d[17] * d[45] * d[50] * d[67] + 2 * d[15] * d[49] * d[50] * d[67] - 2 * d[12] * d[47] * d[51] * d[67] - 2 * d[11] * d[48] * d[51] * d[67] + 2 * d[14] * d[49] * d[51] * d[67] + 2 * d[13] * d[50] * d[51] * d[67] + 2 * d[11] * d[45] * d[52] * d[67] + 2 * d[9] * d[47] * d[52] * d[67] - 4 * d[13] * d[49] * d[52] * d[67] - 2 * d[14] * d[45] * d[53] * d[67] + 2 * d[13] * d[48] * d[53] * d[67] + 2 * d[12] * d[49] * d[53] * d[67] - 2 * d[9] * d[50] * d[53] * d[67] + 2 * d[17] * d[45] * d[46] * d[68] - 2 * d[17] * std::pow(d[48], 2) * d[68] - 2 * d[15] * d[46] * d[49] * d[68] + 2 * d[16] * d[48] * d[49] * d[68] - 2 * d[16] * d[45] * d[50] * d[68] + 2 * d[15] * d[48] * d[50] * d[68] - 2 * d[13] * d[46] * d[51] * d[68] + 2 * d[14] * d[48] * d[51] * d[68] - 2 * d[10] * d[49] * d[51] * d[68] + 2 * d[12] * d[50] * d[51] * d[68] - 2 * d[14] * d[45] * d[52] * d[68] + 2 * d[13] * d[48] * d[52] * d[68] + 2 * d[12] * d[49] * d[52] * d[68] - 2 * d[9] * d[50] * d[52] * d[68] + 2 * d[10] * d[45] * d[53] * d[68] + 2 * d[9] * d[46] * d[53] * d[68] - 4 * d[12] * d[48] * d[53] * d[68] - d[11] * d[45] * d[46] * d[73] - d[10] * d[45] * d[47] * d[73] - d[9] * d[46] * d[47] * d[73] + 2 * d[12] * d[47] * d[48] * d[73] + d[11] * std::pow(d[48], 2) * d[73] + 2 * d[13] * d[46] * d[49] * d[73] - 2 * d[14] * d[48] * d[49] * d[73] + d[10] * std::pow(d[49], 2) * d[73] + 2 * d[14] * d[45] * d[50] * d[73] - 2 * d[13] * d[48] * d[50] * d[73] - 2 * d[12] * d[49] * d[50] * d[73] + d[9] * std::pow(d[50], 2) * d[73];
    coeffs[255] = 2 * d[24] * d[46] * d[47] * d[66] - 2 * d[25] * d[47] * d[48] * d[66] - 2 * d[26] * d[46] * d[49] * d[66] + 2 * d[26] * d[48] * d[50] * d[66] + 2 * d[25] * d[49] * d[50] * d[66] - 2 * d[24] * std::pow(d[50], 2) * d[66] + 2 * d[20] * d[46] * d[51] * d[66] + 2 * d[19] * d[47] * d[51] * d[66] - 4 * d[23] * d[50] * d[51] * d[66] - 2 * d[21] * d[47] * d[52] * d[66] - 2 * d[20] * d[48] * d[52] * d[66] + 2 * d[23] * d[49] * d[52] * d[66] + 2 * d[22] * d[50] * d[52] * d[66] - 2 * d[22] * d[46] * d[53] * d[66] + 2 * d[23] * d[48] * d[53] * d[66] - 2 * d[19] * d[49] * d[53] * d[66] + 2 * d[21] * d[50] * d[53] * d[66] + 2 * d[25] * d[45] * d[47] * d[67] - 2 * d[24] * d[47] * d[48] * d[67] + 2 * d[26] * d[48] * d[49] * d[67] - 2 * d[25] * std::pow(d[49], 2) * d[67] - 2 * d[26] * d[45] * d[50] * d[67] + 2 * d[24] * d[49] * d[50] * d[67] - 2 * d[21] * d[47] * d[51] * d[67] - 2 * d[20] * d[48] * d[51] * d[67] + 2 * d[23] * d[49] * d[51] * d[67] + 2 * d[22] * d[50] * d[51] * d[67] + 2 * d[20] * d[45] * d[52] * d[67] + 2 * d[18] * d[47] * d[52] * d[67] - 4 * d[22] * d[49] * d[52] * d[67] - 2 * d[23] * d[45] * d[53] * d[67] + 2 * d[22] * d[48] * d[53] * d[67] + 2 * d[21] * d[49] * d[53] * d[67] - 2 * d[18] * d[50] * d[53] * d[67] + 2 * d[26] * d[45] * d[46] * d[68] - 2 * d[26] * std::pow(d[48], 2) * d[68] - 2 * d[24] * d[46] * d[49] * d[68] + 2 * d[25] * d[48] * d[49] * d[68] - 2 * d[25] * d[45] * d[50] * d[68] + 2 * d[24] * d[48] * d[50] * d[68] - 2 * d[22] * d[46] * d[51] * d[68] + 2 * d[23] * d[48] * d[51] * d[68] - 2 * d[19] * d[49] * d[51] * d[68] + 2 * d[21] * d[50] * d[51] * d[68] - 2 * d[23] * d[45] * d[52] * d[68] + 2 * d[22] * d[48] * d[52] * d[68] + 2 * d[21] * d[49] * d[52] * d[68] - 2 * d[18] * d[50] * d[52] * d[68] + 2 * d[19] * d[45] * d[53] * d[68] + 2 * d[18] * d[46] * d[53] * d[68] - 4 * d[21] * d[48] * d[53] * d[68] - d[20] * d[45] * d[46] * d[73] - d[19] * d[45] * d[47] * d[73] - d[18] * d[46] * d[47] * d[73] + 2 * d[21] * d[47] * d[48] * d[73] + d[20] * std::pow(d[48], 2) * d[73] + 2 * d[22] * d[46] * d[49] * d[73] - 2 * d[23] * d[48] * d[49] * d[73] + d[19] * std::pow(d[49], 2) * d[73] + 2 * d[23] * d[45] * d[50] * d[73] - 2 * d[22] * d[48] * d[50] * d[73] - 2 * d[21] * d[49] * d[50] * d[73] + d[18] * std::pow(d[50], 2) * d[73];
    coeffs[256] = 2 * d[33] * d[46] * d[47] * d[66] - 2 * d[34] * d[47] * d[48] * d[66] - 2 * d[35] * d[46] * d[49] * d[66] + 2 * d[35] * d[48] * d[50] * d[66] + 2 * d[34] * d[49] * d[50] * d[66] - 2 * d[33] * std::pow(d[50], 2) * d[66] + 2 * d[29] * d[46] * d[51] * d[66] + 2 * d[28] * d[47] * d[51] * d[66] - 4 * d[32] * d[50] * d[51] * d[66] - 2 * d[30] * d[47] * d[52] * d[66] - 2 * d[29] * d[48] * d[52] * d[66] + 2 * d[32] * d[49] * d[52] * d[66] + 2 * d[31] * d[50] * d[52] * d[66] - 2 * d[31] * d[46] * d[53] * d[66] + 2 * d[32] * d[48] * d[53] * d[66] - 2 * d[28] * d[49] * d[53] * d[66] + 2 * d[30] * d[50] * d[53] * d[66] + 2 * d[34] * d[45] * d[47] * d[67] - 2 * d[33] * d[47] * d[48] * d[67] + 2 * d[35] * d[48] * d[49] * d[67] - 2 * d[34] * std::pow(d[49], 2) * d[67] - 2 * d[35] * d[45] * d[50] * d[67] + 2 * d[33] * d[49] * d[50] * d[67] - 2 * d[30] * d[47] * d[51] * d[67] - 2 * d[29] * d[48] * d[51] * d[67] + 2 * d[32] * d[49] * d[51] * d[67] + 2 * d[31] * d[50] * d[51] * d[67] + 2 * d[29] * d[45] * d[52] * d[67] + 2 * d[27] * d[47] * d[52] * d[67] - 4 * d[31] * d[49] * d[52] * d[67] - 2 * d[32] * d[45] * d[53] * d[67] + 2 * d[31] * d[48] * d[53] * d[67] + 2 * d[30] * d[49] * d[53] * d[67] - 2 * d[27] * d[50] * d[53] * d[67] + 2 * d[35] * d[45] * d[46] * d[68] - 2 * d[35] * std::pow(d[48], 2) * d[68] - 2 * d[33] * d[46] * d[49] * d[68] + 2 * d[34] * d[48] * d[49] * d[68] - 2 * d[34] * d[45] * d[50] * d[68] + 2 * d[33] * d[48] * d[50] * d[68] - 2 * d[31] * d[46] * d[51] * d[68] + 2 * d[32] * d[48] * d[51] * d[68] - 2 * d[28] * d[49] * d[51] * d[68] + 2 * d[30] * d[50] * d[51] * d[68] - 2 * d[32] * d[45] * d[52] * d[68] + 2 * d[31] * d[48] * d[52] * d[68] + 2 * d[30] * d[49] * d[52] * d[68] - 2 * d[27] * d[50] * d[52] * d[68] + 2 * d[28] * d[45] * d[53] * d[68] + 2 * d[27] * d[46] * d[53] * d[68] - 4 * d[30] * d[48] * d[53] * d[68] - d[29] * d[45] * d[46] * d[73] - d[28] * d[45] * d[47] * d[73] - d[27] * d[46] * d[47] * d[73] + 2 * d[30] * d[47] * d[48] * d[73] + d[29] * std::pow(d[48], 2) * d[73] + 2 * d[31] * d[46] * d[49] * d[73] - 2 * d[32] * d[48] * d[49] * d[73] + d[28] * std::pow(d[49], 2) * d[73] + 2 * d[32] * d[45] * d[50] * d[73] - 2 * d[31] * d[48] * d[50] * d[73] - 2 * d[30] * d[49] * d[50] * d[73] + d[27] * std::pow(d[50], 2) * d[73];
    coeffs[257] = 2 * d[42] * d[46] * d[47] * d[66] - 2 * d[43] * d[47] * d[48] * d[66] - 2 * d[44] * d[46] * d[49] * d[66] + 2 * d[44] * d[48] * d[50] * d[66] + 2 * d[43] * d[49] * d[50] * d[66] - 2 * d[42] * std::pow(d[50], 2) * d[66] + 2 * d[38] * d[46] * d[51] * d[66] + 2 * d[37] * d[47] * d[51] * d[66] - 4 * d[41] * d[50] * d[51] * d[66] - 2 * d[39] * d[47] * d[52] * d[66] - 2 * d[38] * d[48] * d[52] * d[66] + 2 * d[41] * d[49] * d[52] * d[66] + 2 * d[40] * d[50] * d[52] * d[66] - 2 * d[40] * d[46] * d[53] * d[66] + 2 * d[41] * d[48] * d[53] * d[66] - 2 * d[37] * d[49] * d[53] * d[66] + 2 * d[39] * d[50] * d[53] * d[66] + 2 * d[43] * d[45] * d[47] * d[67] - 2 * d[42] * d[47] * d[48] * d[67] + 2 * d[44] * d[48] * d[49] * d[67] - 2 * d[43] * std::pow(d[49], 2) * d[67] - 2 * d[44] * d[45] * d[50] * d[67] + 2 * d[42] * d[49] * d[50] * d[67] - 2 * d[39] * d[47] * d[51] * d[67] - 2 * d[38] * d[48] * d[51] * d[67] + 2 * d[41] * d[49] * d[51] * d[67] + 2 * d[40] * d[50] * d[51] * d[67] + 2 * d[38] * d[45] * d[52] * d[67] + 2 * d[36] * d[47] * d[52] * d[67] - 4 * d[40] * d[49] * d[52] * d[67] - 2 * d[41] * d[45] * d[53] * d[67] + 2 * d[40] * d[48] * d[53] * d[67] + 2 * d[39] * d[49] * d[53] * d[67] - 2 * d[36] * d[50] * d[53] * d[67] + 2 * d[44] * d[45] * d[46] * d[68] - 2 * d[44] * std::pow(d[48], 2) * d[68] - 2 * d[42] * d[46] * d[49] * d[68] + 2 * d[43] * d[48] * d[49] * d[68] - 2 * d[43] * d[45] * d[50] * d[68] + 2 * d[42] * d[48] * d[50] * d[68] - 2 * d[40] * d[46] * d[51] * d[68] + 2 * d[41] * d[48] * d[51] * d[68] - 2 * d[37] * d[49] * d[51] * d[68] + 2 * d[39] * d[50] * d[51] * d[68] - 2 * d[41] * d[45] * d[52] * d[68] + 2 * d[40] * d[48] * d[52] * d[68] + 2 * d[39] * d[49] * d[52] * d[68] - 2 * d[36] * d[50] * d[52] * d[68] + 2 * d[37] * d[45] * d[53] * d[68] + 2 * d[36] * d[46] * d[53] * d[68] - 4 * d[39] * d[48] * d[53] * d[68] - d[38] * d[45] * d[46] * d[73] - d[37] * d[45] * d[47] * d[73] - d[36] * d[46] * d[47] * d[73] + 2 * d[39] * d[47] * d[48] * d[73] + d[38] * std::pow(d[48], 2) * d[73] + 2 * d[40] * d[46] * d[49] * d[73] - 2 * d[41] * d[48] * d[49] * d[73] + d[37] * std::pow(d[49], 2) * d[73] + 2 * d[41] * d[45] * d[50] * d[73] - 2 * d[40] * d[48] * d[50] * d[73] - 2 * d[39] * d[49] * d[50] * d[73] + d[36] * std::pow(d[50], 2) * d[73];
    coeffs[258] = 2 * d[46] * d[47] * d[51] * d[66] - 2 * std::pow(d[50], 2) * d[51] * d[66] - 2 * d[47] * d[48] * d[52] * d[66] + 2 * d[49] * d[50] * d[52] * d[66] - 2 * d[46] * d[49] * d[53] * d[66] + 2 * d[48] * d[50] * d[53] * d[66] - 2 * d[47] * d[48] * d[51] * d[67] + 2 * d[49] * d[50] * d[51] * d[67] + 2 * d[45] * d[47] * d[52] * d[67] - 2 * std::pow(d[49], 2) * d[52] * d[67] + 2 * d[48] * d[49] * d[53] * d[67] - 2 * d[45] * d[50] * d[53] * d[67] - 2 * d[46] * d[49] * d[51] * d[68] + 2 * d[48] * d[50] * d[51] * d[68] + 2 * d[48] * d[49] * d[52] * d[68] - 2 * d[45] * d[50] * d[52] * d[68] + 2 * d[45] * d[46] * d[53] * d[68] - 2 * std::pow(d[48], 2) * d[53] * d[68] - d[45] * d[46] * d[47] * d[73] + d[47] * std::pow(d[48], 2) * d[73] + d[46] * std::pow(d[49], 2) * d[73] - 2 * d[48] * d[49] * d[50] * d[73] + d[45] * std::pow(d[50], 2) * d[73];
    coeffs[259] = 2 * d[6] * d[10] * d[11] * d[66] - 2 * d[7] * d[11] * d[12] * d[66] - 2 * d[8] * d[10] * d[13] * d[66] + 2 * d[8] * d[12] * d[14] * d[66] + 2 * d[7] * d[13] * d[14] * d[66] - 2 * d[6] * std::pow(d[14], 2) * d[66] + 2 * d[2] * d[10] * d[15] * d[66] + 2 * d[1] * d[11] * d[15] * d[66] - 4 * d[5] * d[14] * d[15] * d[66] - 2 * d[3] * d[11] * d[16] * d[66] - 2 * d[2] * d[12] * d[16] * d[66] + 2 * d[5] * d[13] * d[16] * d[66] + 2 * d[4] * d[14] * d[16] * d[66] - 2 * d[4] * d[10] * d[17] * d[66] + 2 * d[5] * d[12] * d[17] * d[66] - 2 * d[1] * d[13] * d[17] * d[66] + 2 * d[3] * d[14] * d[17] * d[66] + d[10] * d[11] * std::pow(d[66], 2) - std::pow(d[14], 2) * std::pow(d[66], 2) + 2 * d[7] * d[9] * d[11] * d[67] - 2 * d[6] * d[11] * d[12] * d[67] + 2 * d[8] * d[12] * d[13] * d[67] - 2 * d[7] * std::pow(d[13], 2) * d[67] - 2 * d[8] * d[9] * d[14] * d[67] + 2 * d[6] * d[13] * d[14] * d[67] - 2 * d[3] * d[11] * d[15] * d[67] - 2 * d[2] * d[12] * d[15] * d[67] + 2 * d[5] * d[13] * d[15] * d[67] + 2 * d[4] * d[14] * d[15] * d[67] + 2 * d[2] * d[9] * d[16] * d[67] + 2 * d[0] * d[11] * d[16] * d[67] - 4 * d[4] * d[13] * d[16] * d[67] - 2 * d[5] * d[9] * d[17] * d[67] + 2 * d[4] * d[12] * d[17] * d[67] + 2 * d[3] * d[13] * d[17] * d[67] - 2 * d[0] * d[14] * d[17] * d[67] - 2 * d[11] * d[12] * d[66] * d[67] + 2 * d[13] * d[14] * d[66] * d[67] + d[9] * d[11] * std::pow(d[67], 2) - std::pow(d[13], 2) * std::pow(d[67], 2) + 2 * d[8] * d[9] * d[10] * d[68] - 2 * d[8] * std::pow(d[12], 2) * d[68] - 2 * d[6] * d[10] * d[13] * d[68] + 2 * d[7] * d[12] * d[13] * d[68] - 2 * d[7] * d[9] * d[14] * d[68] + 2 * d[6] * d[12] * d[14] * d[68] - 2 * d[4] * d[10] * d[15] * d[68] + 2 * d[5] * d[12] * d[15] * d[68] - 2 * d[1] * d[13] * d[15] * d[68] + 2 * d[3] * d[14] * d[15] * d[68] - 2 * d[5] * d[9] * d[16] * d[68] + 2 * d[4] * d[12] * d[16] * d[68] + 2 * d[3] * d[13] * d[16] * d[68] - 2 * d[0] * d[14] * d[16] * d[68] + 2 * d[1] * d[9] * d[17] * d[68] + 2 * d[0] * d[10] * d[17] * d[68] - 4 * d[3] * d[12] * d[17] * d[68] - 2 * d[10] * d[13] * d[66] * d[68] + 2 * d[12] * d[14] * d[66] * d[68] + 2 * d[12] * d[13] * d[67] * d[68] - 2 * d[9] * d[14] * d[67] * d[68] + d[9] * d[10] * std::pow(d[68], 2) - std::pow(d[12], 2) * std::pow(d[68], 2) - d[2] * d[9] * d[10] * d[73] - d[1] * d[9] * d[11] * d[73] - d[0] * d[10] * d[11] * d[73] + 2 * d[3] * d[11] * d[12] * d[73] + d[2] * std::pow(d[12], 2) * d[73] + 2 * d[4] * d[10] * d[13] * d[73] - 2 * d[5] * d[12] * d[13] * d[73] + d[1] * std::pow(d[13], 2) * d[73] + 2 * d[5] * d[9] * d[14] * d[73] - 2 * d[4] * d[12] * d[14] * d[73] - 2 * d[3] * d[13] * d[14] * d[73] + d[0] * std::pow(d[14], 2) * d[73];
    coeffs[260] = 2 * d[6] * d[11] * d[19] * d[66] - 2 * d[8] * d[13] * d[19] * d[66] + 2 * d[2] * d[15] * d[19] * d[66] - 2 * d[4] * d[17] * d[19] * d[66] + 2 * d[6] * d[10] * d[20] * d[66] - 2 * d[7] * d[12] * d[20] * d[66] + 2 * d[1] * d[15] * d[20] * d[66] - 2 * d[3] * d[16] * d[20] * d[66] - 2 * d[7] * d[11] * d[21] * d[66] + 2 * d[8] * d[14] * d[21] * d[66] - 2 * d[2] * d[16] * d[21] * d[66] + 2 * d[5] * d[17] * d[21] * d[66] - 2 * d[8] * d[10] * d[22] * d[66] + 2 * d[7] * d[14] * d[22] * d[66] + 2 * d[5] * d[16] * d[22] * d[66] - 2 * d[1] * d[17] * d[22] * d[66] + 2 * d[8] * d[12] * d[23] * d[66] + 2 * d[7] * d[13] * d[23] * d[66] - 4 * d[6] * d[14] * d[23] * d[66] - 4 * d[5] * d[15] * d[23] * d[66] + 2 * d[4] * d[16] * d[23] * d[66] + 2 * d[3] * d[17] * d[23] * d[66] + 2 * d[2] * d[10] * d[24] * d[66] + 2 * d[1] * d[11] * d[24] * d[66] - 4 * d[5] * d[14] * d[24] * d[66] - 2 * d[3] * d[11] * d[25] * d[66] - 2 * d[2] * d[12] * d[25] * d[66] + 2 * d[5] * d[13] * d[25] * d[66] + 2 * d[4] * d[14] * d[25] * d[66] - 2 * d[4] * d[10] * d[26] * d[66] + 2 * d[5] * d[12] * d[26] * d[66] - 2 * d[1] * d[13] * d[26] * d[66] + 2 * d[3] * d[14] * d[26] * d[66] + d[11] * d[19] * std::pow(d[66], 2) + d[10] * d[20] * std::pow(d[66], 2) - 2 * d[14] * d[23] * std::pow(d[66], 2) + 2 * d[7] * d[11] * d[18] * d[67] - 2 * d[8] * d[14] * d[18] * d[67] + 2 * d[2] * d[16] * d[18] * d[67] - 2 * d[5] * d[17] * d[18] * d[67] + 2 * d[7] * d[9] * d[20] * d[67] - 2 * d[6] * d[12] * d[20] * d[67] - 2 * d[3] * d[15] * d[20] * d[67] + 2 * d[0] * d[16] * d[20] * d[67] - 2 * d[6] * d[11] * d[21] * d[67] + 2 * d[8] * d[13] * d[21] * d[67] - 2 * d[2] * d[15] * d[21] * d[67] + 2 * d[4] * d[17] * d[21] * d[67] + 2 * d[8] * d[12] * d[22] * d[67] - 4 * d[7] * d[13] * d[22] * d[67] + 2 * d[6] * d[14] * d[22] * d[67] + 2 * d[5] * d[15] * d[22] * d[67] - 4 * d[4] * d[16] * d[22] * d[67] + 2 * d[3] * d[17] * d[22] * d[67] - 2 * d[8] * d[9] * d[23] * d[67] + 2 * d[6] * d[13] * d[23] * d[67] + 2 * d[4] * d[15] * d[23] * d[67] - 2 * d[0] * d[17] * d[23] * d[67] - 2 * d[3] * d[11] * d[24] * d[67] - 2 * d[2] * d[12] * d[24] * d[67] + 2 * d[5] * d[13] * d[24] * d[67] + 2 * d[4] * d[14] * d[24] * d[67] + 2 * d[2] * d[9] * d[25] * d[67] + 2 * d[0] * d[11] * d[25] * d[67] - 4 * d[4] * d[13] * d[25] * d[67] - 2 * d[5] * d[9] * d[26] * d[67] + 2 * d[4] * d[12] * d[26] * d[67] + 2 * d[3] * d[13] * d[26] * d[67] - 2 * d[0] * d[14] * d[26] * d[67] - 2 * d[12] * d[20] * d[66] * d[67] - 2 * d[11] * d[21] * d[66] * d[67] + 2 * d[14] * d[22] * d[66] * d[67] + 2 * d[13] * d[23] * d[66] * d[67] + d[11] * d[18] * std::pow(d[67], 2) + d[9] * d[20] * std::pow(d[67], 2) - 2 * d[13] * d[22] * std::pow(d[67], 2) + 2 * d[8] * d[10] * d[18] * d[68] - 2 * d[7] * d[14] * d[18] * d[68] - 2 * d[5] * d[16] * d[18] * d[68] + 2 * d[1] * d[17] * d[18] * d[68] + 2 * d[8] * d[9] * d[19] * d[68] - 2 * d[6] * d[13] * d[19] * d[68] - 2 * d[4] * d[15] * d[19] * d[68] + 2 * d[0] * d[17] * d[19] * d[68] - 4 * d[8] * d[12] * d[21] * d[68] + 2 * d[7] * d[13] * d[21] * d[68] + 2 * d[6] * d[14] * d[21] * d[68] + 2 * d[5] * d[15] * d[21] * d[68] + 2 * d[4] * d[16] * d[21] * d[68] - 4 * d[3] * d[17] * d[21] * d[68] - 2 * d[6] * d[10] * d[22] * d[68] + 2 * d[7] * d[12] * d[22] * d[68] - 2 * d[1] * d[15] * d[22] * d[68] + 2 * d[3] * d[16] * d[22] * d[68] - 2 * d[7] * d[9] * d[23] * d[68] + 2 * d[6] * d[12] * d[23] * d[68] + 2 * d[3] * d[15] * d[23] * d[68] - 2 * d[0] * d[16] * d[23] * d[68] - 2 * d[4] * d[10] * d[24] * d[68] + 2 * d[5] * d[12] * d[24] * d[68] - 2 * d[1] * d[13] * d[24] * d[68] + 2 * d[3] * d[14] * d[24] * d[68] - 2 * d[5] * d[9] * d[25] * d[68] + 2 * d[4] * d[12] * d[25] * d[68] + 2 * d[3] * d[13] * d[25] * d[68] - 2 * d[0] * d[14] * d[25] * d[68] + 2 * d[1] * d[9] * d[26] * d[68] + 2 * d[0] * d[10] * d[26] * d[68] - 4 * d[3] * d[12] * d[26] * d[68] - 2 * d[13] * d[19] * d[66] * d[68] + 2 * d[14] * d[21] * d[66] * d[68] - 2 * d[10] * d[22] * d[66] * d[68] + 2 * d[12] * d[23] * d[66] * d[68] - 2 * d[14] * d[18] * d[67] * d[68] + 2 * d[13] * d[21] * d[67] * d[68] + 2 * d[12] * d[22] * d[67] * d[68] - 2 * d[9] * d[23] * d[67] * d[68] + d[10] * d[18] * std::pow(d[68], 2) + d[9] * d[19] * std::pow(d[68], 2) - 2 * d[12] * d[21] * std::pow(d[68], 2) - d[2] * d[10] * d[18] * d[73] - d[1] * d[11] * d[18] * d[73] + 2 * d[5] * d[14] * d[18] * d[73] - d[2] * d[9] * d[19] * d[73] - d[0] * d[11] * d[19] * d[73] + 2 * d[4] * d[13] * d[19] * d[73] - d[1] * d[9] * d[20] * d[73] - d[0] * d[10] * d[20] * d[73] + 2 * d[3] * d[12] * d[20] * d[73] + 2 * d[3] * d[11] * d[21] * d[73] + 2 * d[2] * d[12] * d[21] * d[73] - 2 * d[5] * d[13] * d[21] * d[73] - 2 * d[4] * d[14] * d[21] * d[73] + 2 * d[4] * d[10] * d[22] * d[73] - 2 * d[5] * d[12] * d[22] * d[73] + 2 * d[1] * d[13] * d[22] * d[73] - 2 * d[3] * d[14] * d[22] * d[73] + 2 * d[5] * d[9] * d[23] * d[73] - 2 * d[4] * d[12] * d[23] * d[73] - 2 * d[3] * d[13] * d[23] * d[73] + 2 * d[0] * d[14] * d[23] * d[73];
    coeffs[261] = 2 * d[6] * d[19] * d[20] * d[66] - 2 * d[7] * d[20] * d[21] * d[66] - 2 * d[8] * d[19] * d[22] * d[66] + 2 * d[8] * d[21] * d[23] * d[66] + 2 * d[7] * d[22] * d[23] * d[66] - 2 * d[6] * std::pow(d[23], 2) * d[66] + 2 * d[2] * d[19] * d[24] * d[66] + 2 * d[1] * d[20] * d[24] * d[66] - 4 * d[5] * d[23] * d[24] * d[66] - 2 * d[3] * d[20] * d[25] * d[66] - 2 * d[2] * d[21] * d[25] * d[66] + 2 * d[5] * d[22] * d[25] * d[66] + 2 * d[4] * d[23] * d[25] * d[66] - 2 * d[4] * d[19] * d[26] * d[66] + 2 * d[5] * d[21] * d[26] * d[66] - 2 * d[1] * d[22] * d[26] * d[66] + 2 * d[3] * d[23] * d[26] * d[66] + d[19] * d[20] * std::pow(d[66], 2) - std::pow(d[23], 2) * std::pow(d[66], 2) + 2 * d[7] * d[18] * d[20] * d[67] - 2 * d[6] * d[20] * d[21] * d[67] + 2 * d[8] * d[21] * d[22] * d[67] - 2 * d[7] * std::pow(d[22], 2) * d[67] - 2 * d[8] * d[18] * d[23] * d[67] + 2 * d[6] * d[22] * d[23] * d[67] - 2 * d[3] * d[20] * d[24] * d[67] - 2 * d[2] * d[21] * d[24] * d[67] + 2 * d[5] * d[22] * d[24] * d[67] + 2 * d[4] * d[23] * d[24] * d[67] + 2 * d[2] * d[18] * d[25] * d[67] + 2 * d[0] * d[20] * d[25] * d[67] - 4 * d[4] * d[22] * d[25] * d[67] - 2 * d[5] * d[18] * d[26] * d[67] + 2 * d[4] * d[21] * d[26] * d[67] + 2 * d[3] * d[22] * d[26] * d[67] - 2 * d[0] * d[23] * d[26] * d[67] - 2 * d[20] * d[21] * d[66] * d[67] + 2 * d[22] * d[23] * d[66] * d[67] + d[18] * d[20] * std::pow(d[67], 2) - std::pow(d[22], 2) * std::pow(d[67], 2) + 2 * d[8] * d[18] * d[19] * d[68] - 2 * d[8] * std::pow(d[21], 2) * d[68] - 2 * d[6] * d[19] * d[22] * d[68] + 2 * d[7] * d[21] * d[22] * d[68] - 2 * d[7] * d[18] * d[23] * d[68] + 2 * d[6] * d[21] * d[23] * d[68] - 2 * d[4] * d[19] * d[24] * d[68] + 2 * d[5] * d[21] * d[24] * d[68] - 2 * d[1] * d[22] * d[24] * d[68] + 2 * d[3] * d[23] * d[24] * d[68] - 2 * d[5] * d[18] * d[25] * d[68] + 2 * d[4] * d[21] * d[25] * d[68] + 2 * d[3] * d[22] * d[25] * d[68] - 2 * d[0] * d[23] * d[25] * d[68] + 2 * d[1] * d[18] * d[26] * d[68] + 2 * d[0] * d[19] * d[26] * d[68] - 4 * d[3] * d[21] * d[26] * d[68] - 2 * d[19] * d[22] * d[66] * d[68] + 2 * d[21] * d[23] * d[66] * d[68] + 2 * d[21] * d[22] * d[67] * d[68] - 2 * d[18] * d[23] * d[67] * d[68] + d[18] * d[19] * std::pow(d[68], 2) - std::pow(d[21], 2) * std::pow(d[68], 2) - d[2] * d[18] * d[19] * d[73] - d[1] * d[18] * d[20] * d[73] - d[0] * d[19] * d[20] * d[73] + 2 * d[3] * d[20] * d[21] * d[73] + d[2] * std::pow(d[21], 2) * d[73] + 2 * d[4] * d[19] * d[22] * d[73] - 2 * d[5] * d[21] * d[22] * d[73] + d[1] * std::pow(d[22], 2) * d[73] + 2 * d[5] * d[18] * d[23] * d[73] - 2 * d[4] * d[21] * d[23] * d[73] - 2 * d[3] * d[22] * d[23] * d[73] + d[0] * std::pow(d[23], 2) * d[73];
    coeffs[262] = 2 * d[6] * d[11] * d[28] * d[66] - 2 * d[8] * d[13] * d[28] * d[66] + 2 * d[2] * d[15] * d[28] * d[66] - 2 * d[4] * d[17] * d[28] * d[66] + 2 * d[6] * d[10] * d[29] * d[66] - 2 * d[7] * d[12] * d[29] * d[66] + 2 * d[1] * d[15] * d[29] * d[66] - 2 * d[3] * d[16] * d[29] * d[66] - 2 * d[7] * d[11] * d[30] * d[66] + 2 * d[8] * d[14] * d[30] * d[66] - 2 * d[2] * d[16] * d[30] * d[66] + 2 * d[5] * d[17] * d[30] * d[66] - 2 * d[8] * d[10] * d[31] * d[66] + 2 * d[7] * d[14] * d[31] * d[66] + 2 * d[5] * d[16] * d[31] * d[66] - 2 * d[1] * d[17] * d[31] * d[66] + 2 * d[8] * d[12] * d[32] * d[66] + 2 * d[7] * d[13] * d[32] * d[66] - 4 * d[6] * d[14] * d[32] * d[66] - 4 * d[5] * d[15] * d[32] * d[66] + 2 * d[4] * d[16] * d[32] * d[66] + 2 * d[3] * d[17] * d[32] * d[66] + 2 * d[2] * d[10] * d[33] * d[66] + 2 * d[1] * d[11] * d[33] * d[66] - 4 * d[5] * d[14] * d[33] * d[66] - 2 * d[3] * d[11] * d[34] * d[66] - 2 * d[2] * d[12] * d[34] * d[66] + 2 * d[5] * d[13] * d[34] * d[66] + 2 * d[4] * d[14] * d[34] * d[66] - 2 * d[4] * d[10] * d[35] * d[66] + 2 * d[5] * d[12] * d[35] * d[66] - 2 * d[1] * d[13] * d[35] * d[66] + 2 * d[3] * d[14] * d[35] * d[66] + d[11] * d[28] * std::pow(d[66], 2) + d[10] * d[29] * std::pow(d[66], 2) - 2 * d[14] * d[32] * std::pow(d[66], 2) + 2 * d[7] * d[11] * d[27] * d[67] - 2 * d[8] * d[14] * d[27] * d[67] + 2 * d[2] * d[16] * d[27] * d[67] - 2 * d[5] * d[17] * d[27] * d[67] + 2 * d[7] * d[9] * d[29] * d[67] - 2 * d[6] * d[12] * d[29] * d[67] - 2 * d[3] * d[15] * d[29] * d[67] + 2 * d[0] * d[16] * d[29] * d[67] - 2 * d[6] * d[11] * d[30] * d[67] + 2 * d[8] * d[13] * d[30] * d[67] - 2 * d[2] * d[15] * d[30] * d[67] + 2 * d[4] * d[17] * d[30] * d[67] + 2 * d[8] * d[12] * d[31] * d[67] - 4 * d[7] * d[13] * d[31] * d[67] + 2 * d[6] * d[14] * d[31] * d[67] + 2 * d[5] * d[15] * d[31] * d[67] - 4 * d[4] * d[16] * d[31] * d[67] + 2 * d[3] * d[17] * d[31] * d[67] - 2 * d[8] * d[9] * d[32] * d[67] + 2 * d[6] * d[13] * d[32] * d[67] + 2 * d[4] * d[15] * d[32] * d[67] - 2 * d[0] * d[17] * d[32] * d[67] - 2 * d[3] * d[11] * d[33] * d[67] - 2 * d[2] * d[12] * d[33] * d[67] + 2 * d[5] * d[13] * d[33] * d[67] + 2 * d[4] * d[14] * d[33] * d[67] + 2 * d[2] * d[9] * d[34] * d[67] + 2 * d[0] * d[11] * d[34] * d[67] - 4 * d[4] * d[13] * d[34] * d[67] - 2 * d[5] * d[9] * d[35] * d[67] + 2 * d[4] * d[12] * d[35] * d[67] + 2 * d[3] * d[13] * d[35] * d[67] - 2 * d[0] * d[14] * d[35] * d[67] - 2 * d[12] * d[29] * d[66] * d[67] - 2 * d[11] * d[30] * d[66] * d[67] + 2 * d[14] * d[31] * d[66] * d[67] + 2 * d[13] * d[32] * d[66] * d[67] + d[11] * d[27] * std::pow(d[67], 2) + d[9] * d[29] * std::pow(d[67], 2) - 2 * d[13] * d[31] * std::pow(d[67], 2) + 2 * d[8] * d[10] * d[27] * d[68] - 2 * d[7] * d[14] * d[27] * d[68] - 2 * d[5] * d[16] * d[27] * d[68] + 2 * d[1] * d[17] * d[27] * d[68] + 2 * d[8] * d[9] * d[28] * d[68] - 2 * d[6] * d[13] * d[28] * d[68] - 2 * d[4] * d[15] * d[28] * d[68] + 2 * d[0] * d[17] * d[28] * d[68] - 4 * d[8] * d[12] * d[30] * d[68] + 2 * d[7] * d[13] * d[30] * d[68] + 2 * d[6] * d[14] * d[30] * d[68] + 2 * d[5] * d[15] * d[30] * d[68] + 2 * d[4] * d[16] * d[30] * d[68] - 4 * d[3] * d[17] * d[30] * d[68] - 2 * d[6] * d[10] * d[31] * d[68] + 2 * d[7] * d[12] * d[31] * d[68] - 2 * d[1] * d[15] * d[31] * d[68] + 2 * d[3] * d[16] * d[31] * d[68] - 2 * d[7] * d[9] * d[32] * d[68] + 2 * d[6] * d[12] * d[32] * d[68] + 2 * d[3] * d[15] * d[32] * d[68] - 2 * d[0] * d[16] * d[32] * d[68] - 2 * d[4] * d[10] * d[33] * d[68] + 2 * d[5] * d[12] * d[33] * d[68] - 2 * d[1] * d[13] * d[33] * d[68] + 2 * d[3] * d[14] * d[33] * d[68] - 2 * d[5] * d[9] * d[34] * d[68] + 2 * d[4] * d[12] * d[34] * d[68] + 2 * d[3] * d[13] * d[34] * d[68] - 2 * d[0] * d[14] * d[34] * d[68] + 2 * d[1] * d[9] * d[35] * d[68] + 2 * d[0] * d[10] * d[35] * d[68] - 4 * d[3] * d[12] * d[35] * d[68] - 2 * d[13] * d[28] * d[66] * d[68] + 2 * d[14] * d[30] * d[66] * d[68] - 2 * d[10] * d[31] * d[66] * d[68] + 2 * d[12] * d[32] * d[66] * d[68] - 2 * d[14] * d[27] * d[67] * d[68] + 2 * d[13] * d[30] * d[67] * d[68] + 2 * d[12] * d[31] * d[67] * d[68] - 2 * d[9] * d[32] * d[67] * d[68] + d[10] * d[27] * std::pow(d[68], 2) + d[9] * d[28] * std::pow(d[68], 2) - 2 * d[12] * d[30] * std::pow(d[68], 2) - d[2] * d[10] * d[27] * d[73] - d[1] * d[11] * d[27] * d[73] + 2 * d[5] * d[14] * d[27] * d[73] - d[2] * d[9] * d[28] * d[73] - d[0] * d[11] * d[28] * d[73] + 2 * d[4] * d[13] * d[28] * d[73] - d[1] * d[9] * d[29] * d[73] - d[0] * d[10] * d[29] * d[73] + 2 * d[3] * d[12] * d[29] * d[73] + 2 * d[3] * d[11] * d[30] * d[73] + 2 * d[2] * d[12] * d[30] * d[73] - 2 * d[5] * d[13] * d[30] * d[73] - 2 * d[4] * d[14] * d[30] * d[73] + 2 * d[4] * d[10] * d[31] * d[73] - 2 * d[5] * d[12] * d[31] * d[73] + 2 * d[1] * d[13] * d[31] * d[73] - 2 * d[3] * d[14] * d[31] * d[73] + 2 * d[5] * d[9] * d[32] * d[73] - 2 * d[4] * d[12] * d[32] * d[73] - 2 * d[3] * d[13] * d[32] * d[73] + 2 * d[0] * d[14] * d[32] * d[73];
    coeffs[263] = 2 * d[6] * d[20] * d[28] * d[66] - 2 * d[8] * d[22] * d[28] * d[66] + 2 * d[2] * d[24] * d[28] * d[66] - 2 * d[4] * d[26] * d[28] * d[66] + 2 * d[6] * d[19] * d[29] * d[66] - 2 * d[7] * d[21] * d[29] * d[66] + 2 * d[1] * d[24] * d[29] * d[66] - 2 * d[3] * d[25] * d[29] * d[66] - 2 * d[7] * d[20] * d[30] * d[66] + 2 * d[8] * d[23] * d[30] * d[66] - 2 * d[2] * d[25] * d[30] * d[66] + 2 * d[5] * d[26] * d[30] * d[66] - 2 * d[8] * d[19] * d[31] * d[66] + 2 * d[7] * d[23] * d[31] * d[66] + 2 * d[5] * d[25] * d[31] * d[66] - 2 * d[1] * d[26] * d[31] * d[66] + 2 * d[8] * d[21] * d[32] * d[66] + 2 * d[7] * d[22] * d[32] * d[66] - 4 * d[6] * d[23] * d[32] * d[66] - 4 * d[5] * d[24] * d[32] * d[66] + 2 * d[4] * d[25] * d[32] * d[66] + 2 * d[3] * d[26] * d[32] * d[66] + 2 * d[2] * d[19] * d[33] * d[66] + 2 * d[1] * d[20] * d[33] * d[66] - 4 * d[5] * d[23] * d[33] * d[66] - 2 * d[3] * d[20] * d[34] * d[66] - 2 * d[2] * d[21] * d[34] * d[66] + 2 * d[5] * d[22] * d[34] * d[66] + 2 * d[4] * d[23] * d[34] * d[66] - 2 * d[4] * d[19] * d[35] * d[66] + 2 * d[5] * d[21] * d[35] * d[66] - 2 * d[1] * d[22] * d[35] * d[66] + 2 * d[3] * d[23] * d[35] * d[66] + d[20] * d[28] * std::pow(d[66], 2) + d[19] * d[29] * std::pow(d[66], 2) - 2 * d[23] * d[32] * std::pow(d[66], 2) + 2 * d[7] * d[20] * d[27] * d[67] - 2 * d[8] * d[23] * d[27] * d[67] + 2 * d[2] * d[25] * d[27] * d[67] - 2 * d[5] * d[26] * d[27] * d[67] + 2 * d[7] * d[18] * d[29] * d[67] - 2 * d[6] * d[21] * d[29] * d[67] - 2 * d[3] * d[24] * d[29] * d[67] + 2 * d[0] * d[25] * d[29] * d[67] - 2 * d[6] * d[20] * d[30] * d[67] + 2 * d[8] * d[22] * d[30] * d[67] - 2 * d[2] * d[24] * d[30] * d[67] + 2 * d[4] * d[26] * d[30] * d[67] + 2 * d[8] * d[21] * d[31] * d[67] - 4 * d[7] * d[22] * d[31] * d[67] + 2 * d[6] * d[23] * d[31] * d[67] + 2 * d[5] * d[24] * d[31] * d[67] - 4 * d[4] * d[25] * d[31] * d[67] + 2 * d[3] * d[26] * d[31] * d[67] - 2 * d[8] * d[18] * d[32] * d[67] + 2 * d[6] * d[22] * d[32] * d[67] + 2 * d[4] * d[24] * d[32] * d[67] - 2 * d[0] * d[26] * d[32] * d[67] - 2 * d[3] * d[20] * d[33] * d[67] - 2 * d[2] * d[21] * d[33] * d[67] + 2 * d[5] * d[22] * d[33] * d[67] + 2 * d[4] * d[23] * d[33] * d[67] + 2 * d[2] * d[18] * d[34] * d[67] + 2 * d[0] * d[20] * d[34] * d[67] - 4 * d[4] * d[22] * d[34] * d[67] - 2 * d[5] * d[18] * d[35] * d[67] + 2 * d[4] * d[21] * d[35] * d[67] + 2 * d[3] * d[22] * d[35] * d[67] - 2 * d[0] * d[23] * d[35] * d[67] - 2 * d[21] * d[29] * d[66] * d[67] - 2 * d[20] * d[30] * d[66] * d[67] + 2 * d[23] * d[31] * d[66] * d[67] + 2 * d[22] * d[32] * d[66] * d[67] + d[20] * d[27] * std::pow(d[67], 2) + d[18] * d[29] * std::pow(d[67], 2) - 2 * d[22] * d[31] * std::pow(d[67], 2) + 2 * d[8] * d[19] * d[27] * d[68] - 2 * d[7] * d[23] * d[27] * d[68] - 2 * d[5] * d[25] * d[27] * d[68] + 2 * d[1] * d[26] * d[27] * d[68] + 2 * d[8] * d[18] * d[28] * d[68] - 2 * d[6] * d[22] * d[28] * d[68] - 2 * d[4] * d[24] * d[28] * d[68] + 2 * d[0] * d[26] * d[28] * d[68] - 4 * d[8] * d[21] * d[30] * d[68] + 2 * d[7] * d[22] * d[30] * d[68] + 2 * d[6] * d[23] * d[30] * d[68] + 2 * d[5] * d[24] * d[30] * d[68] + 2 * d[4] * d[25] * d[30] * d[68] - 4 * d[3] * d[26] * d[30] * d[68] - 2 * d[6] * d[19] * d[31] * d[68] + 2 * d[7] * d[21] * d[31] * d[68] - 2 * d[1] * d[24] * d[31] * d[68] + 2 * d[3] * d[25] * d[31] * d[68] - 2 * d[7] * d[18] * d[32] * d[68] + 2 * d[6] * d[21] * d[32] * d[68] + 2 * d[3] * d[24] * d[32] * d[68] - 2 * d[0] * d[25] * d[32] * d[68] - 2 * d[4] * d[19] * d[33] * d[68] + 2 * d[5] * d[21] * d[33] * d[68] - 2 * d[1] * d[22] * d[33] * d[68] + 2 * d[3] * d[23] * d[33] * d[68] - 2 * d[5] * d[18] * d[34] * d[68] + 2 * d[4] * d[21] * d[34] * d[68] + 2 * d[3] * d[22] * d[34] * d[68] - 2 * d[0] * d[23] * d[34] * d[68] + 2 * d[1] * d[18] * d[35] * d[68] + 2 * d[0] * d[19] * d[35] * d[68] - 4 * d[3] * d[21] * d[35] * d[68] - 2 * d[22] * d[28] * d[66] * d[68] + 2 * d[23] * d[30] * d[66] * d[68] - 2 * d[19] * d[31] * d[66] * d[68] + 2 * d[21] * d[32] * d[66] * d[68] - 2 * d[23] * d[27] * d[67] * d[68] + 2 * d[22] * d[30] * d[67] * d[68] + 2 * d[21] * d[31] * d[67] * d[68] - 2 * d[18] * d[32] * d[67] * d[68] + d[19] * d[27] * std::pow(d[68], 2) + d[18] * d[28] * std::pow(d[68], 2) - 2 * d[21] * d[30] * std::pow(d[68], 2) - d[2] * d[19] * d[27] * d[73] - d[1] * d[20] * d[27] * d[73] + 2 * d[5] * d[23] * d[27] * d[73] - d[2] * d[18] * d[28] * d[73] - d[0] * d[20] * d[28] * d[73] + 2 * d[4] * d[22] * d[28] * d[73] - d[1] * d[18] * d[29] * d[73] - d[0] * d[19] * d[29] * d[73] + 2 * d[3] * d[21] * d[29] * d[73] + 2 * d[3] * d[20] * d[30] * d[73] + 2 * d[2] * d[21] * d[30] * d[73] - 2 * d[5] * d[22] * d[30] * d[73] - 2 * d[4] * d[23] * d[30] * d[73] + 2 * d[4] * d[19] * d[31] * d[73] - 2 * d[5] * d[21] * d[31] * d[73] + 2 * d[1] * d[22] * d[31] * d[73] - 2 * d[3] * d[23] * d[31] * d[73] + 2 * d[5] * d[18] * d[32] * d[73] - 2 * d[4] * d[21] * d[32] * d[73] - 2 * d[3] * d[22] * d[32] * d[73] + 2 * d[0] * d[23] * d[32] * d[73];
    coeffs[264] = 2 * d[6] * d[28] * d[29] * d[66] - 2 * d[7] * d[29] * d[30] * d[66] - 2 * d[8] * d[28] * d[31] * d[66] + 2 * d[8] * d[30] * d[32] * d[66] + 2 * d[7] * d[31] * d[32] * d[66] - 2 * d[6] * std::pow(d[32], 2) * d[66] + 2 * d[2] * d[28] * d[33] * d[66] + 2 * d[1] * d[29] * d[33] * d[66] - 4 * d[5] * d[32] * d[33] * d[66] - 2 * d[3] * d[29] * d[34] * d[66] - 2 * d[2] * d[30] * d[34] * d[66] + 2 * d[5] * d[31] * d[34] * d[66] + 2 * d[4] * d[32] * d[34] * d[66] - 2 * d[4] * d[28] * d[35] * d[66] + 2 * d[5] * d[30] * d[35] * d[66] - 2 * d[1] * d[31] * d[35] * d[66] + 2 * d[3] * d[32] * d[35] * d[66] + d[28] * d[29] * std::pow(d[66], 2) - std::pow(d[32], 2) * std::pow(d[66], 2) + 2 * d[7] * d[27] * d[29] * d[67] - 2 * d[6] * d[29] * d[30] * d[67] + 2 * d[8] * d[30] * d[31] * d[67] - 2 * d[7] * std::pow(d[31], 2) * d[67] - 2 * d[8] * d[27] * d[32] * d[67] + 2 * d[6] * d[31] * d[32] * d[67] - 2 * d[3] * d[29] * d[33] * d[67] - 2 * d[2] * d[30] * d[33] * d[67] + 2 * d[5] * d[31] * d[33] * d[67] + 2 * d[4] * d[32] * d[33] * d[67] + 2 * d[2] * d[27] * d[34] * d[67] + 2 * d[0] * d[29] * d[34] * d[67] - 4 * d[4] * d[31] * d[34] * d[67] - 2 * d[5] * d[27] * d[35] * d[67] + 2 * d[4] * d[30] * d[35] * d[67] + 2 * d[3] * d[31] * d[35] * d[67] - 2 * d[0] * d[32] * d[35] * d[67] - 2 * d[29] * d[30] * d[66] * d[67] + 2 * d[31] * d[32] * d[66] * d[67] + d[27] * d[29] * std::pow(d[67], 2) - std::pow(d[31], 2) * std::pow(d[67], 2) + 2 * d[8] * d[27] * d[28] * d[68] - 2 * d[8] * std::pow(d[30], 2) * d[68] - 2 * d[6] * d[28] * d[31] * d[68] + 2 * d[7] * d[30] * d[31] * d[68] - 2 * d[7] * d[27] * d[32] * d[68] + 2 * d[6] * d[30] * d[32] * d[68] - 2 * d[4] * d[28] * d[33] * d[68] + 2 * d[5] * d[30] * d[33] * d[68] - 2 * d[1] * d[31] * d[33] * d[68] + 2 * d[3] * d[32] * d[33] * d[68] - 2 * d[5] * d[27] * d[34] * d[68] + 2 * d[4] * d[30] * d[34] * d[68] + 2 * d[3] * d[31] * d[34] * d[68] - 2 * d[0] * d[32] * d[34] * d[68] + 2 * d[1] * d[27] * d[35] * d[68] + 2 * d[0] * d[28] * d[35] * d[68] - 4 * d[3] * d[30] * d[35] * d[68] - 2 * d[28] * d[31] * d[66] * d[68] + 2 * d[30] * d[32] * d[66] * d[68] + 2 * d[30] * d[31] * d[67] * d[68] - 2 * d[27] * d[32] * d[67] * d[68] + d[27] * d[28] * std::pow(d[68], 2) - std::pow(d[30], 2) * std::pow(d[68], 2) - d[2] * d[27] * d[28] * d[73] - d[1] * d[27] * d[29] * d[73] - d[0] * d[28] * d[29] * d[73] + 2 * d[3] * d[29] * d[30] * d[73] + d[2] * std::pow(d[30], 2) * d[73] + 2 * d[4] * d[28] * d[31] * d[73] - 2 * d[5] * d[30] * d[31] * d[73] + d[1] * std::pow(d[31], 2) * d[73] + 2 * d[5] * d[27] * d[32] * d[73] - 2 * d[4] * d[30] * d[32] * d[73] - 2 * d[3] * d[31] * d[32] * d[73] + d[0] * std::pow(d[32], 2) * d[73];
    coeffs[265] = 2 * d[6] * d[11] * d[37] * d[66] - 2 * d[8] * d[13] * d[37] * d[66] + 2 * d[2] * d[15] * d[37] * d[66] - 2 * d[4] * d[17] * d[37] * d[66] + 2 * d[6] * d[10] * d[38] * d[66] - 2 * d[7] * d[12] * d[38] * d[66] + 2 * d[1] * d[15] * d[38] * d[66] - 2 * d[3] * d[16] * d[38] * d[66] - 2 * d[7] * d[11] * d[39] * d[66] + 2 * d[8] * d[14] * d[39] * d[66] - 2 * d[2] * d[16] * d[39] * d[66] + 2 * d[5] * d[17] * d[39] * d[66] - 2 * d[8] * d[10] * d[40] * d[66] + 2 * d[7] * d[14] * d[40] * d[66] + 2 * d[5] * d[16] * d[40] * d[66] - 2 * d[1] * d[17] * d[40] * d[66] + 2 * d[8] * d[12] * d[41] * d[66] + 2 * d[7] * d[13] * d[41] * d[66] - 4 * d[6] * d[14] * d[41] * d[66] - 4 * d[5] * d[15] * d[41] * d[66] + 2 * d[4] * d[16] * d[41] * d[66] + 2 * d[3] * d[17] * d[41] * d[66] + 2 * d[2] * d[10] * d[42] * d[66] + 2 * d[1] * d[11] * d[42] * d[66] - 4 * d[5] * d[14] * d[42] * d[66] - 2 * d[3] * d[11] * d[43] * d[66] - 2 * d[2] * d[12] * d[43] * d[66] + 2 * d[5] * d[13] * d[43] * d[66] + 2 * d[4] * d[14] * d[43] * d[66] - 2 * d[4] * d[10] * d[44] * d[66] + 2 * d[5] * d[12] * d[44] * d[66] - 2 * d[1] * d[13] * d[44] * d[66] + 2 * d[3] * d[14] * d[44] * d[66] + d[11] * d[37] * std::pow(d[66], 2) + d[10] * d[38] * std::pow(d[66], 2) - 2 * d[14] * d[41] * std::pow(d[66], 2) + 2 * d[7] * d[11] * d[36] * d[67] - 2 * d[8] * d[14] * d[36] * d[67] + 2 * d[2] * d[16] * d[36] * d[67] - 2 * d[5] * d[17] * d[36] * d[67] + 2 * d[7] * d[9] * d[38] * d[67] - 2 * d[6] * d[12] * d[38] * d[67] - 2 * d[3] * d[15] * d[38] * d[67] + 2 * d[0] * d[16] * d[38] * d[67] - 2 * d[6] * d[11] * d[39] * d[67] + 2 * d[8] * d[13] * d[39] * d[67] - 2 * d[2] * d[15] * d[39] * d[67] + 2 * d[4] * d[17] * d[39] * d[67] + 2 * d[8] * d[12] * d[40] * d[67] - 4 * d[7] * d[13] * d[40] * d[67] + 2 * d[6] * d[14] * d[40] * d[67] + 2 * d[5] * d[15] * d[40] * d[67] - 4 * d[4] * d[16] * d[40] * d[67] + 2 * d[3] * d[17] * d[40] * d[67] - 2 * d[8] * d[9] * d[41] * d[67] + 2 * d[6] * d[13] * d[41] * d[67] + 2 * d[4] * d[15] * d[41] * d[67] - 2 * d[0] * d[17] * d[41] * d[67] - 2 * d[3] * d[11] * d[42] * d[67] - 2 * d[2] * d[12] * d[42] * d[67] + 2 * d[5] * d[13] * d[42] * d[67] + 2 * d[4] * d[14] * d[42] * d[67] + 2 * d[2] * d[9] * d[43] * d[67] + 2 * d[0] * d[11] * d[43] * d[67] - 4 * d[4] * d[13] * d[43] * d[67] - 2 * d[5] * d[9] * d[44] * d[67] + 2 * d[4] * d[12] * d[44] * d[67] + 2 * d[3] * d[13] * d[44] * d[67] - 2 * d[0] * d[14] * d[44] * d[67] - 2 * d[12] * d[38] * d[66] * d[67] - 2 * d[11] * d[39] * d[66] * d[67] + 2 * d[14] * d[40] * d[66] * d[67] + 2 * d[13] * d[41] * d[66] * d[67] + d[11] * d[36] * std::pow(d[67], 2) + d[9] * d[38] * std::pow(d[67], 2) - 2 * d[13] * d[40] * std::pow(d[67], 2) + 2 * d[8] * d[10] * d[36] * d[68] - 2 * d[7] * d[14] * d[36] * d[68] - 2 * d[5] * d[16] * d[36] * d[68] + 2 * d[1] * d[17] * d[36] * d[68] + 2 * d[8] * d[9] * d[37] * d[68] - 2 * d[6] * d[13] * d[37] * d[68] - 2 * d[4] * d[15] * d[37] * d[68] + 2 * d[0] * d[17] * d[37] * d[68] - 4 * d[8] * d[12] * d[39] * d[68] + 2 * d[7] * d[13] * d[39] * d[68] + 2 * d[6] * d[14] * d[39] * d[68] + 2 * d[5] * d[15] * d[39] * d[68] + 2 * d[4] * d[16] * d[39] * d[68] - 4 * d[3] * d[17] * d[39] * d[68] - 2 * d[6] * d[10] * d[40] * d[68] + 2 * d[7] * d[12] * d[40] * d[68] - 2 * d[1] * d[15] * d[40] * d[68] + 2 * d[3] * d[16] * d[40] * d[68] - 2 * d[7] * d[9] * d[41] * d[68] + 2 * d[6] * d[12] * d[41] * d[68] + 2 * d[3] * d[15] * d[41] * d[68] - 2 * d[0] * d[16] * d[41] * d[68] - 2 * d[4] * d[10] * d[42] * d[68] + 2 * d[5] * d[12] * d[42] * d[68] - 2 * d[1] * d[13] * d[42] * d[68] + 2 * d[3] * d[14] * d[42] * d[68] - 2 * d[5] * d[9] * d[43] * d[68] + 2 * d[4] * d[12] * d[43] * d[68] + 2 * d[3] * d[13] * d[43] * d[68] - 2 * d[0] * d[14] * d[43] * d[68] + 2 * d[1] * d[9] * d[44] * d[68] + 2 * d[0] * d[10] * d[44] * d[68] - 4 * d[3] * d[12] * d[44] * d[68] - 2 * d[13] * d[37] * d[66] * d[68] + 2 * d[14] * d[39] * d[66] * d[68] - 2 * d[10] * d[40] * d[66] * d[68] + 2 * d[12] * d[41] * d[66] * d[68] - 2 * d[14] * d[36] * d[67] * d[68] + 2 * d[13] * d[39] * d[67] * d[68] + 2 * d[12] * d[40] * d[67] * d[68] - 2 * d[9] * d[41] * d[67] * d[68] + d[10] * d[36] * std::pow(d[68], 2) + d[9] * d[37] * std::pow(d[68], 2) - 2 * d[12] * d[39] * std::pow(d[68], 2) - d[2] * d[10] * d[36] * d[73] - d[1] * d[11] * d[36] * d[73] + 2 * d[5] * d[14] * d[36] * d[73] - d[2] * d[9] * d[37] * d[73] - d[0] * d[11] * d[37] * d[73] + 2 * d[4] * d[13] * d[37] * d[73] - d[1] * d[9] * d[38] * d[73] - d[0] * d[10] * d[38] * d[73] + 2 * d[3] * d[12] * d[38] * d[73] + 2 * d[3] * d[11] * d[39] * d[73] + 2 * d[2] * d[12] * d[39] * d[73] - 2 * d[5] * d[13] * d[39] * d[73] - 2 * d[4] * d[14] * d[39] * d[73] + 2 * d[4] * d[10] * d[40] * d[73] - 2 * d[5] * d[12] * d[40] * d[73] + 2 * d[1] * d[13] * d[40] * d[73] - 2 * d[3] * d[14] * d[40] * d[73] + 2 * d[5] * d[9] * d[41] * d[73] - 2 * d[4] * d[12] * d[41] * d[73] - 2 * d[3] * d[13] * d[41] * d[73] + 2 * d[0] * d[14] * d[41] * d[73];
    coeffs[266] = 2 * d[6] * d[20] * d[37] * d[66] - 2 * d[8] * d[22] * d[37] * d[66] + 2 * d[2] * d[24] * d[37] * d[66] - 2 * d[4] * d[26] * d[37] * d[66] + 2 * d[6] * d[19] * d[38] * d[66] - 2 * d[7] * d[21] * d[38] * d[66] + 2 * d[1] * d[24] * d[38] * d[66] - 2 * d[3] * d[25] * d[38] * d[66] - 2 * d[7] * d[20] * d[39] * d[66] + 2 * d[8] * d[23] * d[39] * d[66] - 2 * d[2] * d[25] * d[39] * d[66] + 2 * d[5] * d[26] * d[39] * d[66] - 2 * d[8] * d[19] * d[40] * d[66] + 2 * d[7] * d[23] * d[40] * d[66] + 2 * d[5] * d[25] * d[40] * d[66] - 2 * d[1] * d[26] * d[40] * d[66] + 2 * d[8] * d[21] * d[41] * d[66] + 2 * d[7] * d[22] * d[41] * d[66] - 4 * d[6] * d[23] * d[41] * d[66] - 4 * d[5] * d[24] * d[41] * d[66] + 2 * d[4] * d[25] * d[41] * d[66] + 2 * d[3] * d[26] * d[41] * d[66] + 2 * d[2] * d[19] * d[42] * d[66] + 2 * d[1] * d[20] * d[42] * d[66] - 4 * d[5] * d[23] * d[42] * d[66] - 2 * d[3] * d[20] * d[43] * d[66] - 2 * d[2] * d[21] * d[43] * d[66] + 2 * d[5] * d[22] * d[43] * d[66] + 2 * d[4] * d[23] * d[43] * d[66] - 2 * d[4] * d[19] * d[44] * d[66] + 2 * d[5] * d[21] * d[44] * d[66] - 2 * d[1] * d[22] * d[44] * d[66] + 2 * d[3] * d[23] * d[44] * d[66] + d[20] * d[37] * std::pow(d[66], 2) + d[19] * d[38] * std::pow(d[66], 2) - 2 * d[23] * d[41] * std::pow(d[66], 2) + 2 * d[7] * d[20] * d[36] * d[67] - 2 * d[8] * d[23] * d[36] * d[67] + 2 * d[2] * d[25] * d[36] * d[67] - 2 * d[5] * d[26] * d[36] * d[67] + 2 * d[7] * d[18] * d[38] * d[67] - 2 * d[6] * d[21] * d[38] * d[67] - 2 * d[3] * d[24] * d[38] * d[67] + 2 * d[0] * d[25] * d[38] * d[67] - 2 * d[6] * d[20] * d[39] * d[67] + 2 * d[8] * d[22] * d[39] * d[67] - 2 * d[2] * d[24] * d[39] * d[67] + 2 * d[4] * d[26] * d[39] * d[67] + 2 * d[8] * d[21] * d[40] * d[67] - 4 * d[7] * d[22] * d[40] * d[67] + 2 * d[6] * d[23] * d[40] * d[67] + 2 * d[5] * d[24] * d[40] * d[67] - 4 * d[4] * d[25] * d[40] * d[67] + 2 * d[3] * d[26] * d[40] * d[67] - 2 * d[8] * d[18] * d[41] * d[67] + 2 * d[6] * d[22] * d[41] * d[67] + 2 * d[4] * d[24] * d[41] * d[67] - 2 * d[0] * d[26] * d[41] * d[67] - 2 * d[3] * d[20] * d[42] * d[67] - 2 * d[2] * d[21] * d[42] * d[67] + 2 * d[5] * d[22] * d[42] * d[67] + 2 * d[4] * d[23] * d[42] * d[67] + 2 * d[2] * d[18] * d[43] * d[67] + 2 * d[0] * d[20] * d[43] * d[67] - 4 * d[4] * d[22] * d[43] * d[67] - 2 * d[5] * d[18] * d[44] * d[67] + 2 * d[4] * d[21] * d[44] * d[67] + 2 * d[3] * d[22] * d[44] * d[67] - 2 * d[0] * d[23] * d[44] * d[67] - 2 * d[21] * d[38] * d[66] * d[67] - 2 * d[20] * d[39] * d[66] * d[67] + 2 * d[23] * d[40] * d[66] * d[67] + 2 * d[22] * d[41] * d[66] * d[67] + d[20] * d[36] * std::pow(d[67], 2) + d[18] * d[38] * std::pow(d[67], 2) - 2 * d[22] * d[40] * std::pow(d[67], 2) + 2 * d[8] * d[19] * d[36] * d[68] - 2 * d[7] * d[23] * d[36] * d[68] - 2 * d[5] * d[25] * d[36] * d[68] + 2 * d[1] * d[26] * d[36] * d[68] + 2 * d[8] * d[18] * d[37] * d[68] - 2 * d[6] * d[22] * d[37] * d[68] - 2 * d[4] * d[24] * d[37] * d[68] + 2 * d[0] * d[26] * d[37] * d[68] - 4 * d[8] * d[21] * d[39] * d[68] + 2 * d[7] * d[22] * d[39] * d[68] + 2 * d[6] * d[23] * d[39] * d[68] + 2 * d[5] * d[24] * d[39] * d[68] + 2 * d[4] * d[25] * d[39] * d[68] - 4 * d[3] * d[26] * d[39] * d[68] - 2 * d[6] * d[19] * d[40] * d[68] + 2 * d[7] * d[21] * d[40] * d[68] - 2 * d[1] * d[24] * d[40] * d[68] + 2 * d[3] * d[25] * d[40] * d[68] - 2 * d[7] * d[18] * d[41] * d[68] + 2 * d[6] * d[21] * d[41] * d[68] + 2 * d[3] * d[24] * d[41] * d[68] - 2 * d[0] * d[25] * d[41] * d[68] - 2 * d[4] * d[19] * d[42] * d[68] + 2 * d[5] * d[21] * d[42] * d[68] - 2 * d[1] * d[22] * d[42] * d[68] + 2 * d[3] * d[23] * d[42] * d[68] - 2 * d[5] * d[18] * d[43] * d[68] + 2 * d[4] * d[21] * d[43] * d[68] + 2 * d[3] * d[22] * d[43] * d[68] - 2 * d[0] * d[23] * d[43] * d[68] + 2 * d[1] * d[18] * d[44] * d[68] + 2 * d[0] * d[19] * d[44] * d[68] - 4 * d[3] * d[21] * d[44] * d[68] - 2 * d[22] * d[37] * d[66] * d[68] + 2 * d[23] * d[39] * d[66] * d[68] - 2 * d[19] * d[40] * d[66] * d[68] + 2 * d[21] * d[41] * d[66] * d[68] - 2 * d[23] * d[36] * d[67] * d[68] + 2 * d[22] * d[39] * d[67] * d[68] + 2 * d[21] * d[40] * d[67] * d[68] - 2 * d[18] * d[41] * d[67] * d[68] + d[19] * d[36] * std::pow(d[68], 2) + d[18] * d[37] * std::pow(d[68], 2) - 2 * d[21] * d[39] * std::pow(d[68], 2) - d[2] * d[19] * d[36] * d[73] - d[1] * d[20] * d[36] * d[73] + 2 * d[5] * d[23] * d[36] * d[73] - d[2] * d[18] * d[37] * d[73] - d[0] * d[20] * d[37] * d[73] + 2 * d[4] * d[22] * d[37] * d[73] - d[1] * d[18] * d[38] * d[73] - d[0] * d[19] * d[38] * d[73] + 2 * d[3] * d[21] * d[38] * d[73] + 2 * d[3] * d[20] * d[39] * d[73] + 2 * d[2] * d[21] * d[39] * d[73] - 2 * d[5] * d[22] * d[39] * d[73] - 2 * d[4] * d[23] * d[39] * d[73] + 2 * d[4] * d[19] * d[40] * d[73] - 2 * d[5] * d[21] * d[40] * d[73] + 2 * d[1] * d[22] * d[40] * d[73] - 2 * d[3] * d[23] * d[40] * d[73] + 2 * d[5] * d[18] * d[41] * d[73] - 2 * d[4] * d[21] * d[41] * d[73] - 2 * d[3] * d[22] * d[41] * d[73] + 2 * d[0] * d[23] * d[41] * d[73];
    coeffs[267] = 2 * d[6] * d[29] * d[37] * d[66] - 2 * d[8] * d[31] * d[37] * d[66] + 2 * d[2] * d[33] * d[37] * d[66] - 2 * d[4] * d[35] * d[37] * d[66] + 2 * d[6] * d[28] * d[38] * d[66] - 2 * d[7] * d[30] * d[38] * d[66] + 2 * d[1] * d[33] * d[38] * d[66] - 2 * d[3] * d[34] * d[38] * d[66] - 2 * d[7] * d[29] * d[39] * d[66] + 2 * d[8] * d[32] * d[39] * d[66] - 2 * d[2] * d[34] * d[39] * d[66] + 2 * d[5] * d[35] * d[39] * d[66] - 2 * d[8] * d[28] * d[40] * d[66] + 2 * d[7] * d[32] * d[40] * d[66] + 2 * d[5] * d[34] * d[40] * d[66] - 2 * d[1] * d[35] * d[40] * d[66] + 2 * d[8] * d[30] * d[41] * d[66] + 2 * d[7] * d[31] * d[41] * d[66] - 4 * d[6] * d[32] * d[41] * d[66] - 4 * d[5] * d[33] * d[41] * d[66] + 2 * d[4] * d[34] * d[41] * d[66] + 2 * d[3] * d[35] * d[41] * d[66] + 2 * d[2] * d[28] * d[42] * d[66] + 2 * d[1] * d[29] * d[42] * d[66] - 4 * d[5] * d[32] * d[42] * d[66] - 2 * d[3] * d[29] * d[43] * d[66] - 2 * d[2] * d[30] * d[43] * d[66] + 2 * d[5] * d[31] * d[43] * d[66] + 2 * d[4] * d[32] * d[43] * d[66] - 2 * d[4] * d[28] * d[44] * d[66] + 2 * d[5] * d[30] * d[44] * d[66] - 2 * d[1] * d[31] * d[44] * d[66] + 2 * d[3] * d[32] * d[44] * d[66] + d[29] * d[37] * std::pow(d[66], 2) + d[28] * d[38] * std::pow(d[66], 2) - 2 * d[32] * d[41] * std::pow(d[66], 2) + 2 * d[7] * d[29] * d[36] * d[67] - 2 * d[8] * d[32] * d[36] * d[67] + 2 * d[2] * d[34] * d[36] * d[67] - 2 * d[5] * d[35] * d[36] * d[67] + 2 * d[7] * d[27] * d[38] * d[67] - 2 * d[6] * d[30] * d[38] * d[67] - 2 * d[3] * d[33] * d[38] * d[67] + 2 * d[0] * d[34] * d[38] * d[67] - 2 * d[6] * d[29] * d[39] * d[67] + 2 * d[8] * d[31] * d[39] * d[67] - 2 * d[2] * d[33] * d[39] * d[67] + 2 * d[4] * d[35] * d[39] * d[67] + 2 * d[8] * d[30] * d[40] * d[67] - 4 * d[7] * d[31] * d[40] * d[67] + 2 * d[6] * d[32] * d[40] * d[67] + 2 * d[5] * d[33] * d[40] * d[67] - 4 * d[4] * d[34] * d[40] * d[67] + 2 * d[3] * d[35] * d[40] * d[67] - 2 * d[8] * d[27] * d[41] * d[67] + 2 * d[6] * d[31] * d[41] * d[67] + 2 * d[4] * d[33] * d[41] * d[67] - 2 * d[0] * d[35] * d[41] * d[67] - 2 * d[3] * d[29] * d[42] * d[67] - 2 * d[2] * d[30] * d[42] * d[67] + 2 * d[5] * d[31] * d[42] * d[67] + 2 * d[4] * d[32] * d[42] * d[67] + 2 * d[2] * d[27] * d[43] * d[67] + 2 * d[0] * d[29] * d[43] * d[67] - 4 * d[4] * d[31] * d[43] * d[67] - 2 * d[5] * d[27] * d[44] * d[67] + 2 * d[4] * d[30] * d[44] * d[67] + 2 * d[3] * d[31] * d[44] * d[67] - 2 * d[0] * d[32] * d[44] * d[67] - 2 * d[30] * d[38] * d[66] * d[67] - 2 * d[29] * d[39] * d[66] * d[67] + 2 * d[32] * d[40] * d[66] * d[67] + 2 * d[31] * d[41] * d[66] * d[67] + d[29] * d[36] * std::pow(d[67], 2) + d[27] * d[38] * std::pow(d[67], 2) - 2 * d[31] * d[40] * std::pow(d[67], 2) + 2 * d[8] * d[28] * d[36] * d[68] - 2 * d[7] * d[32] * d[36] * d[68] - 2 * d[5] * d[34] * d[36] * d[68] + 2 * d[1] * d[35] * d[36] * d[68] + 2 * d[8] * d[27] * d[37] * d[68] - 2 * d[6] * d[31] * d[37] * d[68] - 2 * d[4] * d[33] * d[37] * d[68] + 2 * d[0] * d[35] * d[37] * d[68] - 4 * d[8] * d[30] * d[39] * d[68] + 2 * d[7] * d[31] * d[39] * d[68] + 2 * d[6] * d[32] * d[39] * d[68] + 2 * d[5] * d[33] * d[39] * d[68] + 2 * d[4] * d[34] * d[39] * d[68] - 4 * d[3] * d[35] * d[39] * d[68] - 2 * d[6] * d[28] * d[40] * d[68] + 2 * d[7] * d[30] * d[40] * d[68] - 2 * d[1] * d[33] * d[40] * d[68] + 2 * d[3] * d[34] * d[40] * d[68] - 2 * d[7] * d[27] * d[41] * d[68] + 2 * d[6] * d[30] * d[41] * d[68] + 2 * d[3] * d[33] * d[41] * d[68] - 2 * d[0] * d[34] * d[41] * d[68] - 2 * d[4] * d[28] * d[42] * d[68] + 2 * d[5] * d[30] * d[42] * d[68] - 2 * d[1] * d[31] * d[42] * d[68] + 2 * d[3] * d[32] * d[42] * d[68] - 2 * d[5] * d[27] * d[43] * d[68] + 2 * d[4] * d[30] * d[43] * d[68] + 2 * d[3] * d[31] * d[43] * d[68] - 2 * d[0] * d[32] * d[43] * d[68] + 2 * d[1] * d[27] * d[44] * d[68] + 2 * d[0] * d[28] * d[44] * d[68] - 4 * d[3] * d[30] * d[44] * d[68] - 2 * d[31] * d[37] * d[66] * d[68] + 2 * d[32] * d[39] * d[66] * d[68] - 2 * d[28] * d[40] * d[66] * d[68] + 2 * d[30] * d[41] * d[66] * d[68] - 2 * d[32] * d[36] * d[67] * d[68] + 2 * d[31] * d[39] * d[67] * d[68] + 2 * d[30] * d[40] * d[67] * d[68] - 2 * d[27] * d[41] * d[67] * d[68] + d[28] * d[36] * std::pow(d[68], 2) + d[27] * d[37] * std::pow(d[68], 2) - 2 * d[30] * d[39] * std::pow(d[68], 2) - d[2] * d[28] * d[36] * d[73] - d[1] * d[29] * d[36] * d[73] + 2 * d[5] * d[32] * d[36] * d[73] - d[2] * d[27] * d[37] * d[73] - d[0] * d[29] * d[37] * d[73] + 2 * d[4] * d[31] * d[37] * d[73] - d[1] * d[27] * d[38] * d[73] - d[0] * d[28] * d[38] * d[73] + 2 * d[3] * d[30] * d[38] * d[73] + 2 * d[3] * d[29] * d[39] * d[73] + 2 * d[2] * d[30] * d[39] * d[73] - 2 * d[5] * d[31] * d[39] * d[73] - 2 * d[4] * d[32] * d[39] * d[73] + 2 * d[4] * d[28] * d[40] * d[73] - 2 * d[5] * d[30] * d[40] * d[73] + 2 * d[1] * d[31] * d[40] * d[73] - 2 * d[3] * d[32] * d[40] * d[73] + 2 * d[5] * d[27] * d[41] * d[73] - 2 * d[4] * d[30] * d[41] * d[73] - 2 * d[3] * d[31] * d[41] * d[73] + 2 * d[0] * d[32] * d[41] * d[73];
    coeffs[268] = 2 * d[6] * d[37] * d[38] * d[66] - 2 * d[7] * d[38] * d[39] * d[66] - 2 * d[8] * d[37] * d[40] * d[66] + 2 * d[8] * d[39] * d[41] * d[66] + 2 * d[7] * d[40] * d[41] * d[66] - 2 * d[6] * std::pow(d[41], 2) * d[66] + 2 * d[2] * d[37] * d[42] * d[66] + 2 * d[1] * d[38] * d[42] * d[66] - 4 * d[5] * d[41] * d[42] * d[66] - 2 * d[3] * d[38] * d[43] * d[66] - 2 * d[2] * d[39] * d[43] * d[66] + 2 * d[5] * d[40] * d[43] * d[66] + 2 * d[4] * d[41] * d[43] * d[66] - 2 * d[4] * d[37] * d[44] * d[66] + 2 * d[5] * d[39] * d[44] * d[66] - 2 * d[1] * d[40] * d[44] * d[66] + 2 * d[3] * d[41] * d[44] * d[66] + d[37] * d[38] * std::pow(d[66], 2) - std::pow(d[41], 2) * std::pow(d[66], 2) + 2 * d[7] * d[36] * d[38] * d[67] - 2 * d[6] * d[38] * d[39] * d[67] + 2 * d[8] * d[39] * d[40] * d[67] - 2 * d[7] * std::pow(d[40], 2) * d[67] - 2 * d[8] * d[36] * d[41] * d[67] + 2 * d[6] * d[40] * d[41] * d[67] - 2 * d[3] * d[38] * d[42] * d[67] - 2 * d[2] * d[39] * d[42] * d[67] + 2 * d[5] * d[40] * d[42] * d[67] + 2 * d[4] * d[41] * d[42] * d[67] + 2 * d[2] * d[36] * d[43] * d[67] + 2 * d[0] * d[38] * d[43] * d[67] - 4 * d[4] * d[40] * d[43] * d[67] - 2 * d[5] * d[36] * d[44] * d[67] + 2 * d[4] * d[39] * d[44] * d[67] + 2 * d[3] * d[40] * d[44] * d[67] - 2 * d[0] * d[41] * d[44] * d[67] - 2 * d[38] * d[39] * d[66] * d[67] + 2 * d[40] * d[41] * d[66] * d[67] + d[36] * d[38] * std::pow(d[67], 2) - std::pow(d[40], 2) * std::pow(d[67], 2) + 2 * d[8] * d[36] * d[37] * d[68] - 2 * d[8] * std::pow(d[39], 2) * d[68] - 2 * d[6] * d[37] * d[40] * d[68] + 2 * d[7] * d[39] * d[40] * d[68] - 2 * d[7] * d[36] * d[41] * d[68] + 2 * d[6] * d[39] * d[41] * d[68] - 2 * d[4] * d[37] * d[42] * d[68] + 2 * d[5] * d[39] * d[42] * d[68] - 2 * d[1] * d[40] * d[42] * d[68] + 2 * d[3] * d[41] * d[42] * d[68] - 2 * d[5] * d[36] * d[43] * d[68] + 2 * d[4] * d[39] * d[43] * d[68] + 2 * d[3] * d[40] * d[43] * d[68] - 2 * d[0] * d[41] * d[43] * d[68] + 2 * d[1] * d[36] * d[44] * d[68] + 2 * d[0] * d[37] * d[44] * d[68] - 4 * d[3] * d[39] * d[44] * d[68] - 2 * d[37] * d[40] * d[66] * d[68] + 2 * d[39] * d[41] * d[66] * d[68] + 2 * d[39] * d[40] * d[67] * d[68] - 2 * d[36] * d[41] * d[67] * d[68] + d[36] * d[37] * std::pow(d[68], 2) - std::pow(d[39], 2) * std::pow(d[68], 2) - d[2] * d[36] * d[37] * d[73] - d[1] * d[36] * d[38] * d[73] - d[0] * d[37] * d[38] * d[73] + 2 * d[3] * d[38] * d[39] * d[73] + d[2] * std::pow(d[39], 2) * d[73] + 2 * d[4] * d[37] * d[40] * d[73] - 2 * d[5] * d[39] * d[40] * d[73] + d[1] * std::pow(d[40], 2) * d[73] + 2 * d[5] * d[36] * d[41] * d[73] - 2 * d[4] * d[39] * d[41] * d[73] - 2 * d[3] * d[40] * d[41] * d[73] + d[0] * std::pow(d[41], 2) * d[73];
    coeffs[269] = 2 * d[6] * d[11] * d[46] * d[66] - 2 * d[8] * d[13] * d[46] * d[66] + 2 * d[2] * d[15] * d[46] * d[66] - 2 * d[4] * d[17] * d[46] * d[66] + 2 * d[6] * d[10] * d[47] * d[66] - 2 * d[7] * d[12] * d[47] * d[66] + 2 * d[1] * d[15] * d[47] * d[66] - 2 * d[3] * d[16] * d[47] * d[66] - 2 * d[7] * d[11] * d[48] * d[66] + 2 * d[8] * d[14] * d[48] * d[66] - 2 * d[2] * d[16] * d[48] * d[66] + 2 * d[5] * d[17] * d[48] * d[66] - 2 * d[8] * d[10] * d[49] * d[66] + 2 * d[7] * d[14] * d[49] * d[66] + 2 * d[5] * d[16] * d[49] * d[66] - 2 * d[1] * d[17] * d[49] * d[66] + 2 * d[8] * d[12] * d[50] * d[66] + 2 * d[7] * d[13] * d[50] * d[66] - 4 * d[6] * d[14] * d[50] * d[66] - 4 * d[5] * d[15] * d[50] * d[66] + 2 * d[4] * d[16] * d[50] * d[66] + 2 * d[3] * d[17] * d[50] * d[66] + 2 * d[2] * d[10] * d[51] * d[66] + 2 * d[1] * d[11] * d[51] * d[66] - 4 * d[5] * d[14] * d[51] * d[66] - 2 * d[3] * d[11] * d[52] * d[66] - 2 * d[2] * d[12] * d[52] * d[66] + 2 * d[5] * d[13] * d[52] * d[66] + 2 * d[4] * d[14] * d[52] * d[66] - 2 * d[4] * d[10] * d[53] * d[66] + 2 * d[5] * d[12] * d[53] * d[66] - 2 * d[1] * d[13] * d[53] * d[66] + 2 * d[3] * d[14] * d[53] * d[66] + d[11] * d[46] * std::pow(d[66], 2) + d[10] * d[47] * std::pow(d[66], 2) - 2 * d[14] * d[50] * std::pow(d[66], 2) + 2 * d[7] * d[11] * d[45] * d[67] - 2 * d[8] * d[14] * d[45] * d[67] + 2 * d[2] * d[16] * d[45] * d[67] - 2 * d[5] * d[17] * d[45] * d[67] + 2 * d[7] * d[9] * d[47] * d[67] - 2 * d[6] * d[12] * d[47] * d[67] - 2 * d[3] * d[15] * d[47] * d[67] + 2 * d[0] * d[16] * d[47] * d[67] - 2 * d[6] * d[11] * d[48] * d[67] + 2 * d[8] * d[13] * d[48] * d[67] - 2 * d[2] * d[15] * d[48] * d[67] + 2 * d[4] * d[17] * d[48] * d[67] + 2 * d[8] * d[12] * d[49] * d[67] - 4 * d[7] * d[13] * d[49] * d[67] + 2 * d[6] * d[14] * d[49] * d[67] + 2 * d[5] * d[15] * d[49] * d[67] - 4 * d[4] * d[16] * d[49] * d[67] + 2 * d[3] * d[17] * d[49] * d[67] - 2 * d[8] * d[9] * d[50] * d[67] + 2 * d[6] * d[13] * d[50] * d[67] + 2 * d[4] * d[15] * d[50] * d[67] - 2 * d[0] * d[17] * d[50] * d[67] - 2 * d[3] * d[11] * d[51] * d[67] - 2 * d[2] * d[12] * d[51] * d[67] + 2 * d[5] * d[13] * d[51] * d[67] + 2 * d[4] * d[14] * d[51] * d[67] + 2 * d[2] * d[9] * d[52] * d[67] + 2 * d[0] * d[11] * d[52] * d[67] - 4 * d[4] * d[13] * d[52] * d[67] - 2 * d[5] * d[9] * d[53] * d[67] + 2 * d[4] * d[12] * d[53] * d[67] + 2 * d[3] * d[13] * d[53] * d[67] - 2 * d[0] * d[14] * d[53] * d[67] - 2 * d[12] * d[47] * d[66] * d[67] - 2 * d[11] * d[48] * d[66] * d[67] + 2 * d[14] * d[49] * d[66] * d[67] + 2 * d[13] * d[50] * d[66] * d[67] + d[11] * d[45] * std::pow(d[67], 2) + d[9] * d[47] * std::pow(d[67], 2) - 2 * d[13] * d[49] * std::pow(d[67], 2) + 2 * d[8] * d[10] * d[45] * d[68] - 2 * d[7] * d[14] * d[45] * d[68] - 2 * d[5] * d[16] * d[45] * d[68] + 2 * d[1] * d[17] * d[45] * d[68] + 2 * d[8] * d[9] * d[46] * d[68] - 2 * d[6] * d[13] * d[46] * d[68] - 2 * d[4] * d[15] * d[46] * d[68] + 2 * d[0] * d[17] * d[46] * d[68] - 4 * d[8] * d[12] * d[48] * d[68] + 2 * d[7] * d[13] * d[48] * d[68] + 2 * d[6] * d[14] * d[48] * d[68] + 2 * d[5] * d[15] * d[48] * d[68] + 2 * d[4] * d[16] * d[48] * d[68] - 4 * d[3] * d[17] * d[48] * d[68] - 2 * d[6] * d[10] * d[49] * d[68] + 2 * d[7] * d[12] * d[49] * d[68] - 2 * d[1] * d[15] * d[49] * d[68] + 2 * d[3] * d[16] * d[49] * d[68] - 2 * d[7] * d[9] * d[50] * d[68] + 2 * d[6] * d[12] * d[50] * d[68] + 2 * d[3] * d[15] * d[50] * d[68] - 2 * d[0] * d[16] * d[50] * d[68] - 2 * d[4] * d[10] * d[51] * d[68] + 2 * d[5] * d[12] * d[51] * d[68] - 2 * d[1] * d[13] * d[51] * d[68] + 2 * d[3] * d[14] * d[51] * d[68] - 2 * d[5] * d[9] * d[52] * d[68] + 2 * d[4] * d[12] * d[52] * d[68] + 2 * d[3] * d[13] * d[52] * d[68] - 2 * d[0] * d[14] * d[52] * d[68] + 2 * d[1] * d[9] * d[53] * d[68] + 2 * d[0] * d[10] * d[53] * d[68] - 4 * d[3] * d[12] * d[53] * d[68] - 2 * d[13] * d[46] * d[66] * d[68] + 2 * d[14] * d[48] * d[66] * d[68] - 2 * d[10] * d[49] * d[66] * d[68] + 2 * d[12] * d[50] * d[66] * d[68] - 2 * d[14] * d[45] * d[67] * d[68] + 2 * d[13] * d[48] * d[67] * d[68] + 2 * d[12] * d[49] * d[67] * d[68] - 2 * d[9] * d[50] * d[67] * d[68] + d[10] * d[45] * std::pow(d[68], 2) + d[9] * d[46] * std::pow(d[68], 2) - 2 * d[12] * d[48] * std::pow(d[68], 2) - d[2] * d[10] * d[45] * d[73] - d[1] * d[11] * d[45] * d[73] + 2 * d[5] * d[14] * d[45] * d[73] - d[2] * d[9] * d[46] * d[73] - d[0] * d[11] * d[46] * d[73] + 2 * d[4] * d[13] * d[46] * d[73] - d[1] * d[9] * d[47] * d[73] - d[0] * d[10] * d[47] * d[73] + 2 * d[3] * d[12] * d[47] * d[73] + 2 * d[3] * d[11] * d[48] * d[73] + 2 * d[2] * d[12] * d[48] * d[73] - 2 * d[5] * d[13] * d[48] * d[73] - 2 * d[4] * d[14] * d[48] * d[73] + 2 * d[4] * d[10] * d[49] * d[73] - 2 * d[5] * d[12] * d[49] * d[73] + 2 * d[1] * d[13] * d[49] * d[73] - 2 * d[3] * d[14] * d[49] * d[73] + 2 * d[5] * d[9] * d[50] * d[73] - 2 * d[4] * d[12] * d[50] * d[73] - 2 * d[3] * d[13] * d[50] * d[73] + 2 * d[0] * d[14] * d[50] * d[73];
    coeffs[270] = 2 * d[6] * d[20] * d[46] * d[66] - 2 * d[8] * d[22] * d[46] * d[66] + 2 * d[2] * d[24] * d[46] * d[66] - 2 * d[4] * d[26] * d[46] * d[66] + 2 * d[6] * d[19] * d[47] * d[66] - 2 * d[7] * d[21] * d[47] * d[66] + 2 * d[1] * d[24] * d[47] * d[66] - 2 * d[3] * d[25] * d[47] * d[66] - 2 * d[7] * d[20] * d[48] * d[66] + 2 * d[8] * d[23] * d[48] * d[66] - 2 * d[2] * d[25] * d[48] * d[66] + 2 * d[5] * d[26] * d[48] * d[66] - 2 * d[8] * d[19] * d[49] * d[66] + 2 * d[7] * d[23] * d[49] * d[66] + 2 * d[5] * d[25] * d[49] * d[66] - 2 * d[1] * d[26] * d[49] * d[66] + 2 * d[8] * d[21] * d[50] * d[66] + 2 * d[7] * d[22] * d[50] * d[66] - 4 * d[6] * d[23] * d[50] * d[66] - 4 * d[5] * d[24] * d[50] * d[66] + 2 * d[4] * d[25] * d[50] * d[66] + 2 * d[3] * d[26] * d[50] * d[66] + 2 * d[2] * d[19] * d[51] * d[66] + 2 * d[1] * d[20] * d[51] * d[66] - 4 * d[5] * d[23] * d[51] * d[66] - 2 * d[3] * d[20] * d[52] * d[66] - 2 * d[2] * d[21] * d[52] * d[66] + 2 * d[5] * d[22] * d[52] * d[66] + 2 * d[4] * d[23] * d[52] * d[66] - 2 * d[4] * d[19] * d[53] * d[66] + 2 * d[5] * d[21] * d[53] * d[66] - 2 * d[1] * d[22] * d[53] * d[66] + 2 * d[3] * d[23] * d[53] * d[66] + d[20] * d[46] * std::pow(d[66], 2) + d[19] * d[47] * std::pow(d[66], 2) - 2 * d[23] * d[50] * std::pow(d[66], 2) + 2 * d[7] * d[20] * d[45] * d[67] - 2 * d[8] * d[23] * d[45] * d[67] + 2 * d[2] * d[25] * d[45] * d[67] - 2 * d[5] * d[26] * d[45] * d[67] + 2 * d[7] * d[18] * d[47] * d[67] - 2 * d[6] * d[21] * d[47] * d[67] - 2 * d[3] * d[24] * d[47] * d[67] + 2 * d[0] * d[25] * d[47] * d[67] - 2 * d[6] * d[20] * d[48] * d[67] + 2 * d[8] * d[22] * d[48] * d[67] - 2 * d[2] * d[24] * d[48] * d[67] + 2 * d[4] * d[26] * d[48] * d[67] + 2 * d[8] * d[21] * d[49] * d[67] - 4 * d[7] * d[22] * d[49] * d[67] + 2 * d[6] * d[23] * d[49] * d[67] + 2 * d[5] * d[24] * d[49] * d[67] - 4 * d[4] * d[25] * d[49] * d[67] + 2 * d[3] * d[26] * d[49] * d[67] - 2 * d[8] * d[18] * d[50] * d[67] + 2 * d[6] * d[22] * d[50] * d[67] + 2 * d[4] * d[24] * d[50] * d[67] - 2 * d[0] * d[26] * d[50] * d[67] - 2 * d[3] * d[20] * d[51] * d[67] - 2 * d[2] * d[21] * d[51] * d[67] + 2 * d[5] * d[22] * d[51] * d[67] + 2 * d[4] * d[23] * d[51] * d[67] + 2 * d[2] * d[18] * d[52] * d[67] + 2 * d[0] * d[20] * d[52] * d[67] - 4 * d[4] * d[22] * d[52] * d[67] - 2 * d[5] * d[18] * d[53] * d[67] + 2 * d[4] * d[21] * d[53] * d[67] + 2 * d[3] * d[22] * d[53] * d[67] - 2 * d[0] * d[23] * d[53] * d[67] - 2 * d[21] * d[47] * d[66] * d[67] - 2 * d[20] * d[48] * d[66] * d[67] + 2 * d[23] * d[49] * d[66] * d[67] + 2 * d[22] * d[50] * d[66] * d[67] + d[20] * d[45] * std::pow(d[67], 2) + d[18] * d[47] * std::pow(d[67], 2) - 2 * d[22] * d[49] * std::pow(d[67], 2) + 2 * d[8] * d[19] * d[45] * d[68] - 2 * d[7] * d[23] * d[45] * d[68] - 2 * d[5] * d[25] * d[45] * d[68] + 2 * d[1] * d[26] * d[45] * d[68] + 2 * d[8] * d[18] * d[46] * d[68] - 2 * d[6] * d[22] * d[46] * d[68] - 2 * d[4] * d[24] * d[46] * d[68] + 2 * d[0] * d[26] * d[46] * d[68] - 4 * d[8] * d[21] * d[48] * d[68] + 2 * d[7] * d[22] * d[48] * d[68] + 2 * d[6] * d[23] * d[48] * d[68] + 2 * d[5] * d[24] * d[48] * d[68] + 2 * d[4] * d[25] * d[48] * d[68] - 4 * d[3] * d[26] * d[48] * d[68] - 2 * d[6] * d[19] * d[49] * d[68] + 2 * d[7] * d[21] * d[49] * d[68] - 2 * d[1] * d[24] * d[49] * d[68] + 2 * d[3] * d[25] * d[49] * d[68] - 2 * d[7] * d[18] * d[50] * d[68] + 2 * d[6] * d[21] * d[50] * d[68] + 2 * d[3] * d[24] * d[50] * d[68] - 2 * d[0] * d[25] * d[50] * d[68] - 2 * d[4] * d[19] * d[51] * d[68] + 2 * d[5] * d[21] * d[51] * d[68] - 2 * d[1] * d[22] * d[51] * d[68] + 2 * d[3] * d[23] * d[51] * d[68] - 2 * d[5] * d[18] * d[52] * d[68] + 2 * d[4] * d[21] * d[52] * d[68] + 2 * d[3] * d[22] * d[52] * d[68] - 2 * d[0] * d[23] * d[52] * d[68] + 2 * d[1] * d[18] * d[53] * d[68] + 2 * d[0] * d[19] * d[53] * d[68] - 4 * d[3] * d[21] * d[53] * d[68] - 2 * d[22] * d[46] * d[66] * d[68] + 2 * d[23] * d[48] * d[66] * d[68] - 2 * d[19] * d[49] * d[66] * d[68] + 2 * d[21] * d[50] * d[66] * d[68] - 2 * d[23] * d[45] * d[67] * d[68] + 2 * d[22] * d[48] * d[67] * d[68] + 2 * d[21] * d[49] * d[67] * d[68] - 2 * d[18] * d[50] * d[67] * d[68] + d[19] * d[45] * std::pow(d[68], 2) + d[18] * d[46] * std::pow(d[68], 2) - 2 * d[21] * d[48] * std::pow(d[68], 2) - d[2] * d[19] * d[45] * d[73] - d[1] * d[20] * d[45] * d[73] + 2 * d[5] * d[23] * d[45] * d[73] - d[2] * d[18] * d[46] * d[73] - d[0] * d[20] * d[46] * d[73] + 2 * d[4] * d[22] * d[46] * d[73] - d[1] * d[18] * d[47] * d[73] - d[0] * d[19] * d[47] * d[73] + 2 * d[3] * d[21] * d[47] * d[73] + 2 * d[3] * d[20] * d[48] * d[73] + 2 * d[2] * d[21] * d[48] * d[73] - 2 * d[5] * d[22] * d[48] * d[73] - 2 * d[4] * d[23] * d[48] * d[73] + 2 * d[4] * d[19] * d[49] * d[73] - 2 * d[5] * d[21] * d[49] * d[73] + 2 * d[1] * d[22] * d[49] * d[73] - 2 * d[3] * d[23] * d[49] * d[73] + 2 * d[5] * d[18] * d[50] * d[73] - 2 * d[4] * d[21] * d[50] * d[73] - 2 * d[3] * d[22] * d[50] * d[73] + 2 * d[0] * d[23] * d[50] * d[73];
    coeffs[271] = 2 * d[6] * d[29] * d[46] * d[66] - 2 * d[8] * d[31] * d[46] * d[66] + 2 * d[2] * d[33] * d[46] * d[66] - 2 * d[4] * d[35] * d[46] * d[66] + 2 * d[6] * d[28] * d[47] * d[66] - 2 * d[7] * d[30] * d[47] * d[66] + 2 * d[1] * d[33] * d[47] * d[66] - 2 * d[3] * d[34] * d[47] * d[66] - 2 * d[7] * d[29] * d[48] * d[66] + 2 * d[8] * d[32] * d[48] * d[66] - 2 * d[2] * d[34] * d[48] * d[66] + 2 * d[5] * d[35] * d[48] * d[66] - 2 * d[8] * d[28] * d[49] * d[66] + 2 * d[7] * d[32] * d[49] * d[66] + 2 * d[5] * d[34] * d[49] * d[66] - 2 * d[1] * d[35] * d[49] * d[66] + 2 * d[8] * d[30] * d[50] * d[66] + 2 * d[7] * d[31] * d[50] * d[66] - 4 * d[6] * d[32] * d[50] * d[66] - 4 * d[5] * d[33] * d[50] * d[66] + 2 * d[4] * d[34] * d[50] * d[66] + 2 * d[3] * d[35] * d[50] * d[66] + 2 * d[2] * d[28] * d[51] * d[66] + 2 * d[1] * d[29] * d[51] * d[66] - 4 * d[5] * d[32] * d[51] * d[66] - 2 * d[3] * d[29] * d[52] * d[66] - 2 * d[2] * d[30] * d[52] * d[66] + 2 * d[5] * d[31] * d[52] * d[66] + 2 * d[4] * d[32] * d[52] * d[66] - 2 * d[4] * d[28] * d[53] * d[66] + 2 * d[5] * d[30] * d[53] * d[66] - 2 * d[1] * d[31] * d[53] * d[66] + 2 * d[3] * d[32] * d[53] * d[66] + d[29] * d[46] * std::pow(d[66], 2) + d[28] * d[47] * std::pow(d[66], 2) - 2 * d[32] * d[50] * std::pow(d[66], 2) + 2 * d[7] * d[29] * d[45] * d[67] - 2 * d[8] * d[32] * d[45] * d[67] + 2 * d[2] * d[34] * d[45] * d[67] - 2 * d[5] * d[35] * d[45] * d[67] + 2 * d[7] * d[27] * d[47] * d[67] - 2 * d[6] * d[30] * d[47] * d[67] - 2 * d[3] * d[33] * d[47] * d[67] + 2 * d[0] * d[34] * d[47] * d[67] - 2 * d[6] * d[29] * d[48] * d[67] + 2 * d[8] * d[31] * d[48] * d[67] - 2 * d[2] * d[33] * d[48] * d[67] + 2 * d[4] * d[35] * d[48] * d[67] + 2 * d[8] * d[30] * d[49] * d[67] - 4 * d[7] * d[31] * d[49] * d[67] + 2 * d[6] * d[32] * d[49] * d[67] + 2 * d[5] * d[33] * d[49] * d[67] - 4 * d[4] * d[34] * d[49] * d[67] + 2 * d[3] * d[35] * d[49] * d[67] - 2 * d[8] * d[27] * d[50] * d[67] + 2 * d[6] * d[31] * d[50] * d[67] + 2 * d[4] * d[33] * d[50] * d[67] - 2 * d[0] * d[35] * d[50] * d[67] - 2 * d[3] * d[29] * d[51] * d[67] - 2 * d[2] * d[30] * d[51] * d[67] + 2 * d[5] * d[31] * d[51] * d[67] + 2 * d[4] * d[32] * d[51] * d[67] + 2 * d[2] * d[27] * d[52] * d[67] + 2 * d[0] * d[29] * d[52] * d[67] - 4 * d[4] * d[31] * d[52] * d[67] - 2 * d[5] * d[27] * d[53] * d[67] + 2 * d[4] * d[30] * d[53] * d[67] + 2 * d[3] * d[31] * d[53] * d[67] - 2 * d[0] * d[32] * d[53] * d[67] - 2 * d[30] * d[47] * d[66] * d[67] - 2 * d[29] * d[48] * d[66] * d[67] + 2 * d[32] * d[49] * d[66] * d[67] + 2 * d[31] * d[50] * d[66] * d[67] + d[29] * d[45] * std::pow(d[67], 2) + d[27] * d[47] * std::pow(d[67], 2) - 2 * d[31] * d[49] * std::pow(d[67], 2) + 2 * d[8] * d[28] * d[45] * d[68] - 2 * d[7] * d[32] * d[45] * d[68] - 2 * d[5] * d[34] * d[45] * d[68] + 2 * d[1] * d[35] * d[45] * d[68] + 2 * d[8] * d[27] * d[46] * d[68] - 2 * d[6] * d[31] * d[46] * d[68] - 2 * d[4] * d[33] * d[46] * d[68] + 2 * d[0] * d[35] * d[46] * d[68] - 4 * d[8] * d[30] * d[48] * d[68] + 2 * d[7] * d[31] * d[48] * d[68] + 2 * d[6] * d[32] * d[48] * d[68] + 2 * d[5] * d[33] * d[48] * d[68] + 2 * d[4] * d[34] * d[48] * d[68] - 4 * d[3] * d[35] * d[48] * d[68] - 2 * d[6] * d[28] * d[49] * d[68] + 2 * d[7] * d[30] * d[49] * d[68] - 2 * d[1] * d[33] * d[49] * d[68] + 2 * d[3] * d[34] * d[49] * d[68] - 2 * d[7] * d[27] * d[50] * d[68] + 2 * d[6] * d[30] * d[50] * d[68] + 2 * d[3] * d[33] * d[50] * d[68] - 2 * d[0] * d[34] * d[50] * d[68] - 2 * d[4] * d[28] * d[51] * d[68] + 2 * d[5] * d[30] * d[51] * d[68] - 2 * d[1] * d[31] * d[51] * d[68] + 2 * d[3] * d[32] * d[51] * d[68] - 2 * d[5] * d[27] * d[52] * d[68] + 2 * d[4] * d[30] * d[52] * d[68] + 2 * d[3] * d[31] * d[52] * d[68] - 2 * d[0] * d[32] * d[52] * d[68] + 2 * d[1] * d[27] * d[53] * d[68] + 2 * d[0] * d[28] * d[53] * d[68] - 4 * d[3] * d[30] * d[53] * d[68] - 2 * d[31] * d[46] * d[66] * d[68] + 2 * d[32] * d[48] * d[66] * d[68] - 2 * d[28] * d[49] * d[66] * d[68] + 2 * d[30] * d[50] * d[66] * d[68] - 2 * d[32] * d[45] * d[67] * d[68] + 2 * d[31] * d[48] * d[67] * d[68] + 2 * d[30] * d[49] * d[67] * d[68] - 2 * d[27] * d[50] * d[67] * d[68] + d[28] * d[45] * std::pow(d[68], 2) + d[27] * d[46] * std::pow(d[68], 2) - 2 * d[30] * d[48] * std::pow(d[68], 2) - d[2] * d[28] * d[45] * d[73] - d[1] * d[29] * d[45] * d[73] + 2 * d[5] * d[32] * d[45] * d[73] - d[2] * d[27] * d[46] * d[73] - d[0] * d[29] * d[46] * d[73] + 2 * d[4] * d[31] * d[46] * d[73] - d[1] * d[27] * d[47] * d[73] - d[0] * d[28] * d[47] * d[73] + 2 * d[3] * d[30] * d[47] * d[73] + 2 * d[3] * d[29] * d[48] * d[73] + 2 * d[2] * d[30] * d[48] * d[73] - 2 * d[5] * d[31] * d[48] * d[73] - 2 * d[4] * d[32] * d[48] * d[73] + 2 * d[4] * d[28] * d[49] * d[73] - 2 * d[5] * d[30] * d[49] * d[73] + 2 * d[1] * d[31] * d[49] * d[73] - 2 * d[3] * d[32] * d[49] * d[73] + 2 * d[5] * d[27] * d[50] * d[73] - 2 * d[4] * d[30] * d[50] * d[73] - 2 * d[3] * d[31] * d[50] * d[73] + 2 * d[0] * d[32] * d[50] * d[73];
    coeffs[272] = 2 * d[6] * d[38] * d[46] * d[66] - 2 * d[8] * d[40] * d[46] * d[66] + 2 * d[2] * d[42] * d[46] * d[66] - 2 * d[4] * d[44] * d[46] * d[66] + 2 * d[6] * d[37] * d[47] * d[66] - 2 * d[7] * d[39] * d[47] * d[66] + 2 * d[1] * d[42] * d[47] * d[66] - 2 * d[3] * d[43] * d[47] * d[66] - 2 * d[7] * d[38] * d[48] * d[66] + 2 * d[8] * d[41] * d[48] * d[66] - 2 * d[2] * d[43] * d[48] * d[66] + 2 * d[5] * d[44] * d[48] * d[66] - 2 * d[8] * d[37] * d[49] * d[66] + 2 * d[7] * d[41] * d[49] * d[66] + 2 * d[5] * d[43] * d[49] * d[66] - 2 * d[1] * d[44] * d[49] * d[66] + 2 * d[8] * d[39] * d[50] * d[66] + 2 * d[7] * d[40] * d[50] * d[66] - 4 * d[6] * d[41] * d[50] * d[66] - 4 * d[5] * d[42] * d[50] * d[66] + 2 * d[4] * d[43] * d[50] * d[66] + 2 * d[3] * d[44] * d[50] * d[66] + 2 * d[2] * d[37] * d[51] * d[66] + 2 * d[1] * d[38] * d[51] * d[66] - 4 * d[5] * d[41] * d[51] * d[66] - 2 * d[3] * d[38] * d[52] * d[66] - 2 * d[2] * d[39] * d[52] * d[66] + 2 * d[5] * d[40] * d[52] * d[66] + 2 * d[4] * d[41] * d[52] * d[66] - 2 * d[4] * d[37] * d[53] * d[66] + 2 * d[5] * d[39] * d[53] * d[66] - 2 * d[1] * d[40] * d[53] * d[66] + 2 * d[3] * d[41] * d[53] * d[66] + d[38] * d[46] * std::pow(d[66], 2) + d[37] * d[47] * std::pow(d[66], 2) - 2 * d[41] * d[50] * std::pow(d[66], 2) + 2 * d[7] * d[38] * d[45] * d[67] - 2 * d[8] * d[41] * d[45] * d[67] + 2 * d[2] * d[43] * d[45] * d[67] - 2 * d[5] * d[44] * d[45] * d[67] + 2 * d[7] * d[36] * d[47] * d[67] - 2 * d[6] * d[39] * d[47] * d[67] - 2 * d[3] * d[42] * d[47] * d[67] + 2 * d[0] * d[43] * d[47] * d[67] - 2 * d[6] * d[38] * d[48] * d[67] + 2 * d[8] * d[40] * d[48] * d[67] - 2 * d[2] * d[42] * d[48] * d[67] + 2 * d[4] * d[44] * d[48] * d[67] + 2 * d[8] * d[39] * d[49] * d[67] - 4 * d[7] * d[40] * d[49] * d[67] + 2 * d[6] * d[41] * d[49] * d[67] + 2 * d[5] * d[42] * d[49] * d[67] - 4 * d[4] * d[43] * d[49] * d[67] + 2 * d[3] * d[44] * d[49] * d[67] - 2 * d[8] * d[36] * d[50] * d[67] + 2 * d[6] * d[40] * d[50] * d[67] + 2 * d[4] * d[42] * d[50] * d[67] - 2 * d[0] * d[44] * d[50] * d[67] - 2 * d[3] * d[38] * d[51] * d[67] - 2 * d[2] * d[39] * d[51] * d[67] + 2 * d[5] * d[40] * d[51] * d[67] + 2 * d[4] * d[41] * d[51] * d[67] + 2 * d[2] * d[36] * d[52] * d[67] + 2 * d[0] * d[38] * d[52] * d[67] - 4 * d[4] * d[40] * d[52] * d[67] - 2 * d[5] * d[36] * d[53] * d[67] + 2 * d[4] * d[39] * d[53] * d[67] + 2 * d[3] * d[40] * d[53] * d[67] - 2 * d[0] * d[41] * d[53] * d[67] - 2 * d[39] * d[47] * d[66] * d[67] - 2 * d[38] * d[48] * d[66] * d[67] + 2 * d[41] * d[49] * d[66] * d[67] + 2 * d[40] * d[50] * d[66] * d[67] + d[38] * d[45] * std::pow(d[67], 2) + d[36] * d[47] * std::pow(d[67], 2) - 2 * d[40] * d[49] * std::pow(d[67], 2) + 2 * d[8] * d[37] * d[45] * d[68] - 2 * d[7] * d[41] * d[45] * d[68] - 2 * d[5] * d[43] * d[45] * d[68] + 2 * d[1] * d[44] * d[45] * d[68] + 2 * d[8] * d[36] * d[46] * d[68] - 2 * d[6] * d[40] * d[46] * d[68] - 2 * d[4] * d[42] * d[46] * d[68] + 2 * d[0] * d[44] * d[46] * d[68] - 4 * d[8] * d[39] * d[48] * d[68] + 2 * d[7] * d[40] * d[48] * d[68] + 2 * d[6] * d[41] * d[48] * d[68] + 2 * d[5] * d[42] * d[48] * d[68] + 2 * d[4] * d[43] * d[48] * d[68] - 4 * d[3] * d[44] * d[48] * d[68] - 2 * d[6] * d[37] * d[49] * d[68] + 2 * d[7] * d[39] * d[49] * d[68] - 2 * d[1] * d[42] * d[49] * d[68] + 2 * d[3] * d[43] * d[49] * d[68] - 2 * d[7] * d[36] * d[50] * d[68] + 2 * d[6] * d[39] * d[50] * d[68] + 2 * d[3] * d[42] * d[50] * d[68] - 2 * d[0] * d[43] * d[50] * d[68] - 2 * d[4] * d[37] * d[51] * d[68] + 2 * d[5] * d[39] * d[51] * d[68] - 2 * d[1] * d[40] * d[51] * d[68] + 2 * d[3] * d[41] * d[51] * d[68] - 2 * d[5] * d[36] * d[52] * d[68] + 2 * d[4] * d[39] * d[52] * d[68] + 2 * d[3] * d[40] * d[52] * d[68] - 2 * d[0] * d[41] * d[52] * d[68] + 2 * d[1] * d[36] * d[53] * d[68] + 2 * d[0] * d[37] * d[53] * d[68] - 4 * d[3] * d[39] * d[53] * d[68] - 2 * d[40] * d[46] * d[66] * d[68] + 2 * d[41] * d[48] * d[66] * d[68] - 2 * d[37] * d[49] * d[66] * d[68] + 2 * d[39] * d[50] * d[66] * d[68] - 2 * d[41] * d[45] * d[67] * d[68] + 2 * d[40] * d[48] * d[67] * d[68] + 2 * d[39] * d[49] * d[67] * d[68] - 2 * d[36] * d[50] * d[67] * d[68] + d[37] * d[45] * std::pow(d[68], 2) + d[36] * d[46] * std::pow(d[68], 2) - 2 * d[39] * d[48] * std::pow(d[68], 2) - d[2] * d[37] * d[45] * d[73] - d[1] * d[38] * d[45] * d[73] + 2 * d[5] * d[41] * d[45] * d[73] - d[2] * d[36] * d[46] * d[73] - d[0] * d[38] * d[46] * d[73] + 2 * d[4] * d[40] * d[46] * d[73] - d[1] * d[36] * d[47] * d[73] - d[0] * d[37] * d[47] * d[73] + 2 * d[3] * d[39] * d[47] * d[73] + 2 * d[3] * d[38] * d[48] * d[73] + 2 * d[2] * d[39] * d[48] * d[73] - 2 * d[5] * d[40] * d[48] * d[73] - 2 * d[4] * d[41] * d[48] * d[73] + 2 * d[4] * d[37] * d[49] * d[73] - 2 * d[5] * d[39] * d[49] * d[73] + 2 * d[1] * d[40] * d[49] * d[73] - 2 * d[3] * d[41] * d[49] * d[73] + 2 * d[5] * d[36] * d[50] * d[73] - 2 * d[4] * d[39] * d[50] * d[73] - 2 * d[3] * d[40] * d[50] * d[73] + 2 * d[0] * d[41] * d[50] * d[73];
    coeffs[273] = 2 * d[6] * d[46] * d[47] * d[66] - 2 * d[7] * d[47] * d[48] * d[66] - 2 * d[8] * d[46] * d[49] * d[66] + 2 * d[8] * d[48] * d[50] * d[66] + 2 * d[7] * d[49] * d[50] * d[66] - 2 * d[6] * std::pow(d[50], 2) * d[66] + 2 * d[2] * d[46] * d[51] * d[66] + 2 * d[1] * d[47] * d[51] * d[66] - 4 * d[5] * d[50] * d[51] * d[66] - 2 * d[3] * d[47] * d[52] * d[66] - 2 * d[2] * d[48] * d[52] * d[66] + 2 * d[5] * d[49] * d[52] * d[66] + 2 * d[4] * d[50] * d[52] * d[66] - 2 * d[4] * d[46] * d[53] * d[66] + 2 * d[5] * d[48] * d[53] * d[66] - 2 * d[1] * d[49] * d[53] * d[66] + 2 * d[3] * d[50] * d[53] * d[66] + d[46] * d[47] * std::pow(d[66], 2) - std::pow(d[50], 2) * std::pow(d[66], 2) + 2 * d[7] * d[45] * d[47] * d[67] - 2 * d[6] * d[47] * d[48] * d[67] + 2 * d[8] * d[48] * d[49] * d[67] - 2 * d[7] * std::pow(d[49], 2) * d[67] - 2 * d[8] * d[45] * d[50] * d[67] + 2 * d[6] * d[49] * d[50] * d[67] - 2 * d[3] * d[47] * d[51] * d[67] - 2 * d[2] * d[48] * d[51] * d[67] + 2 * d[5] * d[49] * d[51] * d[67] + 2 * d[4] * d[50] * d[51] * d[67] + 2 * d[2] * d[45] * d[52] * d[67] + 2 * d[0] * d[47] * d[52] * d[67] - 4 * d[4] * d[49] * d[52] * d[67] - 2 * d[5] * d[45] * d[53] * d[67] + 2 * d[4] * d[48] * d[53] * d[67] + 2 * d[3] * d[49] * d[53] * d[67] - 2 * d[0] * d[50] * d[53] * d[67] - 2 * d[47] * d[48] * d[66] * d[67] + 2 * d[49] * d[50] * d[66] * d[67] + d[45] * d[47] * std::pow(d[67], 2) - std::pow(d[49], 2) * std::pow(d[67], 2) + 2 * d[8] * d[45] * d[46] * d[68] - 2 * d[8] * std::pow(d[48], 2) * d[68] - 2 * d[6] * d[46] * d[49] * d[68] + 2 * d[7] * d[48] * d[49] * d[68] - 2 * d[7] * d[45] * d[50] * d[68] + 2 * d[6] * d[48] * d[50] * d[68] - 2 * d[4] * d[46] * d[51] * d[68] + 2 * d[5] * d[48] * d[51] * d[68] - 2 * d[1] * d[49] * d[51] * d[68] + 2 * d[3] * d[50] * d[51] * d[68] - 2 * d[5] * d[45] * d[52] * d[68] + 2 * d[4] * d[48] * d[52] * d[68] + 2 * d[3] * d[49] * d[52] * d[68] - 2 * d[0] * d[50] * d[52] * d[68] + 2 * d[1] * d[45] * d[53] * d[68] + 2 * d[0] * d[46] * d[53] * d[68] - 4 * d[3] * d[48] * d[53] * d[68] - 2 * d[46] * d[49] * d[66] * d[68] + 2 * d[48] * d[50] * d[66] * d[68] + 2 * d[48] * d[49] * d[67] * d[68] - 2 * d[45] * d[50] * d[67] * d[68] + d[45] * d[46] * std::pow(d[68], 2) - std::pow(d[48], 2) * std::pow(d[68], 2) - d[2] * d[45] * d[46] * d[73] - d[1] * d[45] * d[47] * d[73] - d[0] * d[46] * d[47] * d[73] + 2 * d[3] * d[47] * d[48] * d[73] + d[2] * std::pow(d[48], 2) * d[73] + 2 * d[4] * d[46] * d[49] * d[73] - 2 * d[5] * d[48] * d[49] * d[73] + d[1] * std::pow(d[49], 2) * d[73] + 2 * d[5] * d[45] * d[50] * d[73] - 2 * d[4] * d[48] * d[50] * d[73] - 2 * d[3] * d[49] * d[50] * d[73] + d[0] * std::pow(d[50], 2) * d[73];
    coeffs[274] = 2 * d[2] * d[6] * d[10] * d[66] - 2 * d[4] * d[8] * d[10] * d[66] + 2 * d[1] * d[6] * d[11] * d[66] - 2 * d[3] * d[7] * d[11] * d[66] - 2 * d[2] * d[7] * d[12] * d[66] + 2 * d[5] * d[8] * d[12] * d[66] + 2 * d[5] * d[7] * d[13] * d[66] - 2 * d[1] * d[8] * d[13] * d[66] - 4 * d[5] * d[6] * d[14] * d[66] + 2 * d[4] * d[7] * d[14] * d[66] + 2 * d[3] * d[8] * d[14] * d[66] + 2 * d[1] * d[2] * d[15] * d[66] - 2 * std::pow(d[5], 2) * d[15] * d[66] - 2 * d[2] * d[3] * d[16] * d[66] + 2 * d[4] * d[5] * d[16] * d[66] - 2 * d[1] * d[4] * d[17] * d[66] + 2 * d[3] * d[5] * d[17] * d[66] + d[2] * d[10] * std::pow(d[66], 2) + d[1] * d[11] * std::pow(d[66], 2) - 2 * d[5] * d[14] * std::pow(d[66], 2) + 2 * d[2] * d[7] * d[9] * d[67] - 2 * d[5] * d[8] * d[9] * d[67] - 2 * d[3] * d[6] * d[11] * d[67] + 2 * d[0] * d[7] * d[11] * d[67] - 2 * d[2] * d[6] * d[12] * d[67] + 2 * d[4] * d[8] * d[12] * d[67] + 2 * d[5] * d[6] * d[13] * d[67] - 4 * d[4] * d[7] * d[13] * d[67] + 2 * d[3] * d[8] * d[13] * d[67] + 2 * d[4] * d[6] * d[14] * d[67] - 2 * d[0] * d[8] * d[14] * d[67] - 2 * d[2] * d[3] * d[15] * d[67] + 2 * d[4] * d[5] * d[15] * d[67] + 2 * d[0] * d[2] * d[16] * d[67] - 2 * std::pow(d[4], 2) * d[16] * d[67] + 2 * d[3] * d[4] * d[17] * d[67] - 2 * d[0] * d[5] * d[17] * d[67] - 2 * d[3] * d[11] * d[66] * d[67] - 2 * d[2] * d[12] * d[66] * d[67] + 2 * d[5] * d[13] * d[66] * d[67] + 2 * d[4] * d[14] * d[66] * d[67] + d[2] * d[9] * std::pow(d[67], 2) + d[0] * d[11] * std::pow(d[67], 2) - 2 * d[4] * d[13] * std::pow(d[67], 2) - 2 * d[5] * d[7] * d[9] * d[68] + 2 * d[1] * d[8] * d[9] * d[68] - 2 * d[4] * d[6] * d[10] * d[68] + 2 * d[0] * d[8] * d[10] * d[68] + 2 * d[5] * d[6] * d[12] * d[68] + 2 * d[4] * d[7] * d[12] * d[68] - 4 * d[3] * d[8] * d[12] * d[68] - 2 * d[1] * d[6] * d[13] * d[68] + 2 * d[3] * d[7] * d[13] * d[68] + 2 * d[3] * d[6] * d[14] * d[68] - 2 * d[0] * d[7] * d[14] * d[68] - 2 * d[1] * d[4] * d[15] * d[68] + 2 * d[3] * d[5] * d[15] * d[68] + 2 * d[3] * d[4] * d[16] * d[68] - 2 * d[0] * d[5] * d[16] * d[68] + 2 * d[0] * d[1] * d[17] * d[68] - 2 * std::pow(d[3], 2) * d[17] * d[68] - 2 * d[4] * d[10] * d[66] * d[68] + 2 * d[5] * d[12] * d[66] * d[68] - 2 * d[1] * d[13] * d[66] * d[68] + 2 * d[3] * d[14] * d[66] * d[68] - 2 * d[5] * d[9] * d[67] * d[68] + 2 * d[4] * d[12] * d[67] * d[68] + 2 * d[3] * d[13] * d[67] * d[68] - 2 * d[0] * d[14] * d[67] * d[68] + d[1] * d[9] * std::pow(d[68], 2) + d[0] * d[10] * std::pow(d[68], 2) - 2 * d[3] * d[12] * std::pow(d[68], 2) - d[1] * d[2] * d[9] * d[73] + std::pow(d[5], 2) * d[9] * d[73] - d[0] * d[2] * d[10] * d[73] + std::pow(d[4], 2) * d[10] * d[73] - d[0] * d[1] * d[11] * d[73] + std::pow(d[3], 2) * d[11] * d[73] + 2 * d[2] * d[3] * d[12] * d[73] - 2 * d[4] * d[5] * d[12] * d[73] + 2 * d[1] * d[4] * d[13] * d[73] - 2 * d[3] * d[5] * d[13] * d[73] - 2 * d[3] * d[4] * d[14] * d[73] + 2 * d[0] * d[5] * d[14] * d[73];
    coeffs[275] = 2 * d[2] * d[6] * d[19] * d[66] - 2 * d[4] * d[8] * d[19] * d[66] + 2 * d[1] * d[6] * d[20] * d[66] - 2 * d[3] * d[7] * d[20] * d[66] - 2 * d[2] * d[7] * d[21] * d[66] + 2 * d[5] * d[8] * d[21] * d[66] + 2 * d[5] * d[7] * d[22] * d[66] - 2 * d[1] * d[8] * d[22] * d[66] - 4 * d[5] * d[6] * d[23] * d[66] + 2 * d[4] * d[7] * d[23] * d[66] + 2 * d[3] * d[8] * d[23] * d[66] + 2 * d[1] * d[2] * d[24] * d[66] - 2 * std::pow(d[5], 2) * d[24] * d[66] - 2 * d[2] * d[3] * d[25] * d[66] + 2 * d[4] * d[5] * d[25] * d[66] - 2 * d[1] * d[4] * d[26] * d[66] + 2 * d[3] * d[5] * d[26] * d[66] + d[2] * d[19] * std::pow(d[66], 2) + d[1] * d[20] * std::pow(d[66], 2) - 2 * d[5] * d[23] * std::pow(d[66], 2) + 2 * d[2] * d[7] * d[18] * d[67] - 2 * d[5] * d[8] * d[18] * d[67] - 2 * d[3] * d[6] * d[20] * d[67] + 2 * d[0] * d[7] * d[20] * d[67] - 2 * d[2] * d[6] * d[21] * d[67] + 2 * d[4] * d[8] * d[21] * d[67] + 2 * d[5] * d[6] * d[22] * d[67] - 4 * d[4] * d[7] * d[22] * d[67] + 2 * d[3] * d[8] * d[22] * d[67] + 2 * d[4] * d[6] * d[23] * d[67] - 2 * d[0] * d[8] * d[23] * d[67] - 2 * d[2] * d[3] * d[24] * d[67] + 2 * d[4] * d[5] * d[24] * d[67] + 2 * d[0] * d[2] * d[25] * d[67] - 2 * std::pow(d[4], 2) * d[25] * d[67] + 2 * d[3] * d[4] * d[26] * d[67] - 2 * d[0] * d[5] * d[26] * d[67] - 2 * d[3] * d[20] * d[66] * d[67] - 2 * d[2] * d[21] * d[66] * d[67] + 2 * d[5] * d[22] * d[66] * d[67] + 2 * d[4] * d[23] * d[66] * d[67] + d[2] * d[18] * std::pow(d[67], 2) + d[0] * d[20] * std::pow(d[67], 2) - 2 * d[4] * d[22] * std::pow(d[67], 2) - 2 * d[5] * d[7] * d[18] * d[68] + 2 * d[1] * d[8] * d[18] * d[68] - 2 * d[4] * d[6] * d[19] * d[68] + 2 * d[0] * d[8] * d[19] * d[68] + 2 * d[5] * d[6] * d[21] * d[68] + 2 * d[4] * d[7] * d[21] * d[68] - 4 * d[3] * d[8] * d[21] * d[68] - 2 * d[1] * d[6] * d[22] * d[68] + 2 * d[3] * d[7] * d[22] * d[68] + 2 * d[3] * d[6] * d[23] * d[68] - 2 * d[0] * d[7] * d[23] * d[68] - 2 * d[1] * d[4] * d[24] * d[68] + 2 * d[3] * d[5] * d[24] * d[68] + 2 * d[3] * d[4] * d[25] * d[68] - 2 * d[0] * d[5] * d[25] * d[68] + 2 * d[0] * d[1] * d[26] * d[68] - 2 * std::pow(d[3], 2) * d[26] * d[68] - 2 * d[4] * d[19] * d[66] * d[68] + 2 * d[5] * d[21] * d[66] * d[68] - 2 * d[1] * d[22] * d[66] * d[68] + 2 * d[3] * d[23] * d[66] * d[68] - 2 * d[5] * d[18] * d[67] * d[68] + 2 * d[4] * d[21] * d[67] * d[68] + 2 * d[3] * d[22] * d[67] * d[68] - 2 * d[0] * d[23] * d[67] * d[68] + d[1] * d[18] * std::pow(d[68], 2) + d[0] * d[19] * std::pow(d[68], 2) - 2 * d[3] * d[21] * std::pow(d[68], 2) - d[1] * d[2] * d[18] * d[73] + std::pow(d[5], 2) * d[18] * d[73] - d[0] * d[2] * d[19] * d[73] + std::pow(d[4], 2) * d[19] * d[73] - d[0] * d[1] * d[20] * d[73] + std::pow(d[3], 2) * d[20] * d[73] + 2 * d[2] * d[3] * d[21] * d[73] - 2 * d[4] * d[5] * d[21] * d[73] + 2 * d[1] * d[4] * d[22] * d[73] - 2 * d[3] * d[5] * d[22] * d[73] - 2 * d[3] * d[4] * d[23] * d[73] + 2 * d[0] * d[5] * d[23] * d[73];
    coeffs[276] = 2 * d[2] * d[6] * d[28] * d[66] - 2 * d[4] * d[8] * d[28] * d[66] + 2 * d[1] * d[6] * d[29] * d[66] - 2 * d[3] * d[7] * d[29] * d[66] - 2 * d[2] * d[7] * d[30] * d[66] + 2 * d[5] * d[8] * d[30] * d[66] + 2 * d[5] * d[7] * d[31] * d[66] - 2 * d[1] * d[8] * d[31] * d[66] - 4 * d[5] * d[6] * d[32] * d[66] + 2 * d[4] * d[7] * d[32] * d[66] + 2 * d[3] * d[8] * d[32] * d[66] + 2 * d[1] * d[2] * d[33] * d[66] - 2 * std::pow(d[5], 2) * d[33] * d[66] - 2 * d[2] * d[3] * d[34] * d[66] + 2 * d[4] * d[5] * d[34] * d[66] - 2 * d[1] * d[4] * d[35] * d[66] + 2 * d[3] * d[5] * d[35] * d[66] + d[2] * d[28] * std::pow(d[66], 2) + d[1] * d[29] * std::pow(d[66], 2) - 2 * d[5] * d[32] * std::pow(d[66], 2) + 2 * d[2] * d[7] * d[27] * d[67] - 2 * d[5] * d[8] * d[27] * d[67] - 2 * d[3] * d[6] * d[29] * d[67] + 2 * d[0] * d[7] * d[29] * d[67] - 2 * d[2] * d[6] * d[30] * d[67] + 2 * d[4] * d[8] * d[30] * d[67] + 2 * d[5] * d[6] * d[31] * d[67] - 4 * d[4] * d[7] * d[31] * d[67] + 2 * d[3] * d[8] * d[31] * d[67] + 2 * d[4] * d[6] * d[32] * d[67] - 2 * d[0] * d[8] * d[32] * d[67] - 2 * d[2] * d[3] * d[33] * d[67] + 2 * d[4] * d[5] * d[33] * d[67] + 2 * d[0] * d[2] * d[34] * d[67] - 2 * std::pow(d[4], 2) * d[34] * d[67] + 2 * d[3] * d[4] * d[35] * d[67] - 2 * d[0] * d[5] * d[35] * d[67] - 2 * d[3] * d[29] * d[66] * d[67] - 2 * d[2] * d[30] * d[66] * d[67] + 2 * d[5] * d[31] * d[66] * d[67] + 2 * d[4] * d[32] * d[66] * d[67] + d[2] * d[27] * std::pow(d[67], 2) + d[0] * d[29] * std::pow(d[67], 2) - 2 * d[4] * d[31] * std::pow(d[67], 2) - 2 * d[5] * d[7] * d[27] * d[68] + 2 * d[1] * d[8] * d[27] * d[68] - 2 * d[4] * d[6] * d[28] * d[68] + 2 * d[0] * d[8] * d[28] * d[68] + 2 * d[5] * d[6] * d[30] * d[68] + 2 * d[4] * d[7] * d[30] * d[68] - 4 * d[3] * d[8] * d[30] * d[68] - 2 * d[1] * d[6] * d[31] * d[68] + 2 * d[3] * d[7] * d[31] * d[68] + 2 * d[3] * d[6] * d[32] * d[68] - 2 * d[0] * d[7] * d[32] * d[68] - 2 * d[1] * d[4] * d[33] * d[68] + 2 * d[3] * d[5] * d[33] * d[68] + 2 * d[3] * d[4] * d[34] * d[68] - 2 * d[0] * d[5] * d[34] * d[68] + 2 * d[0] * d[1] * d[35] * d[68] - 2 * std::pow(d[3], 2) * d[35] * d[68] - 2 * d[4] * d[28] * d[66] * d[68] + 2 * d[5] * d[30] * d[66] * d[68] - 2 * d[1] * d[31] * d[66] * d[68] + 2 * d[3] * d[32] * d[66] * d[68] - 2 * d[5] * d[27] * d[67] * d[68] + 2 * d[4] * d[30] * d[67] * d[68] + 2 * d[3] * d[31] * d[67] * d[68] - 2 * d[0] * d[32] * d[67] * d[68] + d[1] * d[27] * std::pow(d[68], 2) + d[0] * d[28] * std::pow(d[68], 2) - 2 * d[3] * d[30] * std::pow(d[68], 2) - d[1] * d[2] * d[27] * d[73] + std::pow(d[5], 2) * d[27] * d[73] - d[0] * d[2] * d[28] * d[73] + std::pow(d[4], 2) * d[28] * d[73] - d[0] * d[1] * d[29] * d[73] + std::pow(d[3], 2) * d[29] * d[73] + 2 * d[2] * d[3] * d[30] * d[73] - 2 * d[4] * d[5] * d[30] * d[73] + 2 * d[1] * d[4] * d[31] * d[73] - 2 * d[3] * d[5] * d[31] * d[73] - 2 * d[3] * d[4] * d[32] * d[73] + 2 * d[0] * d[5] * d[32] * d[73];
    coeffs[277] = 2 * d[2] * d[6] * d[37] * d[66] - 2 * d[4] * d[8] * d[37] * d[66] + 2 * d[1] * d[6] * d[38] * d[66] - 2 * d[3] * d[7] * d[38] * d[66] - 2 * d[2] * d[7] * d[39] * d[66] + 2 * d[5] * d[8] * d[39] * d[66] + 2 * d[5] * d[7] * d[40] * d[66] - 2 * d[1] * d[8] * d[40] * d[66] - 4 * d[5] * d[6] * d[41] * d[66] + 2 * d[4] * d[7] * d[41] * d[66] + 2 * d[3] * d[8] * d[41] * d[66] + 2 * d[1] * d[2] * d[42] * d[66] - 2 * std::pow(d[5], 2) * d[42] * d[66] - 2 * d[2] * d[3] * d[43] * d[66] + 2 * d[4] * d[5] * d[43] * d[66] - 2 * d[1] * d[4] * d[44] * d[66] + 2 * d[3] * d[5] * d[44] * d[66] + d[2] * d[37] * std::pow(d[66], 2) + d[1] * d[38] * std::pow(d[66], 2) - 2 * d[5] * d[41] * std::pow(d[66], 2) + 2 * d[2] * d[7] * d[36] * d[67] - 2 * d[5] * d[8] * d[36] * d[67] - 2 * d[3] * d[6] * d[38] * d[67] + 2 * d[0] * d[7] * d[38] * d[67] - 2 * d[2] * d[6] * d[39] * d[67] + 2 * d[4] * d[8] * d[39] * d[67] + 2 * d[5] * d[6] * d[40] * d[67] - 4 * d[4] * d[7] * d[40] * d[67] + 2 * d[3] * d[8] * d[40] * d[67] + 2 * d[4] * d[6] * d[41] * d[67] - 2 * d[0] * d[8] * d[41] * d[67] - 2 * d[2] * d[3] * d[42] * d[67] + 2 * d[4] * d[5] * d[42] * d[67] + 2 * d[0] * d[2] * d[43] * d[67] - 2 * std::pow(d[4], 2) * d[43] * d[67] + 2 * d[3] * d[4] * d[44] * d[67] - 2 * d[0] * d[5] * d[44] * d[67] - 2 * d[3] * d[38] * d[66] * d[67] - 2 * d[2] * d[39] * d[66] * d[67] + 2 * d[5] * d[40] * d[66] * d[67] + 2 * d[4] * d[41] * d[66] * d[67] + d[2] * d[36] * std::pow(d[67], 2) + d[0] * d[38] * std::pow(d[67], 2) - 2 * d[4] * d[40] * std::pow(d[67], 2) - 2 * d[5] * d[7] * d[36] * d[68] + 2 * d[1] * d[8] * d[36] * d[68] - 2 * d[4] * d[6] * d[37] * d[68] + 2 * d[0] * d[8] * d[37] * d[68] + 2 * d[5] * d[6] * d[39] * d[68] + 2 * d[4] * d[7] * d[39] * d[68] - 4 * d[3] * d[8] * d[39] * d[68] - 2 * d[1] * d[6] * d[40] * d[68] + 2 * d[3] * d[7] * d[40] * d[68] + 2 * d[3] * d[6] * d[41] * d[68] - 2 * d[0] * d[7] * d[41] * d[68] - 2 * d[1] * d[4] * d[42] * d[68] + 2 * d[3] * d[5] * d[42] * d[68] + 2 * d[3] * d[4] * d[43] * d[68] - 2 * d[0] * d[5] * d[43] * d[68] + 2 * d[0] * d[1] * d[44] * d[68] - 2 * std::pow(d[3], 2) * d[44] * d[68] - 2 * d[4] * d[37] * d[66] * d[68] + 2 * d[5] * d[39] * d[66] * d[68] - 2 * d[1] * d[40] * d[66] * d[68] + 2 * d[3] * d[41] * d[66] * d[68] - 2 * d[5] * d[36] * d[67] * d[68] + 2 * d[4] * d[39] * d[67] * d[68] + 2 * d[3] * d[40] * d[67] * d[68] - 2 * d[0] * d[41] * d[67] * d[68] + d[1] * d[36] * std::pow(d[68], 2) + d[0] * d[37] * std::pow(d[68], 2) - 2 * d[3] * d[39] * std::pow(d[68], 2) - d[1] * d[2] * d[36] * d[73] + std::pow(d[5], 2) * d[36] * d[73] - d[0] * d[2] * d[37] * d[73] + std::pow(d[4], 2) * d[37] * d[73] - d[0] * d[1] * d[38] * d[73] + std::pow(d[3], 2) * d[38] * d[73] + 2 * d[2] * d[3] * d[39] * d[73] - 2 * d[4] * d[5] * d[39] * d[73] + 2 * d[1] * d[4] * d[40] * d[73] - 2 * d[3] * d[5] * d[40] * d[73] - 2 * d[3] * d[4] * d[41] * d[73] + 2 * d[0] * d[5] * d[41] * d[73];
    coeffs[278] = 2 * d[2] * d[6] * d[46] * d[66] - 2 * d[4] * d[8] * d[46] * d[66] + 2 * d[1] * d[6] * d[47] * d[66] - 2 * d[3] * d[7] * d[47] * d[66] - 2 * d[2] * d[7] * d[48] * d[66] + 2 * d[5] * d[8] * d[48] * d[66] + 2 * d[5] * d[7] * d[49] * d[66] - 2 * d[1] * d[8] * d[49] * d[66] - 4 * d[5] * d[6] * d[50] * d[66] + 2 * d[4] * d[7] * d[50] * d[66] + 2 * d[3] * d[8] * d[50] * d[66] + 2 * d[1] * d[2] * d[51] * d[66] - 2 * std::pow(d[5], 2) * d[51] * d[66] - 2 * d[2] * d[3] * d[52] * d[66] + 2 * d[4] * d[5] * d[52] * d[66] - 2 * d[1] * d[4] * d[53] * d[66] + 2 * d[3] * d[5] * d[53] * d[66] + d[2] * d[46] * std::pow(d[66], 2) + d[1] * d[47] * std::pow(d[66], 2) - 2 * d[5] * d[50] * std::pow(d[66], 2) + 2 * d[2] * d[7] * d[45] * d[67] - 2 * d[5] * d[8] * d[45] * d[67] - 2 * d[3] * d[6] * d[47] * d[67] + 2 * d[0] * d[7] * d[47] * d[67] - 2 * d[2] * d[6] * d[48] * d[67] + 2 * d[4] * d[8] * d[48] * d[67] + 2 * d[5] * d[6] * d[49] * d[67] - 4 * d[4] * d[7] * d[49] * d[67] + 2 * d[3] * d[8] * d[49] * d[67] + 2 * d[4] * d[6] * d[50] * d[67] - 2 * d[0] * d[8] * d[50] * d[67] - 2 * d[2] * d[3] * d[51] * d[67] + 2 * d[4] * d[5] * d[51] * d[67] + 2 * d[0] * d[2] * d[52] * d[67] - 2 * std::pow(d[4], 2) * d[52] * d[67] + 2 * d[3] * d[4] * d[53] * d[67] - 2 * d[0] * d[5] * d[53] * d[67] - 2 * d[3] * d[47] * d[66] * d[67] - 2 * d[2] * d[48] * d[66] * d[67] + 2 * d[5] * d[49] * d[66] * d[67] + 2 * d[4] * d[50] * d[66] * d[67] + d[2] * d[45] * std::pow(d[67], 2) + d[0] * d[47] * std::pow(d[67], 2) - 2 * d[4] * d[49] * std::pow(d[67], 2) - 2 * d[5] * d[7] * d[45] * d[68] + 2 * d[1] * d[8] * d[45] * d[68] - 2 * d[4] * d[6] * d[46] * d[68] + 2 * d[0] * d[8] * d[46] * d[68] + 2 * d[5] * d[6] * d[48] * d[68] + 2 * d[4] * d[7] * d[48] * d[68] - 4 * d[3] * d[8] * d[48] * d[68] - 2 * d[1] * d[6] * d[49] * d[68] + 2 * d[3] * d[7] * d[49] * d[68] + 2 * d[3] * d[6] * d[50] * d[68] - 2 * d[0] * d[7] * d[50] * d[68] - 2 * d[1] * d[4] * d[51] * d[68] + 2 * d[3] * d[5] * d[51] * d[68] + 2 * d[3] * d[4] * d[52] * d[68] - 2 * d[0] * d[5] * d[52] * d[68] + 2 * d[0] * d[1] * d[53] * d[68] - 2 * std::pow(d[3], 2) * d[53] * d[68] - 2 * d[4] * d[46] * d[66] * d[68] + 2 * d[5] * d[48] * d[66] * d[68] - 2 * d[1] * d[49] * d[66] * d[68] + 2 * d[3] * d[50] * d[66] * d[68] - 2 * d[5] * d[45] * d[67] * d[68] + 2 * d[4] * d[48] * d[67] * d[68] + 2 * d[3] * d[49] * d[67] * d[68] - 2 * d[0] * d[50] * d[67] * d[68] + d[1] * d[45] * std::pow(d[68], 2) + d[0] * d[46] * std::pow(d[68], 2) - 2 * d[3] * d[48] * std::pow(d[68], 2) - d[1] * d[2] * d[45] * d[73] + std::pow(d[5], 2) * d[45] * d[73] - d[0] * d[2] * d[46] * d[73] + std::pow(d[4], 2) * d[46] * d[73] - d[0] * d[1] * d[47] * d[73] + std::pow(d[3], 2) * d[47] * d[73] + 2 * d[2] * d[3] * d[48] * d[73] - 2 * d[4] * d[5] * d[48] * d[73] + 2 * d[1] * d[4] * d[49] * d[73] - 2 * d[3] * d[5] * d[49] * d[73] - 2 * d[3] * d[4] * d[50] * d[73] + 2 * d[0] * d[5] * d[50] * d[73];
    coeffs[279] = 2 * d[1] * d[2] * d[6] * d[66] - 2 * std::pow(d[5], 2) * d[6] * d[66] - 2 * d[2] * d[3] * d[7] * d[66] + 2 * d[4] * d[5] * d[7] * d[66] - 2 * d[1] * d[4] * d[8] * d[66] + 2 * d[3] * d[5] * d[8] * d[66] + d[1] * d[2] * std::pow(d[66], 2) - std::pow(d[5], 2) * std::pow(d[66], 2) - 2 * d[2] * d[3] * d[6] * d[67] + 2 * d[4] * d[5] * d[6] * d[67] + 2 * d[0] * d[2] * d[7] * d[67] - 2 * std::pow(d[4], 2) * d[7] * d[67] + 2 * d[3] * d[4] * d[8] * d[67] - 2 * d[0] * d[5] * d[8] * d[67] - 2 * d[2] * d[3] * d[66] * d[67] + 2 * d[4] * d[5] * d[66] * d[67] + d[0] * d[2] * std::pow(d[67], 2) - std::pow(d[4], 2) * std::pow(d[67], 2) - 2 * d[1] * d[4] * d[6] * d[68] + 2 * d[3] * d[5] * d[6] * d[68] + 2 * d[3] * d[4] * d[7] * d[68] - 2 * d[0] * d[5] * d[7] * d[68] + 2 * d[0] * d[1] * d[8] * d[68] - 2 * std::pow(d[3], 2) * d[8] * d[68] - 2 * d[1] * d[4] * d[66] * d[68] + 2 * d[3] * d[5] * d[66] * d[68] + 2 * d[3] * d[4] * d[67] * d[68] - 2 * d[0] * d[5] * d[67] * d[68] + d[0] * d[1] * std::pow(d[68], 2) - std::pow(d[3], 2) * std::pow(d[68], 2) - d[0] * d[1] * d[2] * d[73] + d[2] * std::pow(d[3], 2) * d[73] + d[1] * std::pow(d[4], 2) * d[73] - 2 * d[3] * d[4] * d[5] * d[73] + d[0] * std::pow(d[5], 2) * d[73];
    coeffs[280] = d[9] * d[10] * d[11] - d[11] * std::pow(d[12], 2) - d[10] * std::pow(d[13], 2) + 2 * d[12] * d[13] * d[14] - d[9] * std::pow(d[14], 2);
    coeffs[281] = d[10] * d[11] * d[18] - std::pow(d[14], 2) * d[18] + d[9] * d[11] * d[19] - std::pow(d[13], 2) * d[19] + d[9] * d[10] * d[20] - std::pow(d[12], 2) * d[20] - 2 * d[11] * d[12] * d[21] + 2 * d[13] * d[14] * d[21] - 2 * d[10] * d[13] * d[22] + 2 * d[12] * d[14] * d[22] + 2 * d[12] * d[13] * d[23] - 2 * d[9] * d[14] * d[23];
    coeffs[282] = d[11] * d[18] * d[19] + d[10] * d[18] * d[20] + d[9] * d[19] * d[20] - 2 * d[12] * d[20] * d[21] - d[11] * std::pow(d[21], 2) - 2 * d[13] * d[19] * d[22] + 2 * d[14] * d[21] * d[22] - d[10] * std::pow(d[22], 2) - 2 * d[14] * d[18] * d[23] + 2 * d[13] * d[21] * d[23] + 2 * d[12] * d[22] * d[23] - d[9] * std::pow(d[23], 2);
    coeffs[283] = d[18] * d[19] * d[20] - d[20] * std::pow(d[21], 2) - d[19] * std::pow(d[22], 2) + 2 * d[21] * d[22] * d[23] - d[18] * std::pow(d[23], 2);
    coeffs[284] = d[10] * d[11] * d[27] - std::pow(d[14], 2) * d[27] + d[9] * d[11] * d[28] - std::pow(d[13], 2) * d[28] + d[9] * d[10] * d[29] - std::pow(d[12], 2) * d[29] - 2 * d[11] * d[12] * d[30] + 2 * d[13] * d[14] * d[30] - 2 * d[10] * d[13] * d[31] + 2 * d[12] * d[14] * d[31] + 2 * d[12] * d[13] * d[32] - 2 * d[9] * d[14] * d[32];
    coeffs[285] = d[11] * d[19] * d[27] + d[10] * d[20] * d[27] - 2 * d[14] * d[23] * d[27] + d[11] * d[18] * d[28] + d[9] * d[20] * d[28] - 2 * d[13] * d[22] * d[28] + d[10] * d[18] * d[29] + d[9] * d[19] * d[29] - 2 * d[12] * d[21] * d[29] - 2 * d[12] * d[20] * d[30] - 2 * d[11] * d[21] * d[30] + 2 * d[14] * d[22] * d[30] + 2 * d[13] * d[23] * d[30] - 2 * d[13] * d[19] * d[31] + 2 * d[14] * d[21] * d[31] - 2 * d[10] * d[22] * d[31] + 2 * d[12] * d[23] * d[31] - 2 * d[14] * d[18] * d[32] + 2 * d[13] * d[21] * d[32] + 2 * d[12] * d[22] * d[32] - 2 * d[9] * d[23] * d[32];
    coeffs[286] = d[19] * d[20] * d[27] - std::pow(d[23], 2) * d[27] + d[18] * d[20] * d[28] - std::pow(d[22], 2) * d[28] + d[18] * d[19] * d[29] - std::pow(d[21], 2) * d[29] - 2 * d[20] * d[21] * d[30] + 2 * d[22] * d[23] * d[30] - 2 * d[19] * d[22] * d[31] + 2 * d[21] * d[23] * d[31] + 2 * d[21] * d[22] * d[32] - 2 * d[18] * d[23] * d[32];
    coeffs[287] = d[11] * d[27] * d[28] + d[10] * d[27] * d[29] + d[9] * d[28] * d[29] - 2 * d[12] * d[29] * d[30] - d[11] * std::pow(d[30], 2) - 2 * d[13] * d[28] * d[31] + 2 * d[14] * d[30] * d[31] - d[10] * std::pow(d[31], 2) - 2 * d[14] * d[27] * d[32] + 2 * d[13] * d[30] * d[32] + 2 * d[12] * d[31] * d[32] - d[9] * std::pow(d[32], 2);
    coeffs[288] = d[20] * d[27] * d[28] + d[19] * d[27] * d[29] + d[18] * d[28] * d[29] - 2 * d[21] * d[29] * d[30] - d[20] * std::pow(d[30], 2) - 2 * d[22] * d[28] * d[31] + 2 * d[23] * d[30] * d[31] - d[19] * std::pow(d[31], 2) - 2 * d[23] * d[27] * d[32] + 2 * d[22] * d[30] * d[32] + 2 * d[21] * d[31] * d[32] - d[18] * std::pow(d[32], 2);
    coeffs[289] = d[27] * d[28] * d[29] - d[29] * std::pow(d[30], 2) - d[28] * std::pow(d[31], 2) + 2 * d[30] * d[31] * d[32] - d[27] * std::pow(d[32], 2);
    coeffs[290] = d[10] * d[11] * d[36] - std::pow(d[14], 2) * d[36] + d[9] * d[11] * d[37] - std::pow(d[13], 2) * d[37] + d[9] * d[10] * d[38] - std::pow(d[12], 2) * d[38] - 2 * d[11] * d[12] * d[39] + 2 * d[13] * d[14] * d[39] - 2 * d[10] * d[13] * d[40] + 2 * d[12] * d[14] * d[40] + 2 * d[12] * d[13] * d[41] - 2 * d[9] * d[14] * d[41];
    coeffs[291] = d[11] * d[19] * d[36] + d[10] * d[20] * d[36] - 2 * d[14] * d[23] * d[36] + d[11] * d[18] * d[37] + d[9] * d[20] * d[37] - 2 * d[13] * d[22] * d[37] + d[10] * d[18] * d[38] + d[9] * d[19] * d[38] - 2 * d[12] * d[21] * d[38] - 2 * d[12] * d[20] * d[39] - 2 * d[11] * d[21] * d[39] + 2 * d[14] * d[22] * d[39] + 2 * d[13] * d[23] * d[39] - 2 * d[13] * d[19] * d[40] + 2 * d[14] * d[21] * d[40] - 2 * d[10] * d[22] * d[40] + 2 * d[12] * d[23] * d[40] - 2 * d[14] * d[18] * d[41] + 2 * d[13] * d[21] * d[41] + 2 * d[12] * d[22] * d[41] - 2 * d[9] * d[23] * d[41];
    coeffs[292] = d[19] * d[20] * d[36] - std::pow(d[23], 2) * d[36] + d[18] * d[20] * d[37] - std::pow(d[22], 2) * d[37] + d[18] * d[19] * d[38] - std::pow(d[21], 2) * d[38] - 2 * d[20] * d[21] * d[39] + 2 * d[22] * d[23] * d[39] - 2 * d[19] * d[22] * d[40] + 2 * d[21] * d[23] * d[40] + 2 * d[21] * d[22] * d[41] - 2 * d[18] * d[23] * d[41];
    coeffs[293] = d[11] * d[28] * d[36] + d[10] * d[29] * d[36] - 2 * d[14] * d[32] * d[36] + d[11] * d[27] * d[37] + d[9] * d[29] * d[37] - 2 * d[13] * d[31] * d[37] + d[10] * d[27] * d[38] + d[9] * d[28] * d[38] - 2 * d[12] * d[30] * d[38] - 2 * d[12] * d[29] * d[39] - 2 * d[11] * d[30] * d[39] + 2 * d[14] * d[31] * d[39] + 2 * d[13] * d[32] * d[39] - 2 * d[13] * d[28] * d[40] + 2 * d[14] * d[30] * d[40] - 2 * d[10] * d[31] * d[40] + 2 * d[12] * d[32] * d[40] - 2 * d[14] * d[27] * d[41] + 2 * d[13] * d[30] * d[41] + 2 * d[12] * d[31] * d[41] - 2 * d[9] * d[32] * d[41];
    coeffs[294] = d[20] * d[28] * d[36] + d[19] * d[29] * d[36] - 2 * d[23] * d[32] * d[36] + d[20] * d[27] * d[37] + d[18] * d[29] * d[37] - 2 * d[22] * d[31] * d[37] + d[19] * d[27] * d[38] + d[18] * d[28] * d[38] - 2 * d[21] * d[30] * d[38] - 2 * d[21] * d[29] * d[39] - 2 * d[20] * d[30] * d[39] + 2 * d[23] * d[31] * d[39] + 2 * d[22] * d[32] * d[39] - 2 * d[22] * d[28] * d[40] + 2 * d[23] * d[30] * d[40] - 2 * d[19] * d[31] * d[40] + 2 * d[21] * d[32] * d[40] - 2 * d[23] * d[27] * d[41] + 2 * d[22] * d[30] * d[41] + 2 * d[21] * d[31] * d[41] - 2 * d[18] * d[32] * d[41];
    coeffs[295] = d[28] * d[29] * d[36] - std::pow(d[32], 2) * d[36] + d[27] * d[29] * d[37] - std::pow(d[31], 2) * d[37] + d[27] * d[28] * d[38] - std::pow(d[30], 2) * d[38] - 2 * d[29] * d[30] * d[39] + 2 * d[31] * d[32] * d[39] - 2 * d[28] * d[31] * d[40] + 2 * d[30] * d[32] * d[40] + 2 * d[30] * d[31] * d[41] - 2 * d[27] * d[32] * d[41];
    coeffs[296] = d[11] * d[36] * d[37] + d[10] * d[36] * d[38] + d[9] * d[37] * d[38] - 2 * d[12] * d[38] * d[39] - d[11] * std::pow(d[39], 2) - 2 * d[13] * d[37] * d[40] + 2 * d[14] * d[39] * d[40] - d[10] * std::pow(d[40], 2) - 2 * d[14] * d[36] * d[41] + 2 * d[13] * d[39] * d[41] + 2 * d[12] * d[40] * d[41] - d[9] * std::pow(d[41], 2);
    coeffs[297] = d[20] * d[36] * d[37] + d[19] * d[36] * d[38] + d[18] * d[37] * d[38] - 2 * d[21] * d[38] * d[39] - d[20] * std::pow(d[39], 2) - 2 * d[22] * d[37] * d[40] + 2 * d[23] * d[39] * d[40] - d[19] * std::pow(d[40], 2) - 2 * d[23] * d[36] * d[41] + 2 * d[22] * d[39] * d[41] + 2 * d[21] * d[40] * d[41] - d[18] * std::pow(d[41], 2);
    coeffs[298] = d[29] * d[36] * d[37] + d[28] * d[36] * d[38] + d[27] * d[37] * d[38] - 2 * d[30] * d[38] * d[39] - d[29] * std::pow(d[39], 2) - 2 * d[31] * d[37] * d[40] + 2 * d[32] * d[39] * d[40] - d[28] * std::pow(d[40], 2) - 2 * d[32] * d[36] * d[41] + 2 * d[31] * d[39] * d[41] + 2 * d[30] * d[40] * d[41] - d[27] * std::pow(d[41], 2);
    coeffs[299] = d[36] * d[37] * d[38] - d[38] * std::pow(d[39], 2) - d[37] * std::pow(d[40], 2) + 2 * d[39] * d[40] * d[41] - d[36] * std::pow(d[41], 2);
    coeffs[300] = d[10] * d[11] * d[45] - std::pow(d[14], 2) * d[45] + d[9] * d[11] * d[46] - std::pow(d[13], 2) * d[46] + d[9] * d[10] * d[47] - std::pow(d[12], 2) * d[47] - 2 * d[11] * d[12] * d[48] + 2 * d[13] * d[14] * d[48] - 2 * d[10] * d[13] * d[49] + 2 * d[12] * d[14] * d[49] + 2 * d[12] * d[13] * d[50] - 2 * d[9] * d[14] * d[50];
    coeffs[301] = d[11] * d[19] * d[45] + d[10] * d[20] * d[45] - 2 * d[14] * d[23] * d[45] + d[11] * d[18] * d[46] + d[9] * d[20] * d[46] - 2 * d[13] * d[22] * d[46] + d[10] * d[18] * d[47] + d[9] * d[19] * d[47] - 2 * d[12] * d[21] * d[47] - 2 * d[12] * d[20] * d[48] - 2 * d[11] * d[21] * d[48] + 2 * d[14] * d[22] * d[48] + 2 * d[13] * d[23] * d[48] - 2 * d[13] * d[19] * d[49] + 2 * d[14] * d[21] * d[49] - 2 * d[10] * d[22] * d[49] + 2 * d[12] * d[23] * d[49] - 2 * d[14] * d[18] * d[50] + 2 * d[13] * d[21] * d[50] + 2 * d[12] * d[22] * d[50] - 2 * d[9] * d[23] * d[50];
    coeffs[302] = d[19] * d[20] * d[45] - std::pow(d[23], 2) * d[45] + d[18] * d[20] * d[46] - std::pow(d[22], 2) * d[46] + d[18] * d[19] * d[47] - std::pow(d[21], 2) * d[47] - 2 * d[20] * d[21] * d[48] + 2 * d[22] * d[23] * d[48] - 2 * d[19] * d[22] * d[49] + 2 * d[21] * d[23] * d[49] + 2 * d[21] * d[22] * d[50] - 2 * d[18] * d[23] * d[50];
    coeffs[303] = d[11] * d[28] * d[45] + d[10] * d[29] * d[45] - 2 * d[14] * d[32] * d[45] + d[11] * d[27] * d[46] + d[9] * d[29] * d[46] - 2 * d[13] * d[31] * d[46] + d[10] * d[27] * d[47] + d[9] * d[28] * d[47] - 2 * d[12] * d[30] * d[47] - 2 * d[12] * d[29] * d[48] - 2 * d[11] * d[30] * d[48] + 2 * d[14] * d[31] * d[48] + 2 * d[13] * d[32] * d[48] - 2 * d[13] * d[28] * d[49] + 2 * d[14] * d[30] * d[49] - 2 * d[10] * d[31] * d[49] + 2 * d[12] * d[32] * d[49] - 2 * d[14] * d[27] * d[50] + 2 * d[13] * d[30] * d[50] + 2 * d[12] * d[31] * d[50] - 2 * d[9] * d[32] * d[50];
    coeffs[304] = d[20] * d[28] * d[45] + d[19] * d[29] * d[45] - 2 * d[23] * d[32] * d[45] + d[20] * d[27] * d[46] + d[18] * d[29] * d[46] - 2 * d[22] * d[31] * d[46] + d[19] * d[27] * d[47] + d[18] * d[28] * d[47] - 2 * d[21] * d[30] * d[47] - 2 * d[21] * d[29] * d[48] - 2 * d[20] * d[30] * d[48] + 2 * d[23] * d[31] * d[48] + 2 * d[22] * d[32] * d[48] - 2 * d[22] * d[28] * d[49] + 2 * d[23] * d[30] * d[49] - 2 * d[19] * d[31] * d[49] + 2 * d[21] * d[32] * d[49] - 2 * d[23] * d[27] * d[50] + 2 * d[22] * d[30] * d[50] + 2 * d[21] * d[31] * d[50] - 2 * d[18] * d[32] * d[50];
    coeffs[305] = d[28] * d[29] * d[45] - std::pow(d[32], 2) * d[45] + d[27] * d[29] * d[46] - std::pow(d[31], 2) * d[46] + d[27] * d[28] * d[47] - std::pow(d[30], 2) * d[47] - 2 * d[29] * d[30] * d[48] + 2 * d[31] * d[32] * d[48] - 2 * d[28] * d[31] * d[49] + 2 * d[30] * d[32] * d[49] + 2 * d[30] * d[31] * d[50] - 2 * d[27] * d[32] * d[50];
    coeffs[306] = d[11] * d[37] * d[45] + d[10] * d[38] * d[45] - 2 * d[14] * d[41] * d[45] + d[11] * d[36] * d[46] + d[9] * d[38] * d[46] - 2 * d[13] * d[40] * d[46] + d[10] * d[36] * d[47] + d[9] * d[37] * d[47] - 2 * d[12] * d[39] * d[47] - 2 * d[12] * d[38] * d[48] - 2 * d[11] * d[39] * d[48] + 2 * d[14] * d[40] * d[48] + 2 * d[13] * d[41] * d[48] - 2 * d[13] * d[37] * d[49] + 2 * d[14] * d[39] * d[49] - 2 * d[10] * d[40] * d[49] + 2 * d[12] * d[41] * d[49] - 2 * d[14] * d[36] * d[50] + 2 * d[13] * d[39] * d[50] + 2 * d[12] * d[40] * d[50] - 2 * d[9] * d[41] * d[50];
    coeffs[307] = d[20] * d[37] * d[45] + d[19] * d[38] * d[45] - 2 * d[23] * d[41] * d[45] + d[20] * d[36] * d[46] + d[18] * d[38] * d[46] - 2 * d[22] * d[40] * d[46] + d[19] * d[36] * d[47] + d[18] * d[37] * d[47] - 2 * d[21] * d[39] * d[47] - 2 * d[21] * d[38] * d[48] - 2 * d[20] * d[39] * d[48] + 2 * d[23] * d[40] * d[48] + 2 * d[22] * d[41] * d[48] - 2 * d[22] * d[37] * d[49] + 2 * d[23] * d[39] * d[49] - 2 * d[19] * d[40] * d[49] + 2 * d[21] * d[41] * d[49] - 2 * d[23] * d[36] * d[50] + 2 * d[22] * d[39] * d[50] + 2 * d[21] * d[40] * d[50] - 2 * d[18] * d[41] * d[50];
    coeffs[308] = d[29] * d[37] * d[45] + d[28] * d[38] * d[45] - 2 * d[32] * d[41] * d[45] + d[29] * d[36] * d[46] + d[27] * d[38] * d[46] - 2 * d[31] * d[40] * d[46] + d[28] * d[36] * d[47] + d[27] * d[37] * d[47] - 2 * d[30] * d[39] * d[47] - 2 * d[30] * d[38] * d[48] - 2 * d[29] * d[39] * d[48] + 2 * d[32] * d[40] * d[48] + 2 * d[31] * d[41] * d[48] - 2 * d[31] * d[37] * d[49] + 2 * d[32] * d[39] * d[49] - 2 * d[28] * d[40] * d[49] + 2 * d[30] * d[41] * d[49] - 2 * d[32] * d[36] * d[50] + 2 * d[31] * d[39] * d[50] + 2 * d[30] * d[40] * d[50] - 2 * d[27] * d[41] * d[50];
    coeffs[309] = d[37] * d[38] * d[45] - std::pow(d[41], 2) * d[45] + d[36] * d[38] * d[46] - std::pow(d[40], 2) * d[46] + d[36] * d[37] * d[47] - std::pow(d[39], 2) * d[47] - 2 * d[38] * d[39] * d[48] + 2 * d[40] * d[41] * d[48] - 2 * d[37] * d[40] * d[49] + 2 * d[39] * d[41] * d[49] + 2 * d[39] * d[40] * d[50] - 2 * d[36] * d[41] * d[50];
    coeffs[310] = d[11] * d[45] * d[46] + d[10] * d[45] * d[47] + d[9] * d[46] * d[47] - 2 * d[12] * d[47] * d[48] - d[11] * std::pow(d[48], 2) - 2 * d[13] * d[46] * d[49] + 2 * d[14] * d[48] * d[49] - d[10] * std::pow(d[49], 2) - 2 * d[14] * d[45] * d[50] + 2 * d[13] * d[48] * d[50] + 2 * d[12] * d[49] * d[50] - d[9] * std::pow(d[50], 2);
    coeffs[311] = d[20] * d[45] * d[46] + d[19] * d[45] * d[47] + d[18] * d[46] * d[47] - 2 * d[21] * d[47] * d[48] - d[20] * std::pow(d[48], 2) - 2 * d[22] * d[46] * d[49] + 2 * d[23] * d[48] * d[49] - d[19] * std::pow(d[49], 2) - 2 * d[23] * d[45] * d[50] + 2 * d[22] * d[48] * d[50] + 2 * d[21] * d[49] * d[50] - d[18] * std::pow(d[50], 2);
    coeffs[312] = d[29] * d[45] * d[46] + d[28] * d[45] * d[47] + d[27] * d[46] * d[47] - 2 * d[30] * d[47] * d[48] - d[29] * std::pow(d[48], 2) - 2 * d[31] * d[46] * d[49] + 2 * d[32] * d[48] * d[49] - d[28] * std::pow(d[49], 2) - 2 * d[32] * d[45] * d[50] + 2 * d[31] * d[48] * d[50] + 2 * d[30] * d[49] * d[50] - d[27] * std::pow(d[50], 2);
    coeffs[313] = d[38] * d[45] * d[46] + d[37] * d[45] * d[47] + d[36] * d[46] * d[47] - 2 * d[39] * d[47] * d[48] - d[38] * std::pow(d[48], 2) - 2 * d[40] * d[46] * d[49] + 2 * d[41] * d[48] * d[49] - d[37] * std::pow(d[49], 2) - 2 * d[41] * d[45] * d[50] + 2 * d[40] * d[48] * d[50] + 2 * d[39] * d[49] * d[50] - d[36] * std::pow(d[50], 2);
    coeffs[314] = d[45] * d[46] * d[47] - d[47] * std::pow(d[48], 2) - d[46] * std::pow(d[49], 2) + 2 * d[48] * d[49] * d[50] - d[45] * std::pow(d[50], 2);
    coeffs[315] = d[2] * d[9] * d[10] + d[1] * d[9] * d[11] + d[0] * d[10] * d[11] - 2 * d[3] * d[11] * d[12] - d[2] * std::pow(d[12], 2) - 2 * d[4] * d[10] * d[13] + 2 * d[5] * d[12] * d[13] - d[1] * std::pow(d[13], 2) - 2 * d[5] * d[9] * d[14] + 2 * d[4] * d[12] * d[14] + 2 * d[3] * d[13] * d[14] - d[0] * std::pow(d[14], 2);
    coeffs[316] = d[2] * d[10] * d[18] + d[1] * d[11] * d[18] - 2 * d[5] * d[14] * d[18] + d[2] * d[9] * d[19] + d[0] * d[11] * d[19] - 2 * d[4] * d[13] * d[19] + d[1] * d[9] * d[20] + d[0] * d[10] * d[20] - 2 * d[3] * d[12] * d[20] - 2 * d[3] * d[11] * d[21] - 2 * d[2] * d[12] * d[21] + 2 * d[5] * d[13] * d[21] + 2 * d[4] * d[14] * d[21] - 2 * d[4] * d[10] * d[22] + 2 * d[5] * d[12] * d[22] - 2 * d[1] * d[13] * d[22] + 2 * d[3] * d[14] * d[22] - 2 * d[5] * d[9] * d[23] + 2 * d[4] * d[12] * d[23] + 2 * d[3] * d[13] * d[23] - 2 * d[0] * d[14] * d[23];
    coeffs[317] = d[2] * d[18] * d[19] + d[1] * d[18] * d[20] + d[0] * d[19] * d[20] - 2 * d[3] * d[20] * d[21] - d[2] * std::pow(d[21], 2) - 2 * d[4] * d[19] * d[22] + 2 * d[5] * d[21] * d[22] - d[1] * std::pow(d[22], 2) - 2 * d[5] * d[18] * d[23] + 2 * d[4] * d[21] * d[23] + 2 * d[3] * d[22] * d[23] - d[0] * std::pow(d[23], 2);
    coeffs[318] = d[2] * d[10] * d[27] + d[1] * d[11] * d[27] - 2 * d[5] * d[14] * d[27] + d[2] * d[9] * d[28] + d[0] * d[11] * d[28] - 2 * d[4] * d[13] * d[28] + d[1] * d[9] * d[29] + d[0] * d[10] * d[29] - 2 * d[3] * d[12] * d[29] - 2 * d[3] * d[11] * d[30] - 2 * d[2] * d[12] * d[30] + 2 * d[5] * d[13] * d[30] + 2 * d[4] * d[14] * d[30] - 2 * d[4] * d[10] * d[31] + 2 * d[5] * d[12] * d[31] - 2 * d[1] * d[13] * d[31] + 2 * d[3] * d[14] * d[31] - 2 * d[5] * d[9] * d[32] + 2 * d[4] * d[12] * d[32] + 2 * d[3] * d[13] * d[32] - 2 * d[0] * d[14] * d[32];
    coeffs[319] = d[2] * d[19] * d[27] + d[1] * d[20] * d[27] - 2 * d[5] * d[23] * d[27] + d[2] * d[18] * d[28] + d[0] * d[20] * d[28] - 2 * d[4] * d[22] * d[28] + d[1] * d[18] * d[29] + d[0] * d[19] * d[29] - 2 * d[3] * d[21] * d[29] - 2 * d[3] * d[20] * d[30] - 2 * d[2] * d[21] * d[30] + 2 * d[5] * d[22] * d[30] + 2 * d[4] * d[23] * d[30] - 2 * d[4] * d[19] * d[31] + 2 * d[5] * d[21] * d[31] - 2 * d[1] * d[22] * d[31] + 2 * d[3] * d[23] * d[31] - 2 * d[5] * d[18] * d[32] + 2 * d[4] * d[21] * d[32] + 2 * d[3] * d[22] * d[32] - 2 * d[0] * d[23] * d[32];
    coeffs[320] = d[2] * d[27] * d[28] + d[1] * d[27] * d[29] + d[0] * d[28] * d[29] - 2 * d[3] * d[29] * d[30] - d[2] * std::pow(d[30], 2) - 2 * d[4] * d[28] * d[31] + 2 * d[5] * d[30] * d[31] - d[1] * std::pow(d[31], 2) - 2 * d[5] * d[27] * d[32] + 2 * d[4] * d[30] * d[32] + 2 * d[3] * d[31] * d[32] - d[0] * std::pow(d[32], 2);
    coeffs[321] = d[2] * d[10] * d[36] + d[1] * d[11] * d[36] - 2 * d[5] * d[14] * d[36] + d[2] * d[9] * d[37] + d[0] * d[11] * d[37] - 2 * d[4] * d[13] * d[37] + d[1] * d[9] * d[38] + d[0] * d[10] * d[38] - 2 * d[3] * d[12] * d[38] - 2 * d[3] * d[11] * d[39] - 2 * d[2] * d[12] * d[39] + 2 * d[5] * d[13] * d[39] + 2 * d[4] * d[14] * d[39] - 2 * d[4] * d[10] * d[40] + 2 * d[5] * d[12] * d[40] - 2 * d[1] * d[13] * d[40] + 2 * d[3] * d[14] * d[40] - 2 * d[5] * d[9] * d[41] + 2 * d[4] * d[12] * d[41] + 2 * d[3] * d[13] * d[41] - 2 * d[0] * d[14] * d[41];
    coeffs[322] = d[2] * d[19] * d[36] + d[1] * d[20] * d[36] - 2 * d[5] * d[23] * d[36] + d[2] * d[18] * d[37] + d[0] * d[20] * d[37] - 2 * d[4] * d[22] * d[37] + d[1] * d[18] * d[38] + d[0] * d[19] * d[38] - 2 * d[3] * d[21] * d[38] - 2 * d[3] * d[20] * d[39] - 2 * d[2] * d[21] * d[39] + 2 * d[5] * d[22] * d[39] + 2 * d[4] * d[23] * d[39] - 2 * d[4] * d[19] * d[40] + 2 * d[5] * d[21] * d[40] - 2 * d[1] * d[22] * d[40] + 2 * d[3] * d[23] * d[40] - 2 * d[5] * d[18] * d[41] + 2 * d[4] * d[21] * d[41] + 2 * d[3] * d[22] * d[41] - 2 * d[0] * d[23] * d[41];
    coeffs[323] = d[2] * d[28] * d[36] + d[1] * d[29] * d[36] - 2 * d[5] * d[32] * d[36] + d[2] * d[27] * d[37] + d[0] * d[29] * d[37] - 2 * d[4] * d[31] * d[37] + d[1] * d[27] * d[38] + d[0] * d[28] * d[38] - 2 * d[3] * d[30] * d[38] - 2 * d[3] * d[29] * d[39] - 2 * d[2] * d[30] * d[39] + 2 * d[5] * d[31] * d[39] + 2 * d[4] * d[32] * d[39] - 2 * d[4] * d[28] * d[40] + 2 * d[5] * d[30] * d[40] - 2 * d[1] * d[31] * d[40] + 2 * d[3] * d[32] * d[40] - 2 * d[5] * d[27] * d[41] + 2 * d[4] * d[30] * d[41] + 2 * d[3] * d[31] * d[41] - 2 * d[0] * d[32] * d[41];
    coeffs[324] = d[2] * d[36] * d[37] + d[1] * d[36] * d[38] + d[0] * d[37] * d[38] - 2 * d[3] * d[38] * d[39] - d[2] * std::pow(d[39], 2) - 2 * d[4] * d[37] * d[40] + 2 * d[5] * d[39] * d[40] - d[1] * std::pow(d[40], 2) - 2 * d[5] * d[36] * d[41] + 2 * d[4] * d[39] * d[41] + 2 * d[3] * d[40] * d[41] - d[0] * std::pow(d[41], 2);
    coeffs[325] = d[2] * d[10] * d[45] + d[1] * d[11] * d[45] - 2 * d[5] * d[14] * d[45] + d[2] * d[9] * d[46] + d[0] * d[11] * d[46] - 2 * d[4] * d[13] * d[46] + d[1] * d[9] * d[47] + d[0] * d[10] * d[47] - 2 * d[3] * d[12] * d[47] - 2 * d[3] * d[11] * d[48] - 2 * d[2] * d[12] * d[48] + 2 * d[5] * d[13] * d[48] + 2 * d[4] * d[14] * d[48] - 2 * d[4] * d[10] * d[49] + 2 * d[5] * d[12] * d[49] - 2 * d[1] * d[13] * d[49] + 2 * d[3] * d[14] * d[49] - 2 * d[5] * d[9] * d[50] + 2 * d[4] * d[12] * d[50] + 2 * d[3] * d[13] * d[50] - 2 * d[0] * d[14] * d[50];
    coeffs[326] = d[2] * d[19] * d[45] + d[1] * d[20] * d[45] - 2 * d[5] * d[23] * d[45] + d[2] * d[18] * d[46] + d[0] * d[20] * d[46] - 2 * d[4] * d[22] * d[46] + d[1] * d[18] * d[47] + d[0] * d[19] * d[47] - 2 * d[3] * d[21] * d[47] - 2 * d[3] * d[20] * d[48] - 2 * d[2] * d[21] * d[48] + 2 * d[5] * d[22] * d[48] + 2 * d[4] * d[23] * d[48] - 2 * d[4] * d[19] * d[49] + 2 * d[5] * d[21] * d[49] - 2 * d[1] * d[22] * d[49] + 2 * d[3] * d[23] * d[49] - 2 * d[5] * d[18] * d[50] + 2 * d[4] * d[21] * d[50] + 2 * d[3] * d[22] * d[50] - 2 * d[0] * d[23] * d[50];
    coeffs[327] = d[2] * d[28] * d[45] + d[1] * d[29] * d[45] - 2 * d[5] * d[32] * d[45] + d[2] * d[27] * d[46] + d[0] * d[29] * d[46] - 2 * d[4] * d[31] * d[46] + d[1] * d[27] * d[47] + d[0] * d[28] * d[47] - 2 * d[3] * d[30] * d[47] - 2 * d[3] * d[29] * d[48] - 2 * d[2] * d[30] * d[48] + 2 * d[5] * d[31] * d[48] + 2 * d[4] * d[32] * d[48] - 2 * d[4] * d[28] * d[49] + 2 * d[5] * d[30] * d[49] - 2 * d[1] * d[31] * d[49] + 2 * d[3] * d[32] * d[49] - 2 * d[5] * d[27] * d[50] + 2 * d[4] * d[30] * d[50] + 2 * d[3] * d[31] * d[50] - 2 * d[0] * d[32] * d[50];
    coeffs[328] = d[2] * d[37] * d[45] + d[1] * d[38] * d[45] - 2 * d[5] * d[41] * d[45] + d[2] * d[36] * d[46] + d[0] * d[38] * d[46] - 2 * d[4] * d[40] * d[46] + d[1] * d[36] * d[47] + d[0] * d[37] * d[47] - 2 * d[3] * d[39] * d[47] - 2 * d[3] * d[38] * d[48] - 2 * d[2] * d[39] * d[48] + 2 * d[5] * d[40] * d[48] + 2 * d[4] * d[41] * d[48] - 2 * d[4] * d[37] * d[49] + 2 * d[5] * d[39] * d[49] - 2 * d[1] * d[40] * d[49] + 2 * d[3] * d[41] * d[49] - 2 * d[5] * d[36] * d[50] + 2 * d[4] * d[39] * d[50] + 2 * d[3] * d[40] * d[50] - 2 * d[0] * d[41] * d[50];
    coeffs[329] = d[2] * d[45] * d[46] + d[1] * d[45] * d[47] + d[0] * d[46] * d[47] - 2 * d[3] * d[47] * d[48] - d[2] * std::pow(d[48], 2) - 2 * d[4] * d[46] * d[49] + 2 * d[5] * d[48] * d[49] - d[1] * std::pow(d[49], 2) - 2 * d[5] * d[45] * d[50] + 2 * d[4] * d[48] * d[50] + 2 * d[3] * d[49] * d[50] - d[0] * std::pow(d[50], 2);
    coeffs[330] = d[1] * d[2] * d[9] - std::pow(d[5], 2) * d[9] + d[0] * d[2] * d[10] - std::pow(d[4], 2) * d[10] + d[0] * d[1] * d[11] - std::pow(d[3], 2) * d[11] - 2 * d[2] * d[3] * d[12] + 2 * d[4] * d[5] * d[12] - 2 * d[1] * d[4] * d[13] + 2 * d[3] * d[5] * d[13] + 2 * d[3] * d[4] * d[14] - 2 * d[0] * d[5] * d[14];
    coeffs[331] = d[1] * d[2] * d[18] - std::pow(d[5], 2) * d[18] + d[0] * d[2] * d[19] - std::pow(d[4], 2) * d[19] + d[0] * d[1] * d[20] - std::pow(d[3], 2) * d[20] - 2 * d[2] * d[3] * d[21] + 2 * d[4] * d[5] * d[21] - 2 * d[1] * d[4] * d[22] + 2 * d[3] * d[5] * d[22] + 2 * d[3] * d[4] * d[23] - 2 * d[0] * d[5] * d[23];
    coeffs[332] = d[1] * d[2] * d[27] - std::pow(d[5], 2) * d[27] + d[0] * d[2] * d[28] - std::pow(d[4], 2) * d[28] + d[0] * d[1] * d[29] - std::pow(d[3], 2) * d[29] - 2 * d[2] * d[3] * d[30] + 2 * d[4] * d[5] * d[30] - 2 * d[1] * d[4] * d[31] + 2 * d[3] * d[5] * d[31] + 2 * d[3] * d[4] * d[32] - 2 * d[0] * d[5] * d[32];
    coeffs[333] = d[1] * d[2] * d[36] - std::pow(d[5], 2) * d[36] + d[0] * d[2] * d[37] - std::pow(d[4], 2) * d[37] + d[0] * d[1] * d[38] - std::pow(d[3], 2) * d[38] - 2 * d[2] * d[3] * d[39] + 2 * d[4] * d[5] * d[39] - 2 * d[1] * d[4] * d[40] + 2 * d[3] * d[5] * d[40] + 2 * d[3] * d[4] * d[41] - 2 * d[0] * d[5] * d[41];
    coeffs[334] = d[1] * d[2] * d[45] - std::pow(d[5], 2) * d[45] + d[0] * d[2] * d[46] - std::pow(d[4], 2) * d[46] + d[0] * d[1] * d[47] - std::pow(d[3], 2) * d[47] - 2 * d[2] * d[3] * d[48] + 2 * d[4] * d[5] * d[48] - 2 * d[1] * d[4] * d[49] + 2 * d[3] * d[5] * d[49] + 2 * d[3] * d[4] * d[50] - 2 * d[0] * d[5] * d[50];
    coeffs[335] = -1;
    coeffs[336] = d[0] * d[1] * d[2] - d[2] * std::pow(d[3], 2) - d[1] * std::pow(d[4], 2) + 2 * d[3] * d[4] * d[5] - d[0] * std::pow(d[5], 2);

    // Setup elimination template
    static const int coeffs0_ind[] = {0, 56, 1, 0, 56, 57, 112, 168, 224, 2, 1, 0, 56, 57, 58, 112, 113, 168, 169, 224, 225, 3, 2, 1, 57, 58, 59, 113, 114, 169, 170, 225, 226, 3, 2, 58, 59, 114, 115, 170, 171, 226, 227, 3, 59, 115, 171, 227, 4, 60, 0, 56, 112, 168, 224, 5, 4, 60, 61, 1, 0, 56, 57, 112, 113, 116, 168, 169, 172, 224, 225, 228, 6, 5, 4, 60, 61, 62, 2, 1, 57, 58, 113, 116, 114, 117, 169, 172, 170, 173, 225, 228, 226, 229, 6, 5, 61, 62, 3, 2, 58, 59, 114, 117, 115, 118, 170, 173, 171, 174, 226, 229, 227, 230, 6, 62, 3, 59, 115, 118, 171, 174, 227, 230, 7, 63, 4, 60, 0, 56, 112, 116, 168, 172, 224, 228, 8, 7, 63, 64, 5, 4, 60, 61, 116, 1, 57, 113, 117, 119, 169, 172, 173, 175, 225, 228, 229, 231, 8, 7, 63, 64, 6, 5, 61, 62, 117, 2, 58, 114, 119, 118, 120, 170, 173, 175, 174, 176, 226, 229, 231, 230, 232, 8, 64, 6, 62, 118, 3, 59, 115, 120, 171, 174, 176, 227, 230, 232, 10, 66, 0, 56, 112, 168, 224, 11, 10, 66, 67, 1, 0, 56, 57, 112, 113, 122, 168, 169, 178, 224, 225, 234, 12, 11, 10, 66, 67, 68, 122, 2, 1, 57, 58, 113, 114, 123, 178, 169, 170, 179, 225, 234, 226, 235, 12, 11, 67, 68, 123, 3, 2, 58, 59, 114, 115, 124, 179, 170, 171, 180, 226, 235, 227, 236, 12, 68, 124, 3, 59, 115, 180, 171, 227, 236, 13, 69, 10, 66, 4, 60, 0, 56, 112, 116, 122, 178, 168, 172, 224, 228, 234, 14, 13, 69, 70, 11, 10, 66, 67, 122, 5, 4, 60, 61, 116, 1, 57, 113, 117, 123, 125, 178, 179, 169, 172, 173, 181, 225, 228, 234, 229, 235, 237, 14, 13, 69, 70, 12, 11, 67, 68, 123, 125, 6, 5, 61, 62, 117, 2, 58, 114, 118, 124, 126, 179, 181, 180, 170, 173, 174, 182, 226, 229, 235, 237, 230, 236, 238, 14, 70, 12, 68, 124, 126, 6, 62, 118, 3, 59, 115, 180, 182, 171, 174, 227, 230, 236, 238, 16, 72, 10, 66, 122, 56, 112, 0, 168, 178, 224, 234, 17, 16, 72, 73, 11, 10, 66, 67, 122, 123, 57, 113, 1, 169, 128, 178, 179, 184, 225, 234, 235, 240, 17, 16, 72, 73, 128, 12, 11, 67, 68, 123, 124, 58, 114, 2, 170, 129, 184, 179, 180, 185, 226, 235, 240, 236, 241, 17, 73, 129, 12, 68, 124, 59, 115, 3, 171, 185, 180, 227, 236, 241, 0, 56, 112, 168, 224, 1, 57, 113, 169, 225, 2, 58, 114, 170, 226, 3, 59, 115, 171, 227, 0, 56, 112, 168, 224, 1, 0, 56, 57, 112, 113, 168, 169, 224, 225, 4, 60, 116, 172, 2, 1, 57, 58, 113, 114, 169, 170, 225, 228, 226, 5, 61, 117, 173, 3, 2, 58, 59, 114, 115, 170, 171, 226, 229, 227, 6, 62, 118, 174, 3, 59, 115, 171, 227, 230, 4, 60, 0, 56, 112, 116, 168, 172, 224, 228, 5, 4, 60, 61, 116, 1, 57, 113, 117, 169, 172, 173, 225, 228, 229, 7, 63, 119, 175, 6, 5, 61, 62, 117, 2, 58, 114, 118, 170, 173, 174, 226, 229, 231, 230, 8, 64, 120, 176, 6, 62, 118, 3, 59, 115, 171, 174, 227, 230, 232, 0, 56, 112, 168, 224, 1, 0, 56, 57, 112, 113, 168, 169, 224, 225, 2, 1, 0, 56, 57, 58, 112, 113, 114, 168, 169, 170, 224, 225, 226, 3, 2, 1, 57, 58, 59, 113, 114, 115, 169, 170, 171, 225, 226, 227, 3, 2, 58, 59, 114, 115, 170, 171, 226, 227, 3, 59, 115, 171, 227, 4, 60, 0, 56, 112, 116, 168, 172, 224, 228, 5, 4, 60, 61, 1, 0, 56, 57, 112, 113, 116, 117, 168, 169, 172, 173, 224, 225, 228, 229, 10, 66, 122, 178, 6, 5, 4, 60, 61, 62, 2, 1, 57, 58, 113, 116, 234, 114, 117, 118, 169, 172, 170, 173, 174, 225, 228, 226, 229, 230, 11, 67, 123, 179, 6, 5, 61, 62, 3, 2, 58, 59, 114, 117, 235, 115, 118, 170, 173, 171, 174, 226, 229, 227, 230, 12, 68, 124, 180, 6, 62, 3, 59, 115, 118, 236, 171, 174, 227, 230, 10, 66, 122, 7, 63, 4, 60, 56, 0, 112, 178, 116, 119, 168, 172, 175, 224, 228, 234, 231, 11, 10, 66, 67, 122, 123, 8, 7, 63, 64, 5, 4, 60, 61, 116, 57, 1, 113, 178, 179, 234, 117, 119, 120, 169, 172, 173, 175, 176, 225, 228, 229, 235, 231, 232, 13, 69, 125, 181, 12, 11, 67, 68, 123, 124, 8, 7, 63, 64, 6, 5, 61, 62, 117, 58, 2, 114, 119, 179, 180, 235, 237, 118, 120, 170, 173, 175, 174, 176, 226, 229, 231, 230, 236, 232, 14, 70, 126, 182, 12, 68, 124, 8, 64, 6, 62, 118, 59, 3, 115, 120, 180, 236, 238, 171, 174, 176, 227, 230, 232, 20, 76, 10, 66, 0, 56, 112, 122, 168, 178, 224, 234, 21, 20, 76, 77, 11, 10, 66, 67, 1, 0, 56, 57, 112, 113, 132, 188, 122, 123, 168, 169, 178, 179, 224, 225, 234, 244, 235, 22, 21, 20, 76, 77, 78, 132, 12, 11, 10, 66, 67, 68, 122, 2, 1, 57, 58, 113, 114, 133, 188, 189, 244, 123, 124, 178, 169, 170, 179, 180, 225, 234, 226, 235, 245, 236, 22, 21, 77, 78, 133, 12, 11, 67, 68, 123, 3, 2, 58, 59, 114, 115, 134, 189, 190, 245, 124, 179, 170, 171, 180, 226, 235, 227, 236, 246, 22, 78, 134, 12, 68, 124, 3, 59, 115, 190, 246, 180, 171, 227, 236, 23, 79, 20, 76, 13, 69, 10, 66, 4, 60, 56, 112, 116, 0, 132, 188, 244, 122, 125, 168, 172, 178, 181, 224, 228, 234, 237, 24, 23, 79, 80, 21, 20, 76, 77, 132, 14, 13, 69, 70, 11, 10, 66, 67, 122, 5, 4, 60, 61, 116, 57, 113, 117, 1, 133, 135, 188, 189, 191, 244, 245, 123, 125, 126, 178, 169, 172, 173, 179, 181, 182, 225, 228, 234, 229, 235, 237, 247, 238, 24, 23, 79, 80, 22, 21, 77, 78, 133, 135, 16, 72, 128, 184, 14, 13, 69, 70, 12, 11, 67, 68, 123, 125, 6, 5, 61, 62, 117, 58, 114, 118, 2, 134, 136, 189, 191, 190, 192, 245, 247, 246, 240, 124, 126, 179, 181, 170, 173, 174, 180, 182, 226, 229, 235, 237, 230, 236, 238, 248, 24, 80, 22, 78, 134, 136, 17, 73, 129, 185, 14, 70, 12, 68, 124, 126, 6, 62, 118, 59, 115, 3, 190, 192, 246, 248, 241, 180, 182, 171, 174, 227, 230, 236, 238, 26, 82, 20, 76, 132, 16, 72, 10, 66, 122, 56, 112, 0, 168, 188, 244, 128, 178, 184, 224, 234, 240, 27, 26, 82, 83, 21, 20, 76, 77, 132, 133, 17, 16, 72, 73, 11, 10, 66, 67, 122, 123, 57, 113, 1, 169, 138, 188, 189, 194, 244, 245, 128, 129, 178, 179, 184, 185, 225, 234, 235, 240, 250, 241, 27, 26, 82, 83, 138, 22, 21, 77, 78, 133, 134, 17, 16, 72, 73, 128, 12, 11, 67, 68, 123, 124, 58, 114, 2, 170, 139, 194, 189, 190, 195, 245, 250, 246, 129, 184, 179, 180, 185, 226, 235, 240, 236, 241, 251, 27, 83, 139, 22, 78, 134, 17, 73, 129, 12, 68, 124, 59, 115, 3, 171, 195, 190, 246, 251, 185, 180, 227, 236, 241, 0, 56, 112, 168, 224, 1, 0, 56, 57, 112, 113, 168, 169, 224, 225, 2, 1, 56, 0, 57, 58, 112, 113, 114, 168, 169, 170, 224, 225, 226, 3, 2, 57, 1, 58, 59, 113, 114, 115, 169, 170, 171, 225, 226, 227, 3, 58, 2, 59, 114, 115, 170, 171, 226, 227, 59, 3, 115, 171, 227, 4, 60, 0, 56, 112, 116, 168, 172, 224, 228, 5, 4, 60, 61, 1, 56, 57, 0, 112, 113, 116, 117, 168, 169, 172, 173, 224, 225, 228, 229, 20, 76, 132, 188, 6, 5, 60, 4, 61, 62, 2, 57, 58, 1, 113, 116, 114, 244, 117, 118, 169, 172, 170, 173, 174, 225, 228, 226, 229, 230, 21, 77, 133, 189, 6, 61, 5, 62, 3, 58, 59, 2, 114, 117, 115, 245, 118, 170, 173, 171, 174, 226, 229, 227, 230, 22, 78, 134, 190, 62, 6, 59, 3, 115, 118, 246, 171, 174, 227, 230, 20, 76, 132, 7, 63, 4, 60, 56, 112, 116, 188, 119, 0, 168, 172, 175, 224, 228, 244, 231, 21, 20, 76, 77, 132, 133, 8, 7, 63, 64, 5, 60, 61, 4, 116, 57, 113, 117, 188, 189, 244, 119, 120, 1, 169, 172, 173, 175, 176, 225, 228, 229, 245, 231, 232, 23, 79, 135, 191, 22, 21, 77, 78, 133, 134, 8, 63, 7, 64, 6, 61, 62, 5, 117, 58, 114, 119, 118, 189, 190, 245, 247, 120, 2, 170, 173, 175, 174, 176, 226, 229, 231, 230, 246, 232, 24, 80, 136, 192, 22, 78, 134, 64, 8, 62, 6, 118, 59, 115, 120, 190, 246, 248, 3, 171, 174, 176, 227, 230, 232, 20, 76, 10, 66, 0, 56, 112, 132, 188, 122, 168, 178, 224, 234, 244, 21, 20, 76, 77, 11, 10, 66, 67, 1, 56, 57, 0, 112, 113, 132, 133, 188, 189, 122, 123, 168, 169, 178, 179, 224, 225, 234, 244, 235, 245, 22, 21, 20, 76, 77, 78, 132, 12, 11, 66, 10, 67, 68, 122, 2, 57, 58, 1, 113, 114, 133, 134, 188, 189, 190, 244, 123, 124, 178, 169, 170, 179, 180, 225, 234, 226, 235, 245, 236, 246, 22, 21, 77, 78, 133, 12, 67, 11, 68, 123, 3, 58, 59, 2, 114, 115, 134, 189, 190, 245, 124, 179, 170, 171, 180, 226, 235, 227, 236, 246, 22, 78, 134, 68, 12, 124, 59, 3, 115, 190, 246, 180, 171, 227, 236, 23, 79, 20, 76, 13, 69, 10, 66, 122, 4, 60, 56, 0, 112, 116, 132, 135, 188, 191, 125, 168, 172, 178, 181, 224, 228, 234, 244, 237, 247, 24, 23, 79, 80, 21, 20, 76, 77, 132, 14, 13, 69, 70, 11, 66, 67, 10, 122, 123, 5, 60, 61, 4, 116, 57, 1, 113, 117, 133, 135, 136, 188, 189, 191, 192, 244, 125, 126, 178, 169, 172, 173, 179, 181, 182, 225, 228, 234, 229, 235, 245, 237, 247, 238, 248, 26, 82, 138, 194, 24, 23, 79, 80, 22, 21, 77, 78, 133, 135, 14, 69, 13, 70, 12, 67, 68, 11, 123, 125, 124, 6, 61, 62, 5, 117, 58, 2, 114, 118, 250, 134, 136, 189, 191, 190, 192, 245, 247, 126, 179, 181, 170, 173, 174, 180, 182, 226, 229, 235, 237, 230, 236, 246, 238, 248, 27, 83, 139, 195, 24, 80, 22, 78, 134, 136, 70, 14, 68, 12, 124, 126, 62, 6, 118, 59, 3, 115, 251, 190, 192, 246, 248, 180, 182, 171, 174, 227, 230, 236, 238, 30, 86, 26, 82, 20, 76, 132, 16, 72, 10, 66, 122, 56, 112, 0, 168, 138, 188, 194, 128, 178, 184, 224, 234, 244, 240, 250, 31, 30, 86, 87, 27, 26, 82, 83, 21, 20, 76, 77, 132, 133, 17, 16, 72, 73, 11, 66, 67, 10, 122, 123, 57, 113, 1, 169, 142, 198, 138, 139, 188, 189, 194, 195, 244, 128, 129, 178, 179, 184, 185, 225, 234, 235, 245, 240, 250, 254, 241, 251, 31, 30, 86, 87, 142, 27, 26, 82, 83, 138, 22, 21, 77, 78, 133, 134, 17, 72, 16, 73, 128, 12, 67, 68, 11, 123, 124, 58, 114, 2, 170, 143, 198, 199, 254, 139, 194, 189, 190, 195, 245, 250, 129, 184, 179, 180, 185, 226, 235, 240, 236, 246, 241, 251, 255, 31, 87, 143, 27, 83, 139, 22, 78, 134, 73, 17, 129, 68, 12, 124, 59, 115, 3, 171, 199, 255, 195, 190, 246, 251, 185, 180, 227, 236, 241, 20, 76, 56, 0, 112, 132, 188, 168, 224, 244, 280, 21, 20, 76, 77, 57, 56, 1, 112, 0, 113, 132, 133, 188, 189, 168, 169, 224, 225, 244, 245, 281, 280, 22, 21, 76, 20, 77, 78, 132, 58, 57, 2, 113, 1, 114, 133, 134, 188, 189, 190, 244, 169, 170, 225, 226, 245, 246, 282, 281, 22, 77, 21, 78, 133, 59, 58, 3, 114, 2, 115, 134, 189, 190, 245, 170, 171, 226, 227, 246, 283, 282, 78, 22, 134, 59, 115, 3, 190, 246, 171, 227, 283, 23, 79, 20, 76, 132, 60, 4, 56, 0, 112, 116, 135, 188, 191, 168, 172, 224, 228, 244, 247, 280, 284, 24, 23, 79, 80, 21, 76, 77, 20, 132, 133, 61, 60, 5, 116, 4, 57, 1, 113, 117, 135, 136, 188, 189, 191, 192, 244, 169, 172, 173, 225, 228, 229, 245, 247, 248, 281, 285, 284, 30, 86, 142, 198, 24, 79, 23, 80, 22, 77, 78, 21, 133, 135, 134, 62, 61, 6, 117, 5, 58, 2, 114, 118, 254, 136, 189, 191, 190, 192, 245, 247, 170, 173, 174, 226, 229, 230, 246, 248, 282, 286, 285, 31, 87, 143, 199, 80, 24, 78, 22, 134, 136, 62, 118, 6, 59, 3, 115, 255, 190, 192, 246, 248, 171, 174, 227, 230, 283, 286, 30, 86, 26, 82, 20, 76, 132, 66, 10, 122, 56, 0, 112, 168, 142, 198, 138, 188, 194, 178, 234, 224, 244, 250, 254, 280, 290, 31, 30, 86, 87, 27, 26, 82, 83, 21, 76, 77, 20, 132, 133, 67, 66, 11, 122, 10, 123, 57, 1, 113, 169, 142, 143, 198, 199, 138, 139, 188, 189, 194, 195, 244, 178, 179, 234, 235, 225, 245, 250, 254, 251, 255, 281, 291, 290, 31, 30, 86, 87, 142, 27, 82, 26, 83, 138, 22, 77, 78, 21, 133, 134, 68, 67, 12, 123, 11, 124, 58, 2, 114, 170, 143, 198, 199, 254, 139, 194, 189, 190, 195, 245, 250, 179, 180, 235, 236, 226, 246, 251, 255, 282, 292, 291, 31, 87, 143, 83, 27, 139, 78, 22, 134, 68, 124, 12, 59, 3, 115, 171, 199, 255, 195, 190, 246, 251, 180, 236, 227, 283, 292, 30, 86, 76, 20, 132, 0, 112, 56, 168, 142, 198, 188, 244, 224, 254, 280, 300, 31, 30, 86, 87, 77, 76, 21, 132, 20, 133, 1, 113, 57, 169, 142, 143, 198, 199, 188, 189, 244, 245, 225, 254, 255, 281, 301, 300, 31, 86, 30, 87, 142, 78, 77, 22, 133, 21, 134, 2, 114, 58, 170, 143, 198, 199, 254, 189, 190, 245, 246, 226, 255, 282, 302, 301, 87, 31, 143, 78, 134, 22, 3, 115, 59, 171, 199, 255, 190, 246, 227, 283, 302, 56, 0, 57, 56, 0, 112, 1, 168, 224, 58, 57, 1, 113, 2, 169, 225, 59, 58, 2, 114, 3, 170, 226, 59, 3, 115, 171, 227, 0, 56, 112, 168, 224, 60, 4, 1, 0, 56, 57, 112, 113, 168, 169, 224, 225, 61, 60, 4, 116, 5, 2, 1, 57, 58, 113, 114, 172, 169, 170, 225, 228, 226, 62, 61, 5, 117, 6, 3, 2, 58, 59, 114, 115, 173, 170, 171, 226, 229, 227, 62, 6, 118, 3, 59, 115, 174, 171, 227, 230, 4, 60, 56, 112, 116, 168, 0, 172, 224, 228, 63, 7, 5, 4, 60, 61, 116, 57, 113, 117, 169, 172, 1, 173, 225, 228, 229, 64, 63, 7, 119, 8, 6, 5, 61, 62, 117, 58, 114, 118, 170, 175, 173, 2, 174, 226, 229, 231, 230, 64, 8, 120, 6, 62, 118, 59, 115, 171, 176, 174, 3, 227, 230, 232, 56, 0, 112, 168, 224, 57, 56, 1, 0, 112, 113, 168, 169, 224, 225, 58, 57, 56, 0, 2, 112, 1, 113, 114, 168, 169, 170, 224, 225, 226, 59, 58, 57, 1, 3, 113, 2, 114, 115, 169, 170, 171, 225, 226, 227, 59, 58, 2, 114, 3, 115, 170, 171, 226, 227, 59, 3, 115, 171, 227, 60, 4, 0, 56, 112, 116, 168, 172, 224, 228, 66, 10, 61, 60, 5, 1, 56, 57, 0, 112, 4, 113, 116, 117, 168, 169, 172, 173, 224, 225, 228, 229, 67, 66, 10, 122, 11, 62, 61, 60, 4, 6, 116, 2, 57, 58, 1, 113, 5, 114, 117, 118, 178, 169, 172, 170, 173, 174, 225, 228, 234, 226, 229, 230, 68, 67, 11, 123, 12, 62, 61, 5, 117, 3, 58, 59, 2, 114, 6, 115, 118, 179, 170, 173, 171, 174, 226, 229, 235, 227, 230, 68, 12, 124, 62, 6, 118, 59, 3, 115, 180, 171, 174, 227, 230, 236, 10, 66, 122, 63, 7, 4, 60, 112, 0, 56, 116, 119, 178, 172, 168, 175, 224, 228, 234, 231, 69, 13, 11, 10, 66, 67, 122, 123, 64, 63, 8, 5, 60, 61, 4, 116, 113, 1, 7, 57, 117, 119, 120, 178, 179, 234, 172, 173, 175, 169, 176, 225, 228, 229, 235, 231, 232, 70, 69, 13, 125, 14, 12, 11, 67, 68, 123, 124, 64, 63, 7, 119, 6, 61, 62, 5, 117, 114, 2, 8, 58, 118, 120, 181, 179, 180, 235, 173, 175, 174, 176, 170, 226, 229, 231, 237, 230, 236, 232, 70, 14, 126, 12, 68, 124, 64, 8, 120, 62, 6, 118, 115, 3, 59, 182, 180, 236, 174, 176, 171, 227, 230, 232, 238, 35, 91, 66, 10, 56, 0, 112, 122, 168, 178, 224, 234, 36, 35, 91, 92, 67, 66, 11, 10, 57, 56, 1, 112, 113, 147, 203, 0, 122, 123, 259, 178, 168, 169, 179, 224, 225, 234, 235, 37, 36, 35, 91, 92, 93, 147, 68, 67, 66, 10, 12, 122, 11, 58, 57, 2, 113, 114, 148, 203, 204, 259, 1, 123, 124, 260, 178, 179, 169, 170, 180, 225, 234, 226, 235, 236, 37, 36, 92, 93, 148, 68, 67, 11, 123, 12, 59, 58, 3, 114, 115, 149, 204, 205, 260, 2, 124, 261, 179, 180, 170, 171, 226, 235, 227, 236, 37, 93, 149, 68, 12, 124, 59, 115, 205, 261, 3, 180, 171, 227, 236, 38, 94, 35, 91, 69, 13, 10, 66, 60, 4, 116, 56, 112, 0, 122, 147, 203, 259, 125, 168, 178, 172, 181, 224, 228, 234, 237, 39, 38, 94, 95, 36, 35, 91, 92, 147, 72, 16, 70, 69, 14, 11, 66, 67, 10, 122, 13, 61, 60, 5, 116, 117, 57, 113, 1, 123, 148, 150, 203, 204, 206, 259, 260, 4, 125, 126, 169, 262, 178, 179, 181, 172, 173, 182, 225, 228, 234, 229, 235, 237, 238, 39, 38, 94, 95, 37, 36, 92, 93, 148, 150, 73, 72, 16, 128, 17, 70, 69, 13, 125, 12, 67, 68, 11, 123, 14, 62, 61, 6, 117, 118, 58, 114, 2, 124, 149, 151, 204, 206, 205, 207, 260, 262, 261, 5, 126, 170, 263, 184, 179, 181, 180, 182, 173, 174, 226, 229, 235, 237, 240, 230, 236, 238, 39, 95, 37, 93, 149, 151, 73, 17, 129, 70, 14, 126, 68, 12, 124, 62, 118, 59, 115, 3, 205, 207, 261, 263, 6, 171, 185, 180, 182, 174, 227, 230, 236, 238, 241, 40, 96, 38, 94, 35, 91, 147, 16, 72, 128, 71, 15, 13, 69, 122, 10, 66, 63, 7, 119, 60, 116, 4, 125, 150, 203, 206, 259, 262, 127, 172, 184, 181, 175, 178, 183, 228, 234, 231, 237, 240, 239, 40, 96, 39, 38, 94, 95, 150, 36, 92, 148, 74, 18, 17, 16, 72, 73, 128, 129, 71, 14, 69, 70, 13, 125, 123, 11, 15, 67, 64, 63, 8, 119, 120, 61, 117, 5, 126, 151, 152, 204, 206, 207, 208, 260, 262, 263, 7, 127, 173, 264, 184, 185, 240, 181, 182, 183, 175, 176, 179, 229, 235, 231, 237, 232, 238, 241, 239, 40, 96, 39, 95, 151, 37, 93, 149, 152, 74, 18, 130, 17, 73, 129, 71, 15, 127, 70, 14, 126, 124, 12, 68, 64, 120, 62, 118, 6, 205, 207, 208, 261, 263, 264, 8, 174, 186, 185, 241, 182, 183, 176, 180, 230, 236, 232, 238, 239, 242, 40, 96, 38, 94, 150, 18, 74, 72, 128, 130, 184, 15, 71, 125, 13, 69, 65, 9, 121, 63, 119, 7, 127, 152, 206, 208, 262, 264, 175, 16, 186, 240, 183, 177, 181, 231, 237, 233, 239, 242, 40, 96, 152, 39, 95, 151, 18, 74, 130, 73, 129, 185, 71, 15, 127, 126, 14, 70, 65, 121, 64, 120, 8, 207, 208, 263, 264, 9, 176, 186, 17, 241, 242, 183, 177, 182, 232, 238, 233, 239, 40, 96, 152, 74, 130, 186, 127, 15, 71, 65, 121, 9, 208, 264, 177, 18, 242, 183, 233, 239, 41, 97, 35, 91, 147, 72, 16, 66, 10, 122, 0, 56, 112, 168, 203, 259, 128, 178, 184, 224, 234, 240, 42, 41, 97, 98, 36, 35, 91, 92, 147, 148, 73, 72, 17, 16, 67, 66, 11, 122, 123, 153, 1, 57, 113, 169, 203, 204, 209, 259, 260, 10, 128, 129, 265, 184, 178, 179, 185, 225, 234, 235, 240, 241, 42, 41, 97, 98, 153, 37, 36, 92, 93, 148, 149, 73, 72, 16, 128, 17, 68, 67, 12, 123, 124, 154, 209, 2, 58, 114, 170, 204, 205, 210, 260, 265, 261, 11, 129, 266, 184, 185, 179, 180, 226, 235, 240, 236, 241, 42, 98, 154, 37, 93, 149, 73, 17, 129, 68, 124, 210, 3, 59, 115, 171, 205, 261, 266, 12, 185, 180, 227, 236, 241, 43, 99, 41, 97, 38, 94, 35, 91, 147, 150, 74, 18, 16, 72, 69, 13, 125, 66, 122, 10, 128, 153, 209, 4, 60, 116, 172, 203, 206, 259, 262, 265, 130, 178, 184, 181, 186, 228, 234, 237, 240, 242, 43, 99, 42, 41, 97, 98, 153, 39, 38, 94, 95, 150, 36, 92, 148, 151, 75, 19, 74, 17, 72, 73, 16, 128, 18, 70, 69, 14, 125, 126, 67, 123, 11, 129, 154, 155, 209, 210, 5, 61, 117, 173, 204, 206, 207, 211, 260, 262, 265, 263, 266, 13, 130, 179, 267, 184, 185, 186, 181, 182, 229, 235, 237, 240, 238, 241, 242, 43, 99, 42, 98, 154, 155, 39, 95, 151, 37, 93, 149, 75, 19, 131, 74, 18, 130, 73, 17, 129, 70, 126, 68, 124, 12, 210, 211, 6, 62, 118, 174, 205, 207, 261, 263, 266, 267, 14, 180, 187, 185, 186, 182, 230, 236, 238, 241, 242, 243, 43, 99, 41, 97, 153, 40, 96, 38, 94, 150, 152, 19, 75, 131, 18, 74, 128, 16, 72, 71, 15, 127, 69, 125, 13, 130, 155, 209, 211, 7, 63, 119, 175, 206, 208, 262, 265, 264, 267, 181, 187, 186, 183, 184, 231, 237, 240, 239, 242, 243, 43, 99, 155, 42, 98, 154, 40, 96, 152, 39, 95, 151, 19, 75, 131, 74, 18, 130, 129, 17, 73, 71, 127, 70, 126, 14, 210, 211, 8, 64, 120, 176, 207, 208, 263, 266, 264, 267, 15, 182, 187, 243, 186, 183, 185, 232, 238, 241, 239, 242, 43, 99, 155, 40, 96, 152, 75, 131, 187, 130, 18, 74, 71, 127, 15, 211, 9, 65, 121, 177, 208, 264, 267, 183, 19, 243, 186, 233, 239, 242, 44, 100, 41, 97, 153, 91, 147, 35, 203, 75, 19, 72, 16, 128, 10, 66, 122, 178, 209, 259, 265, 131, 184, 187, 234, 240, 243, 44, 100, 42, 41, 97, 98, 153, 154, 92, 148, 36, 204, 75, 19, 73, 72, 17, 128, 129, 156, 11, 67, 123, 179, 209, 210, 212, 260, 265, 266, 16, 131, 268, 187, 184, 185, 235, 240, 241, 243, 44, 100, 156, 42, 98, 154, 93, 149, 37, 205, 75, 19, 131, 73, 129, 212, 12, 68, 124, 180, 210, 261, 266, 268, 17, 187, 185, 236, 241, 243, 44, 100, 43, 99, 41, 97, 153, 155, 94, 150, 38, 206, 19, 75, 74, 18, 130, 72, 128, 16, 131, 156, 212, 13, 69, 125, 181, 209, 211, 265, 262, 267, 268, 184, 187, 186, 237, 240, 242, 243, 44, 100, 156, 43, 99, 155, 42, 98, 154, 95, 151, 39, 207, 75, 19, 131, 74, 130, 73, 129, 17, 212, 14, 70, 126, 182, 210, 211, 266, 263, 267, 268, 18, 185, 187, 186, 238, 241, 242, 243, 44, 100, 156, 43, 99, 155, 96, 152, 40, 208, 131, 19, 75, 74, 130, 18, 212, 15, 71, 127, 183, 211, 267, 268, 264, 186, 187, 239, 242, 243, 56, 112, 168, 0, 224, 57, 112, 113, 168, 169, 56, 1, 0, 224, 225, 58, 113, 112, 56, 114, 168, 0, 169, 170, 57, 2, 224, 1, 225, 226, 59, 114, 113, 57, 115, 169, 1, 170, 171, 58, 3, 225, 2, 226, 227, 115, 114, 58, 170, 2, 171, 59, 226, 3, 227, 115, 59, 171, 3, 227, 60, 116, 56, 0, 112, 172, 168, 4, 224, 228, 76, 20, 61, 116, 117, 57, 56, 0, 112, 1, 113, 168, 172, 173, 169, 60, 224, 5, 4, 225, 228, 229, 35, 91, 147, 203, 77, 76, 20, 132, 21, 62, 117, 116, 60, 118, 172, 58, 57, 1, 113, 2, 114, 259, 4, 188, 169, 173, 174, 170, 61, 225, 6, 228, 5, 244, 226, 229, 230, 36, 92, 148, 204, 78, 77, 21, 133, 22, 118, 117, 61, 173, 59, 58, 2, 114, 3, 115, 260, 5, 189, 170, 174, 171, 62, 226, 229, 6, 245, 227, 230, 37, 93, 149, 205, 78, 22, 134, 118, 62, 174, 59, 3, 115, 261, 6, 190, 171, 227, 230, 246, 35, 91, 147, 20, 76, 132, 63, 119, 60, 4, 112, 56, 0, 116, 203, 259, 188, 175, 172, 168, 224, 7, 228, 244, 231, 280, 36, 35, 91, 92, 147, 148, 79, 23, 21, 20, 76, 77, 132, 133, 64, 119, 120, 61, 60, 4, 116, 5, 113, 57, 1, 117, 203, 204, 259, 260, 188, 189, 244, 172, 175, 176, 173, 169, 63, 225, 228, 8, 7, 229, 245, 231, 232, 281, 38, 94, 150, 206, 37, 36, 92, 93, 148, 149, 80, 79, 23, 135, 24, 22, 21, 77, 78, 133, 134, 120, 119, 63, 175, 62, 61, 5, 117, 6, 114, 58, 2, 118, 204, 205, 260, 262, 7, 261, 191, 189, 190, 245, 173, 176, 174, 170, 64, 226, 229, 231, 8, 247, 230, 246, 232, 282, 39, 95, 151, 207, 37, 93, 149, 80, 24, 136, 22, 78, 134, 120, 64, 176, 62, 6, 118, 115, 59, 3, 205, 261, 263, 8, 192, 190, 246, 174, 171, 227, 230, 232, 248, 283, 38, 94, 35, 91, 147, 150, 23, 79, 76, 132, 135, 188, 65, 121, 63, 7, 116, 60, 4, 119, 203, 206, 259, 262, 20, 191, 244, 177, 175, 172, 228, 9, 231, 247, 233, 284, 39, 38, 94, 95, 150, 36, 92, 148, 151, 81, 25, 24, 23, 79, 80, 135, 77, 133, 136, 189, 121, 64, 63, 7, 119, 8, 117, 61, 5, 120, 204, 206, 207, 260, 262, 263, 191, 21, 192, 245, 247, 175, 177, 176, 173, 65, 229, 231, 9, 232, 248, 233, 285, 40, 96, 152, 208, 39, 95, 151, 37, 93, 149, 81, 25, 137, 24, 80, 136, 78, 134, 190, 121, 65, 177, 64, 8, 120, 118, 62, 6, 205, 207, 261, 263, 264, 9, 193, 192, 22, 246, 248, 176, 174, 230, 232, 233, 249, 286, 40, 96, 38, 94, 150, 152, 25, 81, 79, 135, 137, 191, 65, 9, 119, 63, 7, 121, 206, 208, 262, 264, 23, 193, 247, 177, 175, 231, 233, 249, 287, 40, 96, 152, 39, 95, 151, 25, 81, 137, 80, 136, 192, 65, 9, 121, 120, 64, 8, 207, 208, 263, 264, 193, 24, 248, 249, 177, 176, 232, 233, 288, 40, 96, 152, 81, 137, 193, 121, 65, 9, 208, 264, 25, 249, 177, 233, 289, 35, 91, 76, 20, 66, 122, 112, 0, 132, 147, 203, 259, 188, 168, 178, 56, 10, 224, 234, 244, 280, 36, 35, 91, 92, 77, 76, 21, 20, 67, 122, 123, 113, 112, 1, 56, 132, 147, 133, 148, 203, 204, 259, 260, 168, 188, 189, 169, 178, 179, 0, 66, 57, 224, 11, 10, 225, 234, 244, 235, 245, 281, 280, 37, 36, 35, 91, 92, 93, 147, 78, 77, 76, 20, 22, 132, 21, 68, 123, 122, 66, 124, 178, 114, 113, 2, 57, 133, 148, 134, 149, 203, 204, 205, 259, 10, 260, 261, 169, 188, 189, 190, 244, 170, 179, 180, 1, 67, 58, 225, 12, 234, 11, 226, 235, 245, 236, 246, 282, 281, 37, 36, 92, 93, 148, 78, 77, 21, 133, 22, 124, 123, 67, 179, 115, 114, 3, 58, 134, 149, 204, 205, 260, 11, 261, 170, 189, 190, 245, 171, 180, 2, 68, 59, 226, 235, 12, 227, 236, 246, 283, 282, 37, 93, 149, 78, 22, 134, 124, 68, 180, 115, 59, 205, 261, 12, 171, 190, 246, 3, 227, 236, 283, 38, 94, 35, 91, 79, 23, 20, 76, 132, 69, 125, 66, 10, 122, 116, 4, 147, 112, 0, 135, 150, 168, 203, 206, 259, 262, 188, 191, 172, 181, 178, 224, 60, 13, 228, 56, 234, 244, 237, 247, 280, 284, 39, 38, 94, 95, 36, 35, 91, 92, 147, 82, 26, 80, 79, 24, 21, 76, 77, 20, 132, 23, 133, 70, 125, 126, 67, 66, 10, 122, 11, 123, 117, 116, 5, 60, 148, 113, 1, 135, 150, 136, 151, 203, 169, 204, 206, 207, 259, 260, 262, 263, 172, 178, 188, 189, 191, 192, 244, 173, 181, 182, 179, 4, 69, 225, 61, 228, 234, 14, 13, 229, 57, 235, 245, 237, 247, 238, 248, 281, 285, 284, 41, 97, 153, 209, 39, 38, 94, 95, 37, 36, 92, 93, 148, 150, 83, 82, 26, 138, 27, 80, 79, 23, 135, 22, 77, 78, 21, 133, 24, 134, 126, 125, 69, 181, 68, 67, 11, 123, 12, 124, 265, 118, 117, 6, 61, 149, 114, 2, 136, 151, 204, 206, 170, 205, 207, 260, 262, 13, 261, 263, 194, 173, 179, 189, 191, 190, 192, 245, 247, 174, 182, 180, 5, 70, 226, 62, 229, 235, 237, 14, 250, 230, 58, 236, 246, 238, 248, 282, 286, 285, 42, 98, 154, 210, 39, 95, 37, 93, 149, 151, 83, 27, 139, 80, 24, 136, 78, 22, 134, 126, 70, 182, 68, 12, 124, 266, 118, 62, 115, 3, 205, 207, 171, 261, 263, 14, 195, 174, 180, 190, 192, 246, 248, 6, 227, 230, 236, 238, 251, 59, 283, 286, 41, 97, 153, 40, 96, 38, 94, 91, 35, 147, 26, 82, 138, 81, 25, 23, 79, 132, 20, 76, 135, 71, 127, 69, 13, 122, 66, 10, 125, 209, 119, 7, 150, 116, 4, 137, 152, 203, 172, 206, 208, 259, 262, 265, 264, 194, 191, 188, 193, 244, 175, 183, 181, 178, 228, 234, 63, 15, 231, 60, 237, 247, 250, 239, 249, 284, 290, 287, 42, 41, 97, 98, 153, 154, 40, 96, 39, 38, 94, 95, 150, 92, 36, 148, 84, 28, 27, 26, 82, 83, 138, 139, 81, 24, 79, 80, 23, 135, 133, 21, 25, 77, 136, 127, 70, 69, 13, 125, 14, 123, 67, 11, 126, 209, 210, 265, 120, 119, 8, 63, 151, 117, 5, 137, 152, 204, 206, 173, 207, 208, 260, 262, 263, 266, 264, 194, 195, 250, 175, 181, 191, 192, 193, 189, 245, 247, 176, 183, 182, 179, 7, 71, 229, 235, 64, 231, 237, 15, 232, 61, 238, 248, 251, 239, 249, 285, 291, 288, 287, 43, 99, 155, 211, 42, 98, 154, 40, 96, 39, 95, 151, 93, 37, 149, 152, 84, 28, 140, 27, 83, 139, 81, 25, 137, 80, 24, 136, 134, 22, 78, 127, 71, 183, 70, 14, 126, 124, 68, 12, 210, 266, 267, 120, 64, 118, 6, 205, 207, 208, 174, 261, 263, 264, 15, 196, 195, 251, 176, 182, 192, 193, 190, 246, 248, 249, 180, 8, 230, 236, 232, 238, 239, 252, 62, 286, 292, 288, 43, 99, 41, 97, 153, 155, 40, 96, 94, 38, 150, 28, 84, 82, 138, 140, 194, 25, 81, 135, 23, 79, 137, 71, 15, 125, 69, 13, 127, 209, 211, 265, 121, 9, 152, 119, 7, 206, 175, 208, 262, 264, 267, 26, 196, 250, 193, 191, 247, 177, 183, 181, 231, 237, 65, 233, 63, 239, 249, 252, 287, 293, 289, 43, 99, 155, 42, 98, 154, 40, 96, 152, 95, 39, 151, 28, 84, 140, 83, 139, 195, 81, 25, 137, 136, 24, 80, 71, 15, 127, 126, 70, 14, 210, 211, 266, 267, 121, 65, 120, 8, 207, 208, 176, 263, 264, 196, 27, 251, 252, 177, 183, 193, 192, 248, 249, 182, 9, 232, 238, 233, 239, 64, 288, 294, 289, 43, 99, 155, 96, 40, 152, 84, 140, 196, 137, 25, 81, 127, 71, 15, 211, 267, 121, 9, 208, 177, 264, 28, 252, 193, 249, 183, 233, 239, 65, 289, 295, 45, 101, 41, 97, 35, 91, 147, 82, 26, 76, 20, 132, 72, 128, 122, 10, 138, 153, 56, 0, 168, 203, 209, 259, 265, 112, 188, 194, 178, 184, 66, 224, 16, 234, 244, 240, 250, 280, 290, 46, 45, 101, 102, 42, 41, 97, 98, 36, 35, 91, 92, 147, 148, 83, 82, 27, 26, 77, 76, 21, 132, 133, 157, 213, 73, 128, 129, 123, 122, 11, 66, 20, 138, 153, 139, 154, 57, 1, 169, 203, 204, 209, 210, 259, 260, 265, 269, 266, 178, 194, 113, 188, 189, 195, 244, 179, 184, 185, 10, 72, 67, 234, 225, 17, 16, 235, 245, 240, 250, 241, 251, 281, 291, 290, 46, 45, 101, 102, 157, 42, 41, 97, 98, 153, 37, 36, 92, 93, 148, 149, 83, 82, 26, 138, 27, 78, 77, 22, 133, 134, 158, 213, 214, 269, 129, 128, 72, 184, 124, 123, 12, 67, 21, 139, 154, 209, 58, 2, 170, 204, 205, 210, 260, 265, 16, 261, 266, 270, 179, 194, 195, 114, 189, 190, 245, 250, 180, 185, 11, 73, 68, 235, 226, 240, 17, 236, 246, 241, 251, 282, 292, 291, 46, 102, 158, 42, 98, 154, 37, 93, 149, 83, 27, 139, 78, 134, 214, 270, 129, 73, 185, 124, 68, 22, 210, 59, 3, 171, 205, 261, 266, 17, 180, 195, 115, 190, 246, 251, 12, 236, 227, 241, 283, 292, 47, 103, 45, 101, 43, 99, 41, 97, 38, 94, 91, 147, 150, 35, 84, 28, 26, 82, 79, 23, 135, 76, 132, 20, 138, 157, 213, 269, 74, 130, 72, 16, 128, 125, 13, 153, 122, 10, 140, 155, 60, 4, 172, 178, 203, 206, 209, 211, 259, 188, 262, 265, 267, 194, 116, 191, 196, 244, 181, 186, 184, 234, 69, 228, 18, 237, 247, 66, 240, 250, 242, 252, 284, 290, 293, 47, 103, 46, 45, 101, 102, 157, 43, 99, 42, 41, 97, 98, 153, 39, 38, 94, 95, 150, 92, 148, 151, 36, 85, 29, 84, 27, 82, 83, 26, 138, 28, 80, 79, 24, 135, 136, 77, 133, 21, 139, 158, 159, 213, 214, 215, 269, 270, 130, 73, 72, 16, 128, 17, 129, 126, 125, 14, 69, 154, 123, 11, 23, 140, 155, 209, 61, 5, 173, 179, 204, 206, 207, 210, 211, 260, 262, 265, 189, 263, 266, 267, 271, 181, 184, 194, 195, 196, 117, 191, 192, 245, 247, 250, 182, 186, 185, 13, 74, 235, 70, 237, 229, 240, 18, 238, 248, 67, 241, 251, 242, 252, 285, 291, 294, 293, 47, 103, 46, 102, 158, 159, 44, 100, 156, 212, 43, 99, 42, 98, 154, 155, 39, 95, 151, 93, 149, 37, 85, 29, 141, 84, 28, 140, 83, 27, 139, 80, 136, 78, 134, 22, 214, 215, 270, 271, 130, 74, 186, 73, 17, 129, 268, 126, 70, 124, 12, 24, 210, 211, 62, 6, 174, 180, 205, 207, 261, 263, 266, 267, 190, 18, 197, 182, 185, 195, 196, 118, 192, 246, 248, 251, 252, 14, 236, 238, 230, 241, 242, 253, 68, 286, 292, 294, 47, 103, 45, 101, 157, 44, 100, 156, 43, 99, 97, 41, 153, 40, 96, 94, 150, 152, 38, 29, 85, 141, 28, 84, 138, 26, 82, 81, 25, 137, 79, 135, 23, 140, 159, 213, 215, 269, 271, 74, 18, 128, 72, 16, 130, 212, 127, 15, 155, 125, 13, 209, 63, 7, 175, 181, 206, 208, 211, 262, 265, 191, 264, 267, 268, 197, 196, 119, 193, 194, 247, 250, 183, 186, 184, 237, 240, 71, 231, 239, 249, 69, 242, 252, 253, 287, 293, 296, 295, 47, 103, 159, 46, 102, 158, 44, 100, 156, 43, 99, 155, 98, 42, 154, 40, 96, 152, 95, 151, 39, 29, 85, 141, 84, 28, 140, 139, 27, 83, 81, 137, 80, 136, 24, 214, 215, 270, 271, 74, 18, 130, 129, 73, 17, 212, 268, 127, 71, 126, 14, 25, 210, 211, 64, 8, 176, 182, 207, 208, 263, 266, 264, 267, 192, 197, 253, 183, 186, 196, 120, 193, 195, 248, 251, 249, 252, 185, 15, 238, 241, 239, 232, 242, 70, 288, 294, 297, 295, 47, 103, 159, 44, 100, 156, 99, 43, 155, 96, 152, 40, 85, 141, 197, 140, 28, 84, 81, 137, 25, 215, 271, 130, 74, 18, 212, 268, 127, 15, 211, 65, 9, 177, 183, 208, 264, 267, 193, 29, 253, 121, 196, 249, 252, 186, 239, 242, 233, 71, 289, 295, 298, 48, 104, 45, 101, 157, 44, 100, 41, 97, 153, 91, 147, 35, 203, 85, 29, 82, 26, 138, 20, 76, 132, 188, 213, 269, 75, 131, 128, 16, 141, 156, 66, 10, 178, 209, 212, 259, 265, 268, 122, 194, 197, 244, 184, 187, 72, 234, 19, 240, 250, 243, 253, 290, 296, 48, 104, 46, 45, 101, 102, 157, 158, 44, 100, 42, 41, 97, 98, 153, 154, 92, 148, 36, 204, 85, 29, 83, 82, 27, 138, 139, 160, 21, 77, 133, 189, 213, 214, 216, 269, 270, 131, 129, 128, 17, 72, 26, 141, 156, 67, 11, 179, 209, 210, 212, 260, 265, 266, 268, 272, 184, 197, 123, 194, 195, 245, 250, 185, 187, 16, 75, 73, 240, 235, 19, 241, 251, 243, 253, 291, 297, 296, 48, 104, 160, 46, 102, 158, 44, 100, 156, 42, 98, 154, 93, 149, 37, 205, 85, 29, 141, 83, 139, 216, 22, 78, 134, 190, 214, 270, 272, 131, 75, 187, 129, 73, 27, 212, 68, 12, 180, 210, 261, 266, 268, 19, 185, 197, 124, 195, 246, 251, 253, 17, 241, 236, 243, 292, 297, 48, 104, 47, 103, 45, 101, 157, 159, 44, 100, 43, 99, 97, 153, 155, 41, 94, 150, 38, 206, 29, 85, 84, 28, 140, 82, 138, 26, 141, 160, 216, 23, 79, 135, 191, 213, 215, 269, 271, 272, 75, 19, 131, 130, 18, 156, 128, 16, 69, 13, 181, 184, 209, 211, 212, 262, 265, 194, 267, 268, 197, 125, 196, 247, 250, 186, 187, 240, 74, 237, 242, 252, 72, 243, 253, 293, 296, 298, 48, 104, 160, 47, 103, 159, 46, 102, 158, 44, 100, 156, 43, 99, 155, 98, 154, 42, 95, 151, 39, 207, 85, 29, 141, 84, 140, 83, 139, 27, 216, 24, 80, 136, 192, 214, 215, 270, 271, 272, 75, 19, 131, 130, 74, 129, 17, 28, 212, 70, 14, 182, 185, 210, 211, 263, 266, 267, 268, 195, 186, 187, 197, 126, 196, 248, 251, 252, 253, 18, 241, 242, 238, 243, 73, 294, 297, 298, 48, 104, 160, 47, 103, 159, 100, 44, 156, 99, 155, 43, 96, 152, 40, 208, 141, 29, 85, 84, 140, 28, 216, 25, 81, 137, 193, 215, 271, 272, 131, 75, 19, 130, 18, 212, 71, 15, 183, 186, 211, 264, 267, 268, 196, 127, 197, 249, 252, 253, 187, 242, 243, 239, 74, 295, 298, 299, 35, 91, 76, 132, 112, 56, 147, 0, 203, 259, 168, 188, 20, 224, 244, 280, 36, 35, 91, 92, 77, 132, 133, 113, 56, 57, 147, 148, 1, 168, 203, 204, 112, 259, 260, 169, 188, 189, 76, 21, 20, 0, 224, 225, 244, 245, 281, 280, 37, 36, 91, 35, 92, 93, 147, 78, 133, 132, 76, 134, 188, 114, 57, 58, 148, 149, 2, 169, 203, 204, 205, 259, 113, 20, 260, 261, 170, 189, 190, 77, 22, 244, 21, 1, 225, 226, 245, 246, 282, 281, 37, 92, 36, 93, 148, 134, 133, 77, 189, 115, 58, 59, 149, 3, 170, 204, 205, 260, 114, 21, 261, 171, 190, 78, 245, 22, 2, 226, 227, 246, 283, 282, 93, 37, 149, 134, 78, 190, 59, 171, 205, 261, 115, 22, 246, 3, 227, 283, 38, 94, 35, 91, 147, 79, 135, 76, 20, 132, 116, 60, 150, 56, 112, 4, 0, 168, 203, 206, 259, 262, 172, 191, 188, 23, 224, 228, 244, 247, 280, 284, 39, 38, 94, 95, 36, 91, 92, 35, 147, 148, 86, 30, 80, 135, 136, 77, 76, 20, 132, 21, 133, 117, 60, 61, 150, 151, 57, 113, 5, 1, 169, 172, 203, 204, 206, 207, 259, 116, 260, 262, 263, 188, 173, 191, 192, 189, 79, 244, 24, 23, 225, 4, 228, 229, 245, 247, 248, 281, 285, 284, 45, 101, 157, 213, 39, 94, 38, 95, 37, 92, 93, 36, 148, 150, 149, 87, 86, 30, 142, 31, 136, 135, 79, 191, 78, 77, 21, 133, 22, 134, 269, 118, 61, 62, 151, 58, 114, 6, 2, 170, 173, 204, 206, 205, 207, 260, 262, 117, 23, 261, 263, 198, 189, 174, 192, 190, 80, 245, 247, 24, 254, 226, 5, 229, 230, 246, 248, 282, 286, 285, 46, 102, 158, 214, 95, 39, 93, 37, 149, 151, 87, 31, 143, 136, 80, 192, 78, 22, 134, 270, 62, 59, 115, 3, 171, 174, 205, 207, 261, 263, 118, 24, 199, 190, 246, 248, 255, 227, 6, 230, 283, 286, 45, 101, 157, 40, 96, 38, 94, 91, 147, 150, 30, 86, 142, 81, 137, 79, 23, 132, 76, 20, 135, 213, 119, 63, 152, 60, 116, 7, 4, 35, 172, 203, 206, 208, 259, 262, 269, 264, 198, 175, 193, 191, 188, 244, 25, 228, 231, 247, 254, 249, 284, 300, 287, 46, 45, 101, 102, 157, 158, 40, 96, 39, 94, 95, 38, 150, 92, 148, 151, 88, 32, 31, 30, 86, 87, 142, 143, 137, 80, 79, 23, 135, 24, 133, 77, 21, 136, 213, 214, 269, 120, 63, 64, 152, 61, 117, 8, 5, 36, 173, 204, 175, 206, 207, 208, 260, 262, 119, 263, 270, 264, 198, 199, 254, 191, 176, 193, 192, 189, 81, 245, 247, 25, 229, 7, 231, 232, 248, 255, 249, 285, 301, 288, 287, 47, 103, 159, 215, 46, 102, 158, 96, 40, 95, 39, 151, 93, 149, 152, 88, 32, 144, 31, 87, 143, 137, 81, 193, 80, 24, 136, 134, 78, 22, 214, 270, 271, 64, 62, 118, 6, 37, 174, 205, 176, 207, 208, 261, 263, 264, 120, 25, 200, 199, 255, 192, 190, 246, 248, 249, 256, 230, 8, 232, 286, 302, 288, 47, 103, 45, 101, 157, 159, 40, 96, 94, 150, 152, 32, 88, 86, 142, 144, 198, 81, 25, 135, 79, 23, 137, 213, 215, 269, 121, 65, 63, 119, 9, 7, 38, 175, 206, 208, 262, 264, 271, 30, 200, 254, 177, 193, 191, 247, 231, 233, 249, 256, 287, 303, 289, 47, 103, 159, 46, 102, 158, 96, 40, 152, 95, 151, 32, 88, 144, 87, 143, 199, 81, 25, 137, 136, 80, 24, 214, 215, 270, 271, 65, 64, 120, 8, 39, 176, 207, 177, 208, 263, 264, 121, 200, 31, 255, 256, 193, 192, 248, 249, 232, 9, 233, 288, 304, 289, 47, 103, 159, 96, 152, 88, 144, 200, 137, 81, 25, 215, 271, 65, 121, 9, 40, 177, 208, 264, 32, 256, 193, 249, 233, 289, 305, 45, 101, 41, 97, 35, 91, 147, 86, 30, 82, 138, 132, 20, 142, 157, 213, 122, 66, 153, 10, 56, 168, 112, 203, 209, 259, 265, 269, 178, 198, 188, 194, 76, 26, 224, 234, 0, 244, 250, 254, 280, 300, 290, 46, 45, 101, 102, 42, 41, 97, 98, 36, 91, 92, 35, 147, 148, 87, 86, 31, 30, 83, 138, 139, 133, 132, 21, 76, 142, 157, 143, 158, 213, 214, 123, 66, 67, 153, 154, 11, 178, 57, 169, 113, 203, 204, 209, 210, 259, 122, 260, 265, 269, 266, 270, 188, 179, 198, 199, 189, 194, 195, 20, 82, 77, 244, 27, 26, 225, 10, 234, 235, 1, 245, 250, 254, 251, 255, 281, 301, 300, 291, 290, 46, 45, 101, 102, 157, 42, 97, 41, 98, 153, 37, 92, 93, 36, 148, 149, 87, 86, 30, 142, 31, 139, 138, 82, 194, 134, 133, 22, 77, 143, 158, 213, 214, 269, 124, 67, 68, 154, 12, 179, 209, 58, 170, 114, 204, 205, 210, 260, 265, 123, 26, 261, 266, 270, 189, 198, 180, 199, 254, 190, 195, 21, 83, 78, 245, 250, 27, 226, 11, 235, 236, 2, 246, 251, 255, 282, 302, 301, 292, 291, 46, 102, 158, 98, 42, 154, 93, 37, 149, 87, 31, 143, 139, 83, 195, 134, 78, 214, 270, 68, 180, 210, 59, 171, 115, 205, 261, 266, 124, 27, 190, 199, 255, 22, 246, 251, 227, 12, 236, 3, 283, 302, 292, 47, 103, 45, 101, 43, 99, 41, 97, 153, 38, 94, 91, 35, 147, 150, 88, 32, 30, 86, 142, 84, 140, 82, 26, 138, 135, 23, 157, 132, 20, 144, 159, 188, 213, 215, 125, 69, 155, 66, 122, 13, 10, 178, 60, 172, 116, 203, 206, 209, 211, 259, 262, 265, 269, 267, 271, 181, 198, 200, 191, 196, 194, 244, 79, 28, 228, 234, 237, 4, 247, 76, 250, 254, 252, 256, 284, 290, 300, 303, 293, 47, 103, 46, 45, 101, 102, 157, 43, 99, 42, 97, 98, 41, 153, 154, 39, 94, 95, 38, 150, 92, 36, 148, 151, 89, 33, 88, 31, 86, 87, 30, 142, 32, 143, 140, 83, 82, 26, 138, 27, 139, 136, 135, 24, 79, 158, 133, 21, 144, 159, 213, 189, 214, 215, 269, 126, 69, 70, 155, 67, 123, 14, 11, 179, 181, 209, 61, 173, 117, 204, 206, 207, 210, 211, 260, 262, 265, 125, 263, 266, 270, 267, 271, 191, 194, 198, 182, 199, 200, 254, 192, 196, 195, 23, 84, 245, 80, 247, 250, 28, 229, 235, 13, 237, 238, 5, 248, 77, 251, 255, 252, 256, 285, 291, 301, 304, 303, 294, 293, 48, 104, 160, 216, 47, 103, 46, 102, 158, 159, 99, 43, 98, 42, 154, 155, 95, 39, 151, 93, 37, 149, 89, 33, 145, 88, 32, 144, 87, 31, 143, 140, 84, 196, 83, 27, 139, 272, 136, 80, 134, 22, 214, 215, 190, 270, 271, 70, 68, 124, 12, 180, 182, 210, 211, 62, 174, 118, 205, 207, 261, 263, 266, 267, 126, 28, 201, 192, 195, 199, 200, 255, 256, 24, 246, 248, 251, 252, 257, 230, 236, 14, 238, 6, 78, 286, 292, 302, 304, 294, 48, 104, 160, 47, 103, 101, 45, 157, 43, 99, 97, 153, 155, 40, 96, 94, 38, 150, 152, 33, 89, 145, 32, 88, 142, 30, 86, 144, 84, 28, 138, 82, 26, 140, 216, 137, 25, 159, 135, 23, 213, 191, 215, 269, 127, 71, 69, 125, 15, 13, 41, 181, 209, 63, 175, 119, 206, 208, 211, 262, 265, 264, 267, 271, 272, 201, 183, 200, 198, 254, 193, 196, 194, 247, 250, 81, 231, 237, 239, 7, 249, 79, 252, 256, 257, 287, 293, 303, 306, 305, 295, 48, 104, 160, 47, 103, 159, 102, 46, 158, 99, 43, 155, 98, 154, 96, 40, 152, 95, 39, 151, 33, 89, 145, 88, 32, 144, 143, 31, 87, 84, 28, 140, 139, 83, 27, 216, 272, 137, 81, 136, 24, 214, 215, 192, 270, 271, 71, 70, 126, 14, 42, 182, 210, 183, 211, 64, 176, 120, 207, 208, 263, 266, 264, 267, 127, 201, 257, 193, 196, 200, 199, 255, 256, 195, 25, 248, 251, 249, 252, 232, 238, 15, 239, 8, 80, 288, 294, 304, 307, 305, 295, 48, 104, 160, 103, 47, 159, 99, 155, 96, 40, 152, 89, 145, 201, 144, 32, 88, 140, 84, 28, 216, 272, 137, 25, 215, 193, 271, 71, 127, 15, 43, 183, 211, 65, 177, 121, 208, 264, 267, 33, 257, 200, 256, 196, 249, 252, 233, 239, 9, 81, 289, 295, 305, 308, 49, 105, 48, 104, 45, 101, 157, 44, 100, 41, 97, 153, 91, 147, 35, 203, 89, 33, 86, 30, 142, 85, 141, 138, 26, 145, 160, 76, 20, 188, 213, 216, 128, 72, 156, 16, 66, 178, 122, 209, 212, 259, 265, 269, 268, 272, 184, 132, 198, 201, 194, 197, 82, 244, 29, 234, 240, 10, 250, 254, 253, 257, 290, 300, 306, 296, 49, 105, 48, 104, 46, 45, 101, 102, 157, 158, 44, 100, 42, 97, 98, 41, 153, 154, 92, 148, 36, 204, 89, 33, 87, 86, 31, 142, 143, 161, 217, 141, 139, 138, 27, 82, 30, 145, 160, 77, 21, 189, 213, 214, 216, 269, 129, 72, 73, 156, 17, 184, 67, 179, 123, 209, 210, 212, 260, 265, 128, 266, 270, 268, 272, 273, 194, 185, 201, 133, 198, 199, 254, 195, 197, 26, 85, 83, 250, 245, 29, 235, 16, 240, 241, 11, 251, 255, 253, 257, 291, 301, 307, 306, 297, 296, 49, 105, 161, 48, 104, 160, 46, 102, 158, 100, 44, 156, 98, 42, 154, 93, 149, 37, 205, 89, 33, 145, 87, 143, 217, 273, 141, 85, 197, 139, 83, 31, 216, 78, 22, 190, 214, 270, 272, 73, 185, 212, 68, 180, 124, 210, 261, 266, 268, 129, 29, 195, 201, 134, 199, 255, 257, 27, 251, 246, 253, 236, 17, 241, 12, 292, 302, 307, 297, 49, 105, 48, 104, 47, 103, 101, 157, 159, 45, 44, 100, 156, 43, 99, 97, 41, 153, 155, 94, 150, 38, 206, 33, 89, 88, 32, 144, 86, 142, 30, 145, 161, 217, 273, 85, 29, 141, 140, 28, 160, 138, 26, 79, 23, 191, 194, 213, 215, 216, 269, 130, 74, 72, 128, 18, 16, 184, 69, 181, 125, 209, 198, 211, 212, 262, 265, 267, 271, 268, 272, 186, 201, 135, 200, 254, 196, 197, 250, 84, 247, 237, 240, 242, 13, 252, 256, 82, 253, 257, 293, 303, 296, 306, 308, 298, 49, 105, 161, 48, 104, 160, 47, 103, 159, 102, 158, 46, 100, 44, 156, 99, 43, 155, 98, 42, 154, 95, 151, 39, 207, 89, 33, 145, 88, 144, 87, 143, 31, 217, 273, 85, 29, 141, 140, 84, 139, 27, 32, 216, 80, 24, 192, 195, 214, 215, 270, 271, 272, 74, 73, 129, 17, 185, 186, 212, 70, 182, 126, 210, 199, 211, 263, 266, 267, 268, 130, 196, 197, 201, 136, 200, 255, 256, 257, 28, 251, 252, 248, 253, 238, 241, 18, 242, 14, 83, 294, 304, 297, 307, 308, 298, 49, 105, 161, 104, 48, 160, 103, 159, 47, 100, 156, 99, 43, 155, 96, 152, 40, 208, 145, 33, 89, 88, 144, 32, 217, 273, 141, 85, 29, 140, 28, 216, 81, 25, 193, 196, 215, 271, 272, 74, 130, 18, 44, 186, 212, 71, 183, 127, 211, 200, 264, 267, 268, 137, 201, 256, 257, 197, 252, 253, 249, 239, 242, 15, 84, 295, 305, 298, 308, 309, 45, 101, 91, 35, 147, 86, 142, 132, 76, 157, 20, 213, 56, 168, 203, 259, 269, 188, 198, 224, 30, 0, 244, 112, 254, 280, 315, 300, 46, 45, 101, 102, 92, 91, 36, 147, 35, 148, 87, 142, 143, 133, 76, 77, 157, 158, 21, 188, 213, 214, 57, 169, 203, 132, 204, 259, 260, 269, 270, 189, 198, 199, 86, 225, 31, 30, 1, 20, 244, 245, 113, 254, 255, 281, 316, 315, 301, 300, 46, 101, 45, 102, 157, 93, 92, 37, 148, 36, 149, 143, 142, 86, 198, 134, 77, 78, 158, 22, 189, 213, 214, 269, 58, 170, 204, 133, 30, 205, 260, 261, 270, 190, 199, 87, 226, 254, 31, 2, 21, 245, 246, 114, 255, 282, 317, 316, 302, 301, 102, 46, 158, 93, 149, 37, 143, 87, 199, 78, 190, 214, 270, 59, 171, 205, 134, 31, 261, 227, 255, 3, 22, 246, 115, 283, 317, 302, 47, 103, 45, 101, 157, 94, 38, 91, 35, 147, 150, 88, 144, 86, 30, 142, 135, 79, 159, 76, 132, 23, 20, 188, 213, 215, 60, 172, 203, 206, 259, 262, 269, 271, 191, 200, 198, 228, 32, 4, 244, 247, 254, 116, 256, 284, 300, 315, 318, 303, 47, 103, 46, 101, 102, 45, 157, 158, 95, 94, 39, 150, 38, 92, 36, 148, 151, 90, 34, 144, 87, 86, 30, 142, 31, 143, 136, 79, 80, 159, 77, 133, 24, 21, 189, 191, 213, 214, 215, 269, 61, 173, 204, 206, 135, 207, 260, 262, 263, 270, 271, 198, 192, 200, 199, 88, 229, 254, 32, 5, 245, 23, 247, 248, 255, 117, 256, 285, 301, 316, 319, 318, 304, 303, 49, 105, 161, 217, 103, 47, 102, 46, 158, 159, 95, 151, 39, 93, 37, 149, 90, 34, 146, 144, 88, 200, 87, 31, 143, 273, 80, 78, 134, 22, 190, 192, 214, 215, 270, 271, 62, 174, 205, 207, 136, 32, 261, 263, 202, 199, 230, 255, 256, 258, 6, 246, 24, 248, 118, 286, 302, 317, 319, 304, 49, 105, 161, 47, 103, 101, 157, 159, 96, 40, 94, 38, 150, 152, 34, 90, 146, 88, 32, 142, 86, 30, 144, 217, 137, 81, 79, 135, 25, 23, 45, 191, 213, 215, 269, 63, 175, 206, 208, 262, 264, 271, 273, 202, 193, 200, 198, 231, 254, 7, 247, 249, 256, 119, 258, 287, 303, 318, 310, 320, 305, 49, 105, 161, 103, 47, 159, 102, 158, 96, 152, 40, 95, 39, 151, 34, 90, 146, 88, 32, 144, 143, 87, 31, 217, 273, 81, 80, 136, 24, 46, 192, 214, 193, 215, 270, 271, 64, 176, 207, 208, 137, 263, 264, 202, 258, 200, 199, 232, 255, 256, 8, 248, 25, 249, 120, 288, 304, 319, 311, 320, 305, 49, 105, 161, 103, 159, 96, 40, 152, 90, 146, 202, 144, 88, 32, 217, 273, 81, 137, 25, 47, 193, 215, 271, 65, 177, 208, 264, 34, 258, 200, 233, 256, 9, 249, 121, 289, 305, 320, 312, 49, 105, 48, 104, 45, 101, 157, 97, 41, 153, 91, 35, 147, 203, 90, 34, 89, 145, 142, 30, 146, 161, 217, 138, 82, 160, 26, 76, 188, 132, 213, 216, 66, 178, 209, 265, 259, 269, 272, 273, 194, 202, 198, 201, 234, 86, 33, 244, 10, 250, 20, 254, 122, 257, 290, 258, 300, 315, 310, 321, 306, 49, 105, 48, 104, 46, 101, 102, 45, 157, 158, 98, 97, 42, 153, 41, 154, 92, 36, 148, 204, 90, 34, 145, 143, 142, 31, 86, 146, 161, 217, 139, 82, 83, 160, 27, 194, 77, 189, 133, 213, 214, 216, 269, 67, 179, 209, 138, 210, 265, 266, 260, 270, 272, 273, 198, 195, 202, 199, 201, 30, 89, 235, 87, 254, 33, 245, 11, 26, 250, 251, 21, 255, 123, 257, 258, 291, 301, 316, 311, 322, 310, 321, 307, 306, 49, 105, 161, 104, 48, 160, 102, 46, 158, 98, 154, 42, 93, 37, 149, 205, 90, 34, 146, 145, 89, 201, 143, 87, 217, 273, 83, 195, 216, 78, 190, 134, 214, 270, 272, 68, 180, 210, 139, 33, 266, 261, 199, 202, 258, 31, 236, 255, 257, 246, 12, 27, 251, 22, 124, 292, 302, 317, 311, 322, 307, 49, 105, 48, 104, 160, 47, 103, 101, 45, 157, 159, 99, 43, 97, 41, 153, 155, 94, 38, 150, 206, 34, 90, 146, 89, 33, 145, 144, 32, 161, 142, 30, 198, 217, 140, 84, 82, 138, 28, 26, 194, 79, 191, 135, 213, 215, 216, 269, 69, 181, 209, 211, 265, 267, 262, 271, 272, 273, 196, 202, 200, 201, 237, 254, 88, 247, 13, 250, 252, 23, 256, 86, 257, 258, 125, 293, 303, 318, 306, 321, 310, 312, 323, 308, 49, 105, 161, 104, 48, 160, 103, 47, 159, 102, 46, 158, 99, 155, 43, 98, 42, 154, 95, 39, 151, 207, 90, 34, 146, 89, 33, 145, 144, 88, 143, 31, 217, 199, 273, 84, 83, 139, 27, 195, 196, 216, 80, 192, 136, 214, 215, 270, 271, 272, 70, 182, 210, 211, 140, 266, 267, 263, 200, 201, 202, 258, 32, 238, 255, 256, 257, 248, 14, 251, 28, 252, 24, 87, 126, 294, 304, 319, 307, 322, 311, 312, 323, 308, 105, 49, 161, 104, 160, 103, 47, 159, 99, 43, 155, 96, 40, 152, 208, 146, 34, 90, 145, 89, 33, 144, 32, 217, 200, 273, 84, 140, 28, 48, 196, 216, 81, 193, 137, 215, 271, 272, 71, 183, 211, 267, 264, 202, 258, 201, 239, 256, 257, 249, 15, 252, 25, 88, 127, 295, 305, 320, 308, 323, 312, 313, 49, 105, 101, 45, 157, 35, 147, 91, 203, 90, 146, 142, 86, 161, 30, 217, 76, 188, 213, 269, 259, 273, 198, 202, 244, 34, 20, 254, 132, 258, 300, 315, 325, 310, 49, 105, 102, 101, 46, 157, 45, 158, 36, 148, 92, 204, 146, 143, 86, 87, 161, 31, 198, 217, 77, 189, 213, 142, 214, 269, 270, 260, 273, 199, 202, 90, 245, 34, 21, 30, 254, 255, 133, 258, 301, 316, 326, 325, 311, 310, 105, 49, 161, 102, 158, 46, 37, 149, 93, 205, 146, 90, 202, 87, 199, 217, 273, 78, 190, 214, 143, 34, 270, 261, 246, 258, 22, 31, 255, 134, 302, 317, 326, 311, 49, 105, 161, 103, 47, 101, 45, 157, 159, 38, 150, 94, 206, 90, 34, 146, 144, 88, 86, 142, 32, 30, 198, 217, 79, 191, 213, 215, 269, 271, 273, 262, 200, 202, 247, 23, 254, 256, 258, 135, 303, 318, 310, 325, 327, 312, 105, 49, 161, 103, 159, 47, 102, 46, 158, 39, 151, 95, 207, 90, 34, 146, 88, 87, 143, 31, 199, 200, 217, 273, 80, 192, 214, 215, 144, 270, 271, 263, 202, 248, 258, 24, 255, 32, 256, 136, 304, 319, 311, 326, 327, 312, 105, 161, 103, 47, 159, 40, 152, 96, 208, 146, 90, 34, 88, 144, 32, 49, 200, 217, 273, 81, 193, 215, 271, 264, 202, 249, 258, 25, 256, 137, 305, 320, 312, 327, 314, 112, 168, 0, 56, 224, 113, 0, 168, 169, 1, 56, 112, 57, 224, 225, 114, 1, 56, 168, 169, 170, 2, 0, 57, 113, 112, 224, 58, 225, 226, 115, 2, 57, 169, 170, 171, 3, 1, 58, 114, 113, 225, 59, 226, 227, 3, 58, 170, 171, 2, 59, 115, 114, 226, 227, 59, 171, 3, 115, 227, 116, 172, 0, 168, 112, 56, 4, 224, 60, 228, 91, 35, 117, 4, 172, 173, 1, 168, 0, 169, 113, 57, 5, 60, 116, 112, 224, 225, 61, 228, 229, 56, 92, 91, 35, 147, 36, 118, 5, 60, 172, 173, 174, 2, 169, 1, 203, 170, 114, 58, 6, 4, 259, 61, 117, 116, 113, 225, 228, 226, 62, 229, 230, 57, 93, 92, 36, 148, 37, 6, 61, 173, 174, 3, 170, 2, 204, 171, 115, 59, 5, 260, 62, 118, 117, 114, 226, 229, 227, 230, 58, 93, 37, 149, 62, 174, 171, 3, 205, 6, 261, 118, 115, 227, 230, 59, 35, 91, 147, 119, 175, 4, 172, 168, 56, 203, 116, 60, 7, 224, 259, 0, 112, 228, 63, 231, 280, 94, 38, 36, 35, 91, 92, 147, 148, 120, 7, 175, 176, 5, 172, 4, 173, 169, 57, 203, 204, 117, 61, 8, 259, 225, 260, 63, 119, 116, 228, 1, 113, 229, 64, 231, 232, 60, 281, 95, 94, 38, 150, 39, 37, 36, 92, 93, 148, 149, 8, 63, 175, 176, 6, 173, 5, 206, 174, 170, 58, 204, 205, 118, 62, 260, 7, 262, 226, 261, 64, 120, 119, 117, 229, 231, 2, 114, 230, 232, 61, 282, 95, 39, 151, 37, 93, 149, 64, 176, 174, 6, 207, 171, 59, 205, 261, 8, 263, 227, 120, 118, 230, 232, 3, 115, 62, 283, 38, 94, 91, 147, 150, 203, 121, 177, 7, 175, 172, 60, 35, 206, 119, 63, 9, 259, 228, 262, 4, 116, 231, 65, 233, 284, 96, 40, 39, 38, 94, 95, 150, 92, 148, 151, 204, 9, 177, 8, 175, 7, 176, 173, 61, 206, 36, 207, 120, 64, 260, 262, 229, 263, 65, 121, 119, 231, 5, 117, 232, 233, 63, 285, 96, 40, 152, 39, 95, 151, 93, 149, 205, 65, 177, 176, 8, 208, 174, 62, 207, 37, 261, 263, 9, 264, 230, 121, 120, 232, 233, 6, 118, 64, 286, 40, 96, 94, 150, 152, 206, 9, 177, 175, 63, 38, 208, 121, 65, 262, 231, 264, 7, 119, 233, 287, 40, 96, 152, 95, 151, 207, 177, 9, 176, 64, 208, 39, 263, 264, 232, 121, 233, 8, 120, 65, 288, 96, 152, 208, 177, 65, 40, 264, 233, 9, 121, 289, 91, 35, 147, 122, 178, 10, 112, 56, 168, 0, 203, 224, 66, 234, 259, 280, 92, 91, 36, 35, 147, 148, 123, 10, 178, 179, 11, 168, 113, 0, 57, 169, 1, 112, 203, 204, 259, 66, 122, 56, 224, 225, 67, 234, 235, 260, 280, 281, 93, 92, 91, 35, 37, 147, 36, 148, 149, 124, 11, 66, 178, 179, 180, 12, 169, 114, 1, 203, 58, 170, 2, 113, 204, 205, 259, 10, 260, 67, 123, 122, 234, 57, 225, 226, 68, 235, 236, 261, 281, 282, 93, 92, 36, 148, 37, 149, 12, 67, 179, 180, 170, 115, 2, 204, 59, 171, 3, 114, 205, 260, 11, 261, 68, 124, 123, 235, 58, 226, 227, 236, 282, 283, 93, 37, 149, 68, 180, 171, 3, 205, 115, 261, 12, 124, 236, 59, 227, 283, 94, 38, 35, 91, 147, 150, 125, 181, 10, 178, 122, 66, 13, 116, 168, 60, 172, 4, 203, 206, 224, 259, 0, 228, 234, 69, 56, 237, 262, 112, 280, 284, 97, 41, 95, 94, 39, 36, 91, 92, 35, 147, 38, 148, 150, 151, 126, 13, 181, 182, 11, 178, 10, 179, 123, 67, 14, 172, 117, 4, 203, 169, 61, 173, 5, 204, 116, 206, 207, 225, 259, 260, 262, 1, 69, 125, 122, 234, 60, 228, 229, 235, 70, 237, 57, 238, 263, 66, 113, 281, 284, 285, 98, 97, 41, 153, 42, 95, 94, 38, 150, 37, 92, 93, 36, 148, 39, 149, 151, 14, 69, 181, 182, 12, 179, 11, 209, 180, 124, 68, 173, 118, 5, 204, 170, 206, 62, 174, 6, 205, 117, 207, 226, 260, 262, 13, 265, 261, 263, 2, 70, 126, 125, 123, 235, 237, 61, 229, 230, 236, 238, 58, 67, 114, 282, 285, 286, 98, 42, 154, 95, 39, 151, 93, 37, 149, 70, 182, 180, 12, 210, 174, 6, 205, 171, 207, 118, 227, 261, 263, 14, 266, 3, 126, 124, 236, 238, 62, 230, 59, 68, 115, 283, 286, 41, 97, 153, 96, 40, 38, 94, 147, 35, 91, 150, 152, 127, 183, 13, 181, 178, 66, 209, 125, 69, 15, 119, 172, 63, 175, 7, 206, 203, 208, 228, 259, 234, 262, 265, 4, 10, 122, 231, 237, 71, 60, 239, 264, 116, 284, 290, 287, 99, 43, 42, 41, 97, 98, 153, 154, 96, 39, 94, 95, 38, 150, 148, 36, 40, 92, 151, 152, 15, 183, 14, 181, 13, 182, 179, 67, 209, 210, 126, 70, 265, 175, 120, 7, 206, 173, 64, 176, 8, 207, 119, 208, 204, 229, 260, 262, 235, 263, 266, 264, 5, 71, 127, 125, 237, 63, 231, 11, 123, 232, 238, 239, 61, 69, 117, 285, 291, 287, 288, 99, 43, 155, 42, 98, 154, 96, 40, 152, 95, 39, 151, 149, 37, 93, 71, 183, 182, 14, 211, 180, 68, 210, 266, 176, 8, 207, 174, 208, 120, 205, 230, 261, 263, 264, 15, 267, 236, 6, 127, 126, 238, 239, 64, 232, 12, 124, 62, 70, 118, 286, 292, 288, 43, 99, 97, 153, 155, 209, 40, 96, 150, 38, 94, 152, 15, 183, 181, 69, 41, 211, 127, 71, 265, 121, 175, 65, 177, 9, 208, 206, 231, 262, 237, 264, 267, 7, 13, 125, 233, 239, 63, 119, 287, 293, 289, 43, 99, 155, 98, 154, 210, 96, 40, 152, 151, 39, 95, 183, 15, 182, 70, 211, 42, 266, 267, 177, 9, 208, 176, 121, 207, 232, 263, 264, 238, 8, 127, 239, 65, 233, 14, 126, 64, 71, 120, 288, 294, 289, 99, 155, 211, 152, 40, 96, 183, 71, 43, 267, 177, 208, 233, 264, 239, 9, 15, 127, 65, 121, 289, 295, 50, 106, 97, 41, 91, 35, 147, 153, 128, 184, 16, 122, 66, 178, 10, 56, 112, 203, 0, 209, 224, 259, 234, 72, 240, 168, 265, 280, 290, 51, 50, 106, 107, 98, 97, 42, 41, 92, 91, 36, 147, 148, 162, 218, 35, 153, 154, 274, 129, 16, 184, 185, 17, 178, 123, 10, 67, 179, 11, 122, 209, 57, 113, 203, 204, 1, 210, 225, 259, 260, 265, 72, 128, 66, 234, 235, 73, 240, 241, 169, 266, 281, 290, 291, 51, 50, 106, 107, 162, 98, 97, 41, 153, 42, 93, 92, 37, 148, 149, 163, 218, 219, 274, 36, 154, 275, 17, 72, 184, 185, 179, 124, 11, 209, 68, 180, 12, 123, 210, 58, 114, 204, 205, 2, 226, 260, 265, 16, 261, 266, 73, 129, 128, 240, 67, 235, 236, 241, 170, 282, 291, 292, 51, 107, 163, 98, 42, 154, 93, 149, 219, 275, 37, 73, 185, 180, 12, 210, 124, 59, 115, 205, 3, 227, 261, 266, 17, 129, 241, 68, 236, 171, 283, 292, 52, 108, 50, 106, 99, 43, 41, 97, 94, 38, 150, 91, 147, 35, 153, 162, 218, 274, 155, 203, 130, 186, 16, 184, 128, 72, 18, 125, 178, 69, 181, 13, 209, 60, 116, 206, 4, 211, 228, 234, 259, 262, 265, 10, 237, 240, 74, 66, 242, 172, 267, 122, 284, 290, 293, 52, 108, 51, 50, 106, 107, 162, 100, 44, 99, 42, 97, 98, 41, 153, 43, 95, 94, 39, 150, 151, 92, 148, 36, 154, 163, 164, 218, 219, 220, 274, 275, 38, 155, 204, 276, 18, 186, 17, 184, 16, 185, 129, 73, 181, 126, 13, 209, 179, 70, 182, 14, 210, 125, 211, 61, 117, 206, 207, 5, 229, 235, 260, 262, 265, 263, 266, 267, 11, 74, 130, 128, 240, 69, 237, 238, 241, 242, 67, 173, 72, 123, 285, 291, 293, 294, 52, 108, 51, 107, 163, 164, 100, 44, 156, 99, 43, 155, 98, 42, 154, 95, 151, 93, 149, 37, 219, 220, 275, 276, 39, 205, 74, 186, 185, 17, 212, 182, 14, 210, 180, 211, 126, 62, 118, 207, 6, 230, 236, 261, 263, 266, 267, 18, 268, 12, 130, 129, 241, 242, 70, 238, 68, 174, 73, 124, 286, 292, 294, 52, 108, 50, 106, 162, 44, 100, 156, 43, 99, 153, 41, 97, 96, 40, 152, 94, 150, 38, 155, 164, 218, 220, 274, 276, 206, 18, 186, 184, 72, 212, 130, 74, 127, 181, 71, 183, 15, 211, 63, 119, 208, 7, 209, 231, 237, 262, 265, 240, 264, 267, 268, 13, 16, 128, 239, 242, 69, 175, 125, 287, 293, 296, 295, 52, 108, 164, 51, 107, 163, 44, 100, 156, 99, 43, 155, 154, 42, 98, 96, 152, 95, 151, 39, 219, 220, 275, 276, 40, 207, 186, 18, 185, 73, 212, 268, 183, 15, 211, 182, 127, 64, 120, 208, 8, 210, 232, 238, 263, 266, 264, 267, 241, 14, 130, 242, 71, 239, 17, 129, 70, 176, 74, 126, 288, 294, 297, 295, 52, 108, 164, 100, 156, 212, 155, 43, 99, 96, 152, 40, 220, 276, 208, 186, 74, 44, 268, 183, 65, 121, 9, 211, 233, 239, 264, 267, 242, 15, 18, 130, 71, 177, 127, 289, 295, 298, 53, 109, 50, 106, 162, 100, 44, 97, 41, 153, 35, 91, 147, 203, 218, 274, 156, 131, 187, 19, 128, 72, 184, 16, 66, 122, 209, 10, 212, 234, 259, 265, 240, 75, 243, 178, 268, 290, 296, 53, 109, 51, 50, 106, 107, 162, 163, 100, 44, 98, 97, 42, 153, 154, 165, 36, 92, 148, 204, 218, 219, 221, 274, 275, 41, 156, 277, 19, 187, 184, 129, 16, 73, 185, 17, 128, 212, 67, 123, 209, 210, 11, 235, 260, 265, 266, 268, 75, 131, 72, 240, 241, 243, 179, 291, 296, 297, 53, 109, 165, 51, 107, 163, 100, 44, 156, 98, 154, 221, 37, 93, 149, 205, 219, 275, 277, 42, 75, 187, 185, 17, 212, 129, 68, 124, 210, 12, 236, 261, 266, 268, 19, 131, 243, 73, 241, 180, 292, 297, 53, 109, 52, 108, 50, 106, 162, 164, 44, 100, 99, 43, 155, 97, 153, 41, 156, 165, 221, 38, 94, 150, 206, 218, 220, 274, 276, 277, 209, 19, 187, 131, 75, 130, 184, 74, 186, 18, 212, 69, 125, 211, 13, 237, 240, 262, 265, 267, 268, 16, 242, 243, 72, 181, 128, 293, 296, 298, 53, 109, 165, 52, 108, 164, 51, 107, 163, 100, 44, 156, 99, 155, 98, 154, 42, 221, 39, 95, 151, 207, 219, 220, 275, 276, 277, 43, 210, 187, 19, 186, 18, 212, 185, 130, 70, 126, 211, 14, 238, 241, 263, 266, 267, 268, 17, 131, 243, 74, 242, 73, 182, 75, 129, 294, 297, 298, 53, 109, 165, 52, 108, 164, 156, 44, 100, 99, 155, 43, 221, 40, 96, 152, 208, 220, 276, 277, 211, 187, 75, 186, 71, 127, 15, 212, 239, 242, 264, 267, 268, 243, 18, 19, 131, 74, 183, 130, 295, 298, 299, 91, 147, 132, 188, 20, 203, 112, 35, 0, 259, 168, 56, 76, 224, 244, 280, 92, 147, 148, 133, 20, 188, 189, 21, 56, 168, 203, 204, 113, 112, 0, 91, 36, 35, 1, 259, 260, 76, 132, 169, 57, 77, 244, 225, 224, 245, 280, 281, 93, 148, 147, 91, 149, 203, 35, 134, 21, 76, 188, 189, 190, 22, 57, 169, 204, 205, 114, 113, 1, 92, 20, 37, 259, 36, 2, 260, 261, 77, 133, 132, 170, 244, 58, 78, 245, 226, 225, 246, 281, 282, 149, 148, 92, 204, 36, 22, 77, 189, 190, 58, 170, 205, 115, 114, 2, 93, 21, 260, 37, 3, 261, 78, 134, 133, 171, 245, 59, 246, 227, 226, 282, 283, 149, 93, 205, 37, 78, 190, 59, 171, 115, 3, 22, 261, 134, 246, 227, 283, 94, 150, 91, 35, 147, 135, 191, 20, 188, 132, 76, 23, 206, 203, 112, 168, 116, 224, 0, 38, 4, 259, 262, 172, 60, 244, 79, 228, 56, 247, 280, 284, 101, 45, 95, 150, 151, 92, 91, 35, 147, 36, 148, 136, 23, 191, 192, 21, 188, 20, 189, 133, 77, 24, 203, 60, 172, 206, 207, 204, 113, 169, 117, 116, 4, 94, 225, 1, 259, 39, 38, 5, 260, 262, 263, 79, 135, 173, 132, 244, 61, 245, 80, 247, 229, 228, 57, 248, 76, 281, 284, 285, 50, 106, 162, 218, 102, 101, 45, 157, 46, 151, 150, 94, 206, 93, 92, 36, 148, 37, 149, 274, 38, 24, 79, 191, 192, 22, 189, 21, 213, 190, 134, 78, 204, 61, 173, 207, 205, 114, 170, 118, 117, 5, 95, 226, 2, 23, 260, 262, 39, 269, 6, 261, 263, 80, 136, 135, 174, 133, 245, 247, 62, 246, 248, 230, 229, 58, 77, 282, 285, 286, 51, 107, 163, 219, 102, 46, 158, 151, 95, 207, 93, 37, 149, 275, 39, 80, 192, 190, 22, 214, 205, 62, 174, 115, 171, 118, 6, 227, 3, 24, 261, 263, 270, 136, 134, 246, 248, 230, 59, 78, 283, 286, 50, 106, 162, 45, 101, 157, 96, 152, 94, 38, 147, 91, 35, 150, 218, 274, 137, 193, 23, 191, 188, 76, 213, 135, 79, 25, 208, 206, 203, 116, 172, 119, 228, 4, 259, 40, 7, 244, 262, 269, 264, 175, 63, 20, 132, 247, 81, 231, 60, 249, 284, 300, 315, 287, 51, 50, 106, 107, 162, 163, 103, 47, 46, 45, 101, 102, 157, 158, 152, 95, 94, 38, 150, 39, 148, 92, 36, 151, 218, 219, 274, 275, 25, 193, 24, 191, 23, 192, 189, 77, 213, 214, 136, 80, 269, 206, 63, 175, 208, 207, 204, 117, 173, 120, 119, 7, 96, 229, 5, 260, 262, 40, 8, 245, 263, 270, 264, 81, 137, 176, 135, 247, 64, 21, 133, 248, 249, 232, 231, 61, 79, 285, 301, 316, 287, 288, 52, 108, 164, 220, 51, 107, 163, 103, 47, 159, 46, 102, 158, 152, 96, 208, 95, 39, 151, 149, 93, 37, 219, 275, 276, 40, 81, 193, 192, 24, 215, 190, 78, 214, 270, 207, 64, 176, 205, 118, 174, 120, 8, 230, 6, 25, 261, 263, 264, 271, 246, 137, 136, 248, 249, 22, 134, 232, 62, 80, 286, 302, 317, 288, 52, 108, 50, 106, 162, 164, 47, 103, 101, 157, 159, 213, 96, 40, 150, 94, 38, 152, 218, 220, 274, 276, 25, 193, 191, 79, 45, 215, 137, 81, 269, 208, 206, 119, 175, 121, 231, 7, 262, 9, 247, 264, 271, 177, 65, 23, 135, 249, 233, 63, 287, 303, 318, 289, 52, 108, 164, 51, 107, 163, 47, 103, 159, 102, 158, 214, 96, 40, 152, 151, 95, 39, 219, 220, 275, 276, 193, 25, 192, 80, 215, 46, 270, 271, 208, 65, 177, 207, 120, 176, 121, 9, 232, 8, 263, 264, 248, 137, 249, 24, 136, 233, 64, 81, 288, 304, 319, 289, 52, 108, 164, 103, 159, 215, 152, 96, 40, 220, 276, 193, 81, 47, 271, 208, 121, 177, 233, 9, 264, 249, 25, 137, 65, 289, 305, 320, 50, 106, 101, 45, 97, 153, 147, 35, 157, 162, 218, 274, 138, 194, 26, 132, 76, 188, 20, 213, 203, 209, 122, 0, 112, 224, 91, 41, 10, 259, 265, 178, 66, 244, 82, 234, 56, 168, 250, 269, 280, 315, 290, 300, 51, 50, 106, 107, 102, 101, 46, 45, 98, 153, 154, 148, 147, 36, 91, 157, 162, 158, 163, 218, 219, 274, 275, 139, 26, 194, 195, 27, 203, 188, 133, 20, 77, 189, 21, 132, 213, 214, 204, 66, 178, 209, 210, 35, 123, 122, 10, 97, 1, 113, 225, 92, 259, 42, 41, 11, 260, 265, 269, 266, 82, 138, 179, 67, 76, 244, 245, 83, 250, 235, 234, 57, 169, 251, 270, 281, 290, 316, 315, 291, 300, 301, 51, 50, 106, 107, 162, 102, 101, 45, 157, 46, 154, 153, 97, 209, 149, 148, 37, 92, 158, 163, 218, 219, 274, 41, 275, 27, 82, 194, 195, 204, 189, 134, 21, 213, 78, 190, 22, 133, 214, 269, 205, 67, 179, 210, 36, 124, 123, 11, 98, 2, 114, 226, 26, 93, 260, 265, 42, 12, 261, 266, 270, 83, 139, 138, 180, 250, 68, 77, 245, 246, 251, 236, 235, 58, 170, 282, 291, 317, 316, 292, 301, 302, 51, 107, 163, 102, 46, 158, 154, 98, 210, 149, 93, 219, 275, 42, 83, 195, 205, 190, 22, 214, 134, 270, 68, 180, 37, 124, 12, 3, 115, 227, 27, 261, 266, 139, 251, 78, 246, 236, 59, 171, 283, 292, 317, 302, 52, 108, 50, 106, 103, 47, 45, 101, 157, 99, 155, 97, 41, 153, 150, 38, 162, 147, 35, 159, 164, 203, 218, 220, 274, 276, 140, 196, 26, 194, 138, 82, 28, 135, 188, 79, 191, 23, 213, 215, 244, 206, 211, 209, 122, 178, 125, 234, 4, 116, 228, 10, 259, 94, 43, 13, 262, 91, 265, 269, 267, 20, 181, 69, 247, 250, 84, 76, 237, 66, 60, 172, 252, 271, 132, 284, 290, 300, 315, 318, 293, 303, 52, 108, 51, 50, 106, 107, 162, 104, 48, 103, 46, 101, 102, 45, 157, 47, 158, 155, 98, 97, 41, 153, 42, 154, 151, 150, 39, 94, 163, 148, 36, 159, 164, 218, 204, 219, 220, 274, 275, 276, 28, 196, 27, 194, 26, 195, 139, 83, 206, 191, 209, 136, 23, 213, 189, 80, 192, 24, 214, 135, 215, 245, 269, 207, 69, 181, 211, 210, 123, 38, 179, 126, 125, 13, 99, 235, 5, 117, 229, 11, 260, 95, 262, 265, 43, 14, 263, 92, 266, 270, 267, 271, 21, 84, 140, 182, 138, 250, 70, 79, 247, 248, 251, 252, 77, 238, 237, 67, 61, 173, 82, 133, 285, 291, 301, 316, 293, 319, 318, 294, 303, 304, 53, 109, 165, 221, 52, 108, 51, 107, 163, 164, 104, 48, 160, 103, 47, 159, 102, 46, 158, 155, 99, 211, 98, 42, 154, 277, 151, 95, 149, 37, 219, 220, 205, 275, 276, 43, 84, 196, 195, 27, 216, 207, 192, 210, 24, 214, 190, 215, 136, 246, 270, 271, 70, 182, 124, 39, 180, 126, 14, 236, 6, 118, 230, 12, 261, 28, 263, 266, 267, 272, 93, 22, 140, 139, 251, 252, 80, 248, 78, 238, 68, 62, 174, 83, 134, 286, 292, 302, 317, 294, 319, 304, 53, 109, 165, 52, 108, 106, 50, 162, 48, 104, 160, 47, 103, 157, 45, 101, 159, 99, 43, 153, 97, 41, 155, 221, 152, 40, 164, 150, 38, 218, 206, 220, 274, 276, 277, 28, 196, 194, 82, 216, 140, 84, 137, 191, 81, 193, 25, 215, 213, 247, 269, 208, 211, 209, 125, 181, 127, 237, 7, 119, 231, 13, 262, 265, 96, 15, 250, 264, 94, 267, 271, 272, 23, 183, 71, 26, 138, 249, 252, 79, 239, 69, 63, 175, 135, 287, 293, 303, 318, 306, 321, 320, 295, 305, 53, 109, 165, 52, 108, 164, 107, 51, 163, 48, 104, 160, 103, 47, 159, 158, 46, 102, 99, 43, 155, 154, 98, 42, 221, 277, 152, 96, 151, 39, 219, 220, 207, 275, 276, 196, 28, 195, 83, 216, 272, 208, 193, 211, 25, 215, 192, 137, 214, 248, 270, 271, 71, 183, 210, 126, 40, 182, 127, 15, 238, 8, 120, 232, 14, 263, 266, 264, 267, 251, 95, 24, 140, 252, 81, 249, 27, 139, 80, 239, 70, 64, 176, 84, 136, 288, 294, 304, 319, 307, 322, 295, 320, 305, 53, 109, 165, 108, 52, 164, 104, 160, 216, 159, 47, 103, 155, 99, 43, 221, 277, 152, 40, 220, 208, 276, 196, 84, 48, 272, 193, 215, 249, 271, 211, 127, 183, 239, 9, 121, 233, 15, 264, 267, 252, 96, 25, 28, 140, 81, 71, 65, 177, 137, 289, 295, 305, 320, 308, 323, 54, 110, 53, 109, 50, 106, 162, 104, 48, 101, 45, 157, 100, 156, 153, 41, 160, 165, 91, 35, 203, 218, 221, 274, 277, 141, 197, 29, 138, 82, 194, 26, 76, 147, 132, 213, 20, 216, 244, 209, 212, 128, 10, 122, 234, 97, 259, 44, 16, 265, 269, 268, 184, 72, 250, 85, 240, 66, 178, 253, 188, 272, 290, 300, 315, 321, 296, 306, 54, 110, 53, 109, 51, 50, 106, 107, 162, 163, 104, 48, 102, 101, 46, 157, 158, 166, 222, 156, 154, 153, 42, 97, 45, 160, 165, 92, 36, 204, 218, 219, 221, 274, 275, 277, 278, 29, 197, 209, 194, 139, 26, 83, 195, 27, 138, 216, 77, 148, 133, 213, 214, 21, 245, 269, 210, 72, 184, 212, 41, 129, 128, 16, 100, 11, 123, 235, 98, 265, 260, 44, 17, 266, 270, 268, 272, 85, 141, 185, 73, 82, 250, 251, 253, 241, 240, 67, 179, 189, 291, 301, 316, 296, 322, 321, 297, 306, 307, 54, 110, 166, 53, 109, 165, 51, 107, 163, 104, 48, 160, 102, 158, 222, 278, 156, 100, 212, 154, 98, 46, 221, 93, 37, 205, 219, 275, 277, 44, 85, 197, 210, 195, 27, 216, 139, 78, 149, 134, 214, 22, 246, 270, 272, 73, 185, 42, 129, 17, 12, 124, 236, 29, 266, 261, 268, 141, 253, 83, 251, 241, 68, 180, 190, 292, 302, 317, 297, 322, 307, 54, 110, 53, 109, 52, 108, 106, 162, 164, 50, 48, 104, 103, 47, 159, 101, 157, 45, 160, 166, 222, 278, 100, 44, 156, 155, 43, 165, 153, 41, 94, 38, 206, 209, 218, 220, 221, 274, 213, 276, 277, 29, 197, 141, 85, 140, 194, 84, 196, 28, 216, 79, 150, 135, 215, 23, 247, 250, 269, 211, 212, 128, 184, 130, 240, 13, 125, 237, 16, 265, 99, 262, 18, 267, 271, 97, 268, 272, 26, 186, 74, 252, 253, 82, 242, 72, 69, 181, 191, 138, 293, 303, 318, 296, 306, 321, 323, 298, 308, 54, 110, 166, 53, 109, 165, 52, 108, 164, 107, 163, 51, 104, 48, 160, 103, 159, 102, 158, 46, 222, 278, 100, 44, 156, 155, 99, 154, 42, 47, 221, 95, 39, 207, 210, 219, 220, 275, 276, 277, 214, 197, 29, 211, 196, 212, 28, 216, 195, 140, 80, 151, 136, 215, 24, 248, 251, 270, 271, 272, 74, 186, 129, 43, 185, 130, 18, 241, 14, 126, 238, 17, 266, 267, 263, 268, 98, 27, 141, 253, 84, 252, 83, 242, 73, 70, 182, 192, 85, 139, 294, 304, 319, 297, 307, 322, 298, 323, 308, 54, 110, 166, 109, 53, 165, 108, 164, 52, 160, 48, 104, 103, 159, 47, 222, 278, 156, 100, 44, 155, 43, 221, 96, 40, 208, 211, 220, 276, 277, 215, 197, 85, 196, 81, 152, 137, 25, 216, 249, 252, 271, 272, 212, 130, 186, 242, 15, 127, 239, 18, 267, 268, 264, 253, 99, 28, 29, 141, 84, 74, 71, 183, 193, 140, 295, 305, 320, 298, 308, 323, 309, 324, 50, 106, 101, 157, 147, 91, 162, 35, 218, 274, 142, 198, 30, 203, 213, 132, 45, 0, 56, 20, 259, 269, 188, 76, 86, 112, 244, 168, 254, 224, 280, 300, 315, 51, 50, 106, 107, 102, 157, 158, 148, 91, 92, 162, 163, 36, 203, 218, 219, 147, 274, 275, 143, 30, 198, 199, 31, 204, 76, 188, 213, 214, 133, 132, 20, 101, 46, 45, 1, 57, 21, 35, 259, 260, 269, 270, 86, 142, 189, 77, 87, 254, 113, 245, 244, 169, 255, 225, 281, 300, 301, 316, 315, 51, 106, 50, 107, 162, 158, 157, 101, 213, 149, 92, 93, 163, 37, 204, 218, 219, 274, 148, 45, 275, 31, 86, 198, 199, 205, 77, 189, 214, 134, 133, 21, 102, 30, 269, 46, 2, 58, 22, 36, 260, 261, 270, 87, 143, 142, 190, 254, 78, 255, 114, 246, 245, 170, 226, 282, 301, 302, 317, 316, 107, 51, 163, 158, 102, 214, 93, 205, 219, 275, 149, 46, 87, 199, 78, 190, 134, 22, 31, 270, 3, 59, 37, 261, 143, 255, 115, 246, 171, 227, 283, 302, 317, 52, 108, 50, 106, 162, 103, 159, 101, 45, 157, 150, 94, 164, 91, 147, 38, 35, 203, 218, 220, 274, 276, 144, 200, 30, 198, 142, 86, 32, 206, 215, 213, 132, 188, 135, 244, 20, 47, 4, 60, 259, 23, 262, 269, 271, 191, 79, 254, 88, 116, 247, 76, 172, 256, 228, 284, 300, 315, 303, 318, 52, 108, 51, 106, 107, 50, 162, 163, 105, 49, 159, 102, 101, 45, 157, 46, 158, 151, 94, 95, 164, 92, 148, 39, 36, 204, 206, 218, 219, 220, 274, 150, 275, 276, 32, 200, 31, 198, 30, 199, 143, 87, 213, 207, 79, 191, 215, 214, 133, 189, 136, 135, 23, 103, 245, 21, 269, 47, 5, 61, 260, 24, 38, 262, 263, 270, 271, 88, 144, 192, 142, 254, 80, 255, 256, 117, 248, 247, 77, 173, 86, 229, 285, 301, 316, 303, 304, 319, 318, 54, 110, 166, 222, 108, 52, 107, 51, 163, 164, 105, 49, 161, 159, 103, 215, 102, 46, 158, 278, 95, 93, 149, 37, 205, 207, 219, 220, 275, 276, 151, 47, 88, 200, 199, 31, 217, 214, 80, 192, 134, 190, 136, 24, 246, 22, 32, 270, 271, 273, 6, 62, 261, 39, 263, 144, 143, 255, 256, 118, 248, 78, 174, 87, 230, 286, 302, 317, 304, 319, 54, 110, 166, 52, 108, 106, 162, 164, 49, 105, 161, 103, 47, 157, 101, 45, 159, 222, 152, 96, 94, 150, 40, 38, 50, 206, 218, 220, 274, 276, 278, 32, 200, 198, 86, 217, 144, 88, 208, 215, 213, 135, 191, 137, 247, 23, 269, 7, 63, 262, 25, 254, 264, 271, 273, 193, 81, 30, 142, 256, 119, 249, 79, 175, 231, 287, 303, 318, 310, 325, 305, 320, 54, 110, 166, 108, 52, 164, 107, 163, 49, 105, 161, 103, 47, 159, 158, 102, 46, 222, 278, 96, 95, 151, 39, 51, 207, 219, 208, 220, 275, 276, 152, 200, 32, 199, 87, 217, 273, 215, 81, 193, 214, 136, 192, 137, 25, 248, 24, 270, 271, 8, 64, 263, 40, 255, 264, 144, 256, 31, 143, 120, 249, 80, 176, 88, 232, 288, 304, 319, 311, 326, 305, 320, 54, 110, 166, 108, 164, 105, 161, 217, 159, 103, 47, 222, 278, 96, 152, 40, 52, 208, 220, 276, 200, 88, 49, 273, 215, 137, 193, 249, 25, 271, 9, 65, 264, 256, 32, 144, 121, 81, 177, 233, 289, 305, 320, 312, 327, 54, 110, 53, 109, 50, 106, 162, 105, 49, 104, 160, 157, 45, 161, 166, 222, 153, 97, 165, 41, 91, 203, 147, 218, 221, 274, 277, 278, 145, 201, 33, 142, 86, 209, 198, 30, 217, 213, 216, 138, 20, 132, 244, 101, 48, 259, 10, 66, 26, 265, 35, 269, 272, 194, 82, 254, 89, 122, 250, 76, 178, 188, 257, 273, 234, 290, 300, 315, 325, 306, 321, 310, 54, 110, 53, 109, 51, 106, 107, 50, 162, 163, 105, 49, 160, 158, 157, 46, 101, 161, 166, 222, 154, 97, 98, 165, 42, 209, 92, 204, 148, 218, 219, 221, 274, 153, 275, 277, 278, 33, 201, 213, 198, 143, 30, 87, 210, 199, 31, 142, 217, 214, 82, 194, 216, 45, 139, 138, 26, 104, 21, 133, 245, 102, 269, 48, 260, 11, 67, 27, 41, 265, 266, 36, 270, 272, 273, 89, 145, 195, 83, 86, 254, 255, 257, 123, 251, 250, 77, 179, 189, 235, 291, 301, 316, 306, 326, 325, 307, 322, 310, 311, 321, 54, 110, 166, 109, 53, 165, 107, 51, 163, 105, 49, 161, 160, 104, 216, 158, 102, 222, 278, 98, 210, 221, 93, 205, 149, 219, 275, 277, 154, 48, 89, 201, 214, 199, 31, 217, 143, 273, 83, 195, 46, 139, 27, 22, 134, 246, 33, 270, 272, 261, 12, 68, 42, 266, 37, 145, 257, 87, 255, 124, 251, 78, 180, 190, 236, 292, 302, 317, 307, 326, 311, 322, 54, 110, 53, 109, 165, 52, 108, 106, 50, 162, 164, 49, 105, 161, 104, 48, 160, 159, 47, 166, 157, 45, 213, 222, 155, 99, 97, 153, 43, 41, 209, 94, 206, 150, 218, 220, 221, 274, 276, 277, 278, 33, 201, 145, 89, 144, 198, 88, 211, 200, 32, 217, 254, 215, 216, 138, 194, 140, 250, 23, 135, 247, 26, 269, 103, 262, 13, 69, 265, 28, 267, 38, 271, 101, 272, 273, 30, 196, 84, 256, 257, 86, 125, 252, 82, 79, 181, 191, 142, 237, 293, 303, 318, 306, 321, 310, 325, 327, 308, 323, 312, 54, 110, 166, 109, 53, 165, 108, 52, 164, 107, 51, 163, 105, 49, 161, 104, 48, 160, 159, 103, 158, 46, 222, 214, 278, 99, 98, 154, 42, 210, 211, 221, 95, 207, 151, 219, 220, 275, 276, 277, 155, 201, 33, 215, 200, 216, 32, 217, 199, 144, 255, 273, 84, 196, 139, 47, 195, 140, 28, 251, 24, 136, 248, 27, 270, 271, 272, 263, 14, 70, 266, 43, 267, 39, 102, 31, 145, 257, 88, 256, 87, 126, 252, 83, 80, 182, 192, 89, 143, 238, 294, 304, 319, 307, 322, 311, 326, 308, 327, 312, 323, 110, 54, 166, 109, 165, 108, 52, 164, 161, 49, 105, 160, 104, 48, 159, 47, 222, 215, 278, 99, 155, 43, 53, 211, 221, 96, 208, 152, 220, 276, 277, 201, 89, 200, 217, 256, 273, 216, 140, 196, 252, 25, 137, 249, 28, 271, 272, 264, 15, 71, 267, 257, 40, 103, 32, 33, 145, 88, 127, 84, 81, 183, 193, 144, 239, 295, 305, 320, 308, 323, 312, 327, 313, 328, 54, 110, 106, 50, 162, 105, 161, 157, 101, 166, 45, 222, 91, 203, 218, 274, 278, 146, 202, 34, 213, 217, 142, 259, 49, 35, 20, 76, 30, 269, 147, 273, 315, 198, 86, 90, 132, 254, 188, 258, 244, 300, 330, 310, 325, 54, 110, 107, 106, 51, 162, 50, 163, 161, 158, 101, 102, 166, 46, 213, 222, 92, 204, 218, 157, 219, 274, 275, 278, 34, 202, 214, 86, 198, 217, 143, 142, 30, 105, 260, 49, 36, 21, 77, 31, 45, 269, 270, 148, 273, 316, 90, 146, 199, 87, 258, 133, 255, 254, 189, 245, 301, 310, 331, 330, 311, 326, 325, 110, 54, 166, 107, 163, 51, 161, 105, 217, 102, 214, 222, 278, 93, 205, 219, 158, 49, 275, 90, 202, 87, 199, 143, 31, 261, 34, 273, 37, 22, 78, 46, 270, 149, 317, 146, 258, 134, 255, 190, 246, 302, 311, 331, 326, 54, 110, 166, 108, 52, 106, 50, 162, 164, 105, 49, 161, 159, 103, 101, 157, 47, 45, 213, 222, 94, 206, 218, 220, 274, 276, 278, 34, 202, 146, 90, 215, 217, 142, 198, 144, 254, 262, 30, 38, 23, 79, 269, 32, 271, 273, 150, 318, 200, 88, 258, 135, 256, 86, 191, 247, 303, 310, 325, 330, 332, 312, 327, 110, 54, 166, 108, 164, 52, 107, 51, 163, 105, 49, 161, 103, 102, 158, 46, 214, 215, 222, 278, 95, 207, 219, 220, 159, 275, 276, 202, 34, 217, 88, 200, 143, 199, 144, 32, 255, 263, 31, 273, 39, 24, 80, 270, 47, 271, 151, 319, 146, 258, 136, 256, 87, 192, 90, 248, 304, 311, 326, 331, 312, 332, 327, 110, 166, 108, 52, 164, 161, 105, 49, 103, 159, 47, 54, 215, 222, 278, 96, 208, 220, 276, 202, 90, 217, 144, 200, 256, 264, 32, 273, 40, 25, 81, 271, 258, 152, 320, 34, 146, 137, 88, 193, 249, 305, 312, 327, 332, 314, 329, 147, 203, 35, 168, 0, 56, 224, 91, 259, 112, 280, 148, 35, 203, 204, 36, 169, 91, 1, 224, 147, 168, 57, 225, 0, 92, 259, 56, 260, 113, 112, 280, 281, 149, 36, 91, 203, 204, 205, 37, 35, 170, 92, 2, 225, 148, 147, 259, 169, 58, 226, 1, 93, 260, 57, 261, 114, 113, 281, 282, 37, 92, 204, 205, 36, 171, 93, 3, 226, 149, 148, 260, 170, 59, 227, 2, 261, 58, 115, 114, 282, 283, 93, 205, 37, 227, 149, 261, 171, 3, 59, 115, 283, 150, 206, 35, 203, 147, 91, 38, 172, 4, 0, 168, 112, 60, 228, 224, 259, 94, 262, 116, 56, 280, 284, 106, 50, 151, 38, 206, 207, 36, 203, 35, 204, 148, 92, 39, 173, 94, 5, 228, 150, 1, 147, 169, 259, 113, 172, 61, 229, 225, 4, 260, 95, 262, 60, 263, 91, 117, 57, 116, 281, 284, 285, 107, 106, 50, 162, 51, 39, 94, 206, 207, 37, 204, 36, 218, 205, 149, 93, 38, 274, 174, 95, 6, 229, 151, 2, 150, 148, 170, 260, 114, 262, 173, 62, 230, 226, 5, 261, 263, 61, 92, 118, 58, 117, 282, 285, 286, 107, 51, 163, 95, 207, 205, 37, 219, 39, 275, 230, 3, 151, 149, 171, 261, 115, 263, 174, 227, 6, 62, 93, 59, 118, 283, 286, 50, 106, 162, 152, 208, 38, 206, 203, 91, 218, 150, 94, 40, 259, 274, 175, 7, 4, 172, 116, 63, 35, 231, 228, 147, 262, 96, 264, 119, 60, 284, 315, 287, 108, 52, 51, 50, 106, 107, 162, 163, 40, 208, 39, 206, 38, 207, 204, 92, 218, 219, 151, 95, 274, 260, 275, 176, 96, 8, 231, 152, 5, 150, 173, 262, 117, 175, 64, 36, 232, 229, 148, 7, 263, 264, 63, 94, 120, 61, 119, 285, 316, 287, 288, 108, 52, 164, 51, 107, 163, 96, 208, 207, 39, 220, 205, 93, 219, 275, 40, 276, 261, 232, 6, 152, 151, 174, 263, 118, 264, 176, 37, 230, 149, 8, 64, 95, 62, 120, 286, 317, 288, 52, 108, 106, 162, 164, 218, 40, 208, 206, 94, 50, 220, 152, 96, 274, 262, 276, 177, 9, 7, 175, 119, 65, 38, 233, 231, 150, 264, 121, 63, 287, 318, 289, 52, 108, 164, 107, 163, 219, 208, 40, 207, 95, 220, 51, 275, 276, 263, 233, 8, 152, 176, 264, 120, 177, 39, 232, 151, 9, 65, 96, 64, 121, 288, 319, 289, 108, 164, 220, 208, 96, 52, 276, 264, 9, 177, 121, 40, 233, 152, 65, 289, 320, 106, 50, 162, 153, 209, 41, 147, 91, 203, 35, 218, 178, 10, 66, 168, 224, 234, 259, 97, 56, 265, 274, 122, 112, 280, 0, 290, 315, 107, 106, 51, 50, 162, 163, 154, 41, 209, 210, 42, 203, 148, 35, 92, 204, 36, 147, 218, 219, 274, 179, 97, 11, 234, 153, 178, 91, 259, 67, 169, 225, 235, 260, 10, 98, 265, 57, 66, 266, 275, 123, 113, 122, 281, 1, 290, 291, 315, 316, 107, 106, 50, 162, 51, 163, 42, 97, 209, 210, 204, 149, 36, 218, 93, 205, 37, 148, 219, 274, 41, 275, 180, 98, 12, 235, 154, 153, 265, 179, 92, 260, 68, 170, 226, 236, 261, 11, 266, 58, 67, 124, 114, 123, 282, 2, 291, 292, 316, 317, 107, 51, 163, 98, 210, 205, 37, 219, 149, 275, 42, 236, 154, 266, 180, 93, 261, 171, 227, 12, 59, 68, 115, 124, 283, 3, 292, 317, 108, 52, 50, 106, 162, 164, 155, 211, 41, 209, 153, 97, 43, 150, 203, 94, 206, 38, 218, 220, 259, 274, 181, 35, 13, 10, 178, 122, 69, 172, 228, 237, 234, 262, 265, 99, 91, 60, 267, 276, 147, 125, 66, 116, 284, 4, 290, 315, 293, 318, 109, 53, 108, 51, 106, 107, 50, 162, 52, 163, 164, 43, 211, 42, 209, 41, 210, 154, 98, 206, 151, 38, 218, 204, 95, 207, 39, 219, 150, 220, 260, 274, 275, 276, 182, 36, 99, 14, 237, 155, 11, 153, 179, 265, 123, 181, 94, 262, 70, 173, 229, 238, 235, 263, 13, 266, 267, 92, 61, 69, 97, 148, 126, 67, 117, 125, 285, 5, 291, 316, 293, 294, 318, 319, 109, 53, 165, 108, 52, 164, 107, 51, 163, 99, 211, 210, 42, 221, 207, 39, 219, 205, 220, 151, 261, 275, 276, 43, 277, 37, 238, 12, 155, 154, 180, 266, 124, 267, 182, 95, 263, 174, 230, 236, 14, 93, 62, 70, 98, 149, 68, 118, 126, 286, 6, 292, 317, 294, 319, 53, 109, 165, 52, 108, 162, 50, 106, 164, 43, 211, 209, 97, 221, 155, 99, 152, 206, 96, 208, 40, 220, 218, 262, 274, 265, 276, 277, 183, 38, 15, 13, 181, 125, 71, 175, 231, 41, 239, 237, 153, 264, 267, 94, 63, 150, 127, 69, 119, 287, 7, 293, 318, 321, 295, 320, 53, 109, 165, 108, 52, 164, 163, 51, 107, 211, 43, 210, 98, 221, 277, 208, 40, 220, 207, 152, 219, 263, 275, 276, 266, 39, 239, 14, 155, 182, 267, 126, 183, 96, 264, 176, 232, 42, 238, 154, 15, 95, 64, 71, 99, 151, 70, 120, 127, 288, 8, 294, 319, 322, 295, 320, 109, 165, 221, 164, 52, 108, 211, 99, 53, 277, 208, 220, 264, 276, 267, 40, 15, 183, 127, 177, 233, 43, 239, 155, 96, 65, 152, 71, 121, 289, 9, 295, 320, 323, 55, 111, 109, 53, 106, 50, 162, 165, 156, 212, 44, 153, 97, 209, 41, 91, 147, 218, 35, 221, 259, 274, 184, 16, 72, 178, 234, 240, 265, 100, 66, 268, 203, 277, 128, 122, 290, 10, 315, 296, 321, 55, 111, 109, 53, 107, 106, 51, 162, 163, 167, 223, 50, 165, 279, 44, 212, 209, 154, 41, 98, 210, 42, 153, 221, 92, 148, 218, 219, 36, 260, 274, 275, 277, 185, 100, 17, 240, 156, 184, 97, 265, 73, 179, 235, 241, 266, 16, 268, 67, 72, 204, 129, 123, 128, 291, 11, 316, 296, 297, 321, 322, 55, 111, 167, 109, 53, 165, 107, 163, 223, 279, 51, 100, 212, 210, 42, 221, 154, 93, 149, 219, 37, 261, 275, 277, 44, 241, 156, 268, 185, 98, 266, 180, 236, 17, 68, 73, 205, 124, 129, 292, 12, 317, 297, 322, 55, 111, 53, 109, 108, 52, 164, 106, 162, 50, 165, 167, 223, 279, 218, 44, 212, 156, 100, 155, 209, 99, 211, 43, 221, 94, 150, 220, 38, 262, 265, 274, 276, 277, 186, 41, 18, 16, 184, 128, 74, 181, 237, 242, 240, 267, 268, 97, 69, 206, 153, 130, 72, 125, 293, 13, 318, 296, 321, 298, 323, 55, 111, 167, 109, 53, 165, 108, 164, 107, 163, 51, 223, 279, 52, 219, 212, 44, 211, 43, 221, 210, 155, 95, 151, 220, 39, 263, 266, 275, 276, 277, 42, 242, 17, 156, 185, 268, 129, 186, 99, 267, 182, 238, 241, 18, 98, 70, 74, 207, 100, 154, 73, 126, 130, 294, 14, 319, 297, 322, 298, 323, 55, 111, 167, 165, 53, 109, 108, 164, 52, 223, 279, 220, 212, 100, 211, 96, 152, 40, 221, 264, 267, 276, 277, 268, 43, 18, 186, 130, 183, 239, 44, 242, 156, 99, 71, 208, 155, 74, 127, 295, 15, 320, 298, 323, 324, 106, 162, 157, 213, 45, 218, 147, 50, 35, 274, 188, 20, 203, 91, 76, 244, 101, 259, 112, 168, 269, 224, 132, 280, 0, 56, 300, 315, 107, 162, 163, 158, 45, 213, 214, 46, 91, 203, 218, 219, 148, 147, 35, 106, 51, 50, 36, 274, 275, 189, 101, 21, 244, 157, 204, 188, 92, 77, 245, 20, 102, 269, 260, 259, 113, 169, 76, 270, 225, 133, 281, 132, 1, 57, 300, 315, 301, 316, 163, 162, 106, 218, 50, 46, 101, 213, 214, 92, 204, 219, 149, 148, 36, 107, 45, 274, 51, 37, 275, 190, 102, 22, 245, 158, 157, 205, 269, 189, 93, 78, 246, 21, 270, 261, 260, 114, 170, 77, 226, 134, 282, 133, 2, 58, 301, 316, 302, 317, 163, 107, 219, 51, 102, 214, 93, 205, 149, 37, 46, 275, 246, 158, 270, 190, 22, 261, 115, 171, 78, 227, 283, 134, 3, 59, 302, 317, 108, 164, 106, 50, 162, 159, 215, 45, 213, 157, 101, 47, 220, 218, 147, 203, 150, 259, 35, 52, 38, 274, 276, 191, 23, 20, 206, 188, 132, 94, 79, 247, 244, 269, 103, 262, 116, 91, 172, 271, 228, 135, 76, 284, 300, 315, 4, 60, 303, 318, 110, 54, 164, 107, 106, 50, 162, 51, 163, 47, 215, 46, 213, 45, 214, 158, 102, 218, 94, 206, 220, 219, 148, 204, 151, 150, 38, 108, 260, 36, 274, 52, 39, 275, 276, 192, 103, 24, 247, 159, 21, 207, 157, 189, 269, 133, 191, 95, 80, 248, 245, 23, 270, 271, 263, 262, 117, 92, 173, 79, 101, 229, 136, 77, 285, 135, 301, 316, 5, 61, 303, 318, 304, 319, 55, 111, 167, 223, 110, 54, 166, 164, 108, 220, 107, 51, 163, 279, 52, 103, 215, 214, 46, 222, 219, 95, 207, 149, 205, 151, 39, 261, 37, 47, 275, 276, 278, 248, 22, 159, 158, 190, 270, 134, 271, 192, 246, 24, 263, 118, 93, 174, 80, 102, 230, 78, 286, 136, 302, 317, 6, 62, 304, 319, 55, 111, 167, 54, 110, 166, 108, 52, 162, 106, 50, 164, 223, 279, 47, 215, 213, 101, 222, 159, 103, 220, 218, 150, 206, 152, 262, 38, 274, 40, 269, 276, 278, 193, 25, 23, 208, 191, 135, 96, 81, 45, 249, 247, 157, 271, 264, 119, 94, 175, 231, 137, 79, 287, 303, 318, 7, 63, 325, 330, 305, 320, 55, 111, 167, 54, 110, 166, 108, 52, 164, 163, 107, 51, 223, 279, 215, 47, 214, 102, 222, 278, 220, 96, 208, 219, 151, 207, 152, 40, 263, 39, 275, 276, 270, 249, 24, 159, 192, 271, 136, 193, 46, 248, 158, 25, 264, 120, 95, 176, 81, 103, 232, 80, 288, 137, 304, 319, 8, 64, 326, 331, 305, 320, 55, 111, 167, 110, 166, 222, 164, 108, 52, 223, 279, 215, 103, 54, 278, 220, 152, 208, 264, 40, 276, 271, 25, 193, 137, 47, 249, 159, 121, 96, 177, 233, 81, 289, 305, 320, 9, 65, 327, 332, 55, 111, 110, 54, 109, 165, 162, 50, 166, 167, 223, 279, 160, 216, 48, 157, 101, 213, 45, 222, 218, 221, 153, 35, 147, 259, 106, 53, 41, 274, 277, 194, 26, 209, 97, 82, 188, 244, 250, 269, 104, 265, 122, 91, 178, 76, 203, 272, 278, 315, 234, 138, 132, 290, 300, 20, 10, 66, 330, 306, 321, 325, 55, 111, 110, 54, 165, 163, 162, 51, 106, 166, 167, 223, 279, 48, 216, 218, 213, 158, 45, 102, 214, 46, 157, 222, 219, 97, 209, 221, 50, 154, 153, 41, 109, 36, 148, 260, 107, 274, 53, 42, 275, 277, 278, 195, 104, 27, 250, 160, 210, 194, 98, 101, 269, 83, 189, 245, 251, 270, 26, 272, 266, 265, 123, 92, 179, 77, 82, 204, 316, 235, 139, 133, 291, 138, 301, 21, 11, 67, 306, 321, 331, 330, 307, 322, 325, 326, 55, 111, 167, 110, 54, 166, 165, 109, 221, 163, 107, 223, 279, 53, 104, 216, 219, 214, 46, 222, 158, 278, 98, 210, 51, 154, 42, 37, 149, 261, 48, 275, 277, 251, 160, 272, 195, 102, 270, 190, 246, 27, 266, 124, 93, 180, 78, 83, 205, 317, 236, 134, 292, 139, 302, 22, 12, 68, 307, 322, 331, 326, 55, 111, 54, 110, 166, 109, 53, 165, 164, 52, 167, 162, 50, 218, 223, 279, 48, 216, 160, 104, 159, 213, 103, 215, 47, 222, 269, 220, 221, 153, 209, 155, 265, 38, 150, 262, 41, 274, 108, 43, 276, 106, 277, 278, 196, 45, 28, 26, 211, 194, 138, 99, 84, 191, 247, 252, 250, 271, 272, 101, 267, 125, 97, 94, 181, 79, 206, 157, 318, 237, 140, 82, 135, 293, 303, 23, 306, 321, 13, 69, 325, 330, 332, 308, 323, 327, 55, 111, 167, 110, 54, 166, 109, 53, 165, 164, 108, 163, 51, 223, 219, 279, 216, 48, 220, 215, 221, 47, 222, 214, 159, 270, 278, 99, 211, 154, 52, 210, 155, 43, 266, 39, 151, 263, 42, 275, 276, 277, 107, 46, 252, 27, 160, 195, 272, 139, 196, 103, 271, 192, 248, 251, 28, 102, 267, 126, 98, 95, 182, 80, 84, 207, 104, 158, 319, 238, 83, 136, 294, 140, 304, 24, 307, 322, 14, 70, 326, 331, 308, 323, 332, 327, 111, 55, 167, 166, 54, 110, 165, 109, 53, 164, 52, 223, 220, 279, 216, 104, 215, 222, 271, 278, 221, 155, 211, 267, 40, 152, 264, 43, 276, 277, 272, 108, 47, 28, 196, 140, 193, 249, 48, 252, 160, 103, 127, 99, 96, 183, 81, 208, 159, 320, 239, 84, 137, 295, 305, 25, 308, 323, 15, 71, 327, 332, 328, 333, 55, 111, 110, 166, 162, 106, 167, 50, 223, 279, 161, 217, 49, 218, 222, 157, 54, 35, 91, 45, 274, 278, 198, 30, 213, 101, 86, 254, 105, 147, 269, 132, 188, 203, 273, 259, 315, 244, 142, 300, 20, 76, 310, 325, 330, 55, 111, 166, 163, 106, 107, 167, 51, 218, 223, 162, 279, 49, 217, 219, 101, 213, 222, 158, 157, 45, 110, 54, 36, 92, 46, 50, 274, 275, 278, 199, 105, 31, 254, 161, 214, 198, 102, 87, 255, 30, 273, 148, 270, 269, 133, 189, 86, 204, 260, 316, 245, 143, 301, 142, 21, 77, 310, 325, 311, 326, 331, 330, 111, 55, 167, 166, 110, 222, 107, 219, 223, 279, 163, 54, 105, 217, 102, 214, 158, 46, 49, 278, 37, 93, 51, 275, 255, 161, 273, 199, 31, 149, 270, 134, 190, 87, 205, 261, 317, 246, 302, 143, 22, 78, 311, 326, 331, 55, 111, 167, 110, 54, 166, 164, 108, 106, 162, 52, 50, 218, 223, 279, 49, 217, 161, 105, 220, 222, 157, 213, 159, 269, 45, 38, 94, 274, 47, 276, 278, 200, 32, 30, 215, 198, 142, 103, 88, 256, 254, 273, 150, 271, 135, 101, 191, 206, 262, 318, 247, 144, 86, 303, 310, 325, 23, 79, 330, 312, 327, 332, 111, 55, 167, 110, 54, 166, 108, 107, 163, 51, 219, 220, 223, 279, 164, 217, 49, 222, 103, 215, 158, 214, 159, 47, 270, 46, 278, 39, 95, 275, 52, 276, 256, 31, 161, 199, 273, 143, 200, 255, 32, 151, 271, 136, 102, 192, 88, 207, 105, 263, 319, 248, 87, 304, 144, 311, 326, 24, 80, 331, 312, 327, 332, 111, 167, 166, 110, 54, 108, 164, 52, 55, 220, 223, 279, 217, 105, 222, 159, 215, 271, 47, 278, 40, 96, 276, 273, 32, 200, 144, 49, 256, 161, 152, 137, 103, 193, 208, 264, 320, 249, 88, 305, 312, 327, 25, 81, 332, 329, 334, 162, 218, 50, 203, 35, 91, 259, 106, 274, 168, 147, 224, 112, 280, 0, 56, 315, 163, 50, 218, 219, 51, 204, 106, 36, 259, 162, 203, 92, 260, 35, 107, 274, 91, 275, 169, 148, 225, 113, 281, 147, 1, 57, 315, 316, 51, 106, 218, 219, 50, 205, 107, 37, 260, 163, 162, 274, 204, 93, 261, 36, 275, 92, 170, 149, 226, 114, 282, 148, 2, 58, 316, 317, 107, 219, 51, 261, 163, 275, 205, 37, 93, 171, 227, 115, 283, 149, 3, 59, 317, 164, 220, 50, 218, 162, 106, 52, 206, 38, 35, 203, 147, 94, 262, 259, 274, 108, 276, 172, 150, 228, 91, 116, 284, 315, 4, 60, 318, 111, 55, 52, 220, 51, 218, 50, 219, 163, 107, 207, 108, 39, 262, 164, 36, 162, 204, 274, 148, 206, 95, 263, 260, 38, 275, 276, 94, 106, 173, 151, 229, 92, 117, 285, 150, 316, 5, 61, 318, 319, 111, 55, 167, 108, 220, 219, 51, 223, 52, 279, 263, 37, 164, 163, 205, 275, 149, 276, 207, 261, 39, 95, 107, 174, 230, 93, 118, 286, 151, 317, 6, 62, 319, 55, 111, 167, 52, 220, 218, 106, 223, 164, 108, 274, 279, 208, 40, 38, 206, 150, 96, 50, 264, 262, 162, 276, 175, 152, 231, 94, 119, 287, 318, 7, 63, 330, 320, 55, 111, 167, 220, 52, 219, 107, 223, 279, 275, 264, 39, 164, 207, 276, 151, 208, 51, 263, 163, 40, 96, 108, 176, 232, 95, 120, 288, 152, 319, 8, 64, 331, 320, 111, 167, 223, 220, 108, 55, 279, 276, 40, 208, 152, 52, 264, 164, 177, 233, 96, 121, 289, 320, 9, 65, 332, 111, 55, 167, 165, 221, 53, 162, 106, 218, 50, 223, 209, 41, 97, 203, 259, 265, 274, 109, 91, 277, 279, 178, 153, 234, 147, 122, 290, 315, 35, 10, 66, 321, 330, 111, 55, 167, 53, 221, 218, 163, 50, 107, 219, 51, 162, 223, 279, 210, 109, 42, 265, 165, 209, 106, 274, 98, 204, 260, 266, 275, 41, 277, 92, 97, 179, 154, 235, 148, 123, 291, 153, 316, 36, 11, 67, 321, 322, 330, 331, 111, 55, 167, 109, 221, 219, 51, 223, 163, 279, 53, 266, 165, 277, 210, 107, 275, 205, 261, 42, 93, 98, 180, 236, 149, 124, 292, 154, 317, 37, 12, 68, 322, 331, 55, 111, 167, 53, 221, 165, 109, 164, 218, 108, 220, 52, 223, 274, 279, 211, 50, 43, 41, 209, 153, 99, 206, 262, 267, 265, 276, 277, 106, 94, 162, 181, 155, 237, 97, 150, 125, 293, 318, 38, 321, 330, 13, 69, 323, 332, 111, 55, 167, 221, 53, 220, 52, 223, 219, 164, 275, 279, 51, 267, 42, 165, 210, 277, 154, 211, 108, 276, 207, 263, 266, 43, 107, 95, 99, 109, 163, 182, 238, 98, 151, 126, 294, 155, 319, 39, 322, 331, 14, 70, 323, 332, 167, 55, 111, 221, 109, 220, 223, 276, 279, 277, 52, 43, 211, 155, 208, 264, 53, 267, 165, 108, 96, 164, 183, 239, 99, 152, 127, 295, 320, 40, 323, 332, 15, 71, 333, 111, 167, 166, 222, 54, 223, 162, 55, 50, 279, 213, 45, 218, 106, 101, 269, 110, 274, 147, 203, 278, 259, 188, 157, 244, 132, 300, 315, 35, 91, 20, 76, 325, 330, 167, 54, 222, 106, 218, 223, 163, 162, 50, 111, 55, 51, 279, 214, 110, 46, 269, 166, 219, 213, 107, 102, 270, 45, 278, 275, 274, 148, 204, 101, 260, 189, 158, 245, 133, 301, 316, 157, 36, 92, 21, 77, 325, 330, 326, 331, 167, 111, 223, 55, 110, 222, 107, 219, 163, 51, 54, 279, 270, 166, 278, 214, 46, 275, 149, 205, 102, 261, 190, 246, 134, 302, 317, 158, 37, 93, 22, 78, 326, 331, 111, 55, 167, 54, 222, 166, 110, 223, 162, 218, 164, 274, 50, 52, 279, 215, 47, 45, 220, 213, 157, 108, 103, 271, 269, 278, 276, 150, 106, 206, 262, 191, 159, 247, 101, 135, 303, 318, 325, 330, 38, 94, 23, 79, 327, 332, 111, 55, 167, 222, 54, 223, 108, 220, 163, 219, 164, 52, 275, 51, 279, 271, 46, 166, 214, 278, 158, 215, 270, 47, 276, 151, 107, 207, 103, 110, 263, 192, 248, 102, 136, 304, 319, 159, 326, 331, 39, 95, 24, 80, 327, 332, 167, 111, 55, 222, 110, 223, 164, 220, 276, 52, 279, 278, 47, 215, 159, 54, 271, 166, 152, 108, 208, 264, 193, 249, 103, 137, 305, 320, 327, 332, 40, 96, 25, 81, 334, 336, 167, 223, 55, 218, 50, 106, 274, 111, 279, 203, 162, 259, 147, 315, 35, 91, 330, 55, 223, 219, 111, 51, 274, 167, 218, 107, 275, 50, 279, 106, 204, 163, 260, 148, 316, 162, 36, 92, 330, 331, 111, 223, 55, 275, 167, 279, 219, 51, 107, 205, 261, 149, 317, 163, 37, 93, 331, 55, 223, 167, 111, 220, 52, 50, 218, 162, 108, 276, 274, 279, 206, 164, 262, 106, 150, 318, 330, 38, 94, 332, 223, 55, 276, 51, 167, 219, 279, 163, 220, 275, 52, 108, 111, 207, 263, 107, 151, 319, 164, 331, 39, 95, 332, 223, 111, 279, 52, 220, 164, 55, 276, 167, 208, 264, 108, 152, 320, 332, 40, 96, 336, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335};
    static const int coeffs1_ind[] = {335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335, 335};

    static const int C0_ind[] = {0, 5, 475, 476, 479, 480, 628, 640, 751, 950, 951, 952, 953, 954, 955, 964, 1103, 1106, 1115, 1121, 1226, 1425, 1426, 1427, 1428, 1429, 1430, 1439, 1578, 1581, 1590, 1596, 1701, 1901, 1902, 1903, 1904, 1914, 2053, 2056, 2065, 2071, 2176, 2377, 2378, 2389, 2531, 2546, 2850, 2855, 2856, 2859, 3002, 3007, 3023, 3325, 3326, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3477, 3478, 3480, 3482, 3490, 3495, 3498, 3601, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3814, 3952, 3953, 3955, 3956, 3957, 3965, 3970, 3971, 3973, 4076, 4276, 4277, 4278, 4279, 4281, 4282, 4283, 4284, 4285, 4289, 4427, 4428, 4430, 4431, 4432, 4440, 4445, 4446, 4448, 4551, 4752, 4753, 4757, 4758, 4760, 4764, 4905, 4906, 4920, 4921, 5225, 5230, 5231, 5234, 5236, 5237, 5238, 5377, 5379, 5382, 5392, 5398, 5700, 5701, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5711, 5712, 5713, 5852, 5853, 5854, 5855, 5857, 5865, 5867, 5870, 5873, 5976, 6176, 6177, 6178, 6179, 6181, 6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189, 6327, 6328, 6329, 6330, 6331, 6332, 6340, 6342, 6345, 6346, 6348, 6451, 6652, 6653, 6657, 6658, 6660, 6661, 6662, 6663, 6664, 6804, 6805, 6806, 6817, 6820, 6821, 7125, 7130, 7140, 7143, 7148, 7289, 7297, 7600, 7601, 7604, 7605, 7615, 7616, 7617, 7618, 7619, 7623, 7753, 7763, 7764, 7765, 7769, 7772, 7876, 8075, 8076, 8077, 8078, 8079, 8080, 8089, 8090, 8091, 8092, 8093, 8094, 8098, 8228, 8231, 8238, 8239, 8240, 8244, 8246, 8247, 8351, 8551, 8552, 8553, 8554, 8564, 8565, 8566, 8567, 8568, 8569, 8573, 8703, 8706, 8713, 8714, 8715, 8719, 8721, 8722, 8826, 9027, 9028, 9039, 9041, 9042, 9044, 9181, 9188, 9194, 9196, 9500, 9505, 9506, 9509, 9515, 9518, 9520, 9521, 9522, 9523, 9652, 9657, 9662, 9664, 9666, 9672, 9673, 9975, 9976, 9979, 9980, 9981, 9982, 9983, 9984, 9985, 9990, 9991, 9992, 9993, 9994, 9995, 9996, 9997, 9998, 10127, 10128, 10130, 10132, 10137, 10138, 10139, 10140, 10141, 10144, 10145, 10147, 10148, 10251, 10451, 10452, 10453, 10454, 10456, 10457, 10458, 10459, 10460, 10464, 10465, 10466, 10467, 10468, 10469, 10470, 10471, 10472, 10473, 10602, 10603, 10605, 10606, 10607, 10612, 10613, 10614, 10615, 10616, 10619, 10620, 10621, 10622, 10623, 10726, 10927, 10928, 10932, 10933, 10935, 10939, 10941, 10942, 10944, 10945, 10946, 10947, 11080, 11081, 11087, 11088, 11091, 11094, 11095, 11096, 11400, 11405, 11415, 11418, 11423, 11424, 11425, 11426, 11427, 11564, 11568, 11572, 11875, 11876, 11879, 11880, 11890, 11891, 11892, 11893, 11894, 11898, 11899, 11900, 11901, 11902, 12028, 12038, 12039, 12040, 12043, 12044, 12047, 12151, 12351, 12352, 12353, 12354, 12364, 12365, 12366, 12367, 12368, 12369, 12373, 12374, 12375, 12376, 12377, 12503, 12506, 12513, 12514, 12515, 12518, 12519, 12521, 12522, 12626, 12827, 12828, 12839, 12841, 12842, 12844, 12849, 12850, 12851, 12852, 12981, 12988, 12993, 12994, 12996, 13328, 13329, 13330, 13331, 13494, 13803, 13804, 13805, 13806, 13969, 14278, 14279, 14280, 14281, 14444, 14753, 14754, 14755, 14756, 14919, 15232, 15235, 15240, 15391, 15472, 15707, 15708, 15709, 15710, 15711, 15715, 15865, 15866, 15868, 15947, 16178, 16179, 16180, 16181, 16182, 16183, 16184, 16185, 16186, 16190, 16340, 16341, 16343, 16344, 16422, 16653, 16654, 16655, 16656, 16657, 16658, 16659, 16660, 16661, 16665, 16815, 16816, 16818, 16819, 16897, 17128, 17129, 17130, 17131, 17133, 17134, 17136, 17290, 17293, 17294, 17607, 17610, 17612, 17613, 17614, 17615, 17764, 17766, 17767, 17847, 18082, 18083, 18084, 18085, 18086, 18087, 18088, 18089, 18090, 18239, 18240, 18241, 18242, 18243, 18322, 18553, 18554, 18555, 18556, 18557, 18558, 18559, 18560, 18561, 18562, 18563, 18564, 18565, 18714, 18715, 18716, 18717, 18718, 18719, 18797, 19028, 19029, 19030, 19031, 19033, 19034, 19036, 19037, 19038, 19039, 19189, 19190, 19192, 19193, 19194, 19516, 19521, 19681, 19694, 19753, 19991, 19992, 19995, 19996, 20154, 20156, 20168, 20169, 20225, 20228, 20466, 20467, 20468, 20469, 20470, 20471, 20480, 20629, 20631, 20634, 20643, 20644, 20650, 20700, 20703, 20941, 20942, 20943, 20944, 20945, 20946, 20955, 21104, 21106, 21109, 21118, 21119, 21125, 21175, 21178, 21417, 21418, 21419, 21420, 21430, 21579, 21584, 21593, 21600, 21650, 21893, 21894, 21905, 22059, 22075, 22366, 22371, 22372, 22375, 22524, 22531, 22542, 22544, 22596, 22603, 22841, 22842, 22845, 22846, 22847, 22848, 22849, 22850, 22851, 22999, 23004, 23006, 23008, 23017, 23018, 23019, 23024, 23071, 23075, 23078, 23303, 23304, 23305, 23306, 23316, 23317, 23318, 23319, 23320, 23321, 23322, 23323, 23324, 23325, 23326, 23330, 23469, 23474, 23479, 23481, 23483, 23484, 23492, 23493, 23494, 23499, 23500, 23546, 23550, 23553, 23778, 23779, 23780, 23781, 23792, 23793, 23794, 23795, 23797, 23798, 23799, 23800, 23801, 23805, 23944, 23949, 23954, 23958, 23959, 23967, 23968, 23974, 23975, 24021, 24025, 24253, 24254, 24255, 24256, 24268, 24269, 24273, 24274, 24276, 24280, 24419, 24433, 24434, 24449, 24450, 24732, 24735, 24740, 24741, 24746, 24747, 24750, 24752, 24753, 24754, 24891, 24899, 24906, 24907, 24917, 24919, 24922, 24971, 24972, 24978, 25207, 25208, 25209, 25210, 25211, 25215, 25216, 25217, 25220, 25221, 25222, 25223, 25224, 25225, 25226, 25227, 25228, 25229, 25365, 25366, 25368, 25374, 25379, 25381, 25382, 25383, 25392, 25393, 25394, 25397, 25399, 25446, 25447, 25450, 25453, 25678, 25679, 25680, 25681, 25682, 25683, 25684, 25685, 25686, 25690, 25692, 25693, 25694, 25695, 25697, 25698, 25699, 25700, 25701, 25702, 25703, 25704, 25705, 25840, 25841, 25843, 25844, 25849, 25854, 25857, 25858, 25859, 25867, 25868, 25872, 25874, 25875, 25921, 25922, 25925, 26153, 26154, 26155, 26156, 26158, 26159, 26161, 26168, 26169, 26173, 26174, 26176, 26177, 26178, 26179, 26180, 26315, 26318, 26319, 26332, 26333, 26334, 26347, 26349, 26350, 26600, 26605, 26641, 26646, 26656, 26659, 26663, 26806, 26816, 26819, 26869, 26878, 27075, 27076, 27079, 27080, 27116, 27117, 27120, 27121, 27131, 27132, 27133, 27134, 27135, 27138, 27228, 27240, 27279, 27281, 27290, 27291, 27293, 27294, 27298, 27344, 27350, 27351, 27353, 27550, 27551, 27552, 27553, 27554, 27555, 27564, 27591, 27592, 27593, 27594, 27595, 27596, 27605, 27606, 27607, 27608, 27609, 27610, 27613, 27703, 27706, 27715, 27721, 27754, 27756, 27759, 27765, 27766, 27768, 27769, 27773, 27775, 27819, 27825, 27826, 27828, 28026, 28027, 28028, 28029, 28039, 28067, 28068, 28069, 28070, 28080, 28081, 28082, 28083, 28084, 28085, 28088, 28178, 28181, 28190, 28196, 28229, 28234, 28240, 28241, 28243, 28248, 28250, 28294, 28300, 28301, 28502, 28503, 28514, 28543, 28544, 28555, 28557, 28558, 28560, 28656, 28671, 28709, 28715, 28723, 28725, 28975, 28980, 28981, 28984, 29016, 29021, 29022, 29025, 29031, 29034, 29036, 29037, 29038, 29039, 29127, 29132, 29148, 29174, 29181, 29189, 29191, 29192, 29194, 29196, 29244, 29246, 29253, 29450, 29451, 29454, 29455, 29456, 29457, 29458, 29459, 29460, 29491, 29492, 29495, 29496, 29497, 29498, 29499, 29500, 29501, 29506, 29507, 29508, 29509, 29510, 29511, 29512, 29513, 29514, 29602, 29603, 29605, 29607, 29615, 29620, 29623, 29649, 29654, 29656, 29658, 29664, 29665, 29666, 29667, 29668, 29669, 29671, 29673, 29674, 29719, 29721, 29725, 29726, 29728, 29926, 29927, 29928, 29929, 29931, 29932, 29933, 29934, 29935, 29939, 29953, 29954, 29955, 29956, 29967, 29968, 29969, 29970, 29972, 29973, 29974, 29975, 29976, 29980, 29981, 29982, 29983, 29984, 29985, 29986, 29987, 29988, 29989, 30077, 30078, 30080, 30081, 30082, 30090, 30095, 30096, 30098, 30119, 30124, 30129, 30133, 30134, 30139, 30140, 30141, 30142, 30143, 30146, 30148, 30149, 30150, 30194, 30196, 30200, 30201, 30402, 30403, 30407, 30408, 30410, 30414, 30428, 30429, 30430, 30431, 30443, 30444, 30448, 30449, 30451, 30455, 30457, 30458, 30460, 30461, 30462, 30464, 30555, 30556, 30570, 30571, 30594, 30608, 30609, 30614, 30615, 30621, 30623, 30624, 30625, 30875, 30880, 30890, 30893, 30898, 30916, 30921, 30931, 30934, 30938, 30940, 30941, 30942, 30943, 31039, 31047, 31081, 31091, 31094, 31095, 31144, 31153, 31350, 31351, 31354, 31355, 31365, 31366, 31367, 31368, 31369, 31373, 31391, 31392, 31395, 31396, 31406, 31407, 31408, 31409, 31410, 31413, 31415, 31416, 31417, 31418, 31503, 31513, 31514, 31515, 31519, 31522, 31554, 31556, 31565, 31566, 31568, 31569, 31570, 31573, 31619, 31625, 31626, 31628, 31826, 31827, 31828, 31829, 31839, 31840, 31841, 31842, 31843, 31844, 31848, 31867, 31868, 31869, 31870, 31880, 31881, 31882, 31883, 31884, 31885, 31888, 31890, 31891, 31892, 31893, 31978, 31981, 31988, 31989, 31990, 31994, 31996, 31997, 32029, 32034, 32040, 32041, 32043, 32045, 32048, 32050, 32094, 32100, 32101, 32302, 32303, 32314, 32316, 32317, 32319, 32343, 32344, 32355, 32357, 32358, 32360, 32365, 32366, 32367, 32368, 32456, 32463, 32469, 32471, 32509, 32515, 32520, 32523, 32525, 32844, 32849, 33005, 33025, 33052, 33319, 33320, 33323, 33324, 33479, 33480, 33499, 33500, 33524, 33527, 33794, 33795, 33796, 33797, 33798, 33799, 33807, 33954, 33955, 33965, 33974, 33975, 33981, 33999, 34002, 34269, 34270, 34271, 34272, 34273, 34274, 34282, 34429, 34430, 34440, 34449, 34450, 34456, 34474, 34477, 34745, 34746, 34747, 34748, 34757, 34904, 34915, 34924, 34931, 34949, 35221, 35222, 35232, 35390, 35406, 35694, 35699, 35700, 35702, 35708, 35855, 35873, 35875, 35895, 35902, 36169, 36170, 36173, 36174, 36175, 36176, 36177, 36178, 36179, 36183, 36329, 36330, 36339, 36348, 36349, 36350, 36355, 36370, 36374, 36377, 36603, 36604, 36605, 36606, 36644, 36645, 36646, 36647, 36648, 36649, 36650, 36651, 36652, 36653, 36654, 36657, 36658, 36769, 36804, 36805, 36814, 36815, 36823, 36824, 36825, 36830, 36831, 36845, 36849, 36852, 37078, 37079, 37080, 37081, 37120, 37121, 37122, 37123, 37125, 37126, 37127, 37128, 37129, 37132, 37133, 37244, 37279, 37289, 37290, 37298, 37299, 37305, 37306, 37320, 37324, 37553, 37554, 37555, 37556, 37596, 37597, 37601, 37603, 37604, 37607, 37719, 37764, 37765, 37780, 37781, 38032, 38035, 38040, 38069, 38074, 38075, 38077, 38080, 38081, 38083, 38191, 38230, 38235, 38237, 38248, 38250, 38253, 38270, 38272, 38277, 38507, 38508, 38509, 38510, 38511, 38515, 38544, 38545, 38548, 38549, 38550, 38551, 38552, 38553, 38554, 38555, 38556, 38558, 38665, 38666, 38668, 38704, 38705, 38710, 38712, 38714, 38723, 38724, 38725, 38728, 38730, 38745, 38747, 38749, 38752, 38978, 38979, 38980, 38981, 38982, 38983, 38984, 38985, 38986, 38990, 39020, 39021, 39022, 39023, 39025, 39026, 39027, 39028, 39029, 39030, 39031, 39032, 39033, 39140, 39141, 39143, 39144, 39179, 39185, 39187, 39189, 39190, 39198, 39199, 39203, 39205, 39206, 39220, 39222, 39224, 39453, 39454, 39455, 39456, 39458, 39459, 39461, 39496, 39497, 39501, 39503, 39504, 39505, 39506, 39507, 39615, 39618, 39619, 39660, 39662, 39664, 39665, 39678, 39680, 39681, 39941, 39946, 39969, 39974, 39984, 39986, 39992, 40106, 40119, 40130, 40147, 40150, 40168, 40177, 40178, 40416, 40417, 40420, 40421, 40444, 40445, 40448, 40449, 40459, 40460, 40461, 40462, 40463, 40467, 40579, 40581, 40593, 40594, 40604, 40605, 40621, 40622, 40624, 40625, 40629, 40643, 40649, 40650, 40652, 40653, 40891, 40892, 40893, 40894, 40895, 40896, 40905, 40919, 40920, 40921, 40922, 40923, 40924, 40932, 40934, 40935, 40936, 40937, 40938, 40942, 41054, 41056, 41059, 41068, 41069, 41075, 41079, 41080, 41090, 41096, 41097, 41099, 41100, 41104, 41106, 41118, 41124, 41125, 41127, 41128, 41367, 41368, 41369, 41370, 41380, 41395, 41396, 41397, 41398, 41407, 41409, 41410, 41411, 41412, 41413, 41417, 41529, 41534, 41543, 41550, 41554, 41565, 41571, 41572, 41574, 41579, 41581, 41593, 41599, 41600, 41843, 41844, 41855, 41871, 41872, 41882, 41885, 41887, 41888, 42009, 42025, 42040, 42046, 42054, 42056, 42316, 42321, 42322, 42325, 42344, 42349, 42350, 42352, 42358, 42359, 42361, 42364, 42365, 42366, 42367, 42474, 42481, 42492, 42494, 42505, 42519, 42522, 42523, 42525, 42527, 42543, 42545, 42546, 42552, 42553, 42791, 42792, 42795, 42796, 42797, 42798, 42799, 42800, 42801, 42819, 42820, 42823, 42824, 42825, 42826, 42827, 42828, 42829, 42833, 42834, 42835, 42836, 42837, 42838, 42839, 42840, 42841, 42842, 42949, 42954, 42956, 42958, 42967, 42968, 42969, 42974, 42979, 42980, 42989, 42994, 42996, 42997, 42998, 42999, 43000, 43002, 43004, 43005, 43018, 43020, 43021, 43024, 43025, 43027, 43028, 43253, 43254, 43255, 43256, 43267, 43268, 43269, 43270, 43272, 43273, 43274, 43275, 43276, 43280, 43295, 43296, 43297, 43298, 43300, 43301, 43302, 43303, 43304, 43307, 43308, 43309, 43310, 43311, 43312, 43313, 43314, 43315, 43316, 43317, 43419, 43424, 43429, 43433, 43434, 43442, 43443, 43449, 43450, 43454, 43464, 43465, 43469, 43471, 43472, 43473, 43474, 43477, 43479, 43480, 43481, 43493, 43495, 43496, 43499, 43500, 43728, 43729, 43730, 43731, 43743, 43744, 43748, 43749, 43751, 43755, 43771, 43772, 43776, 43778, 43779, 43782, 43785, 43787, 43788, 43789, 43790, 43791, 43894, 43908, 43909, 43924, 43925, 43939, 43940, 43944, 43946, 43952, 43954, 43955, 43956, 44175, 44180, 44216, 44221, 44231, 44234, 44238, 44244, 44249, 44259, 44261, 44267, 44268, 44269, 44270, 44271, 44381, 44391, 44394, 44405, 44422, 44425, 44426, 44443, 44444, 44452, 44453, 44650, 44651, 44654, 44655, 44691, 44692, 44695, 44696, 44706, 44707, 44708, 44709, 44710, 44713, 44719, 44720, 44723, 44724, 44734, 44735, 44736, 44737, 44738, 44742, 44743, 44744, 44745, 44746, 44803, 44815, 44854, 44856, 44865, 44866, 44868, 44869, 44873, 44879, 44880, 44896, 44897, 44899, 44900, 44901, 44904, 44918, 44919, 44924, 44925, 44926, 44927, 44928, 45126, 45127, 45128, 45129, 45139, 45167, 45168, 45169, 45170, 45180, 45181, 45182, 45183, 45184, 45185, 45188, 45195, 45196, 45197, 45198, 45207, 45209, 45210, 45211, 45212, 45213, 45217, 45218, 45219, 45220, 45221, 45278, 45281, 45290, 45296, 45329, 45334, 45340, 45341, 45343, 45348, 45350, 45354, 45365, 45371, 45372, 45374, 45376, 45379, 45381, 45393, 45394, 45399, 45400, 45401, 45602, 45603, 45614, 45643, 45644, 45655, 45657, 45658, 45660, 45671, 45672, 45682, 45685, 45687, 45688, 45693, 45694, 45695, 45696, 45756, 45771, 45809, 45815, 45823, 45825, 45840, 45846, 45851, 45854, 45856, 46144, 46149, 46172, 46174, 46180, 46305, 46325, 46338, 46341, 46352, 46541, 46619, 46620, 46623, 46624, 46647, 46648, 46649, 46650, 46651, 46655, 46779, 46780, 46799, 46800, 46810, 46813, 46815, 46816, 46824, 46827, 47016, 47018, 47094, 47095, 47096, 47097, 47098, 47099, 47107, 47122, 47123, 47124, 47125, 47126, 47130, 47254, 47255, 47265, 47274, 47275, 47281, 47285, 47288, 47290, 47291, 47299, 47302, 47491, 47493, 47570, 47571, 47572, 47573, 47582, 47597, 47598, 47599, 47600, 47601, 47605, 47729, 47740, 47749, 47756, 47760, 47763, 47765, 47766, 47774, 47966, 47968, 48046, 48047, 48057, 48073, 48075, 48076, 48215, 48231, 48235, 48240, 48443, 48519, 48524, 48525, 48527, 48533, 48547, 48549, 48552, 48553, 48554, 48555, 48680, 48698, 48700, 48709, 48713, 48714, 48716, 48720, 48727, 48906, 48916, 48994, 48995, 48998, 48999, 49000, 49001, 49002, 49003, 49004, 49008, 49022, 49023, 49024, 49025, 49026, 49027, 49028, 49029, 49030, 49154, 49155, 49164, 49173, 49174, 49175, 49180, 49184, 49185, 49188, 49189, 49190, 49191, 49195, 49199, 49202, 49381, 49391, 49393, 49428, 49429, 49430, 49431, 49470, 49471, 49472, 49473, 49475, 49476, 49477, 49478, 49479, 49482, 49483, 49497, 49498, 49499, 49500, 49501, 49502, 49503, 49504, 49505, 49594, 49629, 49639, 49640, 49648, 49649, 49655, 49656, 49659, 49660, 49663, 49664, 49665, 49666, 49670, 49674, 49856, 49866, 49868, 49903, 49904, 49905, 49906, 49946, 49947, 49951, 49953, 49954, 49957, 49973, 49975, 49976, 49977, 49978, 49979, 50069, 50114, 50115, 50130, 50131, 50134, 50135, 50139, 50140, 50331, 50343, 50391, 50396, 50419, 50424, 50434, 50436, 50442, 50447, 50449, 50455, 50456, 50457, 50458, 50459, 50556, 50569, 50580, 50597, 50600, 50613, 50616, 50617, 50618, 50627, 50628, 50786, 50816, 50866, 50867, 50870, 50871, 50894, 50895, 50898, 50899, 50909, 50910, 50911, 50912, 50913, 50917, 50922, 50923, 50924, 50925, 50926, 50930, 50931, 50932, 50933, 50934, 51029, 51031, 51043, 51044, 51054, 51055, 51071, 51072, 51074, 51075, 51079, 51085, 51088, 51090, 51091, 51092, 51093, 51099, 51100, 51102, 51103, 51261, 51291, 51293, 51342, 51343, 51344, 51345, 51355, 51370, 51371, 51372, 51373, 51382, 51384, 51385, 51386, 51387, 51388, 51392, 51397, 51398, 51399, 51400, 51401, 51405, 51406, 51407, 51408, 51409, 51504, 51509, 51518, 51525, 51529, 51540, 51546, 51547, 51549, 51554, 51556, 51560, 51563, 51565, 51566, 51567, 51568, 51574, 51575, 51736, 51766, 51768, 51818, 51819, 51830, 51846, 51847, 51857, 51860, 51862, 51863, 51873, 51875, 51876, 51881, 51882, 51883, 51884, 51984, 52000, 52015, 52021, 52029, 52031, 52035, 52040, 52042, 52211, 52243, 52319, 52324, 52347, 52349, 52355, 52360, 52361, 52362, 52363, 52480, 52500, 52513, 52516, 52523, 52527, 52683, 52716, 52794, 52795, 52798, 52799, 52822, 52823, 52824, 52825, 52826, 52830, 52835, 52836, 52837, 52838, 52954, 52955, 52974, 52975, 52985, 52988, 52990, 52991, 52998, 52999, 53002, 53158, 53191, 53193, 53270, 53271, 53272, 53273, 53282, 53297, 53298, 53299, 53300, 53301, 53305, 53310, 53311, 53312, 53313, 53429, 53440, 53449, 53456, 53460, 53463, 53465, 53466, 53473, 53474, 53633, 53666, 53668, 53746, 53747, 53757, 53773, 53775, 53776, 53785, 53786, 53787, 53788, 53915, 53931, 53935, 53940, 53948, 54108, 54143, 54264, 54268, 54739, 54740, 54741, 54742, 54743, 54913, 54986, 55214, 55215, 55216, 55217, 55218, 55388, 55461, 55689, 55690, 55691, 55692, 55693, 55863, 55936, 56165, 56166, 56167, 56338, 56411, 56644, 56647, 56651, 56819, 56904, 57114, 57118, 57119, 57120, 57121, 57122, 57123, 57126, 57292, 57294, 57299, 57379, 57589, 57590, 57591, 57592, 57593, 57594, 57595, 57596, 57597, 57598, 57601, 57763, 57767, 57769, 57774, 57836, 57854, 58064, 58065, 58066, 58067, 58068, 58069, 58070, 58071, 58072, 58073, 58076, 58238, 58242, 58244, 58249, 58311, 58329, 58540, 58541, 58542, 58545, 58546, 58548, 58713, 58717, 58724, 58786, 59019, 59022, 59024, 59025, 59026, 59027, 59193, 59194, 59198, 59279, 59489, 59493, 59494, 59495, 59496, 59497, 59498, 59499, 59500, 59501, 59502, 59667, 59668, 59669, 59673, 59674, 59754, 59964, 59965, 59966, 59967, 59968, 59969, 59970, 59971, 59972, 59973, 59974, 59975, 59976, 59977, 60138, 60142, 60143, 60144, 60148, 60149, 60211, 60229, 60440, 60441, 60442, 60445, 60446, 60448, 60449, 60450, 60452, 60613, 60617, 60618, 60623, 60624, 60686, 60928, 60932, 61005, 61122, 61228, 61403, 61404, 61407, 61416, 61478, 61480, 61589, 61597, 61656, 61703, 61878, 61879, 61880, 61881, 61882, 61883, 61891, 61953, 61955, 62057, 62064, 62072, 62080, 62131, 62178, 62353, 62354, 62355, 62356, 62357, 62358, 62366, 62428, 62430, 62532, 62539, 62547, 62555, 62606, 62653, 62829, 62830, 62831, 62833, 62841, 62903, 63007, 63014, 63030, 63081, 63305, 63306, 63308, 63482, 63505, 63778, 63782, 63784, 63786, 63801, 63855, 63962, 63972, 64027, 64078, 64239, 64243, 64253, 64254, 64257, 64259, 64260, 64261, 64262, 64263, 64266, 64276, 64328, 64330, 64430, 64437, 64439, 64447, 64454, 64502, 64506, 64553, 64714, 64715, 64716, 64717, 64718, 64728, 64729, 64730, 64731, 64732, 64733, 64734, 64735, 64736, 64737, 64738, 64741, 64751, 64803, 64805, 64888, 64905, 64907, 64912, 64914, 64922, 64929, 64930, 64961, 64977, 64981, 65028, 65189, 65190, 65191, 65192, 65193, 65204, 65205, 65206, 65208, 65209, 65210, 65211, 65212, 65213, 65216, 65226, 65278, 65363, 65380, 65382, 65387, 65389, 65404, 65405, 65436, 65452, 65456, 65665, 65666, 65667, 65680, 65681, 65683, 65685, 65687, 65688, 65838, 65855, 65857, 65879, 65880, 65911, 66144, 66147, 66151, 66153, 66157, 66159, 66161, 66164, 66165, 66167, 66176, 66230, 66319, 66337, 66346, 66347, 66352, 66402, 66404, 66453, 66614, 66618, 66619, 66620, 66621, 66622, 66623, 66626, 66628, 66629, 66632, 66634, 66635, 66636, 66637, 66638, 66639, 66640, 66641, 66642, 66651, 66703, 66705, 66792, 66794, 66799, 66805, 66812, 66814, 66821, 66822, 66827, 66829, 66877, 66879, 66881, 66928, 67089, 67090, 67091, 67092, 67093, 67094, 67095, 67096, 67097, 67098, 67101, 67104, 67105, 67106, 67108, 67109, 67110, 67111, 67112, 67113, 67114, 67115, 67116, 67117, 67126, 67178, 67263, 67267, 67269, 67274, 67280, 67282, 67287, 67289, 67296, 67302, 67304, 67305, 67336, 67352, 67354, 67356, 67565, 67566, 67567, 67570, 67571, 67573, 67580, 67581, 67583, 67585, 67587, 67588, 67589, 67590, 67592, 67738, 67742, 67749, 67755, 67757, 67771, 67777, 67779, 67780, 67811, 67925, 67930, 68053, 68057, 68068, 68070, 68072, 68130, 68244, 68247, 68299, 68353, 68400, 68401, 68404, 68405, 68528, 68529, 68532, 68541, 68543, 68544, 68545, 68546, 68547, 68553, 68565, 68602, 68603, 68605, 68676, 68714, 68718, 68719, 68722, 68728, 68774, 68781, 68828, 68875, 68876, 68877, 68878, 68879, 68880, 68889, 69003, 69004, 69005, 69006, 69007, 69008, 69016, 69018, 69019, 69020, 69021, 69022, 69028, 69031, 69040, 69046, 69077, 69078, 69080, 69151, 69182, 69189, 69193, 69194, 69197, 69203, 69205, 69249, 69256, 69303, 69351, 69352, 69353, 69354, 69364, 69479, 69480, 69481, 69483, 69491, 69493, 69494, 69495, 69496, 69497, 69503, 69506, 69515, 69521, 69552, 69553, 69626, 69657, 69664, 69668, 69669, 69678, 69680, 69724, 69731, 69827, 69828, 69839, 69955, 69956, 69958, 69969, 69971, 69981, 69996, 70027, 70132, 70143, 70153, 70155, 70300, 70305, 70306, 70309, 70428, 70432, 70434, 70436, 70443, 70445, 70447, 70448, 70449, 70450, 70451, 70452, 70457, 70473, 70505, 70545, 70612, 70619, 70622, 70626, 70674, 70677, 70728, 70775, 70776, 70779, 70780, 70781, 70782, 70783, 70784, 70785, 70889, 70893, 70903, 70904, 70907, 70909, 70910, 70911, 70912, 70913, 70916, 70918, 70919, 70920, 70921, 70922, 70923, 70924, 70925, 70926, 70927, 70928, 70930, 70932, 70940, 70945, 70948, 70977, 70978, 70980, 71020, 71051, 71080, 71087, 71089, 71093, 71094, 71097, 71101, 71103, 71104, 71149, 71152, 71156, 71203, 71251, 71252, 71253, 71254, 71256, 71257, 71258, 71259, 71260, 71264, 71364, 71365, 71366, 71367, 71368, 71379, 71380, 71381, 71383, 71384, 71385, 71386, 71387, 71388, 71391, 71393, 71394, 71395, 71396, 71397, 71398, 71399, 71400, 71401, 71402, 71403, 71405, 71406, 71407, 71415, 71420, 71421, 71423, 71452, 71453, 71495, 71526, 71538, 71555, 71557, 71562, 71564, 71568, 71569, 71576, 71578, 71579, 71580, 71611, 71624, 71627, 71631, 71727, 71728, 71732, 71733, 71735, 71739, 71840, 71841, 71842, 71855, 71856, 71858, 71860, 71862, 71863, 71869, 71871, 71873, 71874, 71875, 71880, 71881, 71895, 71896, 71927, 71970, 72013, 72030, 72032, 72043, 72051, 72053, 72054, 72055, 72086, 72200, 72205, 72206, 72209, 72211, 72212, 72213, 72319, 72322, 72326, 72328, 72332, 72334, 72336, 72339, 72340, 72342, 72343, 72345, 72347, 72348, 72349, 72350, 72351, 72352, 72354, 72357, 72367, 72373, 72405, 72445, 72494, 72512, 72519, 72521, 72522, 72526, 72527, 72574, 72577, 72579, 72628, 72676, 72679, 72681, 72682, 72683, 72684, 72685, 72686, 72687, 72688, 72789, 72793, 72794, 72795, 72796, 72797, 72798, 72801, 72804, 72809, 72810, 72811, 72812, 72813, 72814, 72815, 72816, 72817, 72818, 72819, 72820, 72821, 72822, 72823, 72824, 72825, 72826, 72827, 72828, 72829, 72830, 72832, 72840, 72842, 72845, 72848, 72877, 72878, 72920, 72951, 72967, 72969, 72974, 72980, 72987, 72989, 72993, 72994, 72996, 73001, 73002, 73003, 73004, 73049, 73052, 73054, 73056, 73152, 73153, 73157, 73158, 73160, 73161, 73162, 73163, 73164, 73265, 73266, 73267, 73270, 73271, 73273, 73280, 73281, 73283, 73285, 73287, 73288, 73289, 73290, 73292, 73294, 73296, 73298, 73299, 73300, 73304, 73305, 73306, 73317, 73320, 73321, 73352, 73395, 73438, 73442, 73449, 73455, 73457, 73468, 73471, 73476, 73477, 73478, 73479, 73480, 73511, 73631, 73634, 73636, 73637, 73638, 73744, 73747, 73749, 73750, 73751, 73752, 73759, 73761, 73764, 73765, 73767, 73768, 73770, 73772, 73773, 73774, 73775, 73776, 73777, 73779, 73782, 73792, 73798, 73870, 73918, 73919, 73923, 73937, 73944, 73946, 73951, 73952, 73999, 74002, 74004, 74107, 74108, 74110, 74111, 74112, 74113, 74220, 74221, 74223, 74224, 74225, 74227, 74235, 74237, 74238, 74239, 74240, 74242, 74244, 74246, 74248, 74249, 74250, 74254, 74255, 74267, 74270, 74302, 74345, 74392, 74393, 74398, 74399, 74405, 74418, 74421, 74426, 74427, 74428, 74429, 74586, 74587, 74588, 74699, 74700, 74702, 74714, 74715, 74717, 74723, 74724, 74725, 74729, 74742, 74820, 74868, 74873, 74896, 74901, 74902, 75050, 75055, 75065, 75068, 75073, 75178, 75182, 75193, 75195, 75197, 75208, 75209, 75210, 75211, 75214, 75222, 75255, 75369, 75372, 75375, 75424, 75478, 75525, 75526, 75529, 75530, 75540, 75541, 75542, 75543, 75544, 75548, 75653, 75654, 75657, 75666, 75668, 75669, 75670, 75671, 75672, 75678, 75683, 75684, 75685, 75686, 75688, 75689, 75690, 75694, 75697, 75727, 75728, 75730, 75801, 75839, 75843, 75844, 75847, 75850, 75853, 75899, 75906, 75953, 76001, 76002, 76003, 76004, 76014, 76015, 76016, 76017, 76018, 76019, 76023, 76129, 76130, 76131, 76133, 76141, 76143, 76144, 76145, 76146, 76147, 76153, 76156, 76158, 76159, 76160, 76161, 76163, 76164, 76165, 76169, 76171, 76172, 76202, 76203, 76276, 76307, 76314, 76318, 76319, 76325, 76328, 76330, 76374, 76381, 76477, 76478, 76489, 76491, 76492, 76494, 76605, 76606, 76608, 76619, 76621, 76631, 76633, 76634, 76635, 76636, 76638, 76644, 76646, 76677, 76782, 76793, 76800, 76803, 76805, 76950, 76955, 76956, 76959, 76965, 76968, 76970, 76971, 76972, 76973, 77078, 77082, 77084, 77086, 77093, 77095, 77097, 77098, 77099, 77100, 77101, 77102, 77107, 77108, 77109, 77110, 77111, 77112, 77114, 77116, 77122, 77123, 77155, 77195, 77262, 77269, 77272, 77275, 77276, 77324, 77327, 77378, 77426, 77429, 77431, 77432, 77433, 77434, 77435, 77440, 77441, 77442, 77443, 77444, 77445, 77446, 77447, 77448, 77539, 77543, 77554, 77559, 77560, 77561, 77562, 77563, 77566, 77568, 77569, 77570, 77571, 77572, 77573, 77574, 77575, 77576, 77577, 77578, 77580, 77582, 77583, 77584, 77585, 77586, 77587, 77588, 77589, 77590, 77591, 77594, 77595, 77597, 77598, 77627, 77628, 77670, 77701, 77730, 77737, 77739, 77743, 77744, 77750, 77751, 77753, 77754, 77799, 77802, 77806, 77902, 77903, 77907, 77908, 77910, 77914, 77916, 77917, 77919, 77920, 77921, 77922, 78015, 78016, 78017, 78030, 78031, 78033, 78035, 78037, 78038, 78044, 78046, 78048, 78049, 78050, 78055, 78056, 78058, 78059, 78060, 78061, 78062, 78063, 78066, 78069, 78070, 78071, 78102, 78145, 78188, 78205, 78207, 78218, 78225, 78226, 78228, 78229, 78230, 78261, 78381, 78384, 78386, 78387, 78388, 78390, 78393, 78395, 78396, 78397, 78398, 78494, 78497, 78501, 78509, 78511, 78514, 78515, 78517, 78518, 78520, 78522, 78523, 78524, 78525, 78526, 78527, 78529, 78532, 78533, 78534, 78535, 78536, 78537, 78539, 78541, 78542, 78547, 78548, 78620, 78669, 78687, 78694, 78696, 78700, 78701, 78702, 78749, 78752, 78754, 78857, 78858, 78860, 78861, 78862, 78863, 78866, 78867, 78869, 78870, 78871, 78872, 78970, 78971, 78973, 78985, 78987, 78988, 78989, 78990, 78992, 78994, 78996, 78998, 78999, 79000, 79004, 79005, 79008, 79009, 79010, 79011, 79012, 79013, 79016, 79017, 79019, 79020, 79052, 79095, 79142, 79149, 79155, 79168, 79171, 79175, 79176, 79177, 79178, 79179, 79336, 79337, 79338, 79345, 79346, 79347, 79449, 79450, 79452, 79464, 79465, 79467, 79473, 79474, 79475, 79479, 79483, 79484, 79485, 79486, 79487, 79491, 79492, 79570, 79618, 79623, 79646, 79650, 79651, 79652, 79800, 79805, 79815, 79818, 79823, 79824, 79825, 79826, 79827, 79928, 79932, 79943, 79945, 79947, 79958, 79959, 79960, 79961, 79964, 79968, 79972, 80005, 80119, 80122, 80125, 80174, 80228, 80276, 80279, 80290, 80291, 80292, 80293, 80294, 80298, 80299, 80300, 80301, 80302, 80404, 80416, 80418, 80419, 80420, 80421, 80422, 80428, 80433, 80434, 80435, 80436, 80438, 80439, 80440, 80443, 80444, 80447, 80477, 80478, 80551, 80589, 80593, 80594, 80600, 80603, 80649, 80656, 80752, 80753, 80764, 80766, 80767, 80769, 80774, 80775, 80776, 80777, 80880, 80881, 80883, 80894, 80896, 80906, 80908, 80909, 80910, 80911, 80913, 80918, 80919, 80921, 80952, 81057, 81068, 81075, 81078, 81080, 81231, 81234, 81240, 81243, 81245, 81246, 81247, 81248, 81249, 81250, 81251, 81252, 81359, 81361, 81368, 81370, 81372, 81373, 81374, 81375, 81376, 81377, 81382, 81383, 81384, 81385, 81386, 81387, 81389, 81391, 81393, 81397, 81398, 81470, 81537, 81544, 81550, 81551, 81599, 81602, 81707, 81708, 81710, 81716, 81717, 81719, 81720, 81721, 81722, 81724, 81725, 81726, 81727, 81835, 81837, 81838, 81844, 81846, 81848, 81849, 81850, 81855, 81858, 81859, 81860, 81861, 81862, 81863, 81866, 81868, 81869, 81870, 81902, 81945, 82005, 82018, 82025, 82026, 82028, 82029, 82186, 82187, 82188, 82195, 82196, 82197, 82199, 82200, 82201, 82202, 82314, 82315, 82317, 82323, 82324, 82325, 82329, 82333, 82334, 82335, 82336, 82337, 82341, 82342, 82343, 82420, 82496, 82500, 82501, 82502, 82824, 82828, 82985, 83008, 83032, 83299, 83300, 83303, 83459, 83460, 83469, 83483, 83485, 83505, 83507, 83774, 83775, 83776, 83777, 83778, 83779, 83862, 83934, 83935, 83944, 83958, 83959, 83960, 83980, 83982, 84249, 84250, 84251, 84252, 84253, 84254, 84337, 84409, 84410, 84419, 84433, 84434, 84435, 84455, 84457, 84725, 84726, 84727, 84729, 84812, 84884, 84894, 84909, 84910, 84930, 85201, 85202, 85204, 85287, 85384, 85674, 85678, 85680, 85684, 85688, 85835, 85836, 85858, 85876, 85882, 86089, 86093, 86149, 86150, 86153, 86155, 86156, 86157, 86158, 86159, 86163, 86277, 86309, 86310, 86311, 86319, 86332, 86333, 86335, 86351, 86355, 86357, 86478, 86479, 86480, 86481, 86564, 86565, 86566, 86567, 86568, 86624, 86625, 86626, 86627, 86628, 86629, 86630, 86631, 86632, 86633, 86634, 86638, 86644, 86712, 86738, 86752, 86784, 86785, 86786, 86794, 86807, 86808, 86809, 86810, 86811, 86826, 86830, 86832, 86953, 86954, 86955, 86956, 87039, 87040, 87041, 87042, 87043, 87100, 87101, 87102, 87104, 87105, 87106, 87107, 87108, 87109, 87113, 87119, 87187, 87213, 87227, 87259, 87261, 87269, 87282, 87284, 87285, 87286, 87301, 87305, 87428, 87429, 87430, 87431, 87515, 87516, 87517, 87576, 87577, 87579, 87581, 87582, 87583, 87594, 87662, 87688, 87702, 87757, 87759, 87761, 87907, 87910, 87915, 87994, 87997, 88001, 88049, 88053, 88055, 88059, 88060, 88061, 88062, 88063, 88066, 88147, 88169, 88210, 88211, 88212, 88228, 88233, 88251, 88254, 88257, 88337, 88382, 88383, 88384, 88385, 88386, 88390, 88464, 88468, 88469, 88470, 88471, 88472, 88473, 88476, 88524, 88525, 88528, 88530, 88531, 88532, 88533, 88534, 88535, 88536, 88537, 88538, 88540, 88541, 88543, 88622, 88642, 88644, 88649, 88652, 88684, 88685, 88686, 88687, 88694, 88703, 88707, 88708, 88710, 88726, 88729, 88730, 88732, 88812, 88853, 88854, 88855, 88856, 88857, 88858, 88859, 88860, 88861, 88865, 88939, 88940, 88941, 88942, 88943, 88944, 88945, 88946, 88947, 88948, 88951, 89000, 89001, 89002, 89004, 89005, 89006, 89007, 89008, 89009, 89010, 89011, 89012, 89013, 89015, 89016, 89018, 89019, 89087, 89097, 89113, 89117, 89119, 89124, 89127, 89159, 89161, 89162, 89169, 89178, 89182, 89184, 89185, 89186, 89201, 89204, 89205, 89287, 89328, 89329, 89330, 89331, 89333, 89334, 89336, 89415, 89416, 89417, 89420, 89421, 89423, 89476, 89477, 89479, 89481, 89482, 89483, 89485, 89486, 89487, 89490, 89493, 89494, 89562, 89588, 89592, 89599, 89602, 89637, 89653, 89657, 89659, 89661, 89762, 89807, 89810, 89812, 89813, 89814, 89815, 89894, 89897, 89899, 89900, 89901, 89902, 89949, 89953, 89955, 89959, 89960, 89961, 89962, 89963, 89964, 89966, 89967, 90047, 90068, 90069, 90073, 90110, 90111, 90112, 90128, 90133, 90151, 90154, 90157, 90237, 90282, 90283, 90284, 90285, 90286, 90287, 90288, 90289, 90290, 90364, 90368, 90369, 90370, 90371, 90372, 90373, 90374, 90375, 90376, 90377, 90425, 90430, 90431, 90432, 90433, 90434, 90435, 90436, 90437, 90438, 90439, 90440, 90441, 90442, 90443, 90522, 90542, 90543, 90544, 90548, 90549, 90552, 90584, 90586, 90587, 90594, 90603, 90607, 90610, 90626, 90629, 90630, 90712, 90753, 90754, 90755, 90756, 90758, 90759, 90761, 90762, 90763, 90764, 90840, 90841, 90842, 90845, 90846, 90848, 90849, 90850, 90852, 90901, 90902, 90904, 90906, 90907, 90908, 90910, 90911, 90912, 90914, 90915, 90917, 90918, 90919, 90987, 91013, 91017, 91018, 91023, 91024, 91027, 91062, 91078, 91082, 91084, 91086, 91187, 91232, 91235, 91237, 91238, 91239, 91240, 91319, 91322, 91324, 91325, 91326, 91327, 91380, 91384, 91385, 91386, 91387, 91388, 91389, 91391, 91392, 91472, 91493, 91494, 91498, 91536, 91537, 91553, 91576, 91579, 91662, 91708, 91709, 91711, 91712, 91713, 91714, 91795, 91796, 91798, 91799, 91800, 91802, 91856, 91857, 91858, 91860, 91861, 91862, 91864, 91865, 91867, 91868, 91967, 91968, 91973, 91974, 91977, 92012, 92028, 92032, 92137, 92187, 92188, 92189, 92274, 92275, 92277, 92335, 92336, 92337, 92339, 92342, 92443, 92448, 92487, 92503, 92612, 92666, 92671, 92753, 92757, 92799, 92803, 92820, 92822, 92830, 92831, 92844, 92903, 92947, 92956, 92960, 92979, 92983, 92998, 93007, 93053, 93090, 93141, 93142, 93145, 93146, 93228, 93229, 93232, 93241, 93274, 93275, 93278, 93295, 93296, 93297, 93298, 93303, 93304, 93305, 93306, 93318, 93319, 93375, 93378, 93400, 93414, 93422, 93431, 93434, 93435, 93439, 93444, 93454, 93455, 93458, 93460, 93473, 93480, 93481, 93482, 93528, 93565, 93567, 93616, 93617, 93618, 93619, 93620, 93621, 93630, 93703, 93704, 93705, 93706, 93707, 93708, 93716, 93749, 93750, 93751, 93752, 93753, 93754, 93770, 93771, 93772, 93773, 93778, 93779, 93780, 93781, 93784, 93793, 93794, 93800, 93837, 93850, 93853, 93875, 93882, 93889, 93897, 93905, 93906, 93909, 93910, 93914, 93919, 93929, 93930, 93933, 93934, 93935, 93948, 93955, 93956, 93957, 94003, 94040, 94042, 94092, 94093, 94094, 94095, 94105, 94179, 94180, 94181, 94183, 94191, 94225, 94226, 94227, 94229, 94245, 94246, 94247, 94248, 94253, 94254, 94259, 94268, 94275, 94312, 94325, 94350, 94357, 94364, 94380, 94381, 94384, 94389, 94394, 94404, 94405, 94409, 94410, 94423, 94430, 94431, 94515, 94517, 94568, 94569, 94580, 94655, 94656, 94658, 94701, 94702, 94704, 94721, 94723, 94734, 94750, 94787, 94825, 94832, 94855, 94864, 94880, 94884, 94992, 95041, 95046, 95047, 95050, 95128, 95132, 95134, 95136, 95151, 95174, 95178, 95180, 95184, 95188, 95195, 95197, 95199, 95200, 95201, 95205, 95206, 95213, 95217, 95219, 95271, 95278, 95312, 95322, 95331, 95335, 95336, 95351, 95354, 95358, 95373, 95375, 95376, 95377, 95382, 95428, 95458, 95465, 95516, 95517, 95520, 95521, 95522, 95523, 95524, 95525, 95526, 95589, 95593, 95603, 95604, 95607, 95609, 95610, 95611, 95612, 95613, 95616, 95626, 95649, 95650, 95653, 95655, 95656, 95657, 95658, 95659, 95663, 95670, 95671, 95672, 95673, 95674, 95675, 95676, 95678, 95679, 95680, 95681, 95683, 95688, 95692, 95693, 95694, 95699, 95746, 95750, 95753, 95775, 95777, 95780, 95787, 95789, 95797, 95804, 95806, 95809, 95810, 95811, 95814, 95819, 95826, 95829, 95830, 95832, 95833, 95835, 95848, 95850, 95851, 95852, 95855, 95856, 95857, 95903, 95933, 95940, 95942, 95978, 95979, 95980, 95981, 95992, 95993, 95994, 95995, 95997, 95998, 95999, 96000, 96001, 96005, 96064, 96065, 96066, 96067, 96068, 96079, 96080, 96081, 96083, 96084, 96085, 96086, 96087, 96088, 96091, 96101, 96125, 96126, 96127, 96129, 96130, 96131, 96132, 96133, 96134, 96138, 96144, 96145, 96146, 96147, 96148, 96149, 96150, 96151, 96153, 96154, 96158, 96159, 96163, 96167, 96168, 96174, 96175, 96212, 96221, 96225, 96238, 96250, 96252, 96255, 96257, 96262, 96264, 96279, 96280, 96281, 96284, 96286, 96289, 96294, 96301, 96304, 96305, 96307, 96309, 96310, 96311, 96323, 96325, 96326, 96327, 96330, 96331, 96408, 96415, 96417, 96453, 96454, 96455, 96456, 96468, 96469, 96473, 96474, 96476, 96480, 96540, 96541, 96542, 96555, 96556, 96558, 96560, 96562, 96563, 96601, 96602, 96604, 96606, 96607, 96608, 96619, 96621, 96623, 96625, 96626, 96633, 96634, 96638, 96649, 96650, 96687, 96713, 96725, 96727, 96730, 96732, 96754, 96755, 96764, 96776, 96780, 96782, 96784, 96786, 96800, 96883, 96892, 96932, 96935, 96940, 96941, 96946, 96947, 96950, 96952, 96953, 96954, 97019, 97022, 97026, 97028, 97032, 97034, 97036, 97039, 97040, 97042, 97051, 97074, 97078, 97080, 97084, 97085, 97086, 97087, 97088, 97091, 97095, 97097, 97099, 97100, 97101, 97105, 97106, 97107, 97113, 97117, 97119, 97122, 97171, 97172, 97178, 97194, 97212, 97221, 97222, 97227, 97231, 97235, 97236, 97237, 97251, 97253, 97254, 97258, 97273, 97275, 97276, 97277, 97279, 97282, 97328, 97358, 97362, 97365, 97407, 97408, 97409, 97410, 97411, 97415, 97417, 97420, 97422, 97423, 97424, 97425, 97426, 97427, 97428, 97429, 97489, 97493, 97494, 97495, 97496, 97497, 97498, 97501, 97504, 97509, 97510, 97511, 97512, 97513, 97514, 97515, 97516, 97517, 97526, 97550, 97555, 97556, 97557, 97558, 97559, 97560, 97561, 97562, 97563, 97565, 97566, 97568, 97570, 97571, 97572, 97573, 97574, 97575, 97576, 97578, 97579, 97582, 97583, 97588, 97592, 97593, 97597, 97599, 97646, 97647, 97650, 97667, 97669, 97674, 97675, 97677, 97680, 97687, 97689, 97696, 97702, 97704, 97706, 97709, 97711, 97712, 97714, 97719, 97726, 97728, 97729, 97730, 97732, 97735, 97748, 97750, 97751, 97752, 97754, 97755, 97756, 97833, 97837, 97840, 97842, 97878, 97879, 97880, 97881, 97883, 97884, 97886, 97893, 97894, 97898, 97899, 97901, 97902, 97903, 97904, 97905, 97965, 97966, 97967, 97970, 97971, 97973, 97980, 97981, 97983, 97985, 97987, 97988, 97989, 97990, 97992, 98026, 98027, 98029, 98031, 98032, 98033, 98035, 98036, 98037, 98040, 98043, 98044, 98046, 98048, 98050, 98051, 98057, 98058, 98059, 98063, 98072, 98074, 98075, 98112, 98138, 98142, 98149, 98150, 98152, 98155, 98157, 98171, 98177, 98179, 98180, 98187, 98189, 98201, 98203, 98205, 98207, 98209, 98211, 98225, 98308, 98312, 98317, 98357, 98360, 98362, 98363, 98364, 98365, 98372, 98375, 98377, 98378, 98379, 98444, 98447, 98449, 98450, 98451, 98452, 98459, 98461, 98464, 98465, 98467, 98476, 98505, 98509, 98510, 98511, 98512, 98513, 98514, 98516, 98517, 98520, 98522, 98524, 98525, 98526, 98532, 98538, 98542, 98547, 98596, 98597, 98618, 98619, 98623, 98637, 98646, 98652, 98656, 98661, 98662, 98676, 98678, 98679, 98698, 98700, 98701, 98702, 98704, 98783, 98787, 98790, 98833, 98834, 98836, 98837, 98838, 98839, 98848, 98849, 98851, 98852, 98853, 98854, 98920, 98921, 98923, 98924, 98925, 98927, 98935, 98937, 98938, 98939, 98940, 98942, 98981, 98982, 98983, 98985, 98986, 98987, 98989, 98990, 98992, 98993, 98996, 98998, 99000, 99001, 99007, 99008, 99013, 99022, 99024, 99092, 99093, 99098, 99099, 99100, 99102, 99105, 99121, 99127, 99129, 99137, 99139, 99151, 99153, 99155, 99157, 99175, 99258, 99262, 99267, 99312, 99313, 99314, 99327, 99328, 99329, 99399, 99400, 99402, 99414, 99415, 99417, 99460, 99461, 99462, 99464, 99467, 99475, 99476, 99482, 99488, 99497, 99568, 99573, 99596, 99602, 99612, 99626, 99628, 99650, 99733, 99737, 99750, 99755, 99791, 99796, 99806, 99809, 99813, 99878, 99882, 99893, 99895, 99897, 99924, 99928, 99945, 99947, 99955, 99956, 99960, 99961, 99962, 99966, 99969, 100019, 100028, 100066, 100069, 100072, 100081, 100085, 100104, 100106, 100108, 100123, 100124, 100132, 100178, 100200, 100215, 100225, 100226, 100229, 100230, 100266, 100267, 100270, 100271, 100281, 100282, 100283, 100284, 100285, 100288, 100353, 100354, 100357, 100366, 100368, 100369, 100370, 100371, 100372, 100378, 100390, 100399, 100400, 100403, 100420, 100421, 100422, 100423, 100427, 100428, 100429, 100430, 100431, 100435, 100436, 100437, 100440, 100441, 100443, 100444, 100448, 100494, 100500, 100501, 100503, 100525, 100539, 100541, 100543, 100544, 100547, 100553, 100556, 100559, 100560, 100564, 100569, 100579, 100580, 100581, 100583, 100585, 100598, 100599, 100605, 100606, 100607, 100653, 100675, 100690, 100692, 100701, 100702, 100703, 100704, 100714, 100742, 100743, 100744, 100745, 100755, 100756, 100757, 100758, 100759, 100760, 100763, 100829, 100830, 100831, 100833, 100841, 100843, 100844, 100845, 100846, 100847, 100853, 100856, 100865, 100871, 100875, 100876, 100877, 100879, 100895, 100896, 100897, 100898, 100902, 100903, 100904, 100909, 100910, 100911, 100912, 100915, 100916, 100918, 100923, 100925, 100962, 100969, 100975, 100976, 101000, 101007, 101014, 101016, 101018, 101019, 101028, 101030, 101031, 101034, 101039, 101044, 101054, 101055, 101056, 101059, 101060, 101073, 101074, 101080, 101081, 101150, 101165, 101167, 101177, 101178, 101189, 101218, 101219, 101230, 101232, 101233, 101235, 101305, 101306, 101308, 101319, 101321, 101331, 101346, 101351, 101352, 101354, 101371, 101373, 101377, 101384, 101385, 101386, 101387, 101390, 101398, 101400, 101437, 101475, 101482, 101491, 101493, 101503, 101505, 101514, 101530, 101531, 101534, 101625, 101642, 101650, 101655, 101656, 101659, 101691, 101696, 101697, 101700, 101706, 101709, 101711, 101712, 101713, 101714, 101778, 101782, 101784, 101786, 101793, 101795, 101797, 101798, 101799, 101800, 101801, 101802, 101807, 101823, 101824, 101828, 101830, 101834, 101838, 101845, 101847, 101849, 101850, 101851, 101855, 101856, 101860, 101861, 101862, 101863, 101864, 101866, 101867, 101869, 101871, 101895, 101919, 101921, 101928, 101962, 101966, 101969, 101972, 101976, 101981, 101985, 101986, 102001, 102004, 102006, 102008, 102023, 102024, 102025, 102026, 102027, 102032, 102078, 102100, 102108, 102115, 102126, 102129, 102131, 102132, 102133, 102134, 102135, 102167, 102170, 102172, 102173, 102174, 102175, 102176, 102181, 102182, 102183, 102184, 102185, 102186, 102187, 102188, 102189, 102239, 102243, 102254, 102259, 102260, 102261, 102262, 102263, 102266, 102268, 102269, 102270, 102271, 102272, 102273, 102274, 102275, 102276, 102277, 102278, 102280, 102282, 102290, 102295, 102298, 102300, 102305, 102306, 102307, 102308, 102309, 102313, 102320, 102321, 102322, 102323, 102324, 102325, 102326, 102327, 102328, 102329, 102333, 102335, 102336, 102337, 102338, 102339, 102340, 102341, 102342, 102343, 102346, 102348, 102349, 102370, 102394, 102396, 102400, 102401, 102425, 102427, 102430, 102437, 102439, 102441, 102443, 102444, 102451, 102453, 102454, 102456, 102459, 102461, 102464, 102469, 102476, 102479, 102480, 102481, 102482, 102485, 102498, 102499, 102500, 102501, 102502, 102505, 102506, 102575, 102583, 102590, 102592, 102602, 102603, 102607, 102608, 102610, 102614, 102628, 102629, 102630, 102631, 102643, 102644, 102648, 102649, 102651, 102655, 102657, 102658, 102660, 102661, 102662, 102664, 102715, 102716, 102717, 102730, 102731, 102733, 102735, 102737, 102738, 102744, 102746, 102748, 102749, 102750, 102755, 102756, 102770, 102771, 102776, 102777, 102779, 102781, 102782, 102783, 102794, 102796, 102798, 102800, 102801, 102802, 102808, 102809, 102810, 102811, 102812, 102813, 102814, 102815, 102821, 102823, 102824, 102825, 102845, 102862, 102888, 102900, 102902, 102905, 102907, 102916, 102918, 102926, 102928, 102929, 102930, 102939, 102951, 102955, 102956, 102957, 102959, 102961, 102975, 103050, 103058, 103067, 103081, 103084, 103086, 103087, 103088, 103107, 103110, 103115, 103122, 103125, 103127, 103128, 103129, 103131, 103134, 103136, 103137, 103138, 103139, 103194, 103197, 103201, 103209, 103211, 103214, 103215, 103217, 103218, 103220, 103222, 103223, 103224, 103225, 103226, 103227, 103229, 103232, 103242, 103248, 103255, 103259, 103260, 103261, 103262, 103263, 103266, 103270, 103272, 103274, 103275, 103276, 103282, 103285, 103286, 103287, 103288, 103289, 103291, 103292, 103296, 103297, 103320, 103344, 103346, 103347, 103369, 103387, 103391, 103394, 103396, 103401, 103402, 103406, 103411, 103412, 103426, 103428, 103429, 103431, 103448, 103449, 103450, 103451, 103452, 103454, 103525, 103533, 103537, 103540, 103557, 103558, 103560, 103561, 103562, 103563, 103583, 103584, 103586, 103598, 103599, 103601, 103602, 103603, 103604, 103607, 103608, 103610, 103611, 103612, 103614, 103670, 103671, 103673, 103685, 103687, 103688, 103689, 103690, 103692, 103694, 103696, 103698, 103699, 103700, 103704, 103705, 103717, 103720, 103731, 103732, 103733, 103735, 103736, 103737, 103740, 103743, 103746, 103748, 103750, 103751, 103752, 103757, 103758, 103760, 103761, 103762, 103763, 103764, 103765, 103771, 103772, 103773, 103774, 103795, 103842, 103849, 103850, 103852, 103855, 103866, 103868, 103871, 103876, 103877, 103878, 103879, 103887, 103889, 103901, 103903, 103905, 103906, 103907, 103925, 104000, 104008, 104012, 104017, 104036, 104037, 104038, 104062, 104063, 104064, 104077, 104078, 104079, 104086, 104087, 104089, 104149, 104150, 104152, 104164, 104165, 104167, 104173, 104174, 104175, 104179, 104192, 104210, 104211, 104212, 104214, 104217, 104225, 104226, 104232, 104235, 104236, 104237, 104238, 104239, 104246, 104247, 104270, 104318, 104323, 104341, 104346, 104351, 104352, 104362, 104376, 104378, 104381, 104400, 104475, 104483, 104487, 104500, 104505, 104515, 104518, 104523, 104541, 104546, 104556, 104559, 104563, 104565, 104566, 104567, 104568, 104628, 104632, 104643, 104645, 104647, 104658, 104659, 104660, 104661, 104664, 104672, 104674, 104678, 104695, 104697, 104705, 104706, 104710, 104711, 104712, 104716, 104719, 104720, 104769, 104778, 104816, 104819, 104822, 104825, 104831, 104835, 104854, 104856, 104858, 104873, 104874, 104882, 104928, 104950, 104965, 104976, 104979, 104990, 104991, 104992, 104993, 104994, 104998, 105017, 105020, 105031, 105032, 105033, 105034, 105035, 105038, 105040, 105041, 105042, 105043, 105104, 105116, 105118, 105119, 105120, 105121, 105122, 105128, 105133, 105134, 105135, 105136, 105138, 105139, 105140, 105144, 105147, 105150, 105170, 105171, 105172, 105173, 105177, 105178, 105179, 105185, 105186, 105187, 105190, 105191, 105193, 105195, 105198, 105244, 105250, 105251, 105275, 105289, 105291, 105293, 105294, 105300, 105303, 105306, 105309, 105314, 105319, 105329, 105330, 105331, 105335, 105348, 105349, 105355, 105356, 105425, 105440, 105442, 105452, 105453, 105464, 105466, 105467, 105469, 105493, 105494, 105505, 105507, 105508, 105510, 105515, 105516, 105517, 105518, 105580, 105581, 105583, 105594, 105596, 105606, 105608, 105609, 105610, 105611, 105613, 105619, 105621, 105626, 105627, 105629, 105646, 105648, 105652, 105659, 105660, 105661, 105662, 105665, 105670, 105673, 105675, 105712, 105750, 105757, 105766, 105768, 105775, 105778, 105780, 105789, 105805, 105806, 105809, 105900, 105917, 105931, 105934, 105940, 105943, 105945, 105946, 105947, 105948, 105972, 105975, 105981, 105984, 105986, 105987, 105988, 105989, 105990, 105991, 105992, 105993, 106059, 106061, 106068, 106070, 106072, 106073, 106074, 106075, 106076, 106077, 106082, 106083, 106084, 106085, 106086, 106087, 106089, 106091, 106097, 106098, 106105, 106109, 106113, 106120, 106122, 106124, 106125, 106126, 106135, 106136, 106137, 106138, 106139, 106141, 106142, 106145, 106146, 106170, 106194, 106196, 106237, 106241, 106244, 106250, 106251, 106256, 106261, 106276, 106279, 106281, 106298, 106299, 106300, 106301, 106302, 106375, 106383, 106390, 106407, 106408, 106410, 106416, 106417, 106419, 106420, 106421, 106422, 106448, 106449, 106451, 106457, 106458, 106460, 106461, 106462, 106464, 106465, 106466, 106467, 106468, 106535, 106537, 106538, 106544, 106546, 106548, 106549, 106550, 106555, 106558, 106559, 106560, 106561, 106562, 106563, 106566, 106569, 106570, 106581, 106582, 106583, 106596, 106598, 106600, 106601, 106602, 106608, 106610, 106611, 106612, 106613, 106614, 106615, 106620, 106621, 106623, 106624, 106645, 106700, 106702, 106705, 106716, 106718, 106725, 106726, 106728, 106729, 106739, 106751, 106755, 106756, 106757, 106775, 106850, 106858, 106867, 106886, 106887, 106888, 106895, 106896, 106897, 106927, 106928, 106929, 106936, 106937, 106939, 106940, 106941, 106942, 106943, 107014, 107015, 107017, 107023, 107024, 107025, 107029, 107033, 107034, 107035, 107036, 107037, 107041, 107042, 107060, 107061, 107062, 107075, 107076, 107082, 107085, 107086, 107087, 107088, 107089, 107095, 107096, 107097, 107120, 107191, 107196, 107200, 107201, 107202, 107212, 107226, 107228, 107231, 107250, 107325, 107333, 107337, 107419, 107424, 107524, 107528, 107576, 107578, 107580, 107583, 107600, 107627, 107659, 107685, 107708, 107721, 107732, 107821, 107894, 107895, 107898, 107899, 107999, 108000, 108003, 108051, 108052, 108053, 108054, 108055, 108058, 108063, 108074, 108075, 108086, 108099, 108102, 108134, 108159, 108160, 108169, 108183, 108185, 108193, 108195, 108196, 108205, 108207, 108296, 108299, 108369, 108370, 108371, 108372, 108373, 108374, 108382, 108474, 108475, 108476, 108477, 108478, 108479, 108526, 108527, 108528, 108529, 108530, 108533, 108538, 108540, 108549, 108550, 108556, 108561, 108562, 108574, 108577, 108609, 108634, 108635, 108644, 108658, 108659, 108660, 108668, 108670, 108671, 108680, 108682, 108771, 108774, 108845, 108846, 108847, 108848, 108857, 108950, 108951, 108952, 108954, 109001, 109002, 109003, 109004, 109008, 109013, 109015, 109024, 109031, 109036, 109037, 109049, 109084, 109109, 109119, 109134, 109135, 109143, 109145, 109146, 109155, 109246, 109249, 109321, 109322, 109332, 109426, 109427, 109429, 109477, 109488, 109490, 109506, 109511, 109512, 109609, 109618, 109620, 109724, 109794, 109799, 109800, 109802, 109808, 109899, 109903, 109905, 109909, 109913, 109951, 109953, 109955, 109956, 109957, 109958, 109959, 109961, 109973, 109975, 109995, 110002, 110034, 110060, 110061, 110083, 110091, 110096, 110101, 110107, 110180, 110196, 110269, 110270, 110273, 110274, 110275, 110276, 110277, 110278, 110279, 110283, 110314, 110318, 110374, 110375, 110378, 110380, 110381, 110382, 110383, 110384, 110388, 110426, 110427, 110428, 110429, 110430, 110431, 110432, 110433, 110434, 110436, 110438, 110439, 110448, 110449, 110450, 110455, 110461, 110470, 110474, 110477, 110502, 110509, 110534, 110535, 110536, 110544, 110557, 110558, 110560, 110566, 110568, 110570, 110571, 110576, 110580, 110582, 110655, 110671, 110674, 110703, 110704, 110705, 110706, 110745, 110746, 110747, 110748, 110750, 110751, 110752, 110753, 110754, 110757, 110758, 110789, 110790, 110791, 110792, 110793, 110850, 110851, 110852, 110854, 110855, 110856, 110857, 110858, 110859, 110863, 110869, 110901, 110902, 110903, 110904, 110906, 110907, 110908, 110909, 110911, 110913, 110914, 110915, 110923, 110924, 110930, 110931, 110936, 110937, 110945, 110949, 110963, 110977, 110984, 111009, 111011, 111019, 111032, 111034, 111035, 111036, 111041, 111043, 111045, 111046, 111051, 111055, 111130, 111146, 111149, 111178, 111179, 111180, 111181, 111221, 111222, 111226, 111228, 111229, 111232, 111265, 111266, 111267, 111326, 111327, 111329, 111331, 111332, 111333, 111344, 111377, 111381, 111382, 111384, 111386, 111388, 111389, 111390, 111405, 111406, 111411, 111412, 111438, 111452, 111507, 111509, 111511, 111516, 111518, 111520, 111605, 111624, 111657, 111660, 111665, 111694, 111699, 111700, 111702, 111705, 111706, 111708, 111744, 111747, 111751, 111799, 111803, 111805, 111809, 111810, 111811, 111812, 111813, 111816, 111851, 111853, 111855, 111856, 111857, 111858, 111859, 111860, 111861, 111862, 111873, 111875, 111878, 111895, 111897, 111902, 111919, 111934, 111960, 111961, 111962, 111978, 111983, 111991, 111996, 112001, 112004, 112007, 112080, 112087, 112096, 112132, 112133, 112134, 112135, 112136, 112140, 112170, 112173, 112175, 112176, 112177, 112178, 112179, 112180, 112181, 112183, 112214, 112218, 112219, 112220, 112221, 112222, 112223, 112226, 112275, 112280, 112281, 112282, 112283, 112284, 112285, 112286, 112287, 112288, 112290, 112291, 112293, 112326, 112327, 112328, 112329, 112331, 112332, 112333, 112334, 112335, 112336, 112337, 112338, 112339, 112348, 112349, 112353, 112355, 112361, 112370, 112372, 112374, 112392, 112394, 112399, 112402, 112409, 112434, 112436, 112437, 112444, 112453, 112457, 112460, 112466, 112468, 112470, 112471, 112476, 112479, 112480, 112555, 112562, 112571, 112574, 112603, 112604, 112605, 112606, 112608, 112609, 112611, 112646, 112647, 112651, 112653, 112654, 112655, 112656, 112657, 112690, 112691, 112692, 112695, 112696, 112698, 112751, 112752, 112754, 112756, 112757, 112758, 112760, 112761, 112762, 112765, 112768, 112769, 112802, 112806, 112807, 112809, 112810, 112811, 112812, 112813, 112814, 112815, 112828, 112830, 112831, 112836, 112837, 112863, 112867, 112874, 112877, 112912, 112928, 112932, 112934, 112936, 112941, 112943, 112945, 113030, 113037, 113049, 113082, 113085, 113087, 113088, 113089, 113090, 113125, 113127, 113130, 113131, 113133, 113169, 113172, 113174, 113175, 113176, 113177, 113230, 113234, 113235, 113236, 113237, 113238, 113239, 113241, 113242, 113276, 113278, 113281, 113282, 113283, 113284, 113285, 113286, 113287, 113298, 113303, 113320, 113322, 113343, 113344, 113348, 113359, 113386, 113387, 113403, 113416, 113421, 113426, 113429, 113505, 113512, 113521, 113558, 113559, 113561, 113562, 113563, 113564, 113601, 113603, 113604, 113605, 113606, 113645, 113646, 113648, 113649, 113650, 113652, 113706, 113707, 113708, 113710, 113711, 113712, 113714, 113715, 113717, 113718, 113752, 113756, 113757, 113759, 113760, 113761, 113762, 113763, 113764, 113778, 113780, 113786, 113817, 113818, 113823, 113824, 113827, 113862, 113878, 113882, 113891, 113893, 113895, 113980, 113987, 113999, 114037, 114038, 114039, 114080, 114081, 114124, 114125, 114127, 114185, 114186, 114187, 114189, 114192, 114231, 114232, 114234, 114235, 114236, 114237, 114253, 114293, 114298, 114337, 114353, 114366, 114455, 114462, 114516, 114521, 114544, 114549, 114559, 114561, 114567, 114603, 114607, 114649, 114653, 114670, 114672, 114680, 114681, 114694, 114701, 114703, 114705, 114708, 114716, 114717, 114718, 114722, 114725, 114743, 114752, 114753, 114784, 114797, 114806, 114810, 114829, 114833, 114837, 114846, 114847, 114848, 114857, 114903, 114910, 114940, 114946, 114991, 114992, 114995, 114996, 115019, 115020, 115023, 115024, 115034, 115035, 115036, 115037, 115038, 115042, 115078, 115079, 115082, 115091, 115124, 115125, 115128, 115145, 115146, 115147, 115148, 115153, 115154, 115155, 115156, 115168, 115169, 115176, 115177, 115178, 115179, 115180, 115183, 115188, 115191, 115192, 115193, 115196, 115197, 115199, 115200, 115204, 115211, 115218, 115224, 115225, 115227, 115228, 115250, 115259, 115264, 115272, 115281, 115284, 115285, 115289, 115294, 115304, 115305, 115308, 115310, 115312, 115318, 115320, 115321, 115322, 115323, 115330, 115331, 115332, 115378, 115385, 115415, 115417, 115421, 115424, 115467, 115468, 115469, 115470, 115480, 115495, 115496, 115497, 115498, 115507, 115509, 115510, 115511, 115512, 115513, 115517, 115554, 115555, 115556, 115558, 115566, 115600, 115601, 115602, 115604, 115620, 115621, 115622, 115623, 115628, 115629, 115634, 115643, 115650, 115651, 115652, 115653, 115654, 115658, 115663, 115665, 115666, 115667, 115668, 115671, 115672, 115674, 115679, 115681, 115686, 115687, 115693, 115699, 115700, 115725, 115732, 115734, 115739, 115755, 115756, 115759, 115764, 115769, 115779, 115780, 115784, 115785, 115787, 115793, 115795, 115796, 115797, 115798, 115805, 115806, 115860, 115890, 115892, 115896, 115899, 115943, 115944, 115955, 115971, 115972, 115982, 115985, 115987, 115988, 116030, 116031, 116033, 116076, 116077, 116079, 116096, 116098, 116109, 116125, 116127, 116138, 116140, 116141, 116142, 116143, 116146, 116154, 116156, 116161, 116162, 116200, 116207, 116230, 116239, 116255, 116259, 116262, 116268, 116270, 116272, 116335, 116367, 116374, 116416, 116421, 116422, 116425, 116444, 116449, 116450, 116452, 116458, 116459, 116461, 116464, 116465, 116466, 116467, 116503, 116507, 116509, 116511, 116526, 116549, 116553, 116555, 116559, 116563, 116570, 116572, 116574, 116575, 116576, 116580, 116581, 116588, 116592, 116594, 116601, 116603, 116605, 116606, 116607, 116608, 116609, 116611, 116616, 116617, 116618, 116619, 116622, 116623, 116625, 116627, 116643, 116645, 116646, 116652, 116653, 116684, 116687, 116697, 116706, 116710, 116711, 116726, 116729, 116733, 116737, 116741, 116746, 116747, 116748, 116750, 116751, 116752, 116757, 116803, 116810, 116830, 116833, 116840, 116846, 116892, 116895, 116897, 116898, 116899, 116900, 116901, 116920, 116923, 116925, 116926, 116927, 116928, 116929, 116933, 116934, 116935, 116936, 116937, 116938, 116939, 116940, 116941, 116942, 116964, 116968, 116979, 116984, 116985, 116986, 116987, 116988, 116991, 117001, 117025, 117030, 117031, 117032, 117033, 117034, 117038, 117045, 117046, 117047, 117048, 117049, 117050, 117051, 117053, 117054, 117058, 117063, 117067, 117068, 117074, 117076, 117077, 117078, 117079, 117081, 117082, 117083, 117084, 117086, 117088, 117089, 117091, 117092, 117093, 117094, 117096, 117097, 117098, 117099, 117102, 117104, 117105, 117111, 117118, 117120, 117121, 117124, 117125, 117150, 117152, 117155, 117159, 117162, 117164, 117179, 117181, 117184, 117186, 117189, 117194, 117201, 117204, 117205, 117207, 117210, 117212, 117216, 117218, 117220, 117221, 117222, 117223, 117225, 117226, 117227, 117230, 117231, 117285, 117305, 117308, 117315, 117317, 117321, 117324, 117353, 117354, 117355, 117356, 117368, 117369, 117373, 117374, 117376, 117380, 117396, 117397, 117401, 117403, 117404, 117407, 117410, 117412, 117413, 117414, 117415, 117416, 117440, 117441, 117442, 117455, 117456, 117458, 117460, 117462, 117463, 117501, 117502, 117504, 117506, 117507, 117508, 117519, 117521, 117523, 117525, 117526, 117533, 117534, 117538, 117549, 117550, 117552, 117556, 117557, 117559, 117561, 117563, 117564, 117565, 117566, 117567, 117568, 117569, 117571, 117577, 117579, 117580, 117581, 117586, 117587, 117613, 117625, 117627, 117630, 117632, 117654, 117655, 117664, 117676, 117680, 117682, 117684, 117686, 117687, 117691, 117693, 117695, 117697, 117700, 117760, 117780, 117783, 117792, 117799, 117832, 117835, 117840, 117847, 117850, 117852, 117853, 117854, 117875, 117877, 117880, 117881, 117883, 117884, 117886, 117889, 117890, 117891, 117892, 117919, 117922, 117926, 117934, 117936, 117939, 117940, 117942, 117951, 117980, 117984, 117985, 117986, 117987, 117988, 117991, 117995, 117997, 117999, 118000, 118001, 118007, 118013, 118017, 118022, 118026, 118028, 118031, 118032, 118033, 118034, 118035, 118036, 118037, 118041, 118042, 118043, 118044, 118047, 118048, 118052, 118053, 118068, 118070, 118071, 118072, 118094, 118109, 118112, 118121, 118127, 118131, 118136, 118137, 118151, 118153, 118154, 118162, 118166, 118171, 118172, 118173, 118175, 118176, 118177, 118179, 118235, 118255, 118258, 118262, 118265, 118271, 118308, 118309, 118311, 118323, 118324, 118326, 118327, 118328, 118329, 118351, 118353, 118354, 118355, 118356, 118360, 118362, 118363, 118364, 118365, 118366, 118395, 118396, 118398, 118410, 118412, 118413, 118414, 118415, 118417, 118456, 118457, 118458, 118460, 118461, 118462, 118465, 118468, 118471, 118473, 118475, 118476, 118482, 118483, 118488, 118497, 118499, 118502, 118506, 118507, 118509, 118510, 118511, 118512, 118513, 118514, 118516, 118517, 118518, 118519, 118521, 118527, 118528, 118529, 118530, 118536, 118567, 118574, 118575, 118577, 118580, 118596, 118602, 118604, 118612, 118614, 118626, 118628, 118630, 118632, 118637, 118641, 118643, 118645, 118647, 118650, 118710, 118730, 118733, 118737, 118742, 118749, 118787, 118788, 118789, 118802, 118803, 118804, 118830, 118831, 118839, 118840, 118841, 118874, 118875, 118877, 118889, 118890, 118892, 118935, 118936, 118937, 118939, 118942, 118950, 118951, 118957, 118963, 118972, 118981, 118982, 118984, 118985, 118986, 118987, 118991, 118992, 118993, 118994, 119002, 119003, 119043, 119048, 119071, 119077, 119087, 119101, 119103, 119112, 119116, 119122, 119125, 119185, 119205, 119208, 119212, 119225, 119230, 119266, 119271, 119281, 119284, 119288, 119294, 119299, 119309, 119311, 119317, 119318, 119319, 119320, 119321, 119353, 119357, 119368, 119370, 119372, 119399, 119403, 119420, 119422, 119430, 119431, 119435, 119436, 119437, 119441, 119444, 119451, 119453, 119455, 119458, 119466, 119467, 119468, 119472, 119475, 119476, 119493, 119494, 119502, 119503, 119534, 119541, 119544, 119547, 119556, 119560, 119579, 119581, 119583, 119587, 119596, 119597, 119598, 119599, 119607, 119653, 119660, 119675, 119690, 119696, 119701, 119704, 119742, 119745, 119756, 119757, 119758, 119759, 119760, 119763, 119770, 119773, 119784, 119785, 119786, 119787, 119788, 119792, 119793, 119794, 119795, 119796, 119829, 119841, 119843, 119844, 119845, 119846, 119847, 119853, 119865, 119875, 119895, 119896, 119897, 119898, 119902, 119903, 119904, 119910, 119911, 119912, 119915, 119916, 119918, 119923, 119926, 119927, 119928, 119929, 119933, 119938, 119941, 119942, 119943, 119946, 119947, 119949, 119951, 119954, 119961, 119968, 119969, 119974, 119975, 119976, 120000, 120009, 120014, 120016, 120018, 120019, 120028, 120031, 120034, 120039, 120044, 120054, 120055, 120056, 120060, 120062, 120068, 120070, 120071, 120072, 120073, 120074, 120080, 120081, 120135, 120150, 120165, 120167, 120171, 120174, 120177, 120178, 120189, 120218, 120219, 120230, 120232, 120233, 120235, 120246, 120247, 120257, 120260, 120262, 120263, 120268, 120269, 120270, 120271, 120305, 120306, 120308, 120319, 120321, 120331, 120346, 120351, 120352, 120354, 120371, 120373, 120377, 120384, 120385, 120386, 120387, 120390, 120398, 120400, 120402, 120413, 120415, 120416, 120417, 120418, 120421, 120426, 120429, 120431, 120436, 120437, 120475, 120482, 120491, 120493, 120503, 120505, 120514, 120530, 120531, 120534, 120537, 120543, 120545, 120547, 120610, 120625, 120642, 120649, 120656, 120659, 120697, 120700, 120706, 120709, 120711, 120712, 120713, 120714, 120725, 120727, 120733, 120734, 120736, 120739, 120740, 120741, 120742, 120743, 120744, 120745, 120746, 120784, 120786, 120793, 120795, 120797, 120798, 120799, 120800, 120801, 120802, 120807, 120823, 120830, 120834, 120838, 120845, 120847, 120849, 120850, 120851, 120860, 120861, 120862, 120863, 120864, 120866, 120867, 120871, 120876, 120878, 120881, 120882, 120883, 120884, 120886, 120891, 120892, 120893, 120894, 120895, 120897, 120898, 120901, 120902, 120918, 120919, 120920, 120921, 120959, 120962, 120966, 120969, 120976, 120981, 120986, 121001, 121004, 121006, 121012, 121016, 121021, 121022, 121023, 121024, 121025, 121026, 121027, 121085, 121100, 121105, 121108, 121115, 121121, 121132, 121133, 121135, 121173, 121174, 121176, 121182, 121183, 121185, 121186, 121187, 121189, 121201, 121203, 121204, 121210, 121212, 121213, 121214, 121215, 121216, 121218, 121219, 121220, 121221, 121260, 121262, 121263, 121269, 121271, 121273, 121274, 121275, 121280, 121295, 121306, 121307, 121308, 121321, 121323, 121325, 121326, 121327, 121333, 121335, 121336, 121337, 121338, 121339, 121340, 121346, 121348, 121349, 121352, 121356, 121357, 121359, 121361, 121363, 121364, 121366, 121367, 121368, 121369, 121370, 121371, 121376, 121377, 121379, 121380, 121386, 121425, 121427, 121430, 121441, 121443, 121451, 121453, 121454, 121464, 121476, 121480, 121481, 121482, 121487, 121491, 121493, 121495, 121497, 121500, 121560, 121575, 121580, 121583, 121592, 121599, 121611, 121612, 121613, 121652, 121653, 121654, 121661, 121662, 121664, 121680, 121681, 121689, 121690, 121691, 121693, 121694, 121695, 121696, 121739, 121740, 121742, 121748, 121749, 121750, 121754, 121767, 121785, 121786, 121787, 121800, 121801, 121807, 121810, 121811, 121812, 121813, 121814, 121821, 121822, 121831, 121832, 121834, 121835, 121836, 121837, 121841, 121842, 121843, 121844, 121845, 121851, 121852, 121853, 121916, 121921, 121926, 121927, 121937, 121951, 121953, 121956, 121962, 121966, 121972, 121975, 122035, 122050, 122055, 122058, 122062, 122144, 122149, 122172, 122174, 122180, 122249, 122253, 122301, 122303, 122305, 122308, 122325, 122332, 122333, 122338, 122341, 122352, 122384, 122410, 122423, 122433, 122438, 122446, 122453, 122457, 122458, 122541, 122546, 122619, 122620, 122623, 122624, 122647, 122648, 122649, 122650, 122651, 122655, 122724, 122725, 122728, 122776, 122777, 122778, 122779, 122780, 122783, 122788, 122799, 122800, 122807, 122808, 122810, 122811, 122813, 122815, 122816, 122824, 122827, 122859, 122884, 122885, 122894, 122898, 122908, 122910, 122913, 122918, 122920, 122921, 122928, 122930, 122932, 122933, 123016, 123018, 123021, 123024, 123095, 123096, 123097, 123098, 123107, 123122, 123123, 123124, 123125, 123126, 123130, 123200, 123201, 123202, 123204, 123251, 123252, 123253, 123254, 123258, 123263, 123265, 123274, 123281, 123282, 123283, 123285, 123286, 123287, 123288, 123290, 123291, 123299, 123334, 123359, 123369, 123373, 123384, 123385, 123388, 123393, 123395, 123396, 123403, 123405, 123408, 123491, 123493, 123496, 123499, 123571, 123572, 123582, 123598, 123600, 123601, 123676, 123677, 123679, 123727, 123738, 123740, 123756, 123757, 123758, 123760, 123761, 123762, 123765, 123848, 123859, 123863, 123868, 123870, 123878, 123883, 123968, 123974, 124044, 124049, 124050, 124052, 124058, 124072, 124074, 124077, 124078, 124079, 124080, 124149, 124153, 124155, 124159, 124163, 124201, 124203, 124205, 124206, 124207, 124208, 124209, 124211, 124223, 124225, 124232, 124233, 124234, 124238, 124239, 124241, 124245, 124252, 124284, 124310, 124311, 124323, 124333, 124338, 124341, 124346, 124351, 124353, 124357, 124358, 124430, 124431, 124441, 124446, 124520, 124523, 124525, 124526, 124527, 124528, 124529, 124533, 124547, 124548, 124549, 124550, 124551, 124552, 124553, 124554, 124555, 124564, 124568, 124625, 124630, 124631, 124632, 124633, 124634, 124638, 124676, 124677, 124678, 124679, 124681, 124682, 124683, 124684, 124686, 124688, 124689, 124698, 124699, 124705, 124707, 124708, 124709, 124710, 124711, 124713, 124714, 124715, 124716, 124720, 124724, 124752, 124759, 124784, 124786, 124794, 124798, 124807, 124810, 124813, 124816, 124818, 124820, 124821, 124826, 124828, 124830, 124833, 124905, 124906, 124916, 124918, 124921, 124924, 124953, 124954, 124955, 124956, 124996, 124997, 125001, 125003, 125004, 125007, 125023, 125025, 125026, 125027, 125028, 125029, 125040, 125041, 125042, 125101, 125102, 125104, 125106, 125107, 125108, 125119, 125152, 125156, 125157, 125159, 125161, 125163, 125164, 125165, 125180, 125181, 125182, 125183, 125184, 125185, 125186, 125187, 125189, 125190, 125213, 125227, 125273, 125282, 125284, 125286, 125288, 125291, 125293, 125295, 125303, 125308, 125380, 125381, 125393, 125399, 125432, 125435, 125440, 125475, 125477, 125480, 125481, 125483, 125497, 125499, 125502, 125503, 125504, 125505, 125519, 125522, 125526, 125580, 125584, 125585, 125586, 125587, 125588, 125591, 125626, 125628, 125631, 125632, 125633, 125634, 125635, 125636, 125637, 125648, 125653, 125657, 125658, 125659, 125663, 125664, 125666, 125670, 125672, 125694, 125709, 125736, 125737, 125748, 125753, 125763, 125766, 125771, 125776, 125778, 125779, 125783, 125855, 125856, 125862, 125866, 125871, 125908, 125909, 125911, 125951, 125953, 125954, 125955, 125956, 125973, 125975, 125976, 125977, 125978, 125979, 125995, 125996, 125998, 126056, 126057, 126058, 126060, 126061, 126062, 126065, 126068, 126102, 126106, 126107, 126109, 126110, 126111, 126112, 126113, 126114, 126128, 126130, 126132, 126133, 126134, 126135, 126136, 126139, 126140, 126167, 126174, 126177, 126212, 126223, 126228, 126232, 126238, 126241, 126243, 126245, 126253, 126258, 126330, 126331, 126337, 126343, 126349, 126387, 126388, 126389, 126430, 126431, 126452, 126453, 126454, 126474, 126475, 126477, 126535, 126536, 126537, 126539, 126542, 126581, 126582, 126584, 126585, 126586, 126587, 126603, 126607, 126608, 126609, 126614, 126643, 126648, 126687, 126698, 126703, 126713, 126716, 126728, 126733, 126805, 126806, 126812, 126866, 126871, 126894, 126899, 126909, 126911, 126917, 126922, 126924, 126930, 126931, 126932, 126933, 126934, 126953, 126957, 126999, 127003, 127020, 127022, 127030, 127031, 127044, 127051, 127053, 127055, 127058, 127066, 127067, 127068, 127072, 127075, 127082, 127083, 127088, 127091, 127092, 127093, 127102, 127103, 127134, 127147, 127156, 127160, 127173, 127179, 127183, 127187, 127188, 127196, 127197, 127198, 127203, 127207, 127208, 127253, 127260, 127261, 127290, 127291, 127296, 127342, 127345, 127370, 127373, 127384, 127385, 127386, 127387, 127388, 127392, 127397, 127398, 127399, 127400, 127401, 127405, 127406, 127407, 127408, 127409, 127429, 127441, 127475, 127495, 127496, 127497, 127498, 127503, 127504, 127518, 127526, 127527, 127528, 127529, 127533, 127538, 127541, 127542, 127543, 127546, 127547, 127549, 127554, 127557, 127558, 127560, 127561, 127563, 127565, 127566, 127567, 127568, 127574, 127575, 127600, 127609, 127614, 127631, 127634, 127639, 127644, 127648, 127654, 127655, 127660, 127662, 127663, 127668, 127670, 127671, 127672, 127673, 127678, 127680, 127681, 127683, 127735, 127736, 127765, 127766, 127767, 127768, 127771, 127774, 127818, 127819, 127830, 127846, 127847, 127857, 127860, 127862, 127863, 127873, 127875, 127876, 127881, 127882, 127883, 127884, 127905, 127906, 127908, 127951, 127952, 127954, 127971, 127973, 127984, 128000, 128002, 128013, 128015, 128016, 128017, 128018, 128021, 128029, 128031, 128032, 128033, 128035, 128036, 128037, 128040, 128042, 128075, 128082, 128105, 128114, 128123, 128130, 128134, 128137, 128138, 128143, 128145, 128147, 128153, 128158, 128210, 128211, 128242, 128243, 128249, 128297, 128300, 128325, 128327, 128333, 128334, 128336, 128339, 128340, 128341, 128342, 128347, 128349, 128352, 128353, 128354, 128355, 128356, 128357, 128358, 128359, 128384, 128386, 128401, 128430, 128434, 128438, 128445, 128447, 128449, 128450, 128451, 128463, 128467, 128476, 128478, 128481, 128482, 128483, 128484, 128486, 128491, 128492, 128493, 128494, 128497, 128498, 128502, 128507, 128508, 128509, 128513, 128514, 128516, 128517, 128518, 128520, 128521, 128559, 128562, 128581, 128586, 128598, 128601, 128604, 128612, 128613, 128616, 128621, 128622, 128623, 128625, 128626, 128627, 128628, 128633, 128685, 128686, 128705, 128706, 128708, 128715, 128716, 128721, 128773, 128774, 128776, 128801, 128803, 128804, 128810, 128812, 128813, 128814, 128815, 128816, 128823, 128825, 128826, 128827, 128828, 128829, 128831, 128832, 128833, 128834, 128860, 128862, 128863, 128906, 128907, 128908, 128921, 128923, 128925, 128926, 128933, 128938, 128949, 128952, 128956, 128957, 128959, 128961, 128963, 128964, 128966, 128967, 128968, 128969, 128971, 128977, 128979, 128980, 128982, 128983, 128984, 128985, 128986, 128989, 128990, 128992, 129025, 129027, 129030, 129054, 129064, 129073, 129076, 129080, 129082, 129087, 129088, 129091, 129093, 129095, 129097, 129100, 129103, 129108, 129160, 129161, 129180, 129181, 129183, 129192, 129193, 129199, 129252, 129253, 129254, 129280, 129281, 129289, 129290, 129291, 129302, 129303, 129304, 129306, 129307, 129308, 129309, 129339, 129340, 129342, 129385, 129386, 129387, 129400, 129401, 129407, 129413, 129422, 129431, 129432, 129434, 129435, 129436, 129437, 129441, 129442, 129443, 129444, 129452, 129453, 129457, 129458, 129459, 129464, 129467, 129521, 129527, 129537, 129548, 129551, 129553, 129562, 129563, 129566, 129572, 129575, 129578, 129583, 129635, 129636, 129655, 129656, 129658, 129662, 129744, 129749, 129772, 129774, 129780, 129785, 129786, 129787, 129788, 129849, 129853, 129901, 129903, 129905, 129908, 129925, 129932, 129933, 129938, 129941, 129948, 129952, 129984, 130010, 130023, 130033, 130038, 130046, 130053, 130057, 130058, 130108, 130141, 130146, 130220, 130223, 130247, 130248, 130249, 130250, 130251, 130255, 130260, 130261, 130262, 130263, 130325, 130376, 130377, 130378, 130379, 130383, 130388, 130399, 130407, 130408, 130410, 130411, 130413, 130415, 130416, 130423, 130424, 130459, 130484, 130494, 130498, 130510, 130513, 130518, 130520, 130521, 130528, 130530, 130533, 130583, 130616, 130618, 130621, 130624, 130696, 130697, 130707, 130723, 130725, 130726, 130735, 130736, 130737, 130738, 130801, 130802, 130804, 130852, 130863, 130865, 130881, 130882, 130883, 130885, 130886, 130887, 130890, 130898, 130973, 130984, 130988, 130993, 130995, 131003, 131008, 131058, 131093, 131099, 131175, 131177, 131183, 131197, 131199, 131202, 131203, 131204, 131205, 131210, 131211, 131212, 131213, 131280, 131284, 131288, 131326, 131328, 131331, 131332, 131333, 131334, 131336, 131348, 131357, 131358, 131359, 131363, 131364, 131366, 131370, 131373, 131409, 131436, 131448, 131463, 131466, 131471, 131476, 131478, 131483, 131533, 131555, 131556, 131566, 131571, 131651, 131653, 131654, 131673, 131675, 131676, 131677, 131678, 131679, 131685, 131686, 131687, 131688, 131756, 131757, 131758, 131802, 131806, 131807, 131809, 131811, 131813, 131814, 131830, 131832, 131833, 131834, 131835, 131836, 131839, 131840, 131848, 131877, 131923, 131932, 131938, 131941, 131943, 131945, 131953, 131958, 132008, 132030, 132031, 132043, 132049, 132130, 132131, 132152, 132153, 132154, 132160, 132161, 132162, 132163, 132235, 132236, 132237, 132281, 132282, 132284, 132285, 132286, 132287, 132303, 132307, 132308, 132309, 132314, 132323, 132387, 132398, 132403, 132413, 132416, 132428, 132433, 132483, 132505, 132506, 132512, 132804, 132809, 132822, 132937, 132951, 133279, 133280, 133283, 133284, 133297, 133386, 133389, 133412, 133413, 133426, 133754, 133755, 133756, 133757, 133758, 133759, 133772, 133827, 133861, 133864, 133866, 133872, 133887, 133888, 133901, 134229, 134230, 134231, 134232, 134233, 134234, 134247, 134302, 134336, 134339, 134341, 134347, 134362, 134363, 134376, 134705, 134706, 134707, 134708, 134777, 134811, 134814, 134816, 134822, 134838, 135181, 135182, 135252, 135291, 135297, 135654, 135659, 135660, 135664, 135670, 135671, 135672, 135786, 135787, 135801, 135964, 135968, 136129, 136130, 136133, 136134, 136135, 136136, 136137, 136139, 136145, 136146, 136147, 136236, 136239, 136243, 136245, 136261, 136262, 136263, 136276, 136279, 136439, 136440, 136441, 136442, 136443, 136604, 136605, 136606, 136607, 136608, 136609, 136610, 136611, 136612, 136613, 136614, 136620, 136621, 136622, 136677, 136686, 136711, 136714, 136716, 136718, 136720, 136722, 136736, 136737, 136738, 136751, 136754, 136914, 136915, 136916, 136917, 136918, 137080, 137081, 137082, 137083, 137085, 137086, 137087, 137088, 137089, 137095, 137096, 137152, 137161, 137186, 137189, 137191, 137193, 137195, 137197, 137211, 137213, 137229, 137390, 137391, 137392, 137556, 137557, 137561, 137562, 137563, 137627, 137636, 137666, 137668, 137670, 137672, 137704, 137869, 137872, 137876, 138029, 138034, 138035, 138039, 138040, 138041, 138044, 138045, 138046, 138047, 138119, 138129, 138155, 138158, 138161, 138162, 138176, 138211, 138339, 138343, 138344, 138345, 138346, 138347, 138348, 138351, 138504, 138505, 138508, 138509, 138510, 138511, 138512, 138514, 138515, 138516, 138517, 138519, 138520, 138521, 138522, 138524, 138594, 138604, 138611, 138614, 138618, 138620, 138630, 138633, 138636, 138637, 138638, 138651, 138654, 138686, 138814, 138815, 138816, 138817, 138818, 138819, 138820, 138821, 138822, 138823, 138826, 138980, 138981, 138982, 138983, 138985, 138986, 138987, 138988, 138989, 138990, 138991, 138992, 138994, 138995, 138996, 138999, 139052, 139061, 139069, 139079, 139086, 139089, 139091, 139093, 139095, 139097, 139105, 139108, 139111, 139113, 139129, 139161, 139290, 139291, 139292, 139295, 139296, 139298, 139456, 139457, 139461, 139462, 139463, 139465, 139466, 139467, 139474, 139527, 139536, 139544, 139566, 139568, 139570, 139572, 139580, 139583, 139604, 139636, 139769, 139772, 139774, 139775, 139776, 139777, 139929, 139934, 139935, 139939, 139940, 139941, 139943, 139944, 139945, 139946, 139947, 139948, 140019, 140029, 140055, 140058, 140061, 140062, 140076, 140111, 140239, 140243, 140244, 140245, 140246, 140247, 140248, 140249, 140250, 140251, 140252, 140405, 140408, 140410, 140411, 140412, 140414, 140415, 140416, 140417, 140418, 140419, 140420, 140421, 140423, 140424, 140494, 140504, 140511, 140514, 140518, 140520, 140530, 140533, 140536, 140538, 140554, 140586, 140715, 140716, 140717, 140720, 140721, 140723, 140724, 140725, 140727, 140881, 140882, 140886, 140887, 140888, 140890, 140891, 140892, 140893, 140898, 140899, 140952, 140961, 140969, 140991, 140993, 140995, 140997, 141005, 141008, 141029, 141061, 141194, 141197, 141199, 141200, 141201, 141202, 141360, 141364, 141365, 141366, 141368, 141369, 141370, 141371, 141373, 141444, 141454, 141480, 141483, 141486, 141536, 141670, 141671, 141673, 141674, 141675, 141677, 141836, 141837, 141840, 141841, 141842, 141843, 141848, 141849, 141919, 141943, 141945, 141955, 141958, 141979, 142011, 142149, 142150, 142152, 142315, 142316, 142318, 142323, 142394, 142430, 142433, 142486, 142628, 142632, 142705, 142779, 142784, 142797, 142803, 142808, 142810, 142811, 142822, 142909, 142912, 142926, 142928, 142973, 143103, 143104, 143107, 143116, 143178, 143180, 143254, 143255, 143258, 143259, 143272, 143276, 143278, 143279, 143283, 143285, 143286, 143288, 143289, 143297, 143356, 143361, 143364, 143375, 143376, 143384, 143387, 143388, 143401, 143403, 143447, 143448, 143578, 143579, 143580, 143581, 143582, 143583, 143591, 143653, 143655, 143729, 143730, 143731, 143732, 143733, 143734, 143747, 143751, 143753, 143754, 143757, 143758, 143760, 143761, 143763, 143764, 143772, 143780, 143802, 143831, 143836, 143839, 143841, 143847, 143850, 143851, 143859, 143862, 143863, 143876, 143878, 143922, 143923, 144054, 144055, 144056, 144058, 144066, 144128, 144205, 144206, 144207, 144208, 144226, 144228, 144229, 144232, 144233, 144235, 144236, 144238, 144239, 144255, 144277, 144306, 144311, 144314, 144316, 144322, 144325, 144326, 144334, 144338, 144397, 144398, 144530, 144531, 144533, 144681, 144682, 144701, 144704, 144707, 144713, 144730, 144752, 144791, 144797, 144800, 144801, 144872, 145003, 145007, 145009, 145011, 145026, 145080, 145154, 145159, 145160, 145164, 145170, 145171, 145172, 145178, 145181, 145183, 145185, 145186, 145187, 145197, 145199, 145252, 145260, 145284, 145286, 145287, 145289, 145301, 145303, 145305, 145332, 145348, 145464, 145468, 145478, 145479, 145482, 145484, 145485, 145486, 145487, 145488, 145491, 145501, 145553, 145555, 145629, 145630, 145633, 145634, 145635, 145636, 145637, 145639, 145645, 145646, 145647, 145651, 145653, 145654, 145655, 145656, 145658, 145660, 145661, 145662, 145663, 145664, 145672, 145674, 145679, 145727, 145731, 145735, 145736, 145739, 145743, 145745, 145750, 145751, 145759, 145761, 145762, 145763, 145764, 145776, 145778, 145779, 145780, 145807, 145822, 145823, 145939, 145940, 145941, 145942, 145943, 145954, 145955, 145956, 145958, 145959, 145960, 145961, 145962, 145963, 145966, 145976, 146028, 146105, 146106, 146107, 146108, 146110, 146111, 146112, 146113, 146114, 146120, 146121, 146126, 146128, 146129, 146130, 146131, 146132, 146133, 146135, 146136, 146137, 146138, 146139, 146149, 146154, 146155, 146177, 146186, 146202, 146206, 146210, 146211, 146214, 146216, 146218, 146220, 146222, 146225, 146226, 146234, 146236, 146238, 146239, 146254, 146255, 146282, 146297, 146298, 146415, 146416, 146417, 146430, 146431, 146433, 146435, 146437, 146438, 146581, 146582, 146586, 146587, 146588, 146601, 146604, 146605, 146606, 146607, 146613, 146624, 146629, 146630, 146652, 146661, 146685, 146691, 146693, 146695, 146697, 146700, 146701, 146714, 146729, 146730, 146757, 146772, 146894, 146897, 146901, 146903, 146907, 146909, 146911, 146914, 146915, 146917, 146926, 146980, 147054, 147059, 147060, 147064, 147065, 147066, 147069, 147070, 147071, 147072, 147078, 147081, 147083, 147085, 147086, 147087, 147096, 147097, 147099, 147102, 147144, 147152, 147154, 147160, 147180, 147183, 147184, 147186, 147187, 147189, 147201, 147203, 147205, 147232, 147236, 147248, 147364, 147368, 147369, 147370, 147371, 147372, 147373, 147376, 147379, 147384, 147385, 147386, 147387, 147388, 147389, 147390, 147391, 147392, 147401, 147453, 147530, 147533, 147535, 147536, 147537, 147539, 147540, 147541, 147542, 147544, 147545, 147546, 147549, 147551, 147553, 147554, 147555, 147556, 147558, 147560, 147561, 147562, 147563, 147564, 147571, 147574, 147577, 147579, 147619, 147627, 147629, 147631, 147635, 147636, 147639, 147643, 147645, 147650, 147651, 147655, 147658, 147659, 147661, 147663, 147664, 147679, 147680, 147707, 147711, 147722, 147723, 147840, 147841, 147842, 147845, 147846, 147848, 147855, 147856, 147858, 147860, 147862, 147863, 147864, 147865, 147867, 148006, 148007, 148011, 148012, 148013, 148015, 148016, 148017, 148024, 148026, 148029, 148030, 148031, 148032, 148038, 148046, 148049, 148052, 148054, 148055, 148077, 148086, 148094, 148110, 148116, 148118, 148120, 148122, 148125, 148126, 148130, 148133, 148139, 148154, 148155, 148182, 148186, 148197, 148319, 148322, 148324, 148325, 148326, 148327, 148334, 148336, 148339, 148340, 148342, 148351, 148485, 148489, 148490, 148491, 148493, 148494, 148495, 148496, 148498, 148503, 148506, 148508, 148510, 148511, 148512, 148521, 148524, 148527, 148569, 148577, 148579, 148585, 148605, 148608, 148609, 148611, 148614, 148630, 148657, 148661, 148673, 148795, 148796, 148798, 148799, 148800, 148802, 148810, 148812, 148813, 148814, 148815, 148817, 148961, 148962, 148965, 148966, 148967, 148968, 148973, 148974, 148976, 148979, 148980, 148981, 148988, 148996, 148999, 149002, 149004, 149044, 149060, 149068, 149070, 149075, 149076, 149080, 149083, 149089, 149104, 149105, 149132, 149136, 149147, 149274, 149275, 149277, 149289, 149290, 149292, 149440, 149441, 149443, 149448, 149456, 149471, 149474, 149477, 149519, 149535, 149555, 149558, 149564, 149580, 149607, 149611, 149625, 149630, 149753, 149757, 149768, 149770, 149772, 149830, 149904, 149909, 149922, 149928, 149933, 149935, 149936, 149940, 149942, 149944, 149945, 149947, 149948, 149999, 150034, 150037, 150051, 150052, 150053, 150074, 150098, 150100, 150101, 150104, 150105, 150228, 150229, 150232, 150241, 150243, 150244, 150245, 150246, 150247, 150253, 150265, 150302, 150303, 150305, 150376, 150379, 150380, 150383, 150384, 150397, 150401, 150403, 150404, 150408, 150410, 150411, 150413, 150414, 150415, 150417, 150418, 150419, 150420, 150422, 150423, 150428, 150474, 150481, 150486, 150489, 150500, 150501, 150509, 150512, 150513, 150526, 150527, 150528, 150549, 150572, 150573, 150576, 150577, 150578, 150579, 150589, 150704, 150705, 150706, 150708, 150716, 150718, 150719, 150720, 150721, 150722, 150728, 150731, 150740, 150746, 150777, 150778, 150851, 150855, 150856, 150857, 150858, 150876, 150878, 150879, 150882, 150883, 150885, 150886, 150888, 150889, 150890, 150892, 150893, 150894, 150895, 150898, 150903, 150905, 150927, 150949, 150956, 150961, 150964, 150966, 150972, 150975, 150976, 150984, 150988, 151002, 151024, 151047, 151048, 151052, 151053, 151064, 151180, 151181, 151183, 151194, 151196, 151206, 151221, 151252, 151331, 151332, 151351, 151354, 151357, 151363, 151365, 151367, 151368, 151370, 151373, 151378, 151380, 151402, 151441, 151447, 151450, 151451, 151477, 151499, 151522, 151525, 151530, 151531, 151534, 151653, 151657, 151659, 151661, 151668, 151670, 151672, 151673, 151674, 151675, 151676, 151677, 151682, 151698, 151730, 151770, 151804, 151809, 151810, 151814, 151820, 151821, 151822, 151828, 151831, 151833, 151835, 151836, 151837, 151840, 151842, 151844, 151845, 151847, 151848, 151849, 151851, 151899, 151902, 151910, 151934, 151936, 151937, 151939, 151951, 151952, 151953, 151955, 151974, 151982, 151998, 152001, 152004, 152006, 152007, 152008, 152009, 152010, 152114, 152118, 152129, 152134, 152135, 152136, 152137, 152138, 152141, 152143, 152144, 152145, 152146, 152147, 152148, 152149, 152150, 152151, 152152, 152153, 152155, 152157, 152165, 152170, 152173, 152202, 152203, 152245, 152276, 152280, 152283, 152285, 152286, 152287, 152289, 152295, 152296, 152301, 152303, 152304, 152305, 152306, 152308, 152310, 152311, 152312, 152313, 152314, 152315, 152317, 152318, 152319, 152320, 152323, 152324, 152326, 152328, 152329, 152374, 152377, 152381, 152385, 152386, 152389, 152393, 152395, 152400, 152401, 152409, 152411, 152413, 152414, 152427, 152429, 152430, 152449, 152457, 152472, 152473, 152477, 152478, 152482, 152483, 152485, 152489, 152590, 152591, 152592, 152605, 152606, 152608, 152610, 152612, 152613, 152619, 152621, 152623, 152624, 152625, 152630, 152631, 152645, 152646, 152677, 152720, 152756, 152757, 152761, 152762, 152763, 152776, 152779, 152780, 152781, 152782, 152788, 152790, 152792, 152793, 152795, 152798, 152799, 152801, 152803, 152804, 152805, 152827, 152836, 152860, 152866, 152868, 152870, 152872, 152875, 152876, 152889, 152902, 152904, 152905, 152924, 152932, 152947, 152956, 152959, 152961, 152962, 152963, 153069, 153072, 153076, 153084, 153086, 153089, 153090, 153092, 153093, 153095, 153097, 153098, 153099, 153100, 153101, 153102, 153104, 153107, 153117, 153123, 153195, 153235, 153239, 153240, 153241, 153244, 153245, 153246, 153253, 153256, 153258, 153260, 153261, 153262, 153265, 153267, 153269, 153270, 153271, 153273, 153274, 153276, 153277, 153319, 153324, 153327, 153329, 153335, 153355, 153358, 153359, 153361, 153364, 153377, 153380, 153399, 153407, 153411, 153423, 153432, 153433, 153435, 153436, 153437, 153438, 153545, 153546, 153548, 153560, 153562, 153563, 153564, 153565, 153567, 153569, 153571, 153573, 153574, 153575, 153579, 153580, 153592, 153595, 153627, 153670, 153711, 153712, 153715, 153716, 153717, 153724, 153726, 153729, 153730, 153731, 153738, 153740, 153742, 153743, 153745, 153746, 153748, 153749, 153751, 153752, 153753, 153754, 153794, 153810, 153818, 153820, 153825, 153826, 153830, 153833, 153839, 153852, 153854, 153855, 153874, 153882, 153886, 153897, 153911, 153912, 153913, 154024, 154025, 154027, 154039, 154040, 154042, 154048, 154049, 154050, 154054, 154067, 154145, 154190, 154191, 154193, 154198, 154206, 154215, 154217, 154220, 154221, 154223, 154224, 154226, 154227, 154269, 154285, 154305, 154308, 154314, 154327, 154330, 154349, 154357, 154361, 154375, 154380, 154390, 154393, 154398, 154503, 154507, 154518, 154520, 154522, 154533, 154534, 154535, 154536, 154539, 154547, 154580, 154654, 154659, 154672, 154678, 154683, 154685, 154686, 154690, 154692, 154694, 154695, 154697, 154698, 154700, 154749, 154784, 154787, 154801, 154802, 154803, 154824, 154848, 154851, 154854, 154865, 154866, 154867, 154868, 154869, 154873, 154979, 154991, 154993, 154994, 154995, 154996, 154997, 155003, 155008, 155009, 155010, 155011, 155013, 155014, 155015, 155019, 155022, 155052, 155053, 155126, 155130, 155133, 155151, 155153, 155154, 155158, 155160, 155161, 155163, 155164, 155165, 155167, 155168, 155169, 155170, 155173, 155175, 155178, 155224, 155231, 155236, 155239, 155250, 155251, 155259, 155263, 155277, 155299, 155322, 155323, 155327, 155328, 155339, 155341, 155342, 155344, 155455, 155456, 155458, 155469, 155471, 155481, 155483, 155484, 155485, 155486, 155488, 155494, 155496, 155527, 155606, 155607, 155626, 155629, 155632, 155638, 155640, 155642, 155643, 155645, 155648, 155650, 155653, 155655, 155677, 155716, 155722, 155725, 155726, 155752, 155774, 155797, 155806, 155809, 155815, 155818, 155820, 155821, 155822, 155823, 155934, 155936, 155943, 155945, 155947, 155948, 155949, 155950, 155951, 155952, 155957, 155958, 155959, 155960, 155961, 155962, 155964, 155966, 155972, 155973, 156045, 156085, 156089, 156095, 156096, 156103, 156106, 156108, 156110, 156111, 156112, 156115, 156117, 156119, 156120, 156123, 156124, 156125, 156126, 156174, 156177, 156185, 156209, 156211, 156214, 156227, 156230, 156249, 156257, 156273, 156282, 156283, 156285, 156291, 156292, 156294, 156295, 156296, 156297, 156410, 156412, 156413, 156419, 156421, 156423, 156424, 156425, 156430, 156433, 156434, 156435, 156436, 156437, 156438, 156441, 156444, 156445, 156477, 156520, 156561, 156562, 156576, 156579, 156580, 156581, 156588, 156590, 156592, 156593, 156595, 156598, 156599, 156600, 156601, 156603, 156604, 156660, 156668, 156670, 156675, 156676, 156689, 156702, 156704, 156705, 156724, 156732, 156747, 156761, 156762, 156763, 156770, 156771, 156772, 156889, 156890, 156892, 156898, 156899, 156900, 156904, 156908, 156909, 156910, 156911, 156912, 156916, 156917, 156995, 157040, 157041, 157056, 157065, 157067, 157070, 157071, 157073, 157074, 157075, 157076, 157077, 157119, 157135, 157155, 157158, 157164, 157177, 157180, 157199, 157207, 157211, 157399, 157403, 157504, 157509, 157522, 157560, 157566, 157583, 157592, 157607, 157617, 157624, 157637, 157641, 157651, 157695, 157874, 157875, 157878, 157979, 157980, 157983, 157984, 157997, 158032, 158033, 158034, 158035, 158041, 158042, 158043, 158044, 158058, 158060, 158067, 158080, 158082, 158086, 158089, 158092, 158099, 158112, 158113, 158116, 158117, 158126, 158164, 158170, 158349, 158350, 158351, 158352, 158353, 158354, 158437, 158454, 158455, 158456, 158457, 158458, 158459, 158472, 158507, 158508, 158509, 158510, 158516, 158517, 158518, 158519, 158527, 158533, 158534, 158535, 158542, 158555, 158557, 158561, 158564, 158566, 158567, 158572, 158574, 158587, 158588, 158591, 158592, 158601, 158639, 158645, 158825, 158826, 158827, 158829, 158912, 158930, 158931, 158932, 158933, 158982, 158983, 158984, 158991, 158992, 158993, 158994, 159002, 159009, 159010, 159017, 159030, 159036, 159039, 159041, 159042, 159047, 159049, 159063, 159066, 159067, 159114, 159120, 159301, 159302, 159304, 159387, 159406, 159407, 159457, 159458, 159467, 159468, 159477, 159484, 159516, 159522, 159542, 159589, 159774, 159778, 159780, 159784, 159788, 159879, 159884, 159885, 159889, 159895, 159896, 159897, 159935, 159936, 159938, 159940, 159941, 159945, 159950, 159958, 159967, 159976, 159982, 159992, 159999, 160011, 160012, 160016, 160019, 160026, 160052, 160070, 160189, 160193, 160249, 160250, 160253, 160255, 160256, 160257, 160258, 160259, 160263, 160354, 160355, 160358, 160359, 160360, 160361, 160362, 160364, 160370, 160371, 160372, 160377, 160407, 160408, 160409, 160410, 160411, 160413, 160415, 160416, 160417, 160418, 160419, 160420, 160425, 160432, 160433, 160435, 160442, 160451, 160455, 160457, 160461, 160464, 160467, 160468, 160470, 160474, 160486, 160487, 160488, 160491, 160492, 160494, 160501, 160504, 160527, 160539, 160545, 160578, 160579, 160580, 160581, 160664, 160665, 160666, 160667, 160668, 160725, 160726, 160727, 160729, 160730, 160731, 160732, 160733, 160734, 160738, 160744, 160812, 160830, 160831, 160832, 160833, 160835, 160836, 160837, 160838, 160839, 160845, 160846, 160852, 160882, 160883, 160884, 160886, 160888, 160890, 160891, 160892, 160893, 160894, 160895, 160900, 160902, 160907, 160909, 160910, 160911, 160917, 160926, 160930, 160936, 160939, 160941, 160942, 160943, 160945, 160947, 160949, 160961, 160963, 160966, 160967, 160969, 160979, 161002, 161014, 161020, 161053, 161054, 161055, 161056, 161140, 161141, 161142, 161201, 161202, 161204, 161206, 161207, 161208, 161219, 161287, 161306, 161307, 161311, 161312, 161313, 161327, 161357, 161358, 161363, 161365, 161367, 161368, 161370, 161375, 161377, 161382, 161384, 161386, 161416, 161418, 161420, 161422, 161442, 161444, 161454, 161477, 161489, 161532, 161535, 161540, 161619, 161622, 161626, 161674, 161678, 161680, 161684, 161685, 161686, 161687, 161688, 161691, 161772, 161779, 161784, 161785, 161789, 161790, 161791, 161794, 161795, 161796, 161797, 161835, 161836, 161837, 161838, 161840, 161841, 161845, 161850, 161853, 161858, 161867, 161869, 161876, 161879, 161882, 161892, 161899, 161905, 161908, 161911, 161912, 161916, 161919, 161926, 161952, 161961, 161962, 161970, 162007, 162008, 162009, 162010, 162011, 162015, 162089, 162093, 162094, 162095, 162096, 162097, 162098, 162101, 162150, 162155, 162156, 162157, 162158, 162159, 162160, 162161, 162162, 162163, 162165, 162166, 162168, 162247, 162255, 162258, 162260, 162261, 162262, 162264, 162265, 162266, 162267, 162269, 162270, 162271, 162274, 162277, 162307, 162308, 162309, 162311, 162312, 162313, 162315, 162316, 162317, 162318, 162319, 162320, 162325, 162328, 162332, 162335, 162342, 162344, 162351, 162354, 162355, 162361, 162364, 162367, 162368, 162370, 162374, 162380, 162383, 162386, 162388, 162391, 162392, 162394, 162404, 162427, 162436, 162437, 162439, 162445, 162478, 162479, 162480, 162481, 162483, 162484, 162486, 162565, 162566, 162567, 162570, 162571, 162573, 162626, 162627, 162629, 162631, 162632, 162633, 162635, 162636, 162637, 162640, 162643, 162644, 162712, 162731, 162732, 162736, 162737, 162738, 162740, 162741, 162742, 162749, 162752, 162782, 162783, 162787, 162788, 162790, 162792, 162793, 162795, 162800, 162802, 162803, 162807, 162809, 162811, 162819, 162841, 162843, 162845, 162847, 162855, 162858, 162867, 162869, 162879, 162902, 162911, 162912, 162914, 162957, 162960, 162962, 162963, 162964, 162965, 163044, 163047, 163049, 163050, 163051, 163052, 163105, 163109, 163110, 163111, 163112, 163113, 163114, 163116, 163117, 163197, 163210, 163214, 163215, 163216, 163218, 163219, 163220, 163221, 163223, 163261, 163262, 163263, 163265, 163266, 163270, 163275, 163278, 163292, 163294, 163301, 163304, 163317, 163324, 163330, 163333, 163336, 163341, 163344, 163377, 163386, 163387, 163395, 163433, 163434, 163436, 163437, 163438, 163439, 163520, 163521, 163523, 163524, 163525, 163527, 163581, 163582, 163583, 163585, 163586, 163587, 163589, 163590, 163592, 163593, 163686, 163687, 163690, 163691, 163692, 163693, 163698, 163699, 163702, 163732, 163733, 163737, 163738, 163740, 163742, 163743, 163745, 163750, 163753, 163757, 163769, 163793, 163795, 163805, 163808, 163817, 163819, 163829, 163852, 163861, 163862, 163864, 163912, 163913, 163914, 163999, 164000, 164002, 164060, 164061, 164062, 164064, 164067, 164165, 164166, 164168, 164173, 164212, 164213, 164215, 164220, 164225, 164228, 164244, 164280, 164283, 164294, 164327, 164336, 164337, 164391, 164396, 164478, 164482, 164524, 164528, 164545, 164547, 164555, 164556, 164569, 164628, 164629, 164634, 164647, 164653, 164658, 164660, 164661, 164672, 164681, 164685, 164691, 164696, 164697, 164699, 164704, 164708, 164717, 164723, 164732, 164742, 164749, 164759, 164762, 164766, 164770, 164775, 164776, 164778, 164784, 164815, 164820, 164823, 164866, 164867, 164870, 164871, 164953, 164954, 164957, 164966, 164999, 165000, 165003, 165020, 165021, 165022, 165023, 165028, 165029, 165030, 165031, 165043, 165044, 165100, 165103, 165104, 165105, 165108, 165109, 165122, 165125, 165126, 165128, 165129, 165133, 165135, 165136, 165138, 165139, 165147, 165156, 165157, 165158, 165159, 165160, 165164, 165166, 165167, 165168, 165169, 165171, 165172, 165174, 165179, 165180, 165183, 165185, 165192, 165198, 165205, 165206, 165207, 165211, 165214, 165217, 165224, 165225, 165226, 165234, 165237, 165238, 165241, 165242, 165245, 165250, 165251, 165253, 165259, 165289, 165290, 165292, 165295, 165297, 165298, 165342, 165343, 165344, 165345, 165355, 165429, 165430, 165431, 165433, 165441, 165475, 165476, 165477, 165479, 165495, 165496, 165497, 165498, 165503, 165504, 165509, 165518, 165525, 165562, 165575, 165580, 165581, 165582, 165583, 165600, 165601, 165603, 165604, 165607, 165608, 165610, 165611, 165613, 165614, 165630, 165631, 165632, 165633, 165634, 165639, 165641, 165642, 165643, 165644, 165646, 165647, 165649, 165652, 165654, 165655, 165659, 165660, 165667, 165673, 165680, 165681, 165686, 165689, 165691, 165692, 165697, 165699, 165700, 165701, 165709, 165713, 165716, 165717, 165720, 165725, 165734, 165764, 165765, 165767, 165770, 165772, 165773, 165818, 165819, 165830, 165905, 165906, 165908, 165951, 165952, 165954, 165971, 165973, 165984, 166000, 166037, 166056, 166057, 166075, 166076, 166079, 166082, 166088, 166105, 166107, 166108, 166114, 166117, 166118, 166121, 166122, 166124, 166127, 166130, 166134, 166166, 166172, 166175, 166176, 166192, 166195, 166200, 166209, 166239, 166242, 166247, 166291, 166296, 166297, 166300, 166378, 166382, 166384, 166386, 166401, 166424, 166428, 166430, 166434, 166438, 166445, 166447, 166449, 166450, 166451, 166455, 166456, 166463, 166467, 166469, 166521, 166528, 166529, 166534, 166535, 166539, 166545, 166546, 166547, 166553, 166556, 166558, 166560, 166561, 166562, 166572, 166574, 166581, 166585, 166586, 166588, 166590, 166591, 166595, 166596, 166597, 166599, 166600, 166601, 166604, 166608, 166617, 166623, 166625, 166626, 166627, 166632, 166635, 166642, 166649, 166659, 166661, 166662, 166664, 166666, 166669, 166670, 166675, 166676, 166678, 166680, 166684, 166702, 166707, 166708, 166715, 166720, 166723, 166767, 166770, 166772, 166773, 166774, 166775, 166776, 166839, 166843, 166854, 166859, 166860, 166861, 166862, 166863, 166866, 166876, 166900, 166905, 166906, 166907, 166908, 166909, 166913, 166920, 166921, 166922, 166923, 166924, 166925, 166926, 166928, 166929, 166933, 166938, 166942, 166943, 166949, 166996, 167000, 167005, 167008, 167010, 167011, 167012, 167014, 167020, 167021, 167025, 167026, 167027, 167028, 167029, 167030, 167031, 167033, 167035, 167036, 167037, 167038, 167039, 167049, 167054, 167056, 167057, 167058, 167059, 167061, 167063, 167064, 167065, 167066, 167067, 167068, 167069, 167070, 167071, 167072, 167074, 167075, 167076, 167079, 167080, 167082, 167085, 167092, 167098, 167100, 167101, 167102, 167105, 167106, 167110, 167111, 167114, 167117, 167118, 167120, 167124, 167125, 167126, 167134, 167136, 167138, 167139, 167141, 167142, 167144, 167145, 167150, 167154, 167155, 167159, 167177, 167182, 167183, 167189, 167190, 167192, 167195, 167197, 167198, 167228, 167229, 167230, 167231, 167243, 167244, 167248, 167249, 167251, 167255, 167315, 167316, 167317, 167330, 167331, 167333, 167335, 167337, 167338, 167376, 167377, 167379, 167381, 167382, 167383, 167394, 167396, 167398, 167400, 167401, 167408, 167409, 167413, 167424, 167425, 167462, 167481, 167482, 167486, 167487, 167488, 167500, 167501, 167502, 167504, 167505, 167506, 167507, 167513, 167524, 167529, 167530, 167532, 167533, 167538, 167539, 167540, 167542, 167543, 167545, 167546, 167547, 167549, 167550, 167551, 167552, 167555, 167557, 167559, 167561, 167575, 167585, 167591, 167593, 167595, 167597, 167600, 167601, 167614, 167617, 167619, 167620, 167625, 167629, 167630, 167634, 167652, 167657, 167658, 167664, 167667, 167672, 167707, 167710, 167715, 167722, 167725, 167727, 167728, 167729, 167794, 167797, 167801, 167809, 167811, 167814, 167815, 167817, 167826, 167855, 167859, 167860, 167861, 167862, 167863, 167866, 167870, 167872, 167874, 167875, 167876, 167882, 167888, 167892, 167897, 167946, 167947, 167960, 167964, 167965, 167966, 167969, 167970, 167971, 167978, 167981, 167983, 167985, 167986, 167987, 167996, 167999, 168002, 168006, 168011, 168012, 168013, 168015, 168016, 168020, 168021, 168022, 168024, 168025, 168026, 168028, 168029, 168042, 168044, 168048, 168050, 168051, 168052, 168054, 168060, 168067, 168074, 168080, 168083, 168084, 168086, 168089, 168091, 168094, 168095, 168100, 168105, 168109, 168127, 168132, 168133, 168136, 168137, 168140, 168145, 168148, 168183, 168184, 168186, 168198, 168199, 168201, 168202, 168203, 168204, 168270, 168271, 168273, 168285, 168287, 168288, 168289, 168290, 168292, 168331, 168332, 168333, 168335, 168336, 168337, 168340, 168343, 168346, 168348, 168350, 168351, 168357, 168358, 168363, 168372, 168374, 168436, 168437, 168440, 168441, 168442, 168449, 168450, 168451, 168452, 168454, 168455, 168456, 168463, 168471, 168474, 168477, 168479, 168482, 168483, 168487, 168488, 168489, 168490, 168492, 168493, 168495, 168496, 168497, 168499, 168500, 168501, 168503, 168505, 168507, 168519, 168525, 168535, 168543, 168545, 168550, 168551, 168555, 168558, 168564, 168567, 168569, 168570, 168575, 168579, 168580, 168584, 168602, 168607, 168608, 168611, 168612, 168614, 168617, 168622, 168662, 168663, 168664, 168677, 168678, 168679, 168749, 168750, 168752, 168764, 168765, 168767, 168810, 168811, 168812, 168814, 168817, 168825, 168826, 168832, 168838, 168847, 168915, 168916, 168918, 168923, 168931, 168946, 168949, 168952, 168962, 168963, 168965, 168970, 168971, 168972, 168974, 168975, 168976, 168978, 168994, 169000, 169010, 169030, 169033, 169039, 169044, 169045, 169050, 169055, 169059, 169077, 169082, 169083, 169086, 169087, 169100, 169105, 169141, 169146, 169156, 169159, 169163, 169228, 169232, 169243, 169245, 169247, 169274, 169278, 169295, 169297, 169305, 169306, 169310, 169311, 169312, 169316, 169319, 169369, 169378, 169379, 169384, 169397, 169403, 169408, 169410, 169411, 169415, 169416, 169417, 169419, 169420, 169422, 169423, 169431, 169435, 169441, 169446, 169447, 169449, 169454, 169456, 169458, 169467, 169473, 169474, 169482, 169492, 169499, 169509, 169512, 169516, 169520, 169525, 169526, 169527, 169528, 169534, 169549, 169550, 169565, 169570, 169573, 169576, 169579, 169617, 169620, 169631, 169632, 169633, 169634, 169635, 169638, 169704, 169716, 169718, 169719, 169720, 169721, 169722, 169728, 169740, 169750, 169770, 169771, 169772, 169773, 169777, 169778, 169779, 169785, 169786, 169787, 169790, 169791, 169793, 169798, 169844, 169850, 169851, 169855, 169858, 169875, 169876, 169878, 169879, 169883, 169885, 169886, 169888, 169889, 169890, 169891, 169892, 169893, 169894, 169895, 169898, 169903, 169906, 169907, 169908, 169909, 169914, 169916, 169917, 169918, 169919, 169921, 169922, 169924, 169929, 169930, 169931, 169935, 169942, 169948, 169949, 169955, 169956, 169961, 169964, 169967, 169974, 169975, 169976, 169984, 169988, 169991, 169992, 169995, 170000, 170002, 170009, 170024, 170025, 170039, 170040, 170042, 170045, 170047, 170048, 170052, 170053, 170064, 170093, 170094, 170105, 170107, 170108, 170110, 170180, 170181, 170183, 170194, 170196, 170206, 170221, 170226, 170227, 170229, 170246, 170248, 170252, 170259, 170260, 170261, 170262, 170265, 170273, 170275, 170312, 170331, 170332, 170350, 170351, 170354, 170357, 170363, 170365, 170366, 170367, 170368, 170370, 170373, 170378, 170380, 170382, 170383, 170389, 170392, 170393, 170396, 170397, 170399, 170402, 170405, 170406, 170409, 170441, 170447, 170450, 170451, 170467, 170470, 170475, 170477, 170484, 170499, 170500, 170514, 170517, 170522, 170531, 170534, 170572, 170575, 170581, 170584, 170586, 170587, 170588, 170589, 170659, 170661, 170668, 170670, 170672, 170673, 170674, 170675, 170676, 170677, 170682, 170698, 170705, 170709, 170713, 170720, 170722, 170724, 170725, 170726, 170735, 170736, 170737, 170738, 170739, 170741, 170742, 170746, 170770, 170794, 170796, 170810, 170814, 170820, 170821, 170828, 170831, 170833, 170835, 170836, 170837, 170840, 170841, 170842, 170844, 170845, 170848, 170849, 170851, 170856, 170861, 170863, 170865, 170866, 170870, 170871, 170872, 170874, 170875, 170876, 170879, 170881, 170892, 170898, 170899, 170900, 170901, 170902, 170910, 170917, 170924, 170934, 170936, 170939, 170941, 170944, 170945, 170950, 170952, 170955, 170959, 170974, 170975, 170977, 170982, 170983, 170990, 170995, 170998, 171007, 171008, 171010, 171048, 171049, 171051, 171057, 171058, 171060, 171061, 171062, 171064, 171135, 171137, 171138, 171144, 171146, 171148, 171149, 171150, 171155, 171170, 171181, 171182, 171183, 171196, 171198, 171200, 171201, 171202, 171208, 171210, 171211, 171212, 171213, 171214, 171215, 171221, 171223, 171224, 171245, 171286, 171287, 171300, 171301, 171302, 171304, 171305, 171306, 171313, 171315, 171316, 171317, 171318, 171320, 171323, 171324, 171326, 171328, 171329, 171332, 171333, 171338, 171339, 171340, 171342, 171343, 171345, 171346, 171347, 171349, 171350, 171351, 171355, 171356, 171357, 171375, 171385, 171393, 171395, 171400, 171401, 171414, 171417, 171419, 171420, 171425, 171427, 171429, 171430, 171434, 171449, 171450, 171452, 171457, 171458, 171464, 171467, 171472, 171486, 171487, 171488, 171527, 171528, 171529, 171536, 171537, 171539, 171614, 171615, 171617, 171623, 171624, 171625, 171629, 171642, 171660, 171661, 171662, 171675, 171676, 171682, 171685, 171686, 171687, 171688, 171689, 171696, 171697, 171720, 171765, 171766, 171781, 171790, 171791, 171792, 171795, 171796, 171798, 171799, 171801, 171802, 171812, 171813, 171815, 171820, 171821, 171822, 171824, 171825, 171826, 171828, 171831, 171844, 171850, 171860, 171880, 171883, 171889, 171894, 171895, 171900, 171902, 171905, 171909, 171924, 171925, 171927, 171932, 171933, 171936, 171937, 172019, 172024, 172124, 172128, 172176, 172178, 172180, 172183, 172200, 172227, 172229, 172234, 172247, 172259, 172285, 172291, 172308, 172314, 172315, 172317, 172321, 172332, 172342, 172349, 172362, 172365, 172366, 172374, 172376, 172381, 172382, 172420, 172421, 172494, 172495, 172498, 172499, 172599, 172600, 172603, 172651, 172652, 172653, 172654, 172655, 172658, 172663, 172674, 172675, 172686, 172699, 172702, 172704, 172705, 172708, 172709, 172722, 172734, 172757, 172758, 172759, 172760, 172766, 172767, 172768, 172769, 172783, 172785, 172789, 172790, 172792, 172793, 172795, 172796, 172805, 172807, 172811, 172814, 172817, 172824, 172837, 172838, 172840, 172841, 172842, 172849, 172851, 172856, 172857, 172889, 172895, 172896, 172899, 172970, 172971, 172972, 172973, 172982, 173075, 173076, 173077, 173079, 173126, 173127, 173128, 173129, 173133, 173138, 173140, 173149, 173156, 173161, 173162, 173174, 173180, 173181, 173182, 173183, 173209, 173232, 173233, 173234, 173241, 173242, 173243, 173244, 173252, 173259, 173260, 173264, 173265, 173267, 173268, 173270, 173271, 173280, 173286, 173289, 173291, 173292, 173297, 173299, 173313, 173315, 173316, 173317, 173324, 173331, 173332, 173364, 173370, 173371, 173374, 173446, 173447, 173457, 173551, 173552, 173554, 173602, 173613, 173615, 173631, 173636, 173637, 173656, 173657, 173707, 173708, 173717, 173718, 173727, 173734, 173739, 173740, 173743, 173745, 173766, 173772, 173790, 173792, 173799, 173806, 173807, 173839, 173849, 173919, 173924, 173925, 173927, 173933, 174024, 174028, 174030, 174034, 174038, 174076, 174078, 174080, 174081, 174082, 174083, 174084, 174086, 174098, 174100, 174120, 174127, 174129, 174134, 174135, 174139, 174145, 174146, 174147, 174159, 174185, 174186, 174188, 174190, 174191, 174195, 174200, 174208, 174214, 174215, 174216, 174217, 174221, 174226, 174232, 174242, 174249, 174261, 174262, 174265, 174266, 174269, 174274, 174276, 174281, 174282, 174302, 174305, 174320, 174321, 174395, 174398, 174400, 174401, 174402, 174403, 174404, 174408, 174439, 174443, 174500, 174505, 174506, 174507, 174508, 174509, 174513, 174551, 174552, 174553, 174554, 174556, 174557, 174558, 174559, 174561, 174563, 174564, 174573, 174574, 174580, 174586, 174595, 174599, 174605, 174608, 174610, 174611, 174612, 174614, 174620, 174621, 174627, 174634, 174657, 174658, 174659, 174661, 174663, 174665, 174666, 174667, 174668, 174669, 174670, 174675, 174682, 174685, 174689, 174690, 174691, 174692, 174693, 174695, 174696, 174701, 174705, 174711, 174714, 174717, 174718, 174720, 174724, 174736, 174738, 174740, 174741, 174742, 174744, 174749, 174754, 174756, 174757, 174777, 174780, 174789, 174795, 174796, 174799, 174828, 174829, 174830, 174831, 174871, 174872, 174876, 174878, 174879, 174882, 174915, 174916, 174917, 174976, 174977, 174979, 174981, 174982, 174983, 174994, 175027, 175031, 175032, 175034, 175036, 175038, 175039, 175040, 175055, 175056, 175061, 175062, 175081, 175082, 175086, 175087, 175088, 175102, 175132, 175133, 175138, 175140, 175142, 175143, 175145, 175150, 175152, 175157, 175159, 175161, 175164, 175165, 175166, 175168, 175170, 175191, 175193, 175195, 175197, 175215, 175217, 175219, 175224, 175229, 175231, 175232, 175252, 175255, 175264, 175274, 175307, 175310, 175315, 175350, 175352, 175355, 175356, 175358, 175394, 175397, 175401, 175455, 175459, 175460, 175461, 175462, 175463, 175466, 175501, 175503, 175506, 175507, 175508, 175509, 175510, 175511, 175512, 175523, 175528, 175545, 175547, 175560, 175564, 175565, 175566, 175569, 175570, 175571, 175584, 175611, 175612, 175613, 175615, 175616, 175620, 175625, 175628, 175639, 175640, 175641, 175642, 175644, 175646, 175651, 175654, 175667, 175674, 175680, 175683, 175686, 175690, 175691, 175694, 175699, 175706, 175707, 175727, 175730, 175736, 175737, 175745, 175746, 175783, 175784, 175786, 175826, 175828, 175829, 175830, 175831, 175870, 175871, 175873, 175931, 175932, 175933, 175935, 175936, 175937, 175940, 175943, 175977, 175981, 175982, 175984, 175985, 175986, 175987, 175988, 175989, 176003, 176005, 176011, 176036, 176037, 176040, 176041, 176042, 176049, 176052, 176082, 176083, 176087, 176088, 176090, 176092, 176093, 176095, 176100, 176103, 176107, 176114, 176115, 176116, 176118, 176119, 176120, 176143, 176145, 176155, 176158, 176165, 176167, 176169, 176174, 176179, 176181, 176182, 176202, 176205, 176211, 176212, 176214, 176224, 176262, 176263, 176264, 176305, 176306, 176349, 176350, 176352, 176410, 176411, 176412, 176414, 176417, 176456, 176457, 176459, 176460, 176461, 176462, 176478, 176515, 176516, 176518, 176523, 176562, 176563, 176565, 176570, 176575, 176578, 176589, 176590, 176591, 176594, 176630, 176633, 176640, 176644, 176649, 176656, 176657, 176677, 176680, 176686, 176687, 176741, 176746, 176769, 176774, 176784, 176786, 176792, 176828, 176832, 176874, 176878, 176895, 176897, 176905, 176906, 176919, 176926, 176928, 176930, 176933, 176941, 176942, 176943, 176947, 176950, 176968, 176977, 176978, 176979, 176984, 176997, 177003, 177008, 177009, 177010, 177011, 177022, 177031, 177035, 177041, 177046, 177047, 177049, 177054, 177058, 177062, 177064, 177065, 177067, 177071, 177072, 177073, 177082, 177092, 177099, 177109, 177112, 177115, 177116, 177120, 177124, 177125, 177126, 177128, 177131, 177132, 177134, 177135, 177165, 177170, 177171, 177173, 177217, 177220, 177245, 177248, 177259, 177260, 177261, 177262, 177263, 177267, 177304, 177316, 177350, 177370, 177371, 177372, 177373, 177378, 177379, 177393, 177401, 177402, 177403, 177404, 177408, 177413, 177416, 177417, 177418, 177421, 177422, 177424, 177429, 177436, 177443, 177449, 177450, 177455, 177458, 177475, 177476, 177478, 177479, 177483, 177484, 177485, 177486, 177488, 177489, 177506, 177507, 177508, 177509, 177514, 177516, 177517, 177518, 177519, 177521, 177522, 177524, 177529, 177530, 177535, 177537, 177539, 177540, 177542, 177543, 177545, 177546, 177547, 177548, 177555, 177556, 177561, 177564, 177567, 177574, 177575, 177576, 177584, 177588, 177590, 177591, 177592, 177595, 177599, 177600, 177606, 177607, 177609, 177610, 177639, 177640, 177642, 177645, 177646, 177647, 177648, 177649, 177693, 177694, 177705, 177721, 177722, 177732, 177735, 177737, 177738, 177780, 177781, 177783, 177826, 177827, 177829, 177846, 177848, 177859, 177875, 177877, 177888, 177890, 177891, 177892, 177893, 177896, 177904, 177906, 177911, 177912, 177931, 177932, 177950, 177951, 177954, 177957, 177963, 177980, 177982, 177983, 177989, 177992, 177993, 177996, 177997, 177999, 178002, 178005, 178009, 178012, 178014, 178015, 178018, 178020, 178022, 178041, 178047, 178050, 178051, 178065, 178067, 178070, 178074, 178075, 178081, 178082, 178084, 178085, 178114, 178117, 178122, 178124, 178172, 178175, 178200, 178202, 178208, 178209, 178211, 178214, 178215, 178216, 178217, 178259, 178261, 178276, 178305, 178309, 178313, 178320, 178322, 178324, 178325, 178326, 178338, 178342, 178351, 178353, 178356, 178357, 178358, 178359, 178361, 178366, 178367, 178368, 178369, 178372, 178373, 178377, 178393, 178395, 178396, 178410, 178414, 178420, 178421, 178428, 178431, 178433, 178434, 178435, 178436, 178437, 178449, 178456, 178461, 178463, 178465, 178466, 178470, 178471, 178472, 178474, 178475, 178476, 178479, 178487, 178489, 178490, 178491, 178492, 178496, 178497, 178498, 178500, 178501, 178502, 178510, 178517, 178524, 178534, 178536, 178539, 178540, 178541, 178544, 178545, 178549, 178550, 178555, 178556, 178557, 178559, 178560, 178577, 178580, 178582, 178583, 178590, 178595, 178596, 178598, 178648, 178649, 178651, 178676, 178678, 178679, 178685, 178687, 178688, 178689, 178690, 178691, 178735, 178737, 178738, 178781, 178782, 178783, 178796, 178798, 178800, 178801, 178808, 178813, 178824, 178827, 178831, 178832, 178834, 178836, 178838, 178839, 178841, 178842, 178843, 178844, 178846, 178852, 178854, 178855, 178861, 178886, 178887, 178900, 178901, 178902, 178904, 178905, 178906, 178913, 178924, 178929, 178932, 178933, 178938, 178939, 178940, 178942, 178943, 178945, 178946, 178947, 178949, 178950, 178951, 178955, 178957, 178962, 178964, 178965, 178966, 178968, 178970, 178972, 178975, 178985, 178993, 178995, 179000, 179001, 179014, 179015, 179017, 179019, 179020, 179024, 179025, 179029, 179030, 179031, 179032, 179034, 179035, 179052, 179055, 179057, 179058, 179064, 179067, 179072, 179074, 179127, 179128, 179129, 179155, 179156, 179164, 179165, 179166, 179214, 179215, 179217, 179260, 179261, 179262, 179275, 179276, 179282, 179288, 179297, 179306, 179307, 179309, 179310, 179311, 179312, 179316, 179317, 179318, 179319, 179327, 179328, 179365, 179366, 179381, 179396, 179399, 179402, 179412, 179413, 179415, 179420, 179421, 179422, 179424, 179425, 179426, 179428, 179437, 179439, 179440, 179441, 179444, 179447, 179450, 179460, 179480, 179483, 179489, 179490, 179494, 179495, 179499, 179500, 179505, 179506, 179507, 179509, 179510, 179527, 179530, 179532, 179533, 179536, 179537, 179619, 179624, 179647, 179649, 179655, 179724, 179728, 179776, 179778, 179780, 179783, 179800, 179807, 179808, 179813, 179816, 179827, 179829, 179834, 179847, 179859, 179885, 179891, 179898, 179908, 179913, 179914, 179915, 179917, 179921, 179928, 179932, 179933, 179942, 179949, 179962, 179965, 179966, 179974, 179976, 179981, 179982, 180016, 180020, 180021, 180095, 180098, 180122, 180123, 180124, 180125, 180126, 180130, 180200, 180251, 180252, 180253, 180254, 180258, 180263, 180274, 180282, 180283, 180285, 180286, 180288, 180290, 180291, 180299, 180305, 180308, 180334, 180357, 180358, 180359, 180366, 180367, 180368, 180369, 180373, 180385, 180388, 180389, 180390, 180392, 180393, 180395, 180396, 180403, 180405, 180408, 180411, 180414, 180417, 180424, 180438, 180440, 180441, 180442, 180449, 180456, 180457, 180489, 180491, 180493, 180495, 180496, 180499, 180571, 180572, 180582, 180598, 180600, 180601, 180676, 180677, 180679, 180727, 180738, 180740, 180756, 180757, 180758, 180760, 180761, 180762, 180765, 180781, 180782, 180832, 180833, 180842, 180843, 180848, 180852, 180859, 180863, 180864, 180865, 180868, 180870, 180878, 180883, 180891, 180897, 180915, 180917, 180924, 180931, 180932, 180964, 180968, 180974, 181050, 181052, 181058, 181072, 181074, 181077, 181078, 181079, 181080, 181155, 181159, 181163, 181201, 181203, 181206, 181207, 181208, 181209, 181211, 181223, 181232, 181233, 181234, 181238, 181239, 181241, 181245, 181260, 181264, 181270, 181271, 181284, 181311, 181313, 181315, 181316, 181320, 181323, 181325, 181338, 181339, 181340, 181341, 181342, 181346, 181351, 181353, 181358, 181367, 181374, 181386, 181390, 181391, 181394, 181399, 181406, 181407, 181427, 181430, 181431, 181441, 181445, 181446, 181526, 181528, 181529, 181548, 181550, 181551, 181552, 181553, 181554, 181631, 181632, 181633, 181677, 181681, 181682, 181684, 181686, 181688, 181689, 181705, 181707, 181708, 181709, 181710, 181711, 181714, 181715, 181736, 181737, 181752, 181782, 181783, 181788, 181790, 181792, 181793, 181795, 181798, 181800, 181807, 181813, 181814, 181815, 181816, 181818, 181820, 181828, 181833, 181843, 181845, 181865, 181867, 181869, 181874, 181879, 181881, 181882, 181902, 181905, 181906, 181914, 181918, 181924, 182005, 182006, 182027, 182028, 182029, 182110, 182111, 182112, 182156, 182157, 182159, 182160, 182161, 182162, 182178, 182182, 182183, 182184, 182189, 182215, 182216, 182262, 182263, 182265, 182270, 182273, 182275, 182278, 182288, 182289, 182290, 182291, 182294, 182303, 182308, 182330, 182333, 182340, 182344, 182349, 182356, 182357, 182377, 182380, 182381, 182386, 182387, 182679, 182684, 182697, 182784, 182787, 182802, 182806, 182812, 182826, 182839, 182869, 183154, 183155, 183158, 183159, 183172, 183259, 183261, 183262, 183263, 183264, 183273, 183277, 183281, 183285, 183287, 183288, 183298, 183301, 183314, 183321, 183338, 183344, 183629, 183630, 183631, 183632, 183633, 183634, 183647, 183702, 183734, 183736, 183737, 183738, 183739, 183741, 183747, 183748, 183752, 183756, 183760, 183762, 183763, 183773, 183776, 183789, 183796, 183813, 183819, 184105, 184106, 184107, 184108, 184177, 184209, 184211, 184212, 184213, 184214, 184216, 184222, 184223, 184227, 184231, 184235, 184238, 184248, 184264, 184271, 184288, 184294, 184581, 184582, 184652, 184688, 184691, 184697, 184698, 184710, 184723, 184746, 184763, 185054, 185059, 185060, 185064, 185070, 185071, 185072, 185159, 185162, 185165, 185169, 185171, 185177, 185181, 185182, 185186, 185187, 185201, 185214, 185216, 185226, 185244, 185364, 185368, 185529, 185530, 185533, 185534, 185535, 185536, 185537, 185539, 185545, 185546, 185547, 185634, 185636, 185637, 185638, 185639, 185640, 185643, 185644, 185645, 185646, 185648, 185652, 185656, 185657, 185660, 185661, 185662, 185663, 185673, 185676, 185679, 185689, 185691, 185696, 185701, 185713, 185719, 185839, 185840, 185841, 185842, 185843, 186005, 186006, 186007, 186008, 186010, 186011, 186012, 186013, 186014, 186020, 186021, 186077, 186086, 186109, 186111, 186112, 186113, 186114, 186115, 186116, 186118, 186119, 186120, 186121, 186122, 186123, 186127, 186131, 186132, 186135, 186136, 186138, 186148, 186154, 186164, 186166, 186171, 186176, 186188, 186194, 186315, 186316, 186317, 186481, 186482, 186486, 186487, 186488, 186552, 186561, 186588, 186590, 186591, 186593, 186594, 186595, 186596, 186597, 186598, 186607, 186610, 186623, 186629, 186641, 186646, 186651, 186663, 186794, 186797, 186801, 186954, 186959, 186960, 186964, 186965, 186966, 186969, 186970, 186971, 186972, 187044, 187054, 187059, 187062, 187065, 187069, 187071, 187077, 187080, 187081, 187082, 187083, 187086, 187087, 187101, 187114, 187116, 187126, 187136, 187144, 187264, 187268, 187269, 187270, 187271, 187272, 187273, 187276, 187430, 187433, 187435, 187436, 187437, 187439, 187440, 187441, 187442, 187444, 187445, 187446, 187449, 187519, 187529, 187534, 187536, 187537, 187538, 187539, 187540, 187543, 187544, 187545, 187546, 187548, 187552, 187555, 187556, 187557, 187558, 187560, 187561, 187563, 187573, 187579, 187589, 187591, 187596, 187601, 187611, 187613, 187619, 187740, 187741, 187742, 187745, 187746, 187748, 187906, 187907, 187911, 187912, 187913, 187915, 187916, 187917, 187924, 187977, 187986, 187994, 188013, 188015, 188016, 188018, 188019, 188020, 188021, 188022, 188023, 188030, 188032, 188033, 188035, 188048, 188054, 188066, 188071, 188076, 188086, 188088, 188219, 188222, 188224, 188225, 188226, 188227, 188385, 188389, 188390, 188391, 188393, 188394, 188395, 188396, 188398, 188469, 188479, 188484, 188487, 188490, 188494, 188496, 188502, 188505, 188506, 188507, 188508, 188511, 188539, 188541, 188551, 188561, 188569, 188695, 188696, 188698, 188699, 188700, 188702, 188861, 188862, 188865, 188866, 188867, 188868, 188873, 188874, 188944, 188963, 188965, 188968, 188969, 188970, 188971, 188973, 188980, 188982, 188983, 188985, 188998, 189004, 189016, 189021, 189026, 189036, 189038, 189174, 189175, 189177, 189340, 189341, 189343, 189348, 189419, 189440, 189444, 189446, 189455, 189457, 189458, 189491, 189501, 189511, 189653, 189657, 189730, 189804, 189809, 189822, 189828, 189833, 189835, 189836, 189847, 189909, 189912, 189927, 189928, 189929, 189931, 189934, 189937, 189947, 189951, 189953, 189964, 189967, 189972, 189973, 189994, 189998, 190128, 190129, 190132, 190141, 190203, 190205, 190279, 190280, 190283, 190284, 190297, 190301, 190303, 190304, 190308, 190310, 190311, 190313, 190314, 190322, 190381, 190384, 190386, 190387, 190388, 190389, 190398, 190400, 190401, 190402, 190403, 190404, 190406, 190409, 190410, 190412, 190413, 190422, 190423, 190426, 190428, 190439, 190442, 190446, 190447, 190448, 190463, 190469, 190472, 190473, 190604, 190605, 190606, 190608, 190616, 190678, 190755, 190756, 190757, 190758, 190776, 190778, 190779, 190782, 190783, 190785, 190786, 190788, 190789, 190805, 190827, 190856, 190859, 190861, 190862, 190863, 190864, 190866, 190872, 190873, 190875, 190876, 190877, 190878, 190879, 190881, 190884, 190885, 190888, 190897, 190898, 190914, 190917, 190921, 190922, 190923, 190938, 190944, 190947, 190948, 191080, 191081, 191083, 191231, 191232, 191251, 191254, 191257, 191263, 191280, 191302, 191338, 191341, 191347, 191348, 191350, 191351, 191353, 191354, 191360, 191372, 191373, 191392, 191396, 191397, 191398, 191413, 191422, 191553, 191557, 191559, 191561, 191576, 191630, 191704, 191709, 191710, 191714, 191720, 191721, 191722, 191728, 191731, 191733, 191735, 191736, 191737, 191747, 191749, 191802, 191809, 191810, 191812, 191815, 191819, 191821, 191827, 191828, 191829, 191831, 191832, 191834, 191836, 191837, 191839, 191847, 191851, 191853, 191855, 191864, 191866, 191867, 191872, 191873, 191876, 191882, 191894, 191898, 192014, 192018, 192029, 192034, 192035, 192036, 192037, 192038, 192041, 192051, 192103, 192180, 192183, 192185, 192186, 192187, 192189, 192195, 192196, 192201, 192203, 192204, 192205, 192206, 192208, 192210, 192211, 192212, 192213, 192214, 192224, 192229, 192277, 192281, 192284, 192285, 192286, 192287, 192288, 192289, 192290, 192293, 192294, 192295, 192296, 192298, 192300, 192301, 192302, 192303, 192304, 192306, 192307, 192309, 192310, 192311, 192313, 192314, 192322, 192323, 192329, 192330, 192339, 192341, 192342, 192346, 192347, 192348, 192351, 192357, 192363, 192369, 192372, 192373, 192490, 192491, 192492, 192505, 192506, 192508, 192510, 192512, 192513, 192656, 192657, 192661, 192662, 192663, 192676, 192679, 192680, 192681, 192682, 192688, 192699, 192704, 192705, 192727, 192736, 192760, 192763, 192765, 192766, 192768, 192769, 192770, 192771, 192772, 192773, 192775, 192776, 192778, 192779, 192782, 192785, 192789, 192797, 192798, 192804, 192805, 192816, 192817, 192821, 192822, 192823, 192826, 192832, 192838, 192847, 192969, 192972, 192976, 192984, 192986, 192989, 192990, 192992, 193001, 193135, 193139, 193140, 193141, 193144, 193145, 193146, 193153, 193156, 193158, 193160, 193161, 193162, 193171, 193174, 193177, 193219, 193227, 193229, 193234, 193235, 193237, 193240, 193244, 193246, 193252, 193253, 193254, 193255, 193256, 193257, 193258, 193259, 193261, 193264, 193272, 193280, 193289, 193291, 193292, 193297, 193298, 193301, 193307, 193311, 193319, 193323, 193445, 193446, 193448, 193460, 193462, 193463, 193464, 193465, 193467, 193611, 193612, 193615, 193616, 193617, 193624, 193626, 193629, 193630, 193631, 193638, 193646, 193649, 193652, 193654, 193694, 193710, 193713, 193715, 193718, 193719, 193720, 193721, 193723, 193725, 193726, 193728, 193729, 193730, 193732, 193733, 193735, 193739, 193747, 193748, 193754, 193755, 193766, 193767, 193771, 193772, 193773, 193776, 193782, 193786, 193788, 193797, 193924, 193925, 193927, 193939, 193940, 193942, 194090, 194091, 194093, 194098, 194106, 194121, 194124, 194127, 194169, 194185, 194190, 194194, 194196, 194203, 194204, 194205, 194207, 194208, 194214, 194222, 194230, 194241, 194242, 194247, 194248, 194251, 194257, 194261, 194275, 194280, 194403, 194407, 194418, 194420, 194422, 194480, 194554, 194559, 194572, 194578, 194583, 194585, 194586, 194590, 194592, 194594, 194595, 194597, 194598, 194649, 194659, 194662, 194677, 194678, 194679, 194681, 194684, 194687, 194697, 194701, 194702, 194703, 194714, 194717, 194722, 194723, 194724, 194744, 194748, 194751, 194754, 194879, 194891, 194893, 194894, 194895, 194896, 194897, 194903, 194915, 194952, 194953, 195026, 195030, 195033, 195051, 195053, 195054, 195058, 195060, 195061, 195063, 195064, 195065, 195067, 195068, 195069, 195070, 195073, 195078, 195124, 195131, 195134, 195136, 195137, 195138, 195139, 195148, 195150, 195151, 195152, 195153, 195154, 195156, 195159, 195160, 195163, 195172, 195173, 195177, 195189, 195192, 195196, 195197, 195198, 195199, 195213, 195219, 195222, 195223, 195227, 195228, 195239, 195355, 195356, 195358, 195369, 195371, 195381, 195396, 195427, 195506, 195507, 195526, 195529, 195532, 195538, 195540, 195542, 195543, 195545, 195548, 195553, 195555, 195577, 195613, 195616, 195622, 195623, 195625, 195626, 195628, 195629, 195635, 195647, 195648, 195652, 195667, 195671, 195672, 195673, 195674, 195688, 195697, 195706, 195709, 195834, 195836, 195843, 195845, 195847, 195848, 195849, 195850, 195851, 195852, 195857, 195873, 195945, 195985, 195989, 195995, 195996, 196003, 196006, 196008, 196010, 196011, 196012, 196015, 196017, 196019, 196020, 196023, 196024, 196026, 196074, 196077, 196084, 196085, 196087, 196090, 196094, 196096, 196102, 196103, 196104, 196106, 196107, 196109, 196111, 196114, 196122, 196127, 196130, 196139, 196141, 196142, 196147, 196148, 196149, 196151, 196157, 196169, 196173, 196182, 196183, 196185, 196310, 196312, 196313, 196319, 196321, 196323, 196324, 196325, 196330, 196345, 196377, 196420, 196461, 196462, 196476, 196479, 196480, 196481, 196488, 196490, 196492, 196493, 196495, 196498, 196499, 196501, 196503, 196504, 196560, 196563, 196565, 196568, 196569, 196570, 196571, 196573, 196575, 196576, 196578, 196579, 196582, 196585, 196589, 196597, 196598, 196602, 196604, 196605, 196616, 196617, 196621, 196622, 196623, 196624, 196626, 196632, 196638, 196647, 196661, 196662, 196663, 196789, 196790, 196792, 196798, 196799, 196800, 196804, 196817, 196895, 196940, 196941, 196956, 196965, 196967, 196970, 196971, 196973, 196974, 196976, 196977, 197019, 197035, 197040, 197044, 197046, 197053, 197054, 197055, 197057, 197058, 197064, 197072, 197077, 197080, 197091, 197092, 197097, 197098, 197099, 197101, 197107, 197111, 197299, 197303, 197404, 197409, 197422, 197460, 197466, 197483, 197492, 197507, 197509, 197512, 197517, 197524, 197527, 197531, 197537, 197541, 197543, 197546, 197551, 197562, 197564, 197570, 197578, 197579, 197594, 197595, 197774, 197775, 197778, 197879, 197880, 197883, 197884, 197897, 197932, 197933, 197934, 197935, 197941, 197942, 197943, 197944, 197958, 197960, 197967, 197980, 197982, 197984, 197986, 197987, 197988, 197989, 197992, 197998, 197999, 198002, 198006, 198010, 198012, 198013, 198016, 198017, 198018, 198021, 198023, 198026, 198037, 198039, 198045, 198046, 198053, 198054, 198063, 198064, 198069, 198070, 198250, 198251, 198252, 198254, 198337, 198355, 198356, 198357, 198358, 198407, 198408, 198409, 198416, 198417, 198418, 198419, 198427, 198434, 198435, 198442, 198455, 198459, 198461, 198462, 198463, 198464, 198466, 198467, 198472, 198473, 198474, 198477, 198481, 198485, 198488, 198491, 198492, 198493, 198496, 198498, 198512, 198514, 198520, 198521, 198528, 198529, 198538, 198539, 198544, 198545, 198726, 198727, 198729, 198812, 198831, 198832, 198882, 198883, 198892, 198893, 198902, 198909, 198938, 198941, 198947, 198948, 198960, 198967, 198968, 198971, 198973, 198987, 198995, 198996, 199003, 199004, 199013, 199014, 199199, 199203, 199205, 199209, 199213, 199304, 199309, 199310, 199314, 199320, 199321, 199322, 199360, 199361, 199363, 199365, 199366, 199370, 199375, 199383, 199392, 199401, 199407, 199409, 199412, 199415, 199417, 199419, 199421, 199424, 199427, 199431, 199432, 199436, 199437, 199441, 199443, 199444, 199446, 199451, 199462, 199464, 199466, 199470, 199476, 199477, 199478, 199479, 199494, 199495, 199614, 199618, 199675, 199680, 199681, 199682, 199683, 199684, 199688, 199780, 199783, 199785, 199786, 199787, 199789, 199795, 199796, 199802, 199832, 199833, 199834, 199836, 199838, 199840, 199841, 199842, 199843, 199844, 199845, 199850, 199857, 199860, 199867, 199876, 199880, 199884, 199886, 199887, 199888, 199889, 199890, 199892, 199893, 199894, 199895, 199896, 199898, 199899, 199902, 199906, 199907, 199910, 199911, 199913, 199916, 199917, 199918, 199919, 199921, 199923, 199929, 199937, 199939, 199941, 199945, 199946, 199951, 199952, 199953, 199954, 199963, 199964, 199969, 199970, 200003, 200004, 200005, 200006, 200090, 200091, 200092, 200151, 200152, 200154, 200156, 200157, 200158, 200169, 200237, 200256, 200257, 200261, 200262, 200263, 200277, 200307, 200308, 200313, 200315, 200317, 200318, 200320, 200325, 200327, 200332, 200334, 200336, 200363, 200365, 200366, 200368, 200369, 200370, 200371, 200372, 200373, 200382, 200385, 200392, 200393, 200394, 200396, 200398, 200404, 200412, 200416, 200420, 200421, 200426, 200427, 200428, 200429, 200438, 200439, 200482, 200485, 200490, 200569, 200572, 200576, 200630, 200634, 200635, 200636, 200637, 200638, 200641, 200722, 200735, 200739, 200740, 200741, 200744, 200745, 200746, 200786, 200787, 200788, 200790, 200791, 200795, 200800, 200803, 200817, 200819, 200826, 200829, 200834, 200837, 200840, 200842, 200844, 200846, 200849, 200852, 200855, 200856, 200857, 200858, 200861, 200866, 200868, 200869, 200871, 200887, 200889, 200891, 200895, 200901, 200902, 200903, 200904, 200911, 200912, 200919, 200920, 200958, 200959, 200961, 201045, 201046, 201048, 201106, 201107, 201108, 201110, 201111, 201112, 201115, 201118, 201211, 201212, 201215, 201216, 201217, 201224, 201227, 201257, 201258, 201262, 201263, 201265, 201267, 201268, 201270, 201275, 201278, 201282, 201294, 201313, 201315, 201318, 201319, 201320, 201321, 201323, 201330, 201332, 201333, 201335, 201342, 201343, 201344, 201346, 201348, 201354, 201362, 201366, 201370, 201371, 201376, 201377, 201378, 201379, 201386, 201387, 201388, 201389, 201437, 201438, 201439, 201524, 201525, 201527, 201585, 201586, 201587, 201589, 201592, 201690, 201691, 201693, 201698, 201737, 201738, 201740, 201745, 201750, 201753, 201769, 201790, 201794, 201796, 201805, 201807, 201808, 201818, 201819, 201821, 201837, 201841, 201845, 201851, 201852, 201853, 201854, 201861, 201862, 201916, 201921, 202003, 202007, 202049, 202053, 202070, 202072, 202080, 202081, 202094, 202153, 202154, 202159, 202172, 202178, 202183, 202185, 202186, 202197, 202206, 202210, 202216, 202221, 202222, 202224, 202229, 202233, 202242, 202248, 202257, 202259, 202262, 202267, 202274, 202277, 202278, 202279, 202281, 202284, 202287, 202291, 202293, 202295, 202296, 202297, 202300, 202301, 202303, 202309, 202312, 202314, 202317, 202320, 202322, 202323, 202328, 202329, 202340, 202344, 202345, 202348, 202392, 202395, 202479, 202491, 202525, 202545, 202546, 202547, 202548, 202553, 202554, 202568, 202625, 202630, 202633, 202650, 202651, 202653, 202654, 202658, 202660, 202661, 202663, 202664, 202681, 202682, 202683, 202684, 202689, 202691, 202692, 202693, 202694, 202696, 202697, 202699, 202704, 202705, 202710, 202717, 202723, 202730, 202731, 202734, 202736, 202737, 202738, 202739, 202742, 202748, 202749, 202750, 202751, 202752, 202753, 202754, 202756, 202759, 202760, 202763, 202766, 202767, 202768, 202770, 202771, 202772, 202773, 202775, 202784, 202787, 202789, 202792, 202795, 202796, 202797, 202798, 202803, 202804, 202813, 202814, 202815, 202817, 202819, 202820, 202822, 202823, 202868, 202869, 202880, 202955, 202956, 202958, 203001, 203002, 203004, 203021, 203023, 203034, 203050, 203087, 203106, 203107, 203125, 203126, 203129, 203132, 203138, 203155, 203157, 203158, 203164, 203167, 203168, 203171, 203172, 203174, 203177, 203180, 203184, 203213, 203216, 203222, 203223, 203225, 203226, 203228, 203229, 203235, 203242, 203243, 203245, 203246, 203247, 203248, 203250, 203259, 203262, 203267, 203270, 203271, 203272, 203273, 203278, 203279, 203288, 203289, 203292, 203297, 203347, 203350, 203434, 203436, 203451, 203480, 203484, 203488, 203495, 203497, 203499, 203500, 203501, 203513, 203517, 203571, 203585, 203589, 203595, 203596, 203603, 203606, 203608, 203610, 203611, 203612, 203624, 203631, 203636, 203638, 203640, 203641, 203645, 203646, 203647, 203649, 203650, 203651, 203654, 203667, 203673, 203675, 203676, 203677, 203684, 203685, 203687, 203690, 203692, 203694, 203696, 203699, 203702, 203703, 203704, 203706, 203707, 203709, 203711, 203714, 203716, 203718, 203719, 203720, 203721, 203722, 203725, 203730, 203734, 203737, 203739, 203741, 203742, 203745, 203747, 203748, 203751, 203752, 203753, 203754, 203757, 203758, 203765, 203769, 203770, 203773, 203823, 203824, 203826, 203910, 203912, 203913, 203956, 203957, 203958, 203971, 203973, 203975, 203976, 203983, 203988, 203999, 204061, 204062, 204075, 204076, 204077, 204079, 204080, 204081, 204088, 204099, 204104, 204107, 204108, 204113, 204114, 204115, 204117, 204118, 204120, 204121, 204122, 204124, 204125, 204126, 204130, 204132, 204150, 204160, 204163, 204165, 204168, 204169, 204170, 204171, 204173, 204175, 204176, 204178, 204179, 204182, 204185, 204189, 204192, 204193, 204194, 204195, 204196, 204197, 204198, 204200, 204204, 204205, 204209, 204212, 204216, 204217, 204220, 204221, 204222, 204223, 204226, 204227, 204228, 204229, 204232, 204233, 204238, 204239, 204242, 204247, 204302, 204303, 204304, 204389, 204390, 204392, 204435, 204436, 204437, 204450, 204451, 204457, 204463, 204472, 204540, 204541, 204556, 204571, 204574, 204577, 204587, 204588, 204590, 204595, 204596, 204597, 204599, 204600, 204601, 204603, 204619, 204625, 204635, 204640, 204644, 204646, 204653, 204654, 204655, 204657, 204658, 204664, 204668, 204669, 204670, 204671, 204672, 204675, 204680, 204684, 204687, 204691, 204692, 204695, 204697, 204698, 204701, 204702, 204703, 204704, 204707, 204708, 204711, 204712, 204794, 204799, 204899, 204903, 204951, 204953, 204955, 204958, 204975, 205002, 205004, 205009, 205022, 205034, 205060, 205066, 205083, 205089, 205090, 205092, 205096, 205107, 205109, 205112, 205117, 205124, 205127, 205131, 205137, 205140, 205141, 205143, 205146, 205149, 205151, 205156, 205157, 205162, 205164, 205170, 205178, 205179, 205194, 205195, 205196, 205270, 205273, 205375, 205426, 205427, 205428, 205429, 205433, 205438, 205449, 205461, 205474, 205480, 205483, 205509, 205532, 205533, 205534, 205541, 205542, 205543, 205544, 205560, 205564, 205565, 205567, 205568, 205570, 205571, 205580, 205584, 205586, 205587, 205588, 205589, 205592, 205598, 205599, 205602, 205606, 205610, 205613, 205615, 205616, 205617, 205618, 205621, 205623, 205624, 205631, 205632, 205637, 205639, 205645, 205646, 205653, 205654, 205663, 205664, 205669, 205670, 205671, 205674, 205746, 205747, 205757, 205851, 205852, 205854, 205902, 205913, 205915, 205931, 205936, 205937, 205956, 205957, 206007, 206008, 206017, 206018, 206027, 206034, 206039, 206040, 206043, 206045, 206063, 206066, 206072, 206073, 206085, 206090, 206092, 206093, 206096, 206098, 206099, 206106, 206107, 206112, 206120, 206121, 206128, 206129, 206138, 206139, 206149, 206225, 206227, 206233, 206330, 206334, 206338, 206376, 206378, 206381, 206382, 206383, 206384, 206386, 206398, 206420, 206435, 206439, 206445, 206446, 206459, 206486, 206488, 206490, 206491, 206495, 206500, 206514, 206515, 206516, 206517, 206521, 206526, 206534, 206537, 206540, 206542, 206544, 206546, 206549, 206552, 206556, 206557, 206561, 206565, 206566, 206568, 206569, 206571, 206574, 206581, 206582, 206587, 206589, 206591, 206595, 206601, 206602, 206603, 206604, 206605, 206619, 206620, 206621, 206701, 206703, 206704, 206806, 206807, 206808, 206852, 206856, 206857, 206859, 206861, 206863, 206864, 206880, 206886, 206911, 206912, 206927, 206957, 206958, 206963, 206965, 206967, 206968, 206970, 206975, 206982, 206989, 206990, 206991, 206993, 206995, 207013, 207015, 207018, 207019, 207020, 207021, 207023, 207032, 207035, 207040, 207042, 207043, 207044, 207046, 207048, 207049, 207054, 207056, 207057, 207062, 207066, 207070, 207071, 207076, 207077, 207078, 207079, 207080, 207088, 207089, 207099, 207180, 207181, 207285, 207286, 207287, 207331, 207332, 207334, 207335, 207336, 207337, 207353, 207390, 207391, 207437, 207438, 207440, 207445, 207450, 207453, 207464, 207465, 207466, 207469, 207490, 207494, 207496, 207505, 207507, 207508, 207515, 207518, 207519, 207521, 207524, 207531, 207532, 207537, 207541, 207545, 207551, 207552, 207553, 207554, 207555, 207561, 207562, 207854, 207859, 207872, 207959, 207962, 207977, 207981, 207987, 208001, 208013, 208014, 208015, 208018, 208019, 208034, 208035, 208044, 208329, 208330, 208333, 208334, 208347, 208434, 208436, 208437, 208438, 208439, 208448, 208452, 208456, 208460, 208462, 208463, 208473, 208476, 208488, 208489, 208490, 208493, 208494, 208496, 208509, 208510, 208513, 208519, 208805, 208806, 208807, 208808, 208877, 208909, 208911, 208912, 208913, 208914, 208916, 208922, 208923, 208927, 208931, 208935, 208938, 208948, 208963, 208964, 208965, 208968, 208969, 208971, 208984, 208985, 208988, 208994, 209281, 209282, 209352, 209388, 209391, 209397, 209398, 209410, 209423, 209438, 209440, 209443, 209444, 209446, 209459, 209460, 209463, 209754, 209759, 209760, 209764, 209770, 209771, 209772, 209859, 209862, 209865, 209869, 209871, 209877, 209881, 209882, 209886, 209887, 209901, 209913, 209914, 209915, 209916, 209918, 209919, 209926, 209934, 209935, 209944, 210064, 210068, 210230, 210233, 210235, 210236, 210237, 210239, 210245, 210246, 210334, 210336, 210337, 210338, 210339, 210340, 210343, 210344, 210345, 210346, 210348, 210352, 210356, 210357, 210360, 210361, 210363, 210373, 210379, 210388, 210389, 210390, 210391, 210393, 210394, 210396, 210401, 210409, 210410, 210413, 210419, 210540, 210541, 210542, 210706, 210707, 210711, 210712, 210713, 210777, 210786, 210813, 210815, 210816, 210818, 210819, 210820, 210821, 210822, 210823, 210832, 210835, 210848, 210854, 210863, 210865, 210866, 210868, 210869, 210871, 210876, 210884, 210885, 210888, 211019, 211022, 211026, 211185, 211189, 211190, 211191, 211194, 211195, 211196, 211269, 211279, 211284, 211287, 211290, 211294, 211296, 211302, 211305, 211306, 211307, 211308, 211311, 211338, 211339, 211340, 211341, 211343, 211344, 211351, 211359, 211360, 211361, 211369, 211495, 211496, 211498, 211661, 211662, 211665, 211666, 211667, 211674, 211744, 211763, 211765, 211768, 211769, 211770, 211771, 211773, 211780, 211782, 211783, 211785, 211798, 211804, 211813, 211815, 211816, 211818, 211819, 211821, 211826, 211834, 211835, 211836, 211838, 211974, 211975, 211977, 212140, 212141, 212143, 212148, 212219, 212240, 212244, 212246, 212255, 212257, 212258, 212288, 212290, 212291, 212293, 212294, 212301, 212309, 212310, 212311, 212453, 212457, 212530, 212604, 212609, 212622, 212628, 212633, 212635, 212636, 212647, 212709, 212712, 212727, 212728, 212729, 212731, 212734, 212737, 212747, 212751, 212753, 212763, 212764, 212765, 212767, 212768, 212769, 212772, 212773, 212784, 212785, 212794, 212798, 212929, 212941, 213003, 213080, 213083, 213101, 213103, 213104, 213108, 213110, 213111, 213113, 213114, 213181, 213184, 213186, 213187, 213188, 213189, 213198, 213200, 213201, 213202, 213203, 213204, 213206, 213209, 213210, 213213, 213222, 213223, 213238, 213239, 213240, 213242, 213243, 213244, 213246, 213247, 213248, 213259, 213260, 213263, 213269, 213272, 213273, 213405, 213406, 213408, 213556, 213557, 213576, 213579, 213582, 213588, 213605, 213627, 213663, 213666, 213672, 213673, 213675, 213676, 213678, 213679, 213685, 213697, 213698, 213713, 213715, 213717, 213718, 213719, 213721, 213722, 213723, 213734, 213735, 213738, 213747, 213884, 213886, 213901, 214035, 214039, 214045, 214046, 214053, 214056, 214058, 214060, 214061, 214062, 214074, 214127, 214134, 214135, 214137, 214140, 214144, 214146, 214152, 214153, 214154, 214156, 214157, 214159, 214161, 214164, 214172, 214180, 214188, 214189, 214190, 214191, 214192, 214193, 214194, 214197, 214198, 214201, 214207, 214209, 214210, 214219, 214223, 214360, 214362, 214363, 214511, 214512, 214526, 214529, 214530, 214531, 214538, 214549, 214554, 214610, 214613, 214615, 214618, 214619, 214620, 214621, 214623, 214625, 214626, 214628, 214629, 214632, 214635, 214639, 214647, 214648, 214654, 214655, 214663, 214665, 214666, 214667, 214668, 214669, 214671, 214672, 214673, 214676, 214682, 214684, 214685, 214688, 214697, 214839, 214840, 214842, 214990, 214991, 215006, 215021, 215024, 215027, 215069, 215085, 215090, 215094, 215096, 215103, 215104, 215105, 215107, 215108, 215114, 215122, 215130, 215138, 215140, 215141, 215142, 215143, 215144, 215147, 215148, 215151, 215157, 215159, 215160, 215161, 215349, 215353, 215454, 215459, 215472, 215510, 215516, 215533, 215542, 215557, 215559, 215562, 215567, 215574, 215577, 215581, 215587, 215591, 215593, 215596, 215601, 215612, 215613, 215614, 215615, 215618, 215619, 215620, 215628, 215629, 215634, 215635, 215644, 215645, 215825, 215930, 215933, 215982, 215983, 215984, 215991, 215992, 215993, 215994, 216010, 216017, 216030, 216034, 216036, 216037, 216038, 216039, 216042, 216048, 216049, 216052, 216056, 216060, 216063, 216066, 216067, 216068, 216071, 216073, 216087, 216088, 216089, 216090, 216093, 216094, 216095, 216096, 216103, 216104, 216109, 216110, 216113, 216114, 216119, 216120, 216301, 216302, 216304, 216387, 216406, 216407, 216457, 216458, 216467, 216468, 216477, 216484, 216513, 216516, 216522, 216523, 216535, 216542, 216543, 216546, 216548, 216562, 216563, 216565, 216568, 216569, 216570, 216571, 216578, 216579, 216584, 216585, 216588, 216589, 216780, 216784, 216788, 216885, 216889, 216895, 216896, 216936, 216938, 216940, 216941, 216945, 216950, 216967, 216976, 216984, 216987, 216990, 216992, 216994, 216996, 216999, 217002, 217006, 217007, 217011, 217016, 217018, 217019, 217021, 217037, 217038, 217039, 217040, 217041, 217043, 217044, 217045, 217051, 217052, 217053, 217054, 217059, 217060, 217069, 217070, 217256, 217257, 217258, 217361, 217362, 217377, 217407, 217408, 217413, 217415, 217417, 217418, 217420, 217425, 217432, 217463, 217465, 217468, 217469, 217470, 217471, 217473, 217482, 217485, 217492, 217493, 217494, 217496, 217498, 217504, 217512, 217513, 217515, 217516, 217518, 217519, 217520, 217521, 217526, 217527, 217528, 217529, 217534, 217535, 217538, 217539, 217735, 217736, 217737, 217840, 217841, 217887, 217888, 217890, 217895, 217900, 217903, 217919, 217940, 217944, 217946, 217955, 217957, 217958, 217968, 217969, 217971, 217987, 217988, 217990, 217991, 217993, 217994, 217995, 218001, 218002, 218003, 218004, 218009, 218010, 218011, 218012, 218304, 218309, 218322, 218409, 218412, 218427, 218431, 218437, 218451, 218463, 218464, 218465, 218468, 218469, 218484, 218485, 218494, 218780, 218783, 218884, 218886, 218887, 218888, 218889, 218898, 218902, 218906, 218910, 218913, 218923, 218938, 218939, 218940, 218943, 218944, 218946, 218959, 218960, 218963, 218969, 219256, 219257, 219327, 219363, 219366, 219372, 219373, 219385, 219398, 219413, 219415, 219418, 219419, 219421, 219434, 219435, 219438, 219735, 219739, 219745, 219746, 219834, 219837, 219840, 219844, 219846, 219852, 219856, 219857, 219861, 219888, 219889, 219890, 219891, 219893, 219894, 219901, 219909, 219910, 219919, 220211, 220212, 220313, 220315, 220318, 220319, 220320, 220321, 220323, 220332, 220335, 220348, 220354, 220363, 220365, 220366, 220368, 220369, 220371, 220376, 220384, 220385, 220388, 220690, 220691, 220769, 220790, 220794, 220796, 220805, 220807, 220808, 220838, 220840, 220841, 220843, 220844, 220851, 220859, 220860, 220861, 221340, 221816, 222292, 222768, 223237, 223708, 224181, 224650, 225111, 225583};
    static const int C1_ind[] = {444, 944, 1423, 1895, 2371, 2838, 3322, 3789, 4274, 4726, 5211, 5682, 6152, 6630, 7097, 7574, 8034, 8510, 8995, 9457, 9883};

    MatrixXd C0 = MatrixXd::Zero(475, 475);
    MatrixXd C1 = MatrixXd::Zero(475, 21);
    for (int i = 0; i < 18534; i++)
    {
        C0(C0_ind[i]) = coeffs(coeffs0_ind[i]);
    }
    for (int i = 0; i < 21; i++)
    {
        C1(C1_ind[i]) = coeffs(coeffs1_ind[i]);
    }

    MatrixXd C12 = C0.partialPivLu().solve(C1);

    // Setup action matrix
    Matrix<double, 31, 21> RR;
    RR << -C12.bottomRows(10), Matrix<double, 21, 21>::Identity(21, 21);

    static const int AM_ind[] = {28, 13, 0, 14, 1, 17, 2, 18, 3, 22, 4, 5, 23, 6, 26, 7, 27, 8, 29, 30, 9};
    Matrix<double, 21, 21> AM;
    for (int i = 0; i < 21; i++)
    {
        AM.row(i) = RR.row(AM_ind[i]);
    }

    Matrix<std::complex<double>, 6, 21> sols;
    sols.setZero();

    // Solve eigenvalue problem
    EigenSolver<Matrix<double, 21, 21>> es(AM);
    ArrayXcd D = es.eigenvalues();
    ArrayXXcd V = es.eigenvectors();

    V = (V / V.row(0).array().replicate(21, 1)).eval();

    sols.row(0) = V.row(1).array();
    sols.row(1) = V.row(5).array();
    sols.row(2) = V.row(9).array();
    sols.row(3) = V.row(14).array();
    sols.row(4) = D.transpose().array();

    return sols;
}
// Action =  x5
// Quotient ring basis (V) = x6^-1,x1*x6^-1,x1*x4*x6^-1,x1*x5*x6^-1,x1*x5^2*x6^-1,x2*x6^-1,x2*x4*x6^-1,x2*x5*x6^-1,x2*x5^2*x6^-1,x3*x6^-1,x3^2*x6^-1,x3*x4*x6^-1,x3*x5*x6^-1,x3*x5^2*x6^-1,x4*x6^-1,x4^2*x6^-1,x4*x5*x6^-1,x4*x5^2*x6^-1,x5*x6^-1,x5^2*x6^-1,x5^3*x6^-1,
// Available monomials (RR*V) = x1*x4*x5*x6^-1,x1*x5^3*x6^-1,x2*x4*x5*x6^-1,x2*x5^3*x6^-1,x3^2*x5*x6^-1,x3*x4*x5*x6^-1,x3*x5^3*x6^-1,x4^2*x5*x6^-1,x4*x5^3*x6^-1,x5^4*x6^-1,x6^-1,x1*x6^-1,x1*x4*x6^-1,x1*x5*x6^-1,x1*x5^2*x6^-1,x2*x6^-1,x2*x4*x6^-1,x2*x5*x6^-1,x2*x5^2*x6^-1,x3*x6^-1,x3^2*x6^-1,x3*x4*x6^-1,x3*x5*x6^-1,x3*x5^2*x6^-1,x4*x6^-1,x4^2*x6^-1,x4*x5*x6^-1,x4*x5^2*x6^-1,x5*x6^-1,x5^2*x6^-1,x5^3*x6^-1,

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
    if (nrhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_450:nrhs", "One input required.");
    }
    if (nlhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_450:nlhs", "One output required.");
    }
    if (!mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]))
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_450:notDouble", "Input data must be type double.");
    }
    if (mxGetNumberOfElements(prhs[0]) % 74 != 0)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_450:incorrectSize", "Input size must be multiple of 74.");
    }
    int n_instances = mxGetNumberOfElements(prhs[0]) / 74;
    double *input = mxGetPr(prhs[0]);
    plhs[0] = mxCreateDoubleMatrix(6, 21 * n_instances, mxCOMPLEX);
    double *zr = mxGetPr(plhs[0]);
    double *zi = mxGetPi(plhs[0]);
    for (int k = 0; k < n_instances; k++)
    {
        const VectorXd data = Map<const VectorXd>(input + k * 74, 74);
        MatrixXcd sols = solver_toa_upgrade_450(data);
        Index offset = k * sols.size();
        for (Index i = 0; i < sols.size(); i++)
        {
            zr[i + offset] = sols(i).real();
            zi[i + offset] = sols(i).imag();
        }
    }
}
