#include <Eigen/Dense>
#include "mex.h"

using namespace Eigen;

MatrixXcd solver_toa_upgrade_540(const VectorXd &data)
{
    // Compute coefficients
    const double *d = data.data();
    VectorXd coeffs(176);
    coeffs[0] = 2 * d[10] * d[11] * d[15] * d[45] - 2 * std::pow(d[14], 2) * d[15] * d[45] - 2 * d[11] * d[12] * d[16] * d[45] + 2 * d[13] * d[14] * d[16] * d[45] - 2 * d[10] * d[13] * d[17] * d[45] + 2 * d[12] * d[14] * d[17] * d[45] - 2 * d[11] * d[12] * d[15] * d[46] + 2 * d[13] * d[14] * d[15] * d[46] + 2 * d[9] * d[11] * d[16] * d[46] - 2 * std::pow(d[13], 2) * d[16] * d[46] + 2 * d[12] * d[13] * d[17] * d[46] - 2 * d[9] * d[14] * d[17] * d[46] - 2 * d[10] * d[13] * d[15] * d[47] + 2 * d[12] * d[14] * d[15] * d[47] + 2 * d[12] * d[13] * d[16] * d[47] - 2 * d[9] * d[14] * d[16] * d[47] + 2 * d[9] * d[10] * d[17] * d[47] - 2 * std::pow(d[12], 2) * d[17] * d[47] - d[9] * d[10] * d[11] * d[57] + d[11] * std::pow(d[12], 2) * d[57] + d[10] * std::pow(d[13], 2) * d[57] - 2 * d[12] * d[13] * d[14] * d[57] + d[9] * std::pow(d[14], 2) * d[57];
    coeffs[1] = 2 * d[11] * d[15] * d[19] * d[45] - 2 * d[13] * d[17] * d[19] * d[45] + 2 * d[10] * d[15] * d[20] * d[45] - 2 * d[12] * d[16] * d[20] * d[45] - 2 * d[11] * d[16] * d[21] * d[45] + 2 * d[14] * d[17] * d[21] * d[45] + 2 * d[14] * d[16] * d[22] * d[45] - 2 * d[10] * d[17] * d[22] * d[45] - 4 * d[14] * d[15] * d[23] * d[45] + 2 * d[13] * d[16] * d[23] * d[45] + 2 * d[12] * d[17] * d[23] * d[45] + 2 * d[10] * d[11] * d[24] * d[45] - 2 * std::pow(d[14], 2) * d[24] * d[45] - 2 * d[11] * d[12] * d[25] * d[45] + 2 * d[13] * d[14] * d[25] * d[45] - 2 * d[10] * d[13] * d[26] * d[45] + 2 * d[12] * d[14] * d[26] * d[45] + 2 * d[11] * d[16] * d[18] * d[46] - 2 * d[14] * d[17] * d[18] * d[46] - 2 * d[12] * d[15] * d[20] * d[46] + 2 * d[9] * d[16] * d[20] * d[46] - 2 * d[11] * d[15] * d[21] * d[46] + 2 * d[13] * d[17] * d[21] * d[46] + 2 * d[14] * d[15] * d[22] * d[46] - 4 * d[13] * d[16] * d[22] * d[46] + 2 * d[12] * d[17] * d[22] * d[46] + 2 * d[13] * d[15] * d[23] * d[46] - 2 * d[9] * d[17] * d[23] * d[46] - 2 * d[11] * d[12] * d[24] * d[46] + 2 * d[13] * d[14] * d[24] * d[46] + 2 * d[9] * d[11] * d[25] * d[46] - 2 * std::pow(d[13], 2) * d[25] * d[46] + 2 * d[12] * d[13] * d[26] * d[46] - 2 * d[9] * d[14] * d[26] * d[46] - 2 * d[14] * d[16] * d[18] * d[47] + 2 * d[10] * d[17] * d[18] * d[47] - 2 * d[13] * d[15] * d[19] * d[47] + 2 * d[9] * d[17] * d[19] * d[47] + 2 * d[14] * d[15] * d[21] * d[47] + 2 * d[13] * d[16] * d[21] * d[47] - 4 * d[12] * d[17] * d[21] * d[47] - 2 * d[10] * d[15] * d[22] * d[47] + 2 * d[12] * d[16] * d[22] * d[47] + 2 * d[12] * d[15] * d[23] * d[47] - 2 * d[9] * d[16] * d[23] * d[47] - 2 * d[10] * d[13] * d[24] * d[47] + 2 * d[12] * d[14] * d[24] * d[47] + 2 * d[12] * d[13] * d[25] * d[47] - 2 * d[9] * d[14] * d[25] * d[47] + 2 * d[9] * d[10] * d[26] * d[47] - 2 * std::pow(d[12], 2) * d[26] * d[47] - d[10] * d[11] * d[18] * d[57] + std::pow(d[14], 2) * d[18] * d[57] - d[9] * d[11] * d[19] * d[57] + std::pow(d[13], 2) * d[19] * d[57] - d[9] * d[10] * d[20] * d[57] + std::pow(d[12], 2) * d[20] * d[57] + 2 * d[11] * d[12] * d[21] * d[57] - 2 * d[13] * d[14] * d[21] * d[57] + 2 * d[10] * d[13] * d[22] * d[57] - 2 * d[12] * d[14] * d[22] * d[57] - 2 * d[12] * d[13] * d[23] * d[57] + 2 * d[9] * d[14] * d[23] * d[57];
    coeffs[2] = 2 * d[15] * d[19] * d[20] * d[45] - 2 * d[16] * d[20] * d[21] * d[45] - 2 * d[17] * d[19] * d[22] * d[45] + 2 * d[17] * d[21] * d[23] * d[45] + 2 * d[16] * d[22] * d[23] * d[45] - 2 * d[15] * std::pow(d[23], 2) * d[45] + 2 * d[11] * d[19] * d[24] * d[45] + 2 * d[10] * d[20] * d[24] * d[45] - 4 * d[14] * d[23] * d[24] * d[45] - 2 * d[12] * d[20] * d[25] * d[45] - 2 * d[11] * d[21] * d[25] * d[45] + 2 * d[14] * d[22] * d[25] * d[45] + 2 * d[13] * d[23] * d[25] * d[45] - 2 * d[13] * d[19] * d[26] * d[45] + 2 * d[14] * d[21] * d[26] * d[45] - 2 * d[10] * d[22] * d[26] * d[45] + 2 * d[12] * d[23] * d[26] * d[45] + 2 * d[16] * d[18] * d[20] * d[46] - 2 * d[15] * d[20] * d[21] * d[46] + 2 * d[17] * d[21] * d[22] * d[46] - 2 * d[16] * std::pow(d[22], 2) * d[46] - 2 * d[17] * d[18] * d[23] * d[46] + 2 * d[15] * d[22] * d[23] * d[46] - 2 * d[12] * d[20] * d[24] * d[46] - 2 * d[11] * d[21] * d[24] * d[46] + 2 * d[14] * d[22] * d[24] * d[46] + 2 * d[13] * d[23] * d[24] * d[46] + 2 * d[11] * d[18] * d[25] * d[46] + 2 * d[9] * d[20] * d[25] * d[46] - 4 * d[13] * d[22] * d[25] * d[46] - 2 * d[14] * d[18] * d[26] * d[46] + 2 * d[13] * d[21] * d[26] * d[46] + 2 * d[12] * d[22] * d[26] * d[46] - 2 * d[9] * d[23] * d[26] * d[46] + 2 * d[17] * d[18] * d[19] * d[47] - 2 * d[17] * std::pow(d[21], 2) * d[47] - 2 * d[15] * d[19] * d[22] * d[47] + 2 * d[16] * d[21] * d[22] * d[47] - 2 * d[16] * d[18] * d[23] * d[47] + 2 * d[15] * d[21] * d[23] * d[47] - 2 * d[13] * d[19] * d[24] * d[47] + 2 * d[14] * d[21] * d[24] * d[47] - 2 * d[10] * d[22] * d[24] * d[47] + 2 * d[12] * d[23] * d[24] * d[47] - 2 * d[14] * d[18] * d[25] * d[47] + 2 * d[13] * d[21] * d[25] * d[47] + 2 * d[12] * d[22] * d[25] * d[47] - 2 * d[9] * d[23] * d[25] * d[47] + 2 * d[10] * d[18] * d[26] * d[47] + 2 * d[9] * d[19] * d[26] * d[47] - 4 * d[12] * d[21] * d[26] * d[47] - d[11] * d[18] * d[19] * d[57] - d[10] * d[18] * d[20] * d[57] - d[9] * d[19] * d[20] * d[57] + 2 * d[12] * d[20] * d[21] * d[57] + d[11] * std::pow(d[21], 2) * d[57] + 2 * d[13] * d[19] * d[22] * d[57] - 2 * d[14] * d[21] * d[22] * d[57] + d[10] * std::pow(d[22], 2) * d[57] + 2 * d[14] * d[18] * d[23] * d[57] - 2 * d[13] * d[21] * d[23] * d[57] - 2 * d[12] * d[22] * d[23] * d[57] + d[9] * std::pow(d[23], 2) * d[57];
    coeffs[3] = 2 * d[19] * d[20] * d[24] * d[45] - 2 * std::pow(d[23], 2) * d[24] * d[45] - 2 * d[20] * d[21] * d[25] * d[45] + 2 * d[22] * d[23] * d[25] * d[45] - 2 * d[19] * d[22] * d[26] * d[45] + 2 * d[21] * d[23] * d[26] * d[45] - 2 * d[20] * d[21] * d[24] * d[46] + 2 * d[22] * d[23] * d[24] * d[46] + 2 * d[18] * d[20] * d[25] * d[46] - 2 * std::pow(d[22], 2) * d[25] * d[46] + 2 * d[21] * d[22] * d[26] * d[46] - 2 * d[18] * d[23] * d[26] * d[46] - 2 * d[19] * d[22] * d[24] * d[47] + 2 * d[21] * d[23] * d[24] * d[47] + 2 * d[21] * d[22] * d[25] * d[47] - 2 * d[18] * d[23] * d[25] * d[47] + 2 * d[18] * d[19] * d[26] * d[47] - 2 * std::pow(d[21], 2) * d[26] * d[47] - d[18] * d[19] * d[20] * d[57] + d[20] * std::pow(d[21], 2) * d[57] + d[19] * std::pow(d[22], 2) * d[57] - 2 * d[21] * d[22] * d[23] * d[57] + d[18] * std::pow(d[23], 2) * d[57];
    coeffs[4] = 2 * d[11] * d[15] * d[28] * d[45] - 2 * d[13] * d[17] * d[28] * d[45] + 2 * d[10] * d[15] * d[29] * d[45] - 2 * d[12] * d[16] * d[29] * d[45] - 2 * d[11] * d[16] * d[30] * d[45] + 2 * d[14] * d[17] * d[30] * d[45] + 2 * d[14] * d[16] * d[31] * d[45] - 2 * d[10] * d[17] * d[31] * d[45] - 4 * d[14] * d[15] * d[32] * d[45] + 2 * d[13] * d[16] * d[32] * d[45] + 2 * d[12] * d[17] * d[32] * d[45] + 2 * d[10] * d[11] * d[33] * d[45] - 2 * std::pow(d[14], 2) * d[33] * d[45] - 2 * d[11] * d[12] * d[34] * d[45] + 2 * d[13] * d[14] * d[34] * d[45] - 2 * d[10] * d[13] * d[35] * d[45] + 2 * d[12] * d[14] * d[35] * d[45] + 2 * d[11] * d[16] * d[27] * d[46] - 2 * d[14] * d[17] * d[27] * d[46] - 2 * d[12] * d[15] * d[29] * d[46] + 2 * d[9] * d[16] * d[29] * d[46] - 2 * d[11] * d[15] * d[30] * d[46] + 2 * d[13] * d[17] * d[30] * d[46] + 2 * d[14] * d[15] * d[31] * d[46] - 4 * d[13] * d[16] * d[31] * d[46] + 2 * d[12] * d[17] * d[31] * d[46] + 2 * d[13] * d[15] * d[32] * d[46] - 2 * d[9] * d[17] * d[32] * d[46] - 2 * d[11] * d[12] * d[33] * d[46] + 2 * d[13] * d[14] * d[33] * d[46] + 2 * d[9] * d[11] * d[34] * d[46] - 2 * std::pow(d[13], 2) * d[34] * d[46] + 2 * d[12] * d[13] * d[35] * d[46] - 2 * d[9] * d[14] * d[35] * d[46] - 2 * d[14] * d[16] * d[27] * d[47] + 2 * d[10] * d[17] * d[27] * d[47] - 2 * d[13] * d[15] * d[28] * d[47] + 2 * d[9] * d[17] * d[28] * d[47] + 2 * d[14] * d[15] * d[30] * d[47] + 2 * d[13] * d[16] * d[30] * d[47] - 4 * d[12] * d[17] * d[30] * d[47] - 2 * d[10] * d[15] * d[31] * d[47] + 2 * d[12] * d[16] * d[31] * d[47] + 2 * d[12] * d[15] * d[32] * d[47] - 2 * d[9] * d[16] * d[32] * d[47] - 2 * d[10] * d[13] * d[33] * d[47] + 2 * d[12] * d[14] * d[33] * d[47] + 2 * d[12] * d[13] * d[34] * d[47] - 2 * d[9] * d[14] * d[34] * d[47] + 2 * d[9] * d[10] * d[35] * d[47] - 2 * std::pow(d[12], 2) * d[35] * d[47] - d[10] * d[11] * d[27] * d[57] + std::pow(d[14], 2) * d[27] * d[57] - d[9] * d[11] * d[28] * d[57] + std::pow(d[13], 2) * d[28] * d[57] - d[9] * d[10] * d[29] * d[57] + std::pow(d[12], 2) * d[29] * d[57] + 2 * d[11] * d[12] * d[30] * d[57] - 2 * d[13] * d[14] * d[30] * d[57] + 2 * d[10] * d[13] * d[31] * d[57] - 2 * d[12] * d[14] * d[31] * d[57] - 2 * d[12] * d[13] * d[32] * d[57] + 2 * d[9] * d[14] * d[32] * d[57];
    coeffs[5] = 2 * d[15] * d[20] * d[28] * d[45] - 2 * d[17] * d[22] * d[28] * d[45] + 2 * d[11] * d[24] * d[28] * d[45] - 2 * d[13] * d[26] * d[28] * d[45] + 2 * d[15] * d[19] * d[29] * d[45] - 2 * d[16] * d[21] * d[29] * d[45] + 2 * d[10] * d[24] * d[29] * d[45] - 2 * d[12] * d[25] * d[29] * d[45] - 2 * d[16] * d[20] * d[30] * d[45] + 2 * d[17] * d[23] * d[30] * d[45] - 2 * d[11] * d[25] * d[30] * d[45] + 2 * d[14] * d[26] * d[30] * d[45] - 2 * d[17] * d[19] * d[31] * d[45] + 2 * d[16] * d[23] * d[31] * d[45] + 2 * d[14] * d[25] * d[31] * d[45] - 2 * d[10] * d[26] * d[31] * d[45] + 2 * d[17] * d[21] * d[32] * d[45] + 2 * d[16] * d[22] * d[32] * d[45] - 4 * d[15] * d[23] * d[32] * d[45] - 4 * d[14] * d[24] * d[32] * d[45] + 2 * d[13] * d[25] * d[32] * d[45] + 2 * d[12] * d[26] * d[32] * d[45] + 2 * d[11] * d[19] * d[33] * d[45] + 2 * d[10] * d[20] * d[33] * d[45] - 4 * d[14] * d[23] * d[33] * d[45] - 2 * d[12] * d[20] * d[34] * d[45] - 2 * d[11] * d[21] * d[34] * d[45] + 2 * d[14] * d[22] * d[34] * d[45] + 2 * d[13] * d[23] * d[34] * d[45] - 2 * d[13] * d[19] * d[35] * d[45] + 2 * d[14] * d[21] * d[35] * d[45] - 2 * d[10] * d[22] * d[35] * d[45] + 2 * d[12] * d[23] * d[35] * d[45] + 2 * d[16] * d[20] * d[27] * d[46] - 2 * d[17] * d[23] * d[27] * d[46] + 2 * d[11] * d[25] * d[27] * d[46] - 2 * d[14] * d[26] * d[27] * d[46] + 2 * d[16] * d[18] * d[29] * d[46] - 2 * d[15] * d[21] * d[29] * d[46] - 2 * d[12] * d[24] * d[29] * d[46] + 2 * d[9] * d[25] * d[29] * d[46] - 2 * d[15] * d[20] * d[30] * d[46] + 2 * d[17] * d[22] * d[30] * d[46] - 2 * d[11] * d[24] * d[30] * d[46] + 2 * d[13] * d[26] * d[30] * d[46] + 2 * d[17] * d[21] * d[31] * d[46] - 4 * d[16] * d[22] * d[31] * d[46] + 2 * d[15] * d[23] * d[31] * d[46] + 2 * d[14] * d[24] * d[31] * d[46] - 4 * d[13] * d[25] * d[31] * d[46] + 2 * d[12] * d[26] * d[31] * d[46] - 2 * d[17] * d[18] * d[32] * d[46] + 2 * d[15] * d[22] * d[32] * d[46] + 2 * d[13] * d[24] * d[32] * d[46] - 2 * d[9] * d[26] * d[32] * d[46] - 2 * d[12] * d[20] * d[33] * d[46] - 2 * d[11] * d[21] * d[33] * d[46] + 2 * d[14] * d[22] * d[33] * d[46] + 2 * d[13] * d[23] * d[33] * d[46] + 2 * d[11] * d[18] * d[34] * d[46] + 2 * d[9] * d[20] * d[34] * d[46] - 4 * d[13] * d[22] * d[34] * d[46] - 2 * d[14] * d[18] * d[35] * d[46] + 2 * d[13] * d[21] * d[35] * d[46] + 2 * d[12] * d[22] * d[35] * d[46] - 2 * d[9] * d[23] * d[35] * d[46] + 2 * d[17] * d[19] * d[27] * d[47] - 2 * d[16] * d[23] * d[27] * d[47] - 2 * d[14] * d[25] * d[27] * d[47] + 2 * d[10] * d[26] * d[27] * d[47] + 2 * d[17] * d[18] * d[28] * d[47] - 2 * d[15] * d[22] * d[28] * d[47] - 2 * d[13] * d[24] * d[28] * d[47] + 2 * d[9] * d[26] * d[28] * d[47] - 4 * d[17] * d[21] * d[30] * d[47] + 2 * d[16] * d[22] * d[30] * d[47] + 2 * d[15] * d[23] * d[30] * d[47] + 2 * d[14] * d[24] * d[30] * d[47] + 2 * d[13] * d[25] * d[30] * d[47] - 4 * d[12] * d[26] * d[30] * d[47] - 2 * d[15] * d[19] * d[31] * d[47] + 2 * d[16] * d[21] * d[31] * d[47] - 2 * d[10] * d[24] * d[31] * d[47] + 2 * d[12] * d[25] * d[31] * d[47] - 2 * d[16] * d[18] * d[32] * d[47] + 2 * d[15] * d[21] * d[32] * d[47] + 2 * d[12] * d[24] * d[32] * d[47] - 2 * d[9] * d[25] * d[32] * d[47] - 2 * d[13] * d[19] * d[33] * d[47] + 2 * d[14] * d[21] * d[33] * d[47] - 2 * d[10] * d[22] * d[33] * d[47] + 2 * d[12] * d[23] * d[33] * d[47] - 2 * d[14] * d[18] * d[34] * d[47] + 2 * d[13] * d[21] * d[34] * d[47] + 2 * d[12] * d[22] * d[34] * d[47] - 2 * d[9] * d[23] * d[34] * d[47] + 2 * d[10] * d[18] * d[35] * d[47] + 2 * d[9] * d[19] * d[35] * d[47] - 4 * d[12] * d[21] * d[35] * d[47] - d[11] * d[19] * d[27] * d[57] - d[10] * d[20] * d[27] * d[57] + 2 * d[14] * d[23] * d[27] * d[57] - d[11] * d[18] * d[28] * d[57] - d[9] * d[20] * d[28] * d[57] + 2 * d[13] * d[22] * d[28] * d[57] - d[10] * d[18] * d[29] * d[57] - d[9] * d[19] * d[29] * d[57] + 2 * d[12] * d[21] * d[29] * d[57] + 2 * d[12] * d[20] * d[30] * d[57] + 2 * d[11] * d[21] * d[30] * d[57] - 2 * d[14] * d[22] * d[30] * d[57] - 2 * d[13] * d[23] * d[30] * d[57] + 2 * d[13] * d[19] * d[31] * d[57] - 2 * d[14] * d[21] * d[31] * d[57] + 2 * d[10] * d[22] * d[31] * d[57] - 2 * d[12] * d[23] * d[31] * d[57] + 2 * d[14] * d[18] * d[32] * d[57] - 2 * d[13] * d[21] * d[32] * d[57] - 2 * d[12] * d[22] * d[32] * d[57] + 2 * d[9] * d[23] * d[32] * d[57];
    coeffs[6] = 2 * d[20] * d[24] * d[28] * d[45] - 2 * d[22] * d[26] * d[28] * d[45] + 2 * d[19] * d[24] * d[29] * d[45] - 2 * d[21] * d[25] * d[29] * d[45] - 2 * d[20] * d[25] * d[30] * d[45] + 2 * d[23] * d[26] * d[30] * d[45] + 2 * d[23] * d[25] * d[31] * d[45] - 2 * d[19] * d[26] * d[31] * d[45] - 4 * d[23] * d[24] * d[32] * d[45] + 2 * d[22] * d[25] * d[32] * d[45] + 2 * d[21] * d[26] * d[32] * d[45] + 2 * d[19] * d[20] * d[33] * d[45] - 2 * std::pow(d[23], 2) * d[33] * d[45] - 2 * d[20] * d[21] * d[34] * d[45] + 2 * d[22] * d[23] * d[34] * d[45] - 2 * d[19] * d[22] * d[35] * d[45] + 2 * d[21] * d[23] * d[35] * d[45] + 2 * d[20] * d[25] * d[27] * d[46] - 2 * d[23] * d[26] * d[27] * d[46] - 2 * d[21] * d[24] * d[29] * d[46] + 2 * d[18] * d[25] * d[29] * d[46] - 2 * d[20] * d[24] * d[30] * d[46] + 2 * d[22] * d[26] * d[30] * d[46] + 2 * d[23] * d[24] * d[31] * d[46] - 4 * d[22] * d[25] * d[31] * d[46] + 2 * d[21] * d[26] * d[31] * d[46] + 2 * d[22] * d[24] * d[32] * d[46] - 2 * d[18] * d[26] * d[32] * d[46] - 2 * d[20] * d[21] * d[33] * d[46] + 2 * d[22] * d[23] * d[33] * d[46] + 2 * d[18] * d[20] * d[34] * d[46] - 2 * std::pow(d[22], 2) * d[34] * d[46] + 2 * d[21] * d[22] * d[35] * d[46] - 2 * d[18] * d[23] * d[35] * d[46] - 2 * d[23] * d[25] * d[27] * d[47] + 2 * d[19] * d[26] * d[27] * d[47] - 2 * d[22] * d[24] * d[28] * d[47] + 2 * d[18] * d[26] * d[28] * d[47] + 2 * d[23] * d[24] * d[30] * d[47] + 2 * d[22] * d[25] * d[30] * d[47] - 4 * d[21] * d[26] * d[30] * d[47] - 2 * d[19] * d[24] * d[31] * d[47] + 2 * d[21] * d[25] * d[31] * d[47] + 2 * d[21] * d[24] * d[32] * d[47] - 2 * d[18] * d[25] * d[32] * d[47] - 2 * d[19] * d[22] * d[33] * d[47] + 2 * d[21] * d[23] * d[33] * d[47] + 2 * d[21] * d[22] * d[34] * d[47] - 2 * d[18] * d[23] * d[34] * d[47] + 2 * d[18] * d[19] * d[35] * d[47] - 2 * std::pow(d[21], 2) * d[35] * d[47] - d[19] * d[20] * d[27] * d[57] + std::pow(d[23], 2) * d[27] * d[57] - d[18] * d[20] * d[28] * d[57] + std::pow(d[22], 2) * d[28] * d[57] - d[18] * d[19] * d[29] * d[57] + std::pow(d[21], 2) * d[29] * d[57] + 2 * d[20] * d[21] * d[30] * d[57] - 2 * d[22] * d[23] * d[30] * d[57] + 2 * d[19] * d[22] * d[31] * d[57] - 2 * d[21] * d[23] * d[31] * d[57] - 2 * d[21] * d[22] * d[32] * d[57] + 2 * d[18] * d[23] * d[32] * d[57];
    coeffs[7] = 2 * d[15] * d[28] * d[29] * d[45] - 2 * d[16] * d[29] * d[30] * d[45] - 2 * d[17] * d[28] * d[31] * d[45] + 2 * d[17] * d[30] * d[32] * d[45] + 2 * d[16] * d[31] * d[32] * d[45] - 2 * d[15] * std::pow(d[32], 2) * d[45] + 2 * d[11] * d[28] * d[33] * d[45] + 2 * d[10] * d[29] * d[33] * d[45] - 4 * d[14] * d[32] * d[33] * d[45] - 2 * d[12] * d[29] * d[34] * d[45] - 2 * d[11] * d[30] * d[34] * d[45] + 2 * d[14] * d[31] * d[34] * d[45] + 2 * d[13] * d[32] * d[34] * d[45] - 2 * d[13] * d[28] * d[35] * d[45] + 2 * d[14] * d[30] * d[35] * d[45] - 2 * d[10] * d[31] * d[35] * d[45] + 2 * d[12] * d[32] * d[35] * d[45] + 2 * d[16] * d[27] * d[29] * d[46] - 2 * d[15] * d[29] * d[30] * d[46] + 2 * d[17] * d[30] * d[31] * d[46] - 2 * d[16] * std::pow(d[31], 2) * d[46] - 2 * d[17] * d[27] * d[32] * d[46] + 2 * d[15] * d[31] * d[32] * d[46] - 2 * d[12] * d[29] * d[33] * d[46] - 2 * d[11] * d[30] * d[33] * d[46] + 2 * d[14] * d[31] * d[33] * d[46] + 2 * d[13] * d[32] * d[33] * d[46] + 2 * d[11] * d[27] * d[34] * d[46] + 2 * d[9] * d[29] * d[34] * d[46] - 4 * d[13] * d[31] * d[34] * d[46] - 2 * d[14] * d[27] * d[35] * d[46] + 2 * d[13] * d[30] * d[35] * d[46] + 2 * d[12] * d[31] * d[35] * d[46] - 2 * d[9] * d[32] * d[35] * d[46] + 2 * d[17] * d[27] * d[28] * d[47] - 2 * d[17] * std::pow(d[30], 2) * d[47] - 2 * d[15] * d[28] * d[31] * d[47] + 2 * d[16] * d[30] * d[31] * d[47] - 2 * d[16] * d[27] * d[32] * d[47] + 2 * d[15] * d[30] * d[32] * d[47] - 2 * d[13] * d[28] * d[33] * d[47] + 2 * d[14] * d[30] * d[33] * d[47] - 2 * d[10] * d[31] * d[33] * d[47] + 2 * d[12] * d[32] * d[33] * d[47] - 2 * d[14] * d[27] * d[34] * d[47] + 2 * d[13] * d[30] * d[34] * d[47] + 2 * d[12] * d[31] * d[34] * d[47] - 2 * d[9] * d[32] * d[34] * d[47] + 2 * d[10] * d[27] * d[35] * d[47] + 2 * d[9] * d[28] * d[35] * d[47] - 4 * d[12] * d[30] * d[35] * d[47] - d[11] * d[27] * d[28] * d[57] - d[10] * d[27] * d[29] * d[57] - d[9] * d[28] * d[29] * d[57] + 2 * d[12] * d[29] * d[30] * d[57] + d[11] * std::pow(d[30], 2) * d[57] + 2 * d[13] * d[28] * d[31] * d[57] - 2 * d[14] * d[30] * d[31] * d[57] + d[10] * std::pow(d[31], 2) * d[57] + 2 * d[14] * d[27] * d[32] * d[57] - 2 * d[13] * d[30] * d[32] * d[57] - 2 * d[12] * d[31] * d[32] * d[57] + d[9] * std::pow(d[32], 2) * d[57];
    coeffs[8] = 2 * d[24] * d[28] * d[29] * d[45] - 2 * d[25] * d[29] * d[30] * d[45] - 2 * d[26] * d[28] * d[31] * d[45] + 2 * d[26] * d[30] * d[32] * d[45] + 2 * d[25] * d[31] * d[32] * d[45] - 2 * d[24] * std::pow(d[32], 2) * d[45] + 2 * d[20] * d[28] * d[33] * d[45] + 2 * d[19] * d[29] * d[33] * d[45] - 4 * d[23] * d[32] * d[33] * d[45] - 2 * d[21] * d[29] * d[34] * d[45] - 2 * d[20] * d[30] * d[34] * d[45] + 2 * d[23] * d[31] * d[34] * d[45] + 2 * d[22] * d[32] * d[34] * d[45] - 2 * d[22] * d[28] * d[35] * d[45] + 2 * d[23] * d[30] * d[35] * d[45] - 2 * d[19] * d[31] * d[35] * d[45] + 2 * d[21] * d[32] * d[35] * d[45] + 2 * d[25] * d[27] * d[29] * d[46] - 2 * d[24] * d[29] * d[30] * d[46] + 2 * d[26] * d[30] * d[31] * d[46] - 2 * d[25] * std::pow(d[31], 2) * d[46] - 2 * d[26] * d[27] * d[32] * d[46] + 2 * d[24] * d[31] * d[32] * d[46] - 2 * d[21] * d[29] * d[33] * d[46] - 2 * d[20] * d[30] * d[33] * d[46] + 2 * d[23] * d[31] * d[33] * d[46] + 2 * d[22] * d[32] * d[33] * d[46] + 2 * d[20] * d[27] * d[34] * d[46] + 2 * d[18] * d[29] * d[34] * d[46] - 4 * d[22] * d[31] * d[34] * d[46] - 2 * d[23] * d[27] * d[35] * d[46] + 2 * d[22] * d[30] * d[35] * d[46] + 2 * d[21] * d[31] * d[35] * d[46] - 2 * d[18] * d[32] * d[35] * d[46] + 2 * d[26] * d[27] * d[28] * d[47] - 2 * d[26] * std::pow(d[30], 2) * d[47] - 2 * d[24] * d[28] * d[31] * d[47] + 2 * d[25] * d[30] * d[31] * d[47] - 2 * d[25] * d[27] * d[32] * d[47] + 2 * d[24] * d[30] * d[32] * d[47] - 2 * d[22] * d[28] * d[33] * d[47] + 2 * d[23] * d[30] * d[33] * d[47] - 2 * d[19] * d[31] * d[33] * d[47] + 2 * d[21] * d[32] * d[33] * d[47] - 2 * d[23] * d[27] * d[34] * d[47] + 2 * d[22] * d[30] * d[34] * d[47] + 2 * d[21] * d[31] * d[34] * d[47] - 2 * d[18] * d[32] * d[34] * d[47] + 2 * d[19] * d[27] * d[35] * d[47] + 2 * d[18] * d[28] * d[35] * d[47] - 4 * d[21] * d[30] * d[35] * d[47] - d[20] * d[27] * d[28] * d[57] - d[19] * d[27] * d[29] * d[57] - d[18] * d[28] * d[29] * d[57] + 2 * d[21] * d[29] * d[30] * d[57] + d[20] * std::pow(d[30], 2) * d[57] + 2 * d[22] * d[28] * d[31] * d[57] - 2 * d[23] * d[30] * d[31] * d[57] + d[19] * std::pow(d[31], 2) * d[57] + 2 * d[23] * d[27] * d[32] * d[57] - 2 * d[22] * d[30] * d[32] * d[57] - 2 * d[21] * d[31] * d[32] * d[57] + d[18] * std::pow(d[32], 2) * d[57];
    coeffs[9] = 2 * d[28] * d[29] * d[33] * d[45] - 2 * std::pow(d[32], 2) * d[33] * d[45] - 2 * d[29] * d[30] * d[34] * d[45] + 2 * d[31] * d[32] * d[34] * d[45] - 2 * d[28] * d[31] * d[35] * d[45] + 2 * d[30] * d[32] * d[35] * d[45] - 2 * d[29] * d[30] * d[33] * d[46] + 2 * d[31] * d[32] * d[33] * d[46] + 2 * d[27] * d[29] * d[34] * d[46] - 2 * std::pow(d[31], 2) * d[34] * d[46] + 2 * d[30] * d[31] * d[35] * d[46] - 2 * d[27] * d[32] * d[35] * d[46] - 2 * d[28] * d[31] * d[33] * d[47] + 2 * d[30] * d[32] * d[33] * d[47] + 2 * d[30] * d[31] * d[34] * d[47] - 2 * d[27] * d[32] * d[34] * d[47] + 2 * d[27] * d[28] * d[35] * d[47] - 2 * std::pow(d[30], 2) * d[35] * d[47] - d[27] * d[28] * d[29] * d[57] + d[29] * std::pow(d[30], 2) * d[57] + d[28] * std::pow(d[31], 2) * d[57] - 2 * d[30] * d[31] * d[32] * d[57] + d[27] * std::pow(d[32], 2) * d[57];
    coeffs[10] = 2 * d[11] * d[15] * d[37] * d[45] - 2 * d[13] * d[17] * d[37] * d[45] + 2 * d[10] * d[15] * d[38] * d[45] - 2 * d[12] * d[16] * d[38] * d[45] - 2 * d[11] * d[16] * d[39] * d[45] + 2 * d[14] * d[17] * d[39] * d[45] + 2 * d[14] * d[16] * d[40] * d[45] - 2 * d[10] * d[17] * d[40] * d[45] - 4 * d[14] * d[15] * d[41] * d[45] + 2 * d[13] * d[16] * d[41] * d[45] + 2 * d[12] * d[17] * d[41] * d[45] + 2 * d[10] * d[11] * d[42] * d[45] - 2 * std::pow(d[14], 2) * d[42] * d[45] - 2 * d[11] * d[12] * d[43] * d[45] + 2 * d[13] * d[14] * d[43] * d[45] - 2 * d[10] * d[13] * d[44] * d[45] + 2 * d[12] * d[14] * d[44] * d[45] + 2 * d[11] * d[16] * d[36] * d[46] - 2 * d[14] * d[17] * d[36] * d[46] - 2 * d[12] * d[15] * d[38] * d[46] + 2 * d[9] * d[16] * d[38] * d[46] - 2 * d[11] * d[15] * d[39] * d[46] + 2 * d[13] * d[17] * d[39] * d[46] + 2 * d[14] * d[15] * d[40] * d[46] - 4 * d[13] * d[16] * d[40] * d[46] + 2 * d[12] * d[17] * d[40] * d[46] + 2 * d[13] * d[15] * d[41] * d[46] - 2 * d[9] * d[17] * d[41] * d[46] - 2 * d[11] * d[12] * d[42] * d[46] + 2 * d[13] * d[14] * d[42] * d[46] + 2 * d[9] * d[11] * d[43] * d[46] - 2 * std::pow(d[13], 2) * d[43] * d[46] + 2 * d[12] * d[13] * d[44] * d[46] - 2 * d[9] * d[14] * d[44] * d[46] - 2 * d[14] * d[16] * d[36] * d[47] + 2 * d[10] * d[17] * d[36] * d[47] - 2 * d[13] * d[15] * d[37] * d[47] + 2 * d[9] * d[17] * d[37] * d[47] + 2 * d[14] * d[15] * d[39] * d[47] + 2 * d[13] * d[16] * d[39] * d[47] - 4 * d[12] * d[17] * d[39] * d[47] - 2 * d[10] * d[15] * d[40] * d[47] + 2 * d[12] * d[16] * d[40] * d[47] + 2 * d[12] * d[15] * d[41] * d[47] - 2 * d[9] * d[16] * d[41] * d[47] - 2 * d[10] * d[13] * d[42] * d[47] + 2 * d[12] * d[14] * d[42] * d[47] + 2 * d[12] * d[13] * d[43] * d[47] - 2 * d[9] * d[14] * d[43] * d[47] + 2 * d[9] * d[10] * d[44] * d[47] - 2 * std::pow(d[12], 2) * d[44] * d[47] - d[10] * d[11] * d[36] * d[57] + std::pow(d[14], 2) * d[36] * d[57] - d[9] * d[11] * d[37] * d[57] + std::pow(d[13], 2) * d[37] * d[57] - d[9] * d[10] * d[38] * d[57] + std::pow(d[12], 2) * d[38] * d[57] + 2 * d[11] * d[12] * d[39] * d[57] - 2 * d[13] * d[14] * d[39] * d[57] + 2 * d[10] * d[13] * d[40] * d[57] - 2 * d[12] * d[14] * d[40] * d[57] - 2 * d[12] * d[13] * d[41] * d[57] + 2 * d[9] * d[14] * d[41] * d[57];
    coeffs[11] = 2 * d[15] * d[20] * d[37] * d[45] - 2 * d[17] * d[22] * d[37] * d[45] + 2 * d[11] * d[24] * d[37] * d[45] - 2 * d[13] * d[26] * d[37] * d[45] + 2 * d[15] * d[19] * d[38] * d[45] - 2 * d[16] * d[21] * d[38] * d[45] + 2 * d[10] * d[24] * d[38] * d[45] - 2 * d[12] * d[25] * d[38] * d[45] - 2 * d[16] * d[20] * d[39] * d[45] + 2 * d[17] * d[23] * d[39] * d[45] - 2 * d[11] * d[25] * d[39] * d[45] + 2 * d[14] * d[26] * d[39] * d[45] - 2 * d[17] * d[19] * d[40] * d[45] + 2 * d[16] * d[23] * d[40] * d[45] + 2 * d[14] * d[25] * d[40] * d[45] - 2 * d[10] * d[26] * d[40] * d[45] + 2 * d[17] * d[21] * d[41] * d[45] + 2 * d[16] * d[22] * d[41] * d[45] - 4 * d[15] * d[23] * d[41] * d[45] - 4 * d[14] * d[24] * d[41] * d[45] + 2 * d[13] * d[25] * d[41] * d[45] + 2 * d[12] * d[26] * d[41] * d[45] + 2 * d[11] * d[19] * d[42] * d[45] + 2 * d[10] * d[20] * d[42] * d[45] - 4 * d[14] * d[23] * d[42] * d[45] - 2 * d[12] * d[20] * d[43] * d[45] - 2 * d[11] * d[21] * d[43] * d[45] + 2 * d[14] * d[22] * d[43] * d[45] + 2 * d[13] * d[23] * d[43] * d[45] - 2 * d[13] * d[19] * d[44] * d[45] + 2 * d[14] * d[21] * d[44] * d[45] - 2 * d[10] * d[22] * d[44] * d[45] + 2 * d[12] * d[23] * d[44] * d[45] + 2 * d[16] * d[20] * d[36] * d[46] - 2 * d[17] * d[23] * d[36] * d[46] + 2 * d[11] * d[25] * d[36] * d[46] - 2 * d[14] * d[26] * d[36] * d[46] + 2 * d[16] * d[18] * d[38] * d[46] - 2 * d[15] * d[21] * d[38] * d[46] - 2 * d[12] * d[24] * d[38] * d[46] + 2 * d[9] * d[25] * d[38] * d[46] - 2 * d[15] * d[20] * d[39] * d[46] + 2 * d[17] * d[22] * d[39] * d[46] - 2 * d[11] * d[24] * d[39] * d[46] + 2 * d[13] * d[26] * d[39] * d[46] + 2 * d[17] * d[21] * d[40] * d[46] - 4 * d[16] * d[22] * d[40] * d[46] + 2 * d[15] * d[23] * d[40] * d[46] + 2 * d[14] * d[24] * d[40] * d[46] - 4 * d[13] * d[25] * d[40] * d[46] + 2 * d[12] * d[26] * d[40] * d[46] - 2 * d[17] * d[18] * d[41] * d[46] + 2 * d[15] * d[22] * d[41] * d[46] + 2 * d[13] * d[24] * d[41] * d[46] - 2 * d[9] * d[26] * d[41] * d[46] - 2 * d[12] * d[20] * d[42] * d[46] - 2 * d[11] * d[21] * d[42] * d[46] + 2 * d[14] * d[22] * d[42] * d[46] + 2 * d[13] * d[23] * d[42] * d[46] + 2 * d[11] * d[18] * d[43] * d[46] + 2 * d[9] * d[20] * d[43] * d[46] - 4 * d[13] * d[22] * d[43] * d[46] - 2 * d[14] * d[18] * d[44] * d[46] + 2 * d[13] * d[21] * d[44] * d[46] + 2 * d[12] * d[22] * d[44] * d[46] - 2 * d[9] * d[23] * d[44] * d[46] + 2 * d[17] * d[19] * d[36] * d[47] - 2 * d[16] * d[23] * d[36] * d[47] - 2 * d[14] * d[25] * d[36] * d[47] + 2 * d[10] * d[26] * d[36] * d[47] + 2 * d[17] * d[18] * d[37] * d[47] - 2 * d[15] * d[22] * d[37] * d[47] - 2 * d[13] * d[24] * d[37] * d[47] + 2 * d[9] * d[26] * d[37] * d[47] - 4 * d[17] * d[21] * d[39] * d[47] + 2 * d[16] * d[22] * d[39] * d[47] + 2 * d[15] * d[23] * d[39] * d[47] + 2 * d[14] * d[24] * d[39] * d[47] + 2 * d[13] * d[25] * d[39] * d[47] - 4 * d[12] * d[26] * d[39] * d[47] - 2 * d[15] * d[19] * d[40] * d[47] + 2 * d[16] * d[21] * d[40] * d[47] - 2 * d[10] * d[24] * d[40] * d[47] + 2 * d[12] * d[25] * d[40] * d[47] - 2 * d[16] * d[18] * d[41] * d[47] + 2 * d[15] * d[21] * d[41] * d[47] + 2 * d[12] * d[24] * d[41] * d[47] - 2 * d[9] * d[25] * d[41] * d[47] - 2 * d[13] * d[19] * d[42] * d[47] + 2 * d[14] * d[21] * d[42] * d[47] - 2 * d[10] * d[22] * d[42] * d[47] + 2 * d[12] * d[23] * d[42] * d[47] - 2 * d[14] * d[18] * d[43] * d[47] + 2 * d[13] * d[21] * d[43] * d[47] + 2 * d[12] * d[22] * d[43] * d[47] - 2 * d[9] * d[23] * d[43] * d[47] + 2 * d[10] * d[18] * d[44] * d[47] + 2 * d[9] * d[19] * d[44] * d[47] - 4 * d[12] * d[21] * d[44] * d[47] - d[11] * d[19] * d[36] * d[57] - d[10] * d[20] * d[36] * d[57] + 2 * d[14] * d[23] * d[36] * d[57] - d[11] * d[18] * d[37] * d[57] - d[9] * d[20] * d[37] * d[57] + 2 * d[13] * d[22] * d[37] * d[57] - d[10] * d[18] * d[38] * d[57] - d[9] * d[19] * d[38] * d[57] + 2 * d[12] * d[21] * d[38] * d[57] + 2 * d[12] * d[20] * d[39] * d[57] + 2 * d[11] * d[21] * d[39] * d[57] - 2 * d[14] * d[22] * d[39] * d[57] - 2 * d[13] * d[23] * d[39] * d[57] + 2 * d[13] * d[19] * d[40] * d[57] - 2 * d[14] * d[21] * d[40] * d[57] + 2 * d[10] * d[22] * d[40] * d[57] - 2 * d[12] * d[23] * d[40] * d[57] + 2 * d[14] * d[18] * d[41] * d[57] - 2 * d[13] * d[21] * d[41] * d[57] - 2 * d[12] * d[22] * d[41] * d[57] + 2 * d[9] * d[23] * d[41] * d[57];
    coeffs[12] = 2 * d[20] * d[24] * d[37] * d[45] - 2 * d[22] * d[26] * d[37] * d[45] + 2 * d[19] * d[24] * d[38] * d[45] - 2 * d[21] * d[25] * d[38] * d[45] - 2 * d[20] * d[25] * d[39] * d[45] + 2 * d[23] * d[26] * d[39] * d[45] + 2 * d[23] * d[25] * d[40] * d[45] - 2 * d[19] * d[26] * d[40] * d[45] - 4 * d[23] * d[24] * d[41] * d[45] + 2 * d[22] * d[25] * d[41] * d[45] + 2 * d[21] * d[26] * d[41] * d[45] + 2 * d[19] * d[20] * d[42] * d[45] - 2 * std::pow(d[23], 2) * d[42] * d[45] - 2 * d[20] * d[21] * d[43] * d[45] + 2 * d[22] * d[23] * d[43] * d[45] - 2 * d[19] * d[22] * d[44] * d[45] + 2 * d[21] * d[23] * d[44] * d[45] + 2 * d[20] * d[25] * d[36] * d[46] - 2 * d[23] * d[26] * d[36] * d[46] - 2 * d[21] * d[24] * d[38] * d[46] + 2 * d[18] * d[25] * d[38] * d[46] - 2 * d[20] * d[24] * d[39] * d[46] + 2 * d[22] * d[26] * d[39] * d[46] + 2 * d[23] * d[24] * d[40] * d[46] - 4 * d[22] * d[25] * d[40] * d[46] + 2 * d[21] * d[26] * d[40] * d[46] + 2 * d[22] * d[24] * d[41] * d[46] - 2 * d[18] * d[26] * d[41] * d[46] - 2 * d[20] * d[21] * d[42] * d[46] + 2 * d[22] * d[23] * d[42] * d[46] + 2 * d[18] * d[20] * d[43] * d[46] - 2 * std::pow(d[22], 2) * d[43] * d[46] + 2 * d[21] * d[22] * d[44] * d[46] - 2 * d[18] * d[23] * d[44] * d[46] - 2 * d[23] * d[25] * d[36] * d[47] + 2 * d[19] * d[26] * d[36] * d[47] - 2 * d[22] * d[24] * d[37] * d[47] + 2 * d[18] * d[26] * d[37] * d[47] + 2 * d[23] * d[24] * d[39] * d[47] + 2 * d[22] * d[25] * d[39] * d[47] - 4 * d[21] * d[26] * d[39] * d[47] - 2 * d[19] * d[24] * d[40] * d[47] + 2 * d[21] * d[25] * d[40] * d[47] + 2 * d[21] * d[24] * d[41] * d[47] - 2 * d[18] * d[25] * d[41] * d[47] - 2 * d[19] * d[22] * d[42] * d[47] + 2 * d[21] * d[23] * d[42] * d[47] + 2 * d[21] * d[22] * d[43] * d[47] - 2 * d[18] * d[23] * d[43] * d[47] + 2 * d[18] * d[19] * d[44] * d[47] - 2 * std::pow(d[21], 2) * d[44] * d[47] - d[19] * d[20] * d[36] * d[57] + std::pow(d[23], 2) * d[36] * d[57] - d[18] * d[20] * d[37] * d[57] + std::pow(d[22], 2) * d[37] * d[57] - d[18] * d[19] * d[38] * d[57] + std::pow(d[21], 2) * d[38] * d[57] + 2 * d[20] * d[21] * d[39] * d[57] - 2 * d[22] * d[23] * d[39] * d[57] + 2 * d[19] * d[22] * d[40] * d[57] - 2 * d[21] * d[23] * d[40] * d[57] - 2 * d[21] * d[22] * d[41] * d[57] + 2 * d[18] * d[23] * d[41] * d[57];
    coeffs[13] = 2 * d[15] * d[29] * d[37] * d[45] - 2 * d[17] * d[31] * d[37] * d[45] + 2 * d[11] * d[33] * d[37] * d[45] - 2 * d[13] * d[35] * d[37] * d[45] + 2 * d[15] * d[28] * d[38] * d[45] - 2 * d[16] * d[30] * d[38] * d[45] + 2 * d[10] * d[33] * d[38] * d[45] - 2 * d[12] * d[34] * d[38] * d[45] - 2 * d[16] * d[29] * d[39] * d[45] + 2 * d[17] * d[32] * d[39] * d[45] - 2 * d[11] * d[34] * d[39] * d[45] + 2 * d[14] * d[35] * d[39] * d[45] - 2 * d[17] * d[28] * d[40] * d[45] + 2 * d[16] * d[32] * d[40] * d[45] + 2 * d[14] * d[34] * d[40] * d[45] - 2 * d[10] * d[35] * d[40] * d[45] + 2 * d[17] * d[30] * d[41] * d[45] + 2 * d[16] * d[31] * d[41] * d[45] - 4 * d[15] * d[32] * d[41] * d[45] - 4 * d[14] * d[33] * d[41] * d[45] + 2 * d[13] * d[34] * d[41] * d[45] + 2 * d[12] * d[35] * d[41] * d[45] + 2 * d[11] * d[28] * d[42] * d[45] + 2 * d[10] * d[29] * d[42] * d[45] - 4 * d[14] * d[32] * d[42] * d[45] - 2 * d[12] * d[29] * d[43] * d[45] - 2 * d[11] * d[30] * d[43] * d[45] + 2 * d[14] * d[31] * d[43] * d[45] + 2 * d[13] * d[32] * d[43] * d[45] - 2 * d[13] * d[28] * d[44] * d[45] + 2 * d[14] * d[30] * d[44] * d[45] - 2 * d[10] * d[31] * d[44] * d[45] + 2 * d[12] * d[32] * d[44] * d[45] + 2 * d[16] * d[29] * d[36] * d[46] - 2 * d[17] * d[32] * d[36] * d[46] + 2 * d[11] * d[34] * d[36] * d[46] - 2 * d[14] * d[35] * d[36] * d[46] + 2 * d[16] * d[27] * d[38] * d[46] - 2 * d[15] * d[30] * d[38] * d[46] - 2 * d[12] * d[33] * d[38] * d[46] + 2 * d[9] * d[34] * d[38] * d[46] - 2 * d[15] * d[29] * d[39] * d[46] + 2 * d[17] * d[31] * d[39] * d[46] - 2 * d[11] * d[33] * d[39] * d[46] + 2 * d[13] * d[35] * d[39] * d[46] + 2 * d[17] * d[30] * d[40] * d[46] - 4 * d[16] * d[31] * d[40] * d[46] + 2 * d[15] * d[32] * d[40] * d[46] + 2 * d[14] * d[33] * d[40] * d[46] - 4 * d[13] * d[34] * d[40] * d[46] + 2 * d[12] * d[35] * d[40] * d[46] - 2 * d[17] * d[27] * d[41] * d[46] + 2 * d[15] * d[31] * d[41] * d[46] + 2 * d[13] * d[33] * d[41] * d[46] - 2 * d[9] * d[35] * d[41] * d[46] - 2 * d[12] * d[29] * d[42] * d[46] - 2 * d[11] * d[30] * d[42] * d[46] + 2 * d[14] * d[31] * d[42] * d[46] + 2 * d[13] * d[32] * d[42] * d[46] + 2 * d[11] * d[27] * d[43] * d[46] + 2 * d[9] * d[29] * d[43] * d[46] - 4 * d[13] * d[31] * d[43] * d[46] - 2 * d[14] * d[27] * d[44] * d[46] + 2 * d[13] * d[30] * d[44] * d[46] + 2 * d[12] * d[31] * d[44] * d[46] - 2 * d[9] * d[32] * d[44] * d[46] + 2 * d[17] * d[28] * d[36] * d[47] - 2 * d[16] * d[32] * d[36] * d[47] - 2 * d[14] * d[34] * d[36] * d[47] + 2 * d[10] * d[35] * d[36] * d[47] + 2 * d[17] * d[27] * d[37] * d[47] - 2 * d[15] * d[31] * d[37] * d[47] - 2 * d[13] * d[33] * d[37] * d[47] + 2 * d[9] * d[35] * d[37] * d[47] - 4 * d[17] * d[30] * d[39] * d[47] + 2 * d[16] * d[31] * d[39] * d[47] + 2 * d[15] * d[32] * d[39] * d[47] + 2 * d[14] * d[33] * d[39] * d[47] + 2 * d[13] * d[34] * d[39] * d[47] - 4 * d[12] * d[35] * d[39] * d[47] - 2 * d[15] * d[28] * d[40] * d[47] + 2 * d[16] * d[30] * d[40] * d[47] - 2 * d[10] * d[33] * d[40] * d[47] + 2 * d[12] * d[34] * d[40] * d[47] - 2 * d[16] * d[27] * d[41] * d[47] + 2 * d[15] * d[30] * d[41] * d[47] + 2 * d[12] * d[33] * d[41] * d[47] - 2 * d[9] * d[34] * d[41] * d[47] - 2 * d[13] * d[28] * d[42] * d[47] + 2 * d[14] * d[30] * d[42] * d[47] - 2 * d[10] * d[31] * d[42] * d[47] + 2 * d[12] * d[32] * d[42] * d[47] - 2 * d[14] * d[27] * d[43] * d[47] + 2 * d[13] * d[30] * d[43] * d[47] + 2 * d[12] * d[31] * d[43] * d[47] - 2 * d[9] * d[32] * d[43] * d[47] + 2 * d[10] * d[27] * d[44] * d[47] + 2 * d[9] * d[28] * d[44] * d[47] - 4 * d[12] * d[30] * d[44] * d[47] - d[11] * d[28] * d[36] * d[57] - d[10] * d[29] * d[36] * d[57] + 2 * d[14] * d[32] * d[36] * d[57] - d[11] * d[27] * d[37] * d[57] - d[9] * d[29] * d[37] * d[57] + 2 * d[13] * d[31] * d[37] * d[57] - d[10] * d[27] * d[38] * d[57] - d[9] * d[28] * d[38] * d[57] + 2 * d[12] * d[30] * d[38] * d[57] + 2 * d[12] * d[29] * d[39] * d[57] + 2 * d[11] * d[30] * d[39] * d[57] - 2 * d[14] * d[31] * d[39] * d[57] - 2 * d[13] * d[32] * d[39] * d[57] + 2 * d[13] * d[28] * d[40] * d[57] - 2 * d[14] * d[30] * d[40] * d[57] + 2 * d[10] * d[31] * d[40] * d[57] - 2 * d[12] * d[32] * d[40] * d[57] + 2 * d[14] * d[27] * d[41] * d[57] - 2 * d[13] * d[30] * d[41] * d[57] - 2 * d[12] * d[31] * d[41] * d[57] + 2 * d[9] * d[32] * d[41] * d[57];
    coeffs[14] = 2 * d[24] * d[29] * d[37] * d[45] - 2 * d[26] * d[31] * d[37] * d[45] + 2 * d[20] * d[33] * d[37] * d[45] - 2 * d[22] * d[35] * d[37] * d[45] + 2 * d[24] * d[28] * d[38] * d[45] - 2 * d[25] * d[30] * d[38] * d[45] + 2 * d[19] * d[33] * d[38] * d[45] - 2 * d[21] * d[34] * d[38] * d[45] - 2 * d[25] * d[29] * d[39] * d[45] + 2 * d[26] * d[32] * d[39] * d[45] - 2 * d[20] * d[34] * d[39] * d[45] + 2 * d[23] * d[35] * d[39] * d[45] - 2 * d[26] * d[28] * d[40] * d[45] + 2 * d[25] * d[32] * d[40] * d[45] + 2 * d[23] * d[34] * d[40] * d[45] - 2 * d[19] * d[35] * d[40] * d[45] + 2 * d[26] * d[30] * d[41] * d[45] + 2 * d[25] * d[31] * d[41] * d[45] - 4 * d[24] * d[32] * d[41] * d[45] - 4 * d[23] * d[33] * d[41] * d[45] + 2 * d[22] * d[34] * d[41] * d[45] + 2 * d[21] * d[35] * d[41] * d[45] + 2 * d[20] * d[28] * d[42] * d[45] + 2 * d[19] * d[29] * d[42] * d[45] - 4 * d[23] * d[32] * d[42] * d[45] - 2 * d[21] * d[29] * d[43] * d[45] - 2 * d[20] * d[30] * d[43] * d[45] + 2 * d[23] * d[31] * d[43] * d[45] + 2 * d[22] * d[32] * d[43] * d[45] - 2 * d[22] * d[28] * d[44] * d[45] + 2 * d[23] * d[30] * d[44] * d[45] - 2 * d[19] * d[31] * d[44] * d[45] + 2 * d[21] * d[32] * d[44] * d[45] + 2 * d[25] * d[29] * d[36] * d[46] - 2 * d[26] * d[32] * d[36] * d[46] + 2 * d[20] * d[34] * d[36] * d[46] - 2 * d[23] * d[35] * d[36] * d[46] + 2 * d[25] * d[27] * d[38] * d[46] - 2 * d[24] * d[30] * d[38] * d[46] - 2 * d[21] * d[33] * d[38] * d[46] + 2 * d[18] * d[34] * d[38] * d[46] - 2 * d[24] * d[29] * d[39] * d[46] + 2 * d[26] * d[31] * d[39] * d[46] - 2 * d[20] * d[33] * d[39] * d[46] + 2 * d[22] * d[35] * d[39] * d[46] + 2 * d[26] * d[30] * d[40] * d[46] - 4 * d[25] * d[31] * d[40] * d[46] + 2 * d[24] * d[32] * d[40] * d[46] + 2 * d[23] * d[33] * d[40] * d[46] - 4 * d[22] * d[34] * d[40] * d[46] + 2 * d[21] * d[35] * d[40] * d[46] - 2 * d[26] * d[27] * d[41] * d[46] + 2 * d[24] * d[31] * d[41] * d[46] + 2 * d[22] * d[33] * d[41] * d[46] - 2 * d[18] * d[35] * d[41] * d[46] - 2 * d[21] * d[29] * d[42] * d[46] - 2 * d[20] * d[30] * d[42] * d[46] + 2 * d[23] * d[31] * d[42] * d[46] + 2 * d[22] * d[32] * d[42] * d[46] + 2 * d[20] * d[27] * d[43] * d[46] + 2 * d[18] * d[29] * d[43] * d[46] - 4 * d[22] * d[31] * d[43] * d[46] - 2 * d[23] * d[27] * d[44] * d[46] + 2 * d[22] * d[30] * d[44] * d[46] + 2 * d[21] * d[31] * d[44] * d[46] - 2 * d[18] * d[32] * d[44] * d[46] + 2 * d[26] * d[28] * d[36] * d[47] - 2 * d[25] * d[32] * d[36] * d[47] - 2 * d[23] * d[34] * d[36] * d[47] + 2 * d[19] * d[35] * d[36] * d[47] + 2 * d[26] * d[27] * d[37] * d[47] - 2 * d[24] * d[31] * d[37] * d[47] - 2 * d[22] * d[33] * d[37] * d[47] + 2 * d[18] * d[35] * d[37] * d[47] - 4 * d[26] * d[30] * d[39] * d[47] + 2 * d[25] * d[31] * d[39] * d[47] + 2 * d[24] * d[32] * d[39] * d[47] + 2 * d[23] * d[33] * d[39] * d[47] + 2 * d[22] * d[34] * d[39] * d[47] - 4 * d[21] * d[35] * d[39] * d[47] - 2 * d[24] * d[28] * d[40] * d[47] + 2 * d[25] * d[30] * d[40] * d[47] - 2 * d[19] * d[33] * d[40] * d[47] + 2 * d[21] * d[34] * d[40] * d[47] - 2 * d[25] * d[27] * d[41] * d[47] + 2 * d[24] * d[30] * d[41] * d[47] + 2 * d[21] * d[33] * d[41] * d[47] - 2 * d[18] * d[34] * d[41] * d[47] - 2 * d[22] * d[28] * d[42] * d[47] + 2 * d[23] * d[30] * d[42] * d[47] - 2 * d[19] * d[31] * d[42] * d[47] + 2 * d[21] * d[32] * d[42] * d[47] - 2 * d[23] * d[27] * d[43] * d[47] + 2 * d[22] * d[30] * d[43] * d[47] + 2 * d[21] * d[31] * d[43] * d[47] - 2 * d[18] * d[32] * d[43] * d[47] + 2 * d[19] * d[27] * d[44] * d[47] + 2 * d[18] * d[28] * d[44] * d[47] - 4 * d[21] * d[30] * d[44] * d[47] - d[20] * d[28] * d[36] * d[57] - d[19] * d[29] * d[36] * d[57] + 2 * d[23] * d[32] * d[36] * d[57] - d[20] * d[27] * d[37] * d[57] - d[18] * d[29] * d[37] * d[57] + 2 * d[22] * d[31] * d[37] * d[57] - d[19] * d[27] * d[38] * d[57] - d[18] * d[28] * d[38] * d[57] + 2 * d[21] * d[30] * d[38] * d[57] + 2 * d[21] * d[29] * d[39] * d[57] + 2 * d[20] * d[30] * d[39] * d[57] - 2 * d[23] * d[31] * d[39] * d[57] - 2 * d[22] * d[32] * d[39] * d[57] + 2 * d[22] * d[28] * d[40] * d[57] - 2 * d[23] * d[30] * d[40] * d[57] + 2 * d[19] * d[31] * d[40] * d[57] - 2 * d[21] * d[32] * d[40] * d[57] + 2 * d[23] * d[27] * d[41] * d[57] - 2 * d[22] * d[30] * d[41] * d[57] - 2 * d[21] * d[31] * d[41] * d[57] + 2 * d[18] * d[32] * d[41] * d[57];
    coeffs[15] = 2 * d[29] * d[33] * d[37] * d[45] - 2 * d[31] * d[35] * d[37] * d[45] + 2 * d[28] * d[33] * d[38] * d[45] - 2 * d[30] * d[34] * d[38] * d[45] - 2 * d[29] * d[34] * d[39] * d[45] + 2 * d[32] * d[35] * d[39] * d[45] + 2 * d[32] * d[34] * d[40] * d[45] - 2 * d[28] * d[35] * d[40] * d[45] - 4 * d[32] * d[33] * d[41] * d[45] + 2 * d[31] * d[34] * d[41] * d[45] + 2 * d[30] * d[35] * d[41] * d[45] + 2 * d[28] * d[29] * d[42] * d[45] - 2 * std::pow(d[32], 2) * d[42] * d[45] - 2 * d[29] * d[30] * d[43] * d[45] + 2 * d[31] * d[32] * d[43] * d[45] - 2 * d[28] * d[31] * d[44] * d[45] + 2 * d[30] * d[32] * d[44] * d[45] + 2 * d[29] * d[34] * d[36] * d[46] - 2 * d[32] * d[35] * d[36] * d[46] - 2 * d[30] * d[33] * d[38] * d[46] + 2 * d[27] * d[34] * d[38] * d[46] - 2 * d[29] * d[33] * d[39] * d[46] + 2 * d[31] * d[35] * d[39] * d[46] + 2 * d[32] * d[33] * d[40] * d[46] - 4 * d[31] * d[34] * d[40] * d[46] + 2 * d[30] * d[35] * d[40] * d[46] + 2 * d[31] * d[33] * d[41] * d[46] - 2 * d[27] * d[35] * d[41] * d[46] - 2 * d[29] * d[30] * d[42] * d[46] + 2 * d[31] * d[32] * d[42] * d[46] + 2 * d[27] * d[29] * d[43] * d[46] - 2 * std::pow(d[31], 2) * d[43] * d[46] + 2 * d[30] * d[31] * d[44] * d[46] - 2 * d[27] * d[32] * d[44] * d[46] - 2 * d[32] * d[34] * d[36] * d[47] + 2 * d[28] * d[35] * d[36] * d[47] - 2 * d[31] * d[33] * d[37] * d[47] + 2 * d[27] * d[35] * d[37] * d[47] + 2 * d[32] * d[33] * d[39] * d[47] + 2 * d[31] * d[34] * d[39] * d[47] - 4 * d[30] * d[35] * d[39] * d[47] - 2 * d[28] * d[33] * d[40] * d[47] + 2 * d[30] * d[34] * d[40] * d[47] + 2 * d[30] * d[33] * d[41] * d[47] - 2 * d[27] * d[34] * d[41] * d[47] - 2 * d[28] * d[31] * d[42] * d[47] + 2 * d[30] * d[32] * d[42] * d[47] + 2 * d[30] * d[31] * d[43] * d[47] - 2 * d[27] * d[32] * d[43] * d[47] + 2 * d[27] * d[28] * d[44] * d[47] - 2 * std::pow(d[30], 2) * d[44] * d[47] - d[28] * d[29] * d[36] * d[57] + std::pow(d[32], 2) * d[36] * d[57] - d[27] * d[29] * d[37] * d[57] + std::pow(d[31], 2) * d[37] * d[57] - d[27] * d[28] * d[38] * d[57] + std::pow(d[30], 2) * d[38] * d[57] + 2 * d[29] * d[30] * d[39] * d[57] - 2 * d[31] * d[32] * d[39] * d[57] + 2 * d[28] * d[31] * d[40] * d[57] - 2 * d[30] * d[32] * d[40] * d[57] - 2 * d[30] * d[31] * d[41] * d[57] + 2 * d[27] * d[32] * d[41] * d[57];
    coeffs[16] = 2 * d[15] * d[37] * d[38] * d[45] - 2 * d[16] * d[38] * d[39] * d[45] - 2 * d[17] * d[37] * d[40] * d[45] + 2 * d[17] * d[39] * d[41] * d[45] + 2 * d[16] * d[40] * d[41] * d[45] - 2 * d[15] * std::pow(d[41], 2) * d[45] + 2 * d[11] * d[37] * d[42] * d[45] + 2 * d[10] * d[38] * d[42] * d[45] - 4 * d[14] * d[41] * d[42] * d[45] - 2 * d[12] * d[38] * d[43] * d[45] - 2 * d[11] * d[39] * d[43] * d[45] + 2 * d[14] * d[40] * d[43] * d[45] + 2 * d[13] * d[41] * d[43] * d[45] - 2 * d[13] * d[37] * d[44] * d[45] + 2 * d[14] * d[39] * d[44] * d[45] - 2 * d[10] * d[40] * d[44] * d[45] + 2 * d[12] * d[41] * d[44] * d[45] + 2 * d[16] * d[36] * d[38] * d[46] - 2 * d[15] * d[38] * d[39] * d[46] + 2 * d[17] * d[39] * d[40] * d[46] - 2 * d[16] * std::pow(d[40], 2) * d[46] - 2 * d[17] * d[36] * d[41] * d[46] + 2 * d[15] * d[40] * d[41] * d[46] - 2 * d[12] * d[38] * d[42] * d[46] - 2 * d[11] * d[39] * d[42] * d[46] + 2 * d[14] * d[40] * d[42] * d[46] + 2 * d[13] * d[41] * d[42] * d[46] + 2 * d[11] * d[36] * d[43] * d[46] + 2 * d[9] * d[38] * d[43] * d[46] - 4 * d[13] * d[40] * d[43] * d[46] - 2 * d[14] * d[36] * d[44] * d[46] + 2 * d[13] * d[39] * d[44] * d[46] + 2 * d[12] * d[40] * d[44] * d[46] - 2 * d[9] * d[41] * d[44] * d[46] + 2 * d[17] * d[36] * d[37] * d[47] - 2 * d[17] * std::pow(d[39], 2) * d[47] - 2 * d[15] * d[37] * d[40] * d[47] + 2 * d[16] * d[39] * d[40] * d[47] - 2 * d[16] * d[36] * d[41] * d[47] + 2 * d[15] * d[39] * d[41] * d[47] - 2 * d[13] * d[37] * d[42] * d[47] + 2 * d[14] * d[39] * d[42] * d[47] - 2 * d[10] * d[40] * d[42] * d[47] + 2 * d[12] * d[41] * d[42] * d[47] - 2 * d[14] * d[36] * d[43] * d[47] + 2 * d[13] * d[39] * d[43] * d[47] + 2 * d[12] * d[40] * d[43] * d[47] - 2 * d[9] * d[41] * d[43] * d[47] + 2 * d[10] * d[36] * d[44] * d[47] + 2 * d[9] * d[37] * d[44] * d[47] - 4 * d[12] * d[39] * d[44] * d[47] - d[11] * d[36] * d[37] * d[57] - d[10] * d[36] * d[38] * d[57] - d[9] * d[37] * d[38] * d[57] + 2 * d[12] * d[38] * d[39] * d[57] + d[11] * std::pow(d[39], 2) * d[57] + 2 * d[13] * d[37] * d[40] * d[57] - 2 * d[14] * d[39] * d[40] * d[57] + d[10] * std::pow(d[40], 2) * d[57] + 2 * d[14] * d[36] * d[41] * d[57] - 2 * d[13] * d[39] * d[41] * d[57] - 2 * d[12] * d[40] * d[41] * d[57] + d[9] * std::pow(d[41], 2) * d[57];
    coeffs[17] = 2 * d[24] * d[37] * d[38] * d[45] - 2 * d[25] * d[38] * d[39] * d[45] - 2 * d[26] * d[37] * d[40] * d[45] + 2 * d[26] * d[39] * d[41] * d[45] + 2 * d[25] * d[40] * d[41] * d[45] - 2 * d[24] * std::pow(d[41], 2) * d[45] + 2 * d[20] * d[37] * d[42] * d[45] + 2 * d[19] * d[38] * d[42] * d[45] - 4 * d[23] * d[41] * d[42] * d[45] - 2 * d[21] * d[38] * d[43] * d[45] - 2 * d[20] * d[39] * d[43] * d[45] + 2 * d[23] * d[40] * d[43] * d[45] + 2 * d[22] * d[41] * d[43] * d[45] - 2 * d[22] * d[37] * d[44] * d[45] + 2 * d[23] * d[39] * d[44] * d[45] - 2 * d[19] * d[40] * d[44] * d[45] + 2 * d[21] * d[41] * d[44] * d[45] + 2 * d[25] * d[36] * d[38] * d[46] - 2 * d[24] * d[38] * d[39] * d[46] + 2 * d[26] * d[39] * d[40] * d[46] - 2 * d[25] * std::pow(d[40], 2) * d[46] - 2 * d[26] * d[36] * d[41] * d[46] + 2 * d[24] * d[40] * d[41] * d[46] - 2 * d[21] * d[38] * d[42] * d[46] - 2 * d[20] * d[39] * d[42] * d[46] + 2 * d[23] * d[40] * d[42] * d[46] + 2 * d[22] * d[41] * d[42] * d[46] + 2 * d[20] * d[36] * d[43] * d[46] + 2 * d[18] * d[38] * d[43] * d[46] - 4 * d[22] * d[40] * d[43] * d[46] - 2 * d[23] * d[36] * d[44] * d[46] + 2 * d[22] * d[39] * d[44] * d[46] + 2 * d[21] * d[40] * d[44] * d[46] - 2 * d[18] * d[41] * d[44] * d[46] + 2 * d[26] * d[36] * d[37] * d[47] - 2 * d[26] * std::pow(d[39], 2) * d[47] - 2 * d[24] * d[37] * d[40] * d[47] + 2 * d[25] * d[39] * d[40] * d[47] - 2 * d[25] * d[36] * d[41] * d[47] + 2 * d[24] * d[39] * d[41] * d[47] - 2 * d[22] * d[37] * d[42] * d[47] + 2 * d[23] * d[39] * d[42] * d[47] - 2 * d[19] * d[40] * d[42] * d[47] + 2 * d[21] * d[41] * d[42] * d[47] - 2 * d[23] * d[36] * d[43] * d[47] + 2 * d[22] * d[39] * d[43] * d[47] + 2 * d[21] * d[40] * d[43] * d[47] - 2 * d[18] * d[41] * d[43] * d[47] + 2 * d[19] * d[36] * d[44] * d[47] + 2 * d[18] * d[37] * d[44] * d[47] - 4 * d[21] * d[39] * d[44] * d[47] - d[20] * d[36] * d[37] * d[57] - d[19] * d[36] * d[38] * d[57] - d[18] * d[37] * d[38] * d[57] + 2 * d[21] * d[38] * d[39] * d[57] + d[20] * std::pow(d[39], 2) * d[57] + 2 * d[22] * d[37] * d[40] * d[57] - 2 * d[23] * d[39] * d[40] * d[57] + d[19] * std::pow(d[40], 2) * d[57] + 2 * d[23] * d[36] * d[41] * d[57] - 2 * d[22] * d[39] * d[41] * d[57] - 2 * d[21] * d[40] * d[41] * d[57] + d[18] * std::pow(d[41], 2) * d[57];
    coeffs[18] = 2 * d[33] * d[37] * d[38] * d[45] - 2 * d[34] * d[38] * d[39] * d[45] - 2 * d[35] * d[37] * d[40] * d[45] + 2 * d[35] * d[39] * d[41] * d[45] + 2 * d[34] * d[40] * d[41] * d[45] - 2 * d[33] * std::pow(d[41], 2) * d[45] + 2 * d[29] * d[37] * d[42] * d[45] + 2 * d[28] * d[38] * d[42] * d[45] - 4 * d[32] * d[41] * d[42] * d[45] - 2 * d[30] * d[38] * d[43] * d[45] - 2 * d[29] * d[39] * d[43] * d[45] + 2 * d[32] * d[40] * d[43] * d[45] + 2 * d[31] * d[41] * d[43] * d[45] - 2 * d[31] * d[37] * d[44] * d[45] + 2 * d[32] * d[39] * d[44] * d[45] - 2 * d[28] * d[40] * d[44] * d[45] + 2 * d[30] * d[41] * d[44] * d[45] + 2 * d[34] * d[36] * d[38] * d[46] - 2 * d[33] * d[38] * d[39] * d[46] + 2 * d[35] * d[39] * d[40] * d[46] - 2 * d[34] * std::pow(d[40], 2) * d[46] - 2 * d[35] * d[36] * d[41] * d[46] + 2 * d[33] * d[40] * d[41] * d[46] - 2 * d[30] * d[38] * d[42] * d[46] - 2 * d[29] * d[39] * d[42] * d[46] + 2 * d[32] * d[40] * d[42] * d[46] + 2 * d[31] * d[41] * d[42] * d[46] + 2 * d[29] * d[36] * d[43] * d[46] + 2 * d[27] * d[38] * d[43] * d[46] - 4 * d[31] * d[40] * d[43] * d[46] - 2 * d[32] * d[36] * d[44] * d[46] + 2 * d[31] * d[39] * d[44] * d[46] + 2 * d[30] * d[40] * d[44] * d[46] - 2 * d[27] * d[41] * d[44] * d[46] + 2 * d[35] * d[36] * d[37] * d[47] - 2 * d[35] * std::pow(d[39], 2) * d[47] - 2 * d[33] * d[37] * d[40] * d[47] + 2 * d[34] * d[39] * d[40] * d[47] - 2 * d[34] * d[36] * d[41] * d[47] + 2 * d[33] * d[39] * d[41] * d[47] - 2 * d[31] * d[37] * d[42] * d[47] + 2 * d[32] * d[39] * d[42] * d[47] - 2 * d[28] * d[40] * d[42] * d[47] + 2 * d[30] * d[41] * d[42] * d[47] - 2 * d[32] * d[36] * d[43] * d[47] + 2 * d[31] * d[39] * d[43] * d[47] + 2 * d[30] * d[40] * d[43] * d[47] - 2 * d[27] * d[41] * d[43] * d[47] + 2 * d[28] * d[36] * d[44] * d[47] + 2 * d[27] * d[37] * d[44] * d[47] - 4 * d[30] * d[39] * d[44] * d[47] - d[29] * d[36] * d[37] * d[57] - d[28] * d[36] * d[38] * d[57] - d[27] * d[37] * d[38] * d[57] + 2 * d[30] * d[38] * d[39] * d[57] + d[29] * std::pow(d[39], 2) * d[57] + 2 * d[31] * d[37] * d[40] * d[57] - 2 * d[32] * d[39] * d[40] * d[57] + d[28] * std::pow(d[40], 2) * d[57] + 2 * d[32] * d[36] * d[41] * d[57] - 2 * d[31] * d[39] * d[41] * d[57] - 2 * d[30] * d[40] * d[41] * d[57] + d[27] * std::pow(d[41], 2) * d[57];
    coeffs[19] = 2 * d[37] * d[38] * d[42] * d[45] - 2 * std::pow(d[41], 2) * d[42] * d[45] - 2 * d[38] * d[39] * d[43] * d[45] + 2 * d[40] * d[41] * d[43] * d[45] - 2 * d[37] * d[40] * d[44] * d[45] + 2 * d[39] * d[41] * d[44] * d[45] - 2 * d[38] * d[39] * d[42] * d[46] + 2 * d[40] * d[41] * d[42] * d[46] + 2 * d[36] * d[38] * d[43] * d[46] - 2 * std::pow(d[40], 2) * d[43] * d[46] + 2 * d[39] * d[40] * d[44] * d[46] - 2 * d[36] * d[41] * d[44] * d[46] - 2 * d[37] * d[40] * d[42] * d[47] + 2 * d[39] * d[41] * d[42] * d[47] + 2 * d[39] * d[40] * d[43] * d[47] - 2 * d[36] * d[41] * d[43] * d[47] + 2 * d[36] * d[37] * d[44] * d[47] - 2 * std::pow(d[39], 2) * d[44] * d[47] - d[36] * d[37] * d[38] * d[57] + d[38] * std::pow(d[39], 2) * d[57] + d[37] * std::pow(d[40], 2) * d[57] - 2 * d[39] * d[40] * d[41] * d[57] + d[36] * std::pow(d[41], 2) * d[57];
    coeffs[20] = 2 * d[6] * d[10] * d[11] * d[45] - 2 * d[7] * d[11] * d[12] * d[45] - 2 * d[8] * d[10] * d[13] * d[45] + 2 * d[8] * d[12] * d[14] * d[45] + 2 * d[7] * d[13] * d[14] * d[45] - 2 * d[6] * std::pow(d[14], 2) * d[45] + 2 * d[2] * d[10] * d[15] * d[45] + 2 * d[1] * d[11] * d[15] * d[45] - 4 * d[5] * d[14] * d[15] * d[45] - 2 * d[3] * d[11] * d[16] * d[45] - 2 * d[2] * d[12] * d[16] * d[45] + 2 * d[5] * d[13] * d[16] * d[45] + 2 * d[4] * d[14] * d[16] * d[45] - 2 * d[4] * d[10] * d[17] * d[45] + 2 * d[5] * d[12] * d[17] * d[45] - 2 * d[1] * d[13] * d[17] * d[45] + 2 * d[3] * d[14] * d[17] * d[45] + d[10] * d[11] * std::pow(d[45], 2) - std::pow(d[14], 2) * std::pow(d[45], 2) + 2 * d[7] * d[9] * d[11] * d[46] - 2 * d[6] * d[11] * d[12] * d[46] + 2 * d[8] * d[12] * d[13] * d[46] - 2 * d[7] * std::pow(d[13], 2) * d[46] - 2 * d[8] * d[9] * d[14] * d[46] + 2 * d[6] * d[13] * d[14] * d[46] - 2 * d[3] * d[11] * d[15] * d[46] - 2 * d[2] * d[12] * d[15] * d[46] + 2 * d[5] * d[13] * d[15] * d[46] + 2 * d[4] * d[14] * d[15] * d[46] + 2 * d[2] * d[9] * d[16] * d[46] + 2 * d[0] * d[11] * d[16] * d[46] - 4 * d[4] * d[13] * d[16] * d[46] - 2 * d[5] * d[9] * d[17] * d[46] + 2 * d[4] * d[12] * d[17] * d[46] + 2 * d[3] * d[13] * d[17] * d[46] - 2 * d[0] * d[14] * d[17] * d[46] - 2 * d[11] * d[12] * d[45] * d[46] + 2 * d[13] * d[14] * d[45] * d[46] + d[9] * d[11] * std::pow(d[46], 2) - std::pow(d[13], 2) * std::pow(d[46], 2) + 2 * d[8] * d[9] * d[10] * d[47] - 2 * d[8] * std::pow(d[12], 2) * d[47] - 2 * d[6] * d[10] * d[13] * d[47] + 2 * d[7] * d[12] * d[13] * d[47] - 2 * d[7] * d[9] * d[14] * d[47] + 2 * d[6] * d[12] * d[14] * d[47] - 2 * d[4] * d[10] * d[15] * d[47] + 2 * d[5] * d[12] * d[15] * d[47] - 2 * d[1] * d[13] * d[15] * d[47] + 2 * d[3] * d[14] * d[15] * d[47] - 2 * d[5] * d[9] * d[16] * d[47] + 2 * d[4] * d[12] * d[16] * d[47] + 2 * d[3] * d[13] * d[16] * d[47] - 2 * d[0] * d[14] * d[16] * d[47] + 2 * d[1] * d[9] * d[17] * d[47] + 2 * d[0] * d[10] * d[17] * d[47] - 4 * d[3] * d[12] * d[17] * d[47] - 2 * d[10] * d[13] * d[45] * d[47] + 2 * d[12] * d[14] * d[45] * d[47] + 2 * d[12] * d[13] * d[46] * d[47] - 2 * d[9] * d[14] * d[46] * d[47] + d[9] * d[10] * std::pow(d[47], 2) - std::pow(d[12], 2) * std::pow(d[47], 2) - d[2] * d[9] * d[10] * d[57] - d[1] * d[9] * d[11] * d[57] - d[0] * d[10] * d[11] * d[57] + 2 * d[3] * d[11] * d[12] * d[57] + d[2] * std::pow(d[12], 2) * d[57] + 2 * d[4] * d[10] * d[13] * d[57] - 2 * d[5] * d[12] * d[13] * d[57] + d[1] * std::pow(d[13], 2) * d[57] + 2 * d[5] * d[9] * d[14] * d[57] - 2 * d[4] * d[12] * d[14] * d[57] - 2 * d[3] * d[13] * d[14] * d[57] + d[0] * std::pow(d[14], 2) * d[57];
    coeffs[21] = 2 * d[6] * d[11] * d[19] * d[45] - 2 * d[8] * d[13] * d[19] * d[45] + 2 * d[2] * d[15] * d[19] * d[45] - 2 * d[4] * d[17] * d[19] * d[45] + 2 * d[6] * d[10] * d[20] * d[45] - 2 * d[7] * d[12] * d[20] * d[45] + 2 * d[1] * d[15] * d[20] * d[45] - 2 * d[3] * d[16] * d[20] * d[45] - 2 * d[7] * d[11] * d[21] * d[45] + 2 * d[8] * d[14] * d[21] * d[45] - 2 * d[2] * d[16] * d[21] * d[45] + 2 * d[5] * d[17] * d[21] * d[45] - 2 * d[8] * d[10] * d[22] * d[45] + 2 * d[7] * d[14] * d[22] * d[45] + 2 * d[5] * d[16] * d[22] * d[45] - 2 * d[1] * d[17] * d[22] * d[45] + 2 * d[8] * d[12] * d[23] * d[45] + 2 * d[7] * d[13] * d[23] * d[45] - 4 * d[6] * d[14] * d[23] * d[45] - 4 * d[5] * d[15] * d[23] * d[45] + 2 * d[4] * d[16] * d[23] * d[45] + 2 * d[3] * d[17] * d[23] * d[45] + 2 * d[2] * d[10] * d[24] * d[45] + 2 * d[1] * d[11] * d[24] * d[45] - 4 * d[5] * d[14] * d[24] * d[45] - 2 * d[3] * d[11] * d[25] * d[45] - 2 * d[2] * d[12] * d[25] * d[45] + 2 * d[5] * d[13] * d[25] * d[45] + 2 * d[4] * d[14] * d[25] * d[45] - 2 * d[4] * d[10] * d[26] * d[45] + 2 * d[5] * d[12] * d[26] * d[45] - 2 * d[1] * d[13] * d[26] * d[45] + 2 * d[3] * d[14] * d[26] * d[45] + d[11] * d[19] * std::pow(d[45], 2) + d[10] * d[20] * std::pow(d[45], 2) - 2 * d[14] * d[23] * std::pow(d[45], 2) + 2 * d[7] * d[11] * d[18] * d[46] - 2 * d[8] * d[14] * d[18] * d[46] + 2 * d[2] * d[16] * d[18] * d[46] - 2 * d[5] * d[17] * d[18] * d[46] + 2 * d[7] * d[9] * d[20] * d[46] - 2 * d[6] * d[12] * d[20] * d[46] - 2 * d[3] * d[15] * d[20] * d[46] + 2 * d[0] * d[16] * d[20] * d[46] - 2 * d[6] * d[11] * d[21] * d[46] + 2 * d[8] * d[13] * d[21] * d[46] - 2 * d[2] * d[15] * d[21] * d[46] + 2 * d[4] * d[17] * d[21] * d[46] + 2 * d[8] * d[12] * d[22] * d[46] - 4 * d[7] * d[13] * d[22] * d[46] + 2 * d[6] * d[14] * d[22] * d[46] + 2 * d[5] * d[15] * d[22] * d[46] - 4 * d[4] * d[16] * d[22] * d[46] + 2 * d[3] * d[17] * d[22] * d[46] - 2 * d[8] * d[9] * d[23] * d[46] + 2 * d[6] * d[13] * d[23] * d[46] + 2 * d[4] * d[15] * d[23] * d[46] - 2 * d[0] * d[17] * d[23] * d[46] - 2 * d[3] * d[11] * d[24] * d[46] - 2 * d[2] * d[12] * d[24] * d[46] + 2 * d[5] * d[13] * d[24] * d[46] + 2 * d[4] * d[14] * d[24] * d[46] + 2 * d[2] * d[9] * d[25] * d[46] + 2 * d[0] * d[11] * d[25] * d[46] - 4 * d[4] * d[13] * d[25] * d[46] - 2 * d[5] * d[9] * d[26] * d[46] + 2 * d[4] * d[12] * d[26] * d[46] + 2 * d[3] * d[13] * d[26] * d[46] - 2 * d[0] * d[14] * d[26] * d[46] - 2 * d[12] * d[20] * d[45] * d[46] - 2 * d[11] * d[21] * d[45] * d[46] + 2 * d[14] * d[22] * d[45] * d[46] + 2 * d[13] * d[23] * d[45] * d[46] + d[11] * d[18] * std::pow(d[46], 2) + d[9] * d[20] * std::pow(d[46], 2) - 2 * d[13] * d[22] * std::pow(d[46], 2) + 2 * d[8] * d[10] * d[18] * d[47] - 2 * d[7] * d[14] * d[18] * d[47] - 2 * d[5] * d[16] * d[18] * d[47] + 2 * d[1] * d[17] * d[18] * d[47] + 2 * d[8] * d[9] * d[19] * d[47] - 2 * d[6] * d[13] * d[19] * d[47] - 2 * d[4] * d[15] * d[19] * d[47] + 2 * d[0] * d[17] * d[19] * d[47] - 4 * d[8] * d[12] * d[21] * d[47] + 2 * d[7] * d[13] * d[21] * d[47] + 2 * d[6] * d[14] * d[21] * d[47] + 2 * d[5] * d[15] * d[21] * d[47] + 2 * d[4] * d[16] * d[21] * d[47] - 4 * d[3] * d[17] * d[21] * d[47] - 2 * d[6] * d[10] * d[22] * d[47] + 2 * d[7] * d[12] * d[22] * d[47] - 2 * d[1] * d[15] * d[22] * d[47] + 2 * d[3] * d[16] * d[22] * d[47] - 2 * d[7] * d[9] * d[23] * d[47] + 2 * d[6] * d[12] * d[23] * d[47] + 2 * d[3] * d[15] * d[23] * d[47] - 2 * d[0] * d[16] * d[23] * d[47] - 2 * d[4] * d[10] * d[24] * d[47] + 2 * d[5] * d[12] * d[24] * d[47] - 2 * d[1] * d[13] * d[24] * d[47] + 2 * d[3] * d[14] * d[24] * d[47] - 2 * d[5] * d[9] * d[25] * d[47] + 2 * d[4] * d[12] * d[25] * d[47] + 2 * d[3] * d[13] * d[25] * d[47] - 2 * d[0] * d[14] * d[25] * d[47] + 2 * d[1] * d[9] * d[26] * d[47] + 2 * d[0] * d[10] * d[26] * d[47] - 4 * d[3] * d[12] * d[26] * d[47] - 2 * d[13] * d[19] * d[45] * d[47] + 2 * d[14] * d[21] * d[45] * d[47] - 2 * d[10] * d[22] * d[45] * d[47] + 2 * d[12] * d[23] * d[45] * d[47] - 2 * d[14] * d[18] * d[46] * d[47] + 2 * d[13] * d[21] * d[46] * d[47] + 2 * d[12] * d[22] * d[46] * d[47] - 2 * d[9] * d[23] * d[46] * d[47] + d[10] * d[18] * std::pow(d[47], 2) + d[9] * d[19] * std::pow(d[47], 2) - 2 * d[12] * d[21] * std::pow(d[47], 2) - d[2] * d[10] * d[18] * d[57] - d[1] * d[11] * d[18] * d[57] + 2 * d[5] * d[14] * d[18] * d[57] - d[2] * d[9] * d[19] * d[57] - d[0] * d[11] * d[19] * d[57] + 2 * d[4] * d[13] * d[19] * d[57] - d[1] * d[9] * d[20] * d[57] - d[0] * d[10] * d[20] * d[57] + 2 * d[3] * d[12] * d[20] * d[57] + 2 * d[3] * d[11] * d[21] * d[57] + 2 * d[2] * d[12] * d[21] * d[57] - 2 * d[5] * d[13] * d[21] * d[57] - 2 * d[4] * d[14] * d[21] * d[57] + 2 * d[4] * d[10] * d[22] * d[57] - 2 * d[5] * d[12] * d[22] * d[57] + 2 * d[1] * d[13] * d[22] * d[57] - 2 * d[3] * d[14] * d[22] * d[57] + 2 * d[5] * d[9] * d[23] * d[57] - 2 * d[4] * d[12] * d[23] * d[57] - 2 * d[3] * d[13] * d[23] * d[57] + 2 * d[0] * d[14] * d[23] * d[57];
    coeffs[22] = 2 * d[6] * d[19] * d[20] * d[45] - 2 * d[7] * d[20] * d[21] * d[45] - 2 * d[8] * d[19] * d[22] * d[45] + 2 * d[8] * d[21] * d[23] * d[45] + 2 * d[7] * d[22] * d[23] * d[45] - 2 * d[6] * std::pow(d[23], 2) * d[45] + 2 * d[2] * d[19] * d[24] * d[45] + 2 * d[1] * d[20] * d[24] * d[45] - 4 * d[5] * d[23] * d[24] * d[45] - 2 * d[3] * d[20] * d[25] * d[45] - 2 * d[2] * d[21] * d[25] * d[45] + 2 * d[5] * d[22] * d[25] * d[45] + 2 * d[4] * d[23] * d[25] * d[45] - 2 * d[4] * d[19] * d[26] * d[45] + 2 * d[5] * d[21] * d[26] * d[45] - 2 * d[1] * d[22] * d[26] * d[45] + 2 * d[3] * d[23] * d[26] * d[45] + d[19] * d[20] * std::pow(d[45], 2) - std::pow(d[23], 2) * std::pow(d[45], 2) + 2 * d[7] * d[18] * d[20] * d[46] - 2 * d[6] * d[20] * d[21] * d[46] + 2 * d[8] * d[21] * d[22] * d[46] - 2 * d[7] * std::pow(d[22], 2) * d[46] - 2 * d[8] * d[18] * d[23] * d[46] + 2 * d[6] * d[22] * d[23] * d[46] - 2 * d[3] * d[20] * d[24] * d[46] - 2 * d[2] * d[21] * d[24] * d[46] + 2 * d[5] * d[22] * d[24] * d[46] + 2 * d[4] * d[23] * d[24] * d[46] + 2 * d[2] * d[18] * d[25] * d[46] + 2 * d[0] * d[20] * d[25] * d[46] - 4 * d[4] * d[22] * d[25] * d[46] - 2 * d[5] * d[18] * d[26] * d[46] + 2 * d[4] * d[21] * d[26] * d[46] + 2 * d[3] * d[22] * d[26] * d[46] - 2 * d[0] * d[23] * d[26] * d[46] - 2 * d[20] * d[21] * d[45] * d[46] + 2 * d[22] * d[23] * d[45] * d[46] + d[18] * d[20] * std::pow(d[46], 2) - std::pow(d[22], 2) * std::pow(d[46], 2) + 2 * d[8] * d[18] * d[19] * d[47] - 2 * d[8] * std::pow(d[21], 2) * d[47] - 2 * d[6] * d[19] * d[22] * d[47] + 2 * d[7] * d[21] * d[22] * d[47] - 2 * d[7] * d[18] * d[23] * d[47] + 2 * d[6] * d[21] * d[23] * d[47] - 2 * d[4] * d[19] * d[24] * d[47] + 2 * d[5] * d[21] * d[24] * d[47] - 2 * d[1] * d[22] * d[24] * d[47] + 2 * d[3] * d[23] * d[24] * d[47] - 2 * d[5] * d[18] * d[25] * d[47] + 2 * d[4] * d[21] * d[25] * d[47] + 2 * d[3] * d[22] * d[25] * d[47] - 2 * d[0] * d[23] * d[25] * d[47] + 2 * d[1] * d[18] * d[26] * d[47] + 2 * d[0] * d[19] * d[26] * d[47] - 4 * d[3] * d[21] * d[26] * d[47] - 2 * d[19] * d[22] * d[45] * d[47] + 2 * d[21] * d[23] * d[45] * d[47] + 2 * d[21] * d[22] * d[46] * d[47] - 2 * d[18] * d[23] * d[46] * d[47] + d[18] * d[19] * std::pow(d[47], 2) - std::pow(d[21], 2) * std::pow(d[47], 2) - d[2] * d[18] * d[19] * d[57] - d[1] * d[18] * d[20] * d[57] - d[0] * d[19] * d[20] * d[57] + 2 * d[3] * d[20] * d[21] * d[57] + d[2] * std::pow(d[21], 2) * d[57] + 2 * d[4] * d[19] * d[22] * d[57] - 2 * d[5] * d[21] * d[22] * d[57] + d[1] * std::pow(d[22], 2) * d[57] + 2 * d[5] * d[18] * d[23] * d[57] - 2 * d[4] * d[21] * d[23] * d[57] - 2 * d[3] * d[22] * d[23] * d[57] + d[0] * std::pow(d[23], 2) * d[57];
    coeffs[23] = 2 * d[6] * d[11] * d[28] * d[45] - 2 * d[8] * d[13] * d[28] * d[45] + 2 * d[2] * d[15] * d[28] * d[45] - 2 * d[4] * d[17] * d[28] * d[45] + 2 * d[6] * d[10] * d[29] * d[45] - 2 * d[7] * d[12] * d[29] * d[45] + 2 * d[1] * d[15] * d[29] * d[45] - 2 * d[3] * d[16] * d[29] * d[45] - 2 * d[7] * d[11] * d[30] * d[45] + 2 * d[8] * d[14] * d[30] * d[45] - 2 * d[2] * d[16] * d[30] * d[45] + 2 * d[5] * d[17] * d[30] * d[45] - 2 * d[8] * d[10] * d[31] * d[45] + 2 * d[7] * d[14] * d[31] * d[45] + 2 * d[5] * d[16] * d[31] * d[45] - 2 * d[1] * d[17] * d[31] * d[45] + 2 * d[8] * d[12] * d[32] * d[45] + 2 * d[7] * d[13] * d[32] * d[45] - 4 * d[6] * d[14] * d[32] * d[45] - 4 * d[5] * d[15] * d[32] * d[45] + 2 * d[4] * d[16] * d[32] * d[45] + 2 * d[3] * d[17] * d[32] * d[45] + 2 * d[2] * d[10] * d[33] * d[45] + 2 * d[1] * d[11] * d[33] * d[45] - 4 * d[5] * d[14] * d[33] * d[45] - 2 * d[3] * d[11] * d[34] * d[45] - 2 * d[2] * d[12] * d[34] * d[45] + 2 * d[5] * d[13] * d[34] * d[45] + 2 * d[4] * d[14] * d[34] * d[45] - 2 * d[4] * d[10] * d[35] * d[45] + 2 * d[5] * d[12] * d[35] * d[45] - 2 * d[1] * d[13] * d[35] * d[45] + 2 * d[3] * d[14] * d[35] * d[45] + d[11] * d[28] * std::pow(d[45], 2) + d[10] * d[29] * std::pow(d[45], 2) - 2 * d[14] * d[32] * std::pow(d[45], 2) + 2 * d[7] * d[11] * d[27] * d[46] - 2 * d[8] * d[14] * d[27] * d[46] + 2 * d[2] * d[16] * d[27] * d[46] - 2 * d[5] * d[17] * d[27] * d[46] + 2 * d[7] * d[9] * d[29] * d[46] - 2 * d[6] * d[12] * d[29] * d[46] - 2 * d[3] * d[15] * d[29] * d[46] + 2 * d[0] * d[16] * d[29] * d[46] - 2 * d[6] * d[11] * d[30] * d[46] + 2 * d[8] * d[13] * d[30] * d[46] - 2 * d[2] * d[15] * d[30] * d[46] + 2 * d[4] * d[17] * d[30] * d[46] + 2 * d[8] * d[12] * d[31] * d[46] - 4 * d[7] * d[13] * d[31] * d[46] + 2 * d[6] * d[14] * d[31] * d[46] + 2 * d[5] * d[15] * d[31] * d[46] - 4 * d[4] * d[16] * d[31] * d[46] + 2 * d[3] * d[17] * d[31] * d[46] - 2 * d[8] * d[9] * d[32] * d[46] + 2 * d[6] * d[13] * d[32] * d[46] + 2 * d[4] * d[15] * d[32] * d[46] - 2 * d[0] * d[17] * d[32] * d[46] - 2 * d[3] * d[11] * d[33] * d[46] - 2 * d[2] * d[12] * d[33] * d[46] + 2 * d[5] * d[13] * d[33] * d[46] + 2 * d[4] * d[14] * d[33] * d[46] + 2 * d[2] * d[9] * d[34] * d[46] + 2 * d[0] * d[11] * d[34] * d[46] - 4 * d[4] * d[13] * d[34] * d[46] - 2 * d[5] * d[9] * d[35] * d[46] + 2 * d[4] * d[12] * d[35] * d[46] + 2 * d[3] * d[13] * d[35] * d[46] - 2 * d[0] * d[14] * d[35] * d[46] - 2 * d[12] * d[29] * d[45] * d[46] - 2 * d[11] * d[30] * d[45] * d[46] + 2 * d[14] * d[31] * d[45] * d[46] + 2 * d[13] * d[32] * d[45] * d[46] + d[11] * d[27] * std::pow(d[46], 2) + d[9] * d[29] * std::pow(d[46], 2) - 2 * d[13] * d[31] * std::pow(d[46], 2) + 2 * d[8] * d[10] * d[27] * d[47] - 2 * d[7] * d[14] * d[27] * d[47] - 2 * d[5] * d[16] * d[27] * d[47] + 2 * d[1] * d[17] * d[27] * d[47] + 2 * d[8] * d[9] * d[28] * d[47] - 2 * d[6] * d[13] * d[28] * d[47] - 2 * d[4] * d[15] * d[28] * d[47] + 2 * d[0] * d[17] * d[28] * d[47] - 4 * d[8] * d[12] * d[30] * d[47] + 2 * d[7] * d[13] * d[30] * d[47] + 2 * d[6] * d[14] * d[30] * d[47] + 2 * d[5] * d[15] * d[30] * d[47] + 2 * d[4] * d[16] * d[30] * d[47] - 4 * d[3] * d[17] * d[30] * d[47] - 2 * d[6] * d[10] * d[31] * d[47] + 2 * d[7] * d[12] * d[31] * d[47] - 2 * d[1] * d[15] * d[31] * d[47] + 2 * d[3] * d[16] * d[31] * d[47] - 2 * d[7] * d[9] * d[32] * d[47] + 2 * d[6] * d[12] * d[32] * d[47] + 2 * d[3] * d[15] * d[32] * d[47] - 2 * d[0] * d[16] * d[32] * d[47] - 2 * d[4] * d[10] * d[33] * d[47] + 2 * d[5] * d[12] * d[33] * d[47] - 2 * d[1] * d[13] * d[33] * d[47] + 2 * d[3] * d[14] * d[33] * d[47] - 2 * d[5] * d[9] * d[34] * d[47] + 2 * d[4] * d[12] * d[34] * d[47] + 2 * d[3] * d[13] * d[34] * d[47] - 2 * d[0] * d[14] * d[34] * d[47] + 2 * d[1] * d[9] * d[35] * d[47] + 2 * d[0] * d[10] * d[35] * d[47] - 4 * d[3] * d[12] * d[35] * d[47] - 2 * d[13] * d[28] * d[45] * d[47] + 2 * d[14] * d[30] * d[45] * d[47] - 2 * d[10] * d[31] * d[45] * d[47] + 2 * d[12] * d[32] * d[45] * d[47] - 2 * d[14] * d[27] * d[46] * d[47] + 2 * d[13] * d[30] * d[46] * d[47] + 2 * d[12] * d[31] * d[46] * d[47] - 2 * d[9] * d[32] * d[46] * d[47] + d[10] * d[27] * std::pow(d[47], 2) + d[9] * d[28] * std::pow(d[47], 2) - 2 * d[12] * d[30] * std::pow(d[47], 2) - d[2] * d[10] * d[27] * d[57] - d[1] * d[11] * d[27] * d[57] + 2 * d[5] * d[14] * d[27] * d[57] - d[2] * d[9] * d[28] * d[57] - d[0] * d[11] * d[28] * d[57] + 2 * d[4] * d[13] * d[28] * d[57] - d[1] * d[9] * d[29] * d[57] - d[0] * d[10] * d[29] * d[57] + 2 * d[3] * d[12] * d[29] * d[57] + 2 * d[3] * d[11] * d[30] * d[57] + 2 * d[2] * d[12] * d[30] * d[57] - 2 * d[5] * d[13] * d[30] * d[57] - 2 * d[4] * d[14] * d[30] * d[57] + 2 * d[4] * d[10] * d[31] * d[57] - 2 * d[5] * d[12] * d[31] * d[57] + 2 * d[1] * d[13] * d[31] * d[57] - 2 * d[3] * d[14] * d[31] * d[57] + 2 * d[5] * d[9] * d[32] * d[57] - 2 * d[4] * d[12] * d[32] * d[57] - 2 * d[3] * d[13] * d[32] * d[57] + 2 * d[0] * d[14] * d[32] * d[57];
    coeffs[24] = 2 * d[6] * d[20] * d[28] * d[45] - 2 * d[8] * d[22] * d[28] * d[45] + 2 * d[2] * d[24] * d[28] * d[45] - 2 * d[4] * d[26] * d[28] * d[45] + 2 * d[6] * d[19] * d[29] * d[45] - 2 * d[7] * d[21] * d[29] * d[45] + 2 * d[1] * d[24] * d[29] * d[45] - 2 * d[3] * d[25] * d[29] * d[45] - 2 * d[7] * d[20] * d[30] * d[45] + 2 * d[8] * d[23] * d[30] * d[45] - 2 * d[2] * d[25] * d[30] * d[45] + 2 * d[5] * d[26] * d[30] * d[45] - 2 * d[8] * d[19] * d[31] * d[45] + 2 * d[7] * d[23] * d[31] * d[45] + 2 * d[5] * d[25] * d[31] * d[45] - 2 * d[1] * d[26] * d[31] * d[45] + 2 * d[8] * d[21] * d[32] * d[45] + 2 * d[7] * d[22] * d[32] * d[45] - 4 * d[6] * d[23] * d[32] * d[45] - 4 * d[5] * d[24] * d[32] * d[45] + 2 * d[4] * d[25] * d[32] * d[45] + 2 * d[3] * d[26] * d[32] * d[45] + 2 * d[2] * d[19] * d[33] * d[45] + 2 * d[1] * d[20] * d[33] * d[45] - 4 * d[5] * d[23] * d[33] * d[45] - 2 * d[3] * d[20] * d[34] * d[45] - 2 * d[2] * d[21] * d[34] * d[45] + 2 * d[5] * d[22] * d[34] * d[45] + 2 * d[4] * d[23] * d[34] * d[45] - 2 * d[4] * d[19] * d[35] * d[45] + 2 * d[5] * d[21] * d[35] * d[45] - 2 * d[1] * d[22] * d[35] * d[45] + 2 * d[3] * d[23] * d[35] * d[45] + d[20] * d[28] * std::pow(d[45], 2) + d[19] * d[29] * std::pow(d[45], 2) - 2 * d[23] * d[32] * std::pow(d[45], 2) + 2 * d[7] * d[20] * d[27] * d[46] - 2 * d[8] * d[23] * d[27] * d[46] + 2 * d[2] * d[25] * d[27] * d[46] - 2 * d[5] * d[26] * d[27] * d[46] + 2 * d[7] * d[18] * d[29] * d[46] - 2 * d[6] * d[21] * d[29] * d[46] - 2 * d[3] * d[24] * d[29] * d[46] + 2 * d[0] * d[25] * d[29] * d[46] - 2 * d[6] * d[20] * d[30] * d[46] + 2 * d[8] * d[22] * d[30] * d[46] - 2 * d[2] * d[24] * d[30] * d[46] + 2 * d[4] * d[26] * d[30] * d[46] + 2 * d[8] * d[21] * d[31] * d[46] - 4 * d[7] * d[22] * d[31] * d[46] + 2 * d[6] * d[23] * d[31] * d[46] + 2 * d[5] * d[24] * d[31] * d[46] - 4 * d[4] * d[25] * d[31] * d[46] + 2 * d[3] * d[26] * d[31] * d[46] - 2 * d[8] * d[18] * d[32] * d[46] + 2 * d[6] * d[22] * d[32] * d[46] + 2 * d[4] * d[24] * d[32] * d[46] - 2 * d[0] * d[26] * d[32] * d[46] - 2 * d[3] * d[20] * d[33] * d[46] - 2 * d[2] * d[21] * d[33] * d[46] + 2 * d[5] * d[22] * d[33] * d[46] + 2 * d[4] * d[23] * d[33] * d[46] + 2 * d[2] * d[18] * d[34] * d[46] + 2 * d[0] * d[20] * d[34] * d[46] - 4 * d[4] * d[22] * d[34] * d[46] - 2 * d[5] * d[18] * d[35] * d[46] + 2 * d[4] * d[21] * d[35] * d[46] + 2 * d[3] * d[22] * d[35] * d[46] - 2 * d[0] * d[23] * d[35] * d[46] - 2 * d[21] * d[29] * d[45] * d[46] - 2 * d[20] * d[30] * d[45] * d[46] + 2 * d[23] * d[31] * d[45] * d[46] + 2 * d[22] * d[32] * d[45] * d[46] + d[20] * d[27] * std::pow(d[46], 2) + d[18] * d[29] * std::pow(d[46], 2) - 2 * d[22] * d[31] * std::pow(d[46], 2) + 2 * d[8] * d[19] * d[27] * d[47] - 2 * d[7] * d[23] * d[27] * d[47] - 2 * d[5] * d[25] * d[27] * d[47] + 2 * d[1] * d[26] * d[27] * d[47] + 2 * d[8] * d[18] * d[28] * d[47] - 2 * d[6] * d[22] * d[28] * d[47] - 2 * d[4] * d[24] * d[28] * d[47] + 2 * d[0] * d[26] * d[28] * d[47] - 4 * d[8] * d[21] * d[30] * d[47] + 2 * d[7] * d[22] * d[30] * d[47] + 2 * d[6] * d[23] * d[30] * d[47] + 2 * d[5] * d[24] * d[30] * d[47] + 2 * d[4] * d[25] * d[30] * d[47] - 4 * d[3] * d[26] * d[30] * d[47] - 2 * d[6] * d[19] * d[31] * d[47] + 2 * d[7] * d[21] * d[31] * d[47] - 2 * d[1] * d[24] * d[31] * d[47] + 2 * d[3] * d[25] * d[31] * d[47] - 2 * d[7] * d[18] * d[32] * d[47] + 2 * d[6] * d[21] * d[32] * d[47] + 2 * d[3] * d[24] * d[32] * d[47] - 2 * d[0] * d[25] * d[32] * d[47] - 2 * d[4] * d[19] * d[33] * d[47] + 2 * d[5] * d[21] * d[33] * d[47] - 2 * d[1] * d[22] * d[33] * d[47] + 2 * d[3] * d[23] * d[33] * d[47] - 2 * d[5] * d[18] * d[34] * d[47] + 2 * d[4] * d[21] * d[34] * d[47] + 2 * d[3] * d[22] * d[34] * d[47] - 2 * d[0] * d[23] * d[34] * d[47] + 2 * d[1] * d[18] * d[35] * d[47] + 2 * d[0] * d[19] * d[35] * d[47] - 4 * d[3] * d[21] * d[35] * d[47] - 2 * d[22] * d[28] * d[45] * d[47] + 2 * d[23] * d[30] * d[45] * d[47] - 2 * d[19] * d[31] * d[45] * d[47] + 2 * d[21] * d[32] * d[45] * d[47] - 2 * d[23] * d[27] * d[46] * d[47] + 2 * d[22] * d[30] * d[46] * d[47] + 2 * d[21] * d[31] * d[46] * d[47] - 2 * d[18] * d[32] * d[46] * d[47] + d[19] * d[27] * std::pow(d[47], 2) + d[18] * d[28] * std::pow(d[47], 2) - 2 * d[21] * d[30] * std::pow(d[47], 2) - d[2] * d[19] * d[27] * d[57] - d[1] * d[20] * d[27] * d[57] + 2 * d[5] * d[23] * d[27] * d[57] - d[2] * d[18] * d[28] * d[57] - d[0] * d[20] * d[28] * d[57] + 2 * d[4] * d[22] * d[28] * d[57] - d[1] * d[18] * d[29] * d[57] - d[0] * d[19] * d[29] * d[57] + 2 * d[3] * d[21] * d[29] * d[57] + 2 * d[3] * d[20] * d[30] * d[57] + 2 * d[2] * d[21] * d[30] * d[57] - 2 * d[5] * d[22] * d[30] * d[57] - 2 * d[4] * d[23] * d[30] * d[57] + 2 * d[4] * d[19] * d[31] * d[57] - 2 * d[5] * d[21] * d[31] * d[57] + 2 * d[1] * d[22] * d[31] * d[57] - 2 * d[3] * d[23] * d[31] * d[57] + 2 * d[5] * d[18] * d[32] * d[57] - 2 * d[4] * d[21] * d[32] * d[57] - 2 * d[3] * d[22] * d[32] * d[57] + 2 * d[0] * d[23] * d[32] * d[57];
    coeffs[25] = 2 * d[6] * d[28] * d[29] * d[45] - 2 * d[7] * d[29] * d[30] * d[45] - 2 * d[8] * d[28] * d[31] * d[45] + 2 * d[8] * d[30] * d[32] * d[45] + 2 * d[7] * d[31] * d[32] * d[45] - 2 * d[6] * std::pow(d[32], 2) * d[45] + 2 * d[2] * d[28] * d[33] * d[45] + 2 * d[1] * d[29] * d[33] * d[45] - 4 * d[5] * d[32] * d[33] * d[45] - 2 * d[3] * d[29] * d[34] * d[45] - 2 * d[2] * d[30] * d[34] * d[45] + 2 * d[5] * d[31] * d[34] * d[45] + 2 * d[4] * d[32] * d[34] * d[45] - 2 * d[4] * d[28] * d[35] * d[45] + 2 * d[5] * d[30] * d[35] * d[45] - 2 * d[1] * d[31] * d[35] * d[45] + 2 * d[3] * d[32] * d[35] * d[45] + d[28] * d[29] * std::pow(d[45], 2) - std::pow(d[32], 2) * std::pow(d[45], 2) + 2 * d[7] * d[27] * d[29] * d[46] - 2 * d[6] * d[29] * d[30] * d[46] + 2 * d[8] * d[30] * d[31] * d[46] - 2 * d[7] * std::pow(d[31], 2) * d[46] - 2 * d[8] * d[27] * d[32] * d[46] + 2 * d[6] * d[31] * d[32] * d[46] - 2 * d[3] * d[29] * d[33] * d[46] - 2 * d[2] * d[30] * d[33] * d[46] + 2 * d[5] * d[31] * d[33] * d[46] + 2 * d[4] * d[32] * d[33] * d[46] + 2 * d[2] * d[27] * d[34] * d[46] + 2 * d[0] * d[29] * d[34] * d[46] - 4 * d[4] * d[31] * d[34] * d[46] - 2 * d[5] * d[27] * d[35] * d[46] + 2 * d[4] * d[30] * d[35] * d[46] + 2 * d[3] * d[31] * d[35] * d[46] - 2 * d[0] * d[32] * d[35] * d[46] - 2 * d[29] * d[30] * d[45] * d[46] + 2 * d[31] * d[32] * d[45] * d[46] + d[27] * d[29] * std::pow(d[46], 2) - std::pow(d[31], 2) * std::pow(d[46], 2) + 2 * d[8] * d[27] * d[28] * d[47] - 2 * d[8] * std::pow(d[30], 2) * d[47] - 2 * d[6] * d[28] * d[31] * d[47] + 2 * d[7] * d[30] * d[31] * d[47] - 2 * d[7] * d[27] * d[32] * d[47] + 2 * d[6] * d[30] * d[32] * d[47] - 2 * d[4] * d[28] * d[33] * d[47] + 2 * d[5] * d[30] * d[33] * d[47] - 2 * d[1] * d[31] * d[33] * d[47] + 2 * d[3] * d[32] * d[33] * d[47] - 2 * d[5] * d[27] * d[34] * d[47] + 2 * d[4] * d[30] * d[34] * d[47] + 2 * d[3] * d[31] * d[34] * d[47] - 2 * d[0] * d[32] * d[34] * d[47] + 2 * d[1] * d[27] * d[35] * d[47] + 2 * d[0] * d[28] * d[35] * d[47] - 4 * d[3] * d[30] * d[35] * d[47] - 2 * d[28] * d[31] * d[45] * d[47] + 2 * d[30] * d[32] * d[45] * d[47] + 2 * d[30] * d[31] * d[46] * d[47] - 2 * d[27] * d[32] * d[46] * d[47] + d[27] * d[28] * std::pow(d[47], 2) - std::pow(d[30], 2) * std::pow(d[47], 2) - d[2] * d[27] * d[28] * d[57] - d[1] * d[27] * d[29] * d[57] - d[0] * d[28] * d[29] * d[57] + 2 * d[3] * d[29] * d[30] * d[57] + d[2] * std::pow(d[30], 2) * d[57] + 2 * d[4] * d[28] * d[31] * d[57] - 2 * d[5] * d[30] * d[31] * d[57] + d[1] * std::pow(d[31], 2) * d[57] + 2 * d[5] * d[27] * d[32] * d[57] - 2 * d[4] * d[30] * d[32] * d[57] - 2 * d[3] * d[31] * d[32] * d[57] + d[0] * std::pow(d[32], 2) * d[57];
    coeffs[26] = 2 * d[6] * d[11] * d[37] * d[45] - 2 * d[8] * d[13] * d[37] * d[45] + 2 * d[2] * d[15] * d[37] * d[45] - 2 * d[4] * d[17] * d[37] * d[45] + 2 * d[6] * d[10] * d[38] * d[45] - 2 * d[7] * d[12] * d[38] * d[45] + 2 * d[1] * d[15] * d[38] * d[45] - 2 * d[3] * d[16] * d[38] * d[45] - 2 * d[7] * d[11] * d[39] * d[45] + 2 * d[8] * d[14] * d[39] * d[45] - 2 * d[2] * d[16] * d[39] * d[45] + 2 * d[5] * d[17] * d[39] * d[45] - 2 * d[8] * d[10] * d[40] * d[45] + 2 * d[7] * d[14] * d[40] * d[45] + 2 * d[5] * d[16] * d[40] * d[45] - 2 * d[1] * d[17] * d[40] * d[45] + 2 * d[8] * d[12] * d[41] * d[45] + 2 * d[7] * d[13] * d[41] * d[45] - 4 * d[6] * d[14] * d[41] * d[45] - 4 * d[5] * d[15] * d[41] * d[45] + 2 * d[4] * d[16] * d[41] * d[45] + 2 * d[3] * d[17] * d[41] * d[45] + 2 * d[2] * d[10] * d[42] * d[45] + 2 * d[1] * d[11] * d[42] * d[45] - 4 * d[5] * d[14] * d[42] * d[45] - 2 * d[3] * d[11] * d[43] * d[45] - 2 * d[2] * d[12] * d[43] * d[45] + 2 * d[5] * d[13] * d[43] * d[45] + 2 * d[4] * d[14] * d[43] * d[45] - 2 * d[4] * d[10] * d[44] * d[45] + 2 * d[5] * d[12] * d[44] * d[45] - 2 * d[1] * d[13] * d[44] * d[45] + 2 * d[3] * d[14] * d[44] * d[45] + d[11] * d[37] * std::pow(d[45], 2) + d[10] * d[38] * std::pow(d[45], 2) - 2 * d[14] * d[41] * std::pow(d[45], 2) + 2 * d[7] * d[11] * d[36] * d[46] - 2 * d[8] * d[14] * d[36] * d[46] + 2 * d[2] * d[16] * d[36] * d[46] - 2 * d[5] * d[17] * d[36] * d[46] + 2 * d[7] * d[9] * d[38] * d[46] - 2 * d[6] * d[12] * d[38] * d[46] - 2 * d[3] * d[15] * d[38] * d[46] + 2 * d[0] * d[16] * d[38] * d[46] - 2 * d[6] * d[11] * d[39] * d[46] + 2 * d[8] * d[13] * d[39] * d[46] - 2 * d[2] * d[15] * d[39] * d[46] + 2 * d[4] * d[17] * d[39] * d[46] + 2 * d[8] * d[12] * d[40] * d[46] - 4 * d[7] * d[13] * d[40] * d[46] + 2 * d[6] * d[14] * d[40] * d[46] + 2 * d[5] * d[15] * d[40] * d[46] - 4 * d[4] * d[16] * d[40] * d[46] + 2 * d[3] * d[17] * d[40] * d[46] - 2 * d[8] * d[9] * d[41] * d[46] + 2 * d[6] * d[13] * d[41] * d[46] + 2 * d[4] * d[15] * d[41] * d[46] - 2 * d[0] * d[17] * d[41] * d[46] - 2 * d[3] * d[11] * d[42] * d[46] - 2 * d[2] * d[12] * d[42] * d[46] + 2 * d[5] * d[13] * d[42] * d[46] + 2 * d[4] * d[14] * d[42] * d[46] + 2 * d[2] * d[9] * d[43] * d[46] + 2 * d[0] * d[11] * d[43] * d[46] - 4 * d[4] * d[13] * d[43] * d[46] - 2 * d[5] * d[9] * d[44] * d[46] + 2 * d[4] * d[12] * d[44] * d[46] + 2 * d[3] * d[13] * d[44] * d[46] - 2 * d[0] * d[14] * d[44] * d[46] - 2 * d[12] * d[38] * d[45] * d[46] - 2 * d[11] * d[39] * d[45] * d[46] + 2 * d[14] * d[40] * d[45] * d[46] + 2 * d[13] * d[41] * d[45] * d[46] + d[11] * d[36] * std::pow(d[46], 2) + d[9] * d[38] * std::pow(d[46], 2) - 2 * d[13] * d[40] * std::pow(d[46], 2) + 2 * d[8] * d[10] * d[36] * d[47] - 2 * d[7] * d[14] * d[36] * d[47] - 2 * d[5] * d[16] * d[36] * d[47] + 2 * d[1] * d[17] * d[36] * d[47] + 2 * d[8] * d[9] * d[37] * d[47] - 2 * d[6] * d[13] * d[37] * d[47] - 2 * d[4] * d[15] * d[37] * d[47] + 2 * d[0] * d[17] * d[37] * d[47] - 4 * d[8] * d[12] * d[39] * d[47] + 2 * d[7] * d[13] * d[39] * d[47] + 2 * d[6] * d[14] * d[39] * d[47] + 2 * d[5] * d[15] * d[39] * d[47] + 2 * d[4] * d[16] * d[39] * d[47] - 4 * d[3] * d[17] * d[39] * d[47] - 2 * d[6] * d[10] * d[40] * d[47] + 2 * d[7] * d[12] * d[40] * d[47] - 2 * d[1] * d[15] * d[40] * d[47] + 2 * d[3] * d[16] * d[40] * d[47] - 2 * d[7] * d[9] * d[41] * d[47] + 2 * d[6] * d[12] * d[41] * d[47] + 2 * d[3] * d[15] * d[41] * d[47] - 2 * d[0] * d[16] * d[41] * d[47] - 2 * d[4] * d[10] * d[42] * d[47] + 2 * d[5] * d[12] * d[42] * d[47] - 2 * d[1] * d[13] * d[42] * d[47] + 2 * d[3] * d[14] * d[42] * d[47] - 2 * d[5] * d[9] * d[43] * d[47] + 2 * d[4] * d[12] * d[43] * d[47] + 2 * d[3] * d[13] * d[43] * d[47] - 2 * d[0] * d[14] * d[43] * d[47] + 2 * d[1] * d[9] * d[44] * d[47] + 2 * d[0] * d[10] * d[44] * d[47] - 4 * d[3] * d[12] * d[44] * d[47] - 2 * d[13] * d[37] * d[45] * d[47] + 2 * d[14] * d[39] * d[45] * d[47] - 2 * d[10] * d[40] * d[45] * d[47] + 2 * d[12] * d[41] * d[45] * d[47] - 2 * d[14] * d[36] * d[46] * d[47] + 2 * d[13] * d[39] * d[46] * d[47] + 2 * d[12] * d[40] * d[46] * d[47] - 2 * d[9] * d[41] * d[46] * d[47] + d[10] * d[36] * std::pow(d[47], 2) + d[9] * d[37] * std::pow(d[47], 2) - 2 * d[12] * d[39] * std::pow(d[47], 2) - d[2] * d[10] * d[36] * d[57] - d[1] * d[11] * d[36] * d[57] + 2 * d[5] * d[14] * d[36] * d[57] - d[2] * d[9] * d[37] * d[57] - d[0] * d[11] * d[37] * d[57] + 2 * d[4] * d[13] * d[37] * d[57] - d[1] * d[9] * d[38] * d[57] - d[0] * d[10] * d[38] * d[57] + 2 * d[3] * d[12] * d[38] * d[57] + 2 * d[3] * d[11] * d[39] * d[57] + 2 * d[2] * d[12] * d[39] * d[57] - 2 * d[5] * d[13] * d[39] * d[57] - 2 * d[4] * d[14] * d[39] * d[57] + 2 * d[4] * d[10] * d[40] * d[57] - 2 * d[5] * d[12] * d[40] * d[57] + 2 * d[1] * d[13] * d[40] * d[57] - 2 * d[3] * d[14] * d[40] * d[57] + 2 * d[5] * d[9] * d[41] * d[57] - 2 * d[4] * d[12] * d[41] * d[57] - 2 * d[3] * d[13] * d[41] * d[57] + 2 * d[0] * d[14] * d[41] * d[57];
    coeffs[27] = 2 * d[6] * d[20] * d[37] * d[45] - 2 * d[8] * d[22] * d[37] * d[45] + 2 * d[2] * d[24] * d[37] * d[45] - 2 * d[4] * d[26] * d[37] * d[45] + 2 * d[6] * d[19] * d[38] * d[45] - 2 * d[7] * d[21] * d[38] * d[45] + 2 * d[1] * d[24] * d[38] * d[45] - 2 * d[3] * d[25] * d[38] * d[45] - 2 * d[7] * d[20] * d[39] * d[45] + 2 * d[8] * d[23] * d[39] * d[45] - 2 * d[2] * d[25] * d[39] * d[45] + 2 * d[5] * d[26] * d[39] * d[45] - 2 * d[8] * d[19] * d[40] * d[45] + 2 * d[7] * d[23] * d[40] * d[45] + 2 * d[5] * d[25] * d[40] * d[45] - 2 * d[1] * d[26] * d[40] * d[45] + 2 * d[8] * d[21] * d[41] * d[45] + 2 * d[7] * d[22] * d[41] * d[45] - 4 * d[6] * d[23] * d[41] * d[45] - 4 * d[5] * d[24] * d[41] * d[45] + 2 * d[4] * d[25] * d[41] * d[45] + 2 * d[3] * d[26] * d[41] * d[45] + 2 * d[2] * d[19] * d[42] * d[45] + 2 * d[1] * d[20] * d[42] * d[45] - 4 * d[5] * d[23] * d[42] * d[45] - 2 * d[3] * d[20] * d[43] * d[45] - 2 * d[2] * d[21] * d[43] * d[45] + 2 * d[5] * d[22] * d[43] * d[45] + 2 * d[4] * d[23] * d[43] * d[45] - 2 * d[4] * d[19] * d[44] * d[45] + 2 * d[5] * d[21] * d[44] * d[45] - 2 * d[1] * d[22] * d[44] * d[45] + 2 * d[3] * d[23] * d[44] * d[45] + d[20] * d[37] * std::pow(d[45], 2) + d[19] * d[38] * std::pow(d[45], 2) - 2 * d[23] * d[41] * std::pow(d[45], 2) + 2 * d[7] * d[20] * d[36] * d[46] - 2 * d[8] * d[23] * d[36] * d[46] + 2 * d[2] * d[25] * d[36] * d[46] - 2 * d[5] * d[26] * d[36] * d[46] + 2 * d[7] * d[18] * d[38] * d[46] - 2 * d[6] * d[21] * d[38] * d[46] - 2 * d[3] * d[24] * d[38] * d[46] + 2 * d[0] * d[25] * d[38] * d[46] - 2 * d[6] * d[20] * d[39] * d[46] + 2 * d[8] * d[22] * d[39] * d[46] - 2 * d[2] * d[24] * d[39] * d[46] + 2 * d[4] * d[26] * d[39] * d[46] + 2 * d[8] * d[21] * d[40] * d[46] - 4 * d[7] * d[22] * d[40] * d[46] + 2 * d[6] * d[23] * d[40] * d[46] + 2 * d[5] * d[24] * d[40] * d[46] - 4 * d[4] * d[25] * d[40] * d[46] + 2 * d[3] * d[26] * d[40] * d[46] - 2 * d[8] * d[18] * d[41] * d[46] + 2 * d[6] * d[22] * d[41] * d[46] + 2 * d[4] * d[24] * d[41] * d[46] - 2 * d[0] * d[26] * d[41] * d[46] - 2 * d[3] * d[20] * d[42] * d[46] - 2 * d[2] * d[21] * d[42] * d[46] + 2 * d[5] * d[22] * d[42] * d[46] + 2 * d[4] * d[23] * d[42] * d[46] + 2 * d[2] * d[18] * d[43] * d[46] + 2 * d[0] * d[20] * d[43] * d[46] - 4 * d[4] * d[22] * d[43] * d[46] - 2 * d[5] * d[18] * d[44] * d[46] + 2 * d[4] * d[21] * d[44] * d[46] + 2 * d[3] * d[22] * d[44] * d[46] - 2 * d[0] * d[23] * d[44] * d[46] - 2 * d[21] * d[38] * d[45] * d[46] - 2 * d[20] * d[39] * d[45] * d[46] + 2 * d[23] * d[40] * d[45] * d[46] + 2 * d[22] * d[41] * d[45] * d[46] + d[20] * d[36] * std::pow(d[46], 2) + d[18] * d[38] * std::pow(d[46], 2) - 2 * d[22] * d[40] * std::pow(d[46], 2) + 2 * d[8] * d[19] * d[36] * d[47] - 2 * d[7] * d[23] * d[36] * d[47] - 2 * d[5] * d[25] * d[36] * d[47] + 2 * d[1] * d[26] * d[36] * d[47] + 2 * d[8] * d[18] * d[37] * d[47] - 2 * d[6] * d[22] * d[37] * d[47] - 2 * d[4] * d[24] * d[37] * d[47] + 2 * d[0] * d[26] * d[37] * d[47] - 4 * d[8] * d[21] * d[39] * d[47] + 2 * d[7] * d[22] * d[39] * d[47] + 2 * d[6] * d[23] * d[39] * d[47] + 2 * d[5] * d[24] * d[39] * d[47] + 2 * d[4] * d[25] * d[39] * d[47] - 4 * d[3] * d[26] * d[39] * d[47] - 2 * d[6] * d[19] * d[40] * d[47] + 2 * d[7] * d[21] * d[40] * d[47] - 2 * d[1] * d[24] * d[40] * d[47] + 2 * d[3] * d[25] * d[40] * d[47] - 2 * d[7] * d[18] * d[41] * d[47] + 2 * d[6] * d[21] * d[41] * d[47] + 2 * d[3] * d[24] * d[41] * d[47] - 2 * d[0] * d[25] * d[41] * d[47] - 2 * d[4] * d[19] * d[42] * d[47] + 2 * d[5] * d[21] * d[42] * d[47] - 2 * d[1] * d[22] * d[42] * d[47] + 2 * d[3] * d[23] * d[42] * d[47] - 2 * d[5] * d[18] * d[43] * d[47] + 2 * d[4] * d[21] * d[43] * d[47] + 2 * d[3] * d[22] * d[43] * d[47] - 2 * d[0] * d[23] * d[43] * d[47] + 2 * d[1] * d[18] * d[44] * d[47] + 2 * d[0] * d[19] * d[44] * d[47] - 4 * d[3] * d[21] * d[44] * d[47] - 2 * d[22] * d[37] * d[45] * d[47] + 2 * d[23] * d[39] * d[45] * d[47] - 2 * d[19] * d[40] * d[45] * d[47] + 2 * d[21] * d[41] * d[45] * d[47] - 2 * d[23] * d[36] * d[46] * d[47] + 2 * d[22] * d[39] * d[46] * d[47] + 2 * d[21] * d[40] * d[46] * d[47] - 2 * d[18] * d[41] * d[46] * d[47] + d[19] * d[36] * std::pow(d[47], 2) + d[18] * d[37] * std::pow(d[47], 2) - 2 * d[21] * d[39] * std::pow(d[47], 2) - d[2] * d[19] * d[36] * d[57] - d[1] * d[20] * d[36] * d[57] + 2 * d[5] * d[23] * d[36] * d[57] - d[2] * d[18] * d[37] * d[57] - d[0] * d[20] * d[37] * d[57] + 2 * d[4] * d[22] * d[37] * d[57] - d[1] * d[18] * d[38] * d[57] - d[0] * d[19] * d[38] * d[57] + 2 * d[3] * d[21] * d[38] * d[57] + 2 * d[3] * d[20] * d[39] * d[57] + 2 * d[2] * d[21] * d[39] * d[57] - 2 * d[5] * d[22] * d[39] * d[57] - 2 * d[4] * d[23] * d[39] * d[57] + 2 * d[4] * d[19] * d[40] * d[57] - 2 * d[5] * d[21] * d[40] * d[57] + 2 * d[1] * d[22] * d[40] * d[57] - 2 * d[3] * d[23] * d[40] * d[57] + 2 * d[5] * d[18] * d[41] * d[57] - 2 * d[4] * d[21] * d[41] * d[57] - 2 * d[3] * d[22] * d[41] * d[57] + 2 * d[0] * d[23] * d[41] * d[57];
    coeffs[28] = 2 * d[6] * d[29] * d[37] * d[45] - 2 * d[8] * d[31] * d[37] * d[45] + 2 * d[2] * d[33] * d[37] * d[45] - 2 * d[4] * d[35] * d[37] * d[45] + 2 * d[6] * d[28] * d[38] * d[45] - 2 * d[7] * d[30] * d[38] * d[45] + 2 * d[1] * d[33] * d[38] * d[45] - 2 * d[3] * d[34] * d[38] * d[45] - 2 * d[7] * d[29] * d[39] * d[45] + 2 * d[8] * d[32] * d[39] * d[45] - 2 * d[2] * d[34] * d[39] * d[45] + 2 * d[5] * d[35] * d[39] * d[45] - 2 * d[8] * d[28] * d[40] * d[45] + 2 * d[7] * d[32] * d[40] * d[45] + 2 * d[5] * d[34] * d[40] * d[45] - 2 * d[1] * d[35] * d[40] * d[45] + 2 * d[8] * d[30] * d[41] * d[45] + 2 * d[7] * d[31] * d[41] * d[45] - 4 * d[6] * d[32] * d[41] * d[45] - 4 * d[5] * d[33] * d[41] * d[45] + 2 * d[4] * d[34] * d[41] * d[45] + 2 * d[3] * d[35] * d[41] * d[45] + 2 * d[2] * d[28] * d[42] * d[45] + 2 * d[1] * d[29] * d[42] * d[45] - 4 * d[5] * d[32] * d[42] * d[45] - 2 * d[3] * d[29] * d[43] * d[45] - 2 * d[2] * d[30] * d[43] * d[45] + 2 * d[5] * d[31] * d[43] * d[45] + 2 * d[4] * d[32] * d[43] * d[45] - 2 * d[4] * d[28] * d[44] * d[45] + 2 * d[5] * d[30] * d[44] * d[45] - 2 * d[1] * d[31] * d[44] * d[45] + 2 * d[3] * d[32] * d[44] * d[45] + d[29] * d[37] * std::pow(d[45], 2) + d[28] * d[38] * std::pow(d[45], 2) - 2 * d[32] * d[41] * std::pow(d[45], 2) + 2 * d[7] * d[29] * d[36] * d[46] - 2 * d[8] * d[32] * d[36] * d[46] + 2 * d[2] * d[34] * d[36] * d[46] - 2 * d[5] * d[35] * d[36] * d[46] + 2 * d[7] * d[27] * d[38] * d[46] - 2 * d[6] * d[30] * d[38] * d[46] - 2 * d[3] * d[33] * d[38] * d[46] + 2 * d[0] * d[34] * d[38] * d[46] - 2 * d[6] * d[29] * d[39] * d[46] + 2 * d[8] * d[31] * d[39] * d[46] - 2 * d[2] * d[33] * d[39] * d[46] + 2 * d[4] * d[35] * d[39] * d[46] + 2 * d[8] * d[30] * d[40] * d[46] - 4 * d[7] * d[31] * d[40] * d[46] + 2 * d[6] * d[32] * d[40] * d[46] + 2 * d[5] * d[33] * d[40] * d[46] - 4 * d[4] * d[34] * d[40] * d[46] + 2 * d[3] * d[35] * d[40] * d[46] - 2 * d[8] * d[27] * d[41] * d[46] + 2 * d[6] * d[31] * d[41] * d[46] + 2 * d[4] * d[33] * d[41] * d[46] - 2 * d[0] * d[35] * d[41] * d[46] - 2 * d[3] * d[29] * d[42] * d[46] - 2 * d[2] * d[30] * d[42] * d[46] + 2 * d[5] * d[31] * d[42] * d[46] + 2 * d[4] * d[32] * d[42] * d[46] + 2 * d[2] * d[27] * d[43] * d[46] + 2 * d[0] * d[29] * d[43] * d[46] - 4 * d[4] * d[31] * d[43] * d[46] - 2 * d[5] * d[27] * d[44] * d[46] + 2 * d[4] * d[30] * d[44] * d[46] + 2 * d[3] * d[31] * d[44] * d[46] - 2 * d[0] * d[32] * d[44] * d[46] - 2 * d[30] * d[38] * d[45] * d[46] - 2 * d[29] * d[39] * d[45] * d[46] + 2 * d[32] * d[40] * d[45] * d[46] + 2 * d[31] * d[41] * d[45] * d[46] + d[29] * d[36] * std::pow(d[46], 2) + d[27] * d[38] * std::pow(d[46], 2) - 2 * d[31] * d[40] * std::pow(d[46], 2) + 2 * d[8] * d[28] * d[36] * d[47] - 2 * d[7] * d[32] * d[36] * d[47] - 2 * d[5] * d[34] * d[36] * d[47] + 2 * d[1] * d[35] * d[36] * d[47] + 2 * d[8] * d[27] * d[37] * d[47] - 2 * d[6] * d[31] * d[37] * d[47] - 2 * d[4] * d[33] * d[37] * d[47] + 2 * d[0] * d[35] * d[37] * d[47] - 4 * d[8] * d[30] * d[39] * d[47] + 2 * d[7] * d[31] * d[39] * d[47] + 2 * d[6] * d[32] * d[39] * d[47] + 2 * d[5] * d[33] * d[39] * d[47] + 2 * d[4] * d[34] * d[39] * d[47] - 4 * d[3] * d[35] * d[39] * d[47] - 2 * d[6] * d[28] * d[40] * d[47] + 2 * d[7] * d[30] * d[40] * d[47] - 2 * d[1] * d[33] * d[40] * d[47] + 2 * d[3] * d[34] * d[40] * d[47] - 2 * d[7] * d[27] * d[41] * d[47] + 2 * d[6] * d[30] * d[41] * d[47] + 2 * d[3] * d[33] * d[41] * d[47] - 2 * d[0] * d[34] * d[41] * d[47] - 2 * d[4] * d[28] * d[42] * d[47] + 2 * d[5] * d[30] * d[42] * d[47] - 2 * d[1] * d[31] * d[42] * d[47] + 2 * d[3] * d[32] * d[42] * d[47] - 2 * d[5] * d[27] * d[43] * d[47] + 2 * d[4] * d[30] * d[43] * d[47] + 2 * d[3] * d[31] * d[43] * d[47] - 2 * d[0] * d[32] * d[43] * d[47] + 2 * d[1] * d[27] * d[44] * d[47] + 2 * d[0] * d[28] * d[44] * d[47] - 4 * d[3] * d[30] * d[44] * d[47] - 2 * d[31] * d[37] * d[45] * d[47] + 2 * d[32] * d[39] * d[45] * d[47] - 2 * d[28] * d[40] * d[45] * d[47] + 2 * d[30] * d[41] * d[45] * d[47] - 2 * d[32] * d[36] * d[46] * d[47] + 2 * d[31] * d[39] * d[46] * d[47] + 2 * d[30] * d[40] * d[46] * d[47] - 2 * d[27] * d[41] * d[46] * d[47] + d[28] * d[36] * std::pow(d[47], 2) + d[27] * d[37] * std::pow(d[47], 2) - 2 * d[30] * d[39] * std::pow(d[47], 2) - d[2] * d[28] * d[36] * d[57] - d[1] * d[29] * d[36] * d[57] + 2 * d[5] * d[32] * d[36] * d[57] - d[2] * d[27] * d[37] * d[57] - d[0] * d[29] * d[37] * d[57] + 2 * d[4] * d[31] * d[37] * d[57] - d[1] * d[27] * d[38] * d[57] - d[0] * d[28] * d[38] * d[57] + 2 * d[3] * d[30] * d[38] * d[57] + 2 * d[3] * d[29] * d[39] * d[57] + 2 * d[2] * d[30] * d[39] * d[57] - 2 * d[5] * d[31] * d[39] * d[57] - 2 * d[4] * d[32] * d[39] * d[57] + 2 * d[4] * d[28] * d[40] * d[57] - 2 * d[5] * d[30] * d[40] * d[57] + 2 * d[1] * d[31] * d[40] * d[57] - 2 * d[3] * d[32] * d[40] * d[57] + 2 * d[5] * d[27] * d[41] * d[57] - 2 * d[4] * d[30] * d[41] * d[57] - 2 * d[3] * d[31] * d[41] * d[57] + 2 * d[0] * d[32] * d[41] * d[57];
    coeffs[29] = 2 * d[6] * d[37] * d[38] * d[45] - 2 * d[7] * d[38] * d[39] * d[45] - 2 * d[8] * d[37] * d[40] * d[45] + 2 * d[8] * d[39] * d[41] * d[45] + 2 * d[7] * d[40] * d[41] * d[45] - 2 * d[6] * std::pow(d[41], 2) * d[45] + 2 * d[2] * d[37] * d[42] * d[45] + 2 * d[1] * d[38] * d[42] * d[45] - 4 * d[5] * d[41] * d[42] * d[45] - 2 * d[3] * d[38] * d[43] * d[45] - 2 * d[2] * d[39] * d[43] * d[45] + 2 * d[5] * d[40] * d[43] * d[45] + 2 * d[4] * d[41] * d[43] * d[45] - 2 * d[4] * d[37] * d[44] * d[45] + 2 * d[5] * d[39] * d[44] * d[45] - 2 * d[1] * d[40] * d[44] * d[45] + 2 * d[3] * d[41] * d[44] * d[45] + d[37] * d[38] * std::pow(d[45], 2) - std::pow(d[41], 2) * std::pow(d[45], 2) + 2 * d[7] * d[36] * d[38] * d[46] - 2 * d[6] * d[38] * d[39] * d[46] + 2 * d[8] * d[39] * d[40] * d[46] - 2 * d[7] * std::pow(d[40], 2) * d[46] - 2 * d[8] * d[36] * d[41] * d[46] + 2 * d[6] * d[40] * d[41] * d[46] - 2 * d[3] * d[38] * d[42] * d[46] - 2 * d[2] * d[39] * d[42] * d[46] + 2 * d[5] * d[40] * d[42] * d[46] + 2 * d[4] * d[41] * d[42] * d[46] + 2 * d[2] * d[36] * d[43] * d[46] + 2 * d[0] * d[38] * d[43] * d[46] - 4 * d[4] * d[40] * d[43] * d[46] - 2 * d[5] * d[36] * d[44] * d[46] + 2 * d[4] * d[39] * d[44] * d[46] + 2 * d[3] * d[40] * d[44] * d[46] - 2 * d[0] * d[41] * d[44] * d[46] - 2 * d[38] * d[39] * d[45] * d[46] + 2 * d[40] * d[41] * d[45] * d[46] + d[36] * d[38] * std::pow(d[46], 2) - std::pow(d[40], 2) * std::pow(d[46], 2) + 2 * d[8] * d[36] * d[37] * d[47] - 2 * d[8] * std::pow(d[39], 2) * d[47] - 2 * d[6] * d[37] * d[40] * d[47] + 2 * d[7] * d[39] * d[40] * d[47] - 2 * d[7] * d[36] * d[41] * d[47] + 2 * d[6] * d[39] * d[41] * d[47] - 2 * d[4] * d[37] * d[42] * d[47] + 2 * d[5] * d[39] * d[42] * d[47] - 2 * d[1] * d[40] * d[42] * d[47] + 2 * d[3] * d[41] * d[42] * d[47] - 2 * d[5] * d[36] * d[43] * d[47] + 2 * d[4] * d[39] * d[43] * d[47] + 2 * d[3] * d[40] * d[43] * d[47] - 2 * d[0] * d[41] * d[43] * d[47] + 2 * d[1] * d[36] * d[44] * d[47] + 2 * d[0] * d[37] * d[44] * d[47] - 4 * d[3] * d[39] * d[44] * d[47] - 2 * d[37] * d[40] * d[45] * d[47] + 2 * d[39] * d[41] * d[45] * d[47] + 2 * d[39] * d[40] * d[46] * d[47] - 2 * d[36] * d[41] * d[46] * d[47] + d[36] * d[37] * std::pow(d[47], 2) - std::pow(d[39], 2) * std::pow(d[47], 2) - d[2] * d[36] * d[37] * d[57] - d[1] * d[36] * d[38] * d[57] - d[0] * d[37] * d[38] * d[57] + 2 * d[3] * d[38] * d[39] * d[57] + d[2] * std::pow(d[39], 2) * d[57] + 2 * d[4] * d[37] * d[40] * d[57] - 2 * d[5] * d[39] * d[40] * d[57] + d[1] * std::pow(d[40], 2) * d[57] + 2 * d[5] * d[36] * d[41] * d[57] - 2 * d[4] * d[39] * d[41] * d[57] - 2 * d[3] * d[40] * d[41] * d[57] + d[0] * std::pow(d[41], 2) * d[57];
    coeffs[30] = 2 * d[2] * d[6] * d[10] * d[45] - 2 * d[4] * d[8] * d[10] * d[45] + 2 * d[1] * d[6] * d[11] * d[45] - 2 * d[3] * d[7] * d[11] * d[45] - 2 * d[2] * d[7] * d[12] * d[45] + 2 * d[5] * d[8] * d[12] * d[45] + 2 * d[5] * d[7] * d[13] * d[45] - 2 * d[1] * d[8] * d[13] * d[45] - 4 * d[5] * d[6] * d[14] * d[45] + 2 * d[4] * d[7] * d[14] * d[45] + 2 * d[3] * d[8] * d[14] * d[45] + 2 * d[1] * d[2] * d[15] * d[45] - 2 * std::pow(d[5], 2) * d[15] * d[45] - 2 * d[2] * d[3] * d[16] * d[45] + 2 * d[4] * d[5] * d[16] * d[45] - 2 * d[1] * d[4] * d[17] * d[45] + 2 * d[3] * d[5] * d[17] * d[45] + d[2] * d[10] * std::pow(d[45], 2) + d[1] * d[11] * std::pow(d[45], 2) - 2 * d[5] * d[14] * std::pow(d[45], 2) + 2 * d[2] * d[7] * d[9] * d[46] - 2 * d[5] * d[8] * d[9] * d[46] - 2 * d[3] * d[6] * d[11] * d[46] + 2 * d[0] * d[7] * d[11] * d[46] - 2 * d[2] * d[6] * d[12] * d[46] + 2 * d[4] * d[8] * d[12] * d[46] + 2 * d[5] * d[6] * d[13] * d[46] - 4 * d[4] * d[7] * d[13] * d[46] + 2 * d[3] * d[8] * d[13] * d[46] + 2 * d[4] * d[6] * d[14] * d[46] - 2 * d[0] * d[8] * d[14] * d[46] - 2 * d[2] * d[3] * d[15] * d[46] + 2 * d[4] * d[5] * d[15] * d[46] + 2 * d[0] * d[2] * d[16] * d[46] - 2 * std::pow(d[4], 2) * d[16] * d[46] + 2 * d[3] * d[4] * d[17] * d[46] - 2 * d[0] * d[5] * d[17] * d[46] - 2 * d[3] * d[11] * d[45] * d[46] - 2 * d[2] * d[12] * d[45] * d[46] + 2 * d[5] * d[13] * d[45] * d[46] + 2 * d[4] * d[14] * d[45] * d[46] + d[2] * d[9] * std::pow(d[46], 2) + d[0] * d[11] * std::pow(d[46], 2) - 2 * d[4] * d[13] * std::pow(d[46], 2) - 2 * d[5] * d[7] * d[9] * d[47] + 2 * d[1] * d[8] * d[9] * d[47] - 2 * d[4] * d[6] * d[10] * d[47] + 2 * d[0] * d[8] * d[10] * d[47] + 2 * d[5] * d[6] * d[12] * d[47] + 2 * d[4] * d[7] * d[12] * d[47] - 4 * d[3] * d[8] * d[12] * d[47] - 2 * d[1] * d[6] * d[13] * d[47] + 2 * d[3] * d[7] * d[13] * d[47] + 2 * d[3] * d[6] * d[14] * d[47] - 2 * d[0] * d[7] * d[14] * d[47] - 2 * d[1] * d[4] * d[15] * d[47] + 2 * d[3] * d[5] * d[15] * d[47] + 2 * d[3] * d[4] * d[16] * d[47] - 2 * d[0] * d[5] * d[16] * d[47] + 2 * d[0] * d[1] * d[17] * d[47] - 2 * std::pow(d[3], 2) * d[17] * d[47] - 2 * d[4] * d[10] * d[45] * d[47] + 2 * d[5] * d[12] * d[45] * d[47] - 2 * d[1] * d[13] * d[45] * d[47] + 2 * d[3] * d[14] * d[45] * d[47] - 2 * d[5] * d[9] * d[46] * d[47] + 2 * d[4] * d[12] * d[46] * d[47] + 2 * d[3] * d[13] * d[46] * d[47] - 2 * d[0] * d[14] * d[46] * d[47] + d[1] * d[9] * std::pow(d[47], 2) + d[0] * d[10] * std::pow(d[47], 2) - 2 * d[3] * d[12] * std::pow(d[47], 2) - d[1] * d[2] * d[9] * d[57] + std::pow(d[5], 2) * d[9] * d[57] - d[0] * d[2] * d[10] * d[57] + std::pow(d[4], 2) * d[10] * d[57] - d[0] * d[1] * d[11] * d[57] + std::pow(d[3], 2) * d[11] * d[57] + 2 * d[2] * d[3] * d[12] * d[57] - 2 * d[4] * d[5] * d[12] * d[57] + 2 * d[1] * d[4] * d[13] * d[57] - 2 * d[3] * d[5] * d[13] * d[57] - 2 * d[3] * d[4] * d[14] * d[57] + 2 * d[0] * d[5] * d[14] * d[57];
    coeffs[31] = 2 * d[2] * d[6] * d[19] * d[45] - 2 * d[4] * d[8] * d[19] * d[45] + 2 * d[1] * d[6] * d[20] * d[45] - 2 * d[3] * d[7] * d[20] * d[45] - 2 * d[2] * d[7] * d[21] * d[45] + 2 * d[5] * d[8] * d[21] * d[45] + 2 * d[5] * d[7] * d[22] * d[45] - 2 * d[1] * d[8] * d[22] * d[45] - 4 * d[5] * d[6] * d[23] * d[45] + 2 * d[4] * d[7] * d[23] * d[45] + 2 * d[3] * d[8] * d[23] * d[45] + 2 * d[1] * d[2] * d[24] * d[45] - 2 * std::pow(d[5], 2) * d[24] * d[45] - 2 * d[2] * d[3] * d[25] * d[45] + 2 * d[4] * d[5] * d[25] * d[45] - 2 * d[1] * d[4] * d[26] * d[45] + 2 * d[3] * d[5] * d[26] * d[45] + d[2] * d[19] * std::pow(d[45], 2) + d[1] * d[20] * std::pow(d[45], 2) - 2 * d[5] * d[23] * std::pow(d[45], 2) + 2 * d[2] * d[7] * d[18] * d[46] - 2 * d[5] * d[8] * d[18] * d[46] - 2 * d[3] * d[6] * d[20] * d[46] + 2 * d[0] * d[7] * d[20] * d[46] - 2 * d[2] * d[6] * d[21] * d[46] + 2 * d[4] * d[8] * d[21] * d[46] + 2 * d[5] * d[6] * d[22] * d[46] - 4 * d[4] * d[7] * d[22] * d[46] + 2 * d[3] * d[8] * d[22] * d[46] + 2 * d[4] * d[6] * d[23] * d[46] - 2 * d[0] * d[8] * d[23] * d[46] - 2 * d[2] * d[3] * d[24] * d[46] + 2 * d[4] * d[5] * d[24] * d[46] + 2 * d[0] * d[2] * d[25] * d[46] - 2 * std::pow(d[4], 2) * d[25] * d[46] + 2 * d[3] * d[4] * d[26] * d[46] - 2 * d[0] * d[5] * d[26] * d[46] - 2 * d[3] * d[20] * d[45] * d[46] - 2 * d[2] * d[21] * d[45] * d[46] + 2 * d[5] * d[22] * d[45] * d[46] + 2 * d[4] * d[23] * d[45] * d[46] + d[2] * d[18] * std::pow(d[46], 2) + d[0] * d[20] * std::pow(d[46], 2) - 2 * d[4] * d[22] * std::pow(d[46], 2) - 2 * d[5] * d[7] * d[18] * d[47] + 2 * d[1] * d[8] * d[18] * d[47] - 2 * d[4] * d[6] * d[19] * d[47] + 2 * d[0] * d[8] * d[19] * d[47] + 2 * d[5] * d[6] * d[21] * d[47] + 2 * d[4] * d[7] * d[21] * d[47] - 4 * d[3] * d[8] * d[21] * d[47] - 2 * d[1] * d[6] * d[22] * d[47] + 2 * d[3] * d[7] * d[22] * d[47] + 2 * d[3] * d[6] * d[23] * d[47] - 2 * d[0] * d[7] * d[23] * d[47] - 2 * d[1] * d[4] * d[24] * d[47] + 2 * d[3] * d[5] * d[24] * d[47] + 2 * d[3] * d[4] * d[25] * d[47] - 2 * d[0] * d[5] * d[25] * d[47] + 2 * d[0] * d[1] * d[26] * d[47] - 2 * std::pow(d[3], 2) * d[26] * d[47] - 2 * d[4] * d[19] * d[45] * d[47] + 2 * d[5] * d[21] * d[45] * d[47] - 2 * d[1] * d[22] * d[45] * d[47] + 2 * d[3] * d[23] * d[45] * d[47] - 2 * d[5] * d[18] * d[46] * d[47] + 2 * d[4] * d[21] * d[46] * d[47] + 2 * d[3] * d[22] * d[46] * d[47] - 2 * d[0] * d[23] * d[46] * d[47] + d[1] * d[18] * std::pow(d[47], 2) + d[0] * d[19] * std::pow(d[47], 2) - 2 * d[3] * d[21] * std::pow(d[47], 2) - d[1] * d[2] * d[18] * d[57] + std::pow(d[5], 2) * d[18] * d[57] - d[0] * d[2] * d[19] * d[57] + std::pow(d[4], 2) * d[19] * d[57] - d[0] * d[1] * d[20] * d[57] + std::pow(d[3], 2) * d[20] * d[57] + 2 * d[2] * d[3] * d[21] * d[57] - 2 * d[4] * d[5] * d[21] * d[57] + 2 * d[1] * d[4] * d[22] * d[57] - 2 * d[3] * d[5] * d[22] * d[57] - 2 * d[3] * d[4] * d[23] * d[57] + 2 * d[0] * d[5] * d[23] * d[57];
    coeffs[32] = 2 * d[2] * d[6] * d[28] * d[45] - 2 * d[4] * d[8] * d[28] * d[45] + 2 * d[1] * d[6] * d[29] * d[45] - 2 * d[3] * d[7] * d[29] * d[45] - 2 * d[2] * d[7] * d[30] * d[45] + 2 * d[5] * d[8] * d[30] * d[45] + 2 * d[5] * d[7] * d[31] * d[45] - 2 * d[1] * d[8] * d[31] * d[45] - 4 * d[5] * d[6] * d[32] * d[45] + 2 * d[4] * d[7] * d[32] * d[45] + 2 * d[3] * d[8] * d[32] * d[45] + 2 * d[1] * d[2] * d[33] * d[45] - 2 * std::pow(d[5], 2) * d[33] * d[45] - 2 * d[2] * d[3] * d[34] * d[45] + 2 * d[4] * d[5] * d[34] * d[45] - 2 * d[1] * d[4] * d[35] * d[45] + 2 * d[3] * d[5] * d[35] * d[45] + d[2] * d[28] * std::pow(d[45], 2) + d[1] * d[29] * std::pow(d[45], 2) - 2 * d[5] * d[32] * std::pow(d[45], 2) + 2 * d[2] * d[7] * d[27] * d[46] - 2 * d[5] * d[8] * d[27] * d[46] - 2 * d[3] * d[6] * d[29] * d[46] + 2 * d[0] * d[7] * d[29] * d[46] - 2 * d[2] * d[6] * d[30] * d[46] + 2 * d[4] * d[8] * d[30] * d[46] + 2 * d[5] * d[6] * d[31] * d[46] - 4 * d[4] * d[7] * d[31] * d[46] + 2 * d[3] * d[8] * d[31] * d[46] + 2 * d[4] * d[6] * d[32] * d[46] - 2 * d[0] * d[8] * d[32] * d[46] - 2 * d[2] * d[3] * d[33] * d[46] + 2 * d[4] * d[5] * d[33] * d[46] + 2 * d[0] * d[2] * d[34] * d[46] - 2 * std::pow(d[4], 2) * d[34] * d[46] + 2 * d[3] * d[4] * d[35] * d[46] - 2 * d[0] * d[5] * d[35] * d[46] - 2 * d[3] * d[29] * d[45] * d[46] - 2 * d[2] * d[30] * d[45] * d[46] + 2 * d[5] * d[31] * d[45] * d[46] + 2 * d[4] * d[32] * d[45] * d[46] + d[2] * d[27] * std::pow(d[46], 2) + d[0] * d[29] * std::pow(d[46], 2) - 2 * d[4] * d[31] * std::pow(d[46], 2) - 2 * d[5] * d[7] * d[27] * d[47] + 2 * d[1] * d[8] * d[27] * d[47] - 2 * d[4] * d[6] * d[28] * d[47] + 2 * d[0] * d[8] * d[28] * d[47] + 2 * d[5] * d[6] * d[30] * d[47] + 2 * d[4] * d[7] * d[30] * d[47] - 4 * d[3] * d[8] * d[30] * d[47] - 2 * d[1] * d[6] * d[31] * d[47] + 2 * d[3] * d[7] * d[31] * d[47] + 2 * d[3] * d[6] * d[32] * d[47] - 2 * d[0] * d[7] * d[32] * d[47] - 2 * d[1] * d[4] * d[33] * d[47] + 2 * d[3] * d[5] * d[33] * d[47] + 2 * d[3] * d[4] * d[34] * d[47] - 2 * d[0] * d[5] * d[34] * d[47] + 2 * d[0] * d[1] * d[35] * d[47] - 2 * std::pow(d[3], 2) * d[35] * d[47] - 2 * d[4] * d[28] * d[45] * d[47] + 2 * d[5] * d[30] * d[45] * d[47] - 2 * d[1] * d[31] * d[45] * d[47] + 2 * d[3] * d[32] * d[45] * d[47] - 2 * d[5] * d[27] * d[46] * d[47] + 2 * d[4] * d[30] * d[46] * d[47] + 2 * d[3] * d[31] * d[46] * d[47] - 2 * d[0] * d[32] * d[46] * d[47] + d[1] * d[27] * std::pow(d[47], 2) + d[0] * d[28] * std::pow(d[47], 2) - 2 * d[3] * d[30] * std::pow(d[47], 2) - d[1] * d[2] * d[27] * d[57] + std::pow(d[5], 2) * d[27] * d[57] - d[0] * d[2] * d[28] * d[57] + std::pow(d[4], 2) * d[28] * d[57] - d[0] * d[1] * d[29] * d[57] + std::pow(d[3], 2) * d[29] * d[57] + 2 * d[2] * d[3] * d[30] * d[57] - 2 * d[4] * d[5] * d[30] * d[57] + 2 * d[1] * d[4] * d[31] * d[57] - 2 * d[3] * d[5] * d[31] * d[57] - 2 * d[3] * d[4] * d[32] * d[57] + 2 * d[0] * d[5] * d[32] * d[57];
    coeffs[33] = 2 * d[2] * d[6] * d[37] * d[45] - 2 * d[4] * d[8] * d[37] * d[45] + 2 * d[1] * d[6] * d[38] * d[45] - 2 * d[3] * d[7] * d[38] * d[45] - 2 * d[2] * d[7] * d[39] * d[45] + 2 * d[5] * d[8] * d[39] * d[45] + 2 * d[5] * d[7] * d[40] * d[45] - 2 * d[1] * d[8] * d[40] * d[45] - 4 * d[5] * d[6] * d[41] * d[45] + 2 * d[4] * d[7] * d[41] * d[45] + 2 * d[3] * d[8] * d[41] * d[45] + 2 * d[1] * d[2] * d[42] * d[45] - 2 * std::pow(d[5], 2) * d[42] * d[45] - 2 * d[2] * d[3] * d[43] * d[45] + 2 * d[4] * d[5] * d[43] * d[45] - 2 * d[1] * d[4] * d[44] * d[45] + 2 * d[3] * d[5] * d[44] * d[45] + d[2] * d[37] * std::pow(d[45], 2) + d[1] * d[38] * std::pow(d[45], 2) - 2 * d[5] * d[41] * std::pow(d[45], 2) + 2 * d[2] * d[7] * d[36] * d[46] - 2 * d[5] * d[8] * d[36] * d[46] - 2 * d[3] * d[6] * d[38] * d[46] + 2 * d[0] * d[7] * d[38] * d[46] - 2 * d[2] * d[6] * d[39] * d[46] + 2 * d[4] * d[8] * d[39] * d[46] + 2 * d[5] * d[6] * d[40] * d[46] - 4 * d[4] * d[7] * d[40] * d[46] + 2 * d[3] * d[8] * d[40] * d[46] + 2 * d[4] * d[6] * d[41] * d[46] - 2 * d[0] * d[8] * d[41] * d[46] - 2 * d[2] * d[3] * d[42] * d[46] + 2 * d[4] * d[5] * d[42] * d[46] + 2 * d[0] * d[2] * d[43] * d[46] - 2 * std::pow(d[4], 2) * d[43] * d[46] + 2 * d[3] * d[4] * d[44] * d[46] - 2 * d[0] * d[5] * d[44] * d[46] - 2 * d[3] * d[38] * d[45] * d[46] - 2 * d[2] * d[39] * d[45] * d[46] + 2 * d[5] * d[40] * d[45] * d[46] + 2 * d[4] * d[41] * d[45] * d[46] + d[2] * d[36] * std::pow(d[46], 2) + d[0] * d[38] * std::pow(d[46], 2) - 2 * d[4] * d[40] * std::pow(d[46], 2) - 2 * d[5] * d[7] * d[36] * d[47] + 2 * d[1] * d[8] * d[36] * d[47] - 2 * d[4] * d[6] * d[37] * d[47] + 2 * d[0] * d[8] * d[37] * d[47] + 2 * d[5] * d[6] * d[39] * d[47] + 2 * d[4] * d[7] * d[39] * d[47] - 4 * d[3] * d[8] * d[39] * d[47] - 2 * d[1] * d[6] * d[40] * d[47] + 2 * d[3] * d[7] * d[40] * d[47] + 2 * d[3] * d[6] * d[41] * d[47] - 2 * d[0] * d[7] * d[41] * d[47] - 2 * d[1] * d[4] * d[42] * d[47] + 2 * d[3] * d[5] * d[42] * d[47] + 2 * d[3] * d[4] * d[43] * d[47] - 2 * d[0] * d[5] * d[43] * d[47] + 2 * d[0] * d[1] * d[44] * d[47] - 2 * std::pow(d[3], 2) * d[44] * d[47] - 2 * d[4] * d[37] * d[45] * d[47] + 2 * d[5] * d[39] * d[45] * d[47] - 2 * d[1] * d[40] * d[45] * d[47] + 2 * d[3] * d[41] * d[45] * d[47] - 2 * d[5] * d[36] * d[46] * d[47] + 2 * d[4] * d[39] * d[46] * d[47] + 2 * d[3] * d[40] * d[46] * d[47] - 2 * d[0] * d[41] * d[46] * d[47] + d[1] * d[36] * std::pow(d[47], 2) + d[0] * d[37] * std::pow(d[47], 2) - 2 * d[3] * d[39] * std::pow(d[47], 2) - d[1] * d[2] * d[36] * d[57] + std::pow(d[5], 2) * d[36] * d[57] - d[0] * d[2] * d[37] * d[57] + std::pow(d[4], 2) * d[37] * d[57] - d[0] * d[1] * d[38] * d[57] + std::pow(d[3], 2) * d[38] * d[57] + 2 * d[2] * d[3] * d[39] * d[57] - 2 * d[4] * d[5] * d[39] * d[57] + 2 * d[1] * d[4] * d[40] * d[57] - 2 * d[3] * d[5] * d[40] * d[57] - 2 * d[3] * d[4] * d[41] * d[57] + 2 * d[0] * d[5] * d[41] * d[57];
    coeffs[34] = 2 * d[1] * d[2] * d[6] * d[45] - 2 * std::pow(d[5], 2) * d[6] * d[45] - 2 * d[2] * d[3] * d[7] * d[45] + 2 * d[4] * d[5] * d[7] * d[45] - 2 * d[1] * d[4] * d[8] * d[45] + 2 * d[3] * d[5] * d[8] * d[45] + d[1] * d[2] * std::pow(d[45], 2) - std::pow(d[5], 2) * std::pow(d[45], 2) - 2 * d[2] * d[3] * d[6] * d[46] + 2 * d[4] * d[5] * d[6] * d[46] + 2 * d[0] * d[2] * d[7] * d[46] - 2 * std::pow(d[4], 2) * d[7] * d[46] + 2 * d[3] * d[4] * d[8] * d[46] - 2 * d[0] * d[5] * d[8] * d[46] - 2 * d[2] * d[3] * d[45] * d[46] + 2 * d[4] * d[5] * d[45] * d[46] + d[0] * d[2] * std::pow(d[46], 2) - std::pow(d[4], 2) * std::pow(d[46], 2) - 2 * d[1] * d[4] * d[6] * d[47] + 2 * d[3] * d[5] * d[6] * d[47] + 2 * d[3] * d[4] * d[7] * d[47] - 2 * d[0] * d[5] * d[7] * d[47] + 2 * d[0] * d[1] * d[8] * d[47] - 2 * std::pow(d[3], 2) * d[8] * d[47] - 2 * d[1] * d[4] * d[45] * d[47] + 2 * d[3] * d[5] * d[45] * d[47] + 2 * d[3] * d[4] * d[46] * d[47] - 2 * d[0] * d[5] * d[46] * d[47] + d[0] * d[1] * std::pow(d[47], 2) - std::pow(d[3], 2) * std::pow(d[47], 2) - d[0] * d[1] * d[2] * d[57] + d[2] * std::pow(d[3], 2) * d[57] + d[1] * std::pow(d[4], 2) * d[57] - 2 * d[3] * d[4] * d[5] * d[57] + d[0] * std::pow(d[5], 2) * d[57];
    coeffs[35] = 2 * d[10] * d[11] * d[15] * d[48] - 2 * std::pow(d[14], 2) * d[15] * d[48] - 2 * d[11] * d[12] * d[16] * d[48] + 2 * d[13] * d[14] * d[16] * d[48] - 2 * d[10] * d[13] * d[17] * d[48] + 2 * d[12] * d[14] * d[17] * d[48] - 2 * d[11] * d[12] * d[15] * d[49] + 2 * d[13] * d[14] * d[15] * d[49] + 2 * d[9] * d[11] * d[16] * d[49] - 2 * std::pow(d[13], 2) * d[16] * d[49] + 2 * d[12] * d[13] * d[17] * d[49] - 2 * d[9] * d[14] * d[17] * d[49] - 2 * d[10] * d[13] * d[15] * d[50] + 2 * d[12] * d[14] * d[15] * d[50] + 2 * d[12] * d[13] * d[16] * d[50] - 2 * d[9] * d[14] * d[16] * d[50] + 2 * d[9] * d[10] * d[17] * d[50] - 2 * std::pow(d[12], 2) * d[17] * d[50] - d[9] * d[10] * d[11] * d[58] + d[11] * std::pow(d[12], 2) * d[58] + d[10] * std::pow(d[13], 2) * d[58] - 2 * d[12] * d[13] * d[14] * d[58] + d[9] * std::pow(d[14], 2) * d[58];
    coeffs[36] = 2 * d[11] * d[15] * d[19] * d[48] - 2 * d[13] * d[17] * d[19] * d[48] + 2 * d[10] * d[15] * d[20] * d[48] - 2 * d[12] * d[16] * d[20] * d[48] - 2 * d[11] * d[16] * d[21] * d[48] + 2 * d[14] * d[17] * d[21] * d[48] + 2 * d[14] * d[16] * d[22] * d[48] - 2 * d[10] * d[17] * d[22] * d[48] - 4 * d[14] * d[15] * d[23] * d[48] + 2 * d[13] * d[16] * d[23] * d[48] + 2 * d[12] * d[17] * d[23] * d[48] + 2 * d[10] * d[11] * d[24] * d[48] - 2 * std::pow(d[14], 2) * d[24] * d[48] - 2 * d[11] * d[12] * d[25] * d[48] + 2 * d[13] * d[14] * d[25] * d[48] - 2 * d[10] * d[13] * d[26] * d[48] + 2 * d[12] * d[14] * d[26] * d[48] + 2 * d[11] * d[16] * d[18] * d[49] - 2 * d[14] * d[17] * d[18] * d[49] - 2 * d[12] * d[15] * d[20] * d[49] + 2 * d[9] * d[16] * d[20] * d[49] - 2 * d[11] * d[15] * d[21] * d[49] + 2 * d[13] * d[17] * d[21] * d[49] + 2 * d[14] * d[15] * d[22] * d[49] - 4 * d[13] * d[16] * d[22] * d[49] + 2 * d[12] * d[17] * d[22] * d[49] + 2 * d[13] * d[15] * d[23] * d[49] - 2 * d[9] * d[17] * d[23] * d[49] - 2 * d[11] * d[12] * d[24] * d[49] + 2 * d[13] * d[14] * d[24] * d[49] + 2 * d[9] * d[11] * d[25] * d[49] - 2 * std::pow(d[13], 2) * d[25] * d[49] + 2 * d[12] * d[13] * d[26] * d[49] - 2 * d[9] * d[14] * d[26] * d[49] - 2 * d[14] * d[16] * d[18] * d[50] + 2 * d[10] * d[17] * d[18] * d[50] - 2 * d[13] * d[15] * d[19] * d[50] + 2 * d[9] * d[17] * d[19] * d[50] + 2 * d[14] * d[15] * d[21] * d[50] + 2 * d[13] * d[16] * d[21] * d[50] - 4 * d[12] * d[17] * d[21] * d[50] - 2 * d[10] * d[15] * d[22] * d[50] + 2 * d[12] * d[16] * d[22] * d[50] + 2 * d[12] * d[15] * d[23] * d[50] - 2 * d[9] * d[16] * d[23] * d[50] - 2 * d[10] * d[13] * d[24] * d[50] + 2 * d[12] * d[14] * d[24] * d[50] + 2 * d[12] * d[13] * d[25] * d[50] - 2 * d[9] * d[14] * d[25] * d[50] + 2 * d[9] * d[10] * d[26] * d[50] - 2 * std::pow(d[12], 2) * d[26] * d[50] - d[10] * d[11] * d[18] * d[58] + std::pow(d[14], 2) * d[18] * d[58] - d[9] * d[11] * d[19] * d[58] + std::pow(d[13], 2) * d[19] * d[58] - d[9] * d[10] * d[20] * d[58] + std::pow(d[12], 2) * d[20] * d[58] + 2 * d[11] * d[12] * d[21] * d[58] - 2 * d[13] * d[14] * d[21] * d[58] + 2 * d[10] * d[13] * d[22] * d[58] - 2 * d[12] * d[14] * d[22] * d[58] - 2 * d[12] * d[13] * d[23] * d[58] + 2 * d[9] * d[14] * d[23] * d[58];
    coeffs[37] = 2 * d[15] * d[19] * d[20] * d[48] - 2 * d[16] * d[20] * d[21] * d[48] - 2 * d[17] * d[19] * d[22] * d[48] + 2 * d[17] * d[21] * d[23] * d[48] + 2 * d[16] * d[22] * d[23] * d[48] - 2 * d[15] * std::pow(d[23], 2) * d[48] + 2 * d[11] * d[19] * d[24] * d[48] + 2 * d[10] * d[20] * d[24] * d[48] - 4 * d[14] * d[23] * d[24] * d[48] - 2 * d[12] * d[20] * d[25] * d[48] - 2 * d[11] * d[21] * d[25] * d[48] + 2 * d[14] * d[22] * d[25] * d[48] + 2 * d[13] * d[23] * d[25] * d[48] - 2 * d[13] * d[19] * d[26] * d[48] + 2 * d[14] * d[21] * d[26] * d[48] - 2 * d[10] * d[22] * d[26] * d[48] + 2 * d[12] * d[23] * d[26] * d[48] + 2 * d[16] * d[18] * d[20] * d[49] - 2 * d[15] * d[20] * d[21] * d[49] + 2 * d[17] * d[21] * d[22] * d[49] - 2 * d[16] * std::pow(d[22], 2) * d[49] - 2 * d[17] * d[18] * d[23] * d[49] + 2 * d[15] * d[22] * d[23] * d[49] - 2 * d[12] * d[20] * d[24] * d[49] - 2 * d[11] * d[21] * d[24] * d[49] + 2 * d[14] * d[22] * d[24] * d[49] + 2 * d[13] * d[23] * d[24] * d[49] + 2 * d[11] * d[18] * d[25] * d[49] + 2 * d[9] * d[20] * d[25] * d[49] - 4 * d[13] * d[22] * d[25] * d[49] - 2 * d[14] * d[18] * d[26] * d[49] + 2 * d[13] * d[21] * d[26] * d[49] + 2 * d[12] * d[22] * d[26] * d[49] - 2 * d[9] * d[23] * d[26] * d[49] + 2 * d[17] * d[18] * d[19] * d[50] - 2 * d[17] * std::pow(d[21], 2) * d[50] - 2 * d[15] * d[19] * d[22] * d[50] + 2 * d[16] * d[21] * d[22] * d[50] - 2 * d[16] * d[18] * d[23] * d[50] + 2 * d[15] * d[21] * d[23] * d[50] - 2 * d[13] * d[19] * d[24] * d[50] + 2 * d[14] * d[21] * d[24] * d[50] - 2 * d[10] * d[22] * d[24] * d[50] + 2 * d[12] * d[23] * d[24] * d[50] - 2 * d[14] * d[18] * d[25] * d[50] + 2 * d[13] * d[21] * d[25] * d[50] + 2 * d[12] * d[22] * d[25] * d[50] - 2 * d[9] * d[23] * d[25] * d[50] + 2 * d[10] * d[18] * d[26] * d[50] + 2 * d[9] * d[19] * d[26] * d[50] - 4 * d[12] * d[21] * d[26] * d[50] - d[11] * d[18] * d[19] * d[58] - d[10] * d[18] * d[20] * d[58] - d[9] * d[19] * d[20] * d[58] + 2 * d[12] * d[20] * d[21] * d[58] + d[11] * std::pow(d[21], 2) * d[58] + 2 * d[13] * d[19] * d[22] * d[58] - 2 * d[14] * d[21] * d[22] * d[58] + d[10] * std::pow(d[22], 2) * d[58] + 2 * d[14] * d[18] * d[23] * d[58] - 2 * d[13] * d[21] * d[23] * d[58] - 2 * d[12] * d[22] * d[23] * d[58] + d[9] * std::pow(d[23], 2) * d[58];
    coeffs[38] = 2 * d[19] * d[20] * d[24] * d[48] - 2 * std::pow(d[23], 2) * d[24] * d[48] - 2 * d[20] * d[21] * d[25] * d[48] + 2 * d[22] * d[23] * d[25] * d[48] - 2 * d[19] * d[22] * d[26] * d[48] + 2 * d[21] * d[23] * d[26] * d[48] - 2 * d[20] * d[21] * d[24] * d[49] + 2 * d[22] * d[23] * d[24] * d[49] + 2 * d[18] * d[20] * d[25] * d[49] - 2 * std::pow(d[22], 2) * d[25] * d[49] + 2 * d[21] * d[22] * d[26] * d[49] - 2 * d[18] * d[23] * d[26] * d[49] - 2 * d[19] * d[22] * d[24] * d[50] + 2 * d[21] * d[23] * d[24] * d[50] + 2 * d[21] * d[22] * d[25] * d[50] - 2 * d[18] * d[23] * d[25] * d[50] + 2 * d[18] * d[19] * d[26] * d[50] - 2 * std::pow(d[21], 2) * d[26] * d[50] - d[18] * d[19] * d[20] * d[58] + d[20] * std::pow(d[21], 2) * d[58] + d[19] * std::pow(d[22], 2) * d[58] - 2 * d[21] * d[22] * d[23] * d[58] + d[18] * std::pow(d[23], 2) * d[58];
    coeffs[39] = 2 * d[11] * d[15] * d[28] * d[48] - 2 * d[13] * d[17] * d[28] * d[48] + 2 * d[10] * d[15] * d[29] * d[48] - 2 * d[12] * d[16] * d[29] * d[48] - 2 * d[11] * d[16] * d[30] * d[48] + 2 * d[14] * d[17] * d[30] * d[48] + 2 * d[14] * d[16] * d[31] * d[48] - 2 * d[10] * d[17] * d[31] * d[48] - 4 * d[14] * d[15] * d[32] * d[48] + 2 * d[13] * d[16] * d[32] * d[48] + 2 * d[12] * d[17] * d[32] * d[48] + 2 * d[10] * d[11] * d[33] * d[48] - 2 * std::pow(d[14], 2) * d[33] * d[48] - 2 * d[11] * d[12] * d[34] * d[48] + 2 * d[13] * d[14] * d[34] * d[48] - 2 * d[10] * d[13] * d[35] * d[48] + 2 * d[12] * d[14] * d[35] * d[48] + 2 * d[11] * d[16] * d[27] * d[49] - 2 * d[14] * d[17] * d[27] * d[49] - 2 * d[12] * d[15] * d[29] * d[49] + 2 * d[9] * d[16] * d[29] * d[49] - 2 * d[11] * d[15] * d[30] * d[49] + 2 * d[13] * d[17] * d[30] * d[49] + 2 * d[14] * d[15] * d[31] * d[49] - 4 * d[13] * d[16] * d[31] * d[49] + 2 * d[12] * d[17] * d[31] * d[49] + 2 * d[13] * d[15] * d[32] * d[49] - 2 * d[9] * d[17] * d[32] * d[49] - 2 * d[11] * d[12] * d[33] * d[49] + 2 * d[13] * d[14] * d[33] * d[49] + 2 * d[9] * d[11] * d[34] * d[49] - 2 * std::pow(d[13], 2) * d[34] * d[49] + 2 * d[12] * d[13] * d[35] * d[49] - 2 * d[9] * d[14] * d[35] * d[49] - 2 * d[14] * d[16] * d[27] * d[50] + 2 * d[10] * d[17] * d[27] * d[50] - 2 * d[13] * d[15] * d[28] * d[50] + 2 * d[9] * d[17] * d[28] * d[50] + 2 * d[14] * d[15] * d[30] * d[50] + 2 * d[13] * d[16] * d[30] * d[50] - 4 * d[12] * d[17] * d[30] * d[50] - 2 * d[10] * d[15] * d[31] * d[50] + 2 * d[12] * d[16] * d[31] * d[50] + 2 * d[12] * d[15] * d[32] * d[50] - 2 * d[9] * d[16] * d[32] * d[50] - 2 * d[10] * d[13] * d[33] * d[50] + 2 * d[12] * d[14] * d[33] * d[50] + 2 * d[12] * d[13] * d[34] * d[50] - 2 * d[9] * d[14] * d[34] * d[50] + 2 * d[9] * d[10] * d[35] * d[50] - 2 * std::pow(d[12], 2) * d[35] * d[50] - d[10] * d[11] * d[27] * d[58] + std::pow(d[14], 2) * d[27] * d[58] - d[9] * d[11] * d[28] * d[58] + std::pow(d[13], 2) * d[28] * d[58] - d[9] * d[10] * d[29] * d[58] + std::pow(d[12], 2) * d[29] * d[58] + 2 * d[11] * d[12] * d[30] * d[58] - 2 * d[13] * d[14] * d[30] * d[58] + 2 * d[10] * d[13] * d[31] * d[58] - 2 * d[12] * d[14] * d[31] * d[58] - 2 * d[12] * d[13] * d[32] * d[58] + 2 * d[9] * d[14] * d[32] * d[58];
    coeffs[40] = 2 * d[15] * d[20] * d[28] * d[48] - 2 * d[17] * d[22] * d[28] * d[48] + 2 * d[11] * d[24] * d[28] * d[48] - 2 * d[13] * d[26] * d[28] * d[48] + 2 * d[15] * d[19] * d[29] * d[48] - 2 * d[16] * d[21] * d[29] * d[48] + 2 * d[10] * d[24] * d[29] * d[48] - 2 * d[12] * d[25] * d[29] * d[48] - 2 * d[16] * d[20] * d[30] * d[48] + 2 * d[17] * d[23] * d[30] * d[48] - 2 * d[11] * d[25] * d[30] * d[48] + 2 * d[14] * d[26] * d[30] * d[48] - 2 * d[17] * d[19] * d[31] * d[48] + 2 * d[16] * d[23] * d[31] * d[48] + 2 * d[14] * d[25] * d[31] * d[48] - 2 * d[10] * d[26] * d[31] * d[48] + 2 * d[17] * d[21] * d[32] * d[48] + 2 * d[16] * d[22] * d[32] * d[48] - 4 * d[15] * d[23] * d[32] * d[48] - 4 * d[14] * d[24] * d[32] * d[48] + 2 * d[13] * d[25] * d[32] * d[48] + 2 * d[12] * d[26] * d[32] * d[48] + 2 * d[11] * d[19] * d[33] * d[48] + 2 * d[10] * d[20] * d[33] * d[48] - 4 * d[14] * d[23] * d[33] * d[48] - 2 * d[12] * d[20] * d[34] * d[48] - 2 * d[11] * d[21] * d[34] * d[48] + 2 * d[14] * d[22] * d[34] * d[48] + 2 * d[13] * d[23] * d[34] * d[48] - 2 * d[13] * d[19] * d[35] * d[48] + 2 * d[14] * d[21] * d[35] * d[48] - 2 * d[10] * d[22] * d[35] * d[48] + 2 * d[12] * d[23] * d[35] * d[48] + 2 * d[16] * d[20] * d[27] * d[49] - 2 * d[17] * d[23] * d[27] * d[49] + 2 * d[11] * d[25] * d[27] * d[49] - 2 * d[14] * d[26] * d[27] * d[49] + 2 * d[16] * d[18] * d[29] * d[49] - 2 * d[15] * d[21] * d[29] * d[49] - 2 * d[12] * d[24] * d[29] * d[49] + 2 * d[9] * d[25] * d[29] * d[49] - 2 * d[15] * d[20] * d[30] * d[49] + 2 * d[17] * d[22] * d[30] * d[49] - 2 * d[11] * d[24] * d[30] * d[49] + 2 * d[13] * d[26] * d[30] * d[49] + 2 * d[17] * d[21] * d[31] * d[49] - 4 * d[16] * d[22] * d[31] * d[49] + 2 * d[15] * d[23] * d[31] * d[49] + 2 * d[14] * d[24] * d[31] * d[49] - 4 * d[13] * d[25] * d[31] * d[49] + 2 * d[12] * d[26] * d[31] * d[49] - 2 * d[17] * d[18] * d[32] * d[49] + 2 * d[15] * d[22] * d[32] * d[49] + 2 * d[13] * d[24] * d[32] * d[49] - 2 * d[9] * d[26] * d[32] * d[49] - 2 * d[12] * d[20] * d[33] * d[49] - 2 * d[11] * d[21] * d[33] * d[49] + 2 * d[14] * d[22] * d[33] * d[49] + 2 * d[13] * d[23] * d[33] * d[49] + 2 * d[11] * d[18] * d[34] * d[49] + 2 * d[9] * d[20] * d[34] * d[49] - 4 * d[13] * d[22] * d[34] * d[49] - 2 * d[14] * d[18] * d[35] * d[49] + 2 * d[13] * d[21] * d[35] * d[49] + 2 * d[12] * d[22] * d[35] * d[49] - 2 * d[9] * d[23] * d[35] * d[49] + 2 * d[17] * d[19] * d[27] * d[50] - 2 * d[16] * d[23] * d[27] * d[50] - 2 * d[14] * d[25] * d[27] * d[50] + 2 * d[10] * d[26] * d[27] * d[50] + 2 * d[17] * d[18] * d[28] * d[50] - 2 * d[15] * d[22] * d[28] * d[50] - 2 * d[13] * d[24] * d[28] * d[50] + 2 * d[9] * d[26] * d[28] * d[50] - 4 * d[17] * d[21] * d[30] * d[50] + 2 * d[16] * d[22] * d[30] * d[50] + 2 * d[15] * d[23] * d[30] * d[50] + 2 * d[14] * d[24] * d[30] * d[50] + 2 * d[13] * d[25] * d[30] * d[50] - 4 * d[12] * d[26] * d[30] * d[50] - 2 * d[15] * d[19] * d[31] * d[50] + 2 * d[16] * d[21] * d[31] * d[50] - 2 * d[10] * d[24] * d[31] * d[50] + 2 * d[12] * d[25] * d[31] * d[50] - 2 * d[16] * d[18] * d[32] * d[50] + 2 * d[15] * d[21] * d[32] * d[50] + 2 * d[12] * d[24] * d[32] * d[50] - 2 * d[9] * d[25] * d[32] * d[50] - 2 * d[13] * d[19] * d[33] * d[50] + 2 * d[14] * d[21] * d[33] * d[50] - 2 * d[10] * d[22] * d[33] * d[50] + 2 * d[12] * d[23] * d[33] * d[50] - 2 * d[14] * d[18] * d[34] * d[50] + 2 * d[13] * d[21] * d[34] * d[50] + 2 * d[12] * d[22] * d[34] * d[50] - 2 * d[9] * d[23] * d[34] * d[50] + 2 * d[10] * d[18] * d[35] * d[50] + 2 * d[9] * d[19] * d[35] * d[50] - 4 * d[12] * d[21] * d[35] * d[50] - d[11] * d[19] * d[27] * d[58] - d[10] * d[20] * d[27] * d[58] + 2 * d[14] * d[23] * d[27] * d[58] - d[11] * d[18] * d[28] * d[58] - d[9] * d[20] * d[28] * d[58] + 2 * d[13] * d[22] * d[28] * d[58] - d[10] * d[18] * d[29] * d[58] - d[9] * d[19] * d[29] * d[58] + 2 * d[12] * d[21] * d[29] * d[58] + 2 * d[12] * d[20] * d[30] * d[58] + 2 * d[11] * d[21] * d[30] * d[58] - 2 * d[14] * d[22] * d[30] * d[58] - 2 * d[13] * d[23] * d[30] * d[58] + 2 * d[13] * d[19] * d[31] * d[58] - 2 * d[14] * d[21] * d[31] * d[58] + 2 * d[10] * d[22] * d[31] * d[58] - 2 * d[12] * d[23] * d[31] * d[58] + 2 * d[14] * d[18] * d[32] * d[58] - 2 * d[13] * d[21] * d[32] * d[58] - 2 * d[12] * d[22] * d[32] * d[58] + 2 * d[9] * d[23] * d[32] * d[58];
    coeffs[41] = 2 * d[20] * d[24] * d[28] * d[48] - 2 * d[22] * d[26] * d[28] * d[48] + 2 * d[19] * d[24] * d[29] * d[48] - 2 * d[21] * d[25] * d[29] * d[48] - 2 * d[20] * d[25] * d[30] * d[48] + 2 * d[23] * d[26] * d[30] * d[48] + 2 * d[23] * d[25] * d[31] * d[48] - 2 * d[19] * d[26] * d[31] * d[48] - 4 * d[23] * d[24] * d[32] * d[48] + 2 * d[22] * d[25] * d[32] * d[48] + 2 * d[21] * d[26] * d[32] * d[48] + 2 * d[19] * d[20] * d[33] * d[48] - 2 * std::pow(d[23], 2) * d[33] * d[48] - 2 * d[20] * d[21] * d[34] * d[48] + 2 * d[22] * d[23] * d[34] * d[48] - 2 * d[19] * d[22] * d[35] * d[48] + 2 * d[21] * d[23] * d[35] * d[48] + 2 * d[20] * d[25] * d[27] * d[49] - 2 * d[23] * d[26] * d[27] * d[49] - 2 * d[21] * d[24] * d[29] * d[49] + 2 * d[18] * d[25] * d[29] * d[49] - 2 * d[20] * d[24] * d[30] * d[49] + 2 * d[22] * d[26] * d[30] * d[49] + 2 * d[23] * d[24] * d[31] * d[49] - 4 * d[22] * d[25] * d[31] * d[49] + 2 * d[21] * d[26] * d[31] * d[49] + 2 * d[22] * d[24] * d[32] * d[49] - 2 * d[18] * d[26] * d[32] * d[49] - 2 * d[20] * d[21] * d[33] * d[49] + 2 * d[22] * d[23] * d[33] * d[49] + 2 * d[18] * d[20] * d[34] * d[49] - 2 * std::pow(d[22], 2) * d[34] * d[49] + 2 * d[21] * d[22] * d[35] * d[49] - 2 * d[18] * d[23] * d[35] * d[49] - 2 * d[23] * d[25] * d[27] * d[50] + 2 * d[19] * d[26] * d[27] * d[50] - 2 * d[22] * d[24] * d[28] * d[50] + 2 * d[18] * d[26] * d[28] * d[50] + 2 * d[23] * d[24] * d[30] * d[50] + 2 * d[22] * d[25] * d[30] * d[50] - 4 * d[21] * d[26] * d[30] * d[50] - 2 * d[19] * d[24] * d[31] * d[50] + 2 * d[21] * d[25] * d[31] * d[50] + 2 * d[21] * d[24] * d[32] * d[50] - 2 * d[18] * d[25] * d[32] * d[50] - 2 * d[19] * d[22] * d[33] * d[50] + 2 * d[21] * d[23] * d[33] * d[50] + 2 * d[21] * d[22] * d[34] * d[50] - 2 * d[18] * d[23] * d[34] * d[50] + 2 * d[18] * d[19] * d[35] * d[50] - 2 * std::pow(d[21], 2) * d[35] * d[50] - d[19] * d[20] * d[27] * d[58] + std::pow(d[23], 2) * d[27] * d[58] - d[18] * d[20] * d[28] * d[58] + std::pow(d[22], 2) * d[28] * d[58] - d[18] * d[19] * d[29] * d[58] + std::pow(d[21], 2) * d[29] * d[58] + 2 * d[20] * d[21] * d[30] * d[58] - 2 * d[22] * d[23] * d[30] * d[58] + 2 * d[19] * d[22] * d[31] * d[58] - 2 * d[21] * d[23] * d[31] * d[58] - 2 * d[21] * d[22] * d[32] * d[58] + 2 * d[18] * d[23] * d[32] * d[58];
    coeffs[42] = 2 * d[15] * d[28] * d[29] * d[48] - 2 * d[16] * d[29] * d[30] * d[48] - 2 * d[17] * d[28] * d[31] * d[48] + 2 * d[17] * d[30] * d[32] * d[48] + 2 * d[16] * d[31] * d[32] * d[48] - 2 * d[15] * std::pow(d[32], 2) * d[48] + 2 * d[11] * d[28] * d[33] * d[48] + 2 * d[10] * d[29] * d[33] * d[48] - 4 * d[14] * d[32] * d[33] * d[48] - 2 * d[12] * d[29] * d[34] * d[48] - 2 * d[11] * d[30] * d[34] * d[48] + 2 * d[14] * d[31] * d[34] * d[48] + 2 * d[13] * d[32] * d[34] * d[48] - 2 * d[13] * d[28] * d[35] * d[48] + 2 * d[14] * d[30] * d[35] * d[48] - 2 * d[10] * d[31] * d[35] * d[48] + 2 * d[12] * d[32] * d[35] * d[48] + 2 * d[16] * d[27] * d[29] * d[49] - 2 * d[15] * d[29] * d[30] * d[49] + 2 * d[17] * d[30] * d[31] * d[49] - 2 * d[16] * std::pow(d[31], 2) * d[49] - 2 * d[17] * d[27] * d[32] * d[49] + 2 * d[15] * d[31] * d[32] * d[49] - 2 * d[12] * d[29] * d[33] * d[49] - 2 * d[11] * d[30] * d[33] * d[49] + 2 * d[14] * d[31] * d[33] * d[49] + 2 * d[13] * d[32] * d[33] * d[49] + 2 * d[11] * d[27] * d[34] * d[49] + 2 * d[9] * d[29] * d[34] * d[49] - 4 * d[13] * d[31] * d[34] * d[49] - 2 * d[14] * d[27] * d[35] * d[49] + 2 * d[13] * d[30] * d[35] * d[49] + 2 * d[12] * d[31] * d[35] * d[49] - 2 * d[9] * d[32] * d[35] * d[49] + 2 * d[17] * d[27] * d[28] * d[50] - 2 * d[17] * std::pow(d[30], 2) * d[50] - 2 * d[15] * d[28] * d[31] * d[50] + 2 * d[16] * d[30] * d[31] * d[50] - 2 * d[16] * d[27] * d[32] * d[50] + 2 * d[15] * d[30] * d[32] * d[50] - 2 * d[13] * d[28] * d[33] * d[50] + 2 * d[14] * d[30] * d[33] * d[50] - 2 * d[10] * d[31] * d[33] * d[50] + 2 * d[12] * d[32] * d[33] * d[50] - 2 * d[14] * d[27] * d[34] * d[50] + 2 * d[13] * d[30] * d[34] * d[50] + 2 * d[12] * d[31] * d[34] * d[50] - 2 * d[9] * d[32] * d[34] * d[50] + 2 * d[10] * d[27] * d[35] * d[50] + 2 * d[9] * d[28] * d[35] * d[50] - 4 * d[12] * d[30] * d[35] * d[50] - d[11] * d[27] * d[28] * d[58] - d[10] * d[27] * d[29] * d[58] - d[9] * d[28] * d[29] * d[58] + 2 * d[12] * d[29] * d[30] * d[58] + d[11] * std::pow(d[30], 2) * d[58] + 2 * d[13] * d[28] * d[31] * d[58] - 2 * d[14] * d[30] * d[31] * d[58] + d[10] * std::pow(d[31], 2) * d[58] + 2 * d[14] * d[27] * d[32] * d[58] - 2 * d[13] * d[30] * d[32] * d[58] - 2 * d[12] * d[31] * d[32] * d[58] + d[9] * std::pow(d[32], 2) * d[58];
    coeffs[43] = 2 * d[24] * d[28] * d[29] * d[48] - 2 * d[25] * d[29] * d[30] * d[48] - 2 * d[26] * d[28] * d[31] * d[48] + 2 * d[26] * d[30] * d[32] * d[48] + 2 * d[25] * d[31] * d[32] * d[48] - 2 * d[24] * std::pow(d[32], 2) * d[48] + 2 * d[20] * d[28] * d[33] * d[48] + 2 * d[19] * d[29] * d[33] * d[48] - 4 * d[23] * d[32] * d[33] * d[48] - 2 * d[21] * d[29] * d[34] * d[48] - 2 * d[20] * d[30] * d[34] * d[48] + 2 * d[23] * d[31] * d[34] * d[48] + 2 * d[22] * d[32] * d[34] * d[48] - 2 * d[22] * d[28] * d[35] * d[48] + 2 * d[23] * d[30] * d[35] * d[48] - 2 * d[19] * d[31] * d[35] * d[48] + 2 * d[21] * d[32] * d[35] * d[48] + 2 * d[25] * d[27] * d[29] * d[49] - 2 * d[24] * d[29] * d[30] * d[49] + 2 * d[26] * d[30] * d[31] * d[49] - 2 * d[25] * std::pow(d[31], 2) * d[49] - 2 * d[26] * d[27] * d[32] * d[49] + 2 * d[24] * d[31] * d[32] * d[49] - 2 * d[21] * d[29] * d[33] * d[49] - 2 * d[20] * d[30] * d[33] * d[49] + 2 * d[23] * d[31] * d[33] * d[49] + 2 * d[22] * d[32] * d[33] * d[49] + 2 * d[20] * d[27] * d[34] * d[49] + 2 * d[18] * d[29] * d[34] * d[49] - 4 * d[22] * d[31] * d[34] * d[49] - 2 * d[23] * d[27] * d[35] * d[49] + 2 * d[22] * d[30] * d[35] * d[49] + 2 * d[21] * d[31] * d[35] * d[49] - 2 * d[18] * d[32] * d[35] * d[49] + 2 * d[26] * d[27] * d[28] * d[50] - 2 * d[26] * std::pow(d[30], 2) * d[50] - 2 * d[24] * d[28] * d[31] * d[50] + 2 * d[25] * d[30] * d[31] * d[50] - 2 * d[25] * d[27] * d[32] * d[50] + 2 * d[24] * d[30] * d[32] * d[50] - 2 * d[22] * d[28] * d[33] * d[50] + 2 * d[23] * d[30] * d[33] * d[50] - 2 * d[19] * d[31] * d[33] * d[50] + 2 * d[21] * d[32] * d[33] * d[50] - 2 * d[23] * d[27] * d[34] * d[50] + 2 * d[22] * d[30] * d[34] * d[50] + 2 * d[21] * d[31] * d[34] * d[50] - 2 * d[18] * d[32] * d[34] * d[50] + 2 * d[19] * d[27] * d[35] * d[50] + 2 * d[18] * d[28] * d[35] * d[50] - 4 * d[21] * d[30] * d[35] * d[50] - d[20] * d[27] * d[28] * d[58] - d[19] * d[27] * d[29] * d[58] - d[18] * d[28] * d[29] * d[58] + 2 * d[21] * d[29] * d[30] * d[58] + d[20] * std::pow(d[30], 2) * d[58] + 2 * d[22] * d[28] * d[31] * d[58] - 2 * d[23] * d[30] * d[31] * d[58] + d[19] * std::pow(d[31], 2) * d[58] + 2 * d[23] * d[27] * d[32] * d[58] - 2 * d[22] * d[30] * d[32] * d[58] - 2 * d[21] * d[31] * d[32] * d[58] + d[18] * std::pow(d[32], 2) * d[58];
    coeffs[44] = 2 * d[28] * d[29] * d[33] * d[48] - 2 * std::pow(d[32], 2) * d[33] * d[48] - 2 * d[29] * d[30] * d[34] * d[48] + 2 * d[31] * d[32] * d[34] * d[48] - 2 * d[28] * d[31] * d[35] * d[48] + 2 * d[30] * d[32] * d[35] * d[48] - 2 * d[29] * d[30] * d[33] * d[49] + 2 * d[31] * d[32] * d[33] * d[49] + 2 * d[27] * d[29] * d[34] * d[49] - 2 * std::pow(d[31], 2) * d[34] * d[49] + 2 * d[30] * d[31] * d[35] * d[49] - 2 * d[27] * d[32] * d[35] * d[49] - 2 * d[28] * d[31] * d[33] * d[50] + 2 * d[30] * d[32] * d[33] * d[50] + 2 * d[30] * d[31] * d[34] * d[50] - 2 * d[27] * d[32] * d[34] * d[50] + 2 * d[27] * d[28] * d[35] * d[50] - 2 * std::pow(d[30], 2) * d[35] * d[50] - d[27] * d[28] * d[29] * d[58] + d[29] * std::pow(d[30], 2) * d[58] + d[28] * std::pow(d[31], 2) * d[58] - 2 * d[30] * d[31] * d[32] * d[58] + d[27] * std::pow(d[32], 2) * d[58];
    coeffs[45] = 2 * d[11] * d[15] * d[37] * d[48] - 2 * d[13] * d[17] * d[37] * d[48] + 2 * d[10] * d[15] * d[38] * d[48] - 2 * d[12] * d[16] * d[38] * d[48] - 2 * d[11] * d[16] * d[39] * d[48] + 2 * d[14] * d[17] * d[39] * d[48] + 2 * d[14] * d[16] * d[40] * d[48] - 2 * d[10] * d[17] * d[40] * d[48] - 4 * d[14] * d[15] * d[41] * d[48] + 2 * d[13] * d[16] * d[41] * d[48] + 2 * d[12] * d[17] * d[41] * d[48] + 2 * d[10] * d[11] * d[42] * d[48] - 2 * std::pow(d[14], 2) * d[42] * d[48] - 2 * d[11] * d[12] * d[43] * d[48] + 2 * d[13] * d[14] * d[43] * d[48] - 2 * d[10] * d[13] * d[44] * d[48] + 2 * d[12] * d[14] * d[44] * d[48] + 2 * d[11] * d[16] * d[36] * d[49] - 2 * d[14] * d[17] * d[36] * d[49] - 2 * d[12] * d[15] * d[38] * d[49] + 2 * d[9] * d[16] * d[38] * d[49] - 2 * d[11] * d[15] * d[39] * d[49] + 2 * d[13] * d[17] * d[39] * d[49] + 2 * d[14] * d[15] * d[40] * d[49] - 4 * d[13] * d[16] * d[40] * d[49] + 2 * d[12] * d[17] * d[40] * d[49] + 2 * d[13] * d[15] * d[41] * d[49] - 2 * d[9] * d[17] * d[41] * d[49] - 2 * d[11] * d[12] * d[42] * d[49] + 2 * d[13] * d[14] * d[42] * d[49] + 2 * d[9] * d[11] * d[43] * d[49] - 2 * std::pow(d[13], 2) * d[43] * d[49] + 2 * d[12] * d[13] * d[44] * d[49] - 2 * d[9] * d[14] * d[44] * d[49] - 2 * d[14] * d[16] * d[36] * d[50] + 2 * d[10] * d[17] * d[36] * d[50] - 2 * d[13] * d[15] * d[37] * d[50] + 2 * d[9] * d[17] * d[37] * d[50] + 2 * d[14] * d[15] * d[39] * d[50] + 2 * d[13] * d[16] * d[39] * d[50] - 4 * d[12] * d[17] * d[39] * d[50] - 2 * d[10] * d[15] * d[40] * d[50] + 2 * d[12] * d[16] * d[40] * d[50] + 2 * d[12] * d[15] * d[41] * d[50] - 2 * d[9] * d[16] * d[41] * d[50] - 2 * d[10] * d[13] * d[42] * d[50] + 2 * d[12] * d[14] * d[42] * d[50] + 2 * d[12] * d[13] * d[43] * d[50] - 2 * d[9] * d[14] * d[43] * d[50] + 2 * d[9] * d[10] * d[44] * d[50] - 2 * std::pow(d[12], 2) * d[44] * d[50] - d[10] * d[11] * d[36] * d[58] + std::pow(d[14], 2) * d[36] * d[58] - d[9] * d[11] * d[37] * d[58] + std::pow(d[13], 2) * d[37] * d[58] - d[9] * d[10] * d[38] * d[58] + std::pow(d[12], 2) * d[38] * d[58] + 2 * d[11] * d[12] * d[39] * d[58] - 2 * d[13] * d[14] * d[39] * d[58] + 2 * d[10] * d[13] * d[40] * d[58] - 2 * d[12] * d[14] * d[40] * d[58] - 2 * d[12] * d[13] * d[41] * d[58] + 2 * d[9] * d[14] * d[41] * d[58];
    coeffs[46] = 2 * d[15] * d[20] * d[37] * d[48] - 2 * d[17] * d[22] * d[37] * d[48] + 2 * d[11] * d[24] * d[37] * d[48] - 2 * d[13] * d[26] * d[37] * d[48] + 2 * d[15] * d[19] * d[38] * d[48] - 2 * d[16] * d[21] * d[38] * d[48] + 2 * d[10] * d[24] * d[38] * d[48] - 2 * d[12] * d[25] * d[38] * d[48] - 2 * d[16] * d[20] * d[39] * d[48] + 2 * d[17] * d[23] * d[39] * d[48] - 2 * d[11] * d[25] * d[39] * d[48] + 2 * d[14] * d[26] * d[39] * d[48] - 2 * d[17] * d[19] * d[40] * d[48] + 2 * d[16] * d[23] * d[40] * d[48] + 2 * d[14] * d[25] * d[40] * d[48] - 2 * d[10] * d[26] * d[40] * d[48] + 2 * d[17] * d[21] * d[41] * d[48] + 2 * d[16] * d[22] * d[41] * d[48] - 4 * d[15] * d[23] * d[41] * d[48] - 4 * d[14] * d[24] * d[41] * d[48] + 2 * d[13] * d[25] * d[41] * d[48] + 2 * d[12] * d[26] * d[41] * d[48] + 2 * d[11] * d[19] * d[42] * d[48] + 2 * d[10] * d[20] * d[42] * d[48] - 4 * d[14] * d[23] * d[42] * d[48] - 2 * d[12] * d[20] * d[43] * d[48] - 2 * d[11] * d[21] * d[43] * d[48] + 2 * d[14] * d[22] * d[43] * d[48] + 2 * d[13] * d[23] * d[43] * d[48] - 2 * d[13] * d[19] * d[44] * d[48] + 2 * d[14] * d[21] * d[44] * d[48] - 2 * d[10] * d[22] * d[44] * d[48] + 2 * d[12] * d[23] * d[44] * d[48] + 2 * d[16] * d[20] * d[36] * d[49] - 2 * d[17] * d[23] * d[36] * d[49] + 2 * d[11] * d[25] * d[36] * d[49] - 2 * d[14] * d[26] * d[36] * d[49] + 2 * d[16] * d[18] * d[38] * d[49] - 2 * d[15] * d[21] * d[38] * d[49] - 2 * d[12] * d[24] * d[38] * d[49] + 2 * d[9] * d[25] * d[38] * d[49] - 2 * d[15] * d[20] * d[39] * d[49] + 2 * d[17] * d[22] * d[39] * d[49] - 2 * d[11] * d[24] * d[39] * d[49] + 2 * d[13] * d[26] * d[39] * d[49] + 2 * d[17] * d[21] * d[40] * d[49] - 4 * d[16] * d[22] * d[40] * d[49] + 2 * d[15] * d[23] * d[40] * d[49] + 2 * d[14] * d[24] * d[40] * d[49] - 4 * d[13] * d[25] * d[40] * d[49] + 2 * d[12] * d[26] * d[40] * d[49] - 2 * d[17] * d[18] * d[41] * d[49] + 2 * d[15] * d[22] * d[41] * d[49] + 2 * d[13] * d[24] * d[41] * d[49] - 2 * d[9] * d[26] * d[41] * d[49] - 2 * d[12] * d[20] * d[42] * d[49] - 2 * d[11] * d[21] * d[42] * d[49] + 2 * d[14] * d[22] * d[42] * d[49] + 2 * d[13] * d[23] * d[42] * d[49] + 2 * d[11] * d[18] * d[43] * d[49] + 2 * d[9] * d[20] * d[43] * d[49] - 4 * d[13] * d[22] * d[43] * d[49] - 2 * d[14] * d[18] * d[44] * d[49] + 2 * d[13] * d[21] * d[44] * d[49] + 2 * d[12] * d[22] * d[44] * d[49] - 2 * d[9] * d[23] * d[44] * d[49] + 2 * d[17] * d[19] * d[36] * d[50] - 2 * d[16] * d[23] * d[36] * d[50] - 2 * d[14] * d[25] * d[36] * d[50] + 2 * d[10] * d[26] * d[36] * d[50] + 2 * d[17] * d[18] * d[37] * d[50] - 2 * d[15] * d[22] * d[37] * d[50] - 2 * d[13] * d[24] * d[37] * d[50] + 2 * d[9] * d[26] * d[37] * d[50] - 4 * d[17] * d[21] * d[39] * d[50] + 2 * d[16] * d[22] * d[39] * d[50] + 2 * d[15] * d[23] * d[39] * d[50] + 2 * d[14] * d[24] * d[39] * d[50] + 2 * d[13] * d[25] * d[39] * d[50] - 4 * d[12] * d[26] * d[39] * d[50] - 2 * d[15] * d[19] * d[40] * d[50] + 2 * d[16] * d[21] * d[40] * d[50] - 2 * d[10] * d[24] * d[40] * d[50] + 2 * d[12] * d[25] * d[40] * d[50] - 2 * d[16] * d[18] * d[41] * d[50] + 2 * d[15] * d[21] * d[41] * d[50] + 2 * d[12] * d[24] * d[41] * d[50] - 2 * d[9] * d[25] * d[41] * d[50] - 2 * d[13] * d[19] * d[42] * d[50] + 2 * d[14] * d[21] * d[42] * d[50] - 2 * d[10] * d[22] * d[42] * d[50] + 2 * d[12] * d[23] * d[42] * d[50] - 2 * d[14] * d[18] * d[43] * d[50] + 2 * d[13] * d[21] * d[43] * d[50] + 2 * d[12] * d[22] * d[43] * d[50] - 2 * d[9] * d[23] * d[43] * d[50] + 2 * d[10] * d[18] * d[44] * d[50] + 2 * d[9] * d[19] * d[44] * d[50] - 4 * d[12] * d[21] * d[44] * d[50] - d[11] * d[19] * d[36] * d[58] - d[10] * d[20] * d[36] * d[58] + 2 * d[14] * d[23] * d[36] * d[58] - d[11] * d[18] * d[37] * d[58] - d[9] * d[20] * d[37] * d[58] + 2 * d[13] * d[22] * d[37] * d[58] - d[10] * d[18] * d[38] * d[58] - d[9] * d[19] * d[38] * d[58] + 2 * d[12] * d[21] * d[38] * d[58] + 2 * d[12] * d[20] * d[39] * d[58] + 2 * d[11] * d[21] * d[39] * d[58] - 2 * d[14] * d[22] * d[39] * d[58] - 2 * d[13] * d[23] * d[39] * d[58] + 2 * d[13] * d[19] * d[40] * d[58] - 2 * d[14] * d[21] * d[40] * d[58] + 2 * d[10] * d[22] * d[40] * d[58] - 2 * d[12] * d[23] * d[40] * d[58] + 2 * d[14] * d[18] * d[41] * d[58] - 2 * d[13] * d[21] * d[41] * d[58] - 2 * d[12] * d[22] * d[41] * d[58] + 2 * d[9] * d[23] * d[41] * d[58];
    coeffs[47] = 2 * d[20] * d[24] * d[37] * d[48] - 2 * d[22] * d[26] * d[37] * d[48] + 2 * d[19] * d[24] * d[38] * d[48] - 2 * d[21] * d[25] * d[38] * d[48] - 2 * d[20] * d[25] * d[39] * d[48] + 2 * d[23] * d[26] * d[39] * d[48] + 2 * d[23] * d[25] * d[40] * d[48] - 2 * d[19] * d[26] * d[40] * d[48] - 4 * d[23] * d[24] * d[41] * d[48] + 2 * d[22] * d[25] * d[41] * d[48] + 2 * d[21] * d[26] * d[41] * d[48] + 2 * d[19] * d[20] * d[42] * d[48] - 2 * std::pow(d[23], 2) * d[42] * d[48] - 2 * d[20] * d[21] * d[43] * d[48] + 2 * d[22] * d[23] * d[43] * d[48] - 2 * d[19] * d[22] * d[44] * d[48] + 2 * d[21] * d[23] * d[44] * d[48] + 2 * d[20] * d[25] * d[36] * d[49] - 2 * d[23] * d[26] * d[36] * d[49] - 2 * d[21] * d[24] * d[38] * d[49] + 2 * d[18] * d[25] * d[38] * d[49] - 2 * d[20] * d[24] * d[39] * d[49] + 2 * d[22] * d[26] * d[39] * d[49] + 2 * d[23] * d[24] * d[40] * d[49] - 4 * d[22] * d[25] * d[40] * d[49] + 2 * d[21] * d[26] * d[40] * d[49] + 2 * d[22] * d[24] * d[41] * d[49] - 2 * d[18] * d[26] * d[41] * d[49] - 2 * d[20] * d[21] * d[42] * d[49] + 2 * d[22] * d[23] * d[42] * d[49] + 2 * d[18] * d[20] * d[43] * d[49] - 2 * std::pow(d[22], 2) * d[43] * d[49] + 2 * d[21] * d[22] * d[44] * d[49] - 2 * d[18] * d[23] * d[44] * d[49] - 2 * d[23] * d[25] * d[36] * d[50] + 2 * d[19] * d[26] * d[36] * d[50] - 2 * d[22] * d[24] * d[37] * d[50] + 2 * d[18] * d[26] * d[37] * d[50] + 2 * d[23] * d[24] * d[39] * d[50] + 2 * d[22] * d[25] * d[39] * d[50] - 4 * d[21] * d[26] * d[39] * d[50] - 2 * d[19] * d[24] * d[40] * d[50] + 2 * d[21] * d[25] * d[40] * d[50] + 2 * d[21] * d[24] * d[41] * d[50] - 2 * d[18] * d[25] * d[41] * d[50] - 2 * d[19] * d[22] * d[42] * d[50] + 2 * d[21] * d[23] * d[42] * d[50] + 2 * d[21] * d[22] * d[43] * d[50] - 2 * d[18] * d[23] * d[43] * d[50] + 2 * d[18] * d[19] * d[44] * d[50] - 2 * std::pow(d[21], 2) * d[44] * d[50] - d[19] * d[20] * d[36] * d[58] + std::pow(d[23], 2) * d[36] * d[58] - d[18] * d[20] * d[37] * d[58] + std::pow(d[22], 2) * d[37] * d[58] - d[18] * d[19] * d[38] * d[58] + std::pow(d[21], 2) * d[38] * d[58] + 2 * d[20] * d[21] * d[39] * d[58] - 2 * d[22] * d[23] * d[39] * d[58] + 2 * d[19] * d[22] * d[40] * d[58] - 2 * d[21] * d[23] * d[40] * d[58] - 2 * d[21] * d[22] * d[41] * d[58] + 2 * d[18] * d[23] * d[41] * d[58];
    coeffs[48] = 2 * d[15] * d[29] * d[37] * d[48] - 2 * d[17] * d[31] * d[37] * d[48] + 2 * d[11] * d[33] * d[37] * d[48] - 2 * d[13] * d[35] * d[37] * d[48] + 2 * d[15] * d[28] * d[38] * d[48] - 2 * d[16] * d[30] * d[38] * d[48] + 2 * d[10] * d[33] * d[38] * d[48] - 2 * d[12] * d[34] * d[38] * d[48] - 2 * d[16] * d[29] * d[39] * d[48] + 2 * d[17] * d[32] * d[39] * d[48] - 2 * d[11] * d[34] * d[39] * d[48] + 2 * d[14] * d[35] * d[39] * d[48] - 2 * d[17] * d[28] * d[40] * d[48] + 2 * d[16] * d[32] * d[40] * d[48] + 2 * d[14] * d[34] * d[40] * d[48] - 2 * d[10] * d[35] * d[40] * d[48] + 2 * d[17] * d[30] * d[41] * d[48] + 2 * d[16] * d[31] * d[41] * d[48] - 4 * d[15] * d[32] * d[41] * d[48] - 4 * d[14] * d[33] * d[41] * d[48] + 2 * d[13] * d[34] * d[41] * d[48] + 2 * d[12] * d[35] * d[41] * d[48] + 2 * d[11] * d[28] * d[42] * d[48] + 2 * d[10] * d[29] * d[42] * d[48] - 4 * d[14] * d[32] * d[42] * d[48] - 2 * d[12] * d[29] * d[43] * d[48] - 2 * d[11] * d[30] * d[43] * d[48] + 2 * d[14] * d[31] * d[43] * d[48] + 2 * d[13] * d[32] * d[43] * d[48] - 2 * d[13] * d[28] * d[44] * d[48] + 2 * d[14] * d[30] * d[44] * d[48] - 2 * d[10] * d[31] * d[44] * d[48] + 2 * d[12] * d[32] * d[44] * d[48] + 2 * d[16] * d[29] * d[36] * d[49] - 2 * d[17] * d[32] * d[36] * d[49] + 2 * d[11] * d[34] * d[36] * d[49] - 2 * d[14] * d[35] * d[36] * d[49] + 2 * d[16] * d[27] * d[38] * d[49] - 2 * d[15] * d[30] * d[38] * d[49] - 2 * d[12] * d[33] * d[38] * d[49] + 2 * d[9] * d[34] * d[38] * d[49] - 2 * d[15] * d[29] * d[39] * d[49] + 2 * d[17] * d[31] * d[39] * d[49] - 2 * d[11] * d[33] * d[39] * d[49] + 2 * d[13] * d[35] * d[39] * d[49] + 2 * d[17] * d[30] * d[40] * d[49] - 4 * d[16] * d[31] * d[40] * d[49] + 2 * d[15] * d[32] * d[40] * d[49] + 2 * d[14] * d[33] * d[40] * d[49] - 4 * d[13] * d[34] * d[40] * d[49] + 2 * d[12] * d[35] * d[40] * d[49] - 2 * d[17] * d[27] * d[41] * d[49] + 2 * d[15] * d[31] * d[41] * d[49] + 2 * d[13] * d[33] * d[41] * d[49] - 2 * d[9] * d[35] * d[41] * d[49] - 2 * d[12] * d[29] * d[42] * d[49] - 2 * d[11] * d[30] * d[42] * d[49] + 2 * d[14] * d[31] * d[42] * d[49] + 2 * d[13] * d[32] * d[42] * d[49] + 2 * d[11] * d[27] * d[43] * d[49] + 2 * d[9] * d[29] * d[43] * d[49] - 4 * d[13] * d[31] * d[43] * d[49] - 2 * d[14] * d[27] * d[44] * d[49] + 2 * d[13] * d[30] * d[44] * d[49] + 2 * d[12] * d[31] * d[44] * d[49] - 2 * d[9] * d[32] * d[44] * d[49] + 2 * d[17] * d[28] * d[36] * d[50] - 2 * d[16] * d[32] * d[36] * d[50] - 2 * d[14] * d[34] * d[36] * d[50] + 2 * d[10] * d[35] * d[36] * d[50] + 2 * d[17] * d[27] * d[37] * d[50] - 2 * d[15] * d[31] * d[37] * d[50] - 2 * d[13] * d[33] * d[37] * d[50] + 2 * d[9] * d[35] * d[37] * d[50] - 4 * d[17] * d[30] * d[39] * d[50] + 2 * d[16] * d[31] * d[39] * d[50] + 2 * d[15] * d[32] * d[39] * d[50] + 2 * d[14] * d[33] * d[39] * d[50] + 2 * d[13] * d[34] * d[39] * d[50] - 4 * d[12] * d[35] * d[39] * d[50] - 2 * d[15] * d[28] * d[40] * d[50] + 2 * d[16] * d[30] * d[40] * d[50] - 2 * d[10] * d[33] * d[40] * d[50] + 2 * d[12] * d[34] * d[40] * d[50] - 2 * d[16] * d[27] * d[41] * d[50] + 2 * d[15] * d[30] * d[41] * d[50] + 2 * d[12] * d[33] * d[41] * d[50] - 2 * d[9] * d[34] * d[41] * d[50] - 2 * d[13] * d[28] * d[42] * d[50] + 2 * d[14] * d[30] * d[42] * d[50] - 2 * d[10] * d[31] * d[42] * d[50] + 2 * d[12] * d[32] * d[42] * d[50] - 2 * d[14] * d[27] * d[43] * d[50] + 2 * d[13] * d[30] * d[43] * d[50] + 2 * d[12] * d[31] * d[43] * d[50] - 2 * d[9] * d[32] * d[43] * d[50] + 2 * d[10] * d[27] * d[44] * d[50] + 2 * d[9] * d[28] * d[44] * d[50] - 4 * d[12] * d[30] * d[44] * d[50] - d[11] * d[28] * d[36] * d[58] - d[10] * d[29] * d[36] * d[58] + 2 * d[14] * d[32] * d[36] * d[58] - d[11] * d[27] * d[37] * d[58] - d[9] * d[29] * d[37] * d[58] + 2 * d[13] * d[31] * d[37] * d[58] - d[10] * d[27] * d[38] * d[58] - d[9] * d[28] * d[38] * d[58] + 2 * d[12] * d[30] * d[38] * d[58] + 2 * d[12] * d[29] * d[39] * d[58] + 2 * d[11] * d[30] * d[39] * d[58] - 2 * d[14] * d[31] * d[39] * d[58] - 2 * d[13] * d[32] * d[39] * d[58] + 2 * d[13] * d[28] * d[40] * d[58] - 2 * d[14] * d[30] * d[40] * d[58] + 2 * d[10] * d[31] * d[40] * d[58] - 2 * d[12] * d[32] * d[40] * d[58] + 2 * d[14] * d[27] * d[41] * d[58] - 2 * d[13] * d[30] * d[41] * d[58] - 2 * d[12] * d[31] * d[41] * d[58] + 2 * d[9] * d[32] * d[41] * d[58];
    coeffs[49] = 2 * d[24] * d[29] * d[37] * d[48] - 2 * d[26] * d[31] * d[37] * d[48] + 2 * d[20] * d[33] * d[37] * d[48] - 2 * d[22] * d[35] * d[37] * d[48] + 2 * d[24] * d[28] * d[38] * d[48] - 2 * d[25] * d[30] * d[38] * d[48] + 2 * d[19] * d[33] * d[38] * d[48] - 2 * d[21] * d[34] * d[38] * d[48] - 2 * d[25] * d[29] * d[39] * d[48] + 2 * d[26] * d[32] * d[39] * d[48] - 2 * d[20] * d[34] * d[39] * d[48] + 2 * d[23] * d[35] * d[39] * d[48] - 2 * d[26] * d[28] * d[40] * d[48] + 2 * d[25] * d[32] * d[40] * d[48] + 2 * d[23] * d[34] * d[40] * d[48] - 2 * d[19] * d[35] * d[40] * d[48] + 2 * d[26] * d[30] * d[41] * d[48] + 2 * d[25] * d[31] * d[41] * d[48] - 4 * d[24] * d[32] * d[41] * d[48] - 4 * d[23] * d[33] * d[41] * d[48] + 2 * d[22] * d[34] * d[41] * d[48] + 2 * d[21] * d[35] * d[41] * d[48] + 2 * d[20] * d[28] * d[42] * d[48] + 2 * d[19] * d[29] * d[42] * d[48] - 4 * d[23] * d[32] * d[42] * d[48] - 2 * d[21] * d[29] * d[43] * d[48] - 2 * d[20] * d[30] * d[43] * d[48] + 2 * d[23] * d[31] * d[43] * d[48] + 2 * d[22] * d[32] * d[43] * d[48] - 2 * d[22] * d[28] * d[44] * d[48] + 2 * d[23] * d[30] * d[44] * d[48] - 2 * d[19] * d[31] * d[44] * d[48] + 2 * d[21] * d[32] * d[44] * d[48] + 2 * d[25] * d[29] * d[36] * d[49] - 2 * d[26] * d[32] * d[36] * d[49] + 2 * d[20] * d[34] * d[36] * d[49] - 2 * d[23] * d[35] * d[36] * d[49] + 2 * d[25] * d[27] * d[38] * d[49] - 2 * d[24] * d[30] * d[38] * d[49] - 2 * d[21] * d[33] * d[38] * d[49] + 2 * d[18] * d[34] * d[38] * d[49] - 2 * d[24] * d[29] * d[39] * d[49] + 2 * d[26] * d[31] * d[39] * d[49] - 2 * d[20] * d[33] * d[39] * d[49] + 2 * d[22] * d[35] * d[39] * d[49] + 2 * d[26] * d[30] * d[40] * d[49] - 4 * d[25] * d[31] * d[40] * d[49] + 2 * d[24] * d[32] * d[40] * d[49] + 2 * d[23] * d[33] * d[40] * d[49] - 4 * d[22] * d[34] * d[40] * d[49] + 2 * d[21] * d[35] * d[40] * d[49] - 2 * d[26] * d[27] * d[41] * d[49] + 2 * d[24] * d[31] * d[41] * d[49] + 2 * d[22] * d[33] * d[41] * d[49] - 2 * d[18] * d[35] * d[41] * d[49] - 2 * d[21] * d[29] * d[42] * d[49] - 2 * d[20] * d[30] * d[42] * d[49] + 2 * d[23] * d[31] * d[42] * d[49] + 2 * d[22] * d[32] * d[42] * d[49] + 2 * d[20] * d[27] * d[43] * d[49] + 2 * d[18] * d[29] * d[43] * d[49] - 4 * d[22] * d[31] * d[43] * d[49] - 2 * d[23] * d[27] * d[44] * d[49] + 2 * d[22] * d[30] * d[44] * d[49] + 2 * d[21] * d[31] * d[44] * d[49] - 2 * d[18] * d[32] * d[44] * d[49] + 2 * d[26] * d[28] * d[36] * d[50] - 2 * d[25] * d[32] * d[36] * d[50] - 2 * d[23] * d[34] * d[36] * d[50] + 2 * d[19] * d[35] * d[36] * d[50] + 2 * d[26] * d[27] * d[37] * d[50] - 2 * d[24] * d[31] * d[37] * d[50] - 2 * d[22] * d[33] * d[37] * d[50] + 2 * d[18] * d[35] * d[37] * d[50] - 4 * d[26] * d[30] * d[39] * d[50] + 2 * d[25] * d[31] * d[39] * d[50] + 2 * d[24] * d[32] * d[39] * d[50] + 2 * d[23] * d[33] * d[39] * d[50] + 2 * d[22] * d[34] * d[39] * d[50] - 4 * d[21] * d[35] * d[39] * d[50] - 2 * d[24] * d[28] * d[40] * d[50] + 2 * d[25] * d[30] * d[40] * d[50] - 2 * d[19] * d[33] * d[40] * d[50] + 2 * d[21] * d[34] * d[40] * d[50] - 2 * d[25] * d[27] * d[41] * d[50] + 2 * d[24] * d[30] * d[41] * d[50] + 2 * d[21] * d[33] * d[41] * d[50] - 2 * d[18] * d[34] * d[41] * d[50] - 2 * d[22] * d[28] * d[42] * d[50] + 2 * d[23] * d[30] * d[42] * d[50] - 2 * d[19] * d[31] * d[42] * d[50] + 2 * d[21] * d[32] * d[42] * d[50] - 2 * d[23] * d[27] * d[43] * d[50] + 2 * d[22] * d[30] * d[43] * d[50] + 2 * d[21] * d[31] * d[43] * d[50] - 2 * d[18] * d[32] * d[43] * d[50] + 2 * d[19] * d[27] * d[44] * d[50] + 2 * d[18] * d[28] * d[44] * d[50] - 4 * d[21] * d[30] * d[44] * d[50] - d[20] * d[28] * d[36] * d[58] - d[19] * d[29] * d[36] * d[58] + 2 * d[23] * d[32] * d[36] * d[58] - d[20] * d[27] * d[37] * d[58] - d[18] * d[29] * d[37] * d[58] + 2 * d[22] * d[31] * d[37] * d[58] - d[19] * d[27] * d[38] * d[58] - d[18] * d[28] * d[38] * d[58] + 2 * d[21] * d[30] * d[38] * d[58] + 2 * d[21] * d[29] * d[39] * d[58] + 2 * d[20] * d[30] * d[39] * d[58] - 2 * d[23] * d[31] * d[39] * d[58] - 2 * d[22] * d[32] * d[39] * d[58] + 2 * d[22] * d[28] * d[40] * d[58] - 2 * d[23] * d[30] * d[40] * d[58] + 2 * d[19] * d[31] * d[40] * d[58] - 2 * d[21] * d[32] * d[40] * d[58] + 2 * d[23] * d[27] * d[41] * d[58] - 2 * d[22] * d[30] * d[41] * d[58] - 2 * d[21] * d[31] * d[41] * d[58] + 2 * d[18] * d[32] * d[41] * d[58];
    coeffs[50] = 2 * d[29] * d[33] * d[37] * d[48] - 2 * d[31] * d[35] * d[37] * d[48] + 2 * d[28] * d[33] * d[38] * d[48] - 2 * d[30] * d[34] * d[38] * d[48] - 2 * d[29] * d[34] * d[39] * d[48] + 2 * d[32] * d[35] * d[39] * d[48] + 2 * d[32] * d[34] * d[40] * d[48] - 2 * d[28] * d[35] * d[40] * d[48] - 4 * d[32] * d[33] * d[41] * d[48] + 2 * d[31] * d[34] * d[41] * d[48] + 2 * d[30] * d[35] * d[41] * d[48] + 2 * d[28] * d[29] * d[42] * d[48] - 2 * std::pow(d[32], 2) * d[42] * d[48] - 2 * d[29] * d[30] * d[43] * d[48] + 2 * d[31] * d[32] * d[43] * d[48] - 2 * d[28] * d[31] * d[44] * d[48] + 2 * d[30] * d[32] * d[44] * d[48] + 2 * d[29] * d[34] * d[36] * d[49] - 2 * d[32] * d[35] * d[36] * d[49] - 2 * d[30] * d[33] * d[38] * d[49] + 2 * d[27] * d[34] * d[38] * d[49] - 2 * d[29] * d[33] * d[39] * d[49] + 2 * d[31] * d[35] * d[39] * d[49] + 2 * d[32] * d[33] * d[40] * d[49] - 4 * d[31] * d[34] * d[40] * d[49] + 2 * d[30] * d[35] * d[40] * d[49] + 2 * d[31] * d[33] * d[41] * d[49] - 2 * d[27] * d[35] * d[41] * d[49] - 2 * d[29] * d[30] * d[42] * d[49] + 2 * d[31] * d[32] * d[42] * d[49] + 2 * d[27] * d[29] * d[43] * d[49] - 2 * std::pow(d[31], 2) * d[43] * d[49] + 2 * d[30] * d[31] * d[44] * d[49] - 2 * d[27] * d[32] * d[44] * d[49] - 2 * d[32] * d[34] * d[36] * d[50] + 2 * d[28] * d[35] * d[36] * d[50] - 2 * d[31] * d[33] * d[37] * d[50] + 2 * d[27] * d[35] * d[37] * d[50] + 2 * d[32] * d[33] * d[39] * d[50] + 2 * d[31] * d[34] * d[39] * d[50] - 4 * d[30] * d[35] * d[39] * d[50] - 2 * d[28] * d[33] * d[40] * d[50] + 2 * d[30] * d[34] * d[40] * d[50] + 2 * d[30] * d[33] * d[41] * d[50] - 2 * d[27] * d[34] * d[41] * d[50] - 2 * d[28] * d[31] * d[42] * d[50] + 2 * d[30] * d[32] * d[42] * d[50] + 2 * d[30] * d[31] * d[43] * d[50] - 2 * d[27] * d[32] * d[43] * d[50] + 2 * d[27] * d[28] * d[44] * d[50] - 2 * std::pow(d[30], 2) * d[44] * d[50] - d[28] * d[29] * d[36] * d[58] + std::pow(d[32], 2) * d[36] * d[58] - d[27] * d[29] * d[37] * d[58] + std::pow(d[31], 2) * d[37] * d[58] - d[27] * d[28] * d[38] * d[58] + std::pow(d[30], 2) * d[38] * d[58] + 2 * d[29] * d[30] * d[39] * d[58] - 2 * d[31] * d[32] * d[39] * d[58] + 2 * d[28] * d[31] * d[40] * d[58] - 2 * d[30] * d[32] * d[40] * d[58] - 2 * d[30] * d[31] * d[41] * d[58] + 2 * d[27] * d[32] * d[41] * d[58];
    coeffs[51] = 2 * d[15] * d[37] * d[38] * d[48] - 2 * d[16] * d[38] * d[39] * d[48] - 2 * d[17] * d[37] * d[40] * d[48] + 2 * d[17] * d[39] * d[41] * d[48] + 2 * d[16] * d[40] * d[41] * d[48] - 2 * d[15] * std::pow(d[41], 2) * d[48] + 2 * d[11] * d[37] * d[42] * d[48] + 2 * d[10] * d[38] * d[42] * d[48] - 4 * d[14] * d[41] * d[42] * d[48] - 2 * d[12] * d[38] * d[43] * d[48] - 2 * d[11] * d[39] * d[43] * d[48] + 2 * d[14] * d[40] * d[43] * d[48] + 2 * d[13] * d[41] * d[43] * d[48] - 2 * d[13] * d[37] * d[44] * d[48] + 2 * d[14] * d[39] * d[44] * d[48] - 2 * d[10] * d[40] * d[44] * d[48] + 2 * d[12] * d[41] * d[44] * d[48] + 2 * d[16] * d[36] * d[38] * d[49] - 2 * d[15] * d[38] * d[39] * d[49] + 2 * d[17] * d[39] * d[40] * d[49] - 2 * d[16] * std::pow(d[40], 2) * d[49] - 2 * d[17] * d[36] * d[41] * d[49] + 2 * d[15] * d[40] * d[41] * d[49] - 2 * d[12] * d[38] * d[42] * d[49] - 2 * d[11] * d[39] * d[42] * d[49] + 2 * d[14] * d[40] * d[42] * d[49] + 2 * d[13] * d[41] * d[42] * d[49] + 2 * d[11] * d[36] * d[43] * d[49] + 2 * d[9] * d[38] * d[43] * d[49] - 4 * d[13] * d[40] * d[43] * d[49] - 2 * d[14] * d[36] * d[44] * d[49] + 2 * d[13] * d[39] * d[44] * d[49] + 2 * d[12] * d[40] * d[44] * d[49] - 2 * d[9] * d[41] * d[44] * d[49] + 2 * d[17] * d[36] * d[37] * d[50] - 2 * d[17] * std::pow(d[39], 2) * d[50] - 2 * d[15] * d[37] * d[40] * d[50] + 2 * d[16] * d[39] * d[40] * d[50] - 2 * d[16] * d[36] * d[41] * d[50] + 2 * d[15] * d[39] * d[41] * d[50] - 2 * d[13] * d[37] * d[42] * d[50] + 2 * d[14] * d[39] * d[42] * d[50] - 2 * d[10] * d[40] * d[42] * d[50] + 2 * d[12] * d[41] * d[42] * d[50] - 2 * d[14] * d[36] * d[43] * d[50] + 2 * d[13] * d[39] * d[43] * d[50] + 2 * d[12] * d[40] * d[43] * d[50] - 2 * d[9] * d[41] * d[43] * d[50] + 2 * d[10] * d[36] * d[44] * d[50] + 2 * d[9] * d[37] * d[44] * d[50] - 4 * d[12] * d[39] * d[44] * d[50] - d[11] * d[36] * d[37] * d[58] - d[10] * d[36] * d[38] * d[58] - d[9] * d[37] * d[38] * d[58] + 2 * d[12] * d[38] * d[39] * d[58] + d[11] * std::pow(d[39], 2) * d[58] + 2 * d[13] * d[37] * d[40] * d[58] - 2 * d[14] * d[39] * d[40] * d[58] + d[10] * std::pow(d[40], 2) * d[58] + 2 * d[14] * d[36] * d[41] * d[58] - 2 * d[13] * d[39] * d[41] * d[58] - 2 * d[12] * d[40] * d[41] * d[58] + d[9] * std::pow(d[41], 2) * d[58];
    coeffs[52] = 2 * d[24] * d[37] * d[38] * d[48] - 2 * d[25] * d[38] * d[39] * d[48] - 2 * d[26] * d[37] * d[40] * d[48] + 2 * d[26] * d[39] * d[41] * d[48] + 2 * d[25] * d[40] * d[41] * d[48] - 2 * d[24] * std::pow(d[41], 2) * d[48] + 2 * d[20] * d[37] * d[42] * d[48] + 2 * d[19] * d[38] * d[42] * d[48] - 4 * d[23] * d[41] * d[42] * d[48] - 2 * d[21] * d[38] * d[43] * d[48] - 2 * d[20] * d[39] * d[43] * d[48] + 2 * d[23] * d[40] * d[43] * d[48] + 2 * d[22] * d[41] * d[43] * d[48] - 2 * d[22] * d[37] * d[44] * d[48] + 2 * d[23] * d[39] * d[44] * d[48] - 2 * d[19] * d[40] * d[44] * d[48] + 2 * d[21] * d[41] * d[44] * d[48] + 2 * d[25] * d[36] * d[38] * d[49] - 2 * d[24] * d[38] * d[39] * d[49] + 2 * d[26] * d[39] * d[40] * d[49] - 2 * d[25] * std::pow(d[40], 2) * d[49] - 2 * d[26] * d[36] * d[41] * d[49] + 2 * d[24] * d[40] * d[41] * d[49] - 2 * d[21] * d[38] * d[42] * d[49] - 2 * d[20] * d[39] * d[42] * d[49] + 2 * d[23] * d[40] * d[42] * d[49] + 2 * d[22] * d[41] * d[42] * d[49] + 2 * d[20] * d[36] * d[43] * d[49] + 2 * d[18] * d[38] * d[43] * d[49] - 4 * d[22] * d[40] * d[43] * d[49] - 2 * d[23] * d[36] * d[44] * d[49] + 2 * d[22] * d[39] * d[44] * d[49] + 2 * d[21] * d[40] * d[44] * d[49] - 2 * d[18] * d[41] * d[44] * d[49] + 2 * d[26] * d[36] * d[37] * d[50] - 2 * d[26] * std::pow(d[39], 2) * d[50] - 2 * d[24] * d[37] * d[40] * d[50] + 2 * d[25] * d[39] * d[40] * d[50] - 2 * d[25] * d[36] * d[41] * d[50] + 2 * d[24] * d[39] * d[41] * d[50] - 2 * d[22] * d[37] * d[42] * d[50] + 2 * d[23] * d[39] * d[42] * d[50] - 2 * d[19] * d[40] * d[42] * d[50] + 2 * d[21] * d[41] * d[42] * d[50] - 2 * d[23] * d[36] * d[43] * d[50] + 2 * d[22] * d[39] * d[43] * d[50] + 2 * d[21] * d[40] * d[43] * d[50] - 2 * d[18] * d[41] * d[43] * d[50] + 2 * d[19] * d[36] * d[44] * d[50] + 2 * d[18] * d[37] * d[44] * d[50] - 4 * d[21] * d[39] * d[44] * d[50] - d[20] * d[36] * d[37] * d[58] - d[19] * d[36] * d[38] * d[58] - d[18] * d[37] * d[38] * d[58] + 2 * d[21] * d[38] * d[39] * d[58] + d[20] * std::pow(d[39], 2) * d[58] + 2 * d[22] * d[37] * d[40] * d[58] - 2 * d[23] * d[39] * d[40] * d[58] + d[19] * std::pow(d[40], 2) * d[58] + 2 * d[23] * d[36] * d[41] * d[58] - 2 * d[22] * d[39] * d[41] * d[58] - 2 * d[21] * d[40] * d[41] * d[58] + d[18] * std::pow(d[41], 2) * d[58];
    coeffs[53] = 2 * d[33] * d[37] * d[38] * d[48] - 2 * d[34] * d[38] * d[39] * d[48] - 2 * d[35] * d[37] * d[40] * d[48] + 2 * d[35] * d[39] * d[41] * d[48] + 2 * d[34] * d[40] * d[41] * d[48] - 2 * d[33] * std::pow(d[41], 2) * d[48] + 2 * d[29] * d[37] * d[42] * d[48] + 2 * d[28] * d[38] * d[42] * d[48] - 4 * d[32] * d[41] * d[42] * d[48] - 2 * d[30] * d[38] * d[43] * d[48] - 2 * d[29] * d[39] * d[43] * d[48] + 2 * d[32] * d[40] * d[43] * d[48] + 2 * d[31] * d[41] * d[43] * d[48] - 2 * d[31] * d[37] * d[44] * d[48] + 2 * d[32] * d[39] * d[44] * d[48] - 2 * d[28] * d[40] * d[44] * d[48] + 2 * d[30] * d[41] * d[44] * d[48] + 2 * d[34] * d[36] * d[38] * d[49] - 2 * d[33] * d[38] * d[39] * d[49] + 2 * d[35] * d[39] * d[40] * d[49] - 2 * d[34] * std::pow(d[40], 2) * d[49] - 2 * d[35] * d[36] * d[41] * d[49] + 2 * d[33] * d[40] * d[41] * d[49] - 2 * d[30] * d[38] * d[42] * d[49] - 2 * d[29] * d[39] * d[42] * d[49] + 2 * d[32] * d[40] * d[42] * d[49] + 2 * d[31] * d[41] * d[42] * d[49] + 2 * d[29] * d[36] * d[43] * d[49] + 2 * d[27] * d[38] * d[43] * d[49] - 4 * d[31] * d[40] * d[43] * d[49] - 2 * d[32] * d[36] * d[44] * d[49] + 2 * d[31] * d[39] * d[44] * d[49] + 2 * d[30] * d[40] * d[44] * d[49] - 2 * d[27] * d[41] * d[44] * d[49] + 2 * d[35] * d[36] * d[37] * d[50] - 2 * d[35] * std::pow(d[39], 2) * d[50] - 2 * d[33] * d[37] * d[40] * d[50] + 2 * d[34] * d[39] * d[40] * d[50] - 2 * d[34] * d[36] * d[41] * d[50] + 2 * d[33] * d[39] * d[41] * d[50] - 2 * d[31] * d[37] * d[42] * d[50] + 2 * d[32] * d[39] * d[42] * d[50] - 2 * d[28] * d[40] * d[42] * d[50] + 2 * d[30] * d[41] * d[42] * d[50] - 2 * d[32] * d[36] * d[43] * d[50] + 2 * d[31] * d[39] * d[43] * d[50] + 2 * d[30] * d[40] * d[43] * d[50] - 2 * d[27] * d[41] * d[43] * d[50] + 2 * d[28] * d[36] * d[44] * d[50] + 2 * d[27] * d[37] * d[44] * d[50] - 4 * d[30] * d[39] * d[44] * d[50] - d[29] * d[36] * d[37] * d[58] - d[28] * d[36] * d[38] * d[58] - d[27] * d[37] * d[38] * d[58] + 2 * d[30] * d[38] * d[39] * d[58] + d[29] * std::pow(d[39], 2) * d[58] + 2 * d[31] * d[37] * d[40] * d[58] - 2 * d[32] * d[39] * d[40] * d[58] + d[28] * std::pow(d[40], 2) * d[58] + 2 * d[32] * d[36] * d[41] * d[58] - 2 * d[31] * d[39] * d[41] * d[58] - 2 * d[30] * d[40] * d[41] * d[58] + d[27] * std::pow(d[41], 2) * d[58];
    coeffs[54] = 2 * d[37] * d[38] * d[42] * d[48] - 2 * std::pow(d[41], 2) * d[42] * d[48] - 2 * d[38] * d[39] * d[43] * d[48] + 2 * d[40] * d[41] * d[43] * d[48] - 2 * d[37] * d[40] * d[44] * d[48] + 2 * d[39] * d[41] * d[44] * d[48] - 2 * d[38] * d[39] * d[42] * d[49] + 2 * d[40] * d[41] * d[42] * d[49] + 2 * d[36] * d[38] * d[43] * d[49] - 2 * std::pow(d[40], 2) * d[43] * d[49] + 2 * d[39] * d[40] * d[44] * d[49] - 2 * d[36] * d[41] * d[44] * d[49] - 2 * d[37] * d[40] * d[42] * d[50] + 2 * d[39] * d[41] * d[42] * d[50] + 2 * d[39] * d[40] * d[43] * d[50] - 2 * d[36] * d[41] * d[43] * d[50] + 2 * d[36] * d[37] * d[44] * d[50] - 2 * std::pow(d[39], 2) * d[44] * d[50] - d[36] * d[37] * d[38] * d[58] + d[38] * std::pow(d[39], 2) * d[58] + d[37] * std::pow(d[40], 2) * d[58] - 2 * d[39] * d[40] * d[41] * d[58] + d[36] * std::pow(d[41], 2) * d[58];
    coeffs[55] = 2 * d[6] * d[10] * d[11] * d[48] - 2 * d[7] * d[11] * d[12] * d[48] - 2 * d[8] * d[10] * d[13] * d[48] + 2 * d[8] * d[12] * d[14] * d[48] + 2 * d[7] * d[13] * d[14] * d[48] - 2 * d[6] * std::pow(d[14], 2) * d[48] + 2 * d[2] * d[10] * d[15] * d[48] + 2 * d[1] * d[11] * d[15] * d[48] - 4 * d[5] * d[14] * d[15] * d[48] - 2 * d[3] * d[11] * d[16] * d[48] - 2 * d[2] * d[12] * d[16] * d[48] + 2 * d[5] * d[13] * d[16] * d[48] + 2 * d[4] * d[14] * d[16] * d[48] - 2 * d[4] * d[10] * d[17] * d[48] + 2 * d[5] * d[12] * d[17] * d[48] - 2 * d[1] * d[13] * d[17] * d[48] + 2 * d[3] * d[14] * d[17] * d[48] + d[10] * d[11] * std::pow(d[48], 2) - std::pow(d[14], 2) * std::pow(d[48], 2) + 2 * d[7] * d[9] * d[11] * d[49] - 2 * d[6] * d[11] * d[12] * d[49] + 2 * d[8] * d[12] * d[13] * d[49] - 2 * d[7] * std::pow(d[13], 2) * d[49] - 2 * d[8] * d[9] * d[14] * d[49] + 2 * d[6] * d[13] * d[14] * d[49] - 2 * d[3] * d[11] * d[15] * d[49] - 2 * d[2] * d[12] * d[15] * d[49] + 2 * d[5] * d[13] * d[15] * d[49] + 2 * d[4] * d[14] * d[15] * d[49] + 2 * d[2] * d[9] * d[16] * d[49] + 2 * d[0] * d[11] * d[16] * d[49] - 4 * d[4] * d[13] * d[16] * d[49] - 2 * d[5] * d[9] * d[17] * d[49] + 2 * d[4] * d[12] * d[17] * d[49] + 2 * d[3] * d[13] * d[17] * d[49] - 2 * d[0] * d[14] * d[17] * d[49] - 2 * d[11] * d[12] * d[48] * d[49] + 2 * d[13] * d[14] * d[48] * d[49] + d[9] * d[11] * std::pow(d[49], 2) - std::pow(d[13], 2) * std::pow(d[49], 2) + 2 * d[8] * d[9] * d[10] * d[50] - 2 * d[8] * std::pow(d[12], 2) * d[50] - 2 * d[6] * d[10] * d[13] * d[50] + 2 * d[7] * d[12] * d[13] * d[50] - 2 * d[7] * d[9] * d[14] * d[50] + 2 * d[6] * d[12] * d[14] * d[50] - 2 * d[4] * d[10] * d[15] * d[50] + 2 * d[5] * d[12] * d[15] * d[50] - 2 * d[1] * d[13] * d[15] * d[50] + 2 * d[3] * d[14] * d[15] * d[50] - 2 * d[5] * d[9] * d[16] * d[50] + 2 * d[4] * d[12] * d[16] * d[50] + 2 * d[3] * d[13] * d[16] * d[50] - 2 * d[0] * d[14] * d[16] * d[50] + 2 * d[1] * d[9] * d[17] * d[50] + 2 * d[0] * d[10] * d[17] * d[50] - 4 * d[3] * d[12] * d[17] * d[50] - 2 * d[10] * d[13] * d[48] * d[50] + 2 * d[12] * d[14] * d[48] * d[50] + 2 * d[12] * d[13] * d[49] * d[50] - 2 * d[9] * d[14] * d[49] * d[50] + d[9] * d[10] * std::pow(d[50], 2) - std::pow(d[12], 2) * std::pow(d[50], 2) - d[2] * d[9] * d[10] * d[58] - d[1] * d[9] * d[11] * d[58] - d[0] * d[10] * d[11] * d[58] + 2 * d[3] * d[11] * d[12] * d[58] + d[2] * std::pow(d[12], 2) * d[58] + 2 * d[4] * d[10] * d[13] * d[58] - 2 * d[5] * d[12] * d[13] * d[58] + d[1] * std::pow(d[13], 2) * d[58] + 2 * d[5] * d[9] * d[14] * d[58] - 2 * d[4] * d[12] * d[14] * d[58] - 2 * d[3] * d[13] * d[14] * d[58] + d[0] * std::pow(d[14], 2) * d[58];
    coeffs[56] = 2 * d[6] * d[11] * d[19] * d[48] - 2 * d[8] * d[13] * d[19] * d[48] + 2 * d[2] * d[15] * d[19] * d[48] - 2 * d[4] * d[17] * d[19] * d[48] + 2 * d[6] * d[10] * d[20] * d[48] - 2 * d[7] * d[12] * d[20] * d[48] + 2 * d[1] * d[15] * d[20] * d[48] - 2 * d[3] * d[16] * d[20] * d[48] - 2 * d[7] * d[11] * d[21] * d[48] + 2 * d[8] * d[14] * d[21] * d[48] - 2 * d[2] * d[16] * d[21] * d[48] + 2 * d[5] * d[17] * d[21] * d[48] - 2 * d[8] * d[10] * d[22] * d[48] + 2 * d[7] * d[14] * d[22] * d[48] + 2 * d[5] * d[16] * d[22] * d[48] - 2 * d[1] * d[17] * d[22] * d[48] + 2 * d[8] * d[12] * d[23] * d[48] + 2 * d[7] * d[13] * d[23] * d[48] - 4 * d[6] * d[14] * d[23] * d[48] - 4 * d[5] * d[15] * d[23] * d[48] + 2 * d[4] * d[16] * d[23] * d[48] + 2 * d[3] * d[17] * d[23] * d[48] + 2 * d[2] * d[10] * d[24] * d[48] + 2 * d[1] * d[11] * d[24] * d[48] - 4 * d[5] * d[14] * d[24] * d[48] - 2 * d[3] * d[11] * d[25] * d[48] - 2 * d[2] * d[12] * d[25] * d[48] + 2 * d[5] * d[13] * d[25] * d[48] + 2 * d[4] * d[14] * d[25] * d[48] - 2 * d[4] * d[10] * d[26] * d[48] + 2 * d[5] * d[12] * d[26] * d[48] - 2 * d[1] * d[13] * d[26] * d[48] + 2 * d[3] * d[14] * d[26] * d[48] + d[11] * d[19] * std::pow(d[48], 2) + d[10] * d[20] * std::pow(d[48], 2) - 2 * d[14] * d[23] * std::pow(d[48], 2) + 2 * d[7] * d[11] * d[18] * d[49] - 2 * d[8] * d[14] * d[18] * d[49] + 2 * d[2] * d[16] * d[18] * d[49] - 2 * d[5] * d[17] * d[18] * d[49] + 2 * d[7] * d[9] * d[20] * d[49] - 2 * d[6] * d[12] * d[20] * d[49] - 2 * d[3] * d[15] * d[20] * d[49] + 2 * d[0] * d[16] * d[20] * d[49] - 2 * d[6] * d[11] * d[21] * d[49] + 2 * d[8] * d[13] * d[21] * d[49] - 2 * d[2] * d[15] * d[21] * d[49] + 2 * d[4] * d[17] * d[21] * d[49] + 2 * d[8] * d[12] * d[22] * d[49] - 4 * d[7] * d[13] * d[22] * d[49] + 2 * d[6] * d[14] * d[22] * d[49] + 2 * d[5] * d[15] * d[22] * d[49] - 4 * d[4] * d[16] * d[22] * d[49] + 2 * d[3] * d[17] * d[22] * d[49] - 2 * d[8] * d[9] * d[23] * d[49] + 2 * d[6] * d[13] * d[23] * d[49] + 2 * d[4] * d[15] * d[23] * d[49] - 2 * d[0] * d[17] * d[23] * d[49] - 2 * d[3] * d[11] * d[24] * d[49] - 2 * d[2] * d[12] * d[24] * d[49] + 2 * d[5] * d[13] * d[24] * d[49] + 2 * d[4] * d[14] * d[24] * d[49] + 2 * d[2] * d[9] * d[25] * d[49] + 2 * d[0] * d[11] * d[25] * d[49] - 4 * d[4] * d[13] * d[25] * d[49] - 2 * d[5] * d[9] * d[26] * d[49] + 2 * d[4] * d[12] * d[26] * d[49] + 2 * d[3] * d[13] * d[26] * d[49] - 2 * d[0] * d[14] * d[26] * d[49] - 2 * d[12] * d[20] * d[48] * d[49] - 2 * d[11] * d[21] * d[48] * d[49] + 2 * d[14] * d[22] * d[48] * d[49] + 2 * d[13] * d[23] * d[48] * d[49] + d[11] * d[18] * std::pow(d[49], 2) + d[9] * d[20] * std::pow(d[49], 2) - 2 * d[13] * d[22] * std::pow(d[49], 2) + 2 * d[8] * d[10] * d[18] * d[50] - 2 * d[7] * d[14] * d[18] * d[50] - 2 * d[5] * d[16] * d[18] * d[50] + 2 * d[1] * d[17] * d[18] * d[50] + 2 * d[8] * d[9] * d[19] * d[50] - 2 * d[6] * d[13] * d[19] * d[50] - 2 * d[4] * d[15] * d[19] * d[50] + 2 * d[0] * d[17] * d[19] * d[50] - 4 * d[8] * d[12] * d[21] * d[50] + 2 * d[7] * d[13] * d[21] * d[50] + 2 * d[6] * d[14] * d[21] * d[50] + 2 * d[5] * d[15] * d[21] * d[50] + 2 * d[4] * d[16] * d[21] * d[50] - 4 * d[3] * d[17] * d[21] * d[50] - 2 * d[6] * d[10] * d[22] * d[50] + 2 * d[7] * d[12] * d[22] * d[50] - 2 * d[1] * d[15] * d[22] * d[50] + 2 * d[3] * d[16] * d[22] * d[50] - 2 * d[7] * d[9] * d[23] * d[50] + 2 * d[6] * d[12] * d[23] * d[50] + 2 * d[3] * d[15] * d[23] * d[50] - 2 * d[0] * d[16] * d[23] * d[50] - 2 * d[4] * d[10] * d[24] * d[50] + 2 * d[5] * d[12] * d[24] * d[50] - 2 * d[1] * d[13] * d[24] * d[50] + 2 * d[3] * d[14] * d[24] * d[50] - 2 * d[5] * d[9] * d[25] * d[50] + 2 * d[4] * d[12] * d[25] * d[50] + 2 * d[3] * d[13] * d[25] * d[50] - 2 * d[0] * d[14] * d[25] * d[50] + 2 * d[1] * d[9] * d[26] * d[50] + 2 * d[0] * d[10] * d[26] * d[50] - 4 * d[3] * d[12] * d[26] * d[50] - 2 * d[13] * d[19] * d[48] * d[50] + 2 * d[14] * d[21] * d[48] * d[50] - 2 * d[10] * d[22] * d[48] * d[50] + 2 * d[12] * d[23] * d[48] * d[50] - 2 * d[14] * d[18] * d[49] * d[50] + 2 * d[13] * d[21] * d[49] * d[50] + 2 * d[12] * d[22] * d[49] * d[50] - 2 * d[9] * d[23] * d[49] * d[50] + d[10] * d[18] * std::pow(d[50], 2) + d[9] * d[19] * std::pow(d[50], 2) - 2 * d[12] * d[21] * std::pow(d[50], 2) - d[2] * d[10] * d[18] * d[58] - d[1] * d[11] * d[18] * d[58] + 2 * d[5] * d[14] * d[18] * d[58] - d[2] * d[9] * d[19] * d[58] - d[0] * d[11] * d[19] * d[58] + 2 * d[4] * d[13] * d[19] * d[58] - d[1] * d[9] * d[20] * d[58] - d[0] * d[10] * d[20] * d[58] + 2 * d[3] * d[12] * d[20] * d[58] + 2 * d[3] * d[11] * d[21] * d[58] + 2 * d[2] * d[12] * d[21] * d[58] - 2 * d[5] * d[13] * d[21] * d[58] - 2 * d[4] * d[14] * d[21] * d[58] + 2 * d[4] * d[10] * d[22] * d[58] - 2 * d[5] * d[12] * d[22] * d[58] + 2 * d[1] * d[13] * d[22] * d[58] - 2 * d[3] * d[14] * d[22] * d[58] + 2 * d[5] * d[9] * d[23] * d[58] - 2 * d[4] * d[12] * d[23] * d[58] - 2 * d[3] * d[13] * d[23] * d[58] + 2 * d[0] * d[14] * d[23] * d[58];
    coeffs[57] = 2 * d[6] * d[19] * d[20] * d[48] - 2 * d[7] * d[20] * d[21] * d[48] - 2 * d[8] * d[19] * d[22] * d[48] + 2 * d[8] * d[21] * d[23] * d[48] + 2 * d[7] * d[22] * d[23] * d[48] - 2 * d[6] * std::pow(d[23], 2) * d[48] + 2 * d[2] * d[19] * d[24] * d[48] + 2 * d[1] * d[20] * d[24] * d[48] - 4 * d[5] * d[23] * d[24] * d[48] - 2 * d[3] * d[20] * d[25] * d[48] - 2 * d[2] * d[21] * d[25] * d[48] + 2 * d[5] * d[22] * d[25] * d[48] + 2 * d[4] * d[23] * d[25] * d[48] - 2 * d[4] * d[19] * d[26] * d[48] + 2 * d[5] * d[21] * d[26] * d[48] - 2 * d[1] * d[22] * d[26] * d[48] + 2 * d[3] * d[23] * d[26] * d[48] + d[19] * d[20] * std::pow(d[48], 2) - std::pow(d[23], 2) * std::pow(d[48], 2) + 2 * d[7] * d[18] * d[20] * d[49] - 2 * d[6] * d[20] * d[21] * d[49] + 2 * d[8] * d[21] * d[22] * d[49] - 2 * d[7] * std::pow(d[22], 2) * d[49] - 2 * d[8] * d[18] * d[23] * d[49] + 2 * d[6] * d[22] * d[23] * d[49] - 2 * d[3] * d[20] * d[24] * d[49] - 2 * d[2] * d[21] * d[24] * d[49] + 2 * d[5] * d[22] * d[24] * d[49] + 2 * d[4] * d[23] * d[24] * d[49] + 2 * d[2] * d[18] * d[25] * d[49] + 2 * d[0] * d[20] * d[25] * d[49] - 4 * d[4] * d[22] * d[25] * d[49] - 2 * d[5] * d[18] * d[26] * d[49] + 2 * d[4] * d[21] * d[26] * d[49] + 2 * d[3] * d[22] * d[26] * d[49] - 2 * d[0] * d[23] * d[26] * d[49] - 2 * d[20] * d[21] * d[48] * d[49] + 2 * d[22] * d[23] * d[48] * d[49] + d[18] * d[20] * std::pow(d[49], 2) - std::pow(d[22], 2) * std::pow(d[49], 2) + 2 * d[8] * d[18] * d[19] * d[50] - 2 * d[8] * std::pow(d[21], 2) * d[50] - 2 * d[6] * d[19] * d[22] * d[50] + 2 * d[7] * d[21] * d[22] * d[50] - 2 * d[7] * d[18] * d[23] * d[50] + 2 * d[6] * d[21] * d[23] * d[50] - 2 * d[4] * d[19] * d[24] * d[50] + 2 * d[5] * d[21] * d[24] * d[50] - 2 * d[1] * d[22] * d[24] * d[50] + 2 * d[3] * d[23] * d[24] * d[50] - 2 * d[5] * d[18] * d[25] * d[50] + 2 * d[4] * d[21] * d[25] * d[50] + 2 * d[3] * d[22] * d[25] * d[50] - 2 * d[0] * d[23] * d[25] * d[50] + 2 * d[1] * d[18] * d[26] * d[50] + 2 * d[0] * d[19] * d[26] * d[50] - 4 * d[3] * d[21] * d[26] * d[50] - 2 * d[19] * d[22] * d[48] * d[50] + 2 * d[21] * d[23] * d[48] * d[50] + 2 * d[21] * d[22] * d[49] * d[50] - 2 * d[18] * d[23] * d[49] * d[50] + d[18] * d[19] * std::pow(d[50], 2) - std::pow(d[21], 2) * std::pow(d[50], 2) - d[2] * d[18] * d[19] * d[58] - d[1] * d[18] * d[20] * d[58] - d[0] * d[19] * d[20] * d[58] + 2 * d[3] * d[20] * d[21] * d[58] + d[2] * std::pow(d[21], 2) * d[58] + 2 * d[4] * d[19] * d[22] * d[58] - 2 * d[5] * d[21] * d[22] * d[58] + d[1] * std::pow(d[22], 2) * d[58] + 2 * d[5] * d[18] * d[23] * d[58] - 2 * d[4] * d[21] * d[23] * d[58] - 2 * d[3] * d[22] * d[23] * d[58] + d[0] * std::pow(d[23], 2) * d[58];
    coeffs[58] = 2 * d[6] * d[11] * d[28] * d[48] - 2 * d[8] * d[13] * d[28] * d[48] + 2 * d[2] * d[15] * d[28] * d[48] - 2 * d[4] * d[17] * d[28] * d[48] + 2 * d[6] * d[10] * d[29] * d[48] - 2 * d[7] * d[12] * d[29] * d[48] + 2 * d[1] * d[15] * d[29] * d[48] - 2 * d[3] * d[16] * d[29] * d[48] - 2 * d[7] * d[11] * d[30] * d[48] + 2 * d[8] * d[14] * d[30] * d[48] - 2 * d[2] * d[16] * d[30] * d[48] + 2 * d[5] * d[17] * d[30] * d[48] - 2 * d[8] * d[10] * d[31] * d[48] + 2 * d[7] * d[14] * d[31] * d[48] + 2 * d[5] * d[16] * d[31] * d[48] - 2 * d[1] * d[17] * d[31] * d[48] + 2 * d[8] * d[12] * d[32] * d[48] + 2 * d[7] * d[13] * d[32] * d[48] - 4 * d[6] * d[14] * d[32] * d[48] - 4 * d[5] * d[15] * d[32] * d[48] + 2 * d[4] * d[16] * d[32] * d[48] + 2 * d[3] * d[17] * d[32] * d[48] + 2 * d[2] * d[10] * d[33] * d[48] + 2 * d[1] * d[11] * d[33] * d[48] - 4 * d[5] * d[14] * d[33] * d[48] - 2 * d[3] * d[11] * d[34] * d[48] - 2 * d[2] * d[12] * d[34] * d[48] + 2 * d[5] * d[13] * d[34] * d[48] + 2 * d[4] * d[14] * d[34] * d[48] - 2 * d[4] * d[10] * d[35] * d[48] + 2 * d[5] * d[12] * d[35] * d[48] - 2 * d[1] * d[13] * d[35] * d[48] + 2 * d[3] * d[14] * d[35] * d[48] + d[11] * d[28] * std::pow(d[48], 2) + d[10] * d[29] * std::pow(d[48], 2) - 2 * d[14] * d[32] * std::pow(d[48], 2) + 2 * d[7] * d[11] * d[27] * d[49] - 2 * d[8] * d[14] * d[27] * d[49] + 2 * d[2] * d[16] * d[27] * d[49] - 2 * d[5] * d[17] * d[27] * d[49] + 2 * d[7] * d[9] * d[29] * d[49] - 2 * d[6] * d[12] * d[29] * d[49] - 2 * d[3] * d[15] * d[29] * d[49] + 2 * d[0] * d[16] * d[29] * d[49] - 2 * d[6] * d[11] * d[30] * d[49] + 2 * d[8] * d[13] * d[30] * d[49] - 2 * d[2] * d[15] * d[30] * d[49] + 2 * d[4] * d[17] * d[30] * d[49] + 2 * d[8] * d[12] * d[31] * d[49] - 4 * d[7] * d[13] * d[31] * d[49] + 2 * d[6] * d[14] * d[31] * d[49] + 2 * d[5] * d[15] * d[31] * d[49] - 4 * d[4] * d[16] * d[31] * d[49] + 2 * d[3] * d[17] * d[31] * d[49] - 2 * d[8] * d[9] * d[32] * d[49] + 2 * d[6] * d[13] * d[32] * d[49] + 2 * d[4] * d[15] * d[32] * d[49] - 2 * d[0] * d[17] * d[32] * d[49] - 2 * d[3] * d[11] * d[33] * d[49] - 2 * d[2] * d[12] * d[33] * d[49] + 2 * d[5] * d[13] * d[33] * d[49] + 2 * d[4] * d[14] * d[33] * d[49] + 2 * d[2] * d[9] * d[34] * d[49] + 2 * d[0] * d[11] * d[34] * d[49] - 4 * d[4] * d[13] * d[34] * d[49] - 2 * d[5] * d[9] * d[35] * d[49] + 2 * d[4] * d[12] * d[35] * d[49] + 2 * d[3] * d[13] * d[35] * d[49] - 2 * d[0] * d[14] * d[35] * d[49] - 2 * d[12] * d[29] * d[48] * d[49] - 2 * d[11] * d[30] * d[48] * d[49] + 2 * d[14] * d[31] * d[48] * d[49] + 2 * d[13] * d[32] * d[48] * d[49] + d[11] * d[27] * std::pow(d[49], 2) + d[9] * d[29] * std::pow(d[49], 2) - 2 * d[13] * d[31] * std::pow(d[49], 2) + 2 * d[8] * d[10] * d[27] * d[50] - 2 * d[7] * d[14] * d[27] * d[50] - 2 * d[5] * d[16] * d[27] * d[50] + 2 * d[1] * d[17] * d[27] * d[50] + 2 * d[8] * d[9] * d[28] * d[50] - 2 * d[6] * d[13] * d[28] * d[50] - 2 * d[4] * d[15] * d[28] * d[50] + 2 * d[0] * d[17] * d[28] * d[50] - 4 * d[8] * d[12] * d[30] * d[50] + 2 * d[7] * d[13] * d[30] * d[50] + 2 * d[6] * d[14] * d[30] * d[50] + 2 * d[5] * d[15] * d[30] * d[50] + 2 * d[4] * d[16] * d[30] * d[50] - 4 * d[3] * d[17] * d[30] * d[50] - 2 * d[6] * d[10] * d[31] * d[50] + 2 * d[7] * d[12] * d[31] * d[50] - 2 * d[1] * d[15] * d[31] * d[50] + 2 * d[3] * d[16] * d[31] * d[50] - 2 * d[7] * d[9] * d[32] * d[50] + 2 * d[6] * d[12] * d[32] * d[50] + 2 * d[3] * d[15] * d[32] * d[50] - 2 * d[0] * d[16] * d[32] * d[50] - 2 * d[4] * d[10] * d[33] * d[50] + 2 * d[5] * d[12] * d[33] * d[50] - 2 * d[1] * d[13] * d[33] * d[50] + 2 * d[3] * d[14] * d[33] * d[50] - 2 * d[5] * d[9] * d[34] * d[50] + 2 * d[4] * d[12] * d[34] * d[50] + 2 * d[3] * d[13] * d[34] * d[50] - 2 * d[0] * d[14] * d[34] * d[50] + 2 * d[1] * d[9] * d[35] * d[50] + 2 * d[0] * d[10] * d[35] * d[50] - 4 * d[3] * d[12] * d[35] * d[50] - 2 * d[13] * d[28] * d[48] * d[50] + 2 * d[14] * d[30] * d[48] * d[50] - 2 * d[10] * d[31] * d[48] * d[50] + 2 * d[12] * d[32] * d[48] * d[50] - 2 * d[14] * d[27] * d[49] * d[50] + 2 * d[13] * d[30] * d[49] * d[50] + 2 * d[12] * d[31] * d[49] * d[50] - 2 * d[9] * d[32] * d[49] * d[50] + d[10] * d[27] * std::pow(d[50], 2) + d[9] * d[28] * std::pow(d[50], 2) - 2 * d[12] * d[30] * std::pow(d[50], 2) - d[2] * d[10] * d[27] * d[58] - d[1] * d[11] * d[27] * d[58] + 2 * d[5] * d[14] * d[27] * d[58] - d[2] * d[9] * d[28] * d[58] - d[0] * d[11] * d[28] * d[58] + 2 * d[4] * d[13] * d[28] * d[58] - d[1] * d[9] * d[29] * d[58] - d[0] * d[10] * d[29] * d[58] + 2 * d[3] * d[12] * d[29] * d[58] + 2 * d[3] * d[11] * d[30] * d[58] + 2 * d[2] * d[12] * d[30] * d[58] - 2 * d[5] * d[13] * d[30] * d[58] - 2 * d[4] * d[14] * d[30] * d[58] + 2 * d[4] * d[10] * d[31] * d[58] - 2 * d[5] * d[12] * d[31] * d[58] + 2 * d[1] * d[13] * d[31] * d[58] - 2 * d[3] * d[14] * d[31] * d[58] + 2 * d[5] * d[9] * d[32] * d[58] - 2 * d[4] * d[12] * d[32] * d[58] - 2 * d[3] * d[13] * d[32] * d[58] + 2 * d[0] * d[14] * d[32] * d[58];
    coeffs[59] = 2 * d[6] * d[20] * d[28] * d[48] - 2 * d[8] * d[22] * d[28] * d[48] + 2 * d[2] * d[24] * d[28] * d[48] - 2 * d[4] * d[26] * d[28] * d[48] + 2 * d[6] * d[19] * d[29] * d[48] - 2 * d[7] * d[21] * d[29] * d[48] + 2 * d[1] * d[24] * d[29] * d[48] - 2 * d[3] * d[25] * d[29] * d[48] - 2 * d[7] * d[20] * d[30] * d[48] + 2 * d[8] * d[23] * d[30] * d[48] - 2 * d[2] * d[25] * d[30] * d[48] + 2 * d[5] * d[26] * d[30] * d[48] - 2 * d[8] * d[19] * d[31] * d[48] + 2 * d[7] * d[23] * d[31] * d[48] + 2 * d[5] * d[25] * d[31] * d[48] - 2 * d[1] * d[26] * d[31] * d[48] + 2 * d[8] * d[21] * d[32] * d[48] + 2 * d[7] * d[22] * d[32] * d[48] - 4 * d[6] * d[23] * d[32] * d[48] - 4 * d[5] * d[24] * d[32] * d[48] + 2 * d[4] * d[25] * d[32] * d[48] + 2 * d[3] * d[26] * d[32] * d[48] + 2 * d[2] * d[19] * d[33] * d[48] + 2 * d[1] * d[20] * d[33] * d[48] - 4 * d[5] * d[23] * d[33] * d[48] - 2 * d[3] * d[20] * d[34] * d[48] - 2 * d[2] * d[21] * d[34] * d[48] + 2 * d[5] * d[22] * d[34] * d[48] + 2 * d[4] * d[23] * d[34] * d[48] - 2 * d[4] * d[19] * d[35] * d[48] + 2 * d[5] * d[21] * d[35] * d[48] - 2 * d[1] * d[22] * d[35] * d[48] + 2 * d[3] * d[23] * d[35] * d[48] + d[20] * d[28] * std::pow(d[48], 2) + d[19] * d[29] * std::pow(d[48], 2) - 2 * d[23] * d[32] * std::pow(d[48], 2) + 2 * d[7] * d[20] * d[27] * d[49] - 2 * d[8] * d[23] * d[27] * d[49] + 2 * d[2] * d[25] * d[27] * d[49] - 2 * d[5] * d[26] * d[27] * d[49] + 2 * d[7] * d[18] * d[29] * d[49] - 2 * d[6] * d[21] * d[29] * d[49] - 2 * d[3] * d[24] * d[29] * d[49] + 2 * d[0] * d[25] * d[29] * d[49] - 2 * d[6] * d[20] * d[30] * d[49] + 2 * d[8] * d[22] * d[30] * d[49] - 2 * d[2] * d[24] * d[30] * d[49] + 2 * d[4] * d[26] * d[30] * d[49] + 2 * d[8] * d[21] * d[31] * d[49] - 4 * d[7] * d[22] * d[31] * d[49] + 2 * d[6] * d[23] * d[31] * d[49] + 2 * d[5] * d[24] * d[31] * d[49] - 4 * d[4] * d[25] * d[31] * d[49] + 2 * d[3] * d[26] * d[31] * d[49] - 2 * d[8] * d[18] * d[32] * d[49] + 2 * d[6] * d[22] * d[32] * d[49] + 2 * d[4] * d[24] * d[32] * d[49] - 2 * d[0] * d[26] * d[32] * d[49] - 2 * d[3] * d[20] * d[33] * d[49] - 2 * d[2] * d[21] * d[33] * d[49] + 2 * d[5] * d[22] * d[33] * d[49] + 2 * d[4] * d[23] * d[33] * d[49] + 2 * d[2] * d[18] * d[34] * d[49] + 2 * d[0] * d[20] * d[34] * d[49] - 4 * d[4] * d[22] * d[34] * d[49] - 2 * d[5] * d[18] * d[35] * d[49] + 2 * d[4] * d[21] * d[35] * d[49] + 2 * d[3] * d[22] * d[35] * d[49] - 2 * d[0] * d[23] * d[35] * d[49] - 2 * d[21] * d[29] * d[48] * d[49] - 2 * d[20] * d[30] * d[48] * d[49] + 2 * d[23] * d[31] * d[48] * d[49] + 2 * d[22] * d[32] * d[48] * d[49] + d[20] * d[27] * std::pow(d[49], 2) + d[18] * d[29] * std::pow(d[49], 2) - 2 * d[22] * d[31] * std::pow(d[49], 2) + 2 * d[8] * d[19] * d[27] * d[50] - 2 * d[7] * d[23] * d[27] * d[50] - 2 * d[5] * d[25] * d[27] * d[50] + 2 * d[1] * d[26] * d[27] * d[50] + 2 * d[8] * d[18] * d[28] * d[50] - 2 * d[6] * d[22] * d[28] * d[50] - 2 * d[4] * d[24] * d[28] * d[50] + 2 * d[0] * d[26] * d[28] * d[50] - 4 * d[8] * d[21] * d[30] * d[50] + 2 * d[7] * d[22] * d[30] * d[50] + 2 * d[6] * d[23] * d[30] * d[50] + 2 * d[5] * d[24] * d[30] * d[50] + 2 * d[4] * d[25] * d[30] * d[50] - 4 * d[3] * d[26] * d[30] * d[50] - 2 * d[6] * d[19] * d[31] * d[50] + 2 * d[7] * d[21] * d[31] * d[50] - 2 * d[1] * d[24] * d[31] * d[50] + 2 * d[3] * d[25] * d[31] * d[50] - 2 * d[7] * d[18] * d[32] * d[50] + 2 * d[6] * d[21] * d[32] * d[50] + 2 * d[3] * d[24] * d[32] * d[50] - 2 * d[0] * d[25] * d[32] * d[50] - 2 * d[4] * d[19] * d[33] * d[50] + 2 * d[5] * d[21] * d[33] * d[50] - 2 * d[1] * d[22] * d[33] * d[50] + 2 * d[3] * d[23] * d[33] * d[50] - 2 * d[5] * d[18] * d[34] * d[50] + 2 * d[4] * d[21] * d[34] * d[50] + 2 * d[3] * d[22] * d[34] * d[50] - 2 * d[0] * d[23] * d[34] * d[50] + 2 * d[1] * d[18] * d[35] * d[50] + 2 * d[0] * d[19] * d[35] * d[50] - 4 * d[3] * d[21] * d[35] * d[50] - 2 * d[22] * d[28] * d[48] * d[50] + 2 * d[23] * d[30] * d[48] * d[50] - 2 * d[19] * d[31] * d[48] * d[50] + 2 * d[21] * d[32] * d[48] * d[50] - 2 * d[23] * d[27] * d[49] * d[50] + 2 * d[22] * d[30] * d[49] * d[50] + 2 * d[21] * d[31] * d[49] * d[50] - 2 * d[18] * d[32] * d[49] * d[50] + d[19] * d[27] * std::pow(d[50], 2) + d[18] * d[28] * std::pow(d[50], 2) - 2 * d[21] * d[30] * std::pow(d[50], 2) - d[2] * d[19] * d[27] * d[58] - d[1] * d[20] * d[27] * d[58] + 2 * d[5] * d[23] * d[27] * d[58] - d[2] * d[18] * d[28] * d[58] - d[0] * d[20] * d[28] * d[58] + 2 * d[4] * d[22] * d[28] * d[58] - d[1] * d[18] * d[29] * d[58] - d[0] * d[19] * d[29] * d[58] + 2 * d[3] * d[21] * d[29] * d[58] + 2 * d[3] * d[20] * d[30] * d[58] + 2 * d[2] * d[21] * d[30] * d[58] - 2 * d[5] * d[22] * d[30] * d[58] - 2 * d[4] * d[23] * d[30] * d[58] + 2 * d[4] * d[19] * d[31] * d[58] - 2 * d[5] * d[21] * d[31] * d[58] + 2 * d[1] * d[22] * d[31] * d[58] - 2 * d[3] * d[23] * d[31] * d[58] + 2 * d[5] * d[18] * d[32] * d[58] - 2 * d[4] * d[21] * d[32] * d[58] - 2 * d[3] * d[22] * d[32] * d[58] + 2 * d[0] * d[23] * d[32] * d[58];
    coeffs[60] = 2 * d[6] * d[28] * d[29] * d[48] - 2 * d[7] * d[29] * d[30] * d[48] - 2 * d[8] * d[28] * d[31] * d[48] + 2 * d[8] * d[30] * d[32] * d[48] + 2 * d[7] * d[31] * d[32] * d[48] - 2 * d[6] * std::pow(d[32], 2) * d[48] + 2 * d[2] * d[28] * d[33] * d[48] + 2 * d[1] * d[29] * d[33] * d[48] - 4 * d[5] * d[32] * d[33] * d[48] - 2 * d[3] * d[29] * d[34] * d[48] - 2 * d[2] * d[30] * d[34] * d[48] + 2 * d[5] * d[31] * d[34] * d[48] + 2 * d[4] * d[32] * d[34] * d[48] - 2 * d[4] * d[28] * d[35] * d[48] + 2 * d[5] * d[30] * d[35] * d[48] - 2 * d[1] * d[31] * d[35] * d[48] + 2 * d[3] * d[32] * d[35] * d[48] + d[28] * d[29] * std::pow(d[48], 2) - std::pow(d[32], 2) * std::pow(d[48], 2) + 2 * d[7] * d[27] * d[29] * d[49] - 2 * d[6] * d[29] * d[30] * d[49] + 2 * d[8] * d[30] * d[31] * d[49] - 2 * d[7] * std::pow(d[31], 2) * d[49] - 2 * d[8] * d[27] * d[32] * d[49] + 2 * d[6] * d[31] * d[32] * d[49] - 2 * d[3] * d[29] * d[33] * d[49] - 2 * d[2] * d[30] * d[33] * d[49] + 2 * d[5] * d[31] * d[33] * d[49] + 2 * d[4] * d[32] * d[33] * d[49] + 2 * d[2] * d[27] * d[34] * d[49] + 2 * d[0] * d[29] * d[34] * d[49] - 4 * d[4] * d[31] * d[34] * d[49] - 2 * d[5] * d[27] * d[35] * d[49] + 2 * d[4] * d[30] * d[35] * d[49] + 2 * d[3] * d[31] * d[35] * d[49] - 2 * d[0] * d[32] * d[35] * d[49] - 2 * d[29] * d[30] * d[48] * d[49] + 2 * d[31] * d[32] * d[48] * d[49] + d[27] * d[29] * std::pow(d[49], 2) - std::pow(d[31], 2) * std::pow(d[49], 2) + 2 * d[8] * d[27] * d[28] * d[50] - 2 * d[8] * std::pow(d[30], 2) * d[50] - 2 * d[6] * d[28] * d[31] * d[50] + 2 * d[7] * d[30] * d[31] * d[50] - 2 * d[7] * d[27] * d[32] * d[50] + 2 * d[6] * d[30] * d[32] * d[50] - 2 * d[4] * d[28] * d[33] * d[50] + 2 * d[5] * d[30] * d[33] * d[50] - 2 * d[1] * d[31] * d[33] * d[50] + 2 * d[3] * d[32] * d[33] * d[50] - 2 * d[5] * d[27] * d[34] * d[50] + 2 * d[4] * d[30] * d[34] * d[50] + 2 * d[3] * d[31] * d[34] * d[50] - 2 * d[0] * d[32] * d[34] * d[50] + 2 * d[1] * d[27] * d[35] * d[50] + 2 * d[0] * d[28] * d[35] * d[50] - 4 * d[3] * d[30] * d[35] * d[50] - 2 * d[28] * d[31] * d[48] * d[50] + 2 * d[30] * d[32] * d[48] * d[50] + 2 * d[30] * d[31] * d[49] * d[50] - 2 * d[27] * d[32] * d[49] * d[50] + d[27] * d[28] * std::pow(d[50], 2) - std::pow(d[30], 2) * std::pow(d[50], 2) - d[2] * d[27] * d[28] * d[58] - d[1] * d[27] * d[29] * d[58] - d[0] * d[28] * d[29] * d[58] + 2 * d[3] * d[29] * d[30] * d[58] + d[2] * std::pow(d[30], 2) * d[58] + 2 * d[4] * d[28] * d[31] * d[58] - 2 * d[5] * d[30] * d[31] * d[58] + d[1] * std::pow(d[31], 2) * d[58] + 2 * d[5] * d[27] * d[32] * d[58] - 2 * d[4] * d[30] * d[32] * d[58] - 2 * d[3] * d[31] * d[32] * d[58] + d[0] * std::pow(d[32], 2) * d[58];
    coeffs[61] = 2 * d[6] * d[11] * d[37] * d[48] - 2 * d[8] * d[13] * d[37] * d[48] + 2 * d[2] * d[15] * d[37] * d[48] - 2 * d[4] * d[17] * d[37] * d[48] + 2 * d[6] * d[10] * d[38] * d[48] - 2 * d[7] * d[12] * d[38] * d[48] + 2 * d[1] * d[15] * d[38] * d[48] - 2 * d[3] * d[16] * d[38] * d[48] - 2 * d[7] * d[11] * d[39] * d[48] + 2 * d[8] * d[14] * d[39] * d[48] - 2 * d[2] * d[16] * d[39] * d[48] + 2 * d[5] * d[17] * d[39] * d[48] - 2 * d[8] * d[10] * d[40] * d[48] + 2 * d[7] * d[14] * d[40] * d[48] + 2 * d[5] * d[16] * d[40] * d[48] - 2 * d[1] * d[17] * d[40] * d[48] + 2 * d[8] * d[12] * d[41] * d[48] + 2 * d[7] * d[13] * d[41] * d[48] - 4 * d[6] * d[14] * d[41] * d[48] - 4 * d[5] * d[15] * d[41] * d[48] + 2 * d[4] * d[16] * d[41] * d[48] + 2 * d[3] * d[17] * d[41] * d[48] + 2 * d[2] * d[10] * d[42] * d[48] + 2 * d[1] * d[11] * d[42] * d[48] - 4 * d[5] * d[14] * d[42] * d[48] - 2 * d[3] * d[11] * d[43] * d[48] - 2 * d[2] * d[12] * d[43] * d[48] + 2 * d[5] * d[13] * d[43] * d[48] + 2 * d[4] * d[14] * d[43] * d[48] - 2 * d[4] * d[10] * d[44] * d[48] + 2 * d[5] * d[12] * d[44] * d[48] - 2 * d[1] * d[13] * d[44] * d[48] + 2 * d[3] * d[14] * d[44] * d[48] + d[11] * d[37] * std::pow(d[48], 2) + d[10] * d[38] * std::pow(d[48], 2) - 2 * d[14] * d[41] * std::pow(d[48], 2) + 2 * d[7] * d[11] * d[36] * d[49] - 2 * d[8] * d[14] * d[36] * d[49] + 2 * d[2] * d[16] * d[36] * d[49] - 2 * d[5] * d[17] * d[36] * d[49] + 2 * d[7] * d[9] * d[38] * d[49] - 2 * d[6] * d[12] * d[38] * d[49] - 2 * d[3] * d[15] * d[38] * d[49] + 2 * d[0] * d[16] * d[38] * d[49] - 2 * d[6] * d[11] * d[39] * d[49] + 2 * d[8] * d[13] * d[39] * d[49] - 2 * d[2] * d[15] * d[39] * d[49] + 2 * d[4] * d[17] * d[39] * d[49] + 2 * d[8] * d[12] * d[40] * d[49] - 4 * d[7] * d[13] * d[40] * d[49] + 2 * d[6] * d[14] * d[40] * d[49] + 2 * d[5] * d[15] * d[40] * d[49] - 4 * d[4] * d[16] * d[40] * d[49] + 2 * d[3] * d[17] * d[40] * d[49] - 2 * d[8] * d[9] * d[41] * d[49] + 2 * d[6] * d[13] * d[41] * d[49] + 2 * d[4] * d[15] * d[41] * d[49] - 2 * d[0] * d[17] * d[41] * d[49] - 2 * d[3] * d[11] * d[42] * d[49] - 2 * d[2] * d[12] * d[42] * d[49] + 2 * d[5] * d[13] * d[42] * d[49] + 2 * d[4] * d[14] * d[42] * d[49] + 2 * d[2] * d[9] * d[43] * d[49] + 2 * d[0] * d[11] * d[43] * d[49] - 4 * d[4] * d[13] * d[43] * d[49] - 2 * d[5] * d[9] * d[44] * d[49] + 2 * d[4] * d[12] * d[44] * d[49] + 2 * d[3] * d[13] * d[44] * d[49] - 2 * d[0] * d[14] * d[44] * d[49] - 2 * d[12] * d[38] * d[48] * d[49] - 2 * d[11] * d[39] * d[48] * d[49] + 2 * d[14] * d[40] * d[48] * d[49] + 2 * d[13] * d[41] * d[48] * d[49] + d[11] * d[36] * std::pow(d[49], 2) + d[9] * d[38] * std::pow(d[49], 2) - 2 * d[13] * d[40] * std::pow(d[49], 2) + 2 * d[8] * d[10] * d[36] * d[50] - 2 * d[7] * d[14] * d[36] * d[50] - 2 * d[5] * d[16] * d[36] * d[50] + 2 * d[1] * d[17] * d[36] * d[50] + 2 * d[8] * d[9] * d[37] * d[50] - 2 * d[6] * d[13] * d[37] * d[50] - 2 * d[4] * d[15] * d[37] * d[50] + 2 * d[0] * d[17] * d[37] * d[50] - 4 * d[8] * d[12] * d[39] * d[50] + 2 * d[7] * d[13] * d[39] * d[50] + 2 * d[6] * d[14] * d[39] * d[50] + 2 * d[5] * d[15] * d[39] * d[50] + 2 * d[4] * d[16] * d[39] * d[50] - 4 * d[3] * d[17] * d[39] * d[50] - 2 * d[6] * d[10] * d[40] * d[50] + 2 * d[7] * d[12] * d[40] * d[50] - 2 * d[1] * d[15] * d[40] * d[50] + 2 * d[3] * d[16] * d[40] * d[50] - 2 * d[7] * d[9] * d[41] * d[50] + 2 * d[6] * d[12] * d[41] * d[50] + 2 * d[3] * d[15] * d[41] * d[50] - 2 * d[0] * d[16] * d[41] * d[50] - 2 * d[4] * d[10] * d[42] * d[50] + 2 * d[5] * d[12] * d[42] * d[50] - 2 * d[1] * d[13] * d[42] * d[50] + 2 * d[3] * d[14] * d[42] * d[50] - 2 * d[5] * d[9] * d[43] * d[50] + 2 * d[4] * d[12] * d[43] * d[50] + 2 * d[3] * d[13] * d[43] * d[50] - 2 * d[0] * d[14] * d[43] * d[50] + 2 * d[1] * d[9] * d[44] * d[50] + 2 * d[0] * d[10] * d[44] * d[50] - 4 * d[3] * d[12] * d[44] * d[50] - 2 * d[13] * d[37] * d[48] * d[50] + 2 * d[14] * d[39] * d[48] * d[50] - 2 * d[10] * d[40] * d[48] * d[50] + 2 * d[12] * d[41] * d[48] * d[50] - 2 * d[14] * d[36] * d[49] * d[50] + 2 * d[13] * d[39] * d[49] * d[50] + 2 * d[12] * d[40] * d[49] * d[50] - 2 * d[9] * d[41] * d[49] * d[50] + d[10] * d[36] * std::pow(d[50], 2) + d[9] * d[37] * std::pow(d[50], 2) - 2 * d[12] * d[39] * std::pow(d[50], 2) - d[2] * d[10] * d[36] * d[58] - d[1] * d[11] * d[36] * d[58] + 2 * d[5] * d[14] * d[36] * d[58] - d[2] * d[9] * d[37] * d[58] - d[0] * d[11] * d[37] * d[58] + 2 * d[4] * d[13] * d[37] * d[58] - d[1] * d[9] * d[38] * d[58] - d[0] * d[10] * d[38] * d[58] + 2 * d[3] * d[12] * d[38] * d[58] + 2 * d[3] * d[11] * d[39] * d[58] + 2 * d[2] * d[12] * d[39] * d[58] - 2 * d[5] * d[13] * d[39] * d[58] - 2 * d[4] * d[14] * d[39] * d[58] + 2 * d[4] * d[10] * d[40] * d[58] - 2 * d[5] * d[12] * d[40] * d[58] + 2 * d[1] * d[13] * d[40] * d[58] - 2 * d[3] * d[14] * d[40] * d[58] + 2 * d[5] * d[9] * d[41] * d[58] - 2 * d[4] * d[12] * d[41] * d[58] - 2 * d[3] * d[13] * d[41] * d[58] + 2 * d[0] * d[14] * d[41] * d[58];
    coeffs[62] = 2 * d[6] * d[20] * d[37] * d[48] - 2 * d[8] * d[22] * d[37] * d[48] + 2 * d[2] * d[24] * d[37] * d[48] - 2 * d[4] * d[26] * d[37] * d[48] + 2 * d[6] * d[19] * d[38] * d[48] - 2 * d[7] * d[21] * d[38] * d[48] + 2 * d[1] * d[24] * d[38] * d[48] - 2 * d[3] * d[25] * d[38] * d[48] - 2 * d[7] * d[20] * d[39] * d[48] + 2 * d[8] * d[23] * d[39] * d[48] - 2 * d[2] * d[25] * d[39] * d[48] + 2 * d[5] * d[26] * d[39] * d[48] - 2 * d[8] * d[19] * d[40] * d[48] + 2 * d[7] * d[23] * d[40] * d[48] + 2 * d[5] * d[25] * d[40] * d[48] - 2 * d[1] * d[26] * d[40] * d[48] + 2 * d[8] * d[21] * d[41] * d[48] + 2 * d[7] * d[22] * d[41] * d[48] - 4 * d[6] * d[23] * d[41] * d[48] - 4 * d[5] * d[24] * d[41] * d[48] + 2 * d[4] * d[25] * d[41] * d[48] + 2 * d[3] * d[26] * d[41] * d[48] + 2 * d[2] * d[19] * d[42] * d[48] + 2 * d[1] * d[20] * d[42] * d[48] - 4 * d[5] * d[23] * d[42] * d[48] - 2 * d[3] * d[20] * d[43] * d[48] - 2 * d[2] * d[21] * d[43] * d[48] + 2 * d[5] * d[22] * d[43] * d[48] + 2 * d[4] * d[23] * d[43] * d[48] - 2 * d[4] * d[19] * d[44] * d[48] + 2 * d[5] * d[21] * d[44] * d[48] - 2 * d[1] * d[22] * d[44] * d[48] + 2 * d[3] * d[23] * d[44] * d[48] + d[20] * d[37] * std::pow(d[48], 2) + d[19] * d[38] * std::pow(d[48], 2) - 2 * d[23] * d[41] * std::pow(d[48], 2) + 2 * d[7] * d[20] * d[36] * d[49] - 2 * d[8] * d[23] * d[36] * d[49] + 2 * d[2] * d[25] * d[36] * d[49] - 2 * d[5] * d[26] * d[36] * d[49] + 2 * d[7] * d[18] * d[38] * d[49] - 2 * d[6] * d[21] * d[38] * d[49] - 2 * d[3] * d[24] * d[38] * d[49] + 2 * d[0] * d[25] * d[38] * d[49] - 2 * d[6] * d[20] * d[39] * d[49] + 2 * d[8] * d[22] * d[39] * d[49] - 2 * d[2] * d[24] * d[39] * d[49] + 2 * d[4] * d[26] * d[39] * d[49] + 2 * d[8] * d[21] * d[40] * d[49] - 4 * d[7] * d[22] * d[40] * d[49] + 2 * d[6] * d[23] * d[40] * d[49] + 2 * d[5] * d[24] * d[40] * d[49] - 4 * d[4] * d[25] * d[40] * d[49] + 2 * d[3] * d[26] * d[40] * d[49] - 2 * d[8] * d[18] * d[41] * d[49] + 2 * d[6] * d[22] * d[41] * d[49] + 2 * d[4] * d[24] * d[41] * d[49] - 2 * d[0] * d[26] * d[41] * d[49] - 2 * d[3] * d[20] * d[42] * d[49] - 2 * d[2] * d[21] * d[42] * d[49] + 2 * d[5] * d[22] * d[42] * d[49] + 2 * d[4] * d[23] * d[42] * d[49] + 2 * d[2] * d[18] * d[43] * d[49] + 2 * d[0] * d[20] * d[43] * d[49] - 4 * d[4] * d[22] * d[43] * d[49] - 2 * d[5] * d[18] * d[44] * d[49] + 2 * d[4] * d[21] * d[44] * d[49] + 2 * d[3] * d[22] * d[44] * d[49] - 2 * d[0] * d[23] * d[44] * d[49] - 2 * d[21] * d[38] * d[48] * d[49] - 2 * d[20] * d[39] * d[48] * d[49] + 2 * d[23] * d[40] * d[48] * d[49] + 2 * d[22] * d[41] * d[48] * d[49] + d[20] * d[36] * std::pow(d[49], 2) + d[18] * d[38] * std::pow(d[49], 2) - 2 * d[22] * d[40] * std::pow(d[49], 2) + 2 * d[8] * d[19] * d[36] * d[50] - 2 * d[7] * d[23] * d[36] * d[50] - 2 * d[5] * d[25] * d[36] * d[50] + 2 * d[1] * d[26] * d[36] * d[50] + 2 * d[8] * d[18] * d[37] * d[50] - 2 * d[6] * d[22] * d[37] * d[50] - 2 * d[4] * d[24] * d[37] * d[50] + 2 * d[0] * d[26] * d[37] * d[50] - 4 * d[8] * d[21] * d[39] * d[50] + 2 * d[7] * d[22] * d[39] * d[50] + 2 * d[6] * d[23] * d[39] * d[50] + 2 * d[5] * d[24] * d[39] * d[50] + 2 * d[4] * d[25] * d[39] * d[50] - 4 * d[3] * d[26] * d[39] * d[50] - 2 * d[6] * d[19] * d[40] * d[50] + 2 * d[7] * d[21] * d[40] * d[50] - 2 * d[1] * d[24] * d[40] * d[50] + 2 * d[3] * d[25] * d[40] * d[50] - 2 * d[7] * d[18] * d[41] * d[50] + 2 * d[6] * d[21] * d[41] * d[50] + 2 * d[3] * d[24] * d[41] * d[50] - 2 * d[0] * d[25] * d[41] * d[50] - 2 * d[4] * d[19] * d[42] * d[50] + 2 * d[5] * d[21] * d[42] * d[50] - 2 * d[1] * d[22] * d[42] * d[50] + 2 * d[3] * d[23] * d[42] * d[50] - 2 * d[5] * d[18] * d[43] * d[50] + 2 * d[4] * d[21] * d[43] * d[50] + 2 * d[3] * d[22] * d[43] * d[50] - 2 * d[0] * d[23] * d[43] * d[50] + 2 * d[1] * d[18] * d[44] * d[50] + 2 * d[0] * d[19] * d[44] * d[50] - 4 * d[3] * d[21] * d[44] * d[50] - 2 * d[22] * d[37] * d[48] * d[50] + 2 * d[23] * d[39] * d[48] * d[50] - 2 * d[19] * d[40] * d[48] * d[50] + 2 * d[21] * d[41] * d[48] * d[50] - 2 * d[23] * d[36] * d[49] * d[50] + 2 * d[22] * d[39] * d[49] * d[50] + 2 * d[21] * d[40] * d[49] * d[50] - 2 * d[18] * d[41] * d[49] * d[50] + d[19] * d[36] * std::pow(d[50], 2) + d[18] * d[37] * std::pow(d[50], 2) - 2 * d[21] * d[39] * std::pow(d[50], 2) - d[2] * d[19] * d[36] * d[58] - d[1] * d[20] * d[36] * d[58] + 2 * d[5] * d[23] * d[36] * d[58] - d[2] * d[18] * d[37] * d[58] - d[0] * d[20] * d[37] * d[58] + 2 * d[4] * d[22] * d[37] * d[58] - d[1] * d[18] * d[38] * d[58] - d[0] * d[19] * d[38] * d[58] + 2 * d[3] * d[21] * d[38] * d[58] + 2 * d[3] * d[20] * d[39] * d[58] + 2 * d[2] * d[21] * d[39] * d[58] - 2 * d[5] * d[22] * d[39] * d[58] - 2 * d[4] * d[23] * d[39] * d[58] + 2 * d[4] * d[19] * d[40] * d[58] - 2 * d[5] * d[21] * d[40] * d[58] + 2 * d[1] * d[22] * d[40] * d[58] - 2 * d[3] * d[23] * d[40] * d[58] + 2 * d[5] * d[18] * d[41] * d[58] - 2 * d[4] * d[21] * d[41] * d[58] - 2 * d[3] * d[22] * d[41] * d[58] + 2 * d[0] * d[23] * d[41] * d[58];
    coeffs[63] = 2 * d[6] * d[29] * d[37] * d[48] - 2 * d[8] * d[31] * d[37] * d[48] + 2 * d[2] * d[33] * d[37] * d[48] - 2 * d[4] * d[35] * d[37] * d[48] + 2 * d[6] * d[28] * d[38] * d[48] - 2 * d[7] * d[30] * d[38] * d[48] + 2 * d[1] * d[33] * d[38] * d[48] - 2 * d[3] * d[34] * d[38] * d[48] - 2 * d[7] * d[29] * d[39] * d[48] + 2 * d[8] * d[32] * d[39] * d[48] - 2 * d[2] * d[34] * d[39] * d[48] + 2 * d[5] * d[35] * d[39] * d[48] - 2 * d[8] * d[28] * d[40] * d[48] + 2 * d[7] * d[32] * d[40] * d[48] + 2 * d[5] * d[34] * d[40] * d[48] - 2 * d[1] * d[35] * d[40] * d[48] + 2 * d[8] * d[30] * d[41] * d[48] + 2 * d[7] * d[31] * d[41] * d[48] - 4 * d[6] * d[32] * d[41] * d[48] - 4 * d[5] * d[33] * d[41] * d[48] + 2 * d[4] * d[34] * d[41] * d[48] + 2 * d[3] * d[35] * d[41] * d[48] + 2 * d[2] * d[28] * d[42] * d[48] + 2 * d[1] * d[29] * d[42] * d[48] - 4 * d[5] * d[32] * d[42] * d[48] - 2 * d[3] * d[29] * d[43] * d[48] - 2 * d[2] * d[30] * d[43] * d[48] + 2 * d[5] * d[31] * d[43] * d[48] + 2 * d[4] * d[32] * d[43] * d[48] - 2 * d[4] * d[28] * d[44] * d[48] + 2 * d[5] * d[30] * d[44] * d[48] - 2 * d[1] * d[31] * d[44] * d[48] + 2 * d[3] * d[32] * d[44] * d[48] + d[29] * d[37] * std::pow(d[48], 2) + d[28] * d[38] * std::pow(d[48], 2) - 2 * d[32] * d[41] * std::pow(d[48], 2) + 2 * d[7] * d[29] * d[36] * d[49] - 2 * d[8] * d[32] * d[36] * d[49] + 2 * d[2] * d[34] * d[36] * d[49] - 2 * d[5] * d[35] * d[36] * d[49] + 2 * d[7] * d[27] * d[38] * d[49] - 2 * d[6] * d[30] * d[38] * d[49] - 2 * d[3] * d[33] * d[38] * d[49] + 2 * d[0] * d[34] * d[38] * d[49] - 2 * d[6] * d[29] * d[39] * d[49] + 2 * d[8] * d[31] * d[39] * d[49] - 2 * d[2] * d[33] * d[39] * d[49] + 2 * d[4] * d[35] * d[39] * d[49] + 2 * d[8] * d[30] * d[40] * d[49] - 4 * d[7] * d[31] * d[40] * d[49] + 2 * d[6] * d[32] * d[40] * d[49] + 2 * d[5] * d[33] * d[40] * d[49] - 4 * d[4] * d[34] * d[40] * d[49] + 2 * d[3] * d[35] * d[40] * d[49] - 2 * d[8] * d[27] * d[41] * d[49] + 2 * d[6] * d[31] * d[41] * d[49] + 2 * d[4] * d[33] * d[41] * d[49] - 2 * d[0] * d[35] * d[41] * d[49] - 2 * d[3] * d[29] * d[42] * d[49] - 2 * d[2] * d[30] * d[42] * d[49] + 2 * d[5] * d[31] * d[42] * d[49] + 2 * d[4] * d[32] * d[42] * d[49] + 2 * d[2] * d[27] * d[43] * d[49] + 2 * d[0] * d[29] * d[43] * d[49] - 4 * d[4] * d[31] * d[43] * d[49] - 2 * d[5] * d[27] * d[44] * d[49] + 2 * d[4] * d[30] * d[44] * d[49] + 2 * d[3] * d[31] * d[44] * d[49] - 2 * d[0] * d[32] * d[44] * d[49] - 2 * d[30] * d[38] * d[48] * d[49] - 2 * d[29] * d[39] * d[48] * d[49] + 2 * d[32] * d[40] * d[48] * d[49] + 2 * d[31] * d[41] * d[48] * d[49] + d[29] * d[36] * std::pow(d[49], 2) + d[27] * d[38] * std::pow(d[49], 2) - 2 * d[31] * d[40] * std::pow(d[49], 2) + 2 * d[8] * d[28] * d[36] * d[50] - 2 * d[7] * d[32] * d[36] * d[50] - 2 * d[5] * d[34] * d[36] * d[50] + 2 * d[1] * d[35] * d[36] * d[50] + 2 * d[8] * d[27] * d[37] * d[50] - 2 * d[6] * d[31] * d[37] * d[50] - 2 * d[4] * d[33] * d[37] * d[50] + 2 * d[0] * d[35] * d[37] * d[50] - 4 * d[8] * d[30] * d[39] * d[50] + 2 * d[7] * d[31] * d[39] * d[50] + 2 * d[6] * d[32] * d[39] * d[50] + 2 * d[5] * d[33] * d[39] * d[50] + 2 * d[4] * d[34] * d[39] * d[50] - 4 * d[3] * d[35] * d[39] * d[50] - 2 * d[6] * d[28] * d[40] * d[50] + 2 * d[7] * d[30] * d[40] * d[50] - 2 * d[1] * d[33] * d[40] * d[50] + 2 * d[3] * d[34] * d[40] * d[50] - 2 * d[7] * d[27] * d[41] * d[50] + 2 * d[6] * d[30] * d[41] * d[50] + 2 * d[3] * d[33] * d[41] * d[50] - 2 * d[0] * d[34] * d[41] * d[50] - 2 * d[4] * d[28] * d[42] * d[50] + 2 * d[5] * d[30] * d[42] * d[50] - 2 * d[1] * d[31] * d[42] * d[50] + 2 * d[3] * d[32] * d[42] * d[50] - 2 * d[5] * d[27] * d[43] * d[50] + 2 * d[4] * d[30] * d[43] * d[50] + 2 * d[3] * d[31] * d[43] * d[50] - 2 * d[0] * d[32] * d[43] * d[50] + 2 * d[1] * d[27] * d[44] * d[50] + 2 * d[0] * d[28] * d[44] * d[50] - 4 * d[3] * d[30] * d[44] * d[50] - 2 * d[31] * d[37] * d[48] * d[50] + 2 * d[32] * d[39] * d[48] * d[50] - 2 * d[28] * d[40] * d[48] * d[50] + 2 * d[30] * d[41] * d[48] * d[50] - 2 * d[32] * d[36] * d[49] * d[50] + 2 * d[31] * d[39] * d[49] * d[50] + 2 * d[30] * d[40] * d[49] * d[50] - 2 * d[27] * d[41] * d[49] * d[50] + d[28] * d[36] * std::pow(d[50], 2) + d[27] * d[37] * std::pow(d[50], 2) - 2 * d[30] * d[39] * std::pow(d[50], 2) - d[2] * d[28] * d[36] * d[58] - d[1] * d[29] * d[36] * d[58] + 2 * d[5] * d[32] * d[36] * d[58] - d[2] * d[27] * d[37] * d[58] - d[0] * d[29] * d[37] * d[58] + 2 * d[4] * d[31] * d[37] * d[58] - d[1] * d[27] * d[38] * d[58] - d[0] * d[28] * d[38] * d[58] + 2 * d[3] * d[30] * d[38] * d[58] + 2 * d[3] * d[29] * d[39] * d[58] + 2 * d[2] * d[30] * d[39] * d[58] - 2 * d[5] * d[31] * d[39] * d[58] - 2 * d[4] * d[32] * d[39] * d[58] + 2 * d[4] * d[28] * d[40] * d[58] - 2 * d[5] * d[30] * d[40] * d[58] + 2 * d[1] * d[31] * d[40] * d[58] - 2 * d[3] * d[32] * d[40] * d[58] + 2 * d[5] * d[27] * d[41] * d[58] - 2 * d[4] * d[30] * d[41] * d[58] - 2 * d[3] * d[31] * d[41] * d[58] + 2 * d[0] * d[32] * d[41] * d[58];
    coeffs[64] = 2 * d[6] * d[37] * d[38] * d[48] - 2 * d[7] * d[38] * d[39] * d[48] - 2 * d[8] * d[37] * d[40] * d[48] + 2 * d[8] * d[39] * d[41] * d[48] + 2 * d[7] * d[40] * d[41] * d[48] - 2 * d[6] * std::pow(d[41], 2) * d[48] + 2 * d[2] * d[37] * d[42] * d[48] + 2 * d[1] * d[38] * d[42] * d[48] - 4 * d[5] * d[41] * d[42] * d[48] - 2 * d[3] * d[38] * d[43] * d[48] - 2 * d[2] * d[39] * d[43] * d[48] + 2 * d[5] * d[40] * d[43] * d[48] + 2 * d[4] * d[41] * d[43] * d[48] - 2 * d[4] * d[37] * d[44] * d[48] + 2 * d[5] * d[39] * d[44] * d[48] - 2 * d[1] * d[40] * d[44] * d[48] + 2 * d[3] * d[41] * d[44] * d[48] + d[37] * d[38] * std::pow(d[48], 2) - std::pow(d[41], 2) * std::pow(d[48], 2) + 2 * d[7] * d[36] * d[38] * d[49] - 2 * d[6] * d[38] * d[39] * d[49] + 2 * d[8] * d[39] * d[40] * d[49] - 2 * d[7] * std::pow(d[40], 2) * d[49] - 2 * d[8] * d[36] * d[41] * d[49] + 2 * d[6] * d[40] * d[41] * d[49] - 2 * d[3] * d[38] * d[42] * d[49] - 2 * d[2] * d[39] * d[42] * d[49] + 2 * d[5] * d[40] * d[42] * d[49] + 2 * d[4] * d[41] * d[42] * d[49] + 2 * d[2] * d[36] * d[43] * d[49] + 2 * d[0] * d[38] * d[43] * d[49] - 4 * d[4] * d[40] * d[43] * d[49] - 2 * d[5] * d[36] * d[44] * d[49] + 2 * d[4] * d[39] * d[44] * d[49] + 2 * d[3] * d[40] * d[44] * d[49] - 2 * d[0] * d[41] * d[44] * d[49] - 2 * d[38] * d[39] * d[48] * d[49] + 2 * d[40] * d[41] * d[48] * d[49] + d[36] * d[38] * std::pow(d[49], 2) - std::pow(d[40], 2) * std::pow(d[49], 2) + 2 * d[8] * d[36] * d[37] * d[50] - 2 * d[8] * std::pow(d[39], 2) * d[50] - 2 * d[6] * d[37] * d[40] * d[50] + 2 * d[7] * d[39] * d[40] * d[50] - 2 * d[7] * d[36] * d[41] * d[50] + 2 * d[6] * d[39] * d[41] * d[50] - 2 * d[4] * d[37] * d[42] * d[50] + 2 * d[5] * d[39] * d[42] * d[50] - 2 * d[1] * d[40] * d[42] * d[50] + 2 * d[3] * d[41] * d[42] * d[50] - 2 * d[5] * d[36] * d[43] * d[50] + 2 * d[4] * d[39] * d[43] * d[50] + 2 * d[3] * d[40] * d[43] * d[50] - 2 * d[0] * d[41] * d[43] * d[50] + 2 * d[1] * d[36] * d[44] * d[50] + 2 * d[0] * d[37] * d[44] * d[50] - 4 * d[3] * d[39] * d[44] * d[50] - 2 * d[37] * d[40] * d[48] * d[50] + 2 * d[39] * d[41] * d[48] * d[50] + 2 * d[39] * d[40] * d[49] * d[50] - 2 * d[36] * d[41] * d[49] * d[50] + d[36] * d[37] * std::pow(d[50], 2) - std::pow(d[39], 2) * std::pow(d[50], 2) - d[2] * d[36] * d[37] * d[58] - d[1] * d[36] * d[38] * d[58] - d[0] * d[37] * d[38] * d[58] + 2 * d[3] * d[38] * d[39] * d[58] + d[2] * std::pow(d[39], 2) * d[58] + 2 * d[4] * d[37] * d[40] * d[58] - 2 * d[5] * d[39] * d[40] * d[58] + d[1] * std::pow(d[40], 2) * d[58] + 2 * d[5] * d[36] * d[41] * d[58] - 2 * d[4] * d[39] * d[41] * d[58] - 2 * d[3] * d[40] * d[41] * d[58] + d[0] * std::pow(d[41], 2) * d[58];
    coeffs[65] = 2 * d[2] * d[6] * d[10] * d[48] - 2 * d[4] * d[8] * d[10] * d[48] + 2 * d[1] * d[6] * d[11] * d[48] - 2 * d[3] * d[7] * d[11] * d[48] - 2 * d[2] * d[7] * d[12] * d[48] + 2 * d[5] * d[8] * d[12] * d[48] + 2 * d[5] * d[7] * d[13] * d[48] - 2 * d[1] * d[8] * d[13] * d[48] - 4 * d[5] * d[6] * d[14] * d[48] + 2 * d[4] * d[7] * d[14] * d[48] + 2 * d[3] * d[8] * d[14] * d[48] + 2 * d[1] * d[2] * d[15] * d[48] - 2 * std::pow(d[5], 2) * d[15] * d[48] - 2 * d[2] * d[3] * d[16] * d[48] + 2 * d[4] * d[5] * d[16] * d[48] - 2 * d[1] * d[4] * d[17] * d[48] + 2 * d[3] * d[5] * d[17] * d[48] + d[2] * d[10] * std::pow(d[48], 2) + d[1] * d[11] * std::pow(d[48], 2) - 2 * d[5] * d[14] * std::pow(d[48], 2) + 2 * d[2] * d[7] * d[9] * d[49] - 2 * d[5] * d[8] * d[9] * d[49] - 2 * d[3] * d[6] * d[11] * d[49] + 2 * d[0] * d[7] * d[11] * d[49] - 2 * d[2] * d[6] * d[12] * d[49] + 2 * d[4] * d[8] * d[12] * d[49] + 2 * d[5] * d[6] * d[13] * d[49] - 4 * d[4] * d[7] * d[13] * d[49] + 2 * d[3] * d[8] * d[13] * d[49] + 2 * d[4] * d[6] * d[14] * d[49] - 2 * d[0] * d[8] * d[14] * d[49] - 2 * d[2] * d[3] * d[15] * d[49] + 2 * d[4] * d[5] * d[15] * d[49] + 2 * d[0] * d[2] * d[16] * d[49] - 2 * std::pow(d[4], 2) * d[16] * d[49] + 2 * d[3] * d[4] * d[17] * d[49] - 2 * d[0] * d[5] * d[17] * d[49] - 2 * d[3] * d[11] * d[48] * d[49] - 2 * d[2] * d[12] * d[48] * d[49] + 2 * d[5] * d[13] * d[48] * d[49] + 2 * d[4] * d[14] * d[48] * d[49] + d[2] * d[9] * std::pow(d[49], 2) + d[0] * d[11] * std::pow(d[49], 2) - 2 * d[4] * d[13] * std::pow(d[49], 2) - 2 * d[5] * d[7] * d[9] * d[50] + 2 * d[1] * d[8] * d[9] * d[50] - 2 * d[4] * d[6] * d[10] * d[50] + 2 * d[0] * d[8] * d[10] * d[50] + 2 * d[5] * d[6] * d[12] * d[50] + 2 * d[4] * d[7] * d[12] * d[50] - 4 * d[3] * d[8] * d[12] * d[50] - 2 * d[1] * d[6] * d[13] * d[50] + 2 * d[3] * d[7] * d[13] * d[50] + 2 * d[3] * d[6] * d[14] * d[50] - 2 * d[0] * d[7] * d[14] * d[50] - 2 * d[1] * d[4] * d[15] * d[50] + 2 * d[3] * d[5] * d[15] * d[50] + 2 * d[3] * d[4] * d[16] * d[50] - 2 * d[0] * d[5] * d[16] * d[50] + 2 * d[0] * d[1] * d[17] * d[50] - 2 * std::pow(d[3], 2) * d[17] * d[50] - 2 * d[4] * d[10] * d[48] * d[50] + 2 * d[5] * d[12] * d[48] * d[50] - 2 * d[1] * d[13] * d[48] * d[50] + 2 * d[3] * d[14] * d[48] * d[50] - 2 * d[5] * d[9] * d[49] * d[50] + 2 * d[4] * d[12] * d[49] * d[50] + 2 * d[3] * d[13] * d[49] * d[50] - 2 * d[0] * d[14] * d[49] * d[50] + d[1] * d[9] * std::pow(d[50], 2) + d[0] * d[10] * std::pow(d[50], 2) - 2 * d[3] * d[12] * std::pow(d[50], 2) - d[1] * d[2] * d[9] * d[58] + std::pow(d[5], 2) * d[9] * d[58] - d[0] * d[2] * d[10] * d[58] + std::pow(d[4], 2) * d[10] * d[58] - d[0] * d[1] * d[11] * d[58] + std::pow(d[3], 2) * d[11] * d[58] + 2 * d[2] * d[3] * d[12] * d[58] - 2 * d[4] * d[5] * d[12] * d[58] + 2 * d[1] * d[4] * d[13] * d[58] - 2 * d[3] * d[5] * d[13] * d[58] - 2 * d[3] * d[4] * d[14] * d[58] + 2 * d[0] * d[5] * d[14] * d[58];
    coeffs[66] = 2 * d[2] * d[6] * d[19] * d[48] - 2 * d[4] * d[8] * d[19] * d[48] + 2 * d[1] * d[6] * d[20] * d[48] - 2 * d[3] * d[7] * d[20] * d[48] - 2 * d[2] * d[7] * d[21] * d[48] + 2 * d[5] * d[8] * d[21] * d[48] + 2 * d[5] * d[7] * d[22] * d[48] - 2 * d[1] * d[8] * d[22] * d[48] - 4 * d[5] * d[6] * d[23] * d[48] + 2 * d[4] * d[7] * d[23] * d[48] + 2 * d[3] * d[8] * d[23] * d[48] + 2 * d[1] * d[2] * d[24] * d[48] - 2 * std::pow(d[5], 2) * d[24] * d[48] - 2 * d[2] * d[3] * d[25] * d[48] + 2 * d[4] * d[5] * d[25] * d[48] - 2 * d[1] * d[4] * d[26] * d[48] + 2 * d[3] * d[5] * d[26] * d[48] + d[2] * d[19] * std::pow(d[48], 2) + d[1] * d[20] * std::pow(d[48], 2) - 2 * d[5] * d[23] * std::pow(d[48], 2) + 2 * d[2] * d[7] * d[18] * d[49] - 2 * d[5] * d[8] * d[18] * d[49] - 2 * d[3] * d[6] * d[20] * d[49] + 2 * d[0] * d[7] * d[20] * d[49] - 2 * d[2] * d[6] * d[21] * d[49] + 2 * d[4] * d[8] * d[21] * d[49] + 2 * d[5] * d[6] * d[22] * d[49] - 4 * d[4] * d[7] * d[22] * d[49] + 2 * d[3] * d[8] * d[22] * d[49] + 2 * d[4] * d[6] * d[23] * d[49] - 2 * d[0] * d[8] * d[23] * d[49] - 2 * d[2] * d[3] * d[24] * d[49] + 2 * d[4] * d[5] * d[24] * d[49] + 2 * d[0] * d[2] * d[25] * d[49] - 2 * std::pow(d[4], 2) * d[25] * d[49] + 2 * d[3] * d[4] * d[26] * d[49] - 2 * d[0] * d[5] * d[26] * d[49] - 2 * d[3] * d[20] * d[48] * d[49] - 2 * d[2] * d[21] * d[48] * d[49] + 2 * d[5] * d[22] * d[48] * d[49] + 2 * d[4] * d[23] * d[48] * d[49] + d[2] * d[18] * std::pow(d[49], 2) + d[0] * d[20] * std::pow(d[49], 2) - 2 * d[4] * d[22] * std::pow(d[49], 2) - 2 * d[5] * d[7] * d[18] * d[50] + 2 * d[1] * d[8] * d[18] * d[50] - 2 * d[4] * d[6] * d[19] * d[50] + 2 * d[0] * d[8] * d[19] * d[50] + 2 * d[5] * d[6] * d[21] * d[50] + 2 * d[4] * d[7] * d[21] * d[50] - 4 * d[3] * d[8] * d[21] * d[50] - 2 * d[1] * d[6] * d[22] * d[50] + 2 * d[3] * d[7] * d[22] * d[50] + 2 * d[3] * d[6] * d[23] * d[50] - 2 * d[0] * d[7] * d[23] * d[50] - 2 * d[1] * d[4] * d[24] * d[50] + 2 * d[3] * d[5] * d[24] * d[50] + 2 * d[3] * d[4] * d[25] * d[50] - 2 * d[0] * d[5] * d[25] * d[50] + 2 * d[0] * d[1] * d[26] * d[50] - 2 * std::pow(d[3], 2) * d[26] * d[50] - 2 * d[4] * d[19] * d[48] * d[50] + 2 * d[5] * d[21] * d[48] * d[50] - 2 * d[1] * d[22] * d[48] * d[50] + 2 * d[3] * d[23] * d[48] * d[50] - 2 * d[5] * d[18] * d[49] * d[50] + 2 * d[4] * d[21] * d[49] * d[50] + 2 * d[3] * d[22] * d[49] * d[50] - 2 * d[0] * d[23] * d[49] * d[50] + d[1] * d[18] * std::pow(d[50], 2) + d[0] * d[19] * std::pow(d[50], 2) - 2 * d[3] * d[21] * std::pow(d[50], 2) - d[1] * d[2] * d[18] * d[58] + std::pow(d[5], 2) * d[18] * d[58] - d[0] * d[2] * d[19] * d[58] + std::pow(d[4], 2) * d[19] * d[58] - d[0] * d[1] * d[20] * d[58] + std::pow(d[3], 2) * d[20] * d[58] + 2 * d[2] * d[3] * d[21] * d[58] - 2 * d[4] * d[5] * d[21] * d[58] + 2 * d[1] * d[4] * d[22] * d[58] - 2 * d[3] * d[5] * d[22] * d[58] - 2 * d[3] * d[4] * d[23] * d[58] + 2 * d[0] * d[5] * d[23] * d[58];
    coeffs[67] = 2 * d[2] * d[6] * d[28] * d[48] - 2 * d[4] * d[8] * d[28] * d[48] + 2 * d[1] * d[6] * d[29] * d[48] - 2 * d[3] * d[7] * d[29] * d[48] - 2 * d[2] * d[7] * d[30] * d[48] + 2 * d[5] * d[8] * d[30] * d[48] + 2 * d[5] * d[7] * d[31] * d[48] - 2 * d[1] * d[8] * d[31] * d[48] - 4 * d[5] * d[6] * d[32] * d[48] + 2 * d[4] * d[7] * d[32] * d[48] + 2 * d[3] * d[8] * d[32] * d[48] + 2 * d[1] * d[2] * d[33] * d[48] - 2 * std::pow(d[5], 2) * d[33] * d[48] - 2 * d[2] * d[3] * d[34] * d[48] + 2 * d[4] * d[5] * d[34] * d[48] - 2 * d[1] * d[4] * d[35] * d[48] + 2 * d[3] * d[5] * d[35] * d[48] + d[2] * d[28] * std::pow(d[48], 2) + d[1] * d[29] * std::pow(d[48], 2) - 2 * d[5] * d[32] * std::pow(d[48], 2) + 2 * d[2] * d[7] * d[27] * d[49] - 2 * d[5] * d[8] * d[27] * d[49] - 2 * d[3] * d[6] * d[29] * d[49] + 2 * d[0] * d[7] * d[29] * d[49] - 2 * d[2] * d[6] * d[30] * d[49] + 2 * d[4] * d[8] * d[30] * d[49] + 2 * d[5] * d[6] * d[31] * d[49] - 4 * d[4] * d[7] * d[31] * d[49] + 2 * d[3] * d[8] * d[31] * d[49] + 2 * d[4] * d[6] * d[32] * d[49] - 2 * d[0] * d[8] * d[32] * d[49] - 2 * d[2] * d[3] * d[33] * d[49] + 2 * d[4] * d[5] * d[33] * d[49] + 2 * d[0] * d[2] * d[34] * d[49] - 2 * std::pow(d[4], 2) * d[34] * d[49] + 2 * d[3] * d[4] * d[35] * d[49] - 2 * d[0] * d[5] * d[35] * d[49] - 2 * d[3] * d[29] * d[48] * d[49] - 2 * d[2] * d[30] * d[48] * d[49] + 2 * d[5] * d[31] * d[48] * d[49] + 2 * d[4] * d[32] * d[48] * d[49] + d[2] * d[27] * std::pow(d[49], 2) + d[0] * d[29] * std::pow(d[49], 2) - 2 * d[4] * d[31] * std::pow(d[49], 2) - 2 * d[5] * d[7] * d[27] * d[50] + 2 * d[1] * d[8] * d[27] * d[50] - 2 * d[4] * d[6] * d[28] * d[50] + 2 * d[0] * d[8] * d[28] * d[50] + 2 * d[5] * d[6] * d[30] * d[50] + 2 * d[4] * d[7] * d[30] * d[50] - 4 * d[3] * d[8] * d[30] * d[50] - 2 * d[1] * d[6] * d[31] * d[50] + 2 * d[3] * d[7] * d[31] * d[50] + 2 * d[3] * d[6] * d[32] * d[50] - 2 * d[0] * d[7] * d[32] * d[50] - 2 * d[1] * d[4] * d[33] * d[50] + 2 * d[3] * d[5] * d[33] * d[50] + 2 * d[3] * d[4] * d[34] * d[50] - 2 * d[0] * d[5] * d[34] * d[50] + 2 * d[0] * d[1] * d[35] * d[50] - 2 * std::pow(d[3], 2) * d[35] * d[50] - 2 * d[4] * d[28] * d[48] * d[50] + 2 * d[5] * d[30] * d[48] * d[50] - 2 * d[1] * d[31] * d[48] * d[50] + 2 * d[3] * d[32] * d[48] * d[50] - 2 * d[5] * d[27] * d[49] * d[50] + 2 * d[4] * d[30] * d[49] * d[50] + 2 * d[3] * d[31] * d[49] * d[50] - 2 * d[0] * d[32] * d[49] * d[50] + d[1] * d[27] * std::pow(d[50], 2) + d[0] * d[28] * std::pow(d[50], 2) - 2 * d[3] * d[30] * std::pow(d[50], 2) - d[1] * d[2] * d[27] * d[58] + std::pow(d[5], 2) * d[27] * d[58] - d[0] * d[2] * d[28] * d[58] + std::pow(d[4], 2) * d[28] * d[58] - d[0] * d[1] * d[29] * d[58] + std::pow(d[3], 2) * d[29] * d[58] + 2 * d[2] * d[3] * d[30] * d[58] - 2 * d[4] * d[5] * d[30] * d[58] + 2 * d[1] * d[4] * d[31] * d[58] - 2 * d[3] * d[5] * d[31] * d[58] - 2 * d[3] * d[4] * d[32] * d[58] + 2 * d[0] * d[5] * d[32] * d[58];
    coeffs[68] = 2 * d[2] * d[6] * d[37] * d[48] - 2 * d[4] * d[8] * d[37] * d[48] + 2 * d[1] * d[6] * d[38] * d[48] - 2 * d[3] * d[7] * d[38] * d[48] - 2 * d[2] * d[7] * d[39] * d[48] + 2 * d[5] * d[8] * d[39] * d[48] + 2 * d[5] * d[7] * d[40] * d[48] - 2 * d[1] * d[8] * d[40] * d[48] - 4 * d[5] * d[6] * d[41] * d[48] + 2 * d[4] * d[7] * d[41] * d[48] + 2 * d[3] * d[8] * d[41] * d[48] + 2 * d[1] * d[2] * d[42] * d[48] - 2 * std::pow(d[5], 2) * d[42] * d[48] - 2 * d[2] * d[3] * d[43] * d[48] + 2 * d[4] * d[5] * d[43] * d[48] - 2 * d[1] * d[4] * d[44] * d[48] + 2 * d[3] * d[5] * d[44] * d[48] + d[2] * d[37] * std::pow(d[48], 2) + d[1] * d[38] * std::pow(d[48], 2) - 2 * d[5] * d[41] * std::pow(d[48], 2) + 2 * d[2] * d[7] * d[36] * d[49] - 2 * d[5] * d[8] * d[36] * d[49] - 2 * d[3] * d[6] * d[38] * d[49] + 2 * d[0] * d[7] * d[38] * d[49] - 2 * d[2] * d[6] * d[39] * d[49] + 2 * d[4] * d[8] * d[39] * d[49] + 2 * d[5] * d[6] * d[40] * d[49] - 4 * d[4] * d[7] * d[40] * d[49] + 2 * d[3] * d[8] * d[40] * d[49] + 2 * d[4] * d[6] * d[41] * d[49] - 2 * d[0] * d[8] * d[41] * d[49] - 2 * d[2] * d[3] * d[42] * d[49] + 2 * d[4] * d[5] * d[42] * d[49] + 2 * d[0] * d[2] * d[43] * d[49] - 2 * std::pow(d[4], 2) * d[43] * d[49] + 2 * d[3] * d[4] * d[44] * d[49] - 2 * d[0] * d[5] * d[44] * d[49] - 2 * d[3] * d[38] * d[48] * d[49] - 2 * d[2] * d[39] * d[48] * d[49] + 2 * d[5] * d[40] * d[48] * d[49] + 2 * d[4] * d[41] * d[48] * d[49] + d[2] * d[36] * std::pow(d[49], 2) + d[0] * d[38] * std::pow(d[49], 2) - 2 * d[4] * d[40] * std::pow(d[49], 2) - 2 * d[5] * d[7] * d[36] * d[50] + 2 * d[1] * d[8] * d[36] * d[50] - 2 * d[4] * d[6] * d[37] * d[50] + 2 * d[0] * d[8] * d[37] * d[50] + 2 * d[5] * d[6] * d[39] * d[50] + 2 * d[4] * d[7] * d[39] * d[50] - 4 * d[3] * d[8] * d[39] * d[50] - 2 * d[1] * d[6] * d[40] * d[50] + 2 * d[3] * d[7] * d[40] * d[50] + 2 * d[3] * d[6] * d[41] * d[50] - 2 * d[0] * d[7] * d[41] * d[50] - 2 * d[1] * d[4] * d[42] * d[50] + 2 * d[3] * d[5] * d[42] * d[50] + 2 * d[3] * d[4] * d[43] * d[50] - 2 * d[0] * d[5] * d[43] * d[50] + 2 * d[0] * d[1] * d[44] * d[50] - 2 * std::pow(d[3], 2) * d[44] * d[50] - 2 * d[4] * d[37] * d[48] * d[50] + 2 * d[5] * d[39] * d[48] * d[50] - 2 * d[1] * d[40] * d[48] * d[50] + 2 * d[3] * d[41] * d[48] * d[50] - 2 * d[5] * d[36] * d[49] * d[50] + 2 * d[4] * d[39] * d[49] * d[50] + 2 * d[3] * d[40] * d[49] * d[50] - 2 * d[0] * d[41] * d[49] * d[50] + d[1] * d[36] * std::pow(d[50], 2) + d[0] * d[37] * std::pow(d[50], 2) - 2 * d[3] * d[39] * std::pow(d[50], 2) - d[1] * d[2] * d[36] * d[58] + std::pow(d[5], 2) * d[36] * d[58] - d[0] * d[2] * d[37] * d[58] + std::pow(d[4], 2) * d[37] * d[58] - d[0] * d[1] * d[38] * d[58] + std::pow(d[3], 2) * d[38] * d[58] + 2 * d[2] * d[3] * d[39] * d[58] - 2 * d[4] * d[5] * d[39] * d[58] + 2 * d[1] * d[4] * d[40] * d[58] - 2 * d[3] * d[5] * d[40] * d[58] - 2 * d[3] * d[4] * d[41] * d[58] + 2 * d[0] * d[5] * d[41] * d[58];
    coeffs[69] = 2 * d[1] * d[2] * d[6] * d[48] - 2 * std::pow(d[5], 2) * d[6] * d[48] - 2 * d[2] * d[3] * d[7] * d[48] + 2 * d[4] * d[5] * d[7] * d[48] - 2 * d[1] * d[4] * d[8] * d[48] + 2 * d[3] * d[5] * d[8] * d[48] + d[1] * d[2] * std::pow(d[48], 2) - std::pow(d[5], 2) * std::pow(d[48], 2) - 2 * d[2] * d[3] * d[6] * d[49] + 2 * d[4] * d[5] * d[6] * d[49] + 2 * d[0] * d[2] * d[7] * d[49] - 2 * std::pow(d[4], 2) * d[7] * d[49] + 2 * d[3] * d[4] * d[8] * d[49] - 2 * d[0] * d[5] * d[8] * d[49] - 2 * d[2] * d[3] * d[48] * d[49] + 2 * d[4] * d[5] * d[48] * d[49] + d[0] * d[2] * std::pow(d[49], 2) - std::pow(d[4], 2) * std::pow(d[49], 2) - 2 * d[1] * d[4] * d[6] * d[50] + 2 * d[3] * d[5] * d[6] * d[50] + 2 * d[3] * d[4] * d[7] * d[50] - 2 * d[0] * d[5] * d[7] * d[50] + 2 * d[0] * d[1] * d[8] * d[50] - 2 * std::pow(d[3], 2) * d[8] * d[50] - 2 * d[1] * d[4] * d[48] * d[50] + 2 * d[3] * d[5] * d[48] * d[50] + 2 * d[3] * d[4] * d[49] * d[50] - 2 * d[0] * d[5] * d[49] * d[50] + d[0] * d[1] * std::pow(d[50], 2) - std::pow(d[3], 2) * std::pow(d[50], 2) - d[0] * d[1] * d[2] * d[58] + d[2] * std::pow(d[3], 2) * d[58] + d[1] * std::pow(d[4], 2) * d[58] - 2 * d[3] * d[4] * d[5] * d[58] + d[0] * std::pow(d[5], 2) * d[58];
    coeffs[70] = 2 * d[10] * d[11] * d[15] * d[51] - 2 * std::pow(d[14], 2) * d[15] * d[51] - 2 * d[11] * d[12] * d[16] * d[51] + 2 * d[13] * d[14] * d[16] * d[51] - 2 * d[10] * d[13] * d[17] * d[51] + 2 * d[12] * d[14] * d[17] * d[51] - 2 * d[11] * d[12] * d[15] * d[52] + 2 * d[13] * d[14] * d[15] * d[52] + 2 * d[9] * d[11] * d[16] * d[52] - 2 * std::pow(d[13], 2) * d[16] * d[52] + 2 * d[12] * d[13] * d[17] * d[52] - 2 * d[9] * d[14] * d[17] * d[52] - 2 * d[10] * d[13] * d[15] * d[53] + 2 * d[12] * d[14] * d[15] * d[53] + 2 * d[12] * d[13] * d[16] * d[53] - 2 * d[9] * d[14] * d[16] * d[53] + 2 * d[9] * d[10] * d[17] * d[53] - 2 * std::pow(d[12], 2) * d[17] * d[53] - d[9] * d[10] * d[11] * d[59] + d[11] * std::pow(d[12], 2) * d[59] + d[10] * std::pow(d[13], 2) * d[59] - 2 * d[12] * d[13] * d[14] * d[59] + d[9] * std::pow(d[14], 2) * d[59];
    coeffs[71] = 2 * d[11] * d[15] * d[19] * d[51] - 2 * d[13] * d[17] * d[19] * d[51] + 2 * d[10] * d[15] * d[20] * d[51] - 2 * d[12] * d[16] * d[20] * d[51] - 2 * d[11] * d[16] * d[21] * d[51] + 2 * d[14] * d[17] * d[21] * d[51] + 2 * d[14] * d[16] * d[22] * d[51] - 2 * d[10] * d[17] * d[22] * d[51] - 4 * d[14] * d[15] * d[23] * d[51] + 2 * d[13] * d[16] * d[23] * d[51] + 2 * d[12] * d[17] * d[23] * d[51] + 2 * d[10] * d[11] * d[24] * d[51] - 2 * std::pow(d[14], 2) * d[24] * d[51] - 2 * d[11] * d[12] * d[25] * d[51] + 2 * d[13] * d[14] * d[25] * d[51] - 2 * d[10] * d[13] * d[26] * d[51] + 2 * d[12] * d[14] * d[26] * d[51] + 2 * d[11] * d[16] * d[18] * d[52] - 2 * d[14] * d[17] * d[18] * d[52] - 2 * d[12] * d[15] * d[20] * d[52] + 2 * d[9] * d[16] * d[20] * d[52] - 2 * d[11] * d[15] * d[21] * d[52] + 2 * d[13] * d[17] * d[21] * d[52] + 2 * d[14] * d[15] * d[22] * d[52] - 4 * d[13] * d[16] * d[22] * d[52] + 2 * d[12] * d[17] * d[22] * d[52] + 2 * d[13] * d[15] * d[23] * d[52] - 2 * d[9] * d[17] * d[23] * d[52] - 2 * d[11] * d[12] * d[24] * d[52] + 2 * d[13] * d[14] * d[24] * d[52] + 2 * d[9] * d[11] * d[25] * d[52] - 2 * std::pow(d[13], 2) * d[25] * d[52] + 2 * d[12] * d[13] * d[26] * d[52] - 2 * d[9] * d[14] * d[26] * d[52] - 2 * d[14] * d[16] * d[18] * d[53] + 2 * d[10] * d[17] * d[18] * d[53] - 2 * d[13] * d[15] * d[19] * d[53] + 2 * d[9] * d[17] * d[19] * d[53] + 2 * d[14] * d[15] * d[21] * d[53] + 2 * d[13] * d[16] * d[21] * d[53] - 4 * d[12] * d[17] * d[21] * d[53] - 2 * d[10] * d[15] * d[22] * d[53] + 2 * d[12] * d[16] * d[22] * d[53] + 2 * d[12] * d[15] * d[23] * d[53] - 2 * d[9] * d[16] * d[23] * d[53] - 2 * d[10] * d[13] * d[24] * d[53] + 2 * d[12] * d[14] * d[24] * d[53] + 2 * d[12] * d[13] * d[25] * d[53] - 2 * d[9] * d[14] * d[25] * d[53] + 2 * d[9] * d[10] * d[26] * d[53] - 2 * std::pow(d[12], 2) * d[26] * d[53] - d[10] * d[11] * d[18] * d[59] + std::pow(d[14], 2) * d[18] * d[59] - d[9] * d[11] * d[19] * d[59] + std::pow(d[13], 2) * d[19] * d[59] - d[9] * d[10] * d[20] * d[59] + std::pow(d[12], 2) * d[20] * d[59] + 2 * d[11] * d[12] * d[21] * d[59] - 2 * d[13] * d[14] * d[21] * d[59] + 2 * d[10] * d[13] * d[22] * d[59] - 2 * d[12] * d[14] * d[22] * d[59] - 2 * d[12] * d[13] * d[23] * d[59] + 2 * d[9] * d[14] * d[23] * d[59];
    coeffs[72] = 2 * d[15] * d[19] * d[20] * d[51] - 2 * d[16] * d[20] * d[21] * d[51] - 2 * d[17] * d[19] * d[22] * d[51] + 2 * d[17] * d[21] * d[23] * d[51] + 2 * d[16] * d[22] * d[23] * d[51] - 2 * d[15] * std::pow(d[23], 2) * d[51] + 2 * d[11] * d[19] * d[24] * d[51] + 2 * d[10] * d[20] * d[24] * d[51] - 4 * d[14] * d[23] * d[24] * d[51] - 2 * d[12] * d[20] * d[25] * d[51] - 2 * d[11] * d[21] * d[25] * d[51] + 2 * d[14] * d[22] * d[25] * d[51] + 2 * d[13] * d[23] * d[25] * d[51] - 2 * d[13] * d[19] * d[26] * d[51] + 2 * d[14] * d[21] * d[26] * d[51] - 2 * d[10] * d[22] * d[26] * d[51] + 2 * d[12] * d[23] * d[26] * d[51] + 2 * d[16] * d[18] * d[20] * d[52] - 2 * d[15] * d[20] * d[21] * d[52] + 2 * d[17] * d[21] * d[22] * d[52] - 2 * d[16] * std::pow(d[22], 2) * d[52] - 2 * d[17] * d[18] * d[23] * d[52] + 2 * d[15] * d[22] * d[23] * d[52] - 2 * d[12] * d[20] * d[24] * d[52] - 2 * d[11] * d[21] * d[24] * d[52] + 2 * d[14] * d[22] * d[24] * d[52] + 2 * d[13] * d[23] * d[24] * d[52] + 2 * d[11] * d[18] * d[25] * d[52] + 2 * d[9] * d[20] * d[25] * d[52] - 4 * d[13] * d[22] * d[25] * d[52] - 2 * d[14] * d[18] * d[26] * d[52] + 2 * d[13] * d[21] * d[26] * d[52] + 2 * d[12] * d[22] * d[26] * d[52] - 2 * d[9] * d[23] * d[26] * d[52] + 2 * d[17] * d[18] * d[19] * d[53] - 2 * d[17] * std::pow(d[21], 2) * d[53] - 2 * d[15] * d[19] * d[22] * d[53] + 2 * d[16] * d[21] * d[22] * d[53] - 2 * d[16] * d[18] * d[23] * d[53] + 2 * d[15] * d[21] * d[23] * d[53] - 2 * d[13] * d[19] * d[24] * d[53] + 2 * d[14] * d[21] * d[24] * d[53] - 2 * d[10] * d[22] * d[24] * d[53] + 2 * d[12] * d[23] * d[24] * d[53] - 2 * d[14] * d[18] * d[25] * d[53] + 2 * d[13] * d[21] * d[25] * d[53] + 2 * d[12] * d[22] * d[25] * d[53] - 2 * d[9] * d[23] * d[25] * d[53] + 2 * d[10] * d[18] * d[26] * d[53] + 2 * d[9] * d[19] * d[26] * d[53] - 4 * d[12] * d[21] * d[26] * d[53] - d[11] * d[18] * d[19] * d[59] - d[10] * d[18] * d[20] * d[59] - d[9] * d[19] * d[20] * d[59] + 2 * d[12] * d[20] * d[21] * d[59] + d[11] * std::pow(d[21], 2) * d[59] + 2 * d[13] * d[19] * d[22] * d[59] - 2 * d[14] * d[21] * d[22] * d[59] + d[10] * std::pow(d[22], 2) * d[59] + 2 * d[14] * d[18] * d[23] * d[59] - 2 * d[13] * d[21] * d[23] * d[59] - 2 * d[12] * d[22] * d[23] * d[59] + d[9] * std::pow(d[23], 2) * d[59];
    coeffs[73] = 2 * d[19] * d[20] * d[24] * d[51] - 2 * std::pow(d[23], 2) * d[24] * d[51] - 2 * d[20] * d[21] * d[25] * d[51] + 2 * d[22] * d[23] * d[25] * d[51] - 2 * d[19] * d[22] * d[26] * d[51] + 2 * d[21] * d[23] * d[26] * d[51] - 2 * d[20] * d[21] * d[24] * d[52] + 2 * d[22] * d[23] * d[24] * d[52] + 2 * d[18] * d[20] * d[25] * d[52] - 2 * std::pow(d[22], 2) * d[25] * d[52] + 2 * d[21] * d[22] * d[26] * d[52] - 2 * d[18] * d[23] * d[26] * d[52] - 2 * d[19] * d[22] * d[24] * d[53] + 2 * d[21] * d[23] * d[24] * d[53] + 2 * d[21] * d[22] * d[25] * d[53] - 2 * d[18] * d[23] * d[25] * d[53] + 2 * d[18] * d[19] * d[26] * d[53] - 2 * std::pow(d[21], 2) * d[26] * d[53] - d[18] * d[19] * d[20] * d[59] + d[20] * std::pow(d[21], 2) * d[59] + d[19] * std::pow(d[22], 2) * d[59] - 2 * d[21] * d[22] * d[23] * d[59] + d[18] * std::pow(d[23], 2) * d[59];
    coeffs[74] = 2 * d[11] * d[15] * d[28] * d[51] - 2 * d[13] * d[17] * d[28] * d[51] + 2 * d[10] * d[15] * d[29] * d[51] - 2 * d[12] * d[16] * d[29] * d[51] - 2 * d[11] * d[16] * d[30] * d[51] + 2 * d[14] * d[17] * d[30] * d[51] + 2 * d[14] * d[16] * d[31] * d[51] - 2 * d[10] * d[17] * d[31] * d[51] - 4 * d[14] * d[15] * d[32] * d[51] + 2 * d[13] * d[16] * d[32] * d[51] + 2 * d[12] * d[17] * d[32] * d[51] + 2 * d[10] * d[11] * d[33] * d[51] - 2 * std::pow(d[14], 2) * d[33] * d[51] - 2 * d[11] * d[12] * d[34] * d[51] + 2 * d[13] * d[14] * d[34] * d[51] - 2 * d[10] * d[13] * d[35] * d[51] + 2 * d[12] * d[14] * d[35] * d[51] + 2 * d[11] * d[16] * d[27] * d[52] - 2 * d[14] * d[17] * d[27] * d[52] - 2 * d[12] * d[15] * d[29] * d[52] + 2 * d[9] * d[16] * d[29] * d[52] - 2 * d[11] * d[15] * d[30] * d[52] + 2 * d[13] * d[17] * d[30] * d[52] + 2 * d[14] * d[15] * d[31] * d[52] - 4 * d[13] * d[16] * d[31] * d[52] + 2 * d[12] * d[17] * d[31] * d[52] + 2 * d[13] * d[15] * d[32] * d[52] - 2 * d[9] * d[17] * d[32] * d[52] - 2 * d[11] * d[12] * d[33] * d[52] + 2 * d[13] * d[14] * d[33] * d[52] + 2 * d[9] * d[11] * d[34] * d[52] - 2 * std::pow(d[13], 2) * d[34] * d[52] + 2 * d[12] * d[13] * d[35] * d[52] - 2 * d[9] * d[14] * d[35] * d[52] - 2 * d[14] * d[16] * d[27] * d[53] + 2 * d[10] * d[17] * d[27] * d[53] - 2 * d[13] * d[15] * d[28] * d[53] + 2 * d[9] * d[17] * d[28] * d[53] + 2 * d[14] * d[15] * d[30] * d[53] + 2 * d[13] * d[16] * d[30] * d[53] - 4 * d[12] * d[17] * d[30] * d[53] - 2 * d[10] * d[15] * d[31] * d[53] + 2 * d[12] * d[16] * d[31] * d[53] + 2 * d[12] * d[15] * d[32] * d[53] - 2 * d[9] * d[16] * d[32] * d[53] - 2 * d[10] * d[13] * d[33] * d[53] + 2 * d[12] * d[14] * d[33] * d[53] + 2 * d[12] * d[13] * d[34] * d[53] - 2 * d[9] * d[14] * d[34] * d[53] + 2 * d[9] * d[10] * d[35] * d[53] - 2 * std::pow(d[12], 2) * d[35] * d[53] - d[10] * d[11] * d[27] * d[59] + std::pow(d[14], 2) * d[27] * d[59] - d[9] * d[11] * d[28] * d[59] + std::pow(d[13], 2) * d[28] * d[59] - d[9] * d[10] * d[29] * d[59] + std::pow(d[12], 2) * d[29] * d[59] + 2 * d[11] * d[12] * d[30] * d[59] - 2 * d[13] * d[14] * d[30] * d[59] + 2 * d[10] * d[13] * d[31] * d[59] - 2 * d[12] * d[14] * d[31] * d[59] - 2 * d[12] * d[13] * d[32] * d[59] + 2 * d[9] * d[14] * d[32] * d[59];
    coeffs[75] = 2 * d[15] * d[20] * d[28] * d[51] - 2 * d[17] * d[22] * d[28] * d[51] + 2 * d[11] * d[24] * d[28] * d[51] - 2 * d[13] * d[26] * d[28] * d[51] + 2 * d[15] * d[19] * d[29] * d[51] - 2 * d[16] * d[21] * d[29] * d[51] + 2 * d[10] * d[24] * d[29] * d[51] - 2 * d[12] * d[25] * d[29] * d[51] - 2 * d[16] * d[20] * d[30] * d[51] + 2 * d[17] * d[23] * d[30] * d[51] - 2 * d[11] * d[25] * d[30] * d[51] + 2 * d[14] * d[26] * d[30] * d[51] - 2 * d[17] * d[19] * d[31] * d[51] + 2 * d[16] * d[23] * d[31] * d[51] + 2 * d[14] * d[25] * d[31] * d[51] - 2 * d[10] * d[26] * d[31] * d[51] + 2 * d[17] * d[21] * d[32] * d[51] + 2 * d[16] * d[22] * d[32] * d[51] - 4 * d[15] * d[23] * d[32] * d[51] - 4 * d[14] * d[24] * d[32] * d[51] + 2 * d[13] * d[25] * d[32] * d[51] + 2 * d[12] * d[26] * d[32] * d[51] + 2 * d[11] * d[19] * d[33] * d[51] + 2 * d[10] * d[20] * d[33] * d[51] - 4 * d[14] * d[23] * d[33] * d[51] - 2 * d[12] * d[20] * d[34] * d[51] - 2 * d[11] * d[21] * d[34] * d[51] + 2 * d[14] * d[22] * d[34] * d[51] + 2 * d[13] * d[23] * d[34] * d[51] - 2 * d[13] * d[19] * d[35] * d[51] + 2 * d[14] * d[21] * d[35] * d[51] - 2 * d[10] * d[22] * d[35] * d[51] + 2 * d[12] * d[23] * d[35] * d[51] + 2 * d[16] * d[20] * d[27] * d[52] - 2 * d[17] * d[23] * d[27] * d[52] + 2 * d[11] * d[25] * d[27] * d[52] - 2 * d[14] * d[26] * d[27] * d[52] + 2 * d[16] * d[18] * d[29] * d[52] - 2 * d[15] * d[21] * d[29] * d[52] - 2 * d[12] * d[24] * d[29] * d[52] + 2 * d[9] * d[25] * d[29] * d[52] - 2 * d[15] * d[20] * d[30] * d[52] + 2 * d[17] * d[22] * d[30] * d[52] - 2 * d[11] * d[24] * d[30] * d[52] + 2 * d[13] * d[26] * d[30] * d[52] + 2 * d[17] * d[21] * d[31] * d[52] - 4 * d[16] * d[22] * d[31] * d[52] + 2 * d[15] * d[23] * d[31] * d[52] + 2 * d[14] * d[24] * d[31] * d[52] - 4 * d[13] * d[25] * d[31] * d[52] + 2 * d[12] * d[26] * d[31] * d[52] - 2 * d[17] * d[18] * d[32] * d[52] + 2 * d[15] * d[22] * d[32] * d[52] + 2 * d[13] * d[24] * d[32] * d[52] - 2 * d[9] * d[26] * d[32] * d[52] - 2 * d[12] * d[20] * d[33] * d[52] - 2 * d[11] * d[21] * d[33] * d[52] + 2 * d[14] * d[22] * d[33] * d[52] + 2 * d[13] * d[23] * d[33] * d[52] + 2 * d[11] * d[18] * d[34] * d[52] + 2 * d[9] * d[20] * d[34] * d[52] - 4 * d[13] * d[22] * d[34] * d[52] - 2 * d[14] * d[18] * d[35] * d[52] + 2 * d[13] * d[21] * d[35] * d[52] + 2 * d[12] * d[22] * d[35] * d[52] - 2 * d[9] * d[23] * d[35] * d[52] + 2 * d[17] * d[19] * d[27] * d[53] - 2 * d[16] * d[23] * d[27] * d[53] - 2 * d[14] * d[25] * d[27] * d[53] + 2 * d[10] * d[26] * d[27] * d[53] + 2 * d[17] * d[18] * d[28] * d[53] - 2 * d[15] * d[22] * d[28] * d[53] - 2 * d[13] * d[24] * d[28] * d[53] + 2 * d[9] * d[26] * d[28] * d[53] - 4 * d[17] * d[21] * d[30] * d[53] + 2 * d[16] * d[22] * d[30] * d[53] + 2 * d[15] * d[23] * d[30] * d[53] + 2 * d[14] * d[24] * d[30] * d[53] + 2 * d[13] * d[25] * d[30] * d[53] - 4 * d[12] * d[26] * d[30] * d[53] - 2 * d[15] * d[19] * d[31] * d[53] + 2 * d[16] * d[21] * d[31] * d[53] - 2 * d[10] * d[24] * d[31] * d[53] + 2 * d[12] * d[25] * d[31] * d[53] - 2 * d[16] * d[18] * d[32] * d[53] + 2 * d[15] * d[21] * d[32] * d[53] + 2 * d[12] * d[24] * d[32] * d[53] - 2 * d[9] * d[25] * d[32] * d[53] - 2 * d[13] * d[19] * d[33] * d[53] + 2 * d[14] * d[21] * d[33] * d[53] - 2 * d[10] * d[22] * d[33] * d[53] + 2 * d[12] * d[23] * d[33] * d[53] - 2 * d[14] * d[18] * d[34] * d[53] + 2 * d[13] * d[21] * d[34] * d[53] + 2 * d[12] * d[22] * d[34] * d[53] - 2 * d[9] * d[23] * d[34] * d[53] + 2 * d[10] * d[18] * d[35] * d[53] + 2 * d[9] * d[19] * d[35] * d[53] - 4 * d[12] * d[21] * d[35] * d[53] - d[11] * d[19] * d[27] * d[59] - d[10] * d[20] * d[27] * d[59] + 2 * d[14] * d[23] * d[27] * d[59] - d[11] * d[18] * d[28] * d[59] - d[9] * d[20] * d[28] * d[59] + 2 * d[13] * d[22] * d[28] * d[59] - d[10] * d[18] * d[29] * d[59] - d[9] * d[19] * d[29] * d[59] + 2 * d[12] * d[21] * d[29] * d[59] + 2 * d[12] * d[20] * d[30] * d[59] + 2 * d[11] * d[21] * d[30] * d[59] - 2 * d[14] * d[22] * d[30] * d[59] - 2 * d[13] * d[23] * d[30] * d[59] + 2 * d[13] * d[19] * d[31] * d[59] - 2 * d[14] * d[21] * d[31] * d[59] + 2 * d[10] * d[22] * d[31] * d[59] - 2 * d[12] * d[23] * d[31] * d[59] + 2 * d[14] * d[18] * d[32] * d[59] - 2 * d[13] * d[21] * d[32] * d[59] - 2 * d[12] * d[22] * d[32] * d[59] + 2 * d[9] * d[23] * d[32] * d[59];
    coeffs[76] = 2 * d[20] * d[24] * d[28] * d[51] - 2 * d[22] * d[26] * d[28] * d[51] + 2 * d[19] * d[24] * d[29] * d[51] - 2 * d[21] * d[25] * d[29] * d[51] - 2 * d[20] * d[25] * d[30] * d[51] + 2 * d[23] * d[26] * d[30] * d[51] + 2 * d[23] * d[25] * d[31] * d[51] - 2 * d[19] * d[26] * d[31] * d[51] - 4 * d[23] * d[24] * d[32] * d[51] + 2 * d[22] * d[25] * d[32] * d[51] + 2 * d[21] * d[26] * d[32] * d[51] + 2 * d[19] * d[20] * d[33] * d[51] - 2 * std::pow(d[23], 2) * d[33] * d[51] - 2 * d[20] * d[21] * d[34] * d[51] + 2 * d[22] * d[23] * d[34] * d[51] - 2 * d[19] * d[22] * d[35] * d[51] + 2 * d[21] * d[23] * d[35] * d[51] + 2 * d[20] * d[25] * d[27] * d[52] - 2 * d[23] * d[26] * d[27] * d[52] - 2 * d[21] * d[24] * d[29] * d[52] + 2 * d[18] * d[25] * d[29] * d[52] - 2 * d[20] * d[24] * d[30] * d[52] + 2 * d[22] * d[26] * d[30] * d[52] + 2 * d[23] * d[24] * d[31] * d[52] - 4 * d[22] * d[25] * d[31] * d[52] + 2 * d[21] * d[26] * d[31] * d[52] + 2 * d[22] * d[24] * d[32] * d[52] - 2 * d[18] * d[26] * d[32] * d[52] - 2 * d[20] * d[21] * d[33] * d[52] + 2 * d[22] * d[23] * d[33] * d[52] + 2 * d[18] * d[20] * d[34] * d[52] - 2 * std::pow(d[22], 2) * d[34] * d[52] + 2 * d[21] * d[22] * d[35] * d[52] - 2 * d[18] * d[23] * d[35] * d[52] - 2 * d[23] * d[25] * d[27] * d[53] + 2 * d[19] * d[26] * d[27] * d[53] - 2 * d[22] * d[24] * d[28] * d[53] + 2 * d[18] * d[26] * d[28] * d[53] + 2 * d[23] * d[24] * d[30] * d[53] + 2 * d[22] * d[25] * d[30] * d[53] - 4 * d[21] * d[26] * d[30] * d[53] - 2 * d[19] * d[24] * d[31] * d[53] + 2 * d[21] * d[25] * d[31] * d[53] + 2 * d[21] * d[24] * d[32] * d[53] - 2 * d[18] * d[25] * d[32] * d[53] - 2 * d[19] * d[22] * d[33] * d[53] + 2 * d[21] * d[23] * d[33] * d[53] + 2 * d[21] * d[22] * d[34] * d[53] - 2 * d[18] * d[23] * d[34] * d[53] + 2 * d[18] * d[19] * d[35] * d[53] - 2 * std::pow(d[21], 2) * d[35] * d[53] - d[19] * d[20] * d[27] * d[59] + std::pow(d[23], 2) * d[27] * d[59] - d[18] * d[20] * d[28] * d[59] + std::pow(d[22], 2) * d[28] * d[59] - d[18] * d[19] * d[29] * d[59] + std::pow(d[21], 2) * d[29] * d[59] + 2 * d[20] * d[21] * d[30] * d[59] - 2 * d[22] * d[23] * d[30] * d[59] + 2 * d[19] * d[22] * d[31] * d[59] - 2 * d[21] * d[23] * d[31] * d[59] - 2 * d[21] * d[22] * d[32] * d[59] + 2 * d[18] * d[23] * d[32] * d[59];
    coeffs[77] = 2 * d[15] * d[28] * d[29] * d[51] - 2 * d[16] * d[29] * d[30] * d[51] - 2 * d[17] * d[28] * d[31] * d[51] + 2 * d[17] * d[30] * d[32] * d[51] + 2 * d[16] * d[31] * d[32] * d[51] - 2 * d[15] * std::pow(d[32], 2) * d[51] + 2 * d[11] * d[28] * d[33] * d[51] + 2 * d[10] * d[29] * d[33] * d[51] - 4 * d[14] * d[32] * d[33] * d[51] - 2 * d[12] * d[29] * d[34] * d[51] - 2 * d[11] * d[30] * d[34] * d[51] + 2 * d[14] * d[31] * d[34] * d[51] + 2 * d[13] * d[32] * d[34] * d[51] - 2 * d[13] * d[28] * d[35] * d[51] + 2 * d[14] * d[30] * d[35] * d[51] - 2 * d[10] * d[31] * d[35] * d[51] + 2 * d[12] * d[32] * d[35] * d[51] + 2 * d[16] * d[27] * d[29] * d[52] - 2 * d[15] * d[29] * d[30] * d[52] + 2 * d[17] * d[30] * d[31] * d[52] - 2 * d[16] * std::pow(d[31], 2) * d[52] - 2 * d[17] * d[27] * d[32] * d[52] + 2 * d[15] * d[31] * d[32] * d[52] - 2 * d[12] * d[29] * d[33] * d[52] - 2 * d[11] * d[30] * d[33] * d[52] + 2 * d[14] * d[31] * d[33] * d[52] + 2 * d[13] * d[32] * d[33] * d[52] + 2 * d[11] * d[27] * d[34] * d[52] + 2 * d[9] * d[29] * d[34] * d[52] - 4 * d[13] * d[31] * d[34] * d[52] - 2 * d[14] * d[27] * d[35] * d[52] + 2 * d[13] * d[30] * d[35] * d[52] + 2 * d[12] * d[31] * d[35] * d[52] - 2 * d[9] * d[32] * d[35] * d[52] + 2 * d[17] * d[27] * d[28] * d[53] - 2 * d[17] * std::pow(d[30], 2) * d[53] - 2 * d[15] * d[28] * d[31] * d[53] + 2 * d[16] * d[30] * d[31] * d[53] - 2 * d[16] * d[27] * d[32] * d[53] + 2 * d[15] * d[30] * d[32] * d[53] - 2 * d[13] * d[28] * d[33] * d[53] + 2 * d[14] * d[30] * d[33] * d[53] - 2 * d[10] * d[31] * d[33] * d[53] + 2 * d[12] * d[32] * d[33] * d[53] - 2 * d[14] * d[27] * d[34] * d[53] + 2 * d[13] * d[30] * d[34] * d[53] + 2 * d[12] * d[31] * d[34] * d[53] - 2 * d[9] * d[32] * d[34] * d[53] + 2 * d[10] * d[27] * d[35] * d[53] + 2 * d[9] * d[28] * d[35] * d[53] - 4 * d[12] * d[30] * d[35] * d[53] - d[11] * d[27] * d[28] * d[59] - d[10] * d[27] * d[29] * d[59] - d[9] * d[28] * d[29] * d[59] + 2 * d[12] * d[29] * d[30] * d[59] + d[11] * std::pow(d[30], 2) * d[59] + 2 * d[13] * d[28] * d[31] * d[59] - 2 * d[14] * d[30] * d[31] * d[59] + d[10] * std::pow(d[31], 2) * d[59] + 2 * d[14] * d[27] * d[32] * d[59] - 2 * d[13] * d[30] * d[32] * d[59] - 2 * d[12] * d[31] * d[32] * d[59] + d[9] * std::pow(d[32], 2) * d[59];
    coeffs[78] = 2 * d[24] * d[28] * d[29] * d[51] - 2 * d[25] * d[29] * d[30] * d[51] - 2 * d[26] * d[28] * d[31] * d[51] + 2 * d[26] * d[30] * d[32] * d[51] + 2 * d[25] * d[31] * d[32] * d[51] - 2 * d[24] * std::pow(d[32], 2) * d[51] + 2 * d[20] * d[28] * d[33] * d[51] + 2 * d[19] * d[29] * d[33] * d[51] - 4 * d[23] * d[32] * d[33] * d[51] - 2 * d[21] * d[29] * d[34] * d[51] - 2 * d[20] * d[30] * d[34] * d[51] + 2 * d[23] * d[31] * d[34] * d[51] + 2 * d[22] * d[32] * d[34] * d[51] - 2 * d[22] * d[28] * d[35] * d[51] + 2 * d[23] * d[30] * d[35] * d[51] - 2 * d[19] * d[31] * d[35] * d[51] + 2 * d[21] * d[32] * d[35] * d[51] + 2 * d[25] * d[27] * d[29] * d[52] - 2 * d[24] * d[29] * d[30] * d[52] + 2 * d[26] * d[30] * d[31] * d[52] - 2 * d[25] * std::pow(d[31], 2) * d[52] - 2 * d[26] * d[27] * d[32] * d[52] + 2 * d[24] * d[31] * d[32] * d[52] - 2 * d[21] * d[29] * d[33] * d[52] - 2 * d[20] * d[30] * d[33] * d[52] + 2 * d[23] * d[31] * d[33] * d[52] + 2 * d[22] * d[32] * d[33] * d[52] + 2 * d[20] * d[27] * d[34] * d[52] + 2 * d[18] * d[29] * d[34] * d[52] - 4 * d[22] * d[31] * d[34] * d[52] - 2 * d[23] * d[27] * d[35] * d[52] + 2 * d[22] * d[30] * d[35] * d[52] + 2 * d[21] * d[31] * d[35] * d[52] - 2 * d[18] * d[32] * d[35] * d[52] + 2 * d[26] * d[27] * d[28] * d[53] - 2 * d[26] * std::pow(d[30], 2) * d[53] - 2 * d[24] * d[28] * d[31] * d[53] + 2 * d[25] * d[30] * d[31] * d[53] - 2 * d[25] * d[27] * d[32] * d[53] + 2 * d[24] * d[30] * d[32] * d[53] - 2 * d[22] * d[28] * d[33] * d[53] + 2 * d[23] * d[30] * d[33] * d[53] - 2 * d[19] * d[31] * d[33] * d[53] + 2 * d[21] * d[32] * d[33] * d[53] - 2 * d[23] * d[27] * d[34] * d[53] + 2 * d[22] * d[30] * d[34] * d[53] + 2 * d[21] * d[31] * d[34] * d[53] - 2 * d[18] * d[32] * d[34] * d[53] + 2 * d[19] * d[27] * d[35] * d[53] + 2 * d[18] * d[28] * d[35] * d[53] - 4 * d[21] * d[30] * d[35] * d[53] - d[20] * d[27] * d[28] * d[59] - d[19] * d[27] * d[29] * d[59] - d[18] * d[28] * d[29] * d[59] + 2 * d[21] * d[29] * d[30] * d[59] + d[20] * std::pow(d[30], 2) * d[59] + 2 * d[22] * d[28] * d[31] * d[59] - 2 * d[23] * d[30] * d[31] * d[59] + d[19] * std::pow(d[31], 2) * d[59] + 2 * d[23] * d[27] * d[32] * d[59] - 2 * d[22] * d[30] * d[32] * d[59] - 2 * d[21] * d[31] * d[32] * d[59] + d[18] * std::pow(d[32], 2) * d[59];
    coeffs[79] = 2 * d[28] * d[29] * d[33] * d[51] - 2 * std::pow(d[32], 2) * d[33] * d[51] - 2 * d[29] * d[30] * d[34] * d[51] + 2 * d[31] * d[32] * d[34] * d[51] - 2 * d[28] * d[31] * d[35] * d[51] + 2 * d[30] * d[32] * d[35] * d[51] - 2 * d[29] * d[30] * d[33] * d[52] + 2 * d[31] * d[32] * d[33] * d[52] + 2 * d[27] * d[29] * d[34] * d[52] - 2 * std::pow(d[31], 2) * d[34] * d[52] + 2 * d[30] * d[31] * d[35] * d[52] - 2 * d[27] * d[32] * d[35] * d[52] - 2 * d[28] * d[31] * d[33] * d[53] + 2 * d[30] * d[32] * d[33] * d[53] + 2 * d[30] * d[31] * d[34] * d[53] - 2 * d[27] * d[32] * d[34] * d[53] + 2 * d[27] * d[28] * d[35] * d[53] - 2 * std::pow(d[30], 2) * d[35] * d[53] - d[27] * d[28] * d[29] * d[59] + d[29] * std::pow(d[30], 2) * d[59] + d[28] * std::pow(d[31], 2) * d[59] - 2 * d[30] * d[31] * d[32] * d[59] + d[27] * std::pow(d[32], 2) * d[59];
    coeffs[80] = 2 * d[11] * d[15] * d[37] * d[51] - 2 * d[13] * d[17] * d[37] * d[51] + 2 * d[10] * d[15] * d[38] * d[51] - 2 * d[12] * d[16] * d[38] * d[51] - 2 * d[11] * d[16] * d[39] * d[51] + 2 * d[14] * d[17] * d[39] * d[51] + 2 * d[14] * d[16] * d[40] * d[51] - 2 * d[10] * d[17] * d[40] * d[51] - 4 * d[14] * d[15] * d[41] * d[51] + 2 * d[13] * d[16] * d[41] * d[51] + 2 * d[12] * d[17] * d[41] * d[51] + 2 * d[10] * d[11] * d[42] * d[51] - 2 * std::pow(d[14], 2) * d[42] * d[51] - 2 * d[11] * d[12] * d[43] * d[51] + 2 * d[13] * d[14] * d[43] * d[51] - 2 * d[10] * d[13] * d[44] * d[51] + 2 * d[12] * d[14] * d[44] * d[51] + 2 * d[11] * d[16] * d[36] * d[52] - 2 * d[14] * d[17] * d[36] * d[52] - 2 * d[12] * d[15] * d[38] * d[52] + 2 * d[9] * d[16] * d[38] * d[52] - 2 * d[11] * d[15] * d[39] * d[52] + 2 * d[13] * d[17] * d[39] * d[52] + 2 * d[14] * d[15] * d[40] * d[52] - 4 * d[13] * d[16] * d[40] * d[52] + 2 * d[12] * d[17] * d[40] * d[52] + 2 * d[13] * d[15] * d[41] * d[52] - 2 * d[9] * d[17] * d[41] * d[52] - 2 * d[11] * d[12] * d[42] * d[52] + 2 * d[13] * d[14] * d[42] * d[52] + 2 * d[9] * d[11] * d[43] * d[52] - 2 * std::pow(d[13], 2) * d[43] * d[52] + 2 * d[12] * d[13] * d[44] * d[52] - 2 * d[9] * d[14] * d[44] * d[52] - 2 * d[14] * d[16] * d[36] * d[53] + 2 * d[10] * d[17] * d[36] * d[53] - 2 * d[13] * d[15] * d[37] * d[53] + 2 * d[9] * d[17] * d[37] * d[53] + 2 * d[14] * d[15] * d[39] * d[53] + 2 * d[13] * d[16] * d[39] * d[53] - 4 * d[12] * d[17] * d[39] * d[53] - 2 * d[10] * d[15] * d[40] * d[53] + 2 * d[12] * d[16] * d[40] * d[53] + 2 * d[12] * d[15] * d[41] * d[53] - 2 * d[9] * d[16] * d[41] * d[53] - 2 * d[10] * d[13] * d[42] * d[53] + 2 * d[12] * d[14] * d[42] * d[53] + 2 * d[12] * d[13] * d[43] * d[53] - 2 * d[9] * d[14] * d[43] * d[53] + 2 * d[9] * d[10] * d[44] * d[53] - 2 * std::pow(d[12], 2) * d[44] * d[53] - d[10] * d[11] * d[36] * d[59] + std::pow(d[14], 2) * d[36] * d[59] - d[9] * d[11] * d[37] * d[59] + std::pow(d[13], 2) * d[37] * d[59] - d[9] * d[10] * d[38] * d[59] + std::pow(d[12], 2) * d[38] * d[59] + 2 * d[11] * d[12] * d[39] * d[59] - 2 * d[13] * d[14] * d[39] * d[59] + 2 * d[10] * d[13] * d[40] * d[59] - 2 * d[12] * d[14] * d[40] * d[59] - 2 * d[12] * d[13] * d[41] * d[59] + 2 * d[9] * d[14] * d[41] * d[59];
    coeffs[81] = 2 * d[15] * d[20] * d[37] * d[51] - 2 * d[17] * d[22] * d[37] * d[51] + 2 * d[11] * d[24] * d[37] * d[51] - 2 * d[13] * d[26] * d[37] * d[51] + 2 * d[15] * d[19] * d[38] * d[51] - 2 * d[16] * d[21] * d[38] * d[51] + 2 * d[10] * d[24] * d[38] * d[51] - 2 * d[12] * d[25] * d[38] * d[51] - 2 * d[16] * d[20] * d[39] * d[51] + 2 * d[17] * d[23] * d[39] * d[51] - 2 * d[11] * d[25] * d[39] * d[51] + 2 * d[14] * d[26] * d[39] * d[51] - 2 * d[17] * d[19] * d[40] * d[51] + 2 * d[16] * d[23] * d[40] * d[51] + 2 * d[14] * d[25] * d[40] * d[51] - 2 * d[10] * d[26] * d[40] * d[51] + 2 * d[17] * d[21] * d[41] * d[51] + 2 * d[16] * d[22] * d[41] * d[51] - 4 * d[15] * d[23] * d[41] * d[51] - 4 * d[14] * d[24] * d[41] * d[51] + 2 * d[13] * d[25] * d[41] * d[51] + 2 * d[12] * d[26] * d[41] * d[51] + 2 * d[11] * d[19] * d[42] * d[51] + 2 * d[10] * d[20] * d[42] * d[51] - 4 * d[14] * d[23] * d[42] * d[51] - 2 * d[12] * d[20] * d[43] * d[51] - 2 * d[11] * d[21] * d[43] * d[51] + 2 * d[14] * d[22] * d[43] * d[51] + 2 * d[13] * d[23] * d[43] * d[51] - 2 * d[13] * d[19] * d[44] * d[51] + 2 * d[14] * d[21] * d[44] * d[51] - 2 * d[10] * d[22] * d[44] * d[51] + 2 * d[12] * d[23] * d[44] * d[51] + 2 * d[16] * d[20] * d[36] * d[52] - 2 * d[17] * d[23] * d[36] * d[52] + 2 * d[11] * d[25] * d[36] * d[52] - 2 * d[14] * d[26] * d[36] * d[52] + 2 * d[16] * d[18] * d[38] * d[52] - 2 * d[15] * d[21] * d[38] * d[52] - 2 * d[12] * d[24] * d[38] * d[52] + 2 * d[9] * d[25] * d[38] * d[52] - 2 * d[15] * d[20] * d[39] * d[52] + 2 * d[17] * d[22] * d[39] * d[52] - 2 * d[11] * d[24] * d[39] * d[52] + 2 * d[13] * d[26] * d[39] * d[52] + 2 * d[17] * d[21] * d[40] * d[52] - 4 * d[16] * d[22] * d[40] * d[52] + 2 * d[15] * d[23] * d[40] * d[52] + 2 * d[14] * d[24] * d[40] * d[52] - 4 * d[13] * d[25] * d[40] * d[52] + 2 * d[12] * d[26] * d[40] * d[52] - 2 * d[17] * d[18] * d[41] * d[52] + 2 * d[15] * d[22] * d[41] * d[52] + 2 * d[13] * d[24] * d[41] * d[52] - 2 * d[9] * d[26] * d[41] * d[52] - 2 * d[12] * d[20] * d[42] * d[52] - 2 * d[11] * d[21] * d[42] * d[52] + 2 * d[14] * d[22] * d[42] * d[52] + 2 * d[13] * d[23] * d[42] * d[52] + 2 * d[11] * d[18] * d[43] * d[52] + 2 * d[9] * d[20] * d[43] * d[52] - 4 * d[13] * d[22] * d[43] * d[52] - 2 * d[14] * d[18] * d[44] * d[52] + 2 * d[13] * d[21] * d[44] * d[52] + 2 * d[12] * d[22] * d[44] * d[52] - 2 * d[9] * d[23] * d[44] * d[52] + 2 * d[17] * d[19] * d[36] * d[53] - 2 * d[16] * d[23] * d[36] * d[53] - 2 * d[14] * d[25] * d[36] * d[53] + 2 * d[10] * d[26] * d[36] * d[53] + 2 * d[17] * d[18] * d[37] * d[53] - 2 * d[15] * d[22] * d[37] * d[53] - 2 * d[13] * d[24] * d[37] * d[53] + 2 * d[9] * d[26] * d[37] * d[53] - 4 * d[17] * d[21] * d[39] * d[53] + 2 * d[16] * d[22] * d[39] * d[53] + 2 * d[15] * d[23] * d[39] * d[53] + 2 * d[14] * d[24] * d[39] * d[53] + 2 * d[13] * d[25] * d[39] * d[53] - 4 * d[12] * d[26] * d[39] * d[53] - 2 * d[15] * d[19] * d[40] * d[53] + 2 * d[16] * d[21] * d[40] * d[53] - 2 * d[10] * d[24] * d[40] * d[53] + 2 * d[12] * d[25] * d[40] * d[53] - 2 * d[16] * d[18] * d[41] * d[53] + 2 * d[15] * d[21] * d[41] * d[53] + 2 * d[12] * d[24] * d[41] * d[53] - 2 * d[9] * d[25] * d[41] * d[53] - 2 * d[13] * d[19] * d[42] * d[53] + 2 * d[14] * d[21] * d[42] * d[53] - 2 * d[10] * d[22] * d[42] * d[53] + 2 * d[12] * d[23] * d[42] * d[53] - 2 * d[14] * d[18] * d[43] * d[53] + 2 * d[13] * d[21] * d[43] * d[53] + 2 * d[12] * d[22] * d[43] * d[53] - 2 * d[9] * d[23] * d[43] * d[53] + 2 * d[10] * d[18] * d[44] * d[53] + 2 * d[9] * d[19] * d[44] * d[53] - 4 * d[12] * d[21] * d[44] * d[53] - d[11] * d[19] * d[36] * d[59] - d[10] * d[20] * d[36] * d[59] + 2 * d[14] * d[23] * d[36] * d[59] - d[11] * d[18] * d[37] * d[59] - d[9] * d[20] * d[37] * d[59] + 2 * d[13] * d[22] * d[37] * d[59] - d[10] * d[18] * d[38] * d[59] - d[9] * d[19] * d[38] * d[59] + 2 * d[12] * d[21] * d[38] * d[59] + 2 * d[12] * d[20] * d[39] * d[59] + 2 * d[11] * d[21] * d[39] * d[59] - 2 * d[14] * d[22] * d[39] * d[59] - 2 * d[13] * d[23] * d[39] * d[59] + 2 * d[13] * d[19] * d[40] * d[59] - 2 * d[14] * d[21] * d[40] * d[59] + 2 * d[10] * d[22] * d[40] * d[59] - 2 * d[12] * d[23] * d[40] * d[59] + 2 * d[14] * d[18] * d[41] * d[59] - 2 * d[13] * d[21] * d[41] * d[59] - 2 * d[12] * d[22] * d[41] * d[59] + 2 * d[9] * d[23] * d[41] * d[59];
    coeffs[82] = 2 * d[20] * d[24] * d[37] * d[51] - 2 * d[22] * d[26] * d[37] * d[51] + 2 * d[19] * d[24] * d[38] * d[51] - 2 * d[21] * d[25] * d[38] * d[51] - 2 * d[20] * d[25] * d[39] * d[51] + 2 * d[23] * d[26] * d[39] * d[51] + 2 * d[23] * d[25] * d[40] * d[51] - 2 * d[19] * d[26] * d[40] * d[51] - 4 * d[23] * d[24] * d[41] * d[51] + 2 * d[22] * d[25] * d[41] * d[51] + 2 * d[21] * d[26] * d[41] * d[51] + 2 * d[19] * d[20] * d[42] * d[51] - 2 * std::pow(d[23], 2) * d[42] * d[51] - 2 * d[20] * d[21] * d[43] * d[51] + 2 * d[22] * d[23] * d[43] * d[51] - 2 * d[19] * d[22] * d[44] * d[51] + 2 * d[21] * d[23] * d[44] * d[51] + 2 * d[20] * d[25] * d[36] * d[52] - 2 * d[23] * d[26] * d[36] * d[52] - 2 * d[21] * d[24] * d[38] * d[52] + 2 * d[18] * d[25] * d[38] * d[52] - 2 * d[20] * d[24] * d[39] * d[52] + 2 * d[22] * d[26] * d[39] * d[52] + 2 * d[23] * d[24] * d[40] * d[52] - 4 * d[22] * d[25] * d[40] * d[52] + 2 * d[21] * d[26] * d[40] * d[52] + 2 * d[22] * d[24] * d[41] * d[52] - 2 * d[18] * d[26] * d[41] * d[52] - 2 * d[20] * d[21] * d[42] * d[52] + 2 * d[22] * d[23] * d[42] * d[52] + 2 * d[18] * d[20] * d[43] * d[52] - 2 * std::pow(d[22], 2) * d[43] * d[52] + 2 * d[21] * d[22] * d[44] * d[52] - 2 * d[18] * d[23] * d[44] * d[52] - 2 * d[23] * d[25] * d[36] * d[53] + 2 * d[19] * d[26] * d[36] * d[53] - 2 * d[22] * d[24] * d[37] * d[53] + 2 * d[18] * d[26] * d[37] * d[53] + 2 * d[23] * d[24] * d[39] * d[53] + 2 * d[22] * d[25] * d[39] * d[53] - 4 * d[21] * d[26] * d[39] * d[53] - 2 * d[19] * d[24] * d[40] * d[53] + 2 * d[21] * d[25] * d[40] * d[53] + 2 * d[21] * d[24] * d[41] * d[53] - 2 * d[18] * d[25] * d[41] * d[53] - 2 * d[19] * d[22] * d[42] * d[53] + 2 * d[21] * d[23] * d[42] * d[53] + 2 * d[21] * d[22] * d[43] * d[53] - 2 * d[18] * d[23] * d[43] * d[53] + 2 * d[18] * d[19] * d[44] * d[53] - 2 * std::pow(d[21], 2) * d[44] * d[53] - d[19] * d[20] * d[36] * d[59] + std::pow(d[23], 2) * d[36] * d[59] - d[18] * d[20] * d[37] * d[59] + std::pow(d[22], 2) * d[37] * d[59] - d[18] * d[19] * d[38] * d[59] + std::pow(d[21], 2) * d[38] * d[59] + 2 * d[20] * d[21] * d[39] * d[59] - 2 * d[22] * d[23] * d[39] * d[59] + 2 * d[19] * d[22] * d[40] * d[59] - 2 * d[21] * d[23] * d[40] * d[59] - 2 * d[21] * d[22] * d[41] * d[59] + 2 * d[18] * d[23] * d[41] * d[59];
    coeffs[83] = 2 * d[15] * d[29] * d[37] * d[51] - 2 * d[17] * d[31] * d[37] * d[51] + 2 * d[11] * d[33] * d[37] * d[51] - 2 * d[13] * d[35] * d[37] * d[51] + 2 * d[15] * d[28] * d[38] * d[51] - 2 * d[16] * d[30] * d[38] * d[51] + 2 * d[10] * d[33] * d[38] * d[51] - 2 * d[12] * d[34] * d[38] * d[51] - 2 * d[16] * d[29] * d[39] * d[51] + 2 * d[17] * d[32] * d[39] * d[51] - 2 * d[11] * d[34] * d[39] * d[51] + 2 * d[14] * d[35] * d[39] * d[51] - 2 * d[17] * d[28] * d[40] * d[51] + 2 * d[16] * d[32] * d[40] * d[51] + 2 * d[14] * d[34] * d[40] * d[51] - 2 * d[10] * d[35] * d[40] * d[51] + 2 * d[17] * d[30] * d[41] * d[51] + 2 * d[16] * d[31] * d[41] * d[51] - 4 * d[15] * d[32] * d[41] * d[51] - 4 * d[14] * d[33] * d[41] * d[51] + 2 * d[13] * d[34] * d[41] * d[51] + 2 * d[12] * d[35] * d[41] * d[51] + 2 * d[11] * d[28] * d[42] * d[51] + 2 * d[10] * d[29] * d[42] * d[51] - 4 * d[14] * d[32] * d[42] * d[51] - 2 * d[12] * d[29] * d[43] * d[51] - 2 * d[11] * d[30] * d[43] * d[51] + 2 * d[14] * d[31] * d[43] * d[51] + 2 * d[13] * d[32] * d[43] * d[51] - 2 * d[13] * d[28] * d[44] * d[51] + 2 * d[14] * d[30] * d[44] * d[51] - 2 * d[10] * d[31] * d[44] * d[51] + 2 * d[12] * d[32] * d[44] * d[51] + 2 * d[16] * d[29] * d[36] * d[52] - 2 * d[17] * d[32] * d[36] * d[52] + 2 * d[11] * d[34] * d[36] * d[52] - 2 * d[14] * d[35] * d[36] * d[52] + 2 * d[16] * d[27] * d[38] * d[52] - 2 * d[15] * d[30] * d[38] * d[52] - 2 * d[12] * d[33] * d[38] * d[52] + 2 * d[9] * d[34] * d[38] * d[52] - 2 * d[15] * d[29] * d[39] * d[52] + 2 * d[17] * d[31] * d[39] * d[52] - 2 * d[11] * d[33] * d[39] * d[52] + 2 * d[13] * d[35] * d[39] * d[52] + 2 * d[17] * d[30] * d[40] * d[52] - 4 * d[16] * d[31] * d[40] * d[52] + 2 * d[15] * d[32] * d[40] * d[52] + 2 * d[14] * d[33] * d[40] * d[52] - 4 * d[13] * d[34] * d[40] * d[52] + 2 * d[12] * d[35] * d[40] * d[52] - 2 * d[17] * d[27] * d[41] * d[52] + 2 * d[15] * d[31] * d[41] * d[52] + 2 * d[13] * d[33] * d[41] * d[52] - 2 * d[9] * d[35] * d[41] * d[52] - 2 * d[12] * d[29] * d[42] * d[52] - 2 * d[11] * d[30] * d[42] * d[52] + 2 * d[14] * d[31] * d[42] * d[52] + 2 * d[13] * d[32] * d[42] * d[52] + 2 * d[11] * d[27] * d[43] * d[52] + 2 * d[9] * d[29] * d[43] * d[52] - 4 * d[13] * d[31] * d[43] * d[52] - 2 * d[14] * d[27] * d[44] * d[52] + 2 * d[13] * d[30] * d[44] * d[52] + 2 * d[12] * d[31] * d[44] * d[52] - 2 * d[9] * d[32] * d[44] * d[52] + 2 * d[17] * d[28] * d[36] * d[53] - 2 * d[16] * d[32] * d[36] * d[53] - 2 * d[14] * d[34] * d[36] * d[53] + 2 * d[10] * d[35] * d[36] * d[53] + 2 * d[17] * d[27] * d[37] * d[53] - 2 * d[15] * d[31] * d[37] * d[53] - 2 * d[13] * d[33] * d[37] * d[53] + 2 * d[9] * d[35] * d[37] * d[53] - 4 * d[17] * d[30] * d[39] * d[53] + 2 * d[16] * d[31] * d[39] * d[53] + 2 * d[15] * d[32] * d[39] * d[53] + 2 * d[14] * d[33] * d[39] * d[53] + 2 * d[13] * d[34] * d[39] * d[53] - 4 * d[12] * d[35] * d[39] * d[53] - 2 * d[15] * d[28] * d[40] * d[53] + 2 * d[16] * d[30] * d[40] * d[53] - 2 * d[10] * d[33] * d[40] * d[53] + 2 * d[12] * d[34] * d[40] * d[53] - 2 * d[16] * d[27] * d[41] * d[53] + 2 * d[15] * d[30] * d[41] * d[53] + 2 * d[12] * d[33] * d[41] * d[53] - 2 * d[9] * d[34] * d[41] * d[53] - 2 * d[13] * d[28] * d[42] * d[53] + 2 * d[14] * d[30] * d[42] * d[53] - 2 * d[10] * d[31] * d[42] * d[53] + 2 * d[12] * d[32] * d[42] * d[53] - 2 * d[14] * d[27] * d[43] * d[53] + 2 * d[13] * d[30] * d[43] * d[53] + 2 * d[12] * d[31] * d[43] * d[53] - 2 * d[9] * d[32] * d[43] * d[53] + 2 * d[10] * d[27] * d[44] * d[53] + 2 * d[9] * d[28] * d[44] * d[53] - 4 * d[12] * d[30] * d[44] * d[53] - d[11] * d[28] * d[36] * d[59] - d[10] * d[29] * d[36] * d[59] + 2 * d[14] * d[32] * d[36] * d[59] - d[11] * d[27] * d[37] * d[59] - d[9] * d[29] * d[37] * d[59] + 2 * d[13] * d[31] * d[37] * d[59] - d[10] * d[27] * d[38] * d[59] - d[9] * d[28] * d[38] * d[59] + 2 * d[12] * d[30] * d[38] * d[59] + 2 * d[12] * d[29] * d[39] * d[59] + 2 * d[11] * d[30] * d[39] * d[59] - 2 * d[14] * d[31] * d[39] * d[59] - 2 * d[13] * d[32] * d[39] * d[59] + 2 * d[13] * d[28] * d[40] * d[59] - 2 * d[14] * d[30] * d[40] * d[59] + 2 * d[10] * d[31] * d[40] * d[59] - 2 * d[12] * d[32] * d[40] * d[59] + 2 * d[14] * d[27] * d[41] * d[59] - 2 * d[13] * d[30] * d[41] * d[59] - 2 * d[12] * d[31] * d[41] * d[59] + 2 * d[9] * d[32] * d[41] * d[59];
    coeffs[84] = 2 * d[24] * d[29] * d[37] * d[51] - 2 * d[26] * d[31] * d[37] * d[51] + 2 * d[20] * d[33] * d[37] * d[51] - 2 * d[22] * d[35] * d[37] * d[51] + 2 * d[24] * d[28] * d[38] * d[51] - 2 * d[25] * d[30] * d[38] * d[51] + 2 * d[19] * d[33] * d[38] * d[51] - 2 * d[21] * d[34] * d[38] * d[51] - 2 * d[25] * d[29] * d[39] * d[51] + 2 * d[26] * d[32] * d[39] * d[51] - 2 * d[20] * d[34] * d[39] * d[51] + 2 * d[23] * d[35] * d[39] * d[51] - 2 * d[26] * d[28] * d[40] * d[51] + 2 * d[25] * d[32] * d[40] * d[51] + 2 * d[23] * d[34] * d[40] * d[51] - 2 * d[19] * d[35] * d[40] * d[51] + 2 * d[26] * d[30] * d[41] * d[51] + 2 * d[25] * d[31] * d[41] * d[51] - 4 * d[24] * d[32] * d[41] * d[51] - 4 * d[23] * d[33] * d[41] * d[51] + 2 * d[22] * d[34] * d[41] * d[51] + 2 * d[21] * d[35] * d[41] * d[51] + 2 * d[20] * d[28] * d[42] * d[51] + 2 * d[19] * d[29] * d[42] * d[51] - 4 * d[23] * d[32] * d[42] * d[51] - 2 * d[21] * d[29] * d[43] * d[51] - 2 * d[20] * d[30] * d[43] * d[51] + 2 * d[23] * d[31] * d[43] * d[51] + 2 * d[22] * d[32] * d[43] * d[51] - 2 * d[22] * d[28] * d[44] * d[51] + 2 * d[23] * d[30] * d[44] * d[51] - 2 * d[19] * d[31] * d[44] * d[51] + 2 * d[21] * d[32] * d[44] * d[51] + 2 * d[25] * d[29] * d[36] * d[52] - 2 * d[26] * d[32] * d[36] * d[52] + 2 * d[20] * d[34] * d[36] * d[52] - 2 * d[23] * d[35] * d[36] * d[52] + 2 * d[25] * d[27] * d[38] * d[52] - 2 * d[24] * d[30] * d[38] * d[52] - 2 * d[21] * d[33] * d[38] * d[52] + 2 * d[18] * d[34] * d[38] * d[52] - 2 * d[24] * d[29] * d[39] * d[52] + 2 * d[26] * d[31] * d[39] * d[52] - 2 * d[20] * d[33] * d[39] * d[52] + 2 * d[22] * d[35] * d[39] * d[52] + 2 * d[26] * d[30] * d[40] * d[52] - 4 * d[25] * d[31] * d[40] * d[52] + 2 * d[24] * d[32] * d[40] * d[52] + 2 * d[23] * d[33] * d[40] * d[52] - 4 * d[22] * d[34] * d[40] * d[52] + 2 * d[21] * d[35] * d[40] * d[52] - 2 * d[26] * d[27] * d[41] * d[52] + 2 * d[24] * d[31] * d[41] * d[52] + 2 * d[22] * d[33] * d[41] * d[52] - 2 * d[18] * d[35] * d[41] * d[52] - 2 * d[21] * d[29] * d[42] * d[52] - 2 * d[20] * d[30] * d[42] * d[52] + 2 * d[23] * d[31] * d[42] * d[52] + 2 * d[22] * d[32] * d[42] * d[52] + 2 * d[20] * d[27] * d[43] * d[52] + 2 * d[18] * d[29] * d[43] * d[52] - 4 * d[22] * d[31] * d[43] * d[52] - 2 * d[23] * d[27] * d[44] * d[52] + 2 * d[22] * d[30] * d[44] * d[52] + 2 * d[21] * d[31] * d[44] * d[52] - 2 * d[18] * d[32] * d[44] * d[52] + 2 * d[26] * d[28] * d[36] * d[53] - 2 * d[25] * d[32] * d[36] * d[53] - 2 * d[23] * d[34] * d[36] * d[53] + 2 * d[19] * d[35] * d[36] * d[53] + 2 * d[26] * d[27] * d[37] * d[53] - 2 * d[24] * d[31] * d[37] * d[53] - 2 * d[22] * d[33] * d[37] * d[53] + 2 * d[18] * d[35] * d[37] * d[53] - 4 * d[26] * d[30] * d[39] * d[53] + 2 * d[25] * d[31] * d[39] * d[53] + 2 * d[24] * d[32] * d[39] * d[53] + 2 * d[23] * d[33] * d[39] * d[53] + 2 * d[22] * d[34] * d[39] * d[53] - 4 * d[21] * d[35] * d[39] * d[53] - 2 * d[24] * d[28] * d[40] * d[53] + 2 * d[25] * d[30] * d[40] * d[53] - 2 * d[19] * d[33] * d[40] * d[53] + 2 * d[21] * d[34] * d[40] * d[53] - 2 * d[25] * d[27] * d[41] * d[53] + 2 * d[24] * d[30] * d[41] * d[53] + 2 * d[21] * d[33] * d[41] * d[53] - 2 * d[18] * d[34] * d[41] * d[53] - 2 * d[22] * d[28] * d[42] * d[53] + 2 * d[23] * d[30] * d[42] * d[53] - 2 * d[19] * d[31] * d[42] * d[53] + 2 * d[21] * d[32] * d[42] * d[53] - 2 * d[23] * d[27] * d[43] * d[53] + 2 * d[22] * d[30] * d[43] * d[53] + 2 * d[21] * d[31] * d[43] * d[53] - 2 * d[18] * d[32] * d[43] * d[53] + 2 * d[19] * d[27] * d[44] * d[53] + 2 * d[18] * d[28] * d[44] * d[53] - 4 * d[21] * d[30] * d[44] * d[53] - d[20] * d[28] * d[36] * d[59] - d[19] * d[29] * d[36] * d[59] + 2 * d[23] * d[32] * d[36] * d[59] - d[20] * d[27] * d[37] * d[59] - d[18] * d[29] * d[37] * d[59] + 2 * d[22] * d[31] * d[37] * d[59] - d[19] * d[27] * d[38] * d[59] - d[18] * d[28] * d[38] * d[59] + 2 * d[21] * d[30] * d[38] * d[59] + 2 * d[21] * d[29] * d[39] * d[59] + 2 * d[20] * d[30] * d[39] * d[59] - 2 * d[23] * d[31] * d[39] * d[59] - 2 * d[22] * d[32] * d[39] * d[59] + 2 * d[22] * d[28] * d[40] * d[59] - 2 * d[23] * d[30] * d[40] * d[59] + 2 * d[19] * d[31] * d[40] * d[59] - 2 * d[21] * d[32] * d[40] * d[59] + 2 * d[23] * d[27] * d[41] * d[59] - 2 * d[22] * d[30] * d[41] * d[59] - 2 * d[21] * d[31] * d[41] * d[59] + 2 * d[18] * d[32] * d[41] * d[59];
    coeffs[85] = 2 * d[29] * d[33] * d[37] * d[51] - 2 * d[31] * d[35] * d[37] * d[51] + 2 * d[28] * d[33] * d[38] * d[51] - 2 * d[30] * d[34] * d[38] * d[51] - 2 * d[29] * d[34] * d[39] * d[51] + 2 * d[32] * d[35] * d[39] * d[51] + 2 * d[32] * d[34] * d[40] * d[51] - 2 * d[28] * d[35] * d[40] * d[51] - 4 * d[32] * d[33] * d[41] * d[51] + 2 * d[31] * d[34] * d[41] * d[51] + 2 * d[30] * d[35] * d[41] * d[51] + 2 * d[28] * d[29] * d[42] * d[51] - 2 * std::pow(d[32], 2) * d[42] * d[51] - 2 * d[29] * d[30] * d[43] * d[51] + 2 * d[31] * d[32] * d[43] * d[51] - 2 * d[28] * d[31] * d[44] * d[51] + 2 * d[30] * d[32] * d[44] * d[51] + 2 * d[29] * d[34] * d[36] * d[52] - 2 * d[32] * d[35] * d[36] * d[52] - 2 * d[30] * d[33] * d[38] * d[52] + 2 * d[27] * d[34] * d[38] * d[52] - 2 * d[29] * d[33] * d[39] * d[52] + 2 * d[31] * d[35] * d[39] * d[52] + 2 * d[32] * d[33] * d[40] * d[52] - 4 * d[31] * d[34] * d[40] * d[52] + 2 * d[30] * d[35] * d[40] * d[52] + 2 * d[31] * d[33] * d[41] * d[52] - 2 * d[27] * d[35] * d[41] * d[52] - 2 * d[29] * d[30] * d[42] * d[52] + 2 * d[31] * d[32] * d[42] * d[52] + 2 * d[27] * d[29] * d[43] * d[52] - 2 * std::pow(d[31], 2) * d[43] * d[52] + 2 * d[30] * d[31] * d[44] * d[52] - 2 * d[27] * d[32] * d[44] * d[52] - 2 * d[32] * d[34] * d[36] * d[53] + 2 * d[28] * d[35] * d[36] * d[53] - 2 * d[31] * d[33] * d[37] * d[53] + 2 * d[27] * d[35] * d[37] * d[53] + 2 * d[32] * d[33] * d[39] * d[53] + 2 * d[31] * d[34] * d[39] * d[53] - 4 * d[30] * d[35] * d[39] * d[53] - 2 * d[28] * d[33] * d[40] * d[53] + 2 * d[30] * d[34] * d[40] * d[53] + 2 * d[30] * d[33] * d[41] * d[53] - 2 * d[27] * d[34] * d[41] * d[53] - 2 * d[28] * d[31] * d[42] * d[53] + 2 * d[30] * d[32] * d[42] * d[53] + 2 * d[30] * d[31] * d[43] * d[53] - 2 * d[27] * d[32] * d[43] * d[53] + 2 * d[27] * d[28] * d[44] * d[53] - 2 * std::pow(d[30], 2) * d[44] * d[53] - d[28] * d[29] * d[36] * d[59] + std::pow(d[32], 2) * d[36] * d[59] - d[27] * d[29] * d[37] * d[59] + std::pow(d[31], 2) * d[37] * d[59] - d[27] * d[28] * d[38] * d[59] + std::pow(d[30], 2) * d[38] * d[59] + 2 * d[29] * d[30] * d[39] * d[59] - 2 * d[31] * d[32] * d[39] * d[59] + 2 * d[28] * d[31] * d[40] * d[59] - 2 * d[30] * d[32] * d[40] * d[59] - 2 * d[30] * d[31] * d[41] * d[59] + 2 * d[27] * d[32] * d[41] * d[59];
    coeffs[86] = 2 * d[15] * d[37] * d[38] * d[51] - 2 * d[16] * d[38] * d[39] * d[51] - 2 * d[17] * d[37] * d[40] * d[51] + 2 * d[17] * d[39] * d[41] * d[51] + 2 * d[16] * d[40] * d[41] * d[51] - 2 * d[15] * std::pow(d[41], 2) * d[51] + 2 * d[11] * d[37] * d[42] * d[51] + 2 * d[10] * d[38] * d[42] * d[51] - 4 * d[14] * d[41] * d[42] * d[51] - 2 * d[12] * d[38] * d[43] * d[51] - 2 * d[11] * d[39] * d[43] * d[51] + 2 * d[14] * d[40] * d[43] * d[51] + 2 * d[13] * d[41] * d[43] * d[51] - 2 * d[13] * d[37] * d[44] * d[51] + 2 * d[14] * d[39] * d[44] * d[51] - 2 * d[10] * d[40] * d[44] * d[51] + 2 * d[12] * d[41] * d[44] * d[51] + 2 * d[16] * d[36] * d[38] * d[52] - 2 * d[15] * d[38] * d[39] * d[52] + 2 * d[17] * d[39] * d[40] * d[52] - 2 * d[16] * std::pow(d[40], 2) * d[52] - 2 * d[17] * d[36] * d[41] * d[52] + 2 * d[15] * d[40] * d[41] * d[52] - 2 * d[12] * d[38] * d[42] * d[52] - 2 * d[11] * d[39] * d[42] * d[52] + 2 * d[14] * d[40] * d[42] * d[52] + 2 * d[13] * d[41] * d[42] * d[52] + 2 * d[11] * d[36] * d[43] * d[52] + 2 * d[9] * d[38] * d[43] * d[52] - 4 * d[13] * d[40] * d[43] * d[52] - 2 * d[14] * d[36] * d[44] * d[52] + 2 * d[13] * d[39] * d[44] * d[52] + 2 * d[12] * d[40] * d[44] * d[52] - 2 * d[9] * d[41] * d[44] * d[52] + 2 * d[17] * d[36] * d[37] * d[53] - 2 * d[17] * std::pow(d[39], 2) * d[53] - 2 * d[15] * d[37] * d[40] * d[53] + 2 * d[16] * d[39] * d[40] * d[53] - 2 * d[16] * d[36] * d[41] * d[53] + 2 * d[15] * d[39] * d[41] * d[53] - 2 * d[13] * d[37] * d[42] * d[53] + 2 * d[14] * d[39] * d[42] * d[53] - 2 * d[10] * d[40] * d[42] * d[53] + 2 * d[12] * d[41] * d[42] * d[53] - 2 * d[14] * d[36] * d[43] * d[53] + 2 * d[13] * d[39] * d[43] * d[53] + 2 * d[12] * d[40] * d[43] * d[53] - 2 * d[9] * d[41] * d[43] * d[53] + 2 * d[10] * d[36] * d[44] * d[53] + 2 * d[9] * d[37] * d[44] * d[53] - 4 * d[12] * d[39] * d[44] * d[53] - d[11] * d[36] * d[37] * d[59] - d[10] * d[36] * d[38] * d[59] - d[9] * d[37] * d[38] * d[59] + 2 * d[12] * d[38] * d[39] * d[59] + d[11] * std::pow(d[39], 2) * d[59] + 2 * d[13] * d[37] * d[40] * d[59] - 2 * d[14] * d[39] * d[40] * d[59] + d[10] * std::pow(d[40], 2) * d[59] + 2 * d[14] * d[36] * d[41] * d[59] - 2 * d[13] * d[39] * d[41] * d[59] - 2 * d[12] * d[40] * d[41] * d[59] + d[9] * std::pow(d[41], 2) * d[59];
    coeffs[87] = 2 * d[24] * d[37] * d[38] * d[51] - 2 * d[25] * d[38] * d[39] * d[51] - 2 * d[26] * d[37] * d[40] * d[51] + 2 * d[26] * d[39] * d[41] * d[51] + 2 * d[25] * d[40] * d[41] * d[51] - 2 * d[24] * std::pow(d[41], 2) * d[51] + 2 * d[20] * d[37] * d[42] * d[51] + 2 * d[19] * d[38] * d[42] * d[51] - 4 * d[23] * d[41] * d[42] * d[51] - 2 * d[21] * d[38] * d[43] * d[51] - 2 * d[20] * d[39] * d[43] * d[51] + 2 * d[23] * d[40] * d[43] * d[51] + 2 * d[22] * d[41] * d[43] * d[51] - 2 * d[22] * d[37] * d[44] * d[51] + 2 * d[23] * d[39] * d[44] * d[51] - 2 * d[19] * d[40] * d[44] * d[51] + 2 * d[21] * d[41] * d[44] * d[51] + 2 * d[25] * d[36] * d[38] * d[52] - 2 * d[24] * d[38] * d[39] * d[52] + 2 * d[26] * d[39] * d[40] * d[52] - 2 * d[25] * std::pow(d[40], 2) * d[52] - 2 * d[26] * d[36] * d[41] * d[52] + 2 * d[24] * d[40] * d[41] * d[52] - 2 * d[21] * d[38] * d[42] * d[52] - 2 * d[20] * d[39] * d[42] * d[52] + 2 * d[23] * d[40] * d[42] * d[52] + 2 * d[22] * d[41] * d[42] * d[52] + 2 * d[20] * d[36] * d[43] * d[52] + 2 * d[18] * d[38] * d[43] * d[52] - 4 * d[22] * d[40] * d[43] * d[52] - 2 * d[23] * d[36] * d[44] * d[52] + 2 * d[22] * d[39] * d[44] * d[52] + 2 * d[21] * d[40] * d[44] * d[52] - 2 * d[18] * d[41] * d[44] * d[52] + 2 * d[26] * d[36] * d[37] * d[53] - 2 * d[26] * std::pow(d[39], 2) * d[53] - 2 * d[24] * d[37] * d[40] * d[53] + 2 * d[25] * d[39] * d[40] * d[53] - 2 * d[25] * d[36] * d[41] * d[53] + 2 * d[24] * d[39] * d[41] * d[53] - 2 * d[22] * d[37] * d[42] * d[53] + 2 * d[23] * d[39] * d[42] * d[53] - 2 * d[19] * d[40] * d[42] * d[53] + 2 * d[21] * d[41] * d[42] * d[53] - 2 * d[23] * d[36] * d[43] * d[53] + 2 * d[22] * d[39] * d[43] * d[53] + 2 * d[21] * d[40] * d[43] * d[53] - 2 * d[18] * d[41] * d[43] * d[53] + 2 * d[19] * d[36] * d[44] * d[53] + 2 * d[18] * d[37] * d[44] * d[53] - 4 * d[21] * d[39] * d[44] * d[53] - d[20] * d[36] * d[37] * d[59] - d[19] * d[36] * d[38] * d[59] - d[18] * d[37] * d[38] * d[59] + 2 * d[21] * d[38] * d[39] * d[59] + d[20] * std::pow(d[39], 2) * d[59] + 2 * d[22] * d[37] * d[40] * d[59] - 2 * d[23] * d[39] * d[40] * d[59] + d[19] * std::pow(d[40], 2) * d[59] + 2 * d[23] * d[36] * d[41] * d[59] - 2 * d[22] * d[39] * d[41] * d[59] - 2 * d[21] * d[40] * d[41] * d[59] + d[18] * std::pow(d[41], 2) * d[59];
    coeffs[88] = 2 * d[33] * d[37] * d[38] * d[51] - 2 * d[34] * d[38] * d[39] * d[51] - 2 * d[35] * d[37] * d[40] * d[51] + 2 * d[35] * d[39] * d[41] * d[51] + 2 * d[34] * d[40] * d[41] * d[51] - 2 * d[33] * std::pow(d[41], 2) * d[51] + 2 * d[29] * d[37] * d[42] * d[51] + 2 * d[28] * d[38] * d[42] * d[51] - 4 * d[32] * d[41] * d[42] * d[51] - 2 * d[30] * d[38] * d[43] * d[51] - 2 * d[29] * d[39] * d[43] * d[51] + 2 * d[32] * d[40] * d[43] * d[51] + 2 * d[31] * d[41] * d[43] * d[51] - 2 * d[31] * d[37] * d[44] * d[51] + 2 * d[32] * d[39] * d[44] * d[51] - 2 * d[28] * d[40] * d[44] * d[51] + 2 * d[30] * d[41] * d[44] * d[51] + 2 * d[34] * d[36] * d[38] * d[52] - 2 * d[33] * d[38] * d[39] * d[52] + 2 * d[35] * d[39] * d[40] * d[52] - 2 * d[34] * std::pow(d[40], 2) * d[52] - 2 * d[35] * d[36] * d[41] * d[52] + 2 * d[33] * d[40] * d[41] * d[52] - 2 * d[30] * d[38] * d[42] * d[52] - 2 * d[29] * d[39] * d[42] * d[52] + 2 * d[32] * d[40] * d[42] * d[52] + 2 * d[31] * d[41] * d[42] * d[52] + 2 * d[29] * d[36] * d[43] * d[52] + 2 * d[27] * d[38] * d[43] * d[52] - 4 * d[31] * d[40] * d[43] * d[52] - 2 * d[32] * d[36] * d[44] * d[52] + 2 * d[31] * d[39] * d[44] * d[52] + 2 * d[30] * d[40] * d[44] * d[52] - 2 * d[27] * d[41] * d[44] * d[52] + 2 * d[35] * d[36] * d[37] * d[53] - 2 * d[35] * std::pow(d[39], 2) * d[53] - 2 * d[33] * d[37] * d[40] * d[53] + 2 * d[34] * d[39] * d[40] * d[53] - 2 * d[34] * d[36] * d[41] * d[53] + 2 * d[33] * d[39] * d[41] * d[53] - 2 * d[31] * d[37] * d[42] * d[53] + 2 * d[32] * d[39] * d[42] * d[53] - 2 * d[28] * d[40] * d[42] * d[53] + 2 * d[30] * d[41] * d[42] * d[53] - 2 * d[32] * d[36] * d[43] * d[53] + 2 * d[31] * d[39] * d[43] * d[53] + 2 * d[30] * d[40] * d[43] * d[53] - 2 * d[27] * d[41] * d[43] * d[53] + 2 * d[28] * d[36] * d[44] * d[53] + 2 * d[27] * d[37] * d[44] * d[53] - 4 * d[30] * d[39] * d[44] * d[53] - d[29] * d[36] * d[37] * d[59] - d[28] * d[36] * d[38] * d[59] - d[27] * d[37] * d[38] * d[59] + 2 * d[30] * d[38] * d[39] * d[59] + d[29] * std::pow(d[39], 2) * d[59] + 2 * d[31] * d[37] * d[40] * d[59] - 2 * d[32] * d[39] * d[40] * d[59] + d[28] * std::pow(d[40], 2) * d[59] + 2 * d[32] * d[36] * d[41] * d[59] - 2 * d[31] * d[39] * d[41] * d[59] - 2 * d[30] * d[40] * d[41] * d[59] + d[27] * std::pow(d[41], 2) * d[59];
    coeffs[89] = 2 * d[37] * d[38] * d[42] * d[51] - 2 * std::pow(d[41], 2) * d[42] * d[51] - 2 * d[38] * d[39] * d[43] * d[51] + 2 * d[40] * d[41] * d[43] * d[51] - 2 * d[37] * d[40] * d[44] * d[51] + 2 * d[39] * d[41] * d[44] * d[51] - 2 * d[38] * d[39] * d[42] * d[52] + 2 * d[40] * d[41] * d[42] * d[52] + 2 * d[36] * d[38] * d[43] * d[52] - 2 * std::pow(d[40], 2) * d[43] * d[52] + 2 * d[39] * d[40] * d[44] * d[52] - 2 * d[36] * d[41] * d[44] * d[52] - 2 * d[37] * d[40] * d[42] * d[53] + 2 * d[39] * d[41] * d[42] * d[53] + 2 * d[39] * d[40] * d[43] * d[53] - 2 * d[36] * d[41] * d[43] * d[53] + 2 * d[36] * d[37] * d[44] * d[53] - 2 * std::pow(d[39], 2) * d[44] * d[53] - d[36] * d[37] * d[38] * d[59] + d[38] * std::pow(d[39], 2) * d[59] + d[37] * std::pow(d[40], 2) * d[59] - 2 * d[39] * d[40] * d[41] * d[59] + d[36] * std::pow(d[41], 2) * d[59];
    coeffs[90] = 2 * d[6] * d[10] * d[11] * d[51] - 2 * d[7] * d[11] * d[12] * d[51] - 2 * d[8] * d[10] * d[13] * d[51] + 2 * d[8] * d[12] * d[14] * d[51] + 2 * d[7] * d[13] * d[14] * d[51] - 2 * d[6] * std::pow(d[14], 2) * d[51] + 2 * d[2] * d[10] * d[15] * d[51] + 2 * d[1] * d[11] * d[15] * d[51] - 4 * d[5] * d[14] * d[15] * d[51] - 2 * d[3] * d[11] * d[16] * d[51] - 2 * d[2] * d[12] * d[16] * d[51] + 2 * d[5] * d[13] * d[16] * d[51] + 2 * d[4] * d[14] * d[16] * d[51] - 2 * d[4] * d[10] * d[17] * d[51] + 2 * d[5] * d[12] * d[17] * d[51] - 2 * d[1] * d[13] * d[17] * d[51] + 2 * d[3] * d[14] * d[17] * d[51] + d[10] * d[11] * std::pow(d[51], 2) - std::pow(d[14], 2) * std::pow(d[51], 2) + 2 * d[7] * d[9] * d[11] * d[52] - 2 * d[6] * d[11] * d[12] * d[52] + 2 * d[8] * d[12] * d[13] * d[52] - 2 * d[7] * std::pow(d[13], 2) * d[52] - 2 * d[8] * d[9] * d[14] * d[52] + 2 * d[6] * d[13] * d[14] * d[52] - 2 * d[3] * d[11] * d[15] * d[52] - 2 * d[2] * d[12] * d[15] * d[52] + 2 * d[5] * d[13] * d[15] * d[52] + 2 * d[4] * d[14] * d[15] * d[52] + 2 * d[2] * d[9] * d[16] * d[52] + 2 * d[0] * d[11] * d[16] * d[52] - 4 * d[4] * d[13] * d[16] * d[52] - 2 * d[5] * d[9] * d[17] * d[52] + 2 * d[4] * d[12] * d[17] * d[52] + 2 * d[3] * d[13] * d[17] * d[52] - 2 * d[0] * d[14] * d[17] * d[52] - 2 * d[11] * d[12] * d[51] * d[52] + 2 * d[13] * d[14] * d[51] * d[52] + d[9] * d[11] * std::pow(d[52], 2) - std::pow(d[13], 2) * std::pow(d[52], 2) + 2 * d[8] * d[9] * d[10] * d[53] - 2 * d[8] * std::pow(d[12], 2) * d[53] - 2 * d[6] * d[10] * d[13] * d[53] + 2 * d[7] * d[12] * d[13] * d[53] - 2 * d[7] * d[9] * d[14] * d[53] + 2 * d[6] * d[12] * d[14] * d[53] - 2 * d[4] * d[10] * d[15] * d[53] + 2 * d[5] * d[12] * d[15] * d[53] - 2 * d[1] * d[13] * d[15] * d[53] + 2 * d[3] * d[14] * d[15] * d[53] - 2 * d[5] * d[9] * d[16] * d[53] + 2 * d[4] * d[12] * d[16] * d[53] + 2 * d[3] * d[13] * d[16] * d[53] - 2 * d[0] * d[14] * d[16] * d[53] + 2 * d[1] * d[9] * d[17] * d[53] + 2 * d[0] * d[10] * d[17] * d[53] - 4 * d[3] * d[12] * d[17] * d[53] - 2 * d[10] * d[13] * d[51] * d[53] + 2 * d[12] * d[14] * d[51] * d[53] + 2 * d[12] * d[13] * d[52] * d[53] - 2 * d[9] * d[14] * d[52] * d[53] + d[9] * d[10] * std::pow(d[53], 2) - std::pow(d[12], 2) * std::pow(d[53], 2) - d[2] * d[9] * d[10] * d[59] - d[1] * d[9] * d[11] * d[59] - d[0] * d[10] * d[11] * d[59] + 2 * d[3] * d[11] * d[12] * d[59] + d[2] * std::pow(d[12], 2) * d[59] + 2 * d[4] * d[10] * d[13] * d[59] - 2 * d[5] * d[12] * d[13] * d[59] + d[1] * std::pow(d[13], 2) * d[59] + 2 * d[5] * d[9] * d[14] * d[59] - 2 * d[4] * d[12] * d[14] * d[59] - 2 * d[3] * d[13] * d[14] * d[59] + d[0] * std::pow(d[14], 2) * d[59];
    coeffs[91] = 2 * d[6] * d[11] * d[19] * d[51] - 2 * d[8] * d[13] * d[19] * d[51] + 2 * d[2] * d[15] * d[19] * d[51] - 2 * d[4] * d[17] * d[19] * d[51] + 2 * d[6] * d[10] * d[20] * d[51] - 2 * d[7] * d[12] * d[20] * d[51] + 2 * d[1] * d[15] * d[20] * d[51] - 2 * d[3] * d[16] * d[20] * d[51] - 2 * d[7] * d[11] * d[21] * d[51] + 2 * d[8] * d[14] * d[21] * d[51] - 2 * d[2] * d[16] * d[21] * d[51] + 2 * d[5] * d[17] * d[21] * d[51] - 2 * d[8] * d[10] * d[22] * d[51] + 2 * d[7] * d[14] * d[22] * d[51] + 2 * d[5] * d[16] * d[22] * d[51] - 2 * d[1] * d[17] * d[22] * d[51] + 2 * d[8] * d[12] * d[23] * d[51] + 2 * d[7] * d[13] * d[23] * d[51] - 4 * d[6] * d[14] * d[23] * d[51] - 4 * d[5] * d[15] * d[23] * d[51] + 2 * d[4] * d[16] * d[23] * d[51] + 2 * d[3] * d[17] * d[23] * d[51] + 2 * d[2] * d[10] * d[24] * d[51] + 2 * d[1] * d[11] * d[24] * d[51] - 4 * d[5] * d[14] * d[24] * d[51] - 2 * d[3] * d[11] * d[25] * d[51] - 2 * d[2] * d[12] * d[25] * d[51] + 2 * d[5] * d[13] * d[25] * d[51] + 2 * d[4] * d[14] * d[25] * d[51] - 2 * d[4] * d[10] * d[26] * d[51] + 2 * d[5] * d[12] * d[26] * d[51] - 2 * d[1] * d[13] * d[26] * d[51] + 2 * d[3] * d[14] * d[26] * d[51] + d[11] * d[19] * std::pow(d[51], 2) + d[10] * d[20] * std::pow(d[51], 2) - 2 * d[14] * d[23] * std::pow(d[51], 2) + 2 * d[7] * d[11] * d[18] * d[52] - 2 * d[8] * d[14] * d[18] * d[52] + 2 * d[2] * d[16] * d[18] * d[52] - 2 * d[5] * d[17] * d[18] * d[52] + 2 * d[7] * d[9] * d[20] * d[52] - 2 * d[6] * d[12] * d[20] * d[52] - 2 * d[3] * d[15] * d[20] * d[52] + 2 * d[0] * d[16] * d[20] * d[52] - 2 * d[6] * d[11] * d[21] * d[52] + 2 * d[8] * d[13] * d[21] * d[52] - 2 * d[2] * d[15] * d[21] * d[52] + 2 * d[4] * d[17] * d[21] * d[52] + 2 * d[8] * d[12] * d[22] * d[52] - 4 * d[7] * d[13] * d[22] * d[52] + 2 * d[6] * d[14] * d[22] * d[52] + 2 * d[5] * d[15] * d[22] * d[52] - 4 * d[4] * d[16] * d[22] * d[52] + 2 * d[3] * d[17] * d[22] * d[52] - 2 * d[8] * d[9] * d[23] * d[52] + 2 * d[6] * d[13] * d[23] * d[52] + 2 * d[4] * d[15] * d[23] * d[52] - 2 * d[0] * d[17] * d[23] * d[52] - 2 * d[3] * d[11] * d[24] * d[52] - 2 * d[2] * d[12] * d[24] * d[52] + 2 * d[5] * d[13] * d[24] * d[52] + 2 * d[4] * d[14] * d[24] * d[52] + 2 * d[2] * d[9] * d[25] * d[52] + 2 * d[0] * d[11] * d[25] * d[52] - 4 * d[4] * d[13] * d[25] * d[52] - 2 * d[5] * d[9] * d[26] * d[52] + 2 * d[4] * d[12] * d[26] * d[52] + 2 * d[3] * d[13] * d[26] * d[52] - 2 * d[0] * d[14] * d[26] * d[52] - 2 * d[12] * d[20] * d[51] * d[52] - 2 * d[11] * d[21] * d[51] * d[52] + 2 * d[14] * d[22] * d[51] * d[52] + 2 * d[13] * d[23] * d[51] * d[52] + d[11] * d[18] * std::pow(d[52], 2) + d[9] * d[20] * std::pow(d[52], 2) - 2 * d[13] * d[22] * std::pow(d[52], 2) + 2 * d[8] * d[10] * d[18] * d[53] - 2 * d[7] * d[14] * d[18] * d[53] - 2 * d[5] * d[16] * d[18] * d[53] + 2 * d[1] * d[17] * d[18] * d[53] + 2 * d[8] * d[9] * d[19] * d[53] - 2 * d[6] * d[13] * d[19] * d[53] - 2 * d[4] * d[15] * d[19] * d[53] + 2 * d[0] * d[17] * d[19] * d[53] - 4 * d[8] * d[12] * d[21] * d[53] + 2 * d[7] * d[13] * d[21] * d[53] + 2 * d[6] * d[14] * d[21] * d[53] + 2 * d[5] * d[15] * d[21] * d[53] + 2 * d[4] * d[16] * d[21] * d[53] - 4 * d[3] * d[17] * d[21] * d[53] - 2 * d[6] * d[10] * d[22] * d[53] + 2 * d[7] * d[12] * d[22] * d[53] - 2 * d[1] * d[15] * d[22] * d[53] + 2 * d[3] * d[16] * d[22] * d[53] - 2 * d[7] * d[9] * d[23] * d[53] + 2 * d[6] * d[12] * d[23] * d[53] + 2 * d[3] * d[15] * d[23] * d[53] - 2 * d[0] * d[16] * d[23] * d[53] - 2 * d[4] * d[10] * d[24] * d[53] + 2 * d[5] * d[12] * d[24] * d[53] - 2 * d[1] * d[13] * d[24] * d[53] + 2 * d[3] * d[14] * d[24] * d[53] - 2 * d[5] * d[9] * d[25] * d[53] + 2 * d[4] * d[12] * d[25] * d[53] + 2 * d[3] * d[13] * d[25] * d[53] - 2 * d[0] * d[14] * d[25] * d[53] + 2 * d[1] * d[9] * d[26] * d[53] + 2 * d[0] * d[10] * d[26] * d[53] - 4 * d[3] * d[12] * d[26] * d[53] - 2 * d[13] * d[19] * d[51] * d[53] + 2 * d[14] * d[21] * d[51] * d[53] - 2 * d[10] * d[22] * d[51] * d[53] + 2 * d[12] * d[23] * d[51] * d[53] - 2 * d[14] * d[18] * d[52] * d[53] + 2 * d[13] * d[21] * d[52] * d[53] + 2 * d[12] * d[22] * d[52] * d[53] - 2 * d[9] * d[23] * d[52] * d[53] + d[10] * d[18] * std::pow(d[53], 2) + d[9] * d[19] * std::pow(d[53], 2) - 2 * d[12] * d[21] * std::pow(d[53], 2) - d[2] * d[10] * d[18] * d[59] - d[1] * d[11] * d[18] * d[59] + 2 * d[5] * d[14] * d[18] * d[59] - d[2] * d[9] * d[19] * d[59] - d[0] * d[11] * d[19] * d[59] + 2 * d[4] * d[13] * d[19] * d[59] - d[1] * d[9] * d[20] * d[59] - d[0] * d[10] * d[20] * d[59] + 2 * d[3] * d[12] * d[20] * d[59] + 2 * d[3] * d[11] * d[21] * d[59] + 2 * d[2] * d[12] * d[21] * d[59] - 2 * d[5] * d[13] * d[21] * d[59] - 2 * d[4] * d[14] * d[21] * d[59] + 2 * d[4] * d[10] * d[22] * d[59] - 2 * d[5] * d[12] * d[22] * d[59] + 2 * d[1] * d[13] * d[22] * d[59] - 2 * d[3] * d[14] * d[22] * d[59] + 2 * d[5] * d[9] * d[23] * d[59] - 2 * d[4] * d[12] * d[23] * d[59] - 2 * d[3] * d[13] * d[23] * d[59] + 2 * d[0] * d[14] * d[23] * d[59];
    coeffs[92] = 2 * d[6] * d[19] * d[20] * d[51] - 2 * d[7] * d[20] * d[21] * d[51] - 2 * d[8] * d[19] * d[22] * d[51] + 2 * d[8] * d[21] * d[23] * d[51] + 2 * d[7] * d[22] * d[23] * d[51] - 2 * d[6] * std::pow(d[23], 2) * d[51] + 2 * d[2] * d[19] * d[24] * d[51] + 2 * d[1] * d[20] * d[24] * d[51] - 4 * d[5] * d[23] * d[24] * d[51] - 2 * d[3] * d[20] * d[25] * d[51] - 2 * d[2] * d[21] * d[25] * d[51] + 2 * d[5] * d[22] * d[25] * d[51] + 2 * d[4] * d[23] * d[25] * d[51] - 2 * d[4] * d[19] * d[26] * d[51] + 2 * d[5] * d[21] * d[26] * d[51] - 2 * d[1] * d[22] * d[26] * d[51] + 2 * d[3] * d[23] * d[26] * d[51] + d[19] * d[20] * std::pow(d[51], 2) - std::pow(d[23], 2) * std::pow(d[51], 2) + 2 * d[7] * d[18] * d[20] * d[52] - 2 * d[6] * d[20] * d[21] * d[52] + 2 * d[8] * d[21] * d[22] * d[52] - 2 * d[7] * std::pow(d[22], 2) * d[52] - 2 * d[8] * d[18] * d[23] * d[52] + 2 * d[6] * d[22] * d[23] * d[52] - 2 * d[3] * d[20] * d[24] * d[52] - 2 * d[2] * d[21] * d[24] * d[52] + 2 * d[5] * d[22] * d[24] * d[52] + 2 * d[4] * d[23] * d[24] * d[52] + 2 * d[2] * d[18] * d[25] * d[52] + 2 * d[0] * d[20] * d[25] * d[52] - 4 * d[4] * d[22] * d[25] * d[52] - 2 * d[5] * d[18] * d[26] * d[52] + 2 * d[4] * d[21] * d[26] * d[52] + 2 * d[3] * d[22] * d[26] * d[52] - 2 * d[0] * d[23] * d[26] * d[52] - 2 * d[20] * d[21] * d[51] * d[52] + 2 * d[22] * d[23] * d[51] * d[52] + d[18] * d[20] * std::pow(d[52], 2) - std::pow(d[22], 2) * std::pow(d[52], 2) + 2 * d[8] * d[18] * d[19] * d[53] - 2 * d[8] * std::pow(d[21], 2) * d[53] - 2 * d[6] * d[19] * d[22] * d[53] + 2 * d[7] * d[21] * d[22] * d[53] - 2 * d[7] * d[18] * d[23] * d[53] + 2 * d[6] * d[21] * d[23] * d[53] - 2 * d[4] * d[19] * d[24] * d[53] + 2 * d[5] * d[21] * d[24] * d[53] - 2 * d[1] * d[22] * d[24] * d[53] + 2 * d[3] * d[23] * d[24] * d[53] - 2 * d[5] * d[18] * d[25] * d[53] + 2 * d[4] * d[21] * d[25] * d[53] + 2 * d[3] * d[22] * d[25] * d[53] - 2 * d[0] * d[23] * d[25] * d[53] + 2 * d[1] * d[18] * d[26] * d[53] + 2 * d[0] * d[19] * d[26] * d[53] - 4 * d[3] * d[21] * d[26] * d[53] - 2 * d[19] * d[22] * d[51] * d[53] + 2 * d[21] * d[23] * d[51] * d[53] + 2 * d[21] * d[22] * d[52] * d[53] - 2 * d[18] * d[23] * d[52] * d[53] + d[18] * d[19] * std::pow(d[53], 2) - std::pow(d[21], 2) * std::pow(d[53], 2) - d[2] * d[18] * d[19] * d[59] - d[1] * d[18] * d[20] * d[59] - d[0] * d[19] * d[20] * d[59] + 2 * d[3] * d[20] * d[21] * d[59] + d[2] * std::pow(d[21], 2) * d[59] + 2 * d[4] * d[19] * d[22] * d[59] - 2 * d[5] * d[21] * d[22] * d[59] + d[1] * std::pow(d[22], 2) * d[59] + 2 * d[5] * d[18] * d[23] * d[59] - 2 * d[4] * d[21] * d[23] * d[59] - 2 * d[3] * d[22] * d[23] * d[59] + d[0] * std::pow(d[23], 2) * d[59];
    coeffs[93] = 2 * d[6] * d[11] * d[28] * d[51] - 2 * d[8] * d[13] * d[28] * d[51] + 2 * d[2] * d[15] * d[28] * d[51] - 2 * d[4] * d[17] * d[28] * d[51] + 2 * d[6] * d[10] * d[29] * d[51] - 2 * d[7] * d[12] * d[29] * d[51] + 2 * d[1] * d[15] * d[29] * d[51] - 2 * d[3] * d[16] * d[29] * d[51] - 2 * d[7] * d[11] * d[30] * d[51] + 2 * d[8] * d[14] * d[30] * d[51] - 2 * d[2] * d[16] * d[30] * d[51] + 2 * d[5] * d[17] * d[30] * d[51] - 2 * d[8] * d[10] * d[31] * d[51] + 2 * d[7] * d[14] * d[31] * d[51] + 2 * d[5] * d[16] * d[31] * d[51] - 2 * d[1] * d[17] * d[31] * d[51] + 2 * d[8] * d[12] * d[32] * d[51] + 2 * d[7] * d[13] * d[32] * d[51] - 4 * d[6] * d[14] * d[32] * d[51] - 4 * d[5] * d[15] * d[32] * d[51] + 2 * d[4] * d[16] * d[32] * d[51] + 2 * d[3] * d[17] * d[32] * d[51] + 2 * d[2] * d[10] * d[33] * d[51] + 2 * d[1] * d[11] * d[33] * d[51] - 4 * d[5] * d[14] * d[33] * d[51] - 2 * d[3] * d[11] * d[34] * d[51] - 2 * d[2] * d[12] * d[34] * d[51] + 2 * d[5] * d[13] * d[34] * d[51] + 2 * d[4] * d[14] * d[34] * d[51] - 2 * d[4] * d[10] * d[35] * d[51] + 2 * d[5] * d[12] * d[35] * d[51] - 2 * d[1] * d[13] * d[35] * d[51] + 2 * d[3] * d[14] * d[35] * d[51] + d[11] * d[28] * std::pow(d[51], 2) + d[10] * d[29] * std::pow(d[51], 2) - 2 * d[14] * d[32] * std::pow(d[51], 2) + 2 * d[7] * d[11] * d[27] * d[52] - 2 * d[8] * d[14] * d[27] * d[52] + 2 * d[2] * d[16] * d[27] * d[52] - 2 * d[5] * d[17] * d[27] * d[52] + 2 * d[7] * d[9] * d[29] * d[52] - 2 * d[6] * d[12] * d[29] * d[52] - 2 * d[3] * d[15] * d[29] * d[52] + 2 * d[0] * d[16] * d[29] * d[52] - 2 * d[6] * d[11] * d[30] * d[52] + 2 * d[8] * d[13] * d[30] * d[52] - 2 * d[2] * d[15] * d[30] * d[52] + 2 * d[4] * d[17] * d[30] * d[52] + 2 * d[8] * d[12] * d[31] * d[52] - 4 * d[7] * d[13] * d[31] * d[52] + 2 * d[6] * d[14] * d[31] * d[52] + 2 * d[5] * d[15] * d[31] * d[52] - 4 * d[4] * d[16] * d[31] * d[52] + 2 * d[3] * d[17] * d[31] * d[52] - 2 * d[8] * d[9] * d[32] * d[52] + 2 * d[6] * d[13] * d[32] * d[52] + 2 * d[4] * d[15] * d[32] * d[52] - 2 * d[0] * d[17] * d[32] * d[52] - 2 * d[3] * d[11] * d[33] * d[52] - 2 * d[2] * d[12] * d[33] * d[52] + 2 * d[5] * d[13] * d[33] * d[52] + 2 * d[4] * d[14] * d[33] * d[52] + 2 * d[2] * d[9] * d[34] * d[52] + 2 * d[0] * d[11] * d[34] * d[52] - 4 * d[4] * d[13] * d[34] * d[52] - 2 * d[5] * d[9] * d[35] * d[52] + 2 * d[4] * d[12] * d[35] * d[52] + 2 * d[3] * d[13] * d[35] * d[52] - 2 * d[0] * d[14] * d[35] * d[52] - 2 * d[12] * d[29] * d[51] * d[52] - 2 * d[11] * d[30] * d[51] * d[52] + 2 * d[14] * d[31] * d[51] * d[52] + 2 * d[13] * d[32] * d[51] * d[52] + d[11] * d[27] * std::pow(d[52], 2) + d[9] * d[29] * std::pow(d[52], 2) - 2 * d[13] * d[31] * std::pow(d[52], 2) + 2 * d[8] * d[10] * d[27] * d[53] - 2 * d[7] * d[14] * d[27] * d[53] - 2 * d[5] * d[16] * d[27] * d[53] + 2 * d[1] * d[17] * d[27] * d[53] + 2 * d[8] * d[9] * d[28] * d[53] - 2 * d[6] * d[13] * d[28] * d[53] - 2 * d[4] * d[15] * d[28] * d[53] + 2 * d[0] * d[17] * d[28] * d[53] - 4 * d[8] * d[12] * d[30] * d[53] + 2 * d[7] * d[13] * d[30] * d[53] + 2 * d[6] * d[14] * d[30] * d[53] + 2 * d[5] * d[15] * d[30] * d[53] + 2 * d[4] * d[16] * d[30] * d[53] - 4 * d[3] * d[17] * d[30] * d[53] - 2 * d[6] * d[10] * d[31] * d[53] + 2 * d[7] * d[12] * d[31] * d[53] - 2 * d[1] * d[15] * d[31] * d[53] + 2 * d[3] * d[16] * d[31] * d[53] - 2 * d[7] * d[9] * d[32] * d[53] + 2 * d[6] * d[12] * d[32] * d[53] + 2 * d[3] * d[15] * d[32] * d[53] - 2 * d[0] * d[16] * d[32] * d[53] - 2 * d[4] * d[10] * d[33] * d[53] + 2 * d[5] * d[12] * d[33] * d[53] - 2 * d[1] * d[13] * d[33] * d[53] + 2 * d[3] * d[14] * d[33] * d[53] - 2 * d[5] * d[9] * d[34] * d[53] + 2 * d[4] * d[12] * d[34] * d[53] + 2 * d[3] * d[13] * d[34] * d[53] - 2 * d[0] * d[14] * d[34] * d[53] + 2 * d[1] * d[9] * d[35] * d[53] + 2 * d[0] * d[10] * d[35] * d[53] - 4 * d[3] * d[12] * d[35] * d[53] - 2 * d[13] * d[28] * d[51] * d[53] + 2 * d[14] * d[30] * d[51] * d[53] - 2 * d[10] * d[31] * d[51] * d[53] + 2 * d[12] * d[32] * d[51] * d[53] - 2 * d[14] * d[27] * d[52] * d[53] + 2 * d[13] * d[30] * d[52] * d[53] + 2 * d[12] * d[31] * d[52] * d[53] - 2 * d[9] * d[32] * d[52] * d[53] + d[10] * d[27] * std::pow(d[53], 2) + d[9] * d[28] * std::pow(d[53], 2) - 2 * d[12] * d[30] * std::pow(d[53], 2) - d[2] * d[10] * d[27] * d[59] - d[1] * d[11] * d[27] * d[59] + 2 * d[5] * d[14] * d[27] * d[59] - d[2] * d[9] * d[28] * d[59] - d[0] * d[11] * d[28] * d[59] + 2 * d[4] * d[13] * d[28] * d[59] - d[1] * d[9] * d[29] * d[59] - d[0] * d[10] * d[29] * d[59] + 2 * d[3] * d[12] * d[29] * d[59] + 2 * d[3] * d[11] * d[30] * d[59] + 2 * d[2] * d[12] * d[30] * d[59] - 2 * d[5] * d[13] * d[30] * d[59] - 2 * d[4] * d[14] * d[30] * d[59] + 2 * d[4] * d[10] * d[31] * d[59] - 2 * d[5] * d[12] * d[31] * d[59] + 2 * d[1] * d[13] * d[31] * d[59] - 2 * d[3] * d[14] * d[31] * d[59] + 2 * d[5] * d[9] * d[32] * d[59] - 2 * d[4] * d[12] * d[32] * d[59] - 2 * d[3] * d[13] * d[32] * d[59] + 2 * d[0] * d[14] * d[32] * d[59];
    coeffs[94] = 2 * d[6] * d[20] * d[28] * d[51] - 2 * d[8] * d[22] * d[28] * d[51] + 2 * d[2] * d[24] * d[28] * d[51] - 2 * d[4] * d[26] * d[28] * d[51] + 2 * d[6] * d[19] * d[29] * d[51] - 2 * d[7] * d[21] * d[29] * d[51] + 2 * d[1] * d[24] * d[29] * d[51] - 2 * d[3] * d[25] * d[29] * d[51] - 2 * d[7] * d[20] * d[30] * d[51] + 2 * d[8] * d[23] * d[30] * d[51] - 2 * d[2] * d[25] * d[30] * d[51] + 2 * d[5] * d[26] * d[30] * d[51] - 2 * d[8] * d[19] * d[31] * d[51] + 2 * d[7] * d[23] * d[31] * d[51] + 2 * d[5] * d[25] * d[31] * d[51] - 2 * d[1] * d[26] * d[31] * d[51] + 2 * d[8] * d[21] * d[32] * d[51] + 2 * d[7] * d[22] * d[32] * d[51] - 4 * d[6] * d[23] * d[32] * d[51] - 4 * d[5] * d[24] * d[32] * d[51] + 2 * d[4] * d[25] * d[32] * d[51] + 2 * d[3] * d[26] * d[32] * d[51] + 2 * d[2] * d[19] * d[33] * d[51] + 2 * d[1] * d[20] * d[33] * d[51] - 4 * d[5] * d[23] * d[33] * d[51] - 2 * d[3] * d[20] * d[34] * d[51] - 2 * d[2] * d[21] * d[34] * d[51] + 2 * d[5] * d[22] * d[34] * d[51] + 2 * d[4] * d[23] * d[34] * d[51] - 2 * d[4] * d[19] * d[35] * d[51] + 2 * d[5] * d[21] * d[35] * d[51] - 2 * d[1] * d[22] * d[35] * d[51] + 2 * d[3] * d[23] * d[35] * d[51] + d[20] * d[28] * std::pow(d[51], 2) + d[19] * d[29] * std::pow(d[51], 2) - 2 * d[23] * d[32] * std::pow(d[51], 2) + 2 * d[7] * d[20] * d[27] * d[52] - 2 * d[8] * d[23] * d[27] * d[52] + 2 * d[2] * d[25] * d[27] * d[52] - 2 * d[5] * d[26] * d[27] * d[52] + 2 * d[7] * d[18] * d[29] * d[52] - 2 * d[6] * d[21] * d[29] * d[52] - 2 * d[3] * d[24] * d[29] * d[52] + 2 * d[0] * d[25] * d[29] * d[52] - 2 * d[6] * d[20] * d[30] * d[52] + 2 * d[8] * d[22] * d[30] * d[52] - 2 * d[2] * d[24] * d[30] * d[52] + 2 * d[4] * d[26] * d[30] * d[52] + 2 * d[8] * d[21] * d[31] * d[52] - 4 * d[7] * d[22] * d[31] * d[52] + 2 * d[6] * d[23] * d[31] * d[52] + 2 * d[5] * d[24] * d[31] * d[52] - 4 * d[4] * d[25] * d[31] * d[52] + 2 * d[3] * d[26] * d[31] * d[52] - 2 * d[8] * d[18] * d[32] * d[52] + 2 * d[6] * d[22] * d[32] * d[52] + 2 * d[4] * d[24] * d[32] * d[52] - 2 * d[0] * d[26] * d[32] * d[52] - 2 * d[3] * d[20] * d[33] * d[52] - 2 * d[2] * d[21] * d[33] * d[52] + 2 * d[5] * d[22] * d[33] * d[52] + 2 * d[4] * d[23] * d[33] * d[52] + 2 * d[2] * d[18] * d[34] * d[52] + 2 * d[0] * d[20] * d[34] * d[52] - 4 * d[4] * d[22] * d[34] * d[52] - 2 * d[5] * d[18] * d[35] * d[52] + 2 * d[4] * d[21] * d[35] * d[52] + 2 * d[3] * d[22] * d[35] * d[52] - 2 * d[0] * d[23] * d[35] * d[52] - 2 * d[21] * d[29] * d[51] * d[52] - 2 * d[20] * d[30] * d[51] * d[52] + 2 * d[23] * d[31] * d[51] * d[52] + 2 * d[22] * d[32] * d[51] * d[52] + d[20] * d[27] * std::pow(d[52], 2) + d[18] * d[29] * std::pow(d[52], 2) - 2 * d[22] * d[31] * std::pow(d[52], 2) + 2 * d[8] * d[19] * d[27] * d[53] - 2 * d[7] * d[23] * d[27] * d[53] - 2 * d[5] * d[25] * d[27] * d[53] + 2 * d[1] * d[26] * d[27] * d[53] + 2 * d[8] * d[18] * d[28] * d[53] - 2 * d[6] * d[22] * d[28] * d[53] - 2 * d[4] * d[24] * d[28] * d[53] + 2 * d[0] * d[26] * d[28] * d[53] - 4 * d[8] * d[21] * d[30] * d[53] + 2 * d[7] * d[22] * d[30] * d[53] + 2 * d[6] * d[23] * d[30] * d[53] + 2 * d[5] * d[24] * d[30] * d[53] + 2 * d[4] * d[25] * d[30] * d[53] - 4 * d[3] * d[26] * d[30] * d[53] - 2 * d[6] * d[19] * d[31] * d[53] + 2 * d[7] * d[21] * d[31] * d[53] - 2 * d[1] * d[24] * d[31] * d[53] + 2 * d[3] * d[25] * d[31] * d[53] - 2 * d[7] * d[18] * d[32] * d[53] + 2 * d[6] * d[21] * d[32] * d[53] + 2 * d[3] * d[24] * d[32] * d[53] - 2 * d[0] * d[25] * d[32] * d[53] - 2 * d[4] * d[19] * d[33] * d[53] + 2 * d[5] * d[21] * d[33] * d[53] - 2 * d[1] * d[22] * d[33] * d[53] + 2 * d[3] * d[23] * d[33] * d[53] - 2 * d[5] * d[18] * d[34] * d[53] + 2 * d[4] * d[21] * d[34] * d[53] + 2 * d[3] * d[22] * d[34] * d[53] - 2 * d[0] * d[23] * d[34] * d[53] + 2 * d[1] * d[18] * d[35] * d[53] + 2 * d[0] * d[19] * d[35] * d[53] - 4 * d[3] * d[21] * d[35] * d[53] - 2 * d[22] * d[28] * d[51] * d[53] + 2 * d[23] * d[30] * d[51] * d[53] - 2 * d[19] * d[31] * d[51] * d[53] + 2 * d[21] * d[32] * d[51] * d[53] - 2 * d[23] * d[27] * d[52] * d[53] + 2 * d[22] * d[30] * d[52] * d[53] + 2 * d[21] * d[31] * d[52] * d[53] - 2 * d[18] * d[32] * d[52] * d[53] + d[19] * d[27] * std::pow(d[53], 2) + d[18] * d[28] * std::pow(d[53], 2) - 2 * d[21] * d[30] * std::pow(d[53], 2) - d[2] * d[19] * d[27] * d[59] - d[1] * d[20] * d[27] * d[59] + 2 * d[5] * d[23] * d[27] * d[59] - d[2] * d[18] * d[28] * d[59] - d[0] * d[20] * d[28] * d[59] + 2 * d[4] * d[22] * d[28] * d[59] - d[1] * d[18] * d[29] * d[59] - d[0] * d[19] * d[29] * d[59] + 2 * d[3] * d[21] * d[29] * d[59] + 2 * d[3] * d[20] * d[30] * d[59] + 2 * d[2] * d[21] * d[30] * d[59] - 2 * d[5] * d[22] * d[30] * d[59] - 2 * d[4] * d[23] * d[30] * d[59] + 2 * d[4] * d[19] * d[31] * d[59] - 2 * d[5] * d[21] * d[31] * d[59] + 2 * d[1] * d[22] * d[31] * d[59] - 2 * d[3] * d[23] * d[31] * d[59] + 2 * d[5] * d[18] * d[32] * d[59] - 2 * d[4] * d[21] * d[32] * d[59] - 2 * d[3] * d[22] * d[32] * d[59] + 2 * d[0] * d[23] * d[32] * d[59];
    coeffs[95] = 2 * d[6] * d[28] * d[29] * d[51] - 2 * d[7] * d[29] * d[30] * d[51] - 2 * d[8] * d[28] * d[31] * d[51] + 2 * d[8] * d[30] * d[32] * d[51] + 2 * d[7] * d[31] * d[32] * d[51] - 2 * d[6] * std::pow(d[32], 2) * d[51] + 2 * d[2] * d[28] * d[33] * d[51] + 2 * d[1] * d[29] * d[33] * d[51] - 4 * d[5] * d[32] * d[33] * d[51] - 2 * d[3] * d[29] * d[34] * d[51] - 2 * d[2] * d[30] * d[34] * d[51] + 2 * d[5] * d[31] * d[34] * d[51] + 2 * d[4] * d[32] * d[34] * d[51] - 2 * d[4] * d[28] * d[35] * d[51] + 2 * d[5] * d[30] * d[35] * d[51] - 2 * d[1] * d[31] * d[35] * d[51] + 2 * d[3] * d[32] * d[35] * d[51] + d[28] * d[29] * std::pow(d[51], 2) - std::pow(d[32], 2) * std::pow(d[51], 2) + 2 * d[7] * d[27] * d[29] * d[52] - 2 * d[6] * d[29] * d[30] * d[52] + 2 * d[8] * d[30] * d[31] * d[52] - 2 * d[7] * std::pow(d[31], 2) * d[52] - 2 * d[8] * d[27] * d[32] * d[52] + 2 * d[6] * d[31] * d[32] * d[52] - 2 * d[3] * d[29] * d[33] * d[52] - 2 * d[2] * d[30] * d[33] * d[52] + 2 * d[5] * d[31] * d[33] * d[52] + 2 * d[4] * d[32] * d[33] * d[52] + 2 * d[2] * d[27] * d[34] * d[52] + 2 * d[0] * d[29] * d[34] * d[52] - 4 * d[4] * d[31] * d[34] * d[52] - 2 * d[5] * d[27] * d[35] * d[52] + 2 * d[4] * d[30] * d[35] * d[52] + 2 * d[3] * d[31] * d[35] * d[52] - 2 * d[0] * d[32] * d[35] * d[52] - 2 * d[29] * d[30] * d[51] * d[52] + 2 * d[31] * d[32] * d[51] * d[52] + d[27] * d[29] * std::pow(d[52], 2) - std::pow(d[31], 2) * std::pow(d[52], 2) + 2 * d[8] * d[27] * d[28] * d[53] - 2 * d[8] * std::pow(d[30], 2) * d[53] - 2 * d[6] * d[28] * d[31] * d[53] + 2 * d[7] * d[30] * d[31] * d[53] - 2 * d[7] * d[27] * d[32] * d[53] + 2 * d[6] * d[30] * d[32] * d[53] - 2 * d[4] * d[28] * d[33] * d[53] + 2 * d[5] * d[30] * d[33] * d[53] - 2 * d[1] * d[31] * d[33] * d[53] + 2 * d[3] * d[32] * d[33] * d[53] - 2 * d[5] * d[27] * d[34] * d[53] + 2 * d[4] * d[30] * d[34] * d[53] + 2 * d[3] * d[31] * d[34] * d[53] - 2 * d[0] * d[32] * d[34] * d[53] + 2 * d[1] * d[27] * d[35] * d[53] + 2 * d[0] * d[28] * d[35] * d[53] - 4 * d[3] * d[30] * d[35] * d[53] - 2 * d[28] * d[31] * d[51] * d[53] + 2 * d[30] * d[32] * d[51] * d[53] + 2 * d[30] * d[31] * d[52] * d[53] - 2 * d[27] * d[32] * d[52] * d[53] + d[27] * d[28] * std::pow(d[53], 2) - std::pow(d[30], 2) * std::pow(d[53], 2) - d[2] * d[27] * d[28] * d[59] - d[1] * d[27] * d[29] * d[59] - d[0] * d[28] * d[29] * d[59] + 2 * d[3] * d[29] * d[30] * d[59] + d[2] * std::pow(d[30], 2) * d[59] + 2 * d[4] * d[28] * d[31] * d[59] - 2 * d[5] * d[30] * d[31] * d[59] + d[1] * std::pow(d[31], 2) * d[59] + 2 * d[5] * d[27] * d[32] * d[59] - 2 * d[4] * d[30] * d[32] * d[59] - 2 * d[3] * d[31] * d[32] * d[59] + d[0] * std::pow(d[32], 2) * d[59];
    coeffs[96] = 2 * d[6] * d[11] * d[37] * d[51] - 2 * d[8] * d[13] * d[37] * d[51] + 2 * d[2] * d[15] * d[37] * d[51] - 2 * d[4] * d[17] * d[37] * d[51] + 2 * d[6] * d[10] * d[38] * d[51] - 2 * d[7] * d[12] * d[38] * d[51] + 2 * d[1] * d[15] * d[38] * d[51] - 2 * d[3] * d[16] * d[38] * d[51] - 2 * d[7] * d[11] * d[39] * d[51] + 2 * d[8] * d[14] * d[39] * d[51] - 2 * d[2] * d[16] * d[39] * d[51] + 2 * d[5] * d[17] * d[39] * d[51] - 2 * d[8] * d[10] * d[40] * d[51] + 2 * d[7] * d[14] * d[40] * d[51] + 2 * d[5] * d[16] * d[40] * d[51] - 2 * d[1] * d[17] * d[40] * d[51] + 2 * d[8] * d[12] * d[41] * d[51] + 2 * d[7] * d[13] * d[41] * d[51] - 4 * d[6] * d[14] * d[41] * d[51] - 4 * d[5] * d[15] * d[41] * d[51] + 2 * d[4] * d[16] * d[41] * d[51] + 2 * d[3] * d[17] * d[41] * d[51] + 2 * d[2] * d[10] * d[42] * d[51] + 2 * d[1] * d[11] * d[42] * d[51] - 4 * d[5] * d[14] * d[42] * d[51] - 2 * d[3] * d[11] * d[43] * d[51] - 2 * d[2] * d[12] * d[43] * d[51] + 2 * d[5] * d[13] * d[43] * d[51] + 2 * d[4] * d[14] * d[43] * d[51] - 2 * d[4] * d[10] * d[44] * d[51] + 2 * d[5] * d[12] * d[44] * d[51] - 2 * d[1] * d[13] * d[44] * d[51] + 2 * d[3] * d[14] * d[44] * d[51] + d[11] * d[37] * std::pow(d[51], 2) + d[10] * d[38] * std::pow(d[51], 2) - 2 * d[14] * d[41] * std::pow(d[51], 2) + 2 * d[7] * d[11] * d[36] * d[52] - 2 * d[8] * d[14] * d[36] * d[52] + 2 * d[2] * d[16] * d[36] * d[52] - 2 * d[5] * d[17] * d[36] * d[52] + 2 * d[7] * d[9] * d[38] * d[52] - 2 * d[6] * d[12] * d[38] * d[52] - 2 * d[3] * d[15] * d[38] * d[52] + 2 * d[0] * d[16] * d[38] * d[52] - 2 * d[6] * d[11] * d[39] * d[52] + 2 * d[8] * d[13] * d[39] * d[52] - 2 * d[2] * d[15] * d[39] * d[52] + 2 * d[4] * d[17] * d[39] * d[52] + 2 * d[8] * d[12] * d[40] * d[52] - 4 * d[7] * d[13] * d[40] * d[52] + 2 * d[6] * d[14] * d[40] * d[52] + 2 * d[5] * d[15] * d[40] * d[52] - 4 * d[4] * d[16] * d[40] * d[52] + 2 * d[3] * d[17] * d[40] * d[52] - 2 * d[8] * d[9] * d[41] * d[52] + 2 * d[6] * d[13] * d[41] * d[52] + 2 * d[4] * d[15] * d[41] * d[52] - 2 * d[0] * d[17] * d[41] * d[52] - 2 * d[3] * d[11] * d[42] * d[52] - 2 * d[2] * d[12] * d[42] * d[52] + 2 * d[5] * d[13] * d[42] * d[52] + 2 * d[4] * d[14] * d[42] * d[52] + 2 * d[2] * d[9] * d[43] * d[52] + 2 * d[0] * d[11] * d[43] * d[52] - 4 * d[4] * d[13] * d[43] * d[52] - 2 * d[5] * d[9] * d[44] * d[52] + 2 * d[4] * d[12] * d[44] * d[52] + 2 * d[3] * d[13] * d[44] * d[52] - 2 * d[0] * d[14] * d[44] * d[52] - 2 * d[12] * d[38] * d[51] * d[52] - 2 * d[11] * d[39] * d[51] * d[52] + 2 * d[14] * d[40] * d[51] * d[52] + 2 * d[13] * d[41] * d[51] * d[52] + d[11] * d[36] * std::pow(d[52], 2) + d[9] * d[38] * std::pow(d[52], 2) - 2 * d[13] * d[40] * std::pow(d[52], 2) + 2 * d[8] * d[10] * d[36] * d[53] - 2 * d[7] * d[14] * d[36] * d[53] - 2 * d[5] * d[16] * d[36] * d[53] + 2 * d[1] * d[17] * d[36] * d[53] + 2 * d[8] * d[9] * d[37] * d[53] - 2 * d[6] * d[13] * d[37] * d[53] - 2 * d[4] * d[15] * d[37] * d[53] + 2 * d[0] * d[17] * d[37] * d[53] - 4 * d[8] * d[12] * d[39] * d[53] + 2 * d[7] * d[13] * d[39] * d[53] + 2 * d[6] * d[14] * d[39] * d[53] + 2 * d[5] * d[15] * d[39] * d[53] + 2 * d[4] * d[16] * d[39] * d[53] - 4 * d[3] * d[17] * d[39] * d[53] - 2 * d[6] * d[10] * d[40] * d[53] + 2 * d[7] * d[12] * d[40] * d[53] - 2 * d[1] * d[15] * d[40] * d[53] + 2 * d[3] * d[16] * d[40] * d[53] - 2 * d[7] * d[9] * d[41] * d[53] + 2 * d[6] * d[12] * d[41] * d[53] + 2 * d[3] * d[15] * d[41] * d[53] - 2 * d[0] * d[16] * d[41] * d[53] - 2 * d[4] * d[10] * d[42] * d[53] + 2 * d[5] * d[12] * d[42] * d[53] - 2 * d[1] * d[13] * d[42] * d[53] + 2 * d[3] * d[14] * d[42] * d[53] - 2 * d[5] * d[9] * d[43] * d[53] + 2 * d[4] * d[12] * d[43] * d[53] + 2 * d[3] * d[13] * d[43] * d[53] - 2 * d[0] * d[14] * d[43] * d[53] + 2 * d[1] * d[9] * d[44] * d[53] + 2 * d[0] * d[10] * d[44] * d[53] - 4 * d[3] * d[12] * d[44] * d[53] - 2 * d[13] * d[37] * d[51] * d[53] + 2 * d[14] * d[39] * d[51] * d[53] - 2 * d[10] * d[40] * d[51] * d[53] + 2 * d[12] * d[41] * d[51] * d[53] - 2 * d[14] * d[36] * d[52] * d[53] + 2 * d[13] * d[39] * d[52] * d[53] + 2 * d[12] * d[40] * d[52] * d[53] - 2 * d[9] * d[41] * d[52] * d[53] + d[10] * d[36] * std::pow(d[53], 2) + d[9] * d[37] * std::pow(d[53], 2) - 2 * d[12] * d[39] * std::pow(d[53], 2) - d[2] * d[10] * d[36] * d[59] - d[1] * d[11] * d[36] * d[59] + 2 * d[5] * d[14] * d[36] * d[59] - d[2] * d[9] * d[37] * d[59] - d[0] * d[11] * d[37] * d[59] + 2 * d[4] * d[13] * d[37] * d[59] - d[1] * d[9] * d[38] * d[59] - d[0] * d[10] * d[38] * d[59] + 2 * d[3] * d[12] * d[38] * d[59] + 2 * d[3] * d[11] * d[39] * d[59] + 2 * d[2] * d[12] * d[39] * d[59] - 2 * d[5] * d[13] * d[39] * d[59] - 2 * d[4] * d[14] * d[39] * d[59] + 2 * d[4] * d[10] * d[40] * d[59] - 2 * d[5] * d[12] * d[40] * d[59] + 2 * d[1] * d[13] * d[40] * d[59] - 2 * d[3] * d[14] * d[40] * d[59] + 2 * d[5] * d[9] * d[41] * d[59] - 2 * d[4] * d[12] * d[41] * d[59] - 2 * d[3] * d[13] * d[41] * d[59] + 2 * d[0] * d[14] * d[41] * d[59];
    coeffs[97] = 2 * d[6] * d[20] * d[37] * d[51] - 2 * d[8] * d[22] * d[37] * d[51] + 2 * d[2] * d[24] * d[37] * d[51] - 2 * d[4] * d[26] * d[37] * d[51] + 2 * d[6] * d[19] * d[38] * d[51] - 2 * d[7] * d[21] * d[38] * d[51] + 2 * d[1] * d[24] * d[38] * d[51] - 2 * d[3] * d[25] * d[38] * d[51] - 2 * d[7] * d[20] * d[39] * d[51] + 2 * d[8] * d[23] * d[39] * d[51] - 2 * d[2] * d[25] * d[39] * d[51] + 2 * d[5] * d[26] * d[39] * d[51] - 2 * d[8] * d[19] * d[40] * d[51] + 2 * d[7] * d[23] * d[40] * d[51] + 2 * d[5] * d[25] * d[40] * d[51] - 2 * d[1] * d[26] * d[40] * d[51] + 2 * d[8] * d[21] * d[41] * d[51] + 2 * d[7] * d[22] * d[41] * d[51] - 4 * d[6] * d[23] * d[41] * d[51] - 4 * d[5] * d[24] * d[41] * d[51] + 2 * d[4] * d[25] * d[41] * d[51] + 2 * d[3] * d[26] * d[41] * d[51] + 2 * d[2] * d[19] * d[42] * d[51] + 2 * d[1] * d[20] * d[42] * d[51] - 4 * d[5] * d[23] * d[42] * d[51] - 2 * d[3] * d[20] * d[43] * d[51] - 2 * d[2] * d[21] * d[43] * d[51] + 2 * d[5] * d[22] * d[43] * d[51] + 2 * d[4] * d[23] * d[43] * d[51] - 2 * d[4] * d[19] * d[44] * d[51] + 2 * d[5] * d[21] * d[44] * d[51] - 2 * d[1] * d[22] * d[44] * d[51] + 2 * d[3] * d[23] * d[44] * d[51] + d[20] * d[37] * std::pow(d[51], 2) + d[19] * d[38] * std::pow(d[51], 2) - 2 * d[23] * d[41] * std::pow(d[51], 2) + 2 * d[7] * d[20] * d[36] * d[52] - 2 * d[8] * d[23] * d[36] * d[52] + 2 * d[2] * d[25] * d[36] * d[52] - 2 * d[5] * d[26] * d[36] * d[52] + 2 * d[7] * d[18] * d[38] * d[52] - 2 * d[6] * d[21] * d[38] * d[52] - 2 * d[3] * d[24] * d[38] * d[52] + 2 * d[0] * d[25] * d[38] * d[52] - 2 * d[6] * d[20] * d[39] * d[52] + 2 * d[8] * d[22] * d[39] * d[52] - 2 * d[2] * d[24] * d[39] * d[52] + 2 * d[4] * d[26] * d[39] * d[52] + 2 * d[8] * d[21] * d[40] * d[52] - 4 * d[7] * d[22] * d[40] * d[52] + 2 * d[6] * d[23] * d[40] * d[52] + 2 * d[5] * d[24] * d[40] * d[52] - 4 * d[4] * d[25] * d[40] * d[52] + 2 * d[3] * d[26] * d[40] * d[52] - 2 * d[8] * d[18] * d[41] * d[52] + 2 * d[6] * d[22] * d[41] * d[52] + 2 * d[4] * d[24] * d[41] * d[52] - 2 * d[0] * d[26] * d[41] * d[52] - 2 * d[3] * d[20] * d[42] * d[52] - 2 * d[2] * d[21] * d[42] * d[52] + 2 * d[5] * d[22] * d[42] * d[52] + 2 * d[4] * d[23] * d[42] * d[52] + 2 * d[2] * d[18] * d[43] * d[52] + 2 * d[0] * d[20] * d[43] * d[52] - 4 * d[4] * d[22] * d[43] * d[52] - 2 * d[5] * d[18] * d[44] * d[52] + 2 * d[4] * d[21] * d[44] * d[52] + 2 * d[3] * d[22] * d[44] * d[52] - 2 * d[0] * d[23] * d[44] * d[52] - 2 * d[21] * d[38] * d[51] * d[52] - 2 * d[20] * d[39] * d[51] * d[52] + 2 * d[23] * d[40] * d[51] * d[52] + 2 * d[22] * d[41] * d[51] * d[52] + d[20] * d[36] * std::pow(d[52], 2) + d[18] * d[38] * std::pow(d[52], 2) - 2 * d[22] * d[40] * std::pow(d[52], 2) + 2 * d[8] * d[19] * d[36] * d[53] - 2 * d[7] * d[23] * d[36] * d[53] - 2 * d[5] * d[25] * d[36] * d[53] + 2 * d[1] * d[26] * d[36] * d[53] + 2 * d[8] * d[18] * d[37] * d[53] - 2 * d[6] * d[22] * d[37] * d[53] - 2 * d[4] * d[24] * d[37] * d[53] + 2 * d[0] * d[26] * d[37] * d[53] - 4 * d[8] * d[21] * d[39] * d[53] + 2 * d[7] * d[22] * d[39] * d[53] + 2 * d[6] * d[23] * d[39] * d[53] + 2 * d[5] * d[24] * d[39] * d[53] + 2 * d[4] * d[25] * d[39] * d[53] - 4 * d[3] * d[26] * d[39] * d[53] - 2 * d[6] * d[19] * d[40] * d[53] + 2 * d[7] * d[21] * d[40] * d[53] - 2 * d[1] * d[24] * d[40] * d[53] + 2 * d[3] * d[25] * d[40] * d[53] - 2 * d[7] * d[18] * d[41] * d[53] + 2 * d[6] * d[21] * d[41] * d[53] + 2 * d[3] * d[24] * d[41] * d[53] - 2 * d[0] * d[25] * d[41] * d[53] - 2 * d[4] * d[19] * d[42] * d[53] + 2 * d[5] * d[21] * d[42] * d[53] - 2 * d[1] * d[22] * d[42] * d[53] + 2 * d[3] * d[23] * d[42] * d[53] - 2 * d[5] * d[18] * d[43] * d[53] + 2 * d[4] * d[21] * d[43] * d[53] + 2 * d[3] * d[22] * d[43] * d[53] - 2 * d[0] * d[23] * d[43] * d[53] + 2 * d[1] * d[18] * d[44] * d[53] + 2 * d[0] * d[19] * d[44] * d[53] - 4 * d[3] * d[21] * d[44] * d[53] - 2 * d[22] * d[37] * d[51] * d[53] + 2 * d[23] * d[39] * d[51] * d[53] - 2 * d[19] * d[40] * d[51] * d[53] + 2 * d[21] * d[41] * d[51] * d[53] - 2 * d[23] * d[36] * d[52] * d[53] + 2 * d[22] * d[39] * d[52] * d[53] + 2 * d[21] * d[40] * d[52] * d[53] - 2 * d[18] * d[41] * d[52] * d[53] + d[19] * d[36] * std::pow(d[53], 2) + d[18] * d[37] * std::pow(d[53], 2) - 2 * d[21] * d[39] * std::pow(d[53], 2) - d[2] * d[19] * d[36] * d[59] - d[1] * d[20] * d[36] * d[59] + 2 * d[5] * d[23] * d[36] * d[59] - d[2] * d[18] * d[37] * d[59] - d[0] * d[20] * d[37] * d[59] + 2 * d[4] * d[22] * d[37] * d[59] - d[1] * d[18] * d[38] * d[59] - d[0] * d[19] * d[38] * d[59] + 2 * d[3] * d[21] * d[38] * d[59] + 2 * d[3] * d[20] * d[39] * d[59] + 2 * d[2] * d[21] * d[39] * d[59] - 2 * d[5] * d[22] * d[39] * d[59] - 2 * d[4] * d[23] * d[39] * d[59] + 2 * d[4] * d[19] * d[40] * d[59] - 2 * d[5] * d[21] * d[40] * d[59] + 2 * d[1] * d[22] * d[40] * d[59] - 2 * d[3] * d[23] * d[40] * d[59] + 2 * d[5] * d[18] * d[41] * d[59] - 2 * d[4] * d[21] * d[41] * d[59] - 2 * d[3] * d[22] * d[41] * d[59] + 2 * d[0] * d[23] * d[41] * d[59];
    coeffs[98] = 2 * d[6] * d[29] * d[37] * d[51] - 2 * d[8] * d[31] * d[37] * d[51] + 2 * d[2] * d[33] * d[37] * d[51] - 2 * d[4] * d[35] * d[37] * d[51] + 2 * d[6] * d[28] * d[38] * d[51] - 2 * d[7] * d[30] * d[38] * d[51] + 2 * d[1] * d[33] * d[38] * d[51] - 2 * d[3] * d[34] * d[38] * d[51] - 2 * d[7] * d[29] * d[39] * d[51] + 2 * d[8] * d[32] * d[39] * d[51] - 2 * d[2] * d[34] * d[39] * d[51] + 2 * d[5] * d[35] * d[39] * d[51] - 2 * d[8] * d[28] * d[40] * d[51] + 2 * d[7] * d[32] * d[40] * d[51] + 2 * d[5] * d[34] * d[40] * d[51] - 2 * d[1] * d[35] * d[40] * d[51] + 2 * d[8] * d[30] * d[41] * d[51] + 2 * d[7] * d[31] * d[41] * d[51] - 4 * d[6] * d[32] * d[41] * d[51] - 4 * d[5] * d[33] * d[41] * d[51] + 2 * d[4] * d[34] * d[41] * d[51] + 2 * d[3] * d[35] * d[41] * d[51] + 2 * d[2] * d[28] * d[42] * d[51] + 2 * d[1] * d[29] * d[42] * d[51] - 4 * d[5] * d[32] * d[42] * d[51] - 2 * d[3] * d[29] * d[43] * d[51] - 2 * d[2] * d[30] * d[43] * d[51] + 2 * d[5] * d[31] * d[43] * d[51] + 2 * d[4] * d[32] * d[43] * d[51] - 2 * d[4] * d[28] * d[44] * d[51] + 2 * d[5] * d[30] * d[44] * d[51] - 2 * d[1] * d[31] * d[44] * d[51] + 2 * d[3] * d[32] * d[44] * d[51] + d[29] * d[37] * std::pow(d[51], 2) + d[28] * d[38] * std::pow(d[51], 2) - 2 * d[32] * d[41] * std::pow(d[51], 2) + 2 * d[7] * d[29] * d[36] * d[52] - 2 * d[8] * d[32] * d[36] * d[52] + 2 * d[2] * d[34] * d[36] * d[52] - 2 * d[5] * d[35] * d[36] * d[52] + 2 * d[7] * d[27] * d[38] * d[52] - 2 * d[6] * d[30] * d[38] * d[52] - 2 * d[3] * d[33] * d[38] * d[52] + 2 * d[0] * d[34] * d[38] * d[52] - 2 * d[6] * d[29] * d[39] * d[52] + 2 * d[8] * d[31] * d[39] * d[52] - 2 * d[2] * d[33] * d[39] * d[52] + 2 * d[4] * d[35] * d[39] * d[52] + 2 * d[8] * d[30] * d[40] * d[52] - 4 * d[7] * d[31] * d[40] * d[52] + 2 * d[6] * d[32] * d[40] * d[52] + 2 * d[5] * d[33] * d[40] * d[52] - 4 * d[4] * d[34] * d[40] * d[52] + 2 * d[3] * d[35] * d[40] * d[52] - 2 * d[8] * d[27] * d[41] * d[52] + 2 * d[6] * d[31] * d[41] * d[52] + 2 * d[4] * d[33] * d[41] * d[52] - 2 * d[0] * d[35] * d[41] * d[52] - 2 * d[3] * d[29] * d[42] * d[52] - 2 * d[2] * d[30] * d[42] * d[52] + 2 * d[5] * d[31] * d[42] * d[52] + 2 * d[4] * d[32] * d[42] * d[52] + 2 * d[2] * d[27] * d[43] * d[52] + 2 * d[0] * d[29] * d[43] * d[52] - 4 * d[4] * d[31] * d[43] * d[52] - 2 * d[5] * d[27] * d[44] * d[52] + 2 * d[4] * d[30] * d[44] * d[52] + 2 * d[3] * d[31] * d[44] * d[52] - 2 * d[0] * d[32] * d[44] * d[52] - 2 * d[30] * d[38] * d[51] * d[52] - 2 * d[29] * d[39] * d[51] * d[52] + 2 * d[32] * d[40] * d[51] * d[52] + 2 * d[31] * d[41] * d[51] * d[52] + d[29] * d[36] * std::pow(d[52], 2) + d[27] * d[38] * std::pow(d[52], 2) - 2 * d[31] * d[40] * std::pow(d[52], 2) + 2 * d[8] * d[28] * d[36] * d[53] - 2 * d[7] * d[32] * d[36] * d[53] - 2 * d[5] * d[34] * d[36] * d[53] + 2 * d[1] * d[35] * d[36] * d[53] + 2 * d[8] * d[27] * d[37] * d[53] - 2 * d[6] * d[31] * d[37] * d[53] - 2 * d[4] * d[33] * d[37] * d[53] + 2 * d[0] * d[35] * d[37] * d[53] - 4 * d[8] * d[30] * d[39] * d[53] + 2 * d[7] * d[31] * d[39] * d[53] + 2 * d[6] * d[32] * d[39] * d[53] + 2 * d[5] * d[33] * d[39] * d[53] + 2 * d[4] * d[34] * d[39] * d[53] - 4 * d[3] * d[35] * d[39] * d[53] - 2 * d[6] * d[28] * d[40] * d[53] + 2 * d[7] * d[30] * d[40] * d[53] - 2 * d[1] * d[33] * d[40] * d[53] + 2 * d[3] * d[34] * d[40] * d[53] - 2 * d[7] * d[27] * d[41] * d[53] + 2 * d[6] * d[30] * d[41] * d[53] + 2 * d[3] * d[33] * d[41] * d[53] - 2 * d[0] * d[34] * d[41] * d[53] - 2 * d[4] * d[28] * d[42] * d[53] + 2 * d[5] * d[30] * d[42] * d[53] - 2 * d[1] * d[31] * d[42] * d[53] + 2 * d[3] * d[32] * d[42] * d[53] - 2 * d[5] * d[27] * d[43] * d[53] + 2 * d[4] * d[30] * d[43] * d[53] + 2 * d[3] * d[31] * d[43] * d[53] - 2 * d[0] * d[32] * d[43] * d[53] + 2 * d[1] * d[27] * d[44] * d[53] + 2 * d[0] * d[28] * d[44] * d[53] - 4 * d[3] * d[30] * d[44] * d[53] - 2 * d[31] * d[37] * d[51] * d[53] + 2 * d[32] * d[39] * d[51] * d[53] - 2 * d[28] * d[40] * d[51] * d[53] + 2 * d[30] * d[41] * d[51] * d[53] - 2 * d[32] * d[36] * d[52] * d[53] + 2 * d[31] * d[39] * d[52] * d[53] + 2 * d[30] * d[40] * d[52] * d[53] - 2 * d[27] * d[41] * d[52] * d[53] + d[28] * d[36] * std::pow(d[53], 2) + d[27] * d[37] * std::pow(d[53], 2) - 2 * d[30] * d[39] * std::pow(d[53], 2) - d[2] * d[28] * d[36] * d[59] - d[1] * d[29] * d[36] * d[59] + 2 * d[5] * d[32] * d[36] * d[59] - d[2] * d[27] * d[37] * d[59] - d[0] * d[29] * d[37] * d[59] + 2 * d[4] * d[31] * d[37] * d[59] - d[1] * d[27] * d[38] * d[59] - d[0] * d[28] * d[38] * d[59] + 2 * d[3] * d[30] * d[38] * d[59] + 2 * d[3] * d[29] * d[39] * d[59] + 2 * d[2] * d[30] * d[39] * d[59] - 2 * d[5] * d[31] * d[39] * d[59] - 2 * d[4] * d[32] * d[39] * d[59] + 2 * d[4] * d[28] * d[40] * d[59] - 2 * d[5] * d[30] * d[40] * d[59] + 2 * d[1] * d[31] * d[40] * d[59] - 2 * d[3] * d[32] * d[40] * d[59] + 2 * d[5] * d[27] * d[41] * d[59] - 2 * d[4] * d[30] * d[41] * d[59] - 2 * d[3] * d[31] * d[41] * d[59] + 2 * d[0] * d[32] * d[41] * d[59];
    coeffs[99] = 2 * d[6] * d[37] * d[38] * d[51] - 2 * d[7] * d[38] * d[39] * d[51] - 2 * d[8] * d[37] * d[40] * d[51] + 2 * d[8] * d[39] * d[41] * d[51] + 2 * d[7] * d[40] * d[41] * d[51] - 2 * d[6] * std::pow(d[41], 2) * d[51] + 2 * d[2] * d[37] * d[42] * d[51] + 2 * d[1] * d[38] * d[42] * d[51] - 4 * d[5] * d[41] * d[42] * d[51] - 2 * d[3] * d[38] * d[43] * d[51] - 2 * d[2] * d[39] * d[43] * d[51] + 2 * d[5] * d[40] * d[43] * d[51] + 2 * d[4] * d[41] * d[43] * d[51] - 2 * d[4] * d[37] * d[44] * d[51] + 2 * d[5] * d[39] * d[44] * d[51] - 2 * d[1] * d[40] * d[44] * d[51] + 2 * d[3] * d[41] * d[44] * d[51] + d[37] * d[38] * std::pow(d[51], 2) - std::pow(d[41], 2) * std::pow(d[51], 2) + 2 * d[7] * d[36] * d[38] * d[52] - 2 * d[6] * d[38] * d[39] * d[52] + 2 * d[8] * d[39] * d[40] * d[52] - 2 * d[7] * std::pow(d[40], 2) * d[52] - 2 * d[8] * d[36] * d[41] * d[52] + 2 * d[6] * d[40] * d[41] * d[52] - 2 * d[3] * d[38] * d[42] * d[52] - 2 * d[2] * d[39] * d[42] * d[52] + 2 * d[5] * d[40] * d[42] * d[52] + 2 * d[4] * d[41] * d[42] * d[52] + 2 * d[2] * d[36] * d[43] * d[52] + 2 * d[0] * d[38] * d[43] * d[52] - 4 * d[4] * d[40] * d[43] * d[52] - 2 * d[5] * d[36] * d[44] * d[52] + 2 * d[4] * d[39] * d[44] * d[52] + 2 * d[3] * d[40] * d[44] * d[52] - 2 * d[0] * d[41] * d[44] * d[52] - 2 * d[38] * d[39] * d[51] * d[52] + 2 * d[40] * d[41] * d[51] * d[52] + d[36] * d[38] * std::pow(d[52], 2) - std::pow(d[40], 2) * std::pow(d[52], 2) + 2 * d[8] * d[36] * d[37] * d[53] - 2 * d[8] * std::pow(d[39], 2) * d[53] - 2 * d[6] * d[37] * d[40] * d[53] + 2 * d[7] * d[39] * d[40] * d[53] - 2 * d[7] * d[36] * d[41] * d[53] + 2 * d[6] * d[39] * d[41] * d[53] - 2 * d[4] * d[37] * d[42] * d[53] + 2 * d[5] * d[39] * d[42] * d[53] - 2 * d[1] * d[40] * d[42] * d[53] + 2 * d[3] * d[41] * d[42] * d[53] - 2 * d[5] * d[36] * d[43] * d[53] + 2 * d[4] * d[39] * d[43] * d[53] + 2 * d[3] * d[40] * d[43] * d[53] - 2 * d[0] * d[41] * d[43] * d[53] + 2 * d[1] * d[36] * d[44] * d[53] + 2 * d[0] * d[37] * d[44] * d[53] - 4 * d[3] * d[39] * d[44] * d[53] - 2 * d[37] * d[40] * d[51] * d[53] + 2 * d[39] * d[41] * d[51] * d[53] + 2 * d[39] * d[40] * d[52] * d[53] - 2 * d[36] * d[41] * d[52] * d[53] + d[36] * d[37] * std::pow(d[53], 2) - std::pow(d[39], 2) * std::pow(d[53], 2) - d[2] * d[36] * d[37] * d[59] - d[1] * d[36] * d[38] * d[59] - d[0] * d[37] * d[38] * d[59] + 2 * d[3] * d[38] * d[39] * d[59] + d[2] * std::pow(d[39], 2) * d[59] + 2 * d[4] * d[37] * d[40] * d[59] - 2 * d[5] * d[39] * d[40] * d[59] + d[1] * std::pow(d[40], 2) * d[59] + 2 * d[5] * d[36] * d[41] * d[59] - 2 * d[4] * d[39] * d[41] * d[59] - 2 * d[3] * d[40] * d[41] * d[59] + d[0] * std::pow(d[41], 2) * d[59];
    coeffs[100] = 2 * d[2] * d[6] * d[10] * d[51] - 2 * d[4] * d[8] * d[10] * d[51] + 2 * d[1] * d[6] * d[11] * d[51] - 2 * d[3] * d[7] * d[11] * d[51] - 2 * d[2] * d[7] * d[12] * d[51] + 2 * d[5] * d[8] * d[12] * d[51] + 2 * d[5] * d[7] * d[13] * d[51] - 2 * d[1] * d[8] * d[13] * d[51] - 4 * d[5] * d[6] * d[14] * d[51] + 2 * d[4] * d[7] * d[14] * d[51] + 2 * d[3] * d[8] * d[14] * d[51] + 2 * d[1] * d[2] * d[15] * d[51] - 2 * std::pow(d[5], 2) * d[15] * d[51] - 2 * d[2] * d[3] * d[16] * d[51] + 2 * d[4] * d[5] * d[16] * d[51] - 2 * d[1] * d[4] * d[17] * d[51] + 2 * d[3] * d[5] * d[17] * d[51] + d[2] * d[10] * std::pow(d[51], 2) + d[1] * d[11] * std::pow(d[51], 2) - 2 * d[5] * d[14] * std::pow(d[51], 2) + 2 * d[2] * d[7] * d[9] * d[52] - 2 * d[5] * d[8] * d[9] * d[52] - 2 * d[3] * d[6] * d[11] * d[52] + 2 * d[0] * d[7] * d[11] * d[52] - 2 * d[2] * d[6] * d[12] * d[52] + 2 * d[4] * d[8] * d[12] * d[52] + 2 * d[5] * d[6] * d[13] * d[52] - 4 * d[4] * d[7] * d[13] * d[52] + 2 * d[3] * d[8] * d[13] * d[52] + 2 * d[4] * d[6] * d[14] * d[52] - 2 * d[0] * d[8] * d[14] * d[52] - 2 * d[2] * d[3] * d[15] * d[52] + 2 * d[4] * d[5] * d[15] * d[52] + 2 * d[0] * d[2] * d[16] * d[52] - 2 * std::pow(d[4], 2) * d[16] * d[52] + 2 * d[3] * d[4] * d[17] * d[52] - 2 * d[0] * d[5] * d[17] * d[52] - 2 * d[3] * d[11] * d[51] * d[52] - 2 * d[2] * d[12] * d[51] * d[52] + 2 * d[5] * d[13] * d[51] * d[52] + 2 * d[4] * d[14] * d[51] * d[52] + d[2] * d[9] * std::pow(d[52], 2) + d[0] * d[11] * std::pow(d[52], 2) - 2 * d[4] * d[13] * std::pow(d[52], 2) - 2 * d[5] * d[7] * d[9] * d[53] + 2 * d[1] * d[8] * d[9] * d[53] - 2 * d[4] * d[6] * d[10] * d[53] + 2 * d[0] * d[8] * d[10] * d[53] + 2 * d[5] * d[6] * d[12] * d[53] + 2 * d[4] * d[7] * d[12] * d[53] - 4 * d[3] * d[8] * d[12] * d[53] - 2 * d[1] * d[6] * d[13] * d[53] + 2 * d[3] * d[7] * d[13] * d[53] + 2 * d[3] * d[6] * d[14] * d[53] - 2 * d[0] * d[7] * d[14] * d[53] - 2 * d[1] * d[4] * d[15] * d[53] + 2 * d[3] * d[5] * d[15] * d[53] + 2 * d[3] * d[4] * d[16] * d[53] - 2 * d[0] * d[5] * d[16] * d[53] + 2 * d[0] * d[1] * d[17] * d[53] - 2 * std::pow(d[3], 2) * d[17] * d[53] - 2 * d[4] * d[10] * d[51] * d[53] + 2 * d[5] * d[12] * d[51] * d[53] - 2 * d[1] * d[13] * d[51] * d[53] + 2 * d[3] * d[14] * d[51] * d[53] - 2 * d[5] * d[9] * d[52] * d[53] + 2 * d[4] * d[12] * d[52] * d[53] + 2 * d[3] * d[13] * d[52] * d[53] - 2 * d[0] * d[14] * d[52] * d[53] + d[1] * d[9] * std::pow(d[53], 2) + d[0] * d[10] * std::pow(d[53], 2) - 2 * d[3] * d[12] * std::pow(d[53], 2) - d[1] * d[2] * d[9] * d[59] + std::pow(d[5], 2) * d[9] * d[59] - d[0] * d[2] * d[10] * d[59] + std::pow(d[4], 2) * d[10] * d[59] - d[0] * d[1] * d[11] * d[59] + std::pow(d[3], 2) * d[11] * d[59] + 2 * d[2] * d[3] * d[12] * d[59] - 2 * d[4] * d[5] * d[12] * d[59] + 2 * d[1] * d[4] * d[13] * d[59] - 2 * d[3] * d[5] * d[13] * d[59] - 2 * d[3] * d[4] * d[14] * d[59] + 2 * d[0] * d[5] * d[14] * d[59];
    coeffs[101] = 2 * d[2] * d[6] * d[19] * d[51] - 2 * d[4] * d[8] * d[19] * d[51] + 2 * d[1] * d[6] * d[20] * d[51] - 2 * d[3] * d[7] * d[20] * d[51] - 2 * d[2] * d[7] * d[21] * d[51] + 2 * d[5] * d[8] * d[21] * d[51] + 2 * d[5] * d[7] * d[22] * d[51] - 2 * d[1] * d[8] * d[22] * d[51] - 4 * d[5] * d[6] * d[23] * d[51] + 2 * d[4] * d[7] * d[23] * d[51] + 2 * d[3] * d[8] * d[23] * d[51] + 2 * d[1] * d[2] * d[24] * d[51] - 2 * std::pow(d[5], 2) * d[24] * d[51] - 2 * d[2] * d[3] * d[25] * d[51] + 2 * d[4] * d[5] * d[25] * d[51] - 2 * d[1] * d[4] * d[26] * d[51] + 2 * d[3] * d[5] * d[26] * d[51] + d[2] * d[19] * std::pow(d[51], 2) + d[1] * d[20] * std::pow(d[51], 2) - 2 * d[5] * d[23] * std::pow(d[51], 2) + 2 * d[2] * d[7] * d[18] * d[52] - 2 * d[5] * d[8] * d[18] * d[52] - 2 * d[3] * d[6] * d[20] * d[52] + 2 * d[0] * d[7] * d[20] * d[52] - 2 * d[2] * d[6] * d[21] * d[52] + 2 * d[4] * d[8] * d[21] * d[52] + 2 * d[5] * d[6] * d[22] * d[52] - 4 * d[4] * d[7] * d[22] * d[52] + 2 * d[3] * d[8] * d[22] * d[52] + 2 * d[4] * d[6] * d[23] * d[52] - 2 * d[0] * d[8] * d[23] * d[52] - 2 * d[2] * d[3] * d[24] * d[52] + 2 * d[4] * d[5] * d[24] * d[52] + 2 * d[0] * d[2] * d[25] * d[52] - 2 * std::pow(d[4], 2) * d[25] * d[52] + 2 * d[3] * d[4] * d[26] * d[52] - 2 * d[0] * d[5] * d[26] * d[52] - 2 * d[3] * d[20] * d[51] * d[52] - 2 * d[2] * d[21] * d[51] * d[52] + 2 * d[5] * d[22] * d[51] * d[52] + 2 * d[4] * d[23] * d[51] * d[52] + d[2] * d[18] * std::pow(d[52], 2) + d[0] * d[20] * std::pow(d[52], 2) - 2 * d[4] * d[22] * std::pow(d[52], 2) - 2 * d[5] * d[7] * d[18] * d[53] + 2 * d[1] * d[8] * d[18] * d[53] - 2 * d[4] * d[6] * d[19] * d[53] + 2 * d[0] * d[8] * d[19] * d[53] + 2 * d[5] * d[6] * d[21] * d[53] + 2 * d[4] * d[7] * d[21] * d[53] - 4 * d[3] * d[8] * d[21] * d[53] - 2 * d[1] * d[6] * d[22] * d[53] + 2 * d[3] * d[7] * d[22] * d[53] + 2 * d[3] * d[6] * d[23] * d[53] - 2 * d[0] * d[7] * d[23] * d[53] - 2 * d[1] * d[4] * d[24] * d[53] + 2 * d[3] * d[5] * d[24] * d[53] + 2 * d[3] * d[4] * d[25] * d[53] - 2 * d[0] * d[5] * d[25] * d[53] + 2 * d[0] * d[1] * d[26] * d[53] - 2 * std::pow(d[3], 2) * d[26] * d[53] - 2 * d[4] * d[19] * d[51] * d[53] + 2 * d[5] * d[21] * d[51] * d[53] - 2 * d[1] * d[22] * d[51] * d[53] + 2 * d[3] * d[23] * d[51] * d[53] - 2 * d[5] * d[18] * d[52] * d[53] + 2 * d[4] * d[21] * d[52] * d[53] + 2 * d[3] * d[22] * d[52] * d[53] - 2 * d[0] * d[23] * d[52] * d[53] + d[1] * d[18] * std::pow(d[53], 2) + d[0] * d[19] * std::pow(d[53], 2) - 2 * d[3] * d[21] * std::pow(d[53], 2) - d[1] * d[2] * d[18] * d[59] + std::pow(d[5], 2) * d[18] * d[59] - d[0] * d[2] * d[19] * d[59] + std::pow(d[4], 2) * d[19] * d[59] - d[0] * d[1] * d[20] * d[59] + std::pow(d[3], 2) * d[20] * d[59] + 2 * d[2] * d[3] * d[21] * d[59] - 2 * d[4] * d[5] * d[21] * d[59] + 2 * d[1] * d[4] * d[22] * d[59] - 2 * d[3] * d[5] * d[22] * d[59] - 2 * d[3] * d[4] * d[23] * d[59] + 2 * d[0] * d[5] * d[23] * d[59];
    coeffs[102] = 2 * d[2] * d[6] * d[28] * d[51] - 2 * d[4] * d[8] * d[28] * d[51] + 2 * d[1] * d[6] * d[29] * d[51] - 2 * d[3] * d[7] * d[29] * d[51] - 2 * d[2] * d[7] * d[30] * d[51] + 2 * d[5] * d[8] * d[30] * d[51] + 2 * d[5] * d[7] * d[31] * d[51] - 2 * d[1] * d[8] * d[31] * d[51] - 4 * d[5] * d[6] * d[32] * d[51] + 2 * d[4] * d[7] * d[32] * d[51] + 2 * d[3] * d[8] * d[32] * d[51] + 2 * d[1] * d[2] * d[33] * d[51] - 2 * std::pow(d[5], 2) * d[33] * d[51] - 2 * d[2] * d[3] * d[34] * d[51] + 2 * d[4] * d[5] * d[34] * d[51] - 2 * d[1] * d[4] * d[35] * d[51] + 2 * d[3] * d[5] * d[35] * d[51] + d[2] * d[28] * std::pow(d[51], 2) + d[1] * d[29] * std::pow(d[51], 2) - 2 * d[5] * d[32] * std::pow(d[51], 2) + 2 * d[2] * d[7] * d[27] * d[52] - 2 * d[5] * d[8] * d[27] * d[52] - 2 * d[3] * d[6] * d[29] * d[52] + 2 * d[0] * d[7] * d[29] * d[52] - 2 * d[2] * d[6] * d[30] * d[52] + 2 * d[4] * d[8] * d[30] * d[52] + 2 * d[5] * d[6] * d[31] * d[52] - 4 * d[4] * d[7] * d[31] * d[52] + 2 * d[3] * d[8] * d[31] * d[52] + 2 * d[4] * d[6] * d[32] * d[52] - 2 * d[0] * d[8] * d[32] * d[52] - 2 * d[2] * d[3] * d[33] * d[52] + 2 * d[4] * d[5] * d[33] * d[52] + 2 * d[0] * d[2] * d[34] * d[52] - 2 * std::pow(d[4], 2) * d[34] * d[52] + 2 * d[3] * d[4] * d[35] * d[52] - 2 * d[0] * d[5] * d[35] * d[52] - 2 * d[3] * d[29] * d[51] * d[52] - 2 * d[2] * d[30] * d[51] * d[52] + 2 * d[5] * d[31] * d[51] * d[52] + 2 * d[4] * d[32] * d[51] * d[52] + d[2] * d[27] * std::pow(d[52], 2) + d[0] * d[29] * std::pow(d[52], 2) - 2 * d[4] * d[31] * std::pow(d[52], 2) - 2 * d[5] * d[7] * d[27] * d[53] + 2 * d[1] * d[8] * d[27] * d[53] - 2 * d[4] * d[6] * d[28] * d[53] + 2 * d[0] * d[8] * d[28] * d[53] + 2 * d[5] * d[6] * d[30] * d[53] + 2 * d[4] * d[7] * d[30] * d[53] - 4 * d[3] * d[8] * d[30] * d[53] - 2 * d[1] * d[6] * d[31] * d[53] + 2 * d[3] * d[7] * d[31] * d[53] + 2 * d[3] * d[6] * d[32] * d[53] - 2 * d[0] * d[7] * d[32] * d[53] - 2 * d[1] * d[4] * d[33] * d[53] + 2 * d[3] * d[5] * d[33] * d[53] + 2 * d[3] * d[4] * d[34] * d[53] - 2 * d[0] * d[5] * d[34] * d[53] + 2 * d[0] * d[1] * d[35] * d[53] - 2 * std::pow(d[3], 2) * d[35] * d[53] - 2 * d[4] * d[28] * d[51] * d[53] + 2 * d[5] * d[30] * d[51] * d[53] - 2 * d[1] * d[31] * d[51] * d[53] + 2 * d[3] * d[32] * d[51] * d[53] - 2 * d[5] * d[27] * d[52] * d[53] + 2 * d[4] * d[30] * d[52] * d[53] + 2 * d[3] * d[31] * d[52] * d[53] - 2 * d[0] * d[32] * d[52] * d[53] + d[1] * d[27] * std::pow(d[53], 2) + d[0] * d[28] * std::pow(d[53], 2) - 2 * d[3] * d[30] * std::pow(d[53], 2) - d[1] * d[2] * d[27] * d[59] + std::pow(d[5], 2) * d[27] * d[59] - d[0] * d[2] * d[28] * d[59] + std::pow(d[4], 2) * d[28] * d[59] - d[0] * d[1] * d[29] * d[59] + std::pow(d[3], 2) * d[29] * d[59] + 2 * d[2] * d[3] * d[30] * d[59] - 2 * d[4] * d[5] * d[30] * d[59] + 2 * d[1] * d[4] * d[31] * d[59] - 2 * d[3] * d[5] * d[31] * d[59] - 2 * d[3] * d[4] * d[32] * d[59] + 2 * d[0] * d[5] * d[32] * d[59];
    coeffs[103] = 2 * d[2] * d[6] * d[37] * d[51] - 2 * d[4] * d[8] * d[37] * d[51] + 2 * d[1] * d[6] * d[38] * d[51] - 2 * d[3] * d[7] * d[38] * d[51] - 2 * d[2] * d[7] * d[39] * d[51] + 2 * d[5] * d[8] * d[39] * d[51] + 2 * d[5] * d[7] * d[40] * d[51] - 2 * d[1] * d[8] * d[40] * d[51] - 4 * d[5] * d[6] * d[41] * d[51] + 2 * d[4] * d[7] * d[41] * d[51] + 2 * d[3] * d[8] * d[41] * d[51] + 2 * d[1] * d[2] * d[42] * d[51] - 2 * std::pow(d[5], 2) * d[42] * d[51] - 2 * d[2] * d[3] * d[43] * d[51] + 2 * d[4] * d[5] * d[43] * d[51] - 2 * d[1] * d[4] * d[44] * d[51] + 2 * d[3] * d[5] * d[44] * d[51] + d[2] * d[37] * std::pow(d[51], 2) + d[1] * d[38] * std::pow(d[51], 2) - 2 * d[5] * d[41] * std::pow(d[51], 2) + 2 * d[2] * d[7] * d[36] * d[52] - 2 * d[5] * d[8] * d[36] * d[52] - 2 * d[3] * d[6] * d[38] * d[52] + 2 * d[0] * d[7] * d[38] * d[52] - 2 * d[2] * d[6] * d[39] * d[52] + 2 * d[4] * d[8] * d[39] * d[52] + 2 * d[5] * d[6] * d[40] * d[52] - 4 * d[4] * d[7] * d[40] * d[52] + 2 * d[3] * d[8] * d[40] * d[52] + 2 * d[4] * d[6] * d[41] * d[52] - 2 * d[0] * d[8] * d[41] * d[52] - 2 * d[2] * d[3] * d[42] * d[52] + 2 * d[4] * d[5] * d[42] * d[52] + 2 * d[0] * d[2] * d[43] * d[52] - 2 * std::pow(d[4], 2) * d[43] * d[52] + 2 * d[3] * d[4] * d[44] * d[52] - 2 * d[0] * d[5] * d[44] * d[52] - 2 * d[3] * d[38] * d[51] * d[52] - 2 * d[2] * d[39] * d[51] * d[52] + 2 * d[5] * d[40] * d[51] * d[52] + 2 * d[4] * d[41] * d[51] * d[52] + d[2] * d[36] * std::pow(d[52], 2) + d[0] * d[38] * std::pow(d[52], 2) - 2 * d[4] * d[40] * std::pow(d[52], 2) - 2 * d[5] * d[7] * d[36] * d[53] + 2 * d[1] * d[8] * d[36] * d[53] - 2 * d[4] * d[6] * d[37] * d[53] + 2 * d[0] * d[8] * d[37] * d[53] + 2 * d[5] * d[6] * d[39] * d[53] + 2 * d[4] * d[7] * d[39] * d[53] - 4 * d[3] * d[8] * d[39] * d[53] - 2 * d[1] * d[6] * d[40] * d[53] + 2 * d[3] * d[7] * d[40] * d[53] + 2 * d[3] * d[6] * d[41] * d[53] - 2 * d[0] * d[7] * d[41] * d[53] - 2 * d[1] * d[4] * d[42] * d[53] + 2 * d[3] * d[5] * d[42] * d[53] + 2 * d[3] * d[4] * d[43] * d[53] - 2 * d[0] * d[5] * d[43] * d[53] + 2 * d[0] * d[1] * d[44] * d[53] - 2 * std::pow(d[3], 2) * d[44] * d[53] - 2 * d[4] * d[37] * d[51] * d[53] + 2 * d[5] * d[39] * d[51] * d[53] - 2 * d[1] * d[40] * d[51] * d[53] + 2 * d[3] * d[41] * d[51] * d[53] - 2 * d[5] * d[36] * d[52] * d[53] + 2 * d[4] * d[39] * d[52] * d[53] + 2 * d[3] * d[40] * d[52] * d[53] - 2 * d[0] * d[41] * d[52] * d[53] + d[1] * d[36] * std::pow(d[53], 2) + d[0] * d[37] * std::pow(d[53], 2) - 2 * d[3] * d[39] * std::pow(d[53], 2) - d[1] * d[2] * d[36] * d[59] + std::pow(d[5], 2) * d[36] * d[59] - d[0] * d[2] * d[37] * d[59] + std::pow(d[4], 2) * d[37] * d[59] - d[0] * d[1] * d[38] * d[59] + std::pow(d[3], 2) * d[38] * d[59] + 2 * d[2] * d[3] * d[39] * d[59] - 2 * d[4] * d[5] * d[39] * d[59] + 2 * d[1] * d[4] * d[40] * d[59] - 2 * d[3] * d[5] * d[40] * d[59] - 2 * d[3] * d[4] * d[41] * d[59] + 2 * d[0] * d[5] * d[41] * d[59];
    coeffs[104] = 2 * d[1] * d[2] * d[6] * d[51] - 2 * std::pow(d[5], 2) * d[6] * d[51] - 2 * d[2] * d[3] * d[7] * d[51] + 2 * d[4] * d[5] * d[7] * d[51] - 2 * d[1] * d[4] * d[8] * d[51] + 2 * d[3] * d[5] * d[8] * d[51] + d[1] * d[2] * std::pow(d[51], 2) - std::pow(d[5], 2) * std::pow(d[51], 2) - 2 * d[2] * d[3] * d[6] * d[52] + 2 * d[4] * d[5] * d[6] * d[52] + 2 * d[0] * d[2] * d[7] * d[52] - 2 * std::pow(d[4], 2) * d[7] * d[52] + 2 * d[3] * d[4] * d[8] * d[52] - 2 * d[0] * d[5] * d[8] * d[52] - 2 * d[2] * d[3] * d[51] * d[52] + 2 * d[4] * d[5] * d[51] * d[52] + d[0] * d[2] * std::pow(d[52], 2) - std::pow(d[4], 2) * std::pow(d[52], 2) - 2 * d[1] * d[4] * d[6] * d[53] + 2 * d[3] * d[5] * d[6] * d[53] + 2 * d[3] * d[4] * d[7] * d[53] - 2 * d[0] * d[5] * d[7] * d[53] + 2 * d[0] * d[1] * d[8] * d[53] - 2 * std::pow(d[3], 2) * d[8] * d[53] - 2 * d[1] * d[4] * d[51] * d[53] + 2 * d[3] * d[5] * d[51] * d[53] + 2 * d[3] * d[4] * d[52] * d[53] - 2 * d[0] * d[5] * d[52] * d[53] + d[0] * d[1] * std::pow(d[53], 2) - std::pow(d[3], 2) * std::pow(d[53], 2) - d[0] * d[1] * d[2] * d[59] + d[2] * std::pow(d[3], 2) * d[59] + d[1] * std::pow(d[4], 2) * d[59] - 2 * d[3] * d[4] * d[5] * d[59] + d[0] * std::pow(d[5], 2) * d[59];
    coeffs[105] = 2 * d[10] * d[11] * d[15] * d[54] - 2 * std::pow(d[14], 2) * d[15] * d[54] - 2 * d[11] * d[12] * d[16] * d[54] + 2 * d[13] * d[14] * d[16] * d[54] - 2 * d[10] * d[13] * d[17] * d[54] + 2 * d[12] * d[14] * d[17] * d[54] - 2 * d[11] * d[12] * d[15] * d[55] + 2 * d[13] * d[14] * d[15] * d[55] + 2 * d[9] * d[11] * d[16] * d[55] - 2 * std::pow(d[13], 2) * d[16] * d[55] + 2 * d[12] * d[13] * d[17] * d[55] - 2 * d[9] * d[14] * d[17] * d[55] - 2 * d[10] * d[13] * d[15] * d[56] + 2 * d[12] * d[14] * d[15] * d[56] + 2 * d[12] * d[13] * d[16] * d[56] - 2 * d[9] * d[14] * d[16] * d[56] + 2 * d[9] * d[10] * d[17] * d[56] - 2 * std::pow(d[12], 2) * d[17] * d[56] - d[9] * d[10] * d[11] * d[60] + d[11] * std::pow(d[12], 2) * d[60] + d[10] * std::pow(d[13], 2) * d[60] - 2 * d[12] * d[13] * d[14] * d[60] + d[9] * std::pow(d[14], 2) * d[60];
    coeffs[106] = 2 * d[11] * d[15] * d[19] * d[54] - 2 * d[13] * d[17] * d[19] * d[54] + 2 * d[10] * d[15] * d[20] * d[54] - 2 * d[12] * d[16] * d[20] * d[54] - 2 * d[11] * d[16] * d[21] * d[54] + 2 * d[14] * d[17] * d[21] * d[54] + 2 * d[14] * d[16] * d[22] * d[54] - 2 * d[10] * d[17] * d[22] * d[54] - 4 * d[14] * d[15] * d[23] * d[54] + 2 * d[13] * d[16] * d[23] * d[54] + 2 * d[12] * d[17] * d[23] * d[54] + 2 * d[10] * d[11] * d[24] * d[54] - 2 * std::pow(d[14], 2) * d[24] * d[54] - 2 * d[11] * d[12] * d[25] * d[54] + 2 * d[13] * d[14] * d[25] * d[54] - 2 * d[10] * d[13] * d[26] * d[54] + 2 * d[12] * d[14] * d[26] * d[54] + 2 * d[11] * d[16] * d[18] * d[55] - 2 * d[14] * d[17] * d[18] * d[55] - 2 * d[12] * d[15] * d[20] * d[55] + 2 * d[9] * d[16] * d[20] * d[55] - 2 * d[11] * d[15] * d[21] * d[55] + 2 * d[13] * d[17] * d[21] * d[55] + 2 * d[14] * d[15] * d[22] * d[55] - 4 * d[13] * d[16] * d[22] * d[55] + 2 * d[12] * d[17] * d[22] * d[55] + 2 * d[13] * d[15] * d[23] * d[55] - 2 * d[9] * d[17] * d[23] * d[55] - 2 * d[11] * d[12] * d[24] * d[55] + 2 * d[13] * d[14] * d[24] * d[55] + 2 * d[9] * d[11] * d[25] * d[55] - 2 * std::pow(d[13], 2) * d[25] * d[55] + 2 * d[12] * d[13] * d[26] * d[55] - 2 * d[9] * d[14] * d[26] * d[55] - 2 * d[14] * d[16] * d[18] * d[56] + 2 * d[10] * d[17] * d[18] * d[56] - 2 * d[13] * d[15] * d[19] * d[56] + 2 * d[9] * d[17] * d[19] * d[56] + 2 * d[14] * d[15] * d[21] * d[56] + 2 * d[13] * d[16] * d[21] * d[56] - 4 * d[12] * d[17] * d[21] * d[56] - 2 * d[10] * d[15] * d[22] * d[56] + 2 * d[12] * d[16] * d[22] * d[56] + 2 * d[12] * d[15] * d[23] * d[56] - 2 * d[9] * d[16] * d[23] * d[56] - 2 * d[10] * d[13] * d[24] * d[56] + 2 * d[12] * d[14] * d[24] * d[56] + 2 * d[12] * d[13] * d[25] * d[56] - 2 * d[9] * d[14] * d[25] * d[56] + 2 * d[9] * d[10] * d[26] * d[56] - 2 * std::pow(d[12], 2) * d[26] * d[56] - d[10] * d[11] * d[18] * d[60] + std::pow(d[14], 2) * d[18] * d[60] - d[9] * d[11] * d[19] * d[60] + std::pow(d[13], 2) * d[19] * d[60] - d[9] * d[10] * d[20] * d[60] + std::pow(d[12], 2) * d[20] * d[60] + 2 * d[11] * d[12] * d[21] * d[60] - 2 * d[13] * d[14] * d[21] * d[60] + 2 * d[10] * d[13] * d[22] * d[60] - 2 * d[12] * d[14] * d[22] * d[60] - 2 * d[12] * d[13] * d[23] * d[60] + 2 * d[9] * d[14] * d[23] * d[60];
    coeffs[107] = 2 * d[15] * d[19] * d[20] * d[54] - 2 * d[16] * d[20] * d[21] * d[54] - 2 * d[17] * d[19] * d[22] * d[54] + 2 * d[17] * d[21] * d[23] * d[54] + 2 * d[16] * d[22] * d[23] * d[54] - 2 * d[15] * std::pow(d[23], 2) * d[54] + 2 * d[11] * d[19] * d[24] * d[54] + 2 * d[10] * d[20] * d[24] * d[54] - 4 * d[14] * d[23] * d[24] * d[54] - 2 * d[12] * d[20] * d[25] * d[54] - 2 * d[11] * d[21] * d[25] * d[54] + 2 * d[14] * d[22] * d[25] * d[54] + 2 * d[13] * d[23] * d[25] * d[54] - 2 * d[13] * d[19] * d[26] * d[54] + 2 * d[14] * d[21] * d[26] * d[54] - 2 * d[10] * d[22] * d[26] * d[54] + 2 * d[12] * d[23] * d[26] * d[54] + 2 * d[16] * d[18] * d[20] * d[55] - 2 * d[15] * d[20] * d[21] * d[55] + 2 * d[17] * d[21] * d[22] * d[55] - 2 * d[16] * std::pow(d[22], 2) * d[55] - 2 * d[17] * d[18] * d[23] * d[55] + 2 * d[15] * d[22] * d[23] * d[55] - 2 * d[12] * d[20] * d[24] * d[55] - 2 * d[11] * d[21] * d[24] * d[55] + 2 * d[14] * d[22] * d[24] * d[55] + 2 * d[13] * d[23] * d[24] * d[55] + 2 * d[11] * d[18] * d[25] * d[55] + 2 * d[9] * d[20] * d[25] * d[55] - 4 * d[13] * d[22] * d[25] * d[55] - 2 * d[14] * d[18] * d[26] * d[55] + 2 * d[13] * d[21] * d[26] * d[55] + 2 * d[12] * d[22] * d[26] * d[55] - 2 * d[9] * d[23] * d[26] * d[55] + 2 * d[17] * d[18] * d[19] * d[56] - 2 * d[17] * std::pow(d[21], 2) * d[56] - 2 * d[15] * d[19] * d[22] * d[56] + 2 * d[16] * d[21] * d[22] * d[56] - 2 * d[16] * d[18] * d[23] * d[56] + 2 * d[15] * d[21] * d[23] * d[56] - 2 * d[13] * d[19] * d[24] * d[56] + 2 * d[14] * d[21] * d[24] * d[56] - 2 * d[10] * d[22] * d[24] * d[56] + 2 * d[12] * d[23] * d[24] * d[56] - 2 * d[14] * d[18] * d[25] * d[56] + 2 * d[13] * d[21] * d[25] * d[56] + 2 * d[12] * d[22] * d[25] * d[56] - 2 * d[9] * d[23] * d[25] * d[56] + 2 * d[10] * d[18] * d[26] * d[56] + 2 * d[9] * d[19] * d[26] * d[56] - 4 * d[12] * d[21] * d[26] * d[56] - d[11] * d[18] * d[19] * d[60] - d[10] * d[18] * d[20] * d[60] - d[9] * d[19] * d[20] * d[60] + 2 * d[12] * d[20] * d[21] * d[60] + d[11] * std::pow(d[21], 2) * d[60] + 2 * d[13] * d[19] * d[22] * d[60] - 2 * d[14] * d[21] * d[22] * d[60] + d[10] * std::pow(d[22], 2) * d[60] + 2 * d[14] * d[18] * d[23] * d[60] - 2 * d[13] * d[21] * d[23] * d[60] - 2 * d[12] * d[22] * d[23] * d[60] + d[9] * std::pow(d[23], 2) * d[60];
    coeffs[108] = 2 * d[19] * d[20] * d[24] * d[54] - 2 * std::pow(d[23], 2) * d[24] * d[54] - 2 * d[20] * d[21] * d[25] * d[54] + 2 * d[22] * d[23] * d[25] * d[54] - 2 * d[19] * d[22] * d[26] * d[54] + 2 * d[21] * d[23] * d[26] * d[54] - 2 * d[20] * d[21] * d[24] * d[55] + 2 * d[22] * d[23] * d[24] * d[55] + 2 * d[18] * d[20] * d[25] * d[55] - 2 * std::pow(d[22], 2) * d[25] * d[55] + 2 * d[21] * d[22] * d[26] * d[55] - 2 * d[18] * d[23] * d[26] * d[55] - 2 * d[19] * d[22] * d[24] * d[56] + 2 * d[21] * d[23] * d[24] * d[56] + 2 * d[21] * d[22] * d[25] * d[56] - 2 * d[18] * d[23] * d[25] * d[56] + 2 * d[18] * d[19] * d[26] * d[56] - 2 * std::pow(d[21], 2) * d[26] * d[56] - d[18] * d[19] * d[20] * d[60] + d[20] * std::pow(d[21], 2) * d[60] + d[19] * std::pow(d[22], 2) * d[60] - 2 * d[21] * d[22] * d[23] * d[60] + d[18] * std::pow(d[23], 2) * d[60];
    coeffs[109] = 2 * d[11] * d[15] * d[28] * d[54] - 2 * d[13] * d[17] * d[28] * d[54] + 2 * d[10] * d[15] * d[29] * d[54] - 2 * d[12] * d[16] * d[29] * d[54] - 2 * d[11] * d[16] * d[30] * d[54] + 2 * d[14] * d[17] * d[30] * d[54] + 2 * d[14] * d[16] * d[31] * d[54] - 2 * d[10] * d[17] * d[31] * d[54] - 4 * d[14] * d[15] * d[32] * d[54] + 2 * d[13] * d[16] * d[32] * d[54] + 2 * d[12] * d[17] * d[32] * d[54] + 2 * d[10] * d[11] * d[33] * d[54] - 2 * std::pow(d[14], 2) * d[33] * d[54] - 2 * d[11] * d[12] * d[34] * d[54] + 2 * d[13] * d[14] * d[34] * d[54] - 2 * d[10] * d[13] * d[35] * d[54] + 2 * d[12] * d[14] * d[35] * d[54] + 2 * d[11] * d[16] * d[27] * d[55] - 2 * d[14] * d[17] * d[27] * d[55] - 2 * d[12] * d[15] * d[29] * d[55] + 2 * d[9] * d[16] * d[29] * d[55] - 2 * d[11] * d[15] * d[30] * d[55] + 2 * d[13] * d[17] * d[30] * d[55] + 2 * d[14] * d[15] * d[31] * d[55] - 4 * d[13] * d[16] * d[31] * d[55] + 2 * d[12] * d[17] * d[31] * d[55] + 2 * d[13] * d[15] * d[32] * d[55] - 2 * d[9] * d[17] * d[32] * d[55] - 2 * d[11] * d[12] * d[33] * d[55] + 2 * d[13] * d[14] * d[33] * d[55] + 2 * d[9] * d[11] * d[34] * d[55] - 2 * std::pow(d[13], 2) * d[34] * d[55] + 2 * d[12] * d[13] * d[35] * d[55] - 2 * d[9] * d[14] * d[35] * d[55] - 2 * d[14] * d[16] * d[27] * d[56] + 2 * d[10] * d[17] * d[27] * d[56] - 2 * d[13] * d[15] * d[28] * d[56] + 2 * d[9] * d[17] * d[28] * d[56] + 2 * d[14] * d[15] * d[30] * d[56] + 2 * d[13] * d[16] * d[30] * d[56] - 4 * d[12] * d[17] * d[30] * d[56] - 2 * d[10] * d[15] * d[31] * d[56] + 2 * d[12] * d[16] * d[31] * d[56] + 2 * d[12] * d[15] * d[32] * d[56] - 2 * d[9] * d[16] * d[32] * d[56] - 2 * d[10] * d[13] * d[33] * d[56] + 2 * d[12] * d[14] * d[33] * d[56] + 2 * d[12] * d[13] * d[34] * d[56] - 2 * d[9] * d[14] * d[34] * d[56] + 2 * d[9] * d[10] * d[35] * d[56] - 2 * std::pow(d[12], 2) * d[35] * d[56] - d[10] * d[11] * d[27] * d[60] + std::pow(d[14], 2) * d[27] * d[60] - d[9] * d[11] * d[28] * d[60] + std::pow(d[13], 2) * d[28] * d[60] - d[9] * d[10] * d[29] * d[60] + std::pow(d[12], 2) * d[29] * d[60] + 2 * d[11] * d[12] * d[30] * d[60] - 2 * d[13] * d[14] * d[30] * d[60] + 2 * d[10] * d[13] * d[31] * d[60] - 2 * d[12] * d[14] * d[31] * d[60] - 2 * d[12] * d[13] * d[32] * d[60] + 2 * d[9] * d[14] * d[32] * d[60];
    coeffs[110] = 2 * d[15] * d[20] * d[28] * d[54] - 2 * d[17] * d[22] * d[28] * d[54] + 2 * d[11] * d[24] * d[28] * d[54] - 2 * d[13] * d[26] * d[28] * d[54] + 2 * d[15] * d[19] * d[29] * d[54] - 2 * d[16] * d[21] * d[29] * d[54] + 2 * d[10] * d[24] * d[29] * d[54] - 2 * d[12] * d[25] * d[29] * d[54] - 2 * d[16] * d[20] * d[30] * d[54] + 2 * d[17] * d[23] * d[30] * d[54] - 2 * d[11] * d[25] * d[30] * d[54] + 2 * d[14] * d[26] * d[30] * d[54] - 2 * d[17] * d[19] * d[31] * d[54] + 2 * d[16] * d[23] * d[31] * d[54] + 2 * d[14] * d[25] * d[31] * d[54] - 2 * d[10] * d[26] * d[31] * d[54] + 2 * d[17] * d[21] * d[32] * d[54] + 2 * d[16] * d[22] * d[32] * d[54] - 4 * d[15] * d[23] * d[32] * d[54] - 4 * d[14] * d[24] * d[32] * d[54] + 2 * d[13] * d[25] * d[32] * d[54] + 2 * d[12] * d[26] * d[32] * d[54] + 2 * d[11] * d[19] * d[33] * d[54] + 2 * d[10] * d[20] * d[33] * d[54] - 4 * d[14] * d[23] * d[33] * d[54] - 2 * d[12] * d[20] * d[34] * d[54] - 2 * d[11] * d[21] * d[34] * d[54] + 2 * d[14] * d[22] * d[34] * d[54] + 2 * d[13] * d[23] * d[34] * d[54] - 2 * d[13] * d[19] * d[35] * d[54] + 2 * d[14] * d[21] * d[35] * d[54] - 2 * d[10] * d[22] * d[35] * d[54] + 2 * d[12] * d[23] * d[35] * d[54] + 2 * d[16] * d[20] * d[27] * d[55] - 2 * d[17] * d[23] * d[27] * d[55] + 2 * d[11] * d[25] * d[27] * d[55] - 2 * d[14] * d[26] * d[27] * d[55] + 2 * d[16] * d[18] * d[29] * d[55] - 2 * d[15] * d[21] * d[29] * d[55] - 2 * d[12] * d[24] * d[29] * d[55] + 2 * d[9] * d[25] * d[29] * d[55] - 2 * d[15] * d[20] * d[30] * d[55] + 2 * d[17] * d[22] * d[30] * d[55] - 2 * d[11] * d[24] * d[30] * d[55] + 2 * d[13] * d[26] * d[30] * d[55] + 2 * d[17] * d[21] * d[31] * d[55] - 4 * d[16] * d[22] * d[31] * d[55] + 2 * d[15] * d[23] * d[31] * d[55] + 2 * d[14] * d[24] * d[31] * d[55] - 4 * d[13] * d[25] * d[31] * d[55] + 2 * d[12] * d[26] * d[31] * d[55] - 2 * d[17] * d[18] * d[32] * d[55] + 2 * d[15] * d[22] * d[32] * d[55] + 2 * d[13] * d[24] * d[32] * d[55] - 2 * d[9] * d[26] * d[32] * d[55] - 2 * d[12] * d[20] * d[33] * d[55] - 2 * d[11] * d[21] * d[33] * d[55] + 2 * d[14] * d[22] * d[33] * d[55] + 2 * d[13] * d[23] * d[33] * d[55] + 2 * d[11] * d[18] * d[34] * d[55] + 2 * d[9] * d[20] * d[34] * d[55] - 4 * d[13] * d[22] * d[34] * d[55] - 2 * d[14] * d[18] * d[35] * d[55] + 2 * d[13] * d[21] * d[35] * d[55] + 2 * d[12] * d[22] * d[35] * d[55] - 2 * d[9] * d[23] * d[35] * d[55] + 2 * d[17] * d[19] * d[27] * d[56] - 2 * d[16] * d[23] * d[27] * d[56] - 2 * d[14] * d[25] * d[27] * d[56] + 2 * d[10] * d[26] * d[27] * d[56] + 2 * d[17] * d[18] * d[28] * d[56] - 2 * d[15] * d[22] * d[28] * d[56] - 2 * d[13] * d[24] * d[28] * d[56] + 2 * d[9] * d[26] * d[28] * d[56] - 4 * d[17] * d[21] * d[30] * d[56] + 2 * d[16] * d[22] * d[30] * d[56] + 2 * d[15] * d[23] * d[30] * d[56] + 2 * d[14] * d[24] * d[30] * d[56] + 2 * d[13] * d[25] * d[30] * d[56] - 4 * d[12] * d[26] * d[30] * d[56] - 2 * d[15] * d[19] * d[31] * d[56] + 2 * d[16] * d[21] * d[31] * d[56] - 2 * d[10] * d[24] * d[31] * d[56] + 2 * d[12] * d[25] * d[31] * d[56] - 2 * d[16] * d[18] * d[32] * d[56] + 2 * d[15] * d[21] * d[32] * d[56] + 2 * d[12] * d[24] * d[32] * d[56] - 2 * d[9] * d[25] * d[32] * d[56] - 2 * d[13] * d[19] * d[33] * d[56] + 2 * d[14] * d[21] * d[33] * d[56] - 2 * d[10] * d[22] * d[33] * d[56] + 2 * d[12] * d[23] * d[33] * d[56] - 2 * d[14] * d[18] * d[34] * d[56] + 2 * d[13] * d[21] * d[34] * d[56] + 2 * d[12] * d[22] * d[34] * d[56] - 2 * d[9] * d[23] * d[34] * d[56] + 2 * d[10] * d[18] * d[35] * d[56] + 2 * d[9] * d[19] * d[35] * d[56] - 4 * d[12] * d[21] * d[35] * d[56] - d[11] * d[19] * d[27] * d[60] - d[10] * d[20] * d[27] * d[60] + 2 * d[14] * d[23] * d[27] * d[60] - d[11] * d[18] * d[28] * d[60] - d[9] * d[20] * d[28] * d[60] + 2 * d[13] * d[22] * d[28] * d[60] - d[10] * d[18] * d[29] * d[60] - d[9] * d[19] * d[29] * d[60] + 2 * d[12] * d[21] * d[29] * d[60] + 2 * d[12] * d[20] * d[30] * d[60] + 2 * d[11] * d[21] * d[30] * d[60] - 2 * d[14] * d[22] * d[30] * d[60] - 2 * d[13] * d[23] * d[30] * d[60] + 2 * d[13] * d[19] * d[31] * d[60] - 2 * d[14] * d[21] * d[31] * d[60] + 2 * d[10] * d[22] * d[31] * d[60] - 2 * d[12] * d[23] * d[31] * d[60] + 2 * d[14] * d[18] * d[32] * d[60] - 2 * d[13] * d[21] * d[32] * d[60] - 2 * d[12] * d[22] * d[32] * d[60] + 2 * d[9] * d[23] * d[32] * d[60];
    coeffs[111] = 2 * d[20] * d[24] * d[28] * d[54] - 2 * d[22] * d[26] * d[28] * d[54] + 2 * d[19] * d[24] * d[29] * d[54] - 2 * d[21] * d[25] * d[29] * d[54] - 2 * d[20] * d[25] * d[30] * d[54] + 2 * d[23] * d[26] * d[30] * d[54] + 2 * d[23] * d[25] * d[31] * d[54] - 2 * d[19] * d[26] * d[31] * d[54] - 4 * d[23] * d[24] * d[32] * d[54] + 2 * d[22] * d[25] * d[32] * d[54] + 2 * d[21] * d[26] * d[32] * d[54] + 2 * d[19] * d[20] * d[33] * d[54] - 2 * std::pow(d[23], 2) * d[33] * d[54] - 2 * d[20] * d[21] * d[34] * d[54] + 2 * d[22] * d[23] * d[34] * d[54] - 2 * d[19] * d[22] * d[35] * d[54] + 2 * d[21] * d[23] * d[35] * d[54] + 2 * d[20] * d[25] * d[27] * d[55] - 2 * d[23] * d[26] * d[27] * d[55] - 2 * d[21] * d[24] * d[29] * d[55] + 2 * d[18] * d[25] * d[29] * d[55] - 2 * d[20] * d[24] * d[30] * d[55] + 2 * d[22] * d[26] * d[30] * d[55] + 2 * d[23] * d[24] * d[31] * d[55] - 4 * d[22] * d[25] * d[31] * d[55] + 2 * d[21] * d[26] * d[31] * d[55] + 2 * d[22] * d[24] * d[32] * d[55] - 2 * d[18] * d[26] * d[32] * d[55] - 2 * d[20] * d[21] * d[33] * d[55] + 2 * d[22] * d[23] * d[33] * d[55] + 2 * d[18] * d[20] * d[34] * d[55] - 2 * std::pow(d[22], 2) * d[34] * d[55] + 2 * d[21] * d[22] * d[35] * d[55] - 2 * d[18] * d[23] * d[35] * d[55] - 2 * d[23] * d[25] * d[27] * d[56] + 2 * d[19] * d[26] * d[27] * d[56] - 2 * d[22] * d[24] * d[28] * d[56] + 2 * d[18] * d[26] * d[28] * d[56] + 2 * d[23] * d[24] * d[30] * d[56] + 2 * d[22] * d[25] * d[30] * d[56] - 4 * d[21] * d[26] * d[30] * d[56] - 2 * d[19] * d[24] * d[31] * d[56] + 2 * d[21] * d[25] * d[31] * d[56] + 2 * d[21] * d[24] * d[32] * d[56] - 2 * d[18] * d[25] * d[32] * d[56] - 2 * d[19] * d[22] * d[33] * d[56] + 2 * d[21] * d[23] * d[33] * d[56] + 2 * d[21] * d[22] * d[34] * d[56] - 2 * d[18] * d[23] * d[34] * d[56] + 2 * d[18] * d[19] * d[35] * d[56] - 2 * std::pow(d[21], 2) * d[35] * d[56] - d[19] * d[20] * d[27] * d[60] + std::pow(d[23], 2) * d[27] * d[60] - d[18] * d[20] * d[28] * d[60] + std::pow(d[22], 2) * d[28] * d[60] - d[18] * d[19] * d[29] * d[60] + std::pow(d[21], 2) * d[29] * d[60] + 2 * d[20] * d[21] * d[30] * d[60] - 2 * d[22] * d[23] * d[30] * d[60] + 2 * d[19] * d[22] * d[31] * d[60] - 2 * d[21] * d[23] * d[31] * d[60] - 2 * d[21] * d[22] * d[32] * d[60] + 2 * d[18] * d[23] * d[32] * d[60];
    coeffs[112] = 2 * d[15] * d[28] * d[29] * d[54] - 2 * d[16] * d[29] * d[30] * d[54] - 2 * d[17] * d[28] * d[31] * d[54] + 2 * d[17] * d[30] * d[32] * d[54] + 2 * d[16] * d[31] * d[32] * d[54] - 2 * d[15] * std::pow(d[32], 2) * d[54] + 2 * d[11] * d[28] * d[33] * d[54] + 2 * d[10] * d[29] * d[33] * d[54] - 4 * d[14] * d[32] * d[33] * d[54] - 2 * d[12] * d[29] * d[34] * d[54] - 2 * d[11] * d[30] * d[34] * d[54] + 2 * d[14] * d[31] * d[34] * d[54] + 2 * d[13] * d[32] * d[34] * d[54] - 2 * d[13] * d[28] * d[35] * d[54] + 2 * d[14] * d[30] * d[35] * d[54] - 2 * d[10] * d[31] * d[35] * d[54] + 2 * d[12] * d[32] * d[35] * d[54] + 2 * d[16] * d[27] * d[29] * d[55] - 2 * d[15] * d[29] * d[30] * d[55] + 2 * d[17] * d[30] * d[31] * d[55] - 2 * d[16] * std::pow(d[31], 2) * d[55] - 2 * d[17] * d[27] * d[32] * d[55] + 2 * d[15] * d[31] * d[32] * d[55] - 2 * d[12] * d[29] * d[33] * d[55] - 2 * d[11] * d[30] * d[33] * d[55] + 2 * d[14] * d[31] * d[33] * d[55] + 2 * d[13] * d[32] * d[33] * d[55] + 2 * d[11] * d[27] * d[34] * d[55] + 2 * d[9] * d[29] * d[34] * d[55] - 4 * d[13] * d[31] * d[34] * d[55] - 2 * d[14] * d[27] * d[35] * d[55] + 2 * d[13] * d[30] * d[35] * d[55] + 2 * d[12] * d[31] * d[35] * d[55] - 2 * d[9] * d[32] * d[35] * d[55] + 2 * d[17] * d[27] * d[28] * d[56] - 2 * d[17] * std::pow(d[30], 2) * d[56] - 2 * d[15] * d[28] * d[31] * d[56] + 2 * d[16] * d[30] * d[31] * d[56] - 2 * d[16] * d[27] * d[32] * d[56] + 2 * d[15] * d[30] * d[32] * d[56] - 2 * d[13] * d[28] * d[33] * d[56] + 2 * d[14] * d[30] * d[33] * d[56] - 2 * d[10] * d[31] * d[33] * d[56] + 2 * d[12] * d[32] * d[33] * d[56] - 2 * d[14] * d[27] * d[34] * d[56] + 2 * d[13] * d[30] * d[34] * d[56] + 2 * d[12] * d[31] * d[34] * d[56] - 2 * d[9] * d[32] * d[34] * d[56] + 2 * d[10] * d[27] * d[35] * d[56] + 2 * d[9] * d[28] * d[35] * d[56] - 4 * d[12] * d[30] * d[35] * d[56] - d[11] * d[27] * d[28] * d[60] - d[10] * d[27] * d[29] * d[60] - d[9] * d[28] * d[29] * d[60] + 2 * d[12] * d[29] * d[30] * d[60] + d[11] * std::pow(d[30], 2) * d[60] + 2 * d[13] * d[28] * d[31] * d[60] - 2 * d[14] * d[30] * d[31] * d[60] + d[10] * std::pow(d[31], 2) * d[60] + 2 * d[14] * d[27] * d[32] * d[60] - 2 * d[13] * d[30] * d[32] * d[60] - 2 * d[12] * d[31] * d[32] * d[60] + d[9] * std::pow(d[32], 2) * d[60];
    coeffs[113] = 2 * d[24] * d[28] * d[29] * d[54] - 2 * d[25] * d[29] * d[30] * d[54] - 2 * d[26] * d[28] * d[31] * d[54] + 2 * d[26] * d[30] * d[32] * d[54] + 2 * d[25] * d[31] * d[32] * d[54] - 2 * d[24] * std::pow(d[32], 2) * d[54] + 2 * d[20] * d[28] * d[33] * d[54] + 2 * d[19] * d[29] * d[33] * d[54] - 4 * d[23] * d[32] * d[33] * d[54] - 2 * d[21] * d[29] * d[34] * d[54] - 2 * d[20] * d[30] * d[34] * d[54] + 2 * d[23] * d[31] * d[34] * d[54] + 2 * d[22] * d[32] * d[34] * d[54] - 2 * d[22] * d[28] * d[35] * d[54] + 2 * d[23] * d[30] * d[35] * d[54] - 2 * d[19] * d[31] * d[35] * d[54] + 2 * d[21] * d[32] * d[35] * d[54] + 2 * d[25] * d[27] * d[29] * d[55] - 2 * d[24] * d[29] * d[30] * d[55] + 2 * d[26] * d[30] * d[31] * d[55] - 2 * d[25] * std::pow(d[31], 2) * d[55] - 2 * d[26] * d[27] * d[32] * d[55] + 2 * d[24] * d[31] * d[32] * d[55] - 2 * d[21] * d[29] * d[33] * d[55] - 2 * d[20] * d[30] * d[33] * d[55] + 2 * d[23] * d[31] * d[33] * d[55] + 2 * d[22] * d[32] * d[33] * d[55] + 2 * d[20] * d[27] * d[34] * d[55] + 2 * d[18] * d[29] * d[34] * d[55] - 4 * d[22] * d[31] * d[34] * d[55] - 2 * d[23] * d[27] * d[35] * d[55] + 2 * d[22] * d[30] * d[35] * d[55] + 2 * d[21] * d[31] * d[35] * d[55] - 2 * d[18] * d[32] * d[35] * d[55] + 2 * d[26] * d[27] * d[28] * d[56] - 2 * d[26] * std::pow(d[30], 2) * d[56] - 2 * d[24] * d[28] * d[31] * d[56] + 2 * d[25] * d[30] * d[31] * d[56] - 2 * d[25] * d[27] * d[32] * d[56] + 2 * d[24] * d[30] * d[32] * d[56] - 2 * d[22] * d[28] * d[33] * d[56] + 2 * d[23] * d[30] * d[33] * d[56] - 2 * d[19] * d[31] * d[33] * d[56] + 2 * d[21] * d[32] * d[33] * d[56] - 2 * d[23] * d[27] * d[34] * d[56] + 2 * d[22] * d[30] * d[34] * d[56] + 2 * d[21] * d[31] * d[34] * d[56] - 2 * d[18] * d[32] * d[34] * d[56] + 2 * d[19] * d[27] * d[35] * d[56] + 2 * d[18] * d[28] * d[35] * d[56] - 4 * d[21] * d[30] * d[35] * d[56] - d[20] * d[27] * d[28] * d[60] - d[19] * d[27] * d[29] * d[60] - d[18] * d[28] * d[29] * d[60] + 2 * d[21] * d[29] * d[30] * d[60] + d[20] * std::pow(d[30], 2) * d[60] + 2 * d[22] * d[28] * d[31] * d[60] - 2 * d[23] * d[30] * d[31] * d[60] + d[19] * std::pow(d[31], 2) * d[60] + 2 * d[23] * d[27] * d[32] * d[60] - 2 * d[22] * d[30] * d[32] * d[60] - 2 * d[21] * d[31] * d[32] * d[60] + d[18] * std::pow(d[32], 2) * d[60];
    coeffs[114] = 2 * d[28] * d[29] * d[33] * d[54] - 2 * std::pow(d[32], 2) * d[33] * d[54] - 2 * d[29] * d[30] * d[34] * d[54] + 2 * d[31] * d[32] * d[34] * d[54] - 2 * d[28] * d[31] * d[35] * d[54] + 2 * d[30] * d[32] * d[35] * d[54] - 2 * d[29] * d[30] * d[33] * d[55] + 2 * d[31] * d[32] * d[33] * d[55] + 2 * d[27] * d[29] * d[34] * d[55] - 2 * std::pow(d[31], 2) * d[34] * d[55] + 2 * d[30] * d[31] * d[35] * d[55] - 2 * d[27] * d[32] * d[35] * d[55] - 2 * d[28] * d[31] * d[33] * d[56] + 2 * d[30] * d[32] * d[33] * d[56] + 2 * d[30] * d[31] * d[34] * d[56] - 2 * d[27] * d[32] * d[34] * d[56] + 2 * d[27] * d[28] * d[35] * d[56] - 2 * std::pow(d[30], 2) * d[35] * d[56] - d[27] * d[28] * d[29] * d[60] + d[29] * std::pow(d[30], 2) * d[60] + d[28] * std::pow(d[31], 2) * d[60] - 2 * d[30] * d[31] * d[32] * d[60] + d[27] * std::pow(d[32], 2) * d[60];
    coeffs[115] = 2 * d[11] * d[15] * d[37] * d[54] - 2 * d[13] * d[17] * d[37] * d[54] + 2 * d[10] * d[15] * d[38] * d[54] - 2 * d[12] * d[16] * d[38] * d[54] - 2 * d[11] * d[16] * d[39] * d[54] + 2 * d[14] * d[17] * d[39] * d[54] + 2 * d[14] * d[16] * d[40] * d[54] - 2 * d[10] * d[17] * d[40] * d[54] - 4 * d[14] * d[15] * d[41] * d[54] + 2 * d[13] * d[16] * d[41] * d[54] + 2 * d[12] * d[17] * d[41] * d[54] + 2 * d[10] * d[11] * d[42] * d[54] - 2 * std::pow(d[14], 2) * d[42] * d[54] - 2 * d[11] * d[12] * d[43] * d[54] + 2 * d[13] * d[14] * d[43] * d[54] - 2 * d[10] * d[13] * d[44] * d[54] + 2 * d[12] * d[14] * d[44] * d[54] + 2 * d[11] * d[16] * d[36] * d[55] - 2 * d[14] * d[17] * d[36] * d[55] - 2 * d[12] * d[15] * d[38] * d[55] + 2 * d[9] * d[16] * d[38] * d[55] - 2 * d[11] * d[15] * d[39] * d[55] + 2 * d[13] * d[17] * d[39] * d[55] + 2 * d[14] * d[15] * d[40] * d[55] - 4 * d[13] * d[16] * d[40] * d[55] + 2 * d[12] * d[17] * d[40] * d[55] + 2 * d[13] * d[15] * d[41] * d[55] - 2 * d[9] * d[17] * d[41] * d[55] - 2 * d[11] * d[12] * d[42] * d[55] + 2 * d[13] * d[14] * d[42] * d[55] + 2 * d[9] * d[11] * d[43] * d[55] - 2 * std::pow(d[13], 2) * d[43] * d[55] + 2 * d[12] * d[13] * d[44] * d[55] - 2 * d[9] * d[14] * d[44] * d[55] - 2 * d[14] * d[16] * d[36] * d[56] + 2 * d[10] * d[17] * d[36] * d[56] - 2 * d[13] * d[15] * d[37] * d[56] + 2 * d[9] * d[17] * d[37] * d[56] + 2 * d[14] * d[15] * d[39] * d[56] + 2 * d[13] * d[16] * d[39] * d[56] - 4 * d[12] * d[17] * d[39] * d[56] - 2 * d[10] * d[15] * d[40] * d[56] + 2 * d[12] * d[16] * d[40] * d[56] + 2 * d[12] * d[15] * d[41] * d[56] - 2 * d[9] * d[16] * d[41] * d[56] - 2 * d[10] * d[13] * d[42] * d[56] + 2 * d[12] * d[14] * d[42] * d[56] + 2 * d[12] * d[13] * d[43] * d[56] - 2 * d[9] * d[14] * d[43] * d[56] + 2 * d[9] * d[10] * d[44] * d[56] - 2 * std::pow(d[12], 2) * d[44] * d[56] - d[10] * d[11] * d[36] * d[60] + std::pow(d[14], 2) * d[36] * d[60] - d[9] * d[11] * d[37] * d[60] + std::pow(d[13], 2) * d[37] * d[60] - d[9] * d[10] * d[38] * d[60] + std::pow(d[12], 2) * d[38] * d[60] + 2 * d[11] * d[12] * d[39] * d[60] - 2 * d[13] * d[14] * d[39] * d[60] + 2 * d[10] * d[13] * d[40] * d[60] - 2 * d[12] * d[14] * d[40] * d[60] - 2 * d[12] * d[13] * d[41] * d[60] + 2 * d[9] * d[14] * d[41] * d[60];
    coeffs[116] = 2 * d[15] * d[20] * d[37] * d[54] - 2 * d[17] * d[22] * d[37] * d[54] + 2 * d[11] * d[24] * d[37] * d[54] - 2 * d[13] * d[26] * d[37] * d[54] + 2 * d[15] * d[19] * d[38] * d[54] - 2 * d[16] * d[21] * d[38] * d[54] + 2 * d[10] * d[24] * d[38] * d[54] - 2 * d[12] * d[25] * d[38] * d[54] - 2 * d[16] * d[20] * d[39] * d[54] + 2 * d[17] * d[23] * d[39] * d[54] - 2 * d[11] * d[25] * d[39] * d[54] + 2 * d[14] * d[26] * d[39] * d[54] - 2 * d[17] * d[19] * d[40] * d[54] + 2 * d[16] * d[23] * d[40] * d[54] + 2 * d[14] * d[25] * d[40] * d[54] - 2 * d[10] * d[26] * d[40] * d[54] + 2 * d[17] * d[21] * d[41] * d[54] + 2 * d[16] * d[22] * d[41] * d[54] - 4 * d[15] * d[23] * d[41] * d[54] - 4 * d[14] * d[24] * d[41] * d[54] + 2 * d[13] * d[25] * d[41] * d[54] + 2 * d[12] * d[26] * d[41] * d[54] + 2 * d[11] * d[19] * d[42] * d[54] + 2 * d[10] * d[20] * d[42] * d[54] - 4 * d[14] * d[23] * d[42] * d[54] - 2 * d[12] * d[20] * d[43] * d[54] - 2 * d[11] * d[21] * d[43] * d[54] + 2 * d[14] * d[22] * d[43] * d[54] + 2 * d[13] * d[23] * d[43] * d[54] - 2 * d[13] * d[19] * d[44] * d[54] + 2 * d[14] * d[21] * d[44] * d[54] - 2 * d[10] * d[22] * d[44] * d[54] + 2 * d[12] * d[23] * d[44] * d[54] + 2 * d[16] * d[20] * d[36] * d[55] - 2 * d[17] * d[23] * d[36] * d[55] + 2 * d[11] * d[25] * d[36] * d[55] - 2 * d[14] * d[26] * d[36] * d[55] + 2 * d[16] * d[18] * d[38] * d[55] - 2 * d[15] * d[21] * d[38] * d[55] - 2 * d[12] * d[24] * d[38] * d[55] + 2 * d[9] * d[25] * d[38] * d[55] - 2 * d[15] * d[20] * d[39] * d[55] + 2 * d[17] * d[22] * d[39] * d[55] - 2 * d[11] * d[24] * d[39] * d[55] + 2 * d[13] * d[26] * d[39] * d[55] + 2 * d[17] * d[21] * d[40] * d[55] - 4 * d[16] * d[22] * d[40] * d[55] + 2 * d[15] * d[23] * d[40] * d[55] + 2 * d[14] * d[24] * d[40] * d[55] - 4 * d[13] * d[25] * d[40] * d[55] + 2 * d[12] * d[26] * d[40] * d[55] - 2 * d[17] * d[18] * d[41] * d[55] + 2 * d[15] * d[22] * d[41] * d[55] + 2 * d[13] * d[24] * d[41] * d[55] - 2 * d[9] * d[26] * d[41] * d[55] - 2 * d[12] * d[20] * d[42] * d[55] - 2 * d[11] * d[21] * d[42] * d[55] + 2 * d[14] * d[22] * d[42] * d[55] + 2 * d[13] * d[23] * d[42] * d[55] + 2 * d[11] * d[18] * d[43] * d[55] + 2 * d[9] * d[20] * d[43] * d[55] - 4 * d[13] * d[22] * d[43] * d[55] - 2 * d[14] * d[18] * d[44] * d[55] + 2 * d[13] * d[21] * d[44] * d[55] + 2 * d[12] * d[22] * d[44] * d[55] - 2 * d[9] * d[23] * d[44] * d[55] + 2 * d[17] * d[19] * d[36] * d[56] - 2 * d[16] * d[23] * d[36] * d[56] - 2 * d[14] * d[25] * d[36] * d[56] + 2 * d[10] * d[26] * d[36] * d[56] + 2 * d[17] * d[18] * d[37] * d[56] - 2 * d[15] * d[22] * d[37] * d[56] - 2 * d[13] * d[24] * d[37] * d[56] + 2 * d[9] * d[26] * d[37] * d[56] - 4 * d[17] * d[21] * d[39] * d[56] + 2 * d[16] * d[22] * d[39] * d[56] + 2 * d[15] * d[23] * d[39] * d[56] + 2 * d[14] * d[24] * d[39] * d[56] + 2 * d[13] * d[25] * d[39] * d[56] - 4 * d[12] * d[26] * d[39] * d[56] - 2 * d[15] * d[19] * d[40] * d[56] + 2 * d[16] * d[21] * d[40] * d[56] - 2 * d[10] * d[24] * d[40] * d[56] + 2 * d[12] * d[25] * d[40] * d[56] - 2 * d[16] * d[18] * d[41] * d[56] + 2 * d[15] * d[21] * d[41] * d[56] + 2 * d[12] * d[24] * d[41] * d[56] - 2 * d[9] * d[25] * d[41] * d[56] - 2 * d[13] * d[19] * d[42] * d[56] + 2 * d[14] * d[21] * d[42] * d[56] - 2 * d[10] * d[22] * d[42] * d[56] + 2 * d[12] * d[23] * d[42] * d[56] - 2 * d[14] * d[18] * d[43] * d[56] + 2 * d[13] * d[21] * d[43] * d[56] + 2 * d[12] * d[22] * d[43] * d[56] - 2 * d[9] * d[23] * d[43] * d[56] + 2 * d[10] * d[18] * d[44] * d[56] + 2 * d[9] * d[19] * d[44] * d[56] - 4 * d[12] * d[21] * d[44] * d[56] - d[11] * d[19] * d[36] * d[60] - d[10] * d[20] * d[36] * d[60] + 2 * d[14] * d[23] * d[36] * d[60] - d[11] * d[18] * d[37] * d[60] - d[9] * d[20] * d[37] * d[60] + 2 * d[13] * d[22] * d[37] * d[60] - d[10] * d[18] * d[38] * d[60] - d[9] * d[19] * d[38] * d[60] + 2 * d[12] * d[21] * d[38] * d[60] + 2 * d[12] * d[20] * d[39] * d[60] + 2 * d[11] * d[21] * d[39] * d[60] - 2 * d[14] * d[22] * d[39] * d[60] - 2 * d[13] * d[23] * d[39] * d[60] + 2 * d[13] * d[19] * d[40] * d[60] - 2 * d[14] * d[21] * d[40] * d[60] + 2 * d[10] * d[22] * d[40] * d[60] - 2 * d[12] * d[23] * d[40] * d[60] + 2 * d[14] * d[18] * d[41] * d[60] - 2 * d[13] * d[21] * d[41] * d[60] - 2 * d[12] * d[22] * d[41] * d[60] + 2 * d[9] * d[23] * d[41] * d[60];
    coeffs[117] = 2 * d[20] * d[24] * d[37] * d[54] - 2 * d[22] * d[26] * d[37] * d[54] + 2 * d[19] * d[24] * d[38] * d[54] - 2 * d[21] * d[25] * d[38] * d[54] - 2 * d[20] * d[25] * d[39] * d[54] + 2 * d[23] * d[26] * d[39] * d[54] + 2 * d[23] * d[25] * d[40] * d[54] - 2 * d[19] * d[26] * d[40] * d[54] - 4 * d[23] * d[24] * d[41] * d[54] + 2 * d[22] * d[25] * d[41] * d[54] + 2 * d[21] * d[26] * d[41] * d[54] + 2 * d[19] * d[20] * d[42] * d[54] - 2 * std::pow(d[23], 2) * d[42] * d[54] - 2 * d[20] * d[21] * d[43] * d[54] + 2 * d[22] * d[23] * d[43] * d[54] - 2 * d[19] * d[22] * d[44] * d[54] + 2 * d[21] * d[23] * d[44] * d[54] + 2 * d[20] * d[25] * d[36] * d[55] - 2 * d[23] * d[26] * d[36] * d[55] - 2 * d[21] * d[24] * d[38] * d[55] + 2 * d[18] * d[25] * d[38] * d[55] - 2 * d[20] * d[24] * d[39] * d[55] + 2 * d[22] * d[26] * d[39] * d[55] + 2 * d[23] * d[24] * d[40] * d[55] - 4 * d[22] * d[25] * d[40] * d[55] + 2 * d[21] * d[26] * d[40] * d[55] + 2 * d[22] * d[24] * d[41] * d[55] - 2 * d[18] * d[26] * d[41] * d[55] - 2 * d[20] * d[21] * d[42] * d[55] + 2 * d[22] * d[23] * d[42] * d[55] + 2 * d[18] * d[20] * d[43] * d[55] - 2 * std::pow(d[22], 2) * d[43] * d[55] + 2 * d[21] * d[22] * d[44] * d[55] - 2 * d[18] * d[23] * d[44] * d[55] - 2 * d[23] * d[25] * d[36] * d[56] + 2 * d[19] * d[26] * d[36] * d[56] - 2 * d[22] * d[24] * d[37] * d[56] + 2 * d[18] * d[26] * d[37] * d[56] + 2 * d[23] * d[24] * d[39] * d[56] + 2 * d[22] * d[25] * d[39] * d[56] - 4 * d[21] * d[26] * d[39] * d[56] - 2 * d[19] * d[24] * d[40] * d[56] + 2 * d[21] * d[25] * d[40] * d[56] + 2 * d[21] * d[24] * d[41] * d[56] - 2 * d[18] * d[25] * d[41] * d[56] - 2 * d[19] * d[22] * d[42] * d[56] + 2 * d[21] * d[23] * d[42] * d[56] + 2 * d[21] * d[22] * d[43] * d[56] - 2 * d[18] * d[23] * d[43] * d[56] + 2 * d[18] * d[19] * d[44] * d[56] - 2 * std::pow(d[21], 2) * d[44] * d[56] - d[19] * d[20] * d[36] * d[60] + std::pow(d[23], 2) * d[36] * d[60] - d[18] * d[20] * d[37] * d[60] + std::pow(d[22], 2) * d[37] * d[60] - d[18] * d[19] * d[38] * d[60] + std::pow(d[21], 2) * d[38] * d[60] + 2 * d[20] * d[21] * d[39] * d[60] - 2 * d[22] * d[23] * d[39] * d[60] + 2 * d[19] * d[22] * d[40] * d[60] - 2 * d[21] * d[23] * d[40] * d[60] - 2 * d[21] * d[22] * d[41] * d[60] + 2 * d[18] * d[23] * d[41] * d[60];
    coeffs[118] = 2 * d[15] * d[29] * d[37] * d[54] - 2 * d[17] * d[31] * d[37] * d[54] + 2 * d[11] * d[33] * d[37] * d[54] - 2 * d[13] * d[35] * d[37] * d[54] + 2 * d[15] * d[28] * d[38] * d[54] - 2 * d[16] * d[30] * d[38] * d[54] + 2 * d[10] * d[33] * d[38] * d[54] - 2 * d[12] * d[34] * d[38] * d[54] - 2 * d[16] * d[29] * d[39] * d[54] + 2 * d[17] * d[32] * d[39] * d[54] - 2 * d[11] * d[34] * d[39] * d[54] + 2 * d[14] * d[35] * d[39] * d[54] - 2 * d[17] * d[28] * d[40] * d[54] + 2 * d[16] * d[32] * d[40] * d[54] + 2 * d[14] * d[34] * d[40] * d[54] - 2 * d[10] * d[35] * d[40] * d[54] + 2 * d[17] * d[30] * d[41] * d[54] + 2 * d[16] * d[31] * d[41] * d[54] - 4 * d[15] * d[32] * d[41] * d[54] - 4 * d[14] * d[33] * d[41] * d[54] + 2 * d[13] * d[34] * d[41] * d[54] + 2 * d[12] * d[35] * d[41] * d[54] + 2 * d[11] * d[28] * d[42] * d[54] + 2 * d[10] * d[29] * d[42] * d[54] - 4 * d[14] * d[32] * d[42] * d[54] - 2 * d[12] * d[29] * d[43] * d[54] - 2 * d[11] * d[30] * d[43] * d[54] + 2 * d[14] * d[31] * d[43] * d[54] + 2 * d[13] * d[32] * d[43] * d[54] - 2 * d[13] * d[28] * d[44] * d[54] + 2 * d[14] * d[30] * d[44] * d[54] - 2 * d[10] * d[31] * d[44] * d[54] + 2 * d[12] * d[32] * d[44] * d[54] + 2 * d[16] * d[29] * d[36] * d[55] - 2 * d[17] * d[32] * d[36] * d[55] + 2 * d[11] * d[34] * d[36] * d[55] - 2 * d[14] * d[35] * d[36] * d[55] + 2 * d[16] * d[27] * d[38] * d[55] - 2 * d[15] * d[30] * d[38] * d[55] - 2 * d[12] * d[33] * d[38] * d[55] + 2 * d[9] * d[34] * d[38] * d[55] - 2 * d[15] * d[29] * d[39] * d[55] + 2 * d[17] * d[31] * d[39] * d[55] - 2 * d[11] * d[33] * d[39] * d[55] + 2 * d[13] * d[35] * d[39] * d[55] + 2 * d[17] * d[30] * d[40] * d[55] - 4 * d[16] * d[31] * d[40] * d[55] + 2 * d[15] * d[32] * d[40] * d[55] + 2 * d[14] * d[33] * d[40] * d[55] - 4 * d[13] * d[34] * d[40] * d[55] + 2 * d[12] * d[35] * d[40] * d[55] - 2 * d[17] * d[27] * d[41] * d[55] + 2 * d[15] * d[31] * d[41] * d[55] + 2 * d[13] * d[33] * d[41] * d[55] - 2 * d[9] * d[35] * d[41] * d[55] - 2 * d[12] * d[29] * d[42] * d[55] - 2 * d[11] * d[30] * d[42] * d[55] + 2 * d[14] * d[31] * d[42] * d[55] + 2 * d[13] * d[32] * d[42] * d[55] + 2 * d[11] * d[27] * d[43] * d[55] + 2 * d[9] * d[29] * d[43] * d[55] - 4 * d[13] * d[31] * d[43] * d[55] - 2 * d[14] * d[27] * d[44] * d[55] + 2 * d[13] * d[30] * d[44] * d[55] + 2 * d[12] * d[31] * d[44] * d[55] - 2 * d[9] * d[32] * d[44] * d[55] + 2 * d[17] * d[28] * d[36] * d[56] - 2 * d[16] * d[32] * d[36] * d[56] - 2 * d[14] * d[34] * d[36] * d[56] + 2 * d[10] * d[35] * d[36] * d[56] + 2 * d[17] * d[27] * d[37] * d[56] - 2 * d[15] * d[31] * d[37] * d[56] - 2 * d[13] * d[33] * d[37] * d[56] + 2 * d[9] * d[35] * d[37] * d[56] - 4 * d[17] * d[30] * d[39] * d[56] + 2 * d[16] * d[31] * d[39] * d[56] + 2 * d[15] * d[32] * d[39] * d[56] + 2 * d[14] * d[33] * d[39] * d[56] + 2 * d[13] * d[34] * d[39] * d[56] - 4 * d[12] * d[35] * d[39] * d[56] - 2 * d[15] * d[28] * d[40] * d[56] + 2 * d[16] * d[30] * d[40] * d[56] - 2 * d[10] * d[33] * d[40] * d[56] + 2 * d[12] * d[34] * d[40] * d[56] - 2 * d[16] * d[27] * d[41] * d[56] + 2 * d[15] * d[30] * d[41] * d[56] + 2 * d[12] * d[33] * d[41] * d[56] - 2 * d[9] * d[34] * d[41] * d[56] - 2 * d[13] * d[28] * d[42] * d[56] + 2 * d[14] * d[30] * d[42] * d[56] - 2 * d[10] * d[31] * d[42] * d[56] + 2 * d[12] * d[32] * d[42] * d[56] - 2 * d[14] * d[27] * d[43] * d[56] + 2 * d[13] * d[30] * d[43] * d[56] + 2 * d[12] * d[31] * d[43] * d[56] - 2 * d[9] * d[32] * d[43] * d[56] + 2 * d[10] * d[27] * d[44] * d[56] + 2 * d[9] * d[28] * d[44] * d[56] - 4 * d[12] * d[30] * d[44] * d[56] - d[11] * d[28] * d[36] * d[60] - d[10] * d[29] * d[36] * d[60] + 2 * d[14] * d[32] * d[36] * d[60] - d[11] * d[27] * d[37] * d[60] - d[9] * d[29] * d[37] * d[60] + 2 * d[13] * d[31] * d[37] * d[60] - d[10] * d[27] * d[38] * d[60] - d[9] * d[28] * d[38] * d[60] + 2 * d[12] * d[30] * d[38] * d[60] + 2 * d[12] * d[29] * d[39] * d[60] + 2 * d[11] * d[30] * d[39] * d[60] - 2 * d[14] * d[31] * d[39] * d[60] - 2 * d[13] * d[32] * d[39] * d[60] + 2 * d[13] * d[28] * d[40] * d[60] - 2 * d[14] * d[30] * d[40] * d[60] + 2 * d[10] * d[31] * d[40] * d[60] - 2 * d[12] * d[32] * d[40] * d[60] + 2 * d[14] * d[27] * d[41] * d[60] - 2 * d[13] * d[30] * d[41] * d[60] - 2 * d[12] * d[31] * d[41] * d[60] + 2 * d[9] * d[32] * d[41] * d[60];
    coeffs[119] = 2 * d[24] * d[29] * d[37] * d[54] - 2 * d[26] * d[31] * d[37] * d[54] + 2 * d[20] * d[33] * d[37] * d[54] - 2 * d[22] * d[35] * d[37] * d[54] + 2 * d[24] * d[28] * d[38] * d[54] - 2 * d[25] * d[30] * d[38] * d[54] + 2 * d[19] * d[33] * d[38] * d[54] - 2 * d[21] * d[34] * d[38] * d[54] - 2 * d[25] * d[29] * d[39] * d[54] + 2 * d[26] * d[32] * d[39] * d[54] - 2 * d[20] * d[34] * d[39] * d[54] + 2 * d[23] * d[35] * d[39] * d[54] - 2 * d[26] * d[28] * d[40] * d[54] + 2 * d[25] * d[32] * d[40] * d[54] + 2 * d[23] * d[34] * d[40] * d[54] - 2 * d[19] * d[35] * d[40] * d[54] + 2 * d[26] * d[30] * d[41] * d[54] + 2 * d[25] * d[31] * d[41] * d[54] - 4 * d[24] * d[32] * d[41] * d[54] - 4 * d[23] * d[33] * d[41] * d[54] + 2 * d[22] * d[34] * d[41] * d[54] + 2 * d[21] * d[35] * d[41] * d[54] + 2 * d[20] * d[28] * d[42] * d[54] + 2 * d[19] * d[29] * d[42] * d[54] - 4 * d[23] * d[32] * d[42] * d[54] - 2 * d[21] * d[29] * d[43] * d[54] - 2 * d[20] * d[30] * d[43] * d[54] + 2 * d[23] * d[31] * d[43] * d[54] + 2 * d[22] * d[32] * d[43] * d[54] - 2 * d[22] * d[28] * d[44] * d[54] + 2 * d[23] * d[30] * d[44] * d[54] - 2 * d[19] * d[31] * d[44] * d[54] + 2 * d[21] * d[32] * d[44] * d[54] + 2 * d[25] * d[29] * d[36] * d[55] - 2 * d[26] * d[32] * d[36] * d[55] + 2 * d[20] * d[34] * d[36] * d[55] - 2 * d[23] * d[35] * d[36] * d[55] + 2 * d[25] * d[27] * d[38] * d[55] - 2 * d[24] * d[30] * d[38] * d[55] - 2 * d[21] * d[33] * d[38] * d[55] + 2 * d[18] * d[34] * d[38] * d[55] - 2 * d[24] * d[29] * d[39] * d[55] + 2 * d[26] * d[31] * d[39] * d[55] - 2 * d[20] * d[33] * d[39] * d[55] + 2 * d[22] * d[35] * d[39] * d[55] + 2 * d[26] * d[30] * d[40] * d[55] - 4 * d[25] * d[31] * d[40] * d[55] + 2 * d[24] * d[32] * d[40] * d[55] + 2 * d[23] * d[33] * d[40] * d[55] - 4 * d[22] * d[34] * d[40] * d[55] + 2 * d[21] * d[35] * d[40] * d[55] - 2 * d[26] * d[27] * d[41] * d[55] + 2 * d[24] * d[31] * d[41] * d[55] + 2 * d[22] * d[33] * d[41] * d[55] - 2 * d[18] * d[35] * d[41] * d[55] - 2 * d[21] * d[29] * d[42] * d[55] - 2 * d[20] * d[30] * d[42] * d[55] + 2 * d[23] * d[31] * d[42] * d[55] + 2 * d[22] * d[32] * d[42] * d[55] + 2 * d[20] * d[27] * d[43] * d[55] + 2 * d[18] * d[29] * d[43] * d[55] - 4 * d[22] * d[31] * d[43] * d[55] - 2 * d[23] * d[27] * d[44] * d[55] + 2 * d[22] * d[30] * d[44] * d[55] + 2 * d[21] * d[31] * d[44] * d[55] - 2 * d[18] * d[32] * d[44] * d[55] + 2 * d[26] * d[28] * d[36] * d[56] - 2 * d[25] * d[32] * d[36] * d[56] - 2 * d[23] * d[34] * d[36] * d[56] + 2 * d[19] * d[35] * d[36] * d[56] + 2 * d[26] * d[27] * d[37] * d[56] - 2 * d[24] * d[31] * d[37] * d[56] - 2 * d[22] * d[33] * d[37] * d[56] + 2 * d[18] * d[35] * d[37] * d[56] - 4 * d[26] * d[30] * d[39] * d[56] + 2 * d[25] * d[31] * d[39] * d[56] + 2 * d[24] * d[32] * d[39] * d[56] + 2 * d[23] * d[33] * d[39] * d[56] + 2 * d[22] * d[34] * d[39] * d[56] - 4 * d[21] * d[35] * d[39] * d[56] - 2 * d[24] * d[28] * d[40] * d[56] + 2 * d[25] * d[30] * d[40] * d[56] - 2 * d[19] * d[33] * d[40] * d[56] + 2 * d[21] * d[34] * d[40] * d[56] - 2 * d[25] * d[27] * d[41] * d[56] + 2 * d[24] * d[30] * d[41] * d[56] + 2 * d[21] * d[33] * d[41] * d[56] - 2 * d[18] * d[34] * d[41] * d[56] - 2 * d[22] * d[28] * d[42] * d[56] + 2 * d[23] * d[30] * d[42] * d[56] - 2 * d[19] * d[31] * d[42] * d[56] + 2 * d[21] * d[32] * d[42] * d[56] - 2 * d[23] * d[27] * d[43] * d[56] + 2 * d[22] * d[30] * d[43] * d[56] + 2 * d[21] * d[31] * d[43] * d[56] - 2 * d[18] * d[32] * d[43] * d[56] + 2 * d[19] * d[27] * d[44] * d[56] + 2 * d[18] * d[28] * d[44] * d[56] - 4 * d[21] * d[30] * d[44] * d[56] - d[20] * d[28] * d[36] * d[60] - d[19] * d[29] * d[36] * d[60] + 2 * d[23] * d[32] * d[36] * d[60] - d[20] * d[27] * d[37] * d[60] - d[18] * d[29] * d[37] * d[60] + 2 * d[22] * d[31] * d[37] * d[60] - d[19] * d[27] * d[38] * d[60] - d[18] * d[28] * d[38] * d[60] + 2 * d[21] * d[30] * d[38] * d[60] + 2 * d[21] * d[29] * d[39] * d[60] + 2 * d[20] * d[30] * d[39] * d[60] - 2 * d[23] * d[31] * d[39] * d[60] - 2 * d[22] * d[32] * d[39] * d[60] + 2 * d[22] * d[28] * d[40] * d[60] - 2 * d[23] * d[30] * d[40] * d[60] + 2 * d[19] * d[31] * d[40] * d[60] - 2 * d[21] * d[32] * d[40] * d[60] + 2 * d[23] * d[27] * d[41] * d[60] - 2 * d[22] * d[30] * d[41] * d[60] - 2 * d[21] * d[31] * d[41] * d[60] + 2 * d[18] * d[32] * d[41] * d[60];
    coeffs[120] = 2 * d[29] * d[33] * d[37] * d[54] - 2 * d[31] * d[35] * d[37] * d[54] + 2 * d[28] * d[33] * d[38] * d[54] - 2 * d[30] * d[34] * d[38] * d[54] - 2 * d[29] * d[34] * d[39] * d[54] + 2 * d[32] * d[35] * d[39] * d[54] + 2 * d[32] * d[34] * d[40] * d[54] - 2 * d[28] * d[35] * d[40] * d[54] - 4 * d[32] * d[33] * d[41] * d[54] + 2 * d[31] * d[34] * d[41] * d[54] + 2 * d[30] * d[35] * d[41] * d[54] + 2 * d[28] * d[29] * d[42] * d[54] - 2 * std::pow(d[32], 2) * d[42] * d[54] - 2 * d[29] * d[30] * d[43] * d[54] + 2 * d[31] * d[32] * d[43] * d[54] - 2 * d[28] * d[31] * d[44] * d[54] + 2 * d[30] * d[32] * d[44] * d[54] + 2 * d[29] * d[34] * d[36] * d[55] - 2 * d[32] * d[35] * d[36] * d[55] - 2 * d[30] * d[33] * d[38] * d[55] + 2 * d[27] * d[34] * d[38] * d[55] - 2 * d[29] * d[33] * d[39] * d[55] + 2 * d[31] * d[35] * d[39] * d[55] + 2 * d[32] * d[33] * d[40] * d[55] - 4 * d[31] * d[34] * d[40] * d[55] + 2 * d[30] * d[35] * d[40] * d[55] + 2 * d[31] * d[33] * d[41] * d[55] - 2 * d[27] * d[35] * d[41] * d[55] - 2 * d[29] * d[30] * d[42] * d[55] + 2 * d[31] * d[32] * d[42] * d[55] + 2 * d[27] * d[29] * d[43] * d[55] - 2 * std::pow(d[31], 2) * d[43] * d[55] + 2 * d[30] * d[31] * d[44] * d[55] - 2 * d[27] * d[32] * d[44] * d[55] - 2 * d[32] * d[34] * d[36] * d[56] + 2 * d[28] * d[35] * d[36] * d[56] - 2 * d[31] * d[33] * d[37] * d[56] + 2 * d[27] * d[35] * d[37] * d[56] + 2 * d[32] * d[33] * d[39] * d[56] + 2 * d[31] * d[34] * d[39] * d[56] - 4 * d[30] * d[35] * d[39] * d[56] - 2 * d[28] * d[33] * d[40] * d[56] + 2 * d[30] * d[34] * d[40] * d[56] + 2 * d[30] * d[33] * d[41] * d[56] - 2 * d[27] * d[34] * d[41] * d[56] - 2 * d[28] * d[31] * d[42] * d[56] + 2 * d[30] * d[32] * d[42] * d[56] + 2 * d[30] * d[31] * d[43] * d[56] - 2 * d[27] * d[32] * d[43] * d[56] + 2 * d[27] * d[28] * d[44] * d[56] - 2 * std::pow(d[30], 2) * d[44] * d[56] - d[28] * d[29] * d[36] * d[60] + std::pow(d[32], 2) * d[36] * d[60] - d[27] * d[29] * d[37] * d[60] + std::pow(d[31], 2) * d[37] * d[60] - d[27] * d[28] * d[38] * d[60] + std::pow(d[30], 2) * d[38] * d[60] + 2 * d[29] * d[30] * d[39] * d[60] - 2 * d[31] * d[32] * d[39] * d[60] + 2 * d[28] * d[31] * d[40] * d[60] - 2 * d[30] * d[32] * d[40] * d[60] - 2 * d[30] * d[31] * d[41] * d[60] + 2 * d[27] * d[32] * d[41] * d[60];
    coeffs[121] = 2 * d[15] * d[37] * d[38] * d[54] - 2 * d[16] * d[38] * d[39] * d[54] - 2 * d[17] * d[37] * d[40] * d[54] + 2 * d[17] * d[39] * d[41] * d[54] + 2 * d[16] * d[40] * d[41] * d[54] - 2 * d[15] * std::pow(d[41], 2) * d[54] + 2 * d[11] * d[37] * d[42] * d[54] + 2 * d[10] * d[38] * d[42] * d[54] - 4 * d[14] * d[41] * d[42] * d[54] - 2 * d[12] * d[38] * d[43] * d[54] - 2 * d[11] * d[39] * d[43] * d[54] + 2 * d[14] * d[40] * d[43] * d[54] + 2 * d[13] * d[41] * d[43] * d[54] - 2 * d[13] * d[37] * d[44] * d[54] + 2 * d[14] * d[39] * d[44] * d[54] - 2 * d[10] * d[40] * d[44] * d[54] + 2 * d[12] * d[41] * d[44] * d[54] + 2 * d[16] * d[36] * d[38] * d[55] - 2 * d[15] * d[38] * d[39] * d[55] + 2 * d[17] * d[39] * d[40] * d[55] - 2 * d[16] * std::pow(d[40], 2) * d[55] - 2 * d[17] * d[36] * d[41] * d[55] + 2 * d[15] * d[40] * d[41] * d[55] - 2 * d[12] * d[38] * d[42] * d[55] - 2 * d[11] * d[39] * d[42] * d[55] + 2 * d[14] * d[40] * d[42] * d[55] + 2 * d[13] * d[41] * d[42] * d[55] + 2 * d[11] * d[36] * d[43] * d[55] + 2 * d[9] * d[38] * d[43] * d[55] - 4 * d[13] * d[40] * d[43] * d[55] - 2 * d[14] * d[36] * d[44] * d[55] + 2 * d[13] * d[39] * d[44] * d[55] + 2 * d[12] * d[40] * d[44] * d[55] - 2 * d[9] * d[41] * d[44] * d[55] + 2 * d[17] * d[36] * d[37] * d[56] - 2 * d[17] * std::pow(d[39], 2) * d[56] - 2 * d[15] * d[37] * d[40] * d[56] + 2 * d[16] * d[39] * d[40] * d[56] - 2 * d[16] * d[36] * d[41] * d[56] + 2 * d[15] * d[39] * d[41] * d[56] - 2 * d[13] * d[37] * d[42] * d[56] + 2 * d[14] * d[39] * d[42] * d[56] - 2 * d[10] * d[40] * d[42] * d[56] + 2 * d[12] * d[41] * d[42] * d[56] - 2 * d[14] * d[36] * d[43] * d[56] + 2 * d[13] * d[39] * d[43] * d[56] + 2 * d[12] * d[40] * d[43] * d[56] - 2 * d[9] * d[41] * d[43] * d[56] + 2 * d[10] * d[36] * d[44] * d[56] + 2 * d[9] * d[37] * d[44] * d[56] - 4 * d[12] * d[39] * d[44] * d[56] - d[11] * d[36] * d[37] * d[60] - d[10] * d[36] * d[38] * d[60] - d[9] * d[37] * d[38] * d[60] + 2 * d[12] * d[38] * d[39] * d[60] + d[11] * std::pow(d[39], 2) * d[60] + 2 * d[13] * d[37] * d[40] * d[60] - 2 * d[14] * d[39] * d[40] * d[60] + d[10] * std::pow(d[40], 2) * d[60] + 2 * d[14] * d[36] * d[41] * d[60] - 2 * d[13] * d[39] * d[41] * d[60] - 2 * d[12] * d[40] * d[41] * d[60] + d[9] * std::pow(d[41], 2) * d[60];
    coeffs[122] = 2 * d[24] * d[37] * d[38] * d[54] - 2 * d[25] * d[38] * d[39] * d[54] - 2 * d[26] * d[37] * d[40] * d[54] + 2 * d[26] * d[39] * d[41] * d[54] + 2 * d[25] * d[40] * d[41] * d[54] - 2 * d[24] * std::pow(d[41], 2) * d[54] + 2 * d[20] * d[37] * d[42] * d[54] + 2 * d[19] * d[38] * d[42] * d[54] - 4 * d[23] * d[41] * d[42] * d[54] - 2 * d[21] * d[38] * d[43] * d[54] - 2 * d[20] * d[39] * d[43] * d[54] + 2 * d[23] * d[40] * d[43] * d[54] + 2 * d[22] * d[41] * d[43] * d[54] - 2 * d[22] * d[37] * d[44] * d[54] + 2 * d[23] * d[39] * d[44] * d[54] - 2 * d[19] * d[40] * d[44] * d[54] + 2 * d[21] * d[41] * d[44] * d[54] + 2 * d[25] * d[36] * d[38] * d[55] - 2 * d[24] * d[38] * d[39] * d[55] + 2 * d[26] * d[39] * d[40] * d[55] - 2 * d[25] * std::pow(d[40], 2) * d[55] - 2 * d[26] * d[36] * d[41] * d[55] + 2 * d[24] * d[40] * d[41] * d[55] - 2 * d[21] * d[38] * d[42] * d[55] - 2 * d[20] * d[39] * d[42] * d[55] + 2 * d[23] * d[40] * d[42] * d[55] + 2 * d[22] * d[41] * d[42] * d[55] + 2 * d[20] * d[36] * d[43] * d[55] + 2 * d[18] * d[38] * d[43] * d[55] - 4 * d[22] * d[40] * d[43] * d[55] - 2 * d[23] * d[36] * d[44] * d[55] + 2 * d[22] * d[39] * d[44] * d[55] + 2 * d[21] * d[40] * d[44] * d[55] - 2 * d[18] * d[41] * d[44] * d[55] + 2 * d[26] * d[36] * d[37] * d[56] - 2 * d[26] * std::pow(d[39], 2) * d[56] - 2 * d[24] * d[37] * d[40] * d[56] + 2 * d[25] * d[39] * d[40] * d[56] - 2 * d[25] * d[36] * d[41] * d[56] + 2 * d[24] * d[39] * d[41] * d[56] - 2 * d[22] * d[37] * d[42] * d[56] + 2 * d[23] * d[39] * d[42] * d[56] - 2 * d[19] * d[40] * d[42] * d[56] + 2 * d[21] * d[41] * d[42] * d[56] - 2 * d[23] * d[36] * d[43] * d[56] + 2 * d[22] * d[39] * d[43] * d[56] + 2 * d[21] * d[40] * d[43] * d[56] - 2 * d[18] * d[41] * d[43] * d[56] + 2 * d[19] * d[36] * d[44] * d[56] + 2 * d[18] * d[37] * d[44] * d[56] - 4 * d[21] * d[39] * d[44] * d[56] - d[20] * d[36] * d[37] * d[60] - d[19] * d[36] * d[38] * d[60] - d[18] * d[37] * d[38] * d[60] + 2 * d[21] * d[38] * d[39] * d[60] + d[20] * std::pow(d[39], 2) * d[60] + 2 * d[22] * d[37] * d[40] * d[60] - 2 * d[23] * d[39] * d[40] * d[60] + d[19] * std::pow(d[40], 2) * d[60] + 2 * d[23] * d[36] * d[41] * d[60] - 2 * d[22] * d[39] * d[41] * d[60] - 2 * d[21] * d[40] * d[41] * d[60] + d[18] * std::pow(d[41], 2) * d[60];
    coeffs[123] = 2 * d[33] * d[37] * d[38] * d[54] - 2 * d[34] * d[38] * d[39] * d[54] - 2 * d[35] * d[37] * d[40] * d[54] + 2 * d[35] * d[39] * d[41] * d[54] + 2 * d[34] * d[40] * d[41] * d[54] - 2 * d[33] * std::pow(d[41], 2) * d[54] + 2 * d[29] * d[37] * d[42] * d[54] + 2 * d[28] * d[38] * d[42] * d[54] - 4 * d[32] * d[41] * d[42] * d[54] - 2 * d[30] * d[38] * d[43] * d[54] - 2 * d[29] * d[39] * d[43] * d[54] + 2 * d[32] * d[40] * d[43] * d[54] + 2 * d[31] * d[41] * d[43] * d[54] - 2 * d[31] * d[37] * d[44] * d[54] + 2 * d[32] * d[39] * d[44] * d[54] - 2 * d[28] * d[40] * d[44] * d[54] + 2 * d[30] * d[41] * d[44] * d[54] + 2 * d[34] * d[36] * d[38] * d[55] - 2 * d[33] * d[38] * d[39] * d[55] + 2 * d[35] * d[39] * d[40] * d[55] - 2 * d[34] * std::pow(d[40], 2) * d[55] - 2 * d[35] * d[36] * d[41] * d[55] + 2 * d[33] * d[40] * d[41] * d[55] - 2 * d[30] * d[38] * d[42] * d[55] - 2 * d[29] * d[39] * d[42] * d[55] + 2 * d[32] * d[40] * d[42] * d[55] + 2 * d[31] * d[41] * d[42] * d[55] + 2 * d[29] * d[36] * d[43] * d[55] + 2 * d[27] * d[38] * d[43] * d[55] - 4 * d[31] * d[40] * d[43] * d[55] - 2 * d[32] * d[36] * d[44] * d[55] + 2 * d[31] * d[39] * d[44] * d[55] + 2 * d[30] * d[40] * d[44] * d[55] - 2 * d[27] * d[41] * d[44] * d[55] + 2 * d[35] * d[36] * d[37] * d[56] - 2 * d[35] * std::pow(d[39], 2) * d[56] - 2 * d[33] * d[37] * d[40] * d[56] + 2 * d[34] * d[39] * d[40] * d[56] - 2 * d[34] * d[36] * d[41] * d[56] + 2 * d[33] * d[39] * d[41] * d[56] - 2 * d[31] * d[37] * d[42] * d[56] + 2 * d[32] * d[39] * d[42] * d[56] - 2 * d[28] * d[40] * d[42] * d[56] + 2 * d[30] * d[41] * d[42] * d[56] - 2 * d[32] * d[36] * d[43] * d[56] + 2 * d[31] * d[39] * d[43] * d[56] + 2 * d[30] * d[40] * d[43] * d[56] - 2 * d[27] * d[41] * d[43] * d[56] + 2 * d[28] * d[36] * d[44] * d[56] + 2 * d[27] * d[37] * d[44] * d[56] - 4 * d[30] * d[39] * d[44] * d[56] - d[29] * d[36] * d[37] * d[60] - d[28] * d[36] * d[38] * d[60] - d[27] * d[37] * d[38] * d[60] + 2 * d[30] * d[38] * d[39] * d[60] + d[29] * std::pow(d[39], 2) * d[60] + 2 * d[31] * d[37] * d[40] * d[60] - 2 * d[32] * d[39] * d[40] * d[60] + d[28] * std::pow(d[40], 2) * d[60] + 2 * d[32] * d[36] * d[41] * d[60] - 2 * d[31] * d[39] * d[41] * d[60] - 2 * d[30] * d[40] * d[41] * d[60] + d[27] * std::pow(d[41], 2) * d[60];
    coeffs[124] = 2 * d[37] * d[38] * d[42] * d[54] - 2 * std::pow(d[41], 2) * d[42] * d[54] - 2 * d[38] * d[39] * d[43] * d[54] + 2 * d[40] * d[41] * d[43] * d[54] - 2 * d[37] * d[40] * d[44] * d[54] + 2 * d[39] * d[41] * d[44] * d[54] - 2 * d[38] * d[39] * d[42] * d[55] + 2 * d[40] * d[41] * d[42] * d[55] + 2 * d[36] * d[38] * d[43] * d[55] - 2 * std::pow(d[40], 2) * d[43] * d[55] + 2 * d[39] * d[40] * d[44] * d[55] - 2 * d[36] * d[41] * d[44] * d[55] - 2 * d[37] * d[40] * d[42] * d[56] + 2 * d[39] * d[41] * d[42] * d[56] + 2 * d[39] * d[40] * d[43] * d[56] - 2 * d[36] * d[41] * d[43] * d[56] + 2 * d[36] * d[37] * d[44] * d[56] - 2 * std::pow(d[39], 2) * d[44] * d[56] - d[36] * d[37] * d[38] * d[60] + d[38] * std::pow(d[39], 2) * d[60] + d[37] * std::pow(d[40], 2) * d[60] - 2 * d[39] * d[40] * d[41] * d[60] + d[36] * std::pow(d[41], 2) * d[60];
    coeffs[125] = 2 * d[6] * d[10] * d[11] * d[54] - 2 * d[7] * d[11] * d[12] * d[54] - 2 * d[8] * d[10] * d[13] * d[54] + 2 * d[8] * d[12] * d[14] * d[54] + 2 * d[7] * d[13] * d[14] * d[54] - 2 * d[6] * std::pow(d[14], 2) * d[54] + 2 * d[2] * d[10] * d[15] * d[54] + 2 * d[1] * d[11] * d[15] * d[54] - 4 * d[5] * d[14] * d[15] * d[54] - 2 * d[3] * d[11] * d[16] * d[54] - 2 * d[2] * d[12] * d[16] * d[54] + 2 * d[5] * d[13] * d[16] * d[54] + 2 * d[4] * d[14] * d[16] * d[54] - 2 * d[4] * d[10] * d[17] * d[54] + 2 * d[5] * d[12] * d[17] * d[54] - 2 * d[1] * d[13] * d[17] * d[54] + 2 * d[3] * d[14] * d[17] * d[54] + d[10] * d[11] * std::pow(d[54], 2) - std::pow(d[14], 2) * std::pow(d[54], 2) + 2 * d[7] * d[9] * d[11] * d[55] - 2 * d[6] * d[11] * d[12] * d[55] + 2 * d[8] * d[12] * d[13] * d[55] - 2 * d[7] * std::pow(d[13], 2) * d[55] - 2 * d[8] * d[9] * d[14] * d[55] + 2 * d[6] * d[13] * d[14] * d[55] - 2 * d[3] * d[11] * d[15] * d[55] - 2 * d[2] * d[12] * d[15] * d[55] + 2 * d[5] * d[13] * d[15] * d[55] + 2 * d[4] * d[14] * d[15] * d[55] + 2 * d[2] * d[9] * d[16] * d[55] + 2 * d[0] * d[11] * d[16] * d[55] - 4 * d[4] * d[13] * d[16] * d[55] - 2 * d[5] * d[9] * d[17] * d[55] + 2 * d[4] * d[12] * d[17] * d[55] + 2 * d[3] * d[13] * d[17] * d[55] - 2 * d[0] * d[14] * d[17] * d[55] - 2 * d[11] * d[12] * d[54] * d[55] + 2 * d[13] * d[14] * d[54] * d[55] + d[9] * d[11] * std::pow(d[55], 2) - std::pow(d[13], 2) * std::pow(d[55], 2) + 2 * d[8] * d[9] * d[10] * d[56] - 2 * d[8] * std::pow(d[12], 2) * d[56] - 2 * d[6] * d[10] * d[13] * d[56] + 2 * d[7] * d[12] * d[13] * d[56] - 2 * d[7] * d[9] * d[14] * d[56] + 2 * d[6] * d[12] * d[14] * d[56] - 2 * d[4] * d[10] * d[15] * d[56] + 2 * d[5] * d[12] * d[15] * d[56] - 2 * d[1] * d[13] * d[15] * d[56] + 2 * d[3] * d[14] * d[15] * d[56] - 2 * d[5] * d[9] * d[16] * d[56] + 2 * d[4] * d[12] * d[16] * d[56] + 2 * d[3] * d[13] * d[16] * d[56] - 2 * d[0] * d[14] * d[16] * d[56] + 2 * d[1] * d[9] * d[17] * d[56] + 2 * d[0] * d[10] * d[17] * d[56] - 4 * d[3] * d[12] * d[17] * d[56] - 2 * d[10] * d[13] * d[54] * d[56] + 2 * d[12] * d[14] * d[54] * d[56] + 2 * d[12] * d[13] * d[55] * d[56] - 2 * d[9] * d[14] * d[55] * d[56] + d[9] * d[10] * std::pow(d[56], 2) - std::pow(d[12], 2) * std::pow(d[56], 2) - d[2] * d[9] * d[10] * d[60] - d[1] * d[9] * d[11] * d[60] - d[0] * d[10] * d[11] * d[60] + 2 * d[3] * d[11] * d[12] * d[60] + d[2] * std::pow(d[12], 2) * d[60] + 2 * d[4] * d[10] * d[13] * d[60] - 2 * d[5] * d[12] * d[13] * d[60] + d[1] * std::pow(d[13], 2) * d[60] + 2 * d[5] * d[9] * d[14] * d[60] - 2 * d[4] * d[12] * d[14] * d[60] - 2 * d[3] * d[13] * d[14] * d[60] + d[0] * std::pow(d[14], 2) * d[60];
    coeffs[126] = 2 * d[6] * d[11] * d[19] * d[54] - 2 * d[8] * d[13] * d[19] * d[54] + 2 * d[2] * d[15] * d[19] * d[54] - 2 * d[4] * d[17] * d[19] * d[54] + 2 * d[6] * d[10] * d[20] * d[54] - 2 * d[7] * d[12] * d[20] * d[54] + 2 * d[1] * d[15] * d[20] * d[54] - 2 * d[3] * d[16] * d[20] * d[54] - 2 * d[7] * d[11] * d[21] * d[54] + 2 * d[8] * d[14] * d[21] * d[54] - 2 * d[2] * d[16] * d[21] * d[54] + 2 * d[5] * d[17] * d[21] * d[54] - 2 * d[8] * d[10] * d[22] * d[54] + 2 * d[7] * d[14] * d[22] * d[54] + 2 * d[5] * d[16] * d[22] * d[54] - 2 * d[1] * d[17] * d[22] * d[54] + 2 * d[8] * d[12] * d[23] * d[54] + 2 * d[7] * d[13] * d[23] * d[54] - 4 * d[6] * d[14] * d[23] * d[54] - 4 * d[5] * d[15] * d[23] * d[54] + 2 * d[4] * d[16] * d[23] * d[54] + 2 * d[3] * d[17] * d[23] * d[54] + 2 * d[2] * d[10] * d[24] * d[54] + 2 * d[1] * d[11] * d[24] * d[54] - 4 * d[5] * d[14] * d[24] * d[54] - 2 * d[3] * d[11] * d[25] * d[54] - 2 * d[2] * d[12] * d[25] * d[54] + 2 * d[5] * d[13] * d[25] * d[54] + 2 * d[4] * d[14] * d[25] * d[54] - 2 * d[4] * d[10] * d[26] * d[54] + 2 * d[5] * d[12] * d[26] * d[54] - 2 * d[1] * d[13] * d[26] * d[54] + 2 * d[3] * d[14] * d[26] * d[54] + d[11] * d[19] * std::pow(d[54], 2) + d[10] * d[20] * std::pow(d[54], 2) - 2 * d[14] * d[23] * std::pow(d[54], 2) + 2 * d[7] * d[11] * d[18] * d[55] - 2 * d[8] * d[14] * d[18] * d[55] + 2 * d[2] * d[16] * d[18] * d[55] - 2 * d[5] * d[17] * d[18] * d[55] + 2 * d[7] * d[9] * d[20] * d[55] - 2 * d[6] * d[12] * d[20] * d[55] - 2 * d[3] * d[15] * d[20] * d[55] + 2 * d[0] * d[16] * d[20] * d[55] - 2 * d[6] * d[11] * d[21] * d[55] + 2 * d[8] * d[13] * d[21] * d[55] - 2 * d[2] * d[15] * d[21] * d[55] + 2 * d[4] * d[17] * d[21] * d[55] + 2 * d[8] * d[12] * d[22] * d[55] - 4 * d[7] * d[13] * d[22] * d[55] + 2 * d[6] * d[14] * d[22] * d[55] + 2 * d[5] * d[15] * d[22] * d[55] - 4 * d[4] * d[16] * d[22] * d[55] + 2 * d[3] * d[17] * d[22] * d[55] - 2 * d[8] * d[9] * d[23] * d[55] + 2 * d[6] * d[13] * d[23] * d[55] + 2 * d[4] * d[15] * d[23] * d[55] - 2 * d[0] * d[17] * d[23] * d[55] - 2 * d[3] * d[11] * d[24] * d[55] - 2 * d[2] * d[12] * d[24] * d[55] + 2 * d[5] * d[13] * d[24] * d[55] + 2 * d[4] * d[14] * d[24] * d[55] + 2 * d[2] * d[9] * d[25] * d[55] + 2 * d[0] * d[11] * d[25] * d[55] - 4 * d[4] * d[13] * d[25] * d[55] - 2 * d[5] * d[9] * d[26] * d[55] + 2 * d[4] * d[12] * d[26] * d[55] + 2 * d[3] * d[13] * d[26] * d[55] - 2 * d[0] * d[14] * d[26] * d[55] - 2 * d[12] * d[20] * d[54] * d[55] - 2 * d[11] * d[21] * d[54] * d[55] + 2 * d[14] * d[22] * d[54] * d[55] + 2 * d[13] * d[23] * d[54] * d[55] + d[11] * d[18] * std::pow(d[55], 2) + d[9] * d[20] * std::pow(d[55], 2) - 2 * d[13] * d[22] * std::pow(d[55], 2) + 2 * d[8] * d[10] * d[18] * d[56] - 2 * d[7] * d[14] * d[18] * d[56] - 2 * d[5] * d[16] * d[18] * d[56] + 2 * d[1] * d[17] * d[18] * d[56] + 2 * d[8] * d[9] * d[19] * d[56] - 2 * d[6] * d[13] * d[19] * d[56] - 2 * d[4] * d[15] * d[19] * d[56] + 2 * d[0] * d[17] * d[19] * d[56] - 4 * d[8] * d[12] * d[21] * d[56] + 2 * d[7] * d[13] * d[21] * d[56] + 2 * d[6] * d[14] * d[21] * d[56] + 2 * d[5] * d[15] * d[21] * d[56] + 2 * d[4] * d[16] * d[21] * d[56] - 4 * d[3] * d[17] * d[21] * d[56] - 2 * d[6] * d[10] * d[22] * d[56] + 2 * d[7] * d[12] * d[22] * d[56] - 2 * d[1] * d[15] * d[22] * d[56] + 2 * d[3] * d[16] * d[22] * d[56] - 2 * d[7] * d[9] * d[23] * d[56] + 2 * d[6] * d[12] * d[23] * d[56] + 2 * d[3] * d[15] * d[23] * d[56] - 2 * d[0] * d[16] * d[23] * d[56] - 2 * d[4] * d[10] * d[24] * d[56] + 2 * d[5] * d[12] * d[24] * d[56] - 2 * d[1] * d[13] * d[24] * d[56] + 2 * d[3] * d[14] * d[24] * d[56] - 2 * d[5] * d[9] * d[25] * d[56] + 2 * d[4] * d[12] * d[25] * d[56] + 2 * d[3] * d[13] * d[25] * d[56] - 2 * d[0] * d[14] * d[25] * d[56] + 2 * d[1] * d[9] * d[26] * d[56] + 2 * d[0] * d[10] * d[26] * d[56] - 4 * d[3] * d[12] * d[26] * d[56] - 2 * d[13] * d[19] * d[54] * d[56] + 2 * d[14] * d[21] * d[54] * d[56] - 2 * d[10] * d[22] * d[54] * d[56] + 2 * d[12] * d[23] * d[54] * d[56] - 2 * d[14] * d[18] * d[55] * d[56] + 2 * d[13] * d[21] * d[55] * d[56] + 2 * d[12] * d[22] * d[55] * d[56] - 2 * d[9] * d[23] * d[55] * d[56] + d[10] * d[18] * std::pow(d[56], 2) + d[9] * d[19] * std::pow(d[56], 2) - 2 * d[12] * d[21] * std::pow(d[56], 2) - d[2] * d[10] * d[18] * d[60] - d[1] * d[11] * d[18] * d[60] + 2 * d[5] * d[14] * d[18] * d[60] - d[2] * d[9] * d[19] * d[60] - d[0] * d[11] * d[19] * d[60] + 2 * d[4] * d[13] * d[19] * d[60] - d[1] * d[9] * d[20] * d[60] - d[0] * d[10] * d[20] * d[60] + 2 * d[3] * d[12] * d[20] * d[60] + 2 * d[3] * d[11] * d[21] * d[60] + 2 * d[2] * d[12] * d[21] * d[60] - 2 * d[5] * d[13] * d[21] * d[60] - 2 * d[4] * d[14] * d[21] * d[60] + 2 * d[4] * d[10] * d[22] * d[60] - 2 * d[5] * d[12] * d[22] * d[60] + 2 * d[1] * d[13] * d[22] * d[60] - 2 * d[3] * d[14] * d[22] * d[60] + 2 * d[5] * d[9] * d[23] * d[60] - 2 * d[4] * d[12] * d[23] * d[60] - 2 * d[3] * d[13] * d[23] * d[60] + 2 * d[0] * d[14] * d[23] * d[60];
    coeffs[127] = 2 * d[6] * d[19] * d[20] * d[54] - 2 * d[7] * d[20] * d[21] * d[54] - 2 * d[8] * d[19] * d[22] * d[54] + 2 * d[8] * d[21] * d[23] * d[54] + 2 * d[7] * d[22] * d[23] * d[54] - 2 * d[6] * std::pow(d[23], 2) * d[54] + 2 * d[2] * d[19] * d[24] * d[54] + 2 * d[1] * d[20] * d[24] * d[54] - 4 * d[5] * d[23] * d[24] * d[54] - 2 * d[3] * d[20] * d[25] * d[54] - 2 * d[2] * d[21] * d[25] * d[54] + 2 * d[5] * d[22] * d[25] * d[54] + 2 * d[4] * d[23] * d[25] * d[54] - 2 * d[4] * d[19] * d[26] * d[54] + 2 * d[5] * d[21] * d[26] * d[54] - 2 * d[1] * d[22] * d[26] * d[54] + 2 * d[3] * d[23] * d[26] * d[54] + d[19] * d[20] * std::pow(d[54], 2) - std::pow(d[23], 2) * std::pow(d[54], 2) + 2 * d[7] * d[18] * d[20] * d[55] - 2 * d[6] * d[20] * d[21] * d[55] + 2 * d[8] * d[21] * d[22] * d[55] - 2 * d[7] * std::pow(d[22], 2) * d[55] - 2 * d[8] * d[18] * d[23] * d[55] + 2 * d[6] * d[22] * d[23] * d[55] - 2 * d[3] * d[20] * d[24] * d[55] - 2 * d[2] * d[21] * d[24] * d[55] + 2 * d[5] * d[22] * d[24] * d[55] + 2 * d[4] * d[23] * d[24] * d[55] + 2 * d[2] * d[18] * d[25] * d[55] + 2 * d[0] * d[20] * d[25] * d[55] - 4 * d[4] * d[22] * d[25] * d[55] - 2 * d[5] * d[18] * d[26] * d[55] + 2 * d[4] * d[21] * d[26] * d[55] + 2 * d[3] * d[22] * d[26] * d[55] - 2 * d[0] * d[23] * d[26] * d[55] - 2 * d[20] * d[21] * d[54] * d[55] + 2 * d[22] * d[23] * d[54] * d[55] + d[18] * d[20] * std::pow(d[55], 2) - std::pow(d[22], 2) * std::pow(d[55], 2) + 2 * d[8] * d[18] * d[19] * d[56] - 2 * d[8] * std::pow(d[21], 2) * d[56] - 2 * d[6] * d[19] * d[22] * d[56] + 2 * d[7] * d[21] * d[22] * d[56] - 2 * d[7] * d[18] * d[23] * d[56] + 2 * d[6] * d[21] * d[23] * d[56] - 2 * d[4] * d[19] * d[24] * d[56] + 2 * d[5] * d[21] * d[24] * d[56] - 2 * d[1] * d[22] * d[24] * d[56] + 2 * d[3] * d[23] * d[24] * d[56] - 2 * d[5] * d[18] * d[25] * d[56] + 2 * d[4] * d[21] * d[25] * d[56] + 2 * d[3] * d[22] * d[25] * d[56] - 2 * d[0] * d[23] * d[25] * d[56] + 2 * d[1] * d[18] * d[26] * d[56] + 2 * d[0] * d[19] * d[26] * d[56] - 4 * d[3] * d[21] * d[26] * d[56] - 2 * d[19] * d[22] * d[54] * d[56] + 2 * d[21] * d[23] * d[54] * d[56] + 2 * d[21] * d[22] * d[55] * d[56] - 2 * d[18] * d[23] * d[55] * d[56] + d[18] * d[19] * std::pow(d[56], 2) - std::pow(d[21], 2) * std::pow(d[56], 2) - d[2] * d[18] * d[19] * d[60] - d[1] * d[18] * d[20] * d[60] - d[0] * d[19] * d[20] * d[60] + 2 * d[3] * d[20] * d[21] * d[60] + d[2] * std::pow(d[21], 2) * d[60] + 2 * d[4] * d[19] * d[22] * d[60] - 2 * d[5] * d[21] * d[22] * d[60] + d[1] * std::pow(d[22], 2) * d[60] + 2 * d[5] * d[18] * d[23] * d[60] - 2 * d[4] * d[21] * d[23] * d[60] - 2 * d[3] * d[22] * d[23] * d[60] + d[0] * std::pow(d[23], 2) * d[60];
    coeffs[128] = 2 * d[6] * d[11] * d[28] * d[54] - 2 * d[8] * d[13] * d[28] * d[54] + 2 * d[2] * d[15] * d[28] * d[54] - 2 * d[4] * d[17] * d[28] * d[54] + 2 * d[6] * d[10] * d[29] * d[54] - 2 * d[7] * d[12] * d[29] * d[54] + 2 * d[1] * d[15] * d[29] * d[54] - 2 * d[3] * d[16] * d[29] * d[54] - 2 * d[7] * d[11] * d[30] * d[54] + 2 * d[8] * d[14] * d[30] * d[54] - 2 * d[2] * d[16] * d[30] * d[54] + 2 * d[5] * d[17] * d[30] * d[54] - 2 * d[8] * d[10] * d[31] * d[54] + 2 * d[7] * d[14] * d[31] * d[54] + 2 * d[5] * d[16] * d[31] * d[54] - 2 * d[1] * d[17] * d[31] * d[54] + 2 * d[8] * d[12] * d[32] * d[54] + 2 * d[7] * d[13] * d[32] * d[54] - 4 * d[6] * d[14] * d[32] * d[54] - 4 * d[5] * d[15] * d[32] * d[54] + 2 * d[4] * d[16] * d[32] * d[54] + 2 * d[3] * d[17] * d[32] * d[54] + 2 * d[2] * d[10] * d[33] * d[54] + 2 * d[1] * d[11] * d[33] * d[54] - 4 * d[5] * d[14] * d[33] * d[54] - 2 * d[3] * d[11] * d[34] * d[54] - 2 * d[2] * d[12] * d[34] * d[54] + 2 * d[5] * d[13] * d[34] * d[54] + 2 * d[4] * d[14] * d[34] * d[54] - 2 * d[4] * d[10] * d[35] * d[54] + 2 * d[5] * d[12] * d[35] * d[54] - 2 * d[1] * d[13] * d[35] * d[54] + 2 * d[3] * d[14] * d[35] * d[54] + d[11] * d[28] * std::pow(d[54], 2) + d[10] * d[29] * std::pow(d[54], 2) - 2 * d[14] * d[32] * std::pow(d[54], 2) + 2 * d[7] * d[11] * d[27] * d[55] - 2 * d[8] * d[14] * d[27] * d[55] + 2 * d[2] * d[16] * d[27] * d[55] - 2 * d[5] * d[17] * d[27] * d[55] + 2 * d[7] * d[9] * d[29] * d[55] - 2 * d[6] * d[12] * d[29] * d[55] - 2 * d[3] * d[15] * d[29] * d[55] + 2 * d[0] * d[16] * d[29] * d[55] - 2 * d[6] * d[11] * d[30] * d[55] + 2 * d[8] * d[13] * d[30] * d[55] - 2 * d[2] * d[15] * d[30] * d[55] + 2 * d[4] * d[17] * d[30] * d[55] + 2 * d[8] * d[12] * d[31] * d[55] - 4 * d[7] * d[13] * d[31] * d[55] + 2 * d[6] * d[14] * d[31] * d[55] + 2 * d[5] * d[15] * d[31] * d[55] - 4 * d[4] * d[16] * d[31] * d[55] + 2 * d[3] * d[17] * d[31] * d[55] - 2 * d[8] * d[9] * d[32] * d[55] + 2 * d[6] * d[13] * d[32] * d[55] + 2 * d[4] * d[15] * d[32] * d[55] - 2 * d[0] * d[17] * d[32] * d[55] - 2 * d[3] * d[11] * d[33] * d[55] - 2 * d[2] * d[12] * d[33] * d[55] + 2 * d[5] * d[13] * d[33] * d[55] + 2 * d[4] * d[14] * d[33] * d[55] + 2 * d[2] * d[9] * d[34] * d[55] + 2 * d[0] * d[11] * d[34] * d[55] - 4 * d[4] * d[13] * d[34] * d[55] - 2 * d[5] * d[9] * d[35] * d[55] + 2 * d[4] * d[12] * d[35] * d[55] + 2 * d[3] * d[13] * d[35] * d[55] - 2 * d[0] * d[14] * d[35] * d[55] - 2 * d[12] * d[29] * d[54] * d[55] - 2 * d[11] * d[30] * d[54] * d[55] + 2 * d[14] * d[31] * d[54] * d[55] + 2 * d[13] * d[32] * d[54] * d[55] + d[11] * d[27] * std::pow(d[55], 2) + d[9] * d[29] * std::pow(d[55], 2) - 2 * d[13] * d[31] * std::pow(d[55], 2) + 2 * d[8] * d[10] * d[27] * d[56] - 2 * d[7] * d[14] * d[27] * d[56] - 2 * d[5] * d[16] * d[27] * d[56] + 2 * d[1] * d[17] * d[27] * d[56] + 2 * d[8] * d[9] * d[28] * d[56] - 2 * d[6] * d[13] * d[28] * d[56] - 2 * d[4] * d[15] * d[28] * d[56] + 2 * d[0] * d[17] * d[28] * d[56] - 4 * d[8] * d[12] * d[30] * d[56] + 2 * d[7] * d[13] * d[30] * d[56] + 2 * d[6] * d[14] * d[30] * d[56] + 2 * d[5] * d[15] * d[30] * d[56] + 2 * d[4] * d[16] * d[30] * d[56] - 4 * d[3] * d[17] * d[30] * d[56] - 2 * d[6] * d[10] * d[31] * d[56] + 2 * d[7] * d[12] * d[31] * d[56] - 2 * d[1] * d[15] * d[31] * d[56] + 2 * d[3] * d[16] * d[31] * d[56] - 2 * d[7] * d[9] * d[32] * d[56] + 2 * d[6] * d[12] * d[32] * d[56] + 2 * d[3] * d[15] * d[32] * d[56] - 2 * d[0] * d[16] * d[32] * d[56] - 2 * d[4] * d[10] * d[33] * d[56] + 2 * d[5] * d[12] * d[33] * d[56] - 2 * d[1] * d[13] * d[33] * d[56] + 2 * d[3] * d[14] * d[33] * d[56] - 2 * d[5] * d[9] * d[34] * d[56] + 2 * d[4] * d[12] * d[34] * d[56] + 2 * d[3] * d[13] * d[34] * d[56] - 2 * d[0] * d[14] * d[34] * d[56] + 2 * d[1] * d[9] * d[35] * d[56] + 2 * d[0] * d[10] * d[35] * d[56] - 4 * d[3] * d[12] * d[35] * d[56] - 2 * d[13] * d[28] * d[54] * d[56] + 2 * d[14] * d[30] * d[54] * d[56] - 2 * d[10] * d[31] * d[54] * d[56] + 2 * d[12] * d[32] * d[54] * d[56] - 2 * d[14] * d[27] * d[55] * d[56] + 2 * d[13] * d[30] * d[55] * d[56] + 2 * d[12] * d[31] * d[55] * d[56] - 2 * d[9] * d[32] * d[55] * d[56] + d[10] * d[27] * std::pow(d[56], 2) + d[9] * d[28] * std::pow(d[56], 2) - 2 * d[12] * d[30] * std::pow(d[56], 2) - d[2] * d[10] * d[27] * d[60] - d[1] * d[11] * d[27] * d[60] + 2 * d[5] * d[14] * d[27] * d[60] - d[2] * d[9] * d[28] * d[60] - d[0] * d[11] * d[28] * d[60] + 2 * d[4] * d[13] * d[28] * d[60] - d[1] * d[9] * d[29] * d[60] - d[0] * d[10] * d[29] * d[60] + 2 * d[3] * d[12] * d[29] * d[60] + 2 * d[3] * d[11] * d[30] * d[60] + 2 * d[2] * d[12] * d[30] * d[60] - 2 * d[5] * d[13] * d[30] * d[60] - 2 * d[4] * d[14] * d[30] * d[60] + 2 * d[4] * d[10] * d[31] * d[60] - 2 * d[5] * d[12] * d[31] * d[60] + 2 * d[1] * d[13] * d[31] * d[60] - 2 * d[3] * d[14] * d[31] * d[60] + 2 * d[5] * d[9] * d[32] * d[60] - 2 * d[4] * d[12] * d[32] * d[60] - 2 * d[3] * d[13] * d[32] * d[60] + 2 * d[0] * d[14] * d[32] * d[60];
    coeffs[129] = 2 * d[6] * d[20] * d[28] * d[54] - 2 * d[8] * d[22] * d[28] * d[54] + 2 * d[2] * d[24] * d[28] * d[54] - 2 * d[4] * d[26] * d[28] * d[54] + 2 * d[6] * d[19] * d[29] * d[54] - 2 * d[7] * d[21] * d[29] * d[54] + 2 * d[1] * d[24] * d[29] * d[54] - 2 * d[3] * d[25] * d[29] * d[54] - 2 * d[7] * d[20] * d[30] * d[54] + 2 * d[8] * d[23] * d[30] * d[54] - 2 * d[2] * d[25] * d[30] * d[54] + 2 * d[5] * d[26] * d[30] * d[54] - 2 * d[8] * d[19] * d[31] * d[54] + 2 * d[7] * d[23] * d[31] * d[54] + 2 * d[5] * d[25] * d[31] * d[54] - 2 * d[1] * d[26] * d[31] * d[54] + 2 * d[8] * d[21] * d[32] * d[54] + 2 * d[7] * d[22] * d[32] * d[54] - 4 * d[6] * d[23] * d[32] * d[54] - 4 * d[5] * d[24] * d[32] * d[54] + 2 * d[4] * d[25] * d[32] * d[54] + 2 * d[3] * d[26] * d[32] * d[54] + 2 * d[2] * d[19] * d[33] * d[54] + 2 * d[1] * d[20] * d[33] * d[54] - 4 * d[5] * d[23] * d[33] * d[54] - 2 * d[3] * d[20] * d[34] * d[54] - 2 * d[2] * d[21] * d[34] * d[54] + 2 * d[5] * d[22] * d[34] * d[54] + 2 * d[4] * d[23] * d[34] * d[54] - 2 * d[4] * d[19] * d[35] * d[54] + 2 * d[5] * d[21] * d[35] * d[54] - 2 * d[1] * d[22] * d[35] * d[54] + 2 * d[3] * d[23] * d[35] * d[54] + d[20] * d[28] * std::pow(d[54], 2) + d[19] * d[29] * std::pow(d[54], 2) - 2 * d[23] * d[32] * std::pow(d[54], 2) + 2 * d[7] * d[20] * d[27] * d[55] - 2 * d[8] * d[23] * d[27] * d[55] + 2 * d[2] * d[25] * d[27] * d[55] - 2 * d[5] * d[26] * d[27] * d[55] + 2 * d[7] * d[18] * d[29] * d[55] - 2 * d[6] * d[21] * d[29] * d[55] - 2 * d[3] * d[24] * d[29] * d[55] + 2 * d[0] * d[25] * d[29] * d[55] - 2 * d[6] * d[20] * d[30] * d[55] + 2 * d[8] * d[22] * d[30] * d[55] - 2 * d[2] * d[24] * d[30] * d[55] + 2 * d[4] * d[26] * d[30] * d[55] + 2 * d[8] * d[21] * d[31] * d[55] - 4 * d[7] * d[22] * d[31] * d[55] + 2 * d[6] * d[23] * d[31] * d[55] + 2 * d[5] * d[24] * d[31] * d[55] - 4 * d[4] * d[25] * d[31] * d[55] + 2 * d[3] * d[26] * d[31] * d[55] - 2 * d[8] * d[18] * d[32] * d[55] + 2 * d[6] * d[22] * d[32] * d[55] + 2 * d[4] * d[24] * d[32] * d[55] - 2 * d[0] * d[26] * d[32] * d[55] - 2 * d[3] * d[20] * d[33] * d[55] - 2 * d[2] * d[21] * d[33] * d[55] + 2 * d[5] * d[22] * d[33] * d[55] + 2 * d[4] * d[23] * d[33] * d[55] + 2 * d[2] * d[18] * d[34] * d[55] + 2 * d[0] * d[20] * d[34] * d[55] - 4 * d[4] * d[22] * d[34] * d[55] - 2 * d[5] * d[18] * d[35] * d[55] + 2 * d[4] * d[21] * d[35] * d[55] + 2 * d[3] * d[22] * d[35] * d[55] - 2 * d[0] * d[23] * d[35] * d[55] - 2 * d[21] * d[29] * d[54] * d[55] - 2 * d[20] * d[30] * d[54] * d[55] + 2 * d[23] * d[31] * d[54] * d[55] + 2 * d[22] * d[32] * d[54] * d[55] + d[20] * d[27] * std::pow(d[55], 2) + d[18] * d[29] * std::pow(d[55], 2) - 2 * d[22] * d[31] * std::pow(d[55], 2) + 2 * d[8] * d[19] * d[27] * d[56] - 2 * d[7] * d[23] * d[27] * d[56] - 2 * d[5] * d[25] * d[27] * d[56] + 2 * d[1] * d[26] * d[27] * d[56] + 2 * d[8] * d[18] * d[28] * d[56] - 2 * d[6] * d[22] * d[28] * d[56] - 2 * d[4] * d[24] * d[28] * d[56] + 2 * d[0] * d[26] * d[28] * d[56] - 4 * d[8] * d[21] * d[30] * d[56] + 2 * d[7] * d[22] * d[30] * d[56] + 2 * d[6] * d[23] * d[30] * d[56] + 2 * d[5] * d[24] * d[30] * d[56] + 2 * d[4] * d[25] * d[30] * d[56] - 4 * d[3] * d[26] * d[30] * d[56] - 2 * d[6] * d[19] * d[31] * d[56] + 2 * d[7] * d[21] * d[31] * d[56] - 2 * d[1] * d[24] * d[31] * d[56] + 2 * d[3] * d[25] * d[31] * d[56] - 2 * d[7] * d[18] * d[32] * d[56] + 2 * d[6] * d[21] * d[32] * d[56] + 2 * d[3] * d[24] * d[32] * d[56] - 2 * d[0] * d[25] * d[32] * d[56] - 2 * d[4] * d[19] * d[33] * d[56] + 2 * d[5] * d[21] * d[33] * d[56] - 2 * d[1] * d[22] * d[33] * d[56] + 2 * d[3] * d[23] * d[33] * d[56] - 2 * d[5] * d[18] * d[34] * d[56] + 2 * d[4] * d[21] * d[34] * d[56] + 2 * d[3] * d[22] * d[34] * d[56] - 2 * d[0] * d[23] * d[34] * d[56] + 2 * d[1] * d[18] * d[35] * d[56] + 2 * d[0] * d[19] * d[35] * d[56] - 4 * d[3] * d[21] * d[35] * d[56] - 2 * d[22] * d[28] * d[54] * d[56] + 2 * d[23] * d[30] * d[54] * d[56] - 2 * d[19] * d[31] * d[54] * d[56] + 2 * d[21] * d[32] * d[54] * d[56] - 2 * d[23] * d[27] * d[55] * d[56] + 2 * d[22] * d[30] * d[55] * d[56] + 2 * d[21] * d[31] * d[55] * d[56] - 2 * d[18] * d[32] * d[55] * d[56] + d[19] * d[27] * std::pow(d[56], 2) + d[18] * d[28] * std::pow(d[56], 2) - 2 * d[21] * d[30] * std::pow(d[56], 2) - d[2] * d[19] * d[27] * d[60] - d[1] * d[20] * d[27] * d[60] + 2 * d[5] * d[23] * d[27] * d[60] - d[2] * d[18] * d[28] * d[60] - d[0] * d[20] * d[28] * d[60] + 2 * d[4] * d[22] * d[28] * d[60] - d[1] * d[18] * d[29] * d[60] - d[0] * d[19] * d[29] * d[60] + 2 * d[3] * d[21] * d[29] * d[60] + 2 * d[3] * d[20] * d[30] * d[60] + 2 * d[2] * d[21] * d[30] * d[60] - 2 * d[5] * d[22] * d[30] * d[60] - 2 * d[4] * d[23] * d[30] * d[60] + 2 * d[4] * d[19] * d[31] * d[60] - 2 * d[5] * d[21] * d[31] * d[60] + 2 * d[1] * d[22] * d[31] * d[60] - 2 * d[3] * d[23] * d[31] * d[60] + 2 * d[5] * d[18] * d[32] * d[60] - 2 * d[4] * d[21] * d[32] * d[60] - 2 * d[3] * d[22] * d[32] * d[60] + 2 * d[0] * d[23] * d[32] * d[60];
    coeffs[130] = 2 * d[6] * d[28] * d[29] * d[54] - 2 * d[7] * d[29] * d[30] * d[54] - 2 * d[8] * d[28] * d[31] * d[54] + 2 * d[8] * d[30] * d[32] * d[54] + 2 * d[7] * d[31] * d[32] * d[54] - 2 * d[6] * std::pow(d[32], 2) * d[54] + 2 * d[2] * d[28] * d[33] * d[54] + 2 * d[1] * d[29] * d[33] * d[54] - 4 * d[5] * d[32] * d[33] * d[54] - 2 * d[3] * d[29] * d[34] * d[54] - 2 * d[2] * d[30] * d[34] * d[54] + 2 * d[5] * d[31] * d[34] * d[54] + 2 * d[4] * d[32] * d[34] * d[54] - 2 * d[4] * d[28] * d[35] * d[54] + 2 * d[5] * d[30] * d[35] * d[54] - 2 * d[1] * d[31] * d[35] * d[54] + 2 * d[3] * d[32] * d[35] * d[54] + d[28] * d[29] * std::pow(d[54], 2) - std::pow(d[32], 2) * std::pow(d[54], 2) + 2 * d[7] * d[27] * d[29] * d[55] - 2 * d[6] * d[29] * d[30] * d[55] + 2 * d[8] * d[30] * d[31] * d[55] - 2 * d[7] * std::pow(d[31], 2) * d[55] - 2 * d[8] * d[27] * d[32] * d[55] + 2 * d[6] * d[31] * d[32] * d[55] - 2 * d[3] * d[29] * d[33] * d[55] - 2 * d[2] * d[30] * d[33] * d[55] + 2 * d[5] * d[31] * d[33] * d[55] + 2 * d[4] * d[32] * d[33] * d[55] + 2 * d[2] * d[27] * d[34] * d[55] + 2 * d[0] * d[29] * d[34] * d[55] - 4 * d[4] * d[31] * d[34] * d[55] - 2 * d[5] * d[27] * d[35] * d[55] + 2 * d[4] * d[30] * d[35] * d[55] + 2 * d[3] * d[31] * d[35] * d[55] - 2 * d[0] * d[32] * d[35] * d[55] - 2 * d[29] * d[30] * d[54] * d[55] + 2 * d[31] * d[32] * d[54] * d[55] + d[27] * d[29] * std::pow(d[55], 2) - std::pow(d[31], 2) * std::pow(d[55], 2) + 2 * d[8] * d[27] * d[28] * d[56] - 2 * d[8] * std::pow(d[30], 2) * d[56] - 2 * d[6] * d[28] * d[31] * d[56] + 2 * d[7] * d[30] * d[31] * d[56] - 2 * d[7] * d[27] * d[32] * d[56] + 2 * d[6] * d[30] * d[32] * d[56] - 2 * d[4] * d[28] * d[33] * d[56] + 2 * d[5] * d[30] * d[33] * d[56] - 2 * d[1] * d[31] * d[33] * d[56] + 2 * d[3] * d[32] * d[33] * d[56] - 2 * d[5] * d[27] * d[34] * d[56] + 2 * d[4] * d[30] * d[34] * d[56] + 2 * d[3] * d[31] * d[34] * d[56] - 2 * d[0] * d[32] * d[34] * d[56] + 2 * d[1] * d[27] * d[35] * d[56] + 2 * d[0] * d[28] * d[35] * d[56] - 4 * d[3] * d[30] * d[35] * d[56] - 2 * d[28] * d[31] * d[54] * d[56] + 2 * d[30] * d[32] * d[54] * d[56] + 2 * d[30] * d[31] * d[55] * d[56] - 2 * d[27] * d[32] * d[55] * d[56] + d[27] * d[28] * std::pow(d[56], 2) - std::pow(d[30], 2) * std::pow(d[56], 2) - d[2] * d[27] * d[28] * d[60] - d[1] * d[27] * d[29] * d[60] - d[0] * d[28] * d[29] * d[60] + 2 * d[3] * d[29] * d[30] * d[60] + d[2] * std::pow(d[30], 2) * d[60] + 2 * d[4] * d[28] * d[31] * d[60] - 2 * d[5] * d[30] * d[31] * d[60] + d[1] * std::pow(d[31], 2) * d[60] + 2 * d[5] * d[27] * d[32] * d[60] - 2 * d[4] * d[30] * d[32] * d[60] - 2 * d[3] * d[31] * d[32] * d[60] + d[0] * std::pow(d[32], 2) * d[60];
    coeffs[131] = 2 * d[6] * d[11] * d[37] * d[54] - 2 * d[8] * d[13] * d[37] * d[54] + 2 * d[2] * d[15] * d[37] * d[54] - 2 * d[4] * d[17] * d[37] * d[54] + 2 * d[6] * d[10] * d[38] * d[54] - 2 * d[7] * d[12] * d[38] * d[54] + 2 * d[1] * d[15] * d[38] * d[54] - 2 * d[3] * d[16] * d[38] * d[54] - 2 * d[7] * d[11] * d[39] * d[54] + 2 * d[8] * d[14] * d[39] * d[54] - 2 * d[2] * d[16] * d[39] * d[54] + 2 * d[5] * d[17] * d[39] * d[54] - 2 * d[8] * d[10] * d[40] * d[54] + 2 * d[7] * d[14] * d[40] * d[54] + 2 * d[5] * d[16] * d[40] * d[54] - 2 * d[1] * d[17] * d[40] * d[54] + 2 * d[8] * d[12] * d[41] * d[54] + 2 * d[7] * d[13] * d[41] * d[54] - 4 * d[6] * d[14] * d[41] * d[54] - 4 * d[5] * d[15] * d[41] * d[54] + 2 * d[4] * d[16] * d[41] * d[54] + 2 * d[3] * d[17] * d[41] * d[54] + 2 * d[2] * d[10] * d[42] * d[54] + 2 * d[1] * d[11] * d[42] * d[54] - 4 * d[5] * d[14] * d[42] * d[54] - 2 * d[3] * d[11] * d[43] * d[54] - 2 * d[2] * d[12] * d[43] * d[54] + 2 * d[5] * d[13] * d[43] * d[54] + 2 * d[4] * d[14] * d[43] * d[54] - 2 * d[4] * d[10] * d[44] * d[54] + 2 * d[5] * d[12] * d[44] * d[54] - 2 * d[1] * d[13] * d[44] * d[54] + 2 * d[3] * d[14] * d[44] * d[54] + d[11] * d[37] * std::pow(d[54], 2) + d[10] * d[38] * std::pow(d[54], 2) - 2 * d[14] * d[41] * std::pow(d[54], 2) + 2 * d[7] * d[11] * d[36] * d[55] - 2 * d[8] * d[14] * d[36] * d[55] + 2 * d[2] * d[16] * d[36] * d[55] - 2 * d[5] * d[17] * d[36] * d[55] + 2 * d[7] * d[9] * d[38] * d[55] - 2 * d[6] * d[12] * d[38] * d[55] - 2 * d[3] * d[15] * d[38] * d[55] + 2 * d[0] * d[16] * d[38] * d[55] - 2 * d[6] * d[11] * d[39] * d[55] + 2 * d[8] * d[13] * d[39] * d[55] - 2 * d[2] * d[15] * d[39] * d[55] + 2 * d[4] * d[17] * d[39] * d[55] + 2 * d[8] * d[12] * d[40] * d[55] - 4 * d[7] * d[13] * d[40] * d[55] + 2 * d[6] * d[14] * d[40] * d[55] + 2 * d[5] * d[15] * d[40] * d[55] - 4 * d[4] * d[16] * d[40] * d[55] + 2 * d[3] * d[17] * d[40] * d[55] - 2 * d[8] * d[9] * d[41] * d[55] + 2 * d[6] * d[13] * d[41] * d[55] + 2 * d[4] * d[15] * d[41] * d[55] - 2 * d[0] * d[17] * d[41] * d[55] - 2 * d[3] * d[11] * d[42] * d[55] - 2 * d[2] * d[12] * d[42] * d[55] + 2 * d[5] * d[13] * d[42] * d[55] + 2 * d[4] * d[14] * d[42] * d[55] + 2 * d[2] * d[9] * d[43] * d[55] + 2 * d[0] * d[11] * d[43] * d[55] - 4 * d[4] * d[13] * d[43] * d[55] - 2 * d[5] * d[9] * d[44] * d[55] + 2 * d[4] * d[12] * d[44] * d[55] + 2 * d[3] * d[13] * d[44] * d[55] - 2 * d[0] * d[14] * d[44] * d[55] - 2 * d[12] * d[38] * d[54] * d[55] - 2 * d[11] * d[39] * d[54] * d[55] + 2 * d[14] * d[40] * d[54] * d[55] + 2 * d[13] * d[41] * d[54] * d[55] + d[11] * d[36] * std::pow(d[55], 2) + d[9] * d[38] * std::pow(d[55], 2) - 2 * d[13] * d[40] * std::pow(d[55], 2) + 2 * d[8] * d[10] * d[36] * d[56] - 2 * d[7] * d[14] * d[36] * d[56] - 2 * d[5] * d[16] * d[36] * d[56] + 2 * d[1] * d[17] * d[36] * d[56] + 2 * d[8] * d[9] * d[37] * d[56] - 2 * d[6] * d[13] * d[37] * d[56] - 2 * d[4] * d[15] * d[37] * d[56] + 2 * d[0] * d[17] * d[37] * d[56] - 4 * d[8] * d[12] * d[39] * d[56] + 2 * d[7] * d[13] * d[39] * d[56] + 2 * d[6] * d[14] * d[39] * d[56] + 2 * d[5] * d[15] * d[39] * d[56] + 2 * d[4] * d[16] * d[39] * d[56] - 4 * d[3] * d[17] * d[39] * d[56] - 2 * d[6] * d[10] * d[40] * d[56] + 2 * d[7] * d[12] * d[40] * d[56] - 2 * d[1] * d[15] * d[40] * d[56] + 2 * d[3] * d[16] * d[40] * d[56] - 2 * d[7] * d[9] * d[41] * d[56] + 2 * d[6] * d[12] * d[41] * d[56] + 2 * d[3] * d[15] * d[41] * d[56] - 2 * d[0] * d[16] * d[41] * d[56] - 2 * d[4] * d[10] * d[42] * d[56] + 2 * d[5] * d[12] * d[42] * d[56] - 2 * d[1] * d[13] * d[42] * d[56] + 2 * d[3] * d[14] * d[42] * d[56] - 2 * d[5] * d[9] * d[43] * d[56] + 2 * d[4] * d[12] * d[43] * d[56] + 2 * d[3] * d[13] * d[43] * d[56] - 2 * d[0] * d[14] * d[43] * d[56] + 2 * d[1] * d[9] * d[44] * d[56] + 2 * d[0] * d[10] * d[44] * d[56] - 4 * d[3] * d[12] * d[44] * d[56] - 2 * d[13] * d[37] * d[54] * d[56] + 2 * d[14] * d[39] * d[54] * d[56] - 2 * d[10] * d[40] * d[54] * d[56] + 2 * d[12] * d[41] * d[54] * d[56] - 2 * d[14] * d[36] * d[55] * d[56] + 2 * d[13] * d[39] * d[55] * d[56] + 2 * d[12] * d[40] * d[55] * d[56] - 2 * d[9] * d[41] * d[55] * d[56] + d[10] * d[36] * std::pow(d[56], 2) + d[9] * d[37] * std::pow(d[56], 2) - 2 * d[12] * d[39] * std::pow(d[56], 2) - d[2] * d[10] * d[36] * d[60] - d[1] * d[11] * d[36] * d[60] + 2 * d[5] * d[14] * d[36] * d[60] - d[2] * d[9] * d[37] * d[60] - d[0] * d[11] * d[37] * d[60] + 2 * d[4] * d[13] * d[37] * d[60] - d[1] * d[9] * d[38] * d[60] - d[0] * d[10] * d[38] * d[60] + 2 * d[3] * d[12] * d[38] * d[60] + 2 * d[3] * d[11] * d[39] * d[60] + 2 * d[2] * d[12] * d[39] * d[60] - 2 * d[5] * d[13] * d[39] * d[60] - 2 * d[4] * d[14] * d[39] * d[60] + 2 * d[4] * d[10] * d[40] * d[60] - 2 * d[5] * d[12] * d[40] * d[60] + 2 * d[1] * d[13] * d[40] * d[60] - 2 * d[3] * d[14] * d[40] * d[60] + 2 * d[5] * d[9] * d[41] * d[60] - 2 * d[4] * d[12] * d[41] * d[60] - 2 * d[3] * d[13] * d[41] * d[60] + 2 * d[0] * d[14] * d[41] * d[60];
    coeffs[132] = 2 * d[6] * d[20] * d[37] * d[54] - 2 * d[8] * d[22] * d[37] * d[54] + 2 * d[2] * d[24] * d[37] * d[54] - 2 * d[4] * d[26] * d[37] * d[54] + 2 * d[6] * d[19] * d[38] * d[54] - 2 * d[7] * d[21] * d[38] * d[54] + 2 * d[1] * d[24] * d[38] * d[54] - 2 * d[3] * d[25] * d[38] * d[54] - 2 * d[7] * d[20] * d[39] * d[54] + 2 * d[8] * d[23] * d[39] * d[54] - 2 * d[2] * d[25] * d[39] * d[54] + 2 * d[5] * d[26] * d[39] * d[54] - 2 * d[8] * d[19] * d[40] * d[54] + 2 * d[7] * d[23] * d[40] * d[54] + 2 * d[5] * d[25] * d[40] * d[54] - 2 * d[1] * d[26] * d[40] * d[54] + 2 * d[8] * d[21] * d[41] * d[54] + 2 * d[7] * d[22] * d[41] * d[54] - 4 * d[6] * d[23] * d[41] * d[54] - 4 * d[5] * d[24] * d[41] * d[54] + 2 * d[4] * d[25] * d[41] * d[54] + 2 * d[3] * d[26] * d[41] * d[54] + 2 * d[2] * d[19] * d[42] * d[54] + 2 * d[1] * d[20] * d[42] * d[54] - 4 * d[5] * d[23] * d[42] * d[54] - 2 * d[3] * d[20] * d[43] * d[54] - 2 * d[2] * d[21] * d[43] * d[54] + 2 * d[5] * d[22] * d[43] * d[54] + 2 * d[4] * d[23] * d[43] * d[54] - 2 * d[4] * d[19] * d[44] * d[54] + 2 * d[5] * d[21] * d[44] * d[54] - 2 * d[1] * d[22] * d[44] * d[54] + 2 * d[3] * d[23] * d[44] * d[54] + d[20] * d[37] * std::pow(d[54], 2) + d[19] * d[38] * std::pow(d[54], 2) - 2 * d[23] * d[41] * std::pow(d[54], 2) + 2 * d[7] * d[20] * d[36] * d[55] - 2 * d[8] * d[23] * d[36] * d[55] + 2 * d[2] * d[25] * d[36] * d[55] - 2 * d[5] * d[26] * d[36] * d[55] + 2 * d[7] * d[18] * d[38] * d[55] - 2 * d[6] * d[21] * d[38] * d[55] - 2 * d[3] * d[24] * d[38] * d[55] + 2 * d[0] * d[25] * d[38] * d[55] - 2 * d[6] * d[20] * d[39] * d[55] + 2 * d[8] * d[22] * d[39] * d[55] - 2 * d[2] * d[24] * d[39] * d[55] + 2 * d[4] * d[26] * d[39] * d[55] + 2 * d[8] * d[21] * d[40] * d[55] - 4 * d[7] * d[22] * d[40] * d[55] + 2 * d[6] * d[23] * d[40] * d[55] + 2 * d[5] * d[24] * d[40] * d[55] - 4 * d[4] * d[25] * d[40] * d[55] + 2 * d[3] * d[26] * d[40] * d[55] - 2 * d[8] * d[18] * d[41] * d[55] + 2 * d[6] * d[22] * d[41] * d[55] + 2 * d[4] * d[24] * d[41] * d[55] - 2 * d[0] * d[26] * d[41] * d[55] - 2 * d[3] * d[20] * d[42] * d[55] - 2 * d[2] * d[21] * d[42] * d[55] + 2 * d[5] * d[22] * d[42] * d[55] + 2 * d[4] * d[23] * d[42] * d[55] + 2 * d[2] * d[18] * d[43] * d[55] + 2 * d[0] * d[20] * d[43] * d[55] - 4 * d[4] * d[22] * d[43] * d[55] - 2 * d[5] * d[18] * d[44] * d[55] + 2 * d[4] * d[21] * d[44] * d[55] + 2 * d[3] * d[22] * d[44] * d[55] - 2 * d[0] * d[23] * d[44] * d[55] - 2 * d[21] * d[38] * d[54] * d[55] - 2 * d[20] * d[39] * d[54] * d[55] + 2 * d[23] * d[40] * d[54] * d[55] + 2 * d[22] * d[41] * d[54] * d[55] + d[20] * d[36] * std::pow(d[55], 2) + d[18] * d[38] * std::pow(d[55], 2) - 2 * d[22] * d[40] * std::pow(d[55], 2) + 2 * d[8] * d[19] * d[36] * d[56] - 2 * d[7] * d[23] * d[36] * d[56] - 2 * d[5] * d[25] * d[36] * d[56] + 2 * d[1] * d[26] * d[36] * d[56] + 2 * d[8] * d[18] * d[37] * d[56] - 2 * d[6] * d[22] * d[37] * d[56] - 2 * d[4] * d[24] * d[37] * d[56] + 2 * d[0] * d[26] * d[37] * d[56] - 4 * d[8] * d[21] * d[39] * d[56] + 2 * d[7] * d[22] * d[39] * d[56] + 2 * d[6] * d[23] * d[39] * d[56] + 2 * d[5] * d[24] * d[39] * d[56] + 2 * d[4] * d[25] * d[39] * d[56] - 4 * d[3] * d[26] * d[39] * d[56] - 2 * d[6] * d[19] * d[40] * d[56] + 2 * d[7] * d[21] * d[40] * d[56] - 2 * d[1] * d[24] * d[40] * d[56] + 2 * d[3] * d[25] * d[40] * d[56] - 2 * d[7] * d[18] * d[41] * d[56] + 2 * d[6] * d[21] * d[41] * d[56] + 2 * d[3] * d[24] * d[41] * d[56] - 2 * d[0] * d[25] * d[41] * d[56] - 2 * d[4] * d[19] * d[42] * d[56] + 2 * d[5] * d[21] * d[42] * d[56] - 2 * d[1] * d[22] * d[42] * d[56] + 2 * d[3] * d[23] * d[42] * d[56] - 2 * d[5] * d[18] * d[43] * d[56] + 2 * d[4] * d[21] * d[43] * d[56] + 2 * d[3] * d[22] * d[43] * d[56] - 2 * d[0] * d[23] * d[43] * d[56] + 2 * d[1] * d[18] * d[44] * d[56] + 2 * d[0] * d[19] * d[44] * d[56] - 4 * d[3] * d[21] * d[44] * d[56] - 2 * d[22] * d[37] * d[54] * d[56] + 2 * d[23] * d[39] * d[54] * d[56] - 2 * d[19] * d[40] * d[54] * d[56] + 2 * d[21] * d[41] * d[54] * d[56] - 2 * d[23] * d[36] * d[55] * d[56] + 2 * d[22] * d[39] * d[55] * d[56] + 2 * d[21] * d[40] * d[55] * d[56] - 2 * d[18] * d[41] * d[55] * d[56] + d[19] * d[36] * std::pow(d[56], 2) + d[18] * d[37] * std::pow(d[56], 2) - 2 * d[21] * d[39] * std::pow(d[56], 2) - d[2] * d[19] * d[36] * d[60] - d[1] * d[20] * d[36] * d[60] + 2 * d[5] * d[23] * d[36] * d[60] - d[2] * d[18] * d[37] * d[60] - d[0] * d[20] * d[37] * d[60] + 2 * d[4] * d[22] * d[37] * d[60] - d[1] * d[18] * d[38] * d[60] - d[0] * d[19] * d[38] * d[60] + 2 * d[3] * d[21] * d[38] * d[60] + 2 * d[3] * d[20] * d[39] * d[60] + 2 * d[2] * d[21] * d[39] * d[60] - 2 * d[5] * d[22] * d[39] * d[60] - 2 * d[4] * d[23] * d[39] * d[60] + 2 * d[4] * d[19] * d[40] * d[60] - 2 * d[5] * d[21] * d[40] * d[60] + 2 * d[1] * d[22] * d[40] * d[60] - 2 * d[3] * d[23] * d[40] * d[60] + 2 * d[5] * d[18] * d[41] * d[60] - 2 * d[4] * d[21] * d[41] * d[60] - 2 * d[3] * d[22] * d[41] * d[60] + 2 * d[0] * d[23] * d[41] * d[60];
    coeffs[133] = 2 * d[6] * d[29] * d[37] * d[54] - 2 * d[8] * d[31] * d[37] * d[54] + 2 * d[2] * d[33] * d[37] * d[54] - 2 * d[4] * d[35] * d[37] * d[54] + 2 * d[6] * d[28] * d[38] * d[54] - 2 * d[7] * d[30] * d[38] * d[54] + 2 * d[1] * d[33] * d[38] * d[54] - 2 * d[3] * d[34] * d[38] * d[54] - 2 * d[7] * d[29] * d[39] * d[54] + 2 * d[8] * d[32] * d[39] * d[54] - 2 * d[2] * d[34] * d[39] * d[54] + 2 * d[5] * d[35] * d[39] * d[54] - 2 * d[8] * d[28] * d[40] * d[54] + 2 * d[7] * d[32] * d[40] * d[54] + 2 * d[5] * d[34] * d[40] * d[54] - 2 * d[1] * d[35] * d[40] * d[54] + 2 * d[8] * d[30] * d[41] * d[54] + 2 * d[7] * d[31] * d[41] * d[54] - 4 * d[6] * d[32] * d[41] * d[54] - 4 * d[5] * d[33] * d[41] * d[54] + 2 * d[4] * d[34] * d[41] * d[54] + 2 * d[3] * d[35] * d[41] * d[54] + 2 * d[2] * d[28] * d[42] * d[54] + 2 * d[1] * d[29] * d[42] * d[54] - 4 * d[5] * d[32] * d[42] * d[54] - 2 * d[3] * d[29] * d[43] * d[54] - 2 * d[2] * d[30] * d[43] * d[54] + 2 * d[5] * d[31] * d[43] * d[54] + 2 * d[4] * d[32] * d[43] * d[54] - 2 * d[4] * d[28] * d[44] * d[54] + 2 * d[5] * d[30] * d[44] * d[54] - 2 * d[1] * d[31] * d[44] * d[54] + 2 * d[3] * d[32] * d[44] * d[54] + d[29] * d[37] * std::pow(d[54], 2) + d[28] * d[38] * std::pow(d[54], 2) - 2 * d[32] * d[41] * std::pow(d[54], 2) + 2 * d[7] * d[29] * d[36] * d[55] - 2 * d[8] * d[32] * d[36] * d[55] + 2 * d[2] * d[34] * d[36] * d[55] - 2 * d[5] * d[35] * d[36] * d[55] + 2 * d[7] * d[27] * d[38] * d[55] - 2 * d[6] * d[30] * d[38] * d[55] - 2 * d[3] * d[33] * d[38] * d[55] + 2 * d[0] * d[34] * d[38] * d[55] - 2 * d[6] * d[29] * d[39] * d[55] + 2 * d[8] * d[31] * d[39] * d[55] - 2 * d[2] * d[33] * d[39] * d[55] + 2 * d[4] * d[35] * d[39] * d[55] + 2 * d[8] * d[30] * d[40] * d[55] - 4 * d[7] * d[31] * d[40] * d[55] + 2 * d[6] * d[32] * d[40] * d[55] + 2 * d[5] * d[33] * d[40] * d[55] - 4 * d[4] * d[34] * d[40] * d[55] + 2 * d[3] * d[35] * d[40] * d[55] - 2 * d[8] * d[27] * d[41] * d[55] + 2 * d[6] * d[31] * d[41] * d[55] + 2 * d[4] * d[33] * d[41] * d[55] - 2 * d[0] * d[35] * d[41] * d[55] - 2 * d[3] * d[29] * d[42] * d[55] - 2 * d[2] * d[30] * d[42] * d[55] + 2 * d[5] * d[31] * d[42] * d[55] + 2 * d[4] * d[32] * d[42] * d[55] + 2 * d[2] * d[27] * d[43] * d[55] + 2 * d[0] * d[29] * d[43] * d[55] - 4 * d[4] * d[31] * d[43] * d[55] - 2 * d[5] * d[27] * d[44] * d[55] + 2 * d[4] * d[30] * d[44] * d[55] + 2 * d[3] * d[31] * d[44] * d[55] - 2 * d[0] * d[32] * d[44] * d[55] - 2 * d[30] * d[38] * d[54] * d[55] - 2 * d[29] * d[39] * d[54] * d[55] + 2 * d[32] * d[40] * d[54] * d[55] + 2 * d[31] * d[41] * d[54] * d[55] + d[29] * d[36] * std::pow(d[55], 2) + d[27] * d[38] * std::pow(d[55], 2) - 2 * d[31] * d[40] * std::pow(d[55], 2) + 2 * d[8] * d[28] * d[36] * d[56] - 2 * d[7] * d[32] * d[36] * d[56] - 2 * d[5] * d[34] * d[36] * d[56] + 2 * d[1] * d[35] * d[36] * d[56] + 2 * d[8] * d[27] * d[37] * d[56] - 2 * d[6] * d[31] * d[37] * d[56] - 2 * d[4] * d[33] * d[37] * d[56] + 2 * d[0] * d[35] * d[37] * d[56] - 4 * d[8] * d[30] * d[39] * d[56] + 2 * d[7] * d[31] * d[39] * d[56] + 2 * d[6] * d[32] * d[39] * d[56] + 2 * d[5] * d[33] * d[39] * d[56] + 2 * d[4] * d[34] * d[39] * d[56] - 4 * d[3] * d[35] * d[39] * d[56] - 2 * d[6] * d[28] * d[40] * d[56] + 2 * d[7] * d[30] * d[40] * d[56] - 2 * d[1] * d[33] * d[40] * d[56] + 2 * d[3] * d[34] * d[40] * d[56] - 2 * d[7] * d[27] * d[41] * d[56] + 2 * d[6] * d[30] * d[41] * d[56] + 2 * d[3] * d[33] * d[41] * d[56] - 2 * d[0] * d[34] * d[41] * d[56] - 2 * d[4] * d[28] * d[42] * d[56] + 2 * d[5] * d[30] * d[42] * d[56] - 2 * d[1] * d[31] * d[42] * d[56] + 2 * d[3] * d[32] * d[42] * d[56] - 2 * d[5] * d[27] * d[43] * d[56] + 2 * d[4] * d[30] * d[43] * d[56] + 2 * d[3] * d[31] * d[43] * d[56] - 2 * d[0] * d[32] * d[43] * d[56] + 2 * d[1] * d[27] * d[44] * d[56] + 2 * d[0] * d[28] * d[44] * d[56] - 4 * d[3] * d[30] * d[44] * d[56] - 2 * d[31] * d[37] * d[54] * d[56] + 2 * d[32] * d[39] * d[54] * d[56] - 2 * d[28] * d[40] * d[54] * d[56] + 2 * d[30] * d[41] * d[54] * d[56] - 2 * d[32] * d[36] * d[55] * d[56] + 2 * d[31] * d[39] * d[55] * d[56] + 2 * d[30] * d[40] * d[55] * d[56] - 2 * d[27] * d[41] * d[55] * d[56] + d[28] * d[36] * std::pow(d[56], 2) + d[27] * d[37] * std::pow(d[56], 2) - 2 * d[30] * d[39] * std::pow(d[56], 2) - d[2] * d[28] * d[36] * d[60] - d[1] * d[29] * d[36] * d[60] + 2 * d[5] * d[32] * d[36] * d[60] - d[2] * d[27] * d[37] * d[60] - d[0] * d[29] * d[37] * d[60] + 2 * d[4] * d[31] * d[37] * d[60] - d[1] * d[27] * d[38] * d[60] - d[0] * d[28] * d[38] * d[60] + 2 * d[3] * d[30] * d[38] * d[60] + 2 * d[3] * d[29] * d[39] * d[60] + 2 * d[2] * d[30] * d[39] * d[60] - 2 * d[5] * d[31] * d[39] * d[60] - 2 * d[4] * d[32] * d[39] * d[60] + 2 * d[4] * d[28] * d[40] * d[60] - 2 * d[5] * d[30] * d[40] * d[60] + 2 * d[1] * d[31] * d[40] * d[60] - 2 * d[3] * d[32] * d[40] * d[60] + 2 * d[5] * d[27] * d[41] * d[60] - 2 * d[4] * d[30] * d[41] * d[60] - 2 * d[3] * d[31] * d[41] * d[60] + 2 * d[0] * d[32] * d[41] * d[60];
    coeffs[134] = 2 * d[6] * d[37] * d[38] * d[54] - 2 * d[7] * d[38] * d[39] * d[54] - 2 * d[8] * d[37] * d[40] * d[54] + 2 * d[8] * d[39] * d[41] * d[54] + 2 * d[7] * d[40] * d[41] * d[54] - 2 * d[6] * std::pow(d[41], 2) * d[54] + 2 * d[2] * d[37] * d[42] * d[54] + 2 * d[1] * d[38] * d[42] * d[54] - 4 * d[5] * d[41] * d[42] * d[54] - 2 * d[3] * d[38] * d[43] * d[54] - 2 * d[2] * d[39] * d[43] * d[54] + 2 * d[5] * d[40] * d[43] * d[54] + 2 * d[4] * d[41] * d[43] * d[54] - 2 * d[4] * d[37] * d[44] * d[54] + 2 * d[5] * d[39] * d[44] * d[54] - 2 * d[1] * d[40] * d[44] * d[54] + 2 * d[3] * d[41] * d[44] * d[54] + d[37] * d[38] * std::pow(d[54], 2) - std::pow(d[41], 2) * std::pow(d[54], 2) + 2 * d[7] * d[36] * d[38] * d[55] - 2 * d[6] * d[38] * d[39] * d[55] + 2 * d[8] * d[39] * d[40] * d[55] - 2 * d[7] * std::pow(d[40], 2) * d[55] - 2 * d[8] * d[36] * d[41] * d[55] + 2 * d[6] * d[40] * d[41] * d[55] - 2 * d[3] * d[38] * d[42] * d[55] - 2 * d[2] * d[39] * d[42] * d[55] + 2 * d[5] * d[40] * d[42] * d[55] + 2 * d[4] * d[41] * d[42] * d[55] + 2 * d[2] * d[36] * d[43] * d[55] + 2 * d[0] * d[38] * d[43] * d[55] - 4 * d[4] * d[40] * d[43] * d[55] - 2 * d[5] * d[36] * d[44] * d[55] + 2 * d[4] * d[39] * d[44] * d[55] + 2 * d[3] * d[40] * d[44] * d[55] - 2 * d[0] * d[41] * d[44] * d[55] - 2 * d[38] * d[39] * d[54] * d[55] + 2 * d[40] * d[41] * d[54] * d[55] + d[36] * d[38] * std::pow(d[55], 2) - std::pow(d[40], 2) * std::pow(d[55], 2) + 2 * d[8] * d[36] * d[37] * d[56] - 2 * d[8] * std::pow(d[39], 2) * d[56] - 2 * d[6] * d[37] * d[40] * d[56] + 2 * d[7] * d[39] * d[40] * d[56] - 2 * d[7] * d[36] * d[41] * d[56] + 2 * d[6] * d[39] * d[41] * d[56] - 2 * d[4] * d[37] * d[42] * d[56] + 2 * d[5] * d[39] * d[42] * d[56] - 2 * d[1] * d[40] * d[42] * d[56] + 2 * d[3] * d[41] * d[42] * d[56] - 2 * d[5] * d[36] * d[43] * d[56] + 2 * d[4] * d[39] * d[43] * d[56] + 2 * d[3] * d[40] * d[43] * d[56] - 2 * d[0] * d[41] * d[43] * d[56] + 2 * d[1] * d[36] * d[44] * d[56] + 2 * d[0] * d[37] * d[44] * d[56] - 4 * d[3] * d[39] * d[44] * d[56] - 2 * d[37] * d[40] * d[54] * d[56] + 2 * d[39] * d[41] * d[54] * d[56] + 2 * d[39] * d[40] * d[55] * d[56] - 2 * d[36] * d[41] * d[55] * d[56] + d[36] * d[37] * std::pow(d[56], 2) - std::pow(d[39], 2) * std::pow(d[56], 2) - d[2] * d[36] * d[37] * d[60] - d[1] * d[36] * d[38] * d[60] - d[0] * d[37] * d[38] * d[60] + 2 * d[3] * d[38] * d[39] * d[60] + d[2] * std::pow(d[39], 2) * d[60] + 2 * d[4] * d[37] * d[40] * d[60] - 2 * d[5] * d[39] * d[40] * d[60] + d[1] * std::pow(d[40], 2) * d[60] + 2 * d[5] * d[36] * d[41] * d[60] - 2 * d[4] * d[39] * d[41] * d[60] - 2 * d[3] * d[40] * d[41] * d[60] + d[0] * std::pow(d[41], 2) * d[60];
    coeffs[135] = 2 * d[2] * d[6] * d[10] * d[54] - 2 * d[4] * d[8] * d[10] * d[54] + 2 * d[1] * d[6] * d[11] * d[54] - 2 * d[3] * d[7] * d[11] * d[54] - 2 * d[2] * d[7] * d[12] * d[54] + 2 * d[5] * d[8] * d[12] * d[54] + 2 * d[5] * d[7] * d[13] * d[54] - 2 * d[1] * d[8] * d[13] * d[54] - 4 * d[5] * d[6] * d[14] * d[54] + 2 * d[4] * d[7] * d[14] * d[54] + 2 * d[3] * d[8] * d[14] * d[54] + 2 * d[1] * d[2] * d[15] * d[54] - 2 * std::pow(d[5], 2) * d[15] * d[54] - 2 * d[2] * d[3] * d[16] * d[54] + 2 * d[4] * d[5] * d[16] * d[54] - 2 * d[1] * d[4] * d[17] * d[54] + 2 * d[3] * d[5] * d[17] * d[54] + d[2] * d[10] * std::pow(d[54], 2) + d[1] * d[11] * std::pow(d[54], 2) - 2 * d[5] * d[14] * std::pow(d[54], 2) + 2 * d[2] * d[7] * d[9] * d[55] - 2 * d[5] * d[8] * d[9] * d[55] - 2 * d[3] * d[6] * d[11] * d[55] + 2 * d[0] * d[7] * d[11] * d[55] - 2 * d[2] * d[6] * d[12] * d[55] + 2 * d[4] * d[8] * d[12] * d[55] + 2 * d[5] * d[6] * d[13] * d[55] - 4 * d[4] * d[7] * d[13] * d[55] + 2 * d[3] * d[8] * d[13] * d[55] + 2 * d[4] * d[6] * d[14] * d[55] - 2 * d[0] * d[8] * d[14] * d[55] - 2 * d[2] * d[3] * d[15] * d[55] + 2 * d[4] * d[5] * d[15] * d[55] + 2 * d[0] * d[2] * d[16] * d[55] - 2 * std::pow(d[4], 2) * d[16] * d[55] + 2 * d[3] * d[4] * d[17] * d[55] - 2 * d[0] * d[5] * d[17] * d[55] - 2 * d[3] * d[11] * d[54] * d[55] - 2 * d[2] * d[12] * d[54] * d[55] + 2 * d[5] * d[13] * d[54] * d[55] + 2 * d[4] * d[14] * d[54] * d[55] + d[2] * d[9] * std::pow(d[55], 2) + d[0] * d[11] * std::pow(d[55], 2) - 2 * d[4] * d[13] * std::pow(d[55], 2) - 2 * d[5] * d[7] * d[9] * d[56] + 2 * d[1] * d[8] * d[9] * d[56] - 2 * d[4] * d[6] * d[10] * d[56] + 2 * d[0] * d[8] * d[10] * d[56] + 2 * d[5] * d[6] * d[12] * d[56] + 2 * d[4] * d[7] * d[12] * d[56] - 4 * d[3] * d[8] * d[12] * d[56] - 2 * d[1] * d[6] * d[13] * d[56] + 2 * d[3] * d[7] * d[13] * d[56] + 2 * d[3] * d[6] * d[14] * d[56] - 2 * d[0] * d[7] * d[14] * d[56] - 2 * d[1] * d[4] * d[15] * d[56] + 2 * d[3] * d[5] * d[15] * d[56] + 2 * d[3] * d[4] * d[16] * d[56] - 2 * d[0] * d[5] * d[16] * d[56] + 2 * d[0] * d[1] * d[17] * d[56] - 2 * std::pow(d[3], 2) * d[17] * d[56] - 2 * d[4] * d[10] * d[54] * d[56] + 2 * d[5] * d[12] * d[54] * d[56] - 2 * d[1] * d[13] * d[54] * d[56] + 2 * d[3] * d[14] * d[54] * d[56] - 2 * d[5] * d[9] * d[55] * d[56] + 2 * d[4] * d[12] * d[55] * d[56] + 2 * d[3] * d[13] * d[55] * d[56] - 2 * d[0] * d[14] * d[55] * d[56] + d[1] * d[9] * std::pow(d[56], 2) + d[0] * d[10] * std::pow(d[56], 2) - 2 * d[3] * d[12] * std::pow(d[56], 2) - d[1] * d[2] * d[9] * d[60] + std::pow(d[5], 2) * d[9] * d[60] - d[0] * d[2] * d[10] * d[60] + std::pow(d[4], 2) * d[10] * d[60] - d[0] * d[1] * d[11] * d[60] + std::pow(d[3], 2) * d[11] * d[60] + 2 * d[2] * d[3] * d[12] * d[60] - 2 * d[4] * d[5] * d[12] * d[60] + 2 * d[1] * d[4] * d[13] * d[60] - 2 * d[3] * d[5] * d[13] * d[60] - 2 * d[3] * d[4] * d[14] * d[60] + 2 * d[0] * d[5] * d[14] * d[60];
    coeffs[136] = 2 * d[2] * d[6] * d[19] * d[54] - 2 * d[4] * d[8] * d[19] * d[54] + 2 * d[1] * d[6] * d[20] * d[54] - 2 * d[3] * d[7] * d[20] * d[54] - 2 * d[2] * d[7] * d[21] * d[54] + 2 * d[5] * d[8] * d[21] * d[54] + 2 * d[5] * d[7] * d[22] * d[54] - 2 * d[1] * d[8] * d[22] * d[54] - 4 * d[5] * d[6] * d[23] * d[54] + 2 * d[4] * d[7] * d[23] * d[54] + 2 * d[3] * d[8] * d[23] * d[54] + 2 * d[1] * d[2] * d[24] * d[54] - 2 * std::pow(d[5], 2) * d[24] * d[54] - 2 * d[2] * d[3] * d[25] * d[54] + 2 * d[4] * d[5] * d[25] * d[54] - 2 * d[1] * d[4] * d[26] * d[54] + 2 * d[3] * d[5] * d[26] * d[54] + d[2] * d[19] * std::pow(d[54], 2) + d[1] * d[20] * std::pow(d[54], 2) - 2 * d[5] * d[23] * std::pow(d[54], 2) + 2 * d[2] * d[7] * d[18] * d[55] - 2 * d[5] * d[8] * d[18] * d[55] - 2 * d[3] * d[6] * d[20] * d[55] + 2 * d[0] * d[7] * d[20] * d[55] - 2 * d[2] * d[6] * d[21] * d[55] + 2 * d[4] * d[8] * d[21] * d[55] + 2 * d[5] * d[6] * d[22] * d[55] - 4 * d[4] * d[7] * d[22] * d[55] + 2 * d[3] * d[8] * d[22] * d[55] + 2 * d[4] * d[6] * d[23] * d[55] - 2 * d[0] * d[8] * d[23] * d[55] - 2 * d[2] * d[3] * d[24] * d[55] + 2 * d[4] * d[5] * d[24] * d[55] + 2 * d[0] * d[2] * d[25] * d[55] - 2 * std::pow(d[4], 2) * d[25] * d[55] + 2 * d[3] * d[4] * d[26] * d[55] - 2 * d[0] * d[5] * d[26] * d[55] - 2 * d[3] * d[20] * d[54] * d[55] - 2 * d[2] * d[21] * d[54] * d[55] + 2 * d[5] * d[22] * d[54] * d[55] + 2 * d[4] * d[23] * d[54] * d[55] + d[2] * d[18] * std::pow(d[55], 2) + d[0] * d[20] * std::pow(d[55], 2) - 2 * d[4] * d[22] * std::pow(d[55], 2) - 2 * d[5] * d[7] * d[18] * d[56] + 2 * d[1] * d[8] * d[18] * d[56] - 2 * d[4] * d[6] * d[19] * d[56] + 2 * d[0] * d[8] * d[19] * d[56] + 2 * d[5] * d[6] * d[21] * d[56] + 2 * d[4] * d[7] * d[21] * d[56] - 4 * d[3] * d[8] * d[21] * d[56] - 2 * d[1] * d[6] * d[22] * d[56] + 2 * d[3] * d[7] * d[22] * d[56] + 2 * d[3] * d[6] * d[23] * d[56] - 2 * d[0] * d[7] * d[23] * d[56] - 2 * d[1] * d[4] * d[24] * d[56] + 2 * d[3] * d[5] * d[24] * d[56] + 2 * d[3] * d[4] * d[25] * d[56] - 2 * d[0] * d[5] * d[25] * d[56] + 2 * d[0] * d[1] * d[26] * d[56] - 2 * std::pow(d[3], 2) * d[26] * d[56] - 2 * d[4] * d[19] * d[54] * d[56] + 2 * d[5] * d[21] * d[54] * d[56] - 2 * d[1] * d[22] * d[54] * d[56] + 2 * d[3] * d[23] * d[54] * d[56] - 2 * d[5] * d[18] * d[55] * d[56] + 2 * d[4] * d[21] * d[55] * d[56] + 2 * d[3] * d[22] * d[55] * d[56] - 2 * d[0] * d[23] * d[55] * d[56] + d[1] * d[18] * std::pow(d[56], 2) + d[0] * d[19] * std::pow(d[56], 2) - 2 * d[3] * d[21] * std::pow(d[56], 2) - d[1] * d[2] * d[18] * d[60] + std::pow(d[5], 2) * d[18] * d[60] - d[0] * d[2] * d[19] * d[60] + std::pow(d[4], 2) * d[19] * d[60] - d[0] * d[1] * d[20] * d[60] + std::pow(d[3], 2) * d[20] * d[60] + 2 * d[2] * d[3] * d[21] * d[60] - 2 * d[4] * d[5] * d[21] * d[60] + 2 * d[1] * d[4] * d[22] * d[60] - 2 * d[3] * d[5] * d[22] * d[60] - 2 * d[3] * d[4] * d[23] * d[60] + 2 * d[0] * d[5] * d[23] * d[60];
    coeffs[137] = 2 * d[2] * d[6] * d[28] * d[54] - 2 * d[4] * d[8] * d[28] * d[54] + 2 * d[1] * d[6] * d[29] * d[54] - 2 * d[3] * d[7] * d[29] * d[54] - 2 * d[2] * d[7] * d[30] * d[54] + 2 * d[5] * d[8] * d[30] * d[54] + 2 * d[5] * d[7] * d[31] * d[54] - 2 * d[1] * d[8] * d[31] * d[54] - 4 * d[5] * d[6] * d[32] * d[54] + 2 * d[4] * d[7] * d[32] * d[54] + 2 * d[3] * d[8] * d[32] * d[54] + 2 * d[1] * d[2] * d[33] * d[54] - 2 * std::pow(d[5], 2) * d[33] * d[54] - 2 * d[2] * d[3] * d[34] * d[54] + 2 * d[4] * d[5] * d[34] * d[54] - 2 * d[1] * d[4] * d[35] * d[54] + 2 * d[3] * d[5] * d[35] * d[54] + d[2] * d[28] * std::pow(d[54], 2) + d[1] * d[29] * std::pow(d[54], 2) - 2 * d[5] * d[32] * std::pow(d[54], 2) + 2 * d[2] * d[7] * d[27] * d[55] - 2 * d[5] * d[8] * d[27] * d[55] - 2 * d[3] * d[6] * d[29] * d[55] + 2 * d[0] * d[7] * d[29] * d[55] - 2 * d[2] * d[6] * d[30] * d[55] + 2 * d[4] * d[8] * d[30] * d[55] + 2 * d[5] * d[6] * d[31] * d[55] - 4 * d[4] * d[7] * d[31] * d[55] + 2 * d[3] * d[8] * d[31] * d[55] + 2 * d[4] * d[6] * d[32] * d[55] - 2 * d[0] * d[8] * d[32] * d[55] - 2 * d[2] * d[3] * d[33] * d[55] + 2 * d[4] * d[5] * d[33] * d[55] + 2 * d[0] * d[2] * d[34] * d[55] - 2 * std::pow(d[4], 2) * d[34] * d[55] + 2 * d[3] * d[4] * d[35] * d[55] - 2 * d[0] * d[5] * d[35] * d[55] - 2 * d[3] * d[29] * d[54] * d[55] - 2 * d[2] * d[30] * d[54] * d[55] + 2 * d[5] * d[31] * d[54] * d[55] + 2 * d[4] * d[32] * d[54] * d[55] + d[2] * d[27] * std::pow(d[55], 2) + d[0] * d[29] * std::pow(d[55], 2) - 2 * d[4] * d[31] * std::pow(d[55], 2) - 2 * d[5] * d[7] * d[27] * d[56] + 2 * d[1] * d[8] * d[27] * d[56] - 2 * d[4] * d[6] * d[28] * d[56] + 2 * d[0] * d[8] * d[28] * d[56] + 2 * d[5] * d[6] * d[30] * d[56] + 2 * d[4] * d[7] * d[30] * d[56] - 4 * d[3] * d[8] * d[30] * d[56] - 2 * d[1] * d[6] * d[31] * d[56] + 2 * d[3] * d[7] * d[31] * d[56] + 2 * d[3] * d[6] * d[32] * d[56] - 2 * d[0] * d[7] * d[32] * d[56] - 2 * d[1] * d[4] * d[33] * d[56] + 2 * d[3] * d[5] * d[33] * d[56] + 2 * d[3] * d[4] * d[34] * d[56] - 2 * d[0] * d[5] * d[34] * d[56] + 2 * d[0] * d[1] * d[35] * d[56] - 2 * std::pow(d[3], 2) * d[35] * d[56] - 2 * d[4] * d[28] * d[54] * d[56] + 2 * d[5] * d[30] * d[54] * d[56] - 2 * d[1] * d[31] * d[54] * d[56] + 2 * d[3] * d[32] * d[54] * d[56] - 2 * d[5] * d[27] * d[55] * d[56] + 2 * d[4] * d[30] * d[55] * d[56] + 2 * d[3] * d[31] * d[55] * d[56] - 2 * d[0] * d[32] * d[55] * d[56] + d[1] * d[27] * std::pow(d[56], 2) + d[0] * d[28] * std::pow(d[56], 2) - 2 * d[3] * d[30] * std::pow(d[56], 2) - d[1] * d[2] * d[27] * d[60] + std::pow(d[5], 2) * d[27] * d[60] - d[0] * d[2] * d[28] * d[60] + std::pow(d[4], 2) * d[28] * d[60] - d[0] * d[1] * d[29] * d[60] + std::pow(d[3], 2) * d[29] * d[60] + 2 * d[2] * d[3] * d[30] * d[60] - 2 * d[4] * d[5] * d[30] * d[60] + 2 * d[1] * d[4] * d[31] * d[60] - 2 * d[3] * d[5] * d[31] * d[60] - 2 * d[3] * d[4] * d[32] * d[60] + 2 * d[0] * d[5] * d[32] * d[60];
    coeffs[138] = 2 * d[2] * d[6] * d[37] * d[54] - 2 * d[4] * d[8] * d[37] * d[54] + 2 * d[1] * d[6] * d[38] * d[54] - 2 * d[3] * d[7] * d[38] * d[54] - 2 * d[2] * d[7] * d[39] * d[54] + 2 * d[5] * d[8] * d[39] * d[54] + 2 * d[5] * d[7] * d[40] * d[54] - 2 * d[1] * d[8] * d[40] * d[54] - 4 * d[5] * d[6] * d[41] * d[54] + 2 * d[4] * d[7] * d[41] * d[54] + 2 * d[3] * d[8] * d[41] * d[54] + 2 * d[1] * d[2] * d[42] * d[54] - 2 * std::pow(d[5], 2) * d[42] * d[54] - 2 * d[2] * d[3] * d[43] * d[54] + 2 * d[4] * d[5] * d[43] * d[54] - 2 * d[1] * d[4] * d[44] * d[54] + 2 * d[3] * d[5] * d[44] * d[54] + d[2] * d[37] * std::pow(d[54], 2) + d[1] * d[38] * std::pow(d[54], 2) - 2 * d[5] * d[41] * std::pow(d[54], 2) + 2 * d[2] * d[7] * d[36] * d[55] - 2 * d[5] * d[8] * d[36] * d[55] - 2 * d[3] * d[6] * d[38] * d[55] + 2 * d[0] * d[7] * d[38] * d[55] - 2 * d[2] * d[6] * d[39] * d[55] + 2 * d[4] * d[8] * d[39] * d[55] + 2 * d[5] * d[6] * d[40] * d[55] - 4 * d[4] * d[7] * d[40] * d[55] + 2 * d[3] * d[8] * d[40] * d[55] + 2 * d[4] * d[6] * d[41] * d[55] - 2 * d[0] * d[8] * d[41] * d[55] - 2 * d[2] * d[3] * d[42] * d[55] + 2 * d[4] * d[5] * d[42] * d[55] + 2 * d[0] * d[2] * d[43] * d[55] - 2 * std::pow(d[4], 2) * d[43] * d[55] + 2 * d[3] * d[4] * d[44] * d[55] - 2 * d[0] * d[5] * d[44] * d[55] - 2 * d[3] * d[38] * d[54] * d[55] - 2 * d[2] * d[39] * d[54] * d[55] + 2 * d[5] * d[40] * d[54] * d[55] + 2 * d[4] * d[41] * d[54] * d[55] + d[2] * d[36] * std::pow(d[55], 2) + d[0] * d[38] * std::pow(d[55], 2) - 2 * d[4] * d[40] * std::pow(d[55], 2) - 2 * d[5] * d[7] * d[36] * d[56] + 2 * d[1] * d[8] * d[36] * d[56] - 2 * d[4] * d[6] * d[37] * d[56] + 2 * d[0] * d[8] * d[37] * d[56] + 2 * d[5] * d[6] * d[39] * d[56] + 2 * d[4] * d[7] * d[39] * d[56] - 4 * d[3] * d[8] * d[39] * d[56] - 2 * d[1] * d[6] * d[40] * d[56] + 2 * d[3] * d[7] * d[40] * d[56] + 2 * d[3] * d[6] * d[41] * d[56] - 2 * d[0] * d[7] * d[41] * d[56] - 2 * d[1] * d[4] * d[42] * d[56] + 2 * d[3] * d[5] * d[42] * d[56] + 2 * d[3] * d[4] * d[43] * d[56] - 2 * d[0] * d[5] * d[43] * d[56] + 2 * d[0] * d[1] * d[44] * d[56] - 2 * std::pow(d[3], 2) * d[44] * d[56] - 2 * d[4] * d[37] * d[54] * d[56] + 2 * d[5] * d[39] * d[54] * d[56] - 2 * d[1] * d[40] * d[54] * d[56] + 2 * d[3] * d[41] * d[54] * d[56] - 2 * d[5] * d[36] * d[55] * d[56] + 2 * d[4] * d[39] * d[55] * d[56] + 2 * d[3] * d[40] * d[55] * d[56] - 2 * d[0] * d[41] * d[55] * d[56] + d[1] * d[36] * std::pow(d[56], 2) + d[0] * d[37] * std::pow(d[56], 2) - 2 * d[3] * d[39] * std::pow(d[56], 2) - d[1] * d[2] * d[36] * d[60] + std::pow(d[5], 2) * d[36] * d[60] - d[0] * d[2] * d[37] * d[60] + std::pow(d[4], 2) * d[37] * d[60] - d[0] * d[1] * d[38] * d[60] + std::pow(d[3], 2) * d[38] * d[60] + 2 * d[2] * d[3] * d[39] * d[60] - 2 * d[4] * d[5] * d[39] * d[60] + 2 * d[1] * d[4] * d[40] * d[60] - 2 * d[3] * d[5] * d[40] * d[60] - 2 * d[3] * d[4] * d[41] * d[60] + 2 * d[0] * d[5] * d[41] * d[60];
    coeffs[139] = 2 * d[1] * d[2] * d[6] * d[54] - 2 * std::pow(d[5], 2) * d[6] * d[54] - 2 * d[2] * d[3] * d[7] * d[54] + 2 * d[4] * d[5] * d[7] * d[54] - 2 * d[1] * d[4] * d[8] * d[54] + 2 * d[3] * d[5] * d[8] * d[54] + d[1] * d[2] * std::pow(d[54], 2) - std::pow(d[5], 2) * std::pow(d[54], 2) - 2 * d[2] * d[3] * d[6] * d[55] + 2 * d[4] * d[5] * d[6] * d[55] + 2 * d[0] * d[2] * d[7] * d[55] - 2 * std::pow(d[4], 2) * d[7] * d[55] + 2 * d[3] * d[4] * d[8] * d[55] - 2 * d[0] * d[5] * d[8] * d[55] - 2 * d[2] * d[3] * d[54] * d[55] + 2 * d[4] * d[5] * d[54] * d[55] + d[0] * d[2] * std::pow(d[55], 2) - std::pow(d[4], 2) * std::pow(d[55], 2) - 2 * d[1] * d[4] * d[6] * d[56] + 2 * d[3] * d[5] * d[6] * d[56] + 2 * d[3] * d[4] * d[7] * d[56] - 2 * d[0] * d[5] * d[7] * d[56] + 2 * d[0] * d[1] * d[8] * d[56] - 2 * std::pow(d[3], 2) * d[8] * d[56] - 2 * d[1] * d[4] * d[54] * d[56] + 2 * d[3] * d[5] * d[54] * d[56] + 2 * d[3] * d[4] * d[55] * d[56] - 2 * d[0] * d[5] * d[55] * d[56] + d[0] * d[1] * std::pow(d[56], 2) - std::pow(d[3], 2) * std::pow(d[56], 2) - d[0] * d[1] * d[2] * d[60] + d[2] * std::pow(d[3], 2) * d[60] + d[1] * std::pow(d[4], 2) * d[60] - 2 * d[3] * d[4] * d[5] * d[60] + d[0] * std::pow(d[5], 2) * d[60];
    coeffs[140] = d[9] * d[10] * d[11] - d[11] * std::pow(d[12], 2) - d[10] * std::pow(d[13], 2) + 2 * d[12] * d[13] * d[14] - d[9] * std::pow(d[14], 2);
    coeffs[141] = d[10] * d[11] * d[18] - std::pow(d[14], 2) * d[18] + d[9] * d[11] * d[19] - std::pow(d[13], 2) * d[19] + d[9] * d[10] * d[20] - std::pow(d[12], 2) * d[20] - 2 * d[11] * d[12] * d[21] + 2 * d[13] * d[14] * d[21] - 2 * d[10] * d[13] * d[22] + 2 * d[12] * d[14] * d[22] + 2 * d[12] * d[13] * d[23] - 2 * d[9] * d[14] * d[23];
    coeffs[142] = d[11] * d[18] * d[19] + d[10] * d[18] * d[20] + d[9] * d[19] * d[20] - 2 * d[12] * d[20] * d[21] - d[11] * std::pow(d[21], 2) - 2 * d[13] * d[19] * d[22] + 2 * d[14] * d[21] * d[22] - d[10] * std::pow(d[22], 2) - 2 * d[14] * d[18] * d[23] + 2 * d[13] * d[21] * d[23] + 2 * d[12] * d[22] * d[23] - d[9] * std::pow(d[23], 2);
    coeffs[143] = d[18] * d[19] * d[20] - d[20] * std::pow(d[21], 2) - d[19] * std::pow(d[22], 2) + 2 * d[21] * d[22] * d[23] - d[18] * std::pow(d[23], 2);
    coeffs[144] = d[10] * d[11] * d[27] - std::pow(d[14], 2) * d[27] + d[9] * d[11] * d[28] - std::pow(d[13], 2) * d[28] + d[9] * d[10] * d[29] - std::pow(d[12], 2) * d[29] - 2 * d[11] * d[12] * d[30] + 2 * d[13] * d[14] * d[30] - 2 * d[10] * d[13] * d[31] + 2 * d[12] * d[14] * d[31] + 2 * d[12] * d[13] * d[32] - 2 * d[9] * d[14] * d[32];
    coeffs[145] = d[11] * d[19] * d[27] + d[10] * d[20] * d[27] - 2 * d[14] * d[23] * d[27] + d[11] * d[18] * d[28] + d[9] * d[20] * d[28] - 2 * d[13] * d[22] * d[28] + d[10] * d[18] * d[29] + d[9] * d[19] * d[29] - 2 * d[12] * d[21] * d[29] - 2 * d[12] * d[20] * d[30] - 2 * d[11] * d[21] * d[30] + 2 * d[14] * d[22] * d[30] + 2 * d[13] * d[23] * d[30] - 2 * d[13] * d[19] * d[31] + 2 * d[14] * d[21] * d[31] - 2 * d[10] * d[22] * d[31] + 2 * d[12] * d[23] * d[31] - 2 * d[14] * d[18] * d[32] + 2 * d[13] * d[21] * d[32] + 2 * d[12] * d[22] * d[32] - 2 * d[9] * d[23] * d[32];
    coeffs[146] = d[19] * d[20] * d[27] - std::pow(d[23], 2) * d[27] + d[18] * d[20] * d[28] - std::pow(d[22], 2) * d[28] + d[18] * d[19] * d[29] - std::pow(d[21], 2) * d[29] - 2 * d[20] * d[21] * d[30] + 2 * d[22] * d[23] * d[30] - 2 * d[19] * d[22] * d[31] + 2 * d[21] * d[23] * d[31] + 2 * d[21] * d[22] * d[32] - 2 * d[18] * d[23] * d[32];
    coeffs[147] = d[11] * d[27] * d[28] + d[10] * d[27] * d[29] + d[9] * d[28] * d[29] - 2 * d[12] * d[29] * d[30] - d[11] * std::pow(d[30], 2) - 2 * d[13] * d[28] * d[31] + 2 * d[14] * d[30] * d[31] - d[10] * std::pow(d[31], 2) - 2 * d[14] * d[27] * d[32] + 2 * d[13] * d[30] * d[32] + 2 * d[12] * d[31] * d[32] - d[9] * std::pow(d[32], 2);
    coeffs[148] = d[20] * d[27] * d[28] + d[19] * d[27] * d[29] + d[18] * d[28] * d[29] - 2 * d[21] * d[29] * d[30] - d[20] * std::pow(d[30], 2) - 2 * d[22] * d[28] * d[31] + 2 * d[23] * d[30] * d[31] - d[19] * std::pow(d[31], 2) - 2 * d[23] * d[27] * d[32] + 2 * d[22] * d[30] * d[32] + 2 * d[21] * d[31] * d[32] - d[18] * std::pow(d[32], 2);
    coeffs[149] = d[27] * d[28] * d[29] - d[29] * std::pow(d[30], 2) - d[28] * std::pow(d[31], 2) + 2 * d[30] * d[31] * d[32] - d[27] * std::pow(d[32], 2);
    coeffs[150] = d[10] * d[11] * d[36] - std::pow(d[14], 2) * d[36] + d[9] * d[11] * d[37] - std::pow(d[13], 2) * d[37] + d[9] * d[10] * d[38] - std::pow(d[12], 2) * d[38] - 2 * d[11] * d[12] * d[39] + 2 * d[13] * d[14] * d[39] - 2 * d[10] * d[13] * d[40] + 2 * d[12] * d[14] * d[40] + 2 * d[12] * d[13] * d[41] - 2 * d[9] * d[14] * d[41];
    coeffs[151] = d[11] * d[19] * d[36] + d[10] * d[20] * d[36] - 2 * d[14] * d[23] * d[36] + d[11] * d[18] * d[37] + d[9] * d[20] * d[37] - 2 * d[13] * d[22] * d[37] + d[10] * d[18] * d[38] + d[9] * d[19] * d[38] - 2 * d[12] * d[21] * d[38] - 2 * d[12] * d[20] * d[39] - 2 * d[11] * d[21] * d[39] + 2 * d[14] * d[22] * d[39] + 2 * d[13] * d[23] * d[39] - 2 * d[13] * d[19] * d[40] + 2 * d[14] * d[21] * d[40] - 2 * d[10] * d[22] * d[40] + 2 * d[12] * d[23] * d[40] - 2 * d[14] * d[18] * d[41] + 2 * d[13] * d[21] * d[41] + 2 * d[12] * d[22] * d[41] - 2 * d[9] * d[23] * d[41];
    coeffs[152] = d[19] * d[20] * d[36] - std::pow(d[23], 2) * d[36] + d[18] * d[20] * d[37] - std::pow(d[22], 2) * d[37] + d[18] * d[19] * d[38] - std::pow(d[21], 2) * d[38] - 2 * d[20] * d[21] * d[39] + 2 * d[22] * d[23] * d[39] - 2 * d[19] * d[22] * d[40] + 2 * d[21] * d[23] * d[40] + 2 * d[21] * d[22] * d[41] - 2 * d[18] * d[23] * d[41];
    coeffs[153] = d[11] * d[28] * d[36] + d[10] * d[29] * d[36] - 2 * d[14] * d[32] * d[36] + d[11] * d[27] * d[37] + d[9] * d[29] * d[37] - 2 * d[13] * d[31] * d[37] + d[10] * d[27] * d[38] + d[9] * d[28] * d[38] - 2 * d[12] * d[30] * d[38] - 2 * d[12] * d[29] * d[39] - 2 * d[11] * d[30] * d[39] + 2 * d[14] * d[31] * d[39] + 2 * d[13] * d[32] * d[39] - 2 * d[13] * d[28] * d[40] + 2 * d[14] * d[30] * d[40] - 2 * d[10] * d[31] * d[40] + 2 * d[12] * d[32] * d[40] - 2 * d[14] * d[27] * d[41] + 2 * d[13] * d[30] * d[41] + 2 * d[12] * d[31] * d[41] - 2 * d[9] * d[32] * d[41];
    coeffs[154] = d[20] * d[28] * d[36] + d[19] * d[29] * d[36] - 2 * d[23] * d[32] * d[36] + d[20] * d[27] * d[37] + d[18] * d[29] * d[37] - 2 * d[22] * d[31] * d[37] + d[19] * d[27] * d[38] + d[18] * d[28] * d[38] - 2 * d[21] * d[30] * d[38] - 2 * d[21] * d[29] * d[39] - 2 * d[20] * d[30] * d[39] + 2 * d[23] * d[31] * d[39] + 2 * d[22] * d[32] * d[39] - 2 * d[22] * d[28] * d[40] + 2 * d[23] * d[30] * d[40] - 2 * d[19] * d[31] * d[40] + 2 * d[21] * d[32] * d[40] - 2 * d[23] * d[27] * d[41] + 2 * d[22] * d[30] * d[41] + 2 * d[21] * d[31] * d[41] - 2 * d[18] * d[32] * d[41];
    coeffs[155] = d[28] * d[29] * d[36] - std::pow(d[32], 2) * d[36] + d[27] * d[29] * d[37] - std::pow(d[31], 2) * d[37] + d[27] * d[28] * d[38] - std::pow(d[30], 2) * d[38] - 2 * d[29] * d[30] * d[39] + 2 * d[31] * d[32] * d[39] - 2 * d[28] * d[31] * d[40] + 2 * d[30] * d[32] * d[40] + 2 * d[30] * d[31] * d[41] - 2 * d[27] * d[32] * d[41];
    coeffs[156] = d[11] * d[36] * d[37] + d[10] * d[36] * d[38] + d[9] * d[37] * d[38] - 2 * d[12] * d[38] * d[39] - d[11] * std::pow(d[39], 2) - 2 * d[13] * d[37] * d[40] + 2 * d[14] * d[39] * d[40] - d[10] * std::pow(d[40], 2) - 2 * d[14] * d[36] * d[41] + 2 * d[13] * d[39] * d[41] + 2 * d[12] * d[40] * d[41] - d[9] * std::pow(d[41], 2);
    coeffs[157] = d[20] * d[36] * d[37] + d[19] * d[36] * d[38] + d[18] * d[37] * d[38] - 2 * d[21] * d[38] * d[39] - d[20] * std::pow(d[39], 2) - 2 * d[22] * d[37] * d[40] + 2 * d[23] * d[39] * d[40] - d[19] * std::pow(d[40], 2) - 2 * d[23] * d[36] * d[41] + 2 * d[22] * d[39] * d[41] + 2 * d[21] * d[40] * d[41] - d[18] * std::pow(d[41], 2);
    coeffs[158] = d[29] * d[36] * d[37] + d[28] * d[36] * d[38] + d[27] * d[37] * d[38] - 2 * d[30] * d[38] * d[39] - d[29] * std::pow(d[39], 2) - 2 * d[31] * d[37] * d[40] + 2 * d[32] * d[39] * d[40] - d[28] * std::pow(d[40], 2) - 2 * d[32] * d[36] * d[41] + 2 * d[31] * d[39] * d[41] + 2 * d[30] * d[40] * d[41] - d[27] * std::pow(d[41], 2);
    coeffs[159] = d[36] * d[37] * d[38] - d[38] * std::pow(d[39], 2) - d[37] * std::pow(d[40], 2) + 2 * d[39] * d[40] * d[41] - d[36] * std::pow(d[41], 2);
    coeffs[160] = d[2] * d[9] * d[10] + d[1] * d[9] * d[11] + d[0] * d[10] * d[11] - 2 * d[3] * d[11] * d[12] - d[2] * std::pow(d[12], 2) - 2 * d[4] * d[10] * d[13] + 2 * d[5] * d[12] * d[13] - d[1] * std::pow(d[13], 2) - 2 * d[5] * d[9] * d[14] + 2 * d[4] * d[12] * d[14] + 2 * d[3] * d[13] * d[14] - d[0] * std::pow(d[14], 2);
    coeffs[161] = d[2] * d[10] * d[18] + d[1] * d[11] * d[18] - 2 * d[5] * d[14] * d[18] + d[2] * d[9] * d[19] + d[0] * d[11] * d[19] - 2 * d[4] * d[13] * d[19] + d[1] * d[9] * d[20] + d[0] * d[10] * d[20] - 2 * d[3] * d[12] * d[20] - 2 * d[3] * d[11] * d[21] - 2 * d[2] * d[12] * d[21] + 2 * d[5] * d[13] * d[21] + 2 * d[4] * d[14] * d[21] - 2 * d[4] * d[10] * d[22] + 2 * d[5] * d[12] * d[22] - 2 * d[1] * d[13] * d[22] + 2 * d[3] * d[14] * d[22] - 2 * d[5] * d[9] * d[23] + 2 * d[4] * d[12] * d[23] + 2 * d[3] * d[13] * d[23] - 2 * d[0] * d[14] * d[23];
    coeffs[162] = d[2] * d[18] * d[19] + d[1] * d[18] * d[20] + d[0] * d[19] * d[20] - 2 * d[3] * d[20] * d[21] - d[2] * std::pow(d[21], 2) - 2 * d[4] * d[19] * d[22] + 2 * d[5] * d[21] * d[22] - d[1] * std::pow(d[22], 2) - 2 * d[5] * d[18] * d[23] + 2 * d[4] * d[21] * d[23] + 2 * d[3] * d[22] * d[23] - d[0] * std::pow(d[23], 2);
    coeffs[163] = d[2] * d[10] * d[27] + d[1] * d[11] * d[27] - 2 * d[5] * d[14] * d[27] + d[2] * d[9] * d[28] + d[0] * d[11] * d[28] - 2 * d[4] * d[13] * d[28] + d[1] * d[9] * d[29] + d[0] * d[10] * d[29] - 2 * d[3] * d[12] * d[29] - 2 * d[3] * d[11] * d[30] - 2 * d[2] * d[12] * d[30] + 2 * d[5] * d[13] * d[30] + 2 * d[4] * d[14] * d[30] - 2 * d[4] * d[10] * d[31] + 2 * d[5] * d[12] * d[31] - 2 * d[1] * d[13] * d[31] + 2 * d[3] * d[14] * d[31] - 2 * d[5] * d[9] * d[32] + 2 * d[4] * d[12] * d[32] + 2 * d[3] * d[13] * d[32] - 2 * d[0] * d[14] * d[32];
    coeffs[164] = d[2] * d[19] * d[27] + d[1] * d[20] * d[27] - 2 * d[5] * d[23] * d[27] + d[2] * d[18] * d[28] + d[0] * d[20] * d[28] - 2 * d[4] * d[22] * d[28] + d[1] * d[18] * d[29] + d[0] * d[19] * d[29] - 2 * d[3] * d[21] * d[29] - 2 * d[3] * d[20] * d[30] - 2 * d[2] * d[21] * d[30] + 2 * d[5] * d[22] * d[30] + 2 * d[4] * d[23] * d[30] - 2 * d[4] * d[19] * d[31] + 2 * d[5] * d[21] * d[31] - 2 * d[1] * d[22] * d[31] + 2 * d[3] * d[23] * d[31] - 2 * d[5] * d[18] * d[32] + 2 * d[4] * d[21] * d[32] + 2 * d[3] * d[22] * d[32] - 2 * d[0] * d[23] * d[32];
    coeffs[165] = d[2] * d[27] * d[28] + d[1] * d[27] * d[29] + d[0] * d[28] * d[29] - 2 * d[3] * d[29] * d[30] - d[2] * std::pow(d[30], 2) - 2 * d[4] * d[28] * d[31] + 2 * d[5] * d[30] * d[31] - d[1] * std::pow(d[31], 2) - 2 * d[5] * d[27] * d[32] + 2 * d[4] * d[30] * d[32] + 2 * d[3] * d[31] * d[32] - d[0] * std::pow(d[32], 2);
    coeffs[166] = d[2] * d[10] * d[36] + d[1] * d[11] * d[36] - 2 * d[5] * d[14] * d[36] + d[2] * d[9] * d[37] + d[0] * d[11] * d[37] - 2 * d[4] * d[13] * d[37] + d[1] * d[9] * d[38] + d[0] * d[10] * d[38] - 2 * d[3] * d[12] * d[38] - 2 * d[3] * d[11] * d[39] - 2 * d[2] * d[12] * d[39] + 2 * d[5] * d[13] * d[39] + 2 * d[4] * d[14] * d[39] - 2 * d[4] * d[10] * d[40] + 2 * d[5] * d[12] * d[40] - 2 * d[1] * d[13] * d[40] + 2 * d[3] * d[14] * d[40] - 2 * d[5] * d[9] * d[41] + 2 * d[4] * d[12] * d[41] + 2 * d[3] * d[13] * d[41] - 2 * d[0] * d[14] * d[41];
    coeffs[167] = d[2] * d[19] * d[36] + d[1] * d[20] * d[36] - 2 * d[5] * d[23] * d[36] + d[2] * d[18] * d[37] + d[0] * d[20] * d[37] - 2 * d[4] * d[22] * d[37] + d[1] * d[18] * d[38] + d[0] * d[19] * d[38] - 2 * d[3] * d[21] * d[38] - 2 * d[3] * d[20] * d[39] - 2 * d[2] * d[21] * d[39] + 2 * d[5] * d[22] * d[39] + 2 * d[4] * d[23] * d[39] - 2 * d[4] * d[19] * d[40] + 2 * d[5] * d[21] * d[40] - 2 * d[1] * d[22] * d[40] + 2 * d[3] * d[23] * d[40] - 2 * d[5] * d[18] * d[41] + 2 * d[4] * d[21] * d[41] + 2 * d[3] * d[22] * d[41] - 2 * d[0] * d[23] * d[41];
    coeffs[168] = d[2] * d[28] * d[36] + d[1] * d[29] * d[36] - 2 * d[5] * d[32] * d[36] + d[2] * d[27] * d[37] + d[0] * d[29] * d[37] - 2 * d[4] * d[31] * d[37] + d[1] * d[27] * d[38] + d[0] * d[28] * d[38] - 2 * d[3] * d[30] * d[38] - 2 * d[3] * d[29] * d[39] - 2 * d[2] * d[30] * d[39] + 2 * d[5] * d[31] * d[39] + 2 * d[4] * d[32] * d[39] - 2 * d[4] * d[28] * d[40] + 2 * d[5] * d[30] * d[40] - 2 * d[1] * d[31] * d[40] + 2 * d[3] * d[32] * d[40] - 2 * d[5] * d[27] * d[41] + 2 * d[4] * d[30] * d[41] + 2 * d[3] * d[31] * d[41] - 2 * d[0] * d[32] * d[41];
    coeffs[169] = d[2] * d[36] * d[37] + d[1] * d[36] * d[38] + d[0] * d[37] * d[38] - 2 * d[3] * d[38] * d[39] - d[2] * std::pow(d[39], 2) - 2 * d[4] * d[37] * d[40] + 2 * d[5] * d[39] * d[40] - d[1] * std::pow(d[40], 2) - 2 * d[5] * d[36] * d[41] + 2 * d[4] * d[39] * d[41] + 2 * d[3] * d[40] * d[41] - d[0] * std::pow(d[41], 2);
    coeffs[170] = d[1] * d[2] * d[9] - std::pow(d[5], 2) * d[9] + d[0] * d[2] * d[10] - std::pow(d[4], 2) * d[10] + d[0] * d[1] * d[11] - std::pow(d[3], 2) * d[11] - 2 * d[2] * d[3] * d[12] + 2 * d[4] * d[5] * d[12] - 2 * d[1] * d[4] * d[13] + 2 * d[3] * d[5] * d[13] + 2 * d[3] * d[4] * d[14] - 2 * d[0] * d[5] * d[14];
    coeffs[171] = d[1] * d[2] * d[18] - std::pow(d[5], 2) * d[18] + d[0] * d[2] * d[19] - std::pow(d[4], 2) * d[19] + d[0] * d[1] * d[20] - std::pow(d[3], 2) * d[20] - 2 * d[2] * d[3] * d[21] + 2 * d[4] * d[5] * d[21] - 2 * d[1] * d[4] * d[22] + 2 * d[3] * d[5] * d[22] + 2 * d[3] * d[4] * d[23] - 2 * d[0] * d[5] * d[23];
    coeffs[172] = d[1] * d[2] * d[27] - std::pow(d[5], 2) * d[27] + d[0] * d[2] * d[28] - std::pow(d[4], 2) * d[28] + d[0] * d[1] * d[29] - std::pow(d[3], 2) * d[29] - 2 * d[2] * d[3] * d[30] + 2 * d[4] * d[5] * d[30] - 2 * d[1] * d[4] * d[31] + 2 * d[3] * d[5] * d[31] + 2 * d[3] * d[4] * d[32] - 2 * d[0] * d[5] * d[32];
    coeffs[173] = d[1] * d[2] * d[36] - std::pow(d[5], 2) * d[36] + d[0] * d[2] * d[37] - std::pow(d[4], 2) * d[37] + d[0] * d[1] * d[38] - std::pow(d[3], 2) * d[38] - 2 * d[2] * d[3] * d[39] + 2 * d[4] * d[5] * d[39] - 2 * d[1] * d[4] * d[40] + 2 * d[3] * d[5] * d[40] + 2 * d[3] * d[4] * d[41] - 2 * d[0] * d[5] * d[41];
    coeffs[174] = -1;
    coeffs[175] = d[0] * d[1] * d[2] - d[2] * std::pow(d[3], 2) - d[1] * std::pow(d[4], 2) + 2 * d[3] * d[4] * d[5] - d[0] * std::pow(d[5], 2);

    // Setup elimination template
    static const int coeffs0_ind[] = {0, 35, 1, 0, 35, 36, 70, 2, 1, 0, 35, 36, 37, 70, 71, 105, 3, 2, 1, 36, 37, 38, 71, 72, 106, 3, 2, 37, 38, 72, 73, 107, 3, 38, 73, 108, 0, 35, 70, 105, 4, 39, 1, 0, 35, 36, 70, 71, 105, 106, 5, 4, 39, 40, 2, 1, 0, 35, 36, 37, 70, 71, 74, 72, 105, 106, 107, 6, 5, 4, 39, 40, 41, 3, 2, 1, 36, 37, 38, 71, 74, 72, 75, 73, 106, 109, 107, 108, 6, 5, 40, 41, 3, 2, 37, 38, 72, 75, 73, 76, 107, 110, 108, 6, 41, 3, 38, 73, 76, 108, 111, 4, 39, 0, 35, 70, 74, 105, 109, 7, 42, 5, 4, 39, 40, 1, 0, 35, 36, 70, 71, 74, 75, 105, 106, 109, 110, 8, 7, 42, 43, 6, 5, 4, 39, 40, 41, 2, 1, 36, 37, 71, 74, 72, 75, 77, 76, 106, 109, 107, 110, 111, 8, 7, 42, 43, 6, 5, 40, 41, 3, 2, 37, 38, 72, 75, 77, 73, 76, 78, 107, 110, 112, 108, 111, 8, 43, 6, 41, 3, 38, 73, 76, 78, 108, 111, 113, 7, 42, 4, 39, 0, 35, 70, 74, 77, 105, 109, 112, 9, 44, 8, 7, 42, 43, 5, 4, 39, 40, 74, 1, 36, 71, 75, 77, 78, 106, 109, 110, 112, 113, 9, 44, 8, 7, 42, 43, 6, 5, 40, 41, 75, 2, 37, 72, 77, 76, 78, 79, 107, 110, 112, 111, 113, 9, 44, 8, 43, 6, 41, 76, 3, 38, 73, 78, 79, 108, 111, 113, 114, 0, 35, 70, 105, 10, 45, 1, 0, 35, 36, 70, 71, 105, 106, 11, 10, 45, 46, 2, 1, 0, 35, 36, 37, 70, 80, 71, 72, 105, 106, 107, 12, 11, 10, 45, 46, 47, 3, 2, 1, 36, 37, 38, 71, 80, 81, 72, 73, 106, 115, 107, 108, 12, 11, 46, 47, 3, 2, 37, 38, 72, 81, 82, 73, 107, 116, 108, 12, 47, 3, 38, 73, 82, 108, 117, 10, 45, 4, 39, 0, 35, 80, 70, 74, 105, 109, 115, 13, 48, 11, 10, 45, 46, 5, 4, 39, 40, 1, 35, 36, 0, 70, 80, 81, 71, 74, 75, 105, 106, 109, 115, 110, 116, 14, 13, 48, 49, 12, 11, 10, 45, 46, 47, 80, 6, 5, 4, 39, 40, 41, 2, 36, 37, 1, 71, 74, 81, 83, 82, 72, 75, 76, 106, 109, 115, 107, 110, 116, 111, 117, 14, 13, 48, 49, 12, 11, 46, 47, 81, 6, 5, 40, 41, 3, 37, 38, 2, 72, 75, 83, 82, 84, 73, 76, 107, 110, 116, 118, 108, 111, 117, 14, 49, 12, 47, 82, 6, 41, 38, 3, 73, 76, 84, 108, 111, 117, 119, 13, 48, 10, 45, 7, 42, 4, 39, 35, 0, 70, 80, 83, 74, 77, 105, 109, 115, 112, 118, 15, 50, 14, 13, 48, 49, 11, 10, 45, 46, 80, 8, 7, 42, 43, 5, 39, 40, 4, 74, 36, 1, 71, 81, 83, 84, 75, 77, 78, 106, 109, 115, 110, 116, 112, 118, 113, 119, 15, 50, 14, 13, 48, 49, 12, 11, 46, 47, 81, 83, 8, 7, 42, 43, 6, 40, 41, 5, 75, 37, 2, 72, 77, 82, 84, 85, 76, 78, 107, 110, 116, 112, 118, 111, 117, 113, 119, 15, 50, 14, 49, 12, 47, 82, 84, 8, 43, 41, 6, 76, 38, 3, 73, 78, 85, 108, 111, 117, 113, 119, 120, 10, 45, 0, 35, 70, 80, 105, 115, 16, 51, 11, 10, 45, 46, 1, 0, 35, 36, 70, 71, 80, 81, 105, 106, 115, 116, 17, 16, 51, 52, 12, 11, 10, 45, 46, 47, 80, 2, 1, 36, 37, 71, 72, 86, 81, 82, 106, 115, 107, 116, 117, 17, 16, 51, 52, 12, 11, 46, 47, 81, 3, 2, 37, 38, 72, 73, 86, 87, 82, 107, 116, 121, 108, 117, 17, 52, 12, 47, 82, 3, 38, 73, 87, 108, 117, 122, 16, 51, 13, 48, 10, 45, 4, 39, 35, 0, 70, 74, 86, 80, 83, 105, 109, 115, 118, 121, 18, 53, 17, 16, 51, 52, 14, 13, 48, 49, 11, 45, 46, 10, 80, 5, 4, 39, 40, 74, 36, 1, 71, 75, 86, 87, 81, 83, 84, 115, 106, 109, 110, 116, 118, 121, 119, 122, 18, 53, 17, 16, 51, 52, 86, 14, 13, 48, 49, 12, 46, 47, 11, 81, 83, 6, 5, 40, 41, 75, 37, 2, 72, 76, 87, 88, 82, 84, 116, 107, 110, 118, 121, 111, 117, 119, 122, 18, 53, 17, 52, 87, 14, 49, 47, 12, 82, 84, 6, 41, 76, 38, 3, 73, 88, 117, 108, 111, 119, 122, 123, 16, 51, 10, 45, 80, 35, 0, 70, 105, 86, 115, 121, 140, 19, 54, 17, 16, 51, 52, 11, 10, 45, 46, 80, 81, 36, 1, 71, 106, 86, 87, 115, 116, 121, 122, 141, 19, 54, 17, 16, 51, 52, 86, 12, 11, 46, 47, 81, 82, 37, 2, 72, 107, 89, 87, 116, 121, 117, 122, 142, 19, 54, 17, 52, 87, 12, 47, 82, 38, 3, 73, 108, 89, 117, 122, 124, 143, 0, 35, 1, 0, 35, 36, 70, 2, 1, 0, 35, 36, 37, 70, 71, 105, 3, 2, 1, 36, 37, 38, 71, 72, 106, 3, 2, 37, 38, 72, 73, 107, 3, 38, 73, 108, 0, 35, 70, 105, 4, 39, 1, 0, 35, 36, 70, 71, 105, 106, 5, 4, 39, 40, 2, 1, 35, 36, 37, 0, 70, 71, 74, 72, 105, 106, 107, 6, 5, 4, 39, 40, 41, 3, 2, 36, 37, 38, 1, 71, 74, 72, 75, 73, 106, 109, 107, 108, 6, 5, 40, 41, 3, 37, 38, 2, 72, 75, 73, 76, 107, 110, 108, 6, 41, 38, 3, 73, 76, 108, 111, 4, 39, 35, 0, 70, 74, 105, 109, 7, 42, 5, 4, 39, 40, 36, 0, 35, 70, 1, 71, 74, 75, 105, 106, 109, 110, 8, 7, 42, 43, 6, 5, 39, 40, 41, 4, 37, 1, 36, 71, 2, 74, 72, 75, 77, 76, 106, 109, 107, 110, 111, 8, 7, 42, 43, 6, 40, 41, 5, 38, 2, 37, 72, 3, 75, 77, 73, 76, 78, 107, 110, 112, 108, 111, 8, 43, 41, 6, 3, 38, 73, 76, 78, 108, 111, 113, 7, 42, 39, 4, 35, 70, 0, 74, 77, 105, 109, 112, 9, 44, 8, 7, 42, 43, 40, 4, 39, 74, 5, 36, 71, 1, 75, 77, 78, 106, 109, 110, 112, 113, 9, 44, 8, 42, 43, 7, 41, 5, 40, 75, 6, 37, 72, 2, 77, 76, 78, 79, 107, 110, 112, 111, 113, 9, 44, 43, 8, 6, 41, 76, 38, 73, 3, 78, 79, 108, 111, 113, 114, 35, 0, 70, 105, 20, 55, 10, 45, 36, 35, 0, 1, 70, 71, 105, 106, 21, 20, 55, 56, 11, 10, 45, 46, 37, 36, 0, 35, 1, 2, 70, 90, 80, 71, 72, 105, 106, 107, 22, 21, 20, 55, 56, 57, 12, 11, 10, 45, 46, 47, 38, 37, 1, 36, 2, 3, 71, 90, 91, 80, 125, 81, 72, 73, 106, 115, 107, 108, 22, 21, 56, 57, 12, 11, 46, 47, 38, 2, 37, 3, 72, 91, 92, 81, 126, 82, 73, 107, 116, 108, 22, 57, 12, 47, 3, 38, 73, 92, 82, 127, 108, 117, 20, 55, 10, 45, 39, 4, 35, 0, 90, 125, 80, 70, 74, 105, 109, 115, 23, 58, 21, 20, 55, 56, 13, 48, 11, 10, 45, 46, 40, 39, 4, 5, 36, 35, 0, 1, 70, 90, 91, 125, 126, 80, 81, 71, 74, 75, 105, 106, 109, 115, 110, 116, 24, 23, 58, 59, 22, 21, 20, 55, 56, 57, 90, 14, 13, 48, 49, 12, 11, 45, 46, 47, 10, 80, 41, 40, 4, 39, 5, 6, 37, 36, 1, 2, 71, 74, 91, 93, 92, 125, 126, 127, 81, 83, 82, 72, 75, 76, 106, 109, 115, 107, 110, 116, 111, 117, 24, 23, 58, 59, 22, 21, 56, 57, 91, 14, 13, 48, 49, 12, 46, 47, 11, 81, 41, 5, 40, 6, 38, 37, 2, 3, 72, 75, 93, 92, 94, 83, 126, 128, 127, 82, 84, 73, 76, 107, 110, 116, 118, 108, 111, 117, 24, 59, 22, 57, 92, 14, 49, 47, 12, 82, 6, 41, 38, 3, 73, 76, 94, 84, 127, 129, 108, 111, 117, 119, 23, 58, 20, 55, 13, 48, 45, 10, 42, 7, 39, 4, 35, 0, 70, 90, 93, 125, 128, 80, 83, 74, 77, 105, 109, 115, 112, 118, 140, 25, 60, 24, 23, 58, 59, 21, 20, 55, 56, 90, 15, 50, 14, 13, 48, 49, 46, 10, 45, 80, 11, 43, 42, 7, 8, 40, 39, 4, 5, 74, 36, 1, 71, 91, 93, 94, 125, 126, 128, 129, 81, 83, 84, 75, 77, 78, 106, 109, 115, 110, 116, 112, 118, 113, 119, 141, 25, 60, 24, 23, 58, 59, 22, 21, 56, 57, 91, 93, 15, 50, 14, 48, 49, 13, 47, 11, 46, 81, 12, 83, 43, 7, 42, 8, 41, 40, 5, 6, 75, 37, 2, 72, 77, 92, 94, 95, 126, 128, 127, 129, 82, 84, 85, 76, 78, 107, 110, 116, 112, 118, 111, 117, 113, 119, 142, 25, 60, 24, 59, 22, 57, 92, 94, 15, 50, 49, 14, 12, 47, 82, 84, 8, 43, 41, 6, 76, 38, 3, 73, 78, 95, 85, 127, 129, 130, 108, 111, 117, 113, 119, 120, 143, 25, 60, 23, 58, 20, 55, 90, 15, 50, 48, 13, 45, 80, 10, 44, 9, 42, 7, 39, 4, 74, 93, 95, 125, 128, 130, 83, 85, 115, 77, 79, 109, 112, 118, 114, 120, 144, 25, 60, 24, 23, 58, 59, 93, 21, 56, 91, 15, 50, 49, 13, 48, 83, 14, 46, 81, 11, 44, 9, 43, 42, 7, 8, 77, 40, 5, 75, 94, 95, 126, 128, 129, 130, 84, 85, 116, 78, 79, 110, 112, 118, 113, 119, 114, 120, 145, 25, 60, 24, 59, 94, 22, 57, 92, 95, 50, 15, 14, 49, 84, 47, 82, 12, 85, 9, 44, 43, 8, 78, 41, 6, 76, 79, 127, 129, 130, 117, 111, 113, 119, 114, 120, 146, 25, 60, 23, 58, 93, 50, 15, 48, 83, 13, 44, 9, 42, 7, 77, 95, 128, 130, 85, 118, 79, 112, 114, 120, 147, 25, 60, 95, 24, 59, 94, 15, 50, 85, 49, 84, 14, 44, 9, 79, 43, 8, 78, 129, 130, 119, 113, 114, 120, 148, 25, 60, 95, 50, 85, 15, 44, 9, 79, 130, 120, 114, 149, 20, 55, 45, 10, 35, 0, 70, 90, 125, 80, 105, 115, 140, 26, 61, 21, 20, 55, 56, 16, 51, 46, 45, 10, 11, 36, 35, 1, 70, 0, 71, 90, 91, 125, 126, 80, 81, 105, 106, 115, 116, 140, 141, 27, 26, 61, 62, 22, 21, 20, 55, 56, 57, 90, 17, 16, 51, 52, 47, 46, 10, 45, 11, 12, 80, 96, 37, 36, 2, 71, 1, 72, 91, 92, 125, 126, 127, 86, 81, 82, 106, 115, 107, 116, 117, 141, 142, 27, 26, 61, 62, 22, 21, 56, 57, 91, 17, 16, 51, 52, 47, 11, 46, 12, 81, 96, 97, 38, 37, 3, 72, 2, 86, 73, 92, 126, 131, 127, 87, 82, 107, 116, 121, 108, 117, 142, 143, 27, 62, 22, 57, 92, 17, 52, 12, 47, 82, 97, 38, 73, 3, 87, 127, 132, 108, 117, 122, 143, 26, 61, 23, 58, 20, 55, 16, 51, 48, 13, 45, 10, 96, 39, 4, 0, 70, 74, 90, 93, 125, 128, 131, 35, 86, 80, 83, 105, 109, 115, 118, 121, 140, 144, 28, 63, 27, 26, 61, 62, 24, 23, 58, 59, 21, 55, 56, 20, 90, 18, 53, 17, 16, 51, 52, 49, 48, 13, 14, 46, 45, 10, 11, 80, 96, 97, 40, 39, 5, 74, 4, 1, 71, 75, 91, 93, 94, 125, 126, 128, 131, 129, 132, 36, 86, 87, 81, 83, 84, 115, 106, 109, 110, 116, 118, 121, 119, 122, 141, 144, 145, 28, 63, 27, 26, 61, 62, 96, 24, 23, 58, 59, 22, 56, 57, 21, 91, 93, 18, 53, 17, 51, 52, 16, 86, 49, 13, 48, 14, 47, 46, 11, 12, 81, 83, 97, 98, 41, 40, 6, 75, 5, 2, 72, 76, 92, 94, 126, 128, 131, 127, 129, 132, 37, 87, 88, 82, 84, 116, 107, 110, 118, 121, 111, 117, 119, 122, 142, 145, 146, 28, 63, 27, 62, 97, 24, 59, 57, 22, 92, 94, 18, 53, 52, 17, 87, 14, 49, 47, 12, 82, 84, 98, 41, 76, 6, 3, 73, 88, 127, 129, 132, 133, 38, 117, 108, 111, 119, 122, 123, 143, 146, 28, 63, 26, 61, 25, 60, 23, 58, 55, 20, 90, 18, 53, 51, 16, 50, 15, 48, 13, 45, 10, 80, 96, 98, 42, 7, 4, 74, 77, 93, 95, 125, 128, 131, 130, 133, 39, 86, 88, 83, 85, 115, 109, 112, 118, 121, 120, 123, 144, 150, 147, 28, 63, 27, 26, 61, 62, 96, 25, 60, 24, 58, 59, 23, 93, 56, 21, 91, 18, 53, 52, 16, 51, 86, 17, 50, 15, 49, 48, 13, 14, 83, 46, 11, 81, 97, 98, 43, 42, 8, 77, 7, 5, 75, 78, 94, 95, 126, 128, 131, 129, 132, 130, 133, 40, 87, 88, 84, 85, 116, 118, 121, 110, 112, 113, 119, 122, 120, 123, 145, 151, 147, 148, 28, 63, 27, 62, 97, 98, 25, 60, 59, 24, 94, 57, 22, 92, 95, 53, 18, 17, 52, 87, 88, 15, 50, 49, 14, 84, 47, 12, 82, 85, 43, 78, 8, 6, 76, 127, 129, 132, 130, 133, 41, 117, 119, 122, 111, 113, 120, 123, 146, 152, 148, 28, 63, 26, 61, 96, 25, 60, 58, 23, 93, 53, 18, 51, 86, 16, 50, 15, 48, 13, 83, 98, 131, 44, 9, 7, 77, 79, 95, 128, 130, 133, 42, 88, 121, 85, 118, 112, 114, 120, 123, 147, 153, 149, 28, 63, 98, 27, 62, 97, 60, 25, 95, 59, 24, 94, 18, 53, 88, 52, 87, 17, 50, 15, 85, 49, 14, 84, 132, 44, 79, 9, 8, 78, 129, 130, 133, 43, 122, 119, 120, 123, 113, 114, 148, 154, 149, 28, 63, 98, 60, 25, 95, 53, 88, 18, 50, 15, 85, 133, 9, 79, 130, 44, 123, 120, 114, 149, 155, 26, 61, 20, 55, 90, 51, 16, 45, 10, 80, 96, 35, 0, 70, 105, 125, 131, 86, 115, 121, 140, 150, 29, 64, 27, 26, 61, 62, 21, 20, 55, 56, 90, 91, 19, 54, 52, 51, 16, 17, 46, 45, 11, 80, 10, 81, 96, 97, 36, 1, 71, 106, 125, 126, 131, 132, 86, 87, 115, 116, 121, 122, 141, 150, 151, 29, 64, 27, 26, 61, 62, 96, 22, 21, 56, 57, 91, 92, 19, 54, 52, 16, 51, 17, 86, 99, 47, 46, 12, 81, 11, 82, 97, 37, 2, 72, 107, 126, 131, 127, 132, 89, 87, 116, 121, 117, 122, 142, 151, 152, 29, 64, 27, 62, 97, 22, 57, 92, 19, 54, 17, 52, 87, 99, 47, 82, 12, 89, 38, 3, 73, 108, 127, 132, 134, 117, 122, 124, 143, 152, 29, 64, 28, 63, 26, 61, 23, 58, 55, 20, 90, 93, 19, 54, 53, 18, 51, 16, 99, 48, 13, 10, 80, 83, 96, 98, 39, 4, 74, 109, 125, 128, 131, 133, 134, 45, 89, 86, 88, 115, 118, 121, 123, 124, 144, 150, 153, 29, 64, 28, 63, 27, 61, 62, 26, 96, 24, 23, 58, 59, 93, 56, 21, 91, 94, 19, 54, 53, 18, 52, 51, 16, 17, 86, 99, 49, 48, 14, 83, 13, 11, 81, 84, 97, 98, 131, 40, 5, 75, 110, 126, 128, 129, 132, 133, 134, 46, 89, 87, 88, 121, 116, 118, 119, 122, 123, 124, 145, 151, 153, 154, 29, 64, 99, 28, 63, 62, 27, 97, 98, 24, 59, 94, 57, 22, 92, 54, 19, 89, 18, 53, 52, 17, 87, 88, 49, 84, 14, 12, 82, 132, 41, 6, 76, 111, 127, 129, 133, 134, 47, 122, 117, 119, 123, 124, 146, 152, 154, 29, 64, 28, 63, 61, 26, 96, 25, 60, 58, 23, 93, 95, 54, 19, 53, 18, 51, 16, 86, 99, 50, 15, 13, 83, 85, 98, 131, 42, 7, 77, 112, 128, 130, 133, 134, 48, 89, 88, 121, 118, 120, 123, 124, 147, 153, 156, 155, 29, 64, 99, 63, 28, 98, 62, 27, 97, 25, 60, 95, 59, 24, 94, 19, 54, 89, 53, 18, 88, 52, 17, 87, 50, 85, 15, 14, 84, 132, 133, 134, 43, 8, 78, 113, 129, 130, 49, 122, 123, 124, 119, 120, 148, 154, 157, 155, 29, 64, 99, 63, 28, 98, 60, 25, 95, 54, 89, 19, 53, 18, 88, 134, 15, 85, 133, 44, 9, 79, 114, 130, 50, 124, 123, 120, 149, 155, 158, 29, 64, 26, 61, 96, 55, 20, 90, 125, 54, 19, 51, 16, 86, 99, 45, 10, 80, 115, 131, 134, 89, 121, 124, 150, 160, 156, 29, 64, 27, 26, 61, 62, 96, 97, 56, 21, 91, 126, 54, 19, 52, 51, 17, 86, 16, 87, 99, 46, 11, 81, 116, 131, 132, 134, 89, 121, 122, 124, 151, 161, 156, 157, 29, 64, 99, 27, 62, 97, 57, 22, 92, 127, 19, 54, 89, 52, 87, 17, 47, 12, 82, 117, 132, 134, 122, 124, 152, 162, 157, 29, 64, 28, 63, 61, 26, 96, 98, 58, 23, 93, 128, 54, 19, 53, 18, 16, 86, 88, 99, 48, 13, 83, 118, 131, 133, 134, 51, 89, 121, 123, 124, 153, 163, 156, 158, 64, 29, 99, 28, 63, 98, 62, 27, 97, 59, 24, 94, 129, 54, 19, 89, 53, 88, 18, 17, 87, 134, 49, 14, 84, 119, 132, 133, 52, 124, 122, 123, 154, 164, 157, 158, 64, 29, 99, 63, 28, 98, 60, 25, 95, 130, 54, 19, 89, 18, 88, 134, 50, 15, 85, 120, 133, 53, 124, 123, 155, 165, 158, 159, 35, 0, 36, 35, 0, 1, 70, 37, 36, 1, 0, 2, 70, 71, 35, 105, 38, 37, 2, 1, 3, 71, 72, 36, 106, 38, 3, 2, 72, 73, 37, 107, 3, 73, 38, 108, 35, 0, 70, 105, 39, 4, 36, 0, 35, 70, 1, 71, 105, 106, 40, 39, 4, 5, 37, 1, 36, 0, 70, 71, 74, 2, 72, 105, 106, 35, 107, 41, 40, 5, 4, 6, 74, 38, 2, 37, 1, 71, 72, 75, 3, 73, 39, 106, 109, 107, 36, 108, 41, 6, 5, 75, 3, 38, 2, 72, 73, 76, 40, 107, 110, 108, 37, 6, 76, 3, 73, 41, 108, 111, 38, 39, 0, 70, 4, 74, 105, 109, 35, 42, 7, 40, 4, 39, 74, 1, 70, 35, 71, 5, 75, 0, 105, 106, 109, 110, 36, 43, 42, 7, 8, 41, 5, 40, 4, 74, 75, 2, 71, 36, 72, 77, 6, 76, 1, 106, 109, 107, 110, 39, 111, 37, 43, 8, 7, 77, 6, 41, 5, 75, 76, 3, 72, 37, 73, 78, 42, 2, 107, 110, 112, 108, 111, 40, 38, 8, 78, 6, 76, 73, 38, 43, 3, 108, 111, 113, 41, 42, 4, 74, 0, 70, 35, 7, 77, 105, 109, 112, 39, 44, 9, 43, 7, 42, 77, 5, 74, 39, 75, 1, 71, 36, 8, 78, 4, 106, 109, 110, 112, 113, 40, 44, 9, 8, 43, 7, 77, 78, 6, 75, 40, 76, 79, 2, 72, 37, 5, 107, 110, 112, 111, 113, 42, 41, 9, 79, 8, 78, 76, 41, 3, 73, 38, 44, 6, 108, 111, 113, 114, 43, 35, 0, 70, 105, 140, 20, 55, 45, 10, 36, 35, 0, 1, 70, 71, 105, 106, 141, 140, 21, 20, 55, 56, 46, 45, 10, 11, 80, 37, 36, 0, 70, 1, 2, 71, 90, 72, 35, 105, 106, 107, 140, 142, 141, 22, 21, 20, 55, 56, 57, 90, 47, 46, 11, 10, 12, 80, 81, 38, 37, 1, 71, 2, 3, 72, 91, 73, 45, 125, 36, 115, 106, 107, 108, 141, 143, 142, 22, 21, 56, 57, 91, 47, 12, 11, 81, 82, 38, 2, 72, 3, 73, 92, 46, 126, 37, 116, 107, 108, 142, 143, 22, 57, 92, 12, 82, 3, 73, 47, 127, 38, 117, 108, 143, 20, 55, 45, 10, 39, 0, 70, 4, 74, 90, 80, 125, 105, 35, 109, 115, 144, 140, 23, 58, 21, 20, 55, 56, 48, 13, 46, 10, 45, 80, 11, 40, 39, 4, 1, 70, 35, 71, 5, 74, 90, 75, 91, 81, 125, 126, 105, 0, 106, 109, 36, 115, 110, 116, 140, 145, 144, 141, 24, 23, 58, 59, 22, 21, 55, 56, 57, 20, 90, 49, 48, 13, 14, 47, 11, 46, 10, 80, 81, 83, 12, 41, 40, 4, 74, 5, 2, 71, 36, 72, 6, 75, 91, 93, 76, 92, 82, 125, 126, 127, 39, 115, 106, 1, 109, 107, 110, 37, 116, 45, 111, 117, 141, 144, 146, 145, 142, 24, 23, 58, 59, 22, 56, 57, 21, 91, 93, 49, 14, 13, 83, 12, 47, 11, 81, 82, 84, 41, 5, 75, 6, 3, 72, 37, 73, 76, 92, 94, 48, 126, 128, 127, 40, 116, 118, 107, 2, 110, 108, 111, 38, 117, 46, 142, 145, 146, 143, 24, 59, 57, 22, 92, 94, 14, 84, 12, 82, 6, 76, 73, 38, 49, 127, 129, 41, 117, 119, 108, 3, 111, 47, 143, 146, 23, 58, 55, 20, 48, 10, 80, 13, 42, 4, 74, 7, 70, 0, 35, 90, 77, 93, 83, 125, 128, 105, 109, 115, 39, 112, 118, 45, 140, 147, 144, 25, 60, 24, 23, 58, 59, 56, 20, 55, 90, 21, 50, 15, 49, 13, 48, 83, 11, 80, 45, 81, 14, 43, 42, 7, 5, 74, 39, 75, 8, 71, 1, 36, 91, 77, 93, 78, 94, 84, 125, 10, 126, 128, 129, 106, 115, 109, 4, 110, 116, 112, 40, 118, 113, 119, 46, 141, 144, 148, 147, 145, 25, 60, 24, 58, 59, 23, 57, 21, 56, 91, 22, 93, 50, 15, 14, 49, 13, 83, 84, 12, 81, 46, 82, 85, 43, 7, 77, 8, 6, 75, 40, 76, 72, 2, 37, 92, 78, 94, 95, 126, 11, 128, 127, 129, 107, 42, 116, 118, 110, 5, 112, 111, 117, 113, 41, 119, 48, 47, 142, 145, 147, 148, 146, 25, 60, 59, 24, 22, 57, 92, 94, 95, 15, 85, 14, 84, 82, 47, 8, 78, 76, 41, 73, 3, 38, 127, 50, 12, 129, 130, 108, 43, 117, 119, 120, 111, 6, 113, 49, 143, 146, 148, 25, 60, 58, 23, 55, 90, 20, 50, 13, 83, 10, 80, 45, 15, 44, 7, 77, 9, 74, 4, 39, 93, 79, 95, 125, 85, 128, 130, 109, 115, 112, 118, 42, 114, 120, 48, 144, 149, 147, 25, 60, 59, 23, 58, 93, 24, 56, 91, 21, 15, 50, 85, 14, 83, 48, 84, 11, 81, 46, 44, 9, 8, 77, 42, 78, 75, 5, 40, 94, 79, 95, 126, 128, 13, 129, 130, 110, 116, 118, 112, 7, 113, 119, 114, 43, 120, 49, 145, 147, 149, 148, 60, 25, 24, 59, 94, 57, 92, 22, 95, 15, 85, 84, 49, 12, 82, 47, 9, 79, 78, 43, 76, 6, 41, 127, 129, 14, 130, 111, 44, 117, 119, 120, 113, 8, 114, 50, 146, 148, 149, 60, 25, 58, 93, 23, 15, 85, 13, 83, 48, 9, 79, 77, 7, 42, 95, 128, 130, 112, 118, 114, 120, 44, 50, 147, 149, 25, 60, 95, 59, 94, 24, 85, 50, 14, 84, 49, 79, 44, 78, 8, 43, 129, 130, 15, 113, 119, 120, 114, 9, 148, 149, 60, 95, 25, 15, 85, 50, 79, 9, 44, 130, 114, 120, 149, 55, 20, 45, 10, 80, 70, 0, 90, 125, 35, 105, 115, 150, 140, 30, 65, 26, 61, 56, 55, 20, 21, 51, 16, 46, 45, 10, 11, 80, 81, 71, 35, 0, 70, 90, 1, 91, 125, 126, 105, 36, 106, 115, 116, 140, 151, 150, 141, 31, 30, 65, 66, 27, 26, 61, 62, 57, 56, 20, 55, 21, 22, 90, 100, 52, 51, 16, 17, 86, 47, 46, 10, 80, 11, 12, 81, 96, 82, 72, 36, 1, 71, 91, 2, 92, 125, 126, 127, 45, 106, 115, 37, 107, 116, 117, 141, 150, 152, 151, 142, 31, 30, 65, 66, 27, 26, 61, 62, 57, 21, 56, 22, 91, 100, 101, 96, 135, 52, 17, 16, 86, 87, 47, 11, 81, 12, 82, 97, 73, 37, 2, 72, 92, 3, 51, 126, 131, 127, 46, 121, 107, 116, 38, 108, 117, 142, 151, 152, 143, 31, 66, 27, 62, 22, 57, 92, 101, 97, 136, 17, 87, 12, 82, 38, 3, 73, 52, 127, 132, 47, 122, 108, 117, 143, 152, 30, 65, 26, 61, 58, 23, 55, 20, 100, 135, 51, 16, 48, 10, 80, 13, 83, 96, 74, 90, 35, 0, 70, 4, 93, 86, 125, 128, 131, 105, 39, 109, 115, 45, 118, 121, 140, 153, 150, 144, 32, 67, 31, 30, 65, 66, 28, 63, 27, 26, 61, 62, 59, 58, 23, 24, 56, 55, 20, 21, 90, 100, 101, 135, 136, 53, 18, 52, 16, 51, 86, 17, 49, 48, 13, 11, 80, 45, 81, 14, 83, 96, 84, 97, 75, 39, 4, 74, 91, 36, 1, 71, 93, 5, 94, 87, 125, 126, 128, 131, 129, 132, 106, 109, 115, 10, 40, 110, 116, 118, 46, 121, 119, 122, 141, 144, 150, 154, 153, 151, 145, 32, 67, 31, 30, 65, 66, 100, 28, 63, 27, 61, 62, 26, 96, 59, 23, 58, 24, 57, 56, 21, 22, 91, 93, 101, 102, 135, 136, 53, 18, 17, 52, 16, 86, 87, 88, 49, 13, 83, 14, 12, 81, 46, 82, 84, 97, 98, 76, 40, 5, 75, 92, 37, 2, 72, 94, 6, 126, 128, 131, 127, 129, 132, 107, 48, 121, 110, 116, 11, 118, 41, 111, 117, 119, 47, 122, 51, 142, 145, 151, 153, 154, 152, 146, 32, 67, 31, 66, 101, 28, 63, 62, 27, 97, 24, 59, 57, 22, 92, 94, 102, 98, 136, 137, 18, 88, 17, 87, 14, 84, 82, 47, 41, 6, 76, 38, 3, 73, 127, 53, 129, 132, 133, 108, 49, 122, 123, 111, 117, 12, 119, 52, 143, 146, 152, 154, 32, 67, 30, 65, 28, 63, 61, 26, 60, 25, 58, 23, 55, 20, 90, 100, 102, 135, 137, 53, 16, 86, 18, 50, 13, 83, 15, 80, 10, 45, 96, 85, 98, 77, 93, 39, 4, 74, 7, 95, 88, 125, 128, 131, 130, 133, 109, 115, 42, 112, 118, 121, 48, 120, 123, 51, 144, 150, 160, 155, 153, 147, 32, 67, 31, 30, 65, 66, 100, 28, 63, 62, 26, 61, 96, 27, 60, 25, 59, 58, 23, 24, 93, 56, 21, 91, 101, 102, 135, 136, 137, 18, 53, 88, 17, 86, 51, 87, 50, 15, 14, 83, 48, 84, 81, 11, 46, 97, 85, 98, 78, 42, 7, 77, 94, 40, 5, 75, 95, 8, 126, 128, 131, 16, 129, 132, 130, 133, 110, 116, 121, 112, 118, 13, 43, 113, 119, 122, 120, 49, 123, 52, 145, 151, 161, 147, 153, 155, 154, 148, 32, 67, 31, 66, 101, 102, 63, 28, 27, 62, 97, 98, 25, 60, 59, 24, 94, 57, 22, 92, 95, 136, 137, 18, 88, 87, 52, 15, 85, 84, 49, 82, 12, 47, 43, 8, 78, 41, 6, 76, 127, 129, 132, 17, 130, 133, 111, 117, 50, 122, 123, 113, 119, 14, 120, 53, 146, 152, 162, 148, 154, 155, 32, 67, 30, 65, 100, 63, 28, 61, 96, 26, 60, 25, 58, 23, 93, 102, 135, 137, 18, 88, 16, 86, 51, 15, 85, 83, 13, 48, 98, 131, 79, 95, 42, 7, 77, 9, 128, 130, 133, 112, 118, 121, 44, 114, 120, 123, 50, 53, 147, 153, 163, 155, 149, 32, 67, 102, 31, 66, 101, 28, 63, 98, 62, 97, 27, 60, 25, 95, 59, 24, 94, 136, 137, 88, 53, 17, 87, 52, 85, 50, 84, 14, 49, 132, 44, 9, 79, 43, 8, 78, 129, 130, 133, 18, 113, 119, 122, 123, 114, 120, 15, 148, 154, 164, 149, 155, 32, 67, 102, 63, 98, 28, 60, 25, 95, 137, 18, 88, 53, 85, 15, 50, 133, 44, 9, 79, 130, 114, 120, 123, 149, 155, 165, 30, 65, 61, 26, 55, 20, 90, 100, 135, 51, 16, 86, 80, 10, 96, 35, 105, 125, 131, 0, 70, 45, 115, 121, 140, 156, 160, 150, 33, 68, 31, 30, 65, 66, 29, 64, 62, 61, 26, 27, 56, 55, 21, 90, 20, 91, 100, 101, 135, 136, 54, 19, 52, 51, 16, 17, 86, 87, 81, 45, 10, 80, 96, 11, 97, 36, 106, 125, 126, 131, 132, 115, 1, 71, 46, 116, 121, 122, 141, 150, 160, 157, 156, 161, 151, 33, 68, 31, 30, 65, 66, 100, 29, 64, 62, 26, 61, 27, 96, 103, 57, 56, 22, 91, 21, 92, 101, 135, 136, 54, 19, 89, 52, 16, 86, 17, 87, 99, 82, 46, 11, 81, 97, 12, 37, 107, 126, 131, 127, 132, 51, 116, 2, 121, 72, 47, 117, 122, 142, 151, 161, 156, 157, 162, 152, 33, 68, 31, 66, 101, 29, 64, 27, 62, 97, 103, 57, 92, 22, 99, 136, 138, 19, 89, 17, 87, 47, 12, 82, 38, 108, 54, 127, 132, 134, 52, 124, 117, 3, 122, 73, 143, 152, 162, 157, 33, 68, 32, 67, 30, 65, 29, 64, 63, 28, 61, 26, 103, 58, 23, 20, 90, 93, 100, 102, 135, 137, 138, 54, 19, 53, 55, 16, 86, 18, 88, 99, 83, 96, 45, 10, 80, 13, 98, 89, 39, 109, 125, 128, 131, 133, 134, 115, 4, 74, 48, 118, 121, 51, 123, 124, 144, 150, 160, 158, 156, 163, 153, 33, 68, 32, 67, 31, 65, 66, 30, 100, 29, 64, 63, 28, 62, 61, 26, 27, 96, 103, 59, 58, 24, 93, 23, 21, 91, 94, 101, 102, 135, 136, 137, 138, 19, 54, 89, 53, 18, 56, 17, 86, 51, 87, 88, 99, 84, 48, 13, 83, 97, 46, 11, 81, 98, 14, 131, 40, 110, 126, 128, 129, 132, 133, 134, 116, 118, 5, 121, 16, 75, 49, 119, 122, 123, 52, 124, 145, 151, 161, 153, 163, 156, 158, 157, 164, 154, 33, 68, 103, 32, 67, 66, 31, 101, 102, 64, 29, 99, 28, 63, 62, 27, 97, 98, 59, 94, 24, 22, 92, 136, 137, 138, 19, 89, 18, 88, 57, 87, 52, 49, 14, 84, 47, 12, 82, 132, 41, 111, 127, 129, 133, 134, 117, 53, 124, 119, 6, 122, 17, 123, 76, 54, 146, 152, 162, 154, 164, 157, 158, 33, 68, 32, 67, 65, 30, 100, 64, 29, 63, 28, 61, 26, 96, 103, 60, 25, 23, 93, 95, 102, 135, 137, 138, 19, 89, 58, 18, 88, 86, 16, 51, 99, 85, 98, 48, 13, 83, 15, 131, 42, 112, 128, 130, 133, 134, 118, 121, 7, 77, 50, 120, 123, 124, 53, 54, 147, 153, 163, 156, 166, 158, 165, 155, 33, 68, 103, 67, 32, 102, 66, 31, 101, 29, 64, 99, 63, 28, 98, 62, 27, 97, 60, 95, 25, 24, 94, 136, 137, 138, 89, 54, 59, 88, 53, 87, 17, 52, 50, 15, 85, 49, 14, 84, 132, 133, 134, 43, 113, 19, 129, 130, 119, 122, 124, 120, 8, 123, 18, 78, 148, 154, 164, 157, 167, 155, 165, 158, 33, 68, 103, 67, 32, 102, 64, 99, 29, 63, 28, 98, 138, 25, 95, 137, 19, 89, 54, 60, 88, 18, 53, 134, 50, 15, 85, 133, 44, 114, 130, 120, 123, 124, 9, 79, 149, 155, 165, 158, 168, 33, 68, 30, 65, 100, 64, 29, 61, 26, 96, 103, 55, 20, 90, 125, 135, 138, 54, 19, 89, 86, 16, 99, 45, 115, 131, 134, 10, 80, 51, 121, 124, 150, 160, 159, 166, 156, 33, 68, 31, 30, 65, 66, 100, 101, 64, 29, 62, 61, 27, 96, 26, 97, 103, 56, 21, 91, 126, 135, 136, 138, 54, 19, 89, 87, 51, 16, 86, 99, 17, 46, 116, 131, 132, 134, 121, 11, 81, 52, 122, 124, 151, 161, 156, 166, 159, 167, 157, 33, 68, 103, 31, 66, 101, 29, 64, 99, 62, 97, 27, 57, 22, 92, 127, 136, 138, 19, 89, 52, 17, 87, 47, 117, 132, 134, 54, 122, 12, 124, 82, 152, 162, 157, 167, 159, 33, 68, 32, 67, 65, 30, 100, 102, 64, 29, 63, 28, 26, 96, 98, 103, 58, 23, 93, 128, 135, 137, 138, 61, 19, 89, 88, 99, 51, 16, 86, 18, 48, 118, 131, 133, 134, 121, 13, 83, 53, 123, 124, 54, 153, 163, 156, 166, 159, 168, 158, 68, 33, 103, 32, 67, 102, 66, 31, 101, 64, 29, 99, 63, 98, 28, 27, 97, 138, 59, 24, 94, 129, 136, 137, 62, 89, 54, 53, 18, 88, 52, 17, 87, 134, 49, 119, 132, 133, 122, 123, 14, 124, 19, 84, 154, 164, 157, 167, 158, 168, 159, 68, 33, 103, 67, 32, 102, 64, 29, 99, 28, 98, 138, 60, 25, 95, 130, 137, 63, 89, 19, 54, 53, 18, 88, 134, 50, 120, 133, 123, 124, 15, 85, 155, 165, 158, 168, 159, 169, 70, 0, 35, 105, 140, 55, 20, 71, 70, 35, 1, 0, 36, 105, 106, 140, 141, 56, 55, 20, 21, 90, 72, 71, 36, 70, 35, 2, 1, 105, 37, 106, 107, 0, 140, 141, 142, 57, 56, 21, 20, 22, 90, 91, 55, 73, 72, 37, 71, 36, 3, 2, 106, 125, 38, 107, 108, 1, 141, 142, 143, 57, 22, 21, 91, 92, 56, 73, 38, 72, 37, 3, 107, 126, 108, 2, 142, 143, 22, 92, 57, 73, 38, 108, 127, 3, 143, 55, 20, 90, 74, 4, 39, 125, 105, 70, 35, 0, 109, 140, 144, 58, 23, 56, 20, 55, 90, 21, 91, 75, 74, 39, 5, 0, 4, 105, 35, 70, 40, 125, 126, 106, 71, 36, 109, 1, 110, 140, 141, 144, 145, 59, 58, 23, 24, 57, 21, 56, 20, 90, 91, 93, 22, 92, 76, 75, 40, 74, 39, 6, 1, 5, 106, 36, 109, 125, 71, 41, 126, 55, 127, 107, 72, 37, 110, 2, 111, 4, 141, 144, 142, 145, 146, 59, 24, 23, 93, 22, 57, 21, 91, 92, 94, 58, 76, 41, 75, 40, 2, 6, 107, 37, 110, 126, 128, 72, 127, 56, 108, 73, 38, 111, 3, 5, 142, 145, 143, 146, 24, 94, 22, 92, 59, 76, 41, 3, 108, 38, 111, 127, 129, 73, 57, 6, 143, 146, 58, 20, 90, 23, 93, 77, 7, 0, 105, 70, 42, 125, 128, 55, 109, 74, 39, 4, 112, 35, 140, 144, 147, 60, 25, 59, 23, 58, 93, 21, 90, 55, 91, 24, 94, 20, 78, 77, 42, 8, 4, 7, 1, 106, 71, 109, 39, 125, 74, 43, 126, 128, 129, 56, 110, 75, 40, 112, 5, 113, 36, 141, 144, 145, 147, 148, 60, 25, 24, 59, 23, 93, 94, 22, 91, 56, 92, 95, 21, 78, 43, 77, 42, 5, 8, 2, 107, 72, 110, 40, 126, 112, 128, 75, 127, 129, 58, 57, 111, 76, 41, 113, 6, 7, 37, 142, 145, 147, 146, 148, 25, 95, 24, 94, 92, 57, 60, 22, 78, 43, 6, 3, 108, 73, 111, 41, 127, 113, 129, 130, 76, 59, 8, 38, 143, 146, 148, 60, 23, 93, 20, 90, 55, 25, 95, 79, 9, 4, 109, 74, 125, 44, 128, 130, 58, 112, 77, 42, 7, 114, 39, 144, 147, 149, 25, 60, 95, 24, 93, 58, 94, 21, 91, 56, 23, 79, 44, 7, 9, 5, 110, 75, 126, 112, 42, 128, 77, 129, 130, 59, 113, 78, 43, 114, 8, 40, 145, 147, 148, 149, 25, 95, 94, 59, 22, 92, 57, 24, 79, 44, 8, 6, 111, 76, 127, 113, 43, 129, 114, 130, 78, 60, 9, 41, 146, 148, 149, 25, 95, 23, 93, 58, 7, 112, 77, 128, 130, 60, 114, 79, 44, 9, 42, 147, 149, 95, 60, 24, 94, 59, 25, 9, 8, 113, 78, 129, 114, 44, 130, 79, 43, 148, 149, 25, 95, 60, 9, 114, 79, 130, 44, 149, 55, 20, 90, 80, 10, 70, 35, 45, 105, 125, 115, 0, 160, 140, 150, 30, 65, 61, 26, 56, 55, 20, 21, 90, 91, 81, 80, 45, 11, 10, 0, 70, 105, 71, 36, 46, 106, 125, 126, 35, 115, 116, 1, 140, 161, 160, 150, 141, 151, 31, 30, 65, 66, 62, 61, 26, 27, 96, 57, 56, 20, 90, 21, 22, 91, 100, 92, 82, 81, 46, 80, 45, 12, 11, 55, 115, 1, 71, 106, 125, 72, 37, 47, 107, 126, 127, 36, 116, 117, 10, 2, 141, 150, 160, 162, 161, 151, 142, 152, 31, 30, 65, 66, 100, 62, 27, 26, 96, 97, 57, 21, 91, 22, 92, 101, 61, 135, 82, 47, 81, 46, 12, 56, 116, 131, 2, 72, 107, 126, 73, 38, 108, 127, 37, 117, 11, 3, 142, 151, 161, 162, 152, 143, 31, 66, 101, 27, 97, 22, 92, 62, 136, 82, 47, 57, 117, 132, 3, 73, 108, 127, 38, 12, 143, 152, 162, 30, 65, 61, 26, 58, 20, 90, 23, 93, 100, 96, 135, 83, 13, 70, 0, 105, 74, 39, 48, 109, 125, 55, 128, 131, 115, 80, 45, 10, 35, 118, 4, 140, 163, 160, 150, 144, 153, 32, 67, 31, 30, 65, 66, 63, 28, 62, 26, 61, 96, 27, 59, 58, 23, 21, 90, 55, 91, 24, 93, 100, 94, 101, 97, 135, 136, 84, 83, 48, 14, 10, 13, 115, 45, 4, 74, 109, 71, 1, 106, 125, 20, 75, 80, 40, 49, 110, 126, 128, 56, 131, 129, 132, 39, 116, 81, 46, 118, 11, 36, 119, 5, 141, 144, 150, 160, 164, 163, 161, 151, 153, 145, 154, 32, 67, 31, 65, 66, 30, 100, 63, 28, 27, 62, 26, 96, 97, 98, 59, 23, 93, 24, 22, 91, 56, 92, 94, 101, 102, 135, 136, 84, 49, 83, 48, 11, 14, 58, 116, 46, 118, 131, 5, 75, 110, 72, 2, 107, 126, 21, 128, 76, 81, 41, 111, 127, 129, 57, 132, 61, 40, 117, 82, 47, 119, 12, 37, 13, 6, 142, 145, 151, 161, 153, 163, 164, 162, 152, 154, 146, 32, 67, 66, 31, 101, 102, 28, 98, 27, 97, 24, 94, 92, 57, 63, 136, 137, 84, 49, 12, 59, 117, 47, 119, 132, 133, 6, 76, 111, 73, 3, 108, 127, 22, 129, 82, 62, 41, 38, 14, 143, 146, 152, 162, 154, 164, 32, 67, 65, 30, 63, 26, 96, 28, 60, 23, 93, 25, 90, 20, 55, 100, 95, 102, 98, 135, 137, 85, 15, 125, 10, 115, 80, 74, 4, 109, 77, 42, 50, 112, 128, 131, 58, 130, 133, 61, 118, 83, 48, 13, 39, 120, 7, 45, 144, 150, 160, 165, 163, 153, 147, 155, 32, 67, 66, 30, 65, 100, 31, 28, 63, 98, 27, 96, 61, 97, 60, 25, 24, 93, 58, 94, 91, 21, 56, 101, 95, 102, 135, 26, 136, 137, 85, 50, 13, 15, 126, 11, 116, 81, 118, 48, 131, 7, 77, 112, 75, 5, 110, 128, 23, 78, 83, 43, 113, 129, 132, 130, 59, 133, 62, 42, 119, 84, 49, 120, 14, 40, 8, 46, 145, 151, 161, 147, 153, 163, 165, 164, 154, 155, 148, 67, 32, 31, 66, 101, 102, 28, 98, 97, 62, 25, 95, 94, 59, 92, 22, 57, 136, 27, 137, 85, 50, 14, 127, 60, 12, 117, 82, 119, 49, 132, 120, 133, 8, 78, 113, 76, 6, 111, 129, 24, 130, 84, 63, 43, 41, 15, 47, 146, 152, 162, 148, 154, 164, 155, 165, 67, 32, 65, 100, 30, 28, 98, 26, 96, 61, 25, 95, 93, 23, 58, 102, 135, 137, 128, 13, 118, 83, 131, 77, 7, 112, 79, 44, 114, 130, 133, 60, 63, 120, 85, 50, 15, 42, 9, 48, 147, 153, 163, 165, 155, 149, 32, 67, 102, 66, 101, 31, 98, 63, 27, 97, 62, 95, 60, 94, 24, 59, 136, 137, 28, 15, 129, 14, 119, 84, 132, 120, 50, 133, 9, 79, 114, 78, 8, 113, 130, 25, 85, 44, 43, 49, 148, 154, 164, 149, 155, 165, 67, 102, 32, 28, 98, 63, 95, 25, 60, 137, 130, 15, 120, 85, 133, 79, 9, 114, 44, 50, 149, 155, 165, 65, 30, 61, 26, 96, 90, 20, 100, 135, 86, 16, 80, 45, 51, 70, 35, 105, 55, 115, 125, 131, 0, 121, 10, 140, 166, 160, 150, 156, 34, 69, 33, 68, 66, 65, 30, 31, 64, 29, 62, 61, 26, 27, 96, 97, 91, 55, 20, 90, 100, 21, 101, 135, 136, 87, 86, 51, 17, 16, 125, 10, 80, 115, 81, 46, 52, 71, 36, 106, 56, 116, 126, 131, 132, 45, 121, 1, 122, 11, 141, 150, 160, 167, 166, 161, 156, 151, 157, 34, 69, 33, 68, 66, 30, 65, 31, 100, 104, 64, 29, 99, 62, 26, 96, 27, 97, 103, 92, 56, 21, 91, 101, 22, 135, 136, 87, 52, 86, 51, 17, 61, 121, 126, 11, 81, 116, 131, 82, 47, 72, 37, 107, 57, 117, 127, 132, 46, 122, 2, 16, 12, 142, 151, 161, 156, 166, 167, 162, 157, 152, 34, 69, 33, 68, 31, 66, 101, 104, 103, 139, 29, 99, 27, 97, 57, 22, 92, 64, 136, 138, 87, 52, 62, 122, 134, 127, 12, 82, 117, 132, 73, 38, 108, 47, 3, 17, 143, 152, 162, 157, 167, 34, 69, 33, 68, 67, 32, 65, 30, 104, 139, 64, 29, 63, 26, 96, 28, 98, 103, 93, 100, 55, 20, 90, 23, 102, 99, 135, 137, 138, 88, 18, 125, 80, 10, 115, 83, 48, 53, 74, 39, 109, 58, 118, 128, 131, 61, 133, 134, 121, 86, 51, 16, 45, 4, 123, 13, 144, 150, 160, 168, 166, 156, 163, 153, 158, 34, 69, 33, 68, 67, 32, 66, 65, 30, 31, 100, 104, 139, 29, 64, 99, 63, 28, 27, 96, 61, 97, 98, 103, 94, 58, 23, 93, 101, 56, 21, 91, 102, 24, 135, 136, 137, 138, 88, 53, 126, 16, 18, 121, 51, 128, 13, 83, 118, 81, 11, 116, 131, 26, 84, 86, 49, 75, 40, 110, 59, 119, 129, 132, 133, 62, 134, 48, 122, 87, 52, 123, 17, 46, 5, 14, 145, 151, 161, 153, 163, 156, 166, 168, 167, 157, 164, 158, 154, 34, 69, 104, 68, 33, 103, 32, 67, 66, 31, 101, 102, 139, 29, 99, 28, 98, 97, 62, 59, 24, 94, 57, 22, 92, 136, 137, 138, 88, 53, 127, 17, 63, 122, 52, 123, 134, 129, 14, 84, 119, 82, 12, 117, 132, 27, 133, 87, 76, 41, 111, 64, 49, 47, 6, 18, 146, 152, 162, 154, 164, 157, 167, 158, 168, 34, 69, 68, 33, 67, 32, 65, 30, 100, 104, 139, 29, 99, 28, 98, 96, 26, 61, 103, 95, 102, 58, 23, 93, 25, 135, 137, 138, 128, 131, 16, 121, 86, 83, 13, 118, 85, 50, 77, 42, 112, 60, 120, 130, 133, 134, 63, 64, 123, 88, 53, 18, 48, 7, 15, 51, 147, 153, 163, 156, 166, 170, 168, 158, 165, 155, 34, 69, 104, 33, 68, 103, 67, 32, 102, 66, 31, 101, 139, 99, 64, 98, 63, 97, 27, 62, 60, 25, 95, 59, 24, 94, 136, 137, 138, 29, 129, 18, 132, 17, 122, 87, 123, 53, 134, 130, 15, 85, 120, 84, 14, 119, 133, 28, 88, 78, 43, 113, 50, 49, 8, 52, 148, 154, 164, 157, 167, 171, 155, 165, 158, 168, 34, 69, 104, 68, 103, 33, 67, 32, 102, 139, 29, 99, 64, 98, 28, 63, 138, 60, 25, 95, 137, 130, 133, 18, 123, 88, 134, 85, 15, 120, 79, 44, 114, 50, 9, 53, 149, 155, 165, 158, 168, 172, 34, 69, 68, 33, 65, 30, 100, 104, 139, 64, 29, 99, 96, 26, 103, 55, 125, 135, 138, 89, 19, 20, 86, 51, 54, 80, 90, 45, 115, 61, 121, 131, 134, 10, 124, 16, 150, 160, 169, 170, 166, 156, 159, 34, 69, 68, 33, 66, 65, 31, 100, 30, 101, 104, 139, 64, 29, 99, 97, 61, 26, 96, 103, 27, 56, 126, 135, 136, 138, 89, 54, 19, 131, 16, 86, 121, 21, 87, 52, 81, 91, 46, 116, 62, 122, 132, 134, 51, 124, 11, 17, 151, 161, 156, 166, 170, 169, 171, 167, 159, 157, 34, 69, 104, 33, 68, 103, 66, 101, 31, 139, 29, 99, 62, 27, 97, 57, 127, 136, 138, 89, 54, 64, 124, 132, 17, 87, 122, 22, 134, 82, 92, 47, 117, 52, 12, 19, 152, 162, 157, 167, 171, 159, 169, 34, 69, 68, 33, 67, 32, 30, 100, 102, 104, 139, 65, 29, 99, 98, 103, 61, 26, 96, 28, 58, 128, 135, 137, 138, 131, 23, 86, 16, 121, 88, 53, 83, 93, 48, 118, 63, 123, 133, 134, 64, 124, 89, 54, 19, 51, 13, 18, 153, 163, 156, 166, 170, 169, 172, 159, 168, 158, 69, 34, 104, 68, 33, 103, 67, 102, 32, 31, 101, 139, 66, 99, 64, 63, 28, 98, 62, 27, 97, 138, 59, 129, 136, 137, 132, 19, 124, 54, 133, 18, 88, 123, 24, 87, 17, 122, 134, 29, 89, 84, 94, 49, 119, 53, 52, 14, 154, 164, 157, 167, 171, 158, 168, 172, 159, 169, 69, 34, 104, 68, 33, 103, 32, 102, 139, 67, 99, 29, 64, 63, 28, 98, 138, 60, 130, 137, 133, 134, 19, 124, 89, 25, 88, 18, 123, 85, 95, 50, 120, 53, 15, 54, 155, 165, 158, 168, 172, 159, 169, 173, 90, 20, 55, 70, 105, 125, 35, 0, 160, 140, 65, 30, 91, 90, 55, 21, 20, 56, 71, 35, 106, 105, 70, 125, 0, 126, 36, 1, 140, 160, 161, 141, 66, 65, 30, 31, 100, 92, 91, 56, 90, 55, 22, 21, 125, 57, 72, 36, 107, 106, 71, 126, 1, 127, 20, 37, 2, 141, 160, 161, 162, 142, 66, 31, 30, 100, 101, 65, 92, 57, 91, 56, 22, 126, 135, 73, 37, 108, 107, 72, 127, 2, 21, 38, 3, 142, 161, 162, 143, 31, 101, 66, 92, 57, 127, 136, 38, 108, 73, 3, 22, 143, 162, 65, 30, 100, 93, 23, 58, 135, 74, 109, 0, 35, 125, 90, 55, 70, 20, 128, 39, 105, 140, 4, 160, 163, 144, 67, 32, 66, 30, 65, 100, 31, 101, 94, 93, 58, 24, 20, 23, 125, 55, 90, 59, 135, 136, 75, 39, 110, 109, 1, 36, 126, 74, 91, 56, 128, 4, 71, 21, 129, 40, 106, 141, 5, 144, 160, 161, 163, 164, 145, 67, 32, 31, 66, 30, 100, 101, 102, 94, 59, 93, 58, 21, 24, 126, 56, 128, 135, 91, 136, 65, 76, 40, 111, 110, 2, 37, 127, 75, 92, 57, 129, 5, 72, 22, 23, 41, 107, 142, 6, 145, 161, 163, 162, 164, 146, 32, 102, 31, 101, 67, 94, 59, 22, 127, 57, 129, 136, 137, 92, 66, 41, 111, 3, 38, 76, 6, 73, 24, 108, 143, 146, 162, 164, 67, 30, 100, 32, 102, 95, 25, 20, 125, 90, 60, 135, 137, 65, 77, 112, 4, 39, 128, 93, 58, 74, 23, 130, 55, 42, 109, 144, 7, 160, 163, 165, 147, 32, 67, 102, 31, 100, 65, 101, 30, 95, 60, 23, 25, 21, 126, 91, 128, 58, 135, 93, 136, 137, 66, 78, 42, 113, 112, 5, 40, 129, 77, 94, 59, 130, 7, 75, 24, 56, 43, 110, 145, 8, 161, 147, 163, 164, 165, 148, 32, 102, 101, 66, 31, 95, 60, 24, 22, 127, 92, 129, 59, 136, 130, 137, 94, 67, 43, 113, 6, 41, 78, 8, 76, 25, 57, 111, 146, 162, 148, 164, 165, 32, 102, 30, 100, 65, 23, 128, 93, 135, 137, 67, 79, 114, 7, 42, 130, 95, 60, 77, 25, 58, 44, 112, 147, 9, 163, 165, 149, 102, 67, 31, 101, 66, 32, 25, 24, 129, 94, 136, 130, 60, 137, 95, 44, 114, 8, 43, 79, 9, 78, 59, 113, 148, 164, 149, 165, 32, 102, 67, 25, 130, 95, 137, 9, 44, 79, 60, 114, 149, 165, 65, 30, 100, 96, 26, 90, 55, 61, 125, 135, 80, 115, 35, 0, 105, 70, 131, 20, 45, 10, 140, 170, 160, 166, 150, 34, 69, 68, 33, 66, 65, 30, 31, 100, 101, 97, 96, 61, 27, 26, 20, 90, 125, 91, 56, 62, 126, 135, 136, 81, 45, 116, 115, 55, 80, 131, 10, 36, 1, 106, 71, 132, 21, 46, 11, 141, 150, 160, 171, 170, 166, 161, 167, 151, 34, 69, 68, 33, 103, 66, 30, 100, 31, 101, 104, 97, 62, 96, 61, 27, 65, 131, 21, 91, 126, 135, 92, 57, 127, 136, 82, 46, 117, 116, 56, 81, 132, 11, 37, 2, 107, 72, 26, 22, 47, 12, 142, 151, 161, 166, 170, 171, 167, 162, 152, 34, 69, 104, 33, 103, 31, 101, 68, 139, 97, 62, 66, 132, 138, 22, 92, 127, 136, 47, 117, 57, 82, 12, 38, 3, 108, 73, 27, 143, 152, 162, 167, 171, 34, 69, 68, 33, 67, 30, 100, 32, 102, 104, 103, 139, 98, 28, 90, 20, 125, 93, 58, 63, 128, 135, 65, 137, 138, 83, 118, 10, 45, 131, 96, 61, 80, 26, 39, 55, 4, 109, 74, 133, 23, 160, 48, 115, 150, 13, 144, 172, 170, 166, 163, 168, 153, 34, 69, 33, 68, 103, 67, 32, 31, 100, 65, 101, 102, 104, 139, 98, 63, 26, 28, 131, 61, 23, 93, 128, 91, 21, 126, 135, 30, 94, 96, 59, 129, 136, 137, 66, 138, 84, 48, 119, 118, 58, 11, 46, 132, 83, 97, 62, 133, 13, 81, 27, 40, 56, 5, 110, 75, 24, 161, 49, 116, 151, 14, 145, 153, 163, 166, 170, 172, 171, 167, 168, 164, 154, 69, 34, 104, 33, 103, 32, 102, 101, 66, 139, 98, 63, 27, 67, 132, 62, 133, 138, 24, 94, 129, 92, 22, 127, 136, 31, 137, 97, 68, 49, 119, 59, 12, 47, 84, 14, 82, 41, 57, 6, 111, 76, 28, 162, 117, 152, 146, 154, 164, 167, 171, 168, 172, 69, 34, 33, 103, 32, 102, 100, 30, 65, 104, 139, 135, 26, 131, 96, 93, 23, 128, 95, 60, 130, 137, 138, 67, 68, 85, 120, 13, 48, 133, 98, 63, 83, 28, 42, 58, 7, 112, 77, 25, 61, 163, 50, 118, 153, 15, 166, 147, 170, 172, 168, 165, 155, 34, 69, 104, 103, 68, 102, 67, 101, 31, 66, 139, 33, 28, 136, 27, 132, 97, 133, 63, 138, 25, 95, 130, 94, 24, 129, 137, 32, 98, 50, 120, 60, 14, 49, 85, 15, 84, 43, 59, 8, 113, 78, 62, 164, 119, 154, 167, 148, 171, 155, 165, 168, 172, 69, 104, 34, 33, 103, 68, 102, 32, 67, 139, 137, 28, 133, 98, 138, 95, 25, 130, 15, 50, 85, 44, 60, 9, 114, 79, 63, 165, 120, 155, 168, 149, 172, 69, 34, 68, 33, 103, 100, 30, 104, 139, 99, 29, 96, 61, 64, 90, 55, 125, 65, 131, 135, 138, 86, 121, 45, 10, 115, 80, 20, 134, 26, 160, 51, 16, 150, 173, 170, 166, 169, 156, 69, 34, 68, 33, 103, 101, 65, 30, 100, 104, 31, 139, 99, 64, 29, 135, 26, 96, 131, 97, 62, 91, 56, 126, 66, 132, 136, 138, 87, 51, 122, 121, 61, 86, 134, 16, 46, 11, 116, 81, 21, 27, 161, 52, 17, 151, 156, 166, 170, 173, 171, 169, 167, 157, 34, 69, 104, 33, 103, 66, 31, 101, 139, 99, 64, 68, 134, 136, 27, 97, 132, 138, 92, 57, 127, 52, 122, 62, 87, 17, 47, 12, 117, 82, 22, 29, 162, 152, 157, 167, 171, 169, 173, 69, 34, 33, 103, 102, 104, 65, 30, 100, 32, 139, 135, 96, 26, 131, 98, 63, 93, 58, 128, 67, 133, 137, 138, 68, 88, 123, 16, 51, 134, 99, 64, 86, 29, 48, 61, 13, 118, 83, 23, 28, 163, 166, 170, 53, 121, 156, 18, 153, 173, 169, 172, 168, 158, 69, 34, 104, 103, 68, 67, 32, 102, 66, 31, 101, 139, 136, 29, 134, 64, 137, 28, 98, 133, 97, 27, 132, 138, 33, 99, 94, 59, 129, 53, 123, 63, 17, 52, 88, 18, 87, 49, 62, 14, 119, 84, 24, 164, 167, 171, 122, 157, 154, 158, 168, 172, 169, 173, 69, 34, 104, 103, 33, 68, 67, 32, 102, 139, 137, 138, 29, 134, 99, 98, 28, 133, 95, 60, 130, 18, 53, 88, 50, 63, 15, 120, 85, 25, 64, 165, 168, 172, 123, 158, 169, 155, 173, 175, 100, 30, 65, 90, 125, 135, 55, 140, 0, 70, 35, 20, 105, 170, 160, 69, 34, 101, 100, 65, 31, 30, 66, 91, 55, 126, 125, 90, 135, 20, 136, 56, 141, 1, 71, 36, 21, 160, 106, 170, 171, 161, 69, 34, 104, 101, 66, 100, 65, 31, 135, 92, 56, 127, 126, 91, 136, 21, 30, 57, 142, 2, 72, 37, 22, 161, 107, 170, 171, 162, 34, 104, 69, 101, 66, 136, 139, 57, 127, 92, 22, 31, 143, 3, 73, 38, 162, 108, 171, 69, 34, 104, 102, 32, 67, 139, 93, 128, 20, 55, 135, 100, 65, 90, 30, 137, 58, 144, 125, 4, 74, 39, 160, 23, 109, 170, 172, 163, 34, 69, 104, 102, 67, 30, 32, 135, 65, 100, 139, 94, 58, 129, 128, 21, 56, 136, 93, 101, 66, 137, 23, 91, 31, 59, 145, 126, 5, 75, 40, 161, 24, 163, 110, 170, 171, 172, 164, 34, 104, 102, 67, 31, 136, 66, 137, 139, 101, 69, 59, 129, 22, 57, 94, 24, 92, 32, 146, 127, 6, 76, 41, 162, 164, 111, 171, 172, 34, 104, 30, 135, 100, 139, 69, 95, 130, 23, 58, 137, 102, 67, 93, 32, 65, 60, 147, 128, 7, 77, 42, 163, 25, 170, 112, 172, 165, 104, 69, 34, 32, 31, 136, 101, 137, 67, 139, 102, 60, 130, 24, 59, 95, 25, 94, 66, 148, 129, 8, 78, 43, 164, 171, 165, 113, 172, 34, 104, 69, 32, 137, 102, 139, 25, 60, 95, 67, 149, 130, 9, 79, 44, 165, 172, 114, 69, 34, 104, 103, 33, 100, 65, 68, 135, 139, 96, 131, 55, 20, 125, 90, 138, 30, 61, 150, 10, 80, 45, 26, 160, 115, 175, 170, 173, 166, 69, 34, 104, 103, 68, 33, 30, 100, 135, 101, 66, 136, 139, 97, 61, 132, 131, 65, 96, 138, 26, 56, 21, 126, 91, 31, 62, 151, 11, 81, 46, 27, 161, 166, 170, 116, 175, 173, 171, 167, 34, 104, 103, 68, 69, 138, 31, 101, 136, 139, 62, 132, 66, 97, 27, 57, 22, 127, 92, 33, 152, 12, 82, 47, 162, 167, 171, 117, 173, 175, 34, 104, 100, 30, 135, 102, 67, 137, 139, 69, 98, 133, 26, 61, 138, 103, 68, 96, 33, 58, 65, 23, 128, 93, 32, 170, 63, 153, 131, 13, 83, 48, 166, 28, 163, 118, 175, 173, 172, 168, 104, 69, 33, 138, 68, 32, 102, 137, 101, 31, 136, 139, 34, 103, 63, 133, 67, 27, 62, 98, 28, 97, 59, 66, 24, 129, 94, 171, 154, 132, 14, 84, 49, 167, 164, 168, 172, 119, 173, 175, 104, 34, 69, 139, 33, 138, 103, 102, 32, 137, 28, 63, 98, 60, 67, 25, 130, 95, 68, 172, 155, 133, 15, 85, 50, 168, 173, 165, 175, 120, 104, 34, 69, 100, 135, 139, 65, 160, 20, 90, 55, 30, 125, 175, 170, 104, 69, 34, 101, 65, 136, 135, 100, 139, 30, 66, 161, 21, 91, 56, 31, 170, 126, 175, 171, 104, 69, 139, 66, 136, 101, 31, 34, 162, 22, 92, 57, 171, 127, 175, 102, 137, 30, 65, 139, 104, 69, 100, 34, 67, 163, 135, 23, 93, 58, 170, 32, 128, 175, 172, 34, 139, 69, 104, 67, 137, 31, 66, 102, 32, 101, 164, 136, 24, 94, 59, 171, 172, 129, 175, 34, 139, 104, 32, 67, 102, 69, 165, 137, 25, 95, 60, 172, 175, 130, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174};
    static const int coeffs1_ind[] = {174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174};

    static const int C0_ind[] = {0, 5, 310, 311, 314, 315, 398, 620, 621, 622, 623, 624, 625, 705, 708, 734, 930, 931, 932, 933, 934, 935, 1015, 1018, 1044, 1241, 1242, 1243, 1244, 1325, 1328, 1354, 1552, 1553, 1635, 1664, 1866, 1871, 1949, 1981, 2170, 2175, 2176, 2177, 2180, 2181, 2257, 2259, 2289, 2291, 2480, 2481, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2500, 2567, 2568, 2569, 2593, 2599, 2601, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2810, 2875, 2877, 2878, 2879, 2903, 2904, 2909, 2911, 3101, 3102, 3103, 3104, 3107, 3108, 3109, 3110, 3120, 3185, 3187, 3188, 3213, 3214, 3219, 3412, 3413, 3418, 3419, 3430, 3495, 3523, 3524, 3726, 3731, 3732, 3735, 3806, 3809, 3837, 3841, 4030, 4035, 4036, 4037, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4116, 4117, 4119, 4135, 4147, 4149, 4151, 4340, 4341, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4360, 4426, 4427, 4428, 4429, 4445, 4453, 4457, 4459, 4461, 4651, 4652, 4653, 4654, 4657, 4658, 4659, 4660, 4662, 4663, 4664, 4665, 4666, 4670, 4735, 4736, 4737, 4738, 4755, 4763, 4764, 4767, 4769, 4962, 4963, 4968, 4969, 4973, 4974, 4976, 4980, 5045, 5065, 5073, 5074, 5276, 5281, 5282, 5285, 5287, 5288, 5289, 5356, 5359, 5360, 5387, 5391, 5580, 5585, 5586, 5587, 5590, 5591, 5592, 5593, 5594, 5595, 5596, 5597, 5598, 5599, 5666, 5667, 5669, 5670, 5685, 5697, 5699, 5701, 5891, 5894, 5897, 5898, 5899, 5900, 5902, 5903, 5904, 5905, 5906, 5907, 5908, 5909, 5910, 5976, 5977, 5978, 5980, 5995, 6003, 6007, 6009, 6202, 6203, 6208, 6209, 6213, 6214, 6216, 6217, 6218, 6219, 6220, 6285, 6290, 6305, 6313, 6314, 6531, 6536, 6612, 6630, 6820, 6825, 6841, 6842, 6845, 6846, 6921, 6922, 6938, 6940, 7130, 7131, 7134, 7135, 7151, 7152, 7153, 7154, 7155, 7156, 7165, 7218, 7231, 7232, 7242, 7248, 7250, 7440, 7441, 7442, 7443, 7444, 7445, 7461, 7462, 7463, 7464, 7465, 7466, 7475, 7525, 7528, 7541, 7542, 7552, 7554, 7558, 7560, 7751, 7752, 7753, 7754, 7772, 7773, 7774, 7775, 7785, 7835, 7838, 7851, 7862, 7864, 7868, 8062, 8063, 8083, 8084, 8095, 8145, 8172, 8174, 8376, 8381, 8391, 8396, 8397, 8399, 8459, 8470, 8472, 8486, 8490, 8491, 8680, 8685, 8686, 8687, 8690, 8691, 8701, 8702, 8705, 8706, 8707, 8708, 8709, 8710, 8711, 8767, 8769, 8780, 8781, 8782, 8784, 8796, 8798, 8799, 8800, 8801, 8990, 8991, 8994, 8995, 8996, 8997, 8998, 8999, 9000, 9001, 9010, 9011, 9012, 9013, 9014, 9015, 9016, 9017, 9018, 9019, 9020, 9021, 9025, 9077, 9078, 9079, 9090, 9091, 9092, 9094, 9102, 9103, 9106, 9108, 9109, 9110, 9111, 9301, 9302, 9303, 9304, 9307, 9308, 9309, 9310, 9320, 9322, 9323, 9324, 9325, 9327, 9328, 9329, 9330, 9331, 9335, 9385, 9387, 9388, 9400, 9401, 9404, 9412, 9413, 9414, 9416, 9418, 9419, 9612, 9613, 9618, 9619, 9630, 9633, 9634, 9638, 9640, 9641, 9645, 9695, 9714, 9722, 9723, 9724, 9926, 9931, 9932, 9935, 9941, 9946, 9947, 9949, 9952, 9953, 9954, 10006, 10009, 10020, 10022, 10023, 10036, 10037, 10040, 10041, 10230, 10235, 10236, 10237, 10240, 10241, 10242, 10243, 10244, 10245, 10246, 10251, 10252, 10255, 10256, 10257, 10258, 10259, 10260, 10261, 10262, 10263, 10264, 10316, 10317, 10319, 10330, 10331, 10332, 10333, 10334, 10335, 10346, 10347, 10348, 10349, 10350, 10351, 10541, 10544, 10547, 10548, 10549, 10550, 10552, 10553, 10554, 10555, 10556, 10560, 10562, 10563, 10564, 10565, 10567, 10568, 10569, 10570, 10571, 10572, 10573, 10574, 10575, 10626, 10627, 10628, 10640, 10641, 10643, 10644, 10645, 10652, 10653, 10656, 10657, 10658, 10659, 10852, 10853, 10858, 10859, 10863, 10864, 10866, 10870, 10873, 10874, 10878, 10880, 10881, 10882, 10883, 10884, 10885, 10935, 10953, 10954, 10955, 10962, 10963, 10964, 11181, 11186, 11196, 11199, 11204, 11262, 11275, 11280, 11470, 11475, 11491, 11492, 11495, 11496, 11506, 11507, 11508, 11509, 11510, 11514, 11571, 11572, 11581, 11585, 11588, 11590, 11780, 11781, 11784, 11785, 11801, 11802, 11803, 11804, 11805, 11806, 11815, 11816, 11817, 11818, 11819, 11820, 11824, 11868, 11881, 11882, 11891, 11892, 11895, 11898, 11900, 12091, 12092, 12093, 12094, 12112, 12113, 12114, 12115, 12125, 12126, 12127, 12128, 12129, 12130, 12134, 12175, 12178, 12191, 12201, 12202, 12204, 12205, 12208, 12402, 12403, 12423, 12424, 12435, 12437, 12438, 12440, 12485, 12511, 12512, 12514, 12716, 12721, 12731, 12736, 12737, 12739, 12746, 12749, 12751, 12752, 12753, 12754, 12799, 12810, 12812, 12820, 12825, 12826, 12830, 12831, 13020, 13025, 13026, 13027, 13030, 13031, 13041, 13042, 13045, 13046, 13047, 13048, 13049, 13050, 13051, 13056, 13057, 13058, 13059, 13060, 13061, 13062, 13063, 13064, 13107, 13109, 13120, 13121, 13122, 13124, 13130, 13131, 13135, 13136, 13138, 13139, 13140, 13141, 13331, 13334, 13337, 13338, 13339, 13340, 13350, 13352, 13353, 13354, 13355, 13357, 13358, 13359, 13360, 13361, 13365, 13366, 13367, 13368, 13369, 13370, 13371, 13372, 13373, 13374, 13417, 13418, 13430, 13431, 13434, 13440, 13441, 13442, 13443, 13445, 13446, 13448, 13449, 13642, 13643, 13648, 13649, 13660, 13663, 13664, 13668, 13670, 13671, 13675, 13677, 13678, 13680, 13681, 13682, 13683, 13725, 13744, 13750, 13751, 13752, 13753, 13754, 13971, 13976, 13986, 13989, 13994, 13995, 13996, 13997, 13998, 14052, 14065, 14070, 14225, 14260, 14265, 14281, 14282, 14285, 14286, 14296, 14297, 14298, 14299, 14300, 14304, 14305, 14306, 14307, 14308, 14361, 14362, 14371, 14375, 14378, 14380, 14535, 14571, 14574, 14592, 14593, 14594, 14595, 14605, 14606, 14607, 14608, 14609, 14610, 14614, 14615, 14616, 14617, 14618, 14658, 14671, 14681, 14682, 14685, 14688, 14845, 14882, 14883, 14903, 14904, 14915, 14917, 14918, 14920, 14925, 14926, 14927, 14928, 14965, 14991, 14992, 14994, 15155, 15239, 15244, 15549, 15550, 15553, 15554, 15660, 15859, 15860, 15861, 15862, 15863, 15864, 15908, 15970, 15997, 16169, 16170, 16171, 16172, 16173, 16174, 16218, 16280, 16307, 16480, 16481, 16482, 16483, 16528, 16590, 16617, 16791, 16792, 16838, 16927, 17105, 17109, 17212, 17244, 17409, 17414, 17415, 17416, 17418, 17419, 17519, 17522, 17552, 17554, 17719, 17720, 17723, 17724, 17725, 17726, 17727, 17728, 17729, 17730, 17739, 17829, 17830, 17832, 17856, 17862, 17864, 18029, 18030, 18031, 18032, 18033, 18034, 18035, 18036, 18037, 18038, 18039, 18040, 18049, 18078, 18139, 18140, 18142, 18166, 18167, 18172, 18174, 18340, 18341, 18342, 18343, 18346, 18347, 18348, 18350, 18359, 18388, 18449, 18450, 18476, 18477, 18482, 18651, 18652, 18657, 18660, 18669, 18698, 18786, 18787, 18965, 18969, 18971, 18975, 19067, 19072, 19100, 19104, 19269, 19274, 19275, 19276, 19278, 19279, 19281, 19282, 19283, 19284, 19285, 19377, 19379, 19382, 19398, 19410, 19412, 19414, 19579, 19580, 19583, 19584, 19585, 19586, 19587, 19588, 19589, 19590, 19591, 19592, 19593, 19594, 19595, 19599, 19687, 19689, 19690, 19692, 19708, 19716, 19720, 19722, 19724, 19890, 19891, 19892, 19893, 19896, 19897, 19898, 19900, 19901, 19902, 19903, 19904, 19905, 19909, 19938, 19997, 19999, 20000, 20018, 20026, 20027, 20030, 20032, 20201, 20202, 20207, 20210, 20212, 20213, 20214, 20219, 20248, 20328, 20336, 20337, 20515, 20519, 20521, 20525, 20526, 20527, 20528, 20617, 20622, 20623, 20650, 20654, 20819, 20824, 20825, 20826, 20828, 20829, 20831, 20832, 20833, 20834, 20835, 20836, 20837, 20838, 20927, 20929, 20932, 20933, 20948, 20960, 20962, 20964, 21130, 21133, 21136, 21137, 21138, 21140, 21141, 21142, 21143, 21144, 21145, 21146, 21147, 21148, 21149, 21237, 21239, 21240, 21243, 21258, 21266, 21270, 21272, 21441, 21442, 21447, 21450, 21452, 21453, 21454, 21456, 21457, 21458, 21459, 21488, 21553, 21568, 21576, 21577, 21770, 21775, 21874, 21893, 22010, 22015, 22059, 22064, 22080, 22081, 22084, 22085, 22182, 22184, 22201, 22203, 22320, 22321, 22324, 22325, 22369, 22370, 22373, 22374, 22390, 22391, 22392, 22393, 22394, 22395, 22404, 22408, 22480, 22492, 22494, 22505, 22511, 22513, 22630, 22631, 22632, 22633, 22634, 22635, 22679, 22680, 22681, 22682, 22683, 22684, 22700, 22701, 22702, 22703, 22704, 22705, 22714, 22715, 22718, 22728, 22744, 22790, 22802, 22804, 22815, 22817, 22821, 22823, 22941, 22942, 22943, 22944, 22990, 22991, 22992, 22993, 23011, 23012, 23013, 23014, 23024, 23025, 23028, 23038, 23054, 23100, 23112, 23125, 23127, 23131, 23252, 23253, 23301, 23302, 23322, 23323, 23334, 23335, 23348, 23364, 23435, 23437, 23566, 23571, 23615, 23619, 23630, 23635, 23636, 23639, 23649, 23681, 23722, 23728, 23734, 23749, 23753, 23754, 23870, 23875, 23876, 23877, 23880, 23881, 23919, 23924, 23925, 23926, 23928, 23929, 23940, 23941, 23944, 23945, 23946, 23947, 23948, 23949, 23950, 23957, 23959, 23989, 23991, 24029, 24032, 24038, 24042, 24044, 24047, 24059, 24061, 24062, 24063, 24064, 24180, 24181, 24184, 24185, 24186, 24187, 24188, 24189, 24190, 24191, 24200, 24229, 24230, 24233, 24234, 24235, 24236, 24237, 24238, 24239, 24240, 24249, 24250, 24251, 24252, 24253, 24254, 24255, 24256, 24257, 24258, 24259, 24260, 24264, 24267, 24268, 24269, 24293, 24299, 24301, 24339, 24340, 24342, 24348, 24352, 24354, 24357, 24365, 24366, 24369, 24371, 24372, 24373, 24374, 24491, 24492, 24493, 24494, 24497, 24498, 24499, 24500, 24510, 24540, 24541, 24542, 24543, 24546, 24547, 24548, 24550, 24559, 24561, 24562, 24563, 24564, 24566, 24567, 24568, 24569, 24570, 24574, 24575, 24577, 24578, 24588, 24603, 24604, 24609, 24649, 24650, 24658, 24662, 24667, 24675, 24676, 24677, 24679, 24681, 24682, 24802, 24803, 24808, 24809, 24820, 24851, 24852, 24857, 24860, 24869, 24872, 24873, 24877, 24878, 24880, 24884, 24885, 24898, 24913, 24914, 24977, 24985, 24986, 24987, 25116, 25121, 25122, 25125, 25165, 25169, 25171, 25175, 25180, 25185, 25186, 25189, 25191, 25192, 25193, 25196, 25199, 25227, 25231, 25267, 25272, 25278, 25284, 25286, 25299, 25300, 25303, 25304, 25400, 25420, 25425, 25426, 25427, 25430, 25431, 25432, 25433, 25434, 25435, 25436, 25469, 25474, 25475, 25476, 25478, 25479, 25481, 25482, 25483, 25484, 25485, 25490, 25491, 25494, 25495, 25496, 25497, 25498, 25499, 25500, 25501, 25502, 25503, 25506, 25507, 25509, 25525, 25537, 25539, 25541, 25577, 25579, 25582, 25588, 25592, 25594, 25596, 25597, 25598, 25609, 25610, 25611, 25612, 25613, 25614, 25710, 25731, 25734, 25737, 25738, 25739, 25740, 25742, 25743, 25744, 25745, 25746, 25750, 25780, 25783, 25786, 25787, 25788, 25790, 25791, 25792, 25793, 25794, 25795, 25799, 25801, 25802, 25803, 25804, 25806, 25807, 25808, 25809, 25810, 25811, 25812, 25813, 25814, 25816, 25817, 25818, 25835, 25843, 25847, 25849, 25887, 25889, 25890, 25898, 25902, 25906, 25907, 25908, 25915, 25916, 25919, 25920, 25921, 25922, 26020, 26042, 26043, 26048, 26049, 26053, 26054, 26056, 26060, 26091, 26092, 26097, 26100, 26102, 26103, 26104, 26109, 26112, 26113, 26117, 26118, 26120, 26121, 26122, 26123, 26124, 26125, 26138, 26145, 26153, 26154, 26216, 26217, 26218, 26225, 26226, 26227, 26330, 26356, 26361, 26362, 26365, 26367, 26368, 26369, 26405, 26409, 26411, 26415, 26416, 26417, 26418, 26420, 26425, 26426, 26429, 26431, 26432, 26433, 26436, 26439, 26440, 26467, 26471, 26507, 26512, 26513, 26518, 26524, 26526, 26539, 26540, 26543, 26544, 26640, 26667, 26670, 26672, 26673, 26674, 26675, 26676, 26677, 26678, 26679, 26716, 26718, 26721, 26722, 26723, 26724, 26725, 26726, 26727, 26728, 26731, 26734, 26736, 26737, 26738, 26739, 26740, 26741, 26742, 26743, 26746, 26747, 26750, 26765, 26777, 26779, 26817, 26819, 26823, 26828, 26832, 26836, 26837, 26838, 26849, 26850, 26851, 26852, 26950, 26978, 26979, 26983, 26984, 26986, 26987, 26988, 26989, 26990, 27027, 27030, 27032, 27033, 27034, 27036, 27037, 27038, 27039, 27042, 27043, 27047, 27048, 27050, 27051, 27052, 27053, 27054, 27060, 27075, 27083, 27133, 27146, 27147, 27148, 27155, 27156, 27260, 27292, 27295, 27297, 27298, 27299, 27341, 27345, 27346, 27347, 27348, 27356, 27359, 27361, 27362, 27363, 27366, 27370, 27397, 27437, 27443, 27448, 27456, 27469, 27470, 27570, 27603, 27604, 27606, 27607, 27608, 27609, 27652, 27653, 27654, 27656, 27657, 27658, 27667, 27668, 27670, 27671, 27672, 27673, 27680, 27695, 27753, 27766, 27767, 27768, 27880, 27917, 27918, 27919, 27966, 27967, 27968, 27981, 27982, 27983, 27990, 28063, 28076, 28190, 28231, 28236, 28280, 28285, 28301, 28303, 28309, 28312, 28330, 28384, 28398, 28403, 28513, 28520, 28525, 28541, 28542, 28545, 28546, 28569, 28574, 28590, 28591, 28594, 28595, 28611, 28612, 28613, 28614, 28615, 28619, 28621, 28622, 28638, 28640, 28692, 28694, 28704, 28708, 28711, 28713, 28815, 28823, 28830, 28831, 28834, 28835, 28851, 28852, 28853, 28854, 28855, 28856, 28865, 28879, 28880, 28883, 28884, 28900, 28901, 28902, 28903, 28904, 28905, 28914, 28918, 28921, 28922, 28923, 28924, 28925, 28929, 28931, 28932, 28942, 28948, 28950, 28990, 29002, 29004, 29014, 29015, 29018, 29021, 29023, 29125, 29133, 29141, 29142, 29143, 29144, 29162, 29163, 29164, 29165, 29175, 29190, 29191, 29192, 29193, 29211, 29212, 29213, 29214, 29224, 29225, 29228, 29231, 29232, 29233, 29234, 29235, 29238, 29239, 29241, 29252, 29254, 29258, 29300, 29312, 29324, 29325, 29327, 29328, 29331, 29435, 29443, 29452, 29453, 29473, 29474, 29485, 29501, 29502, 29522, 29523, 29534, 29535, 29542, 29544, 29545, 29548, 29562, 29564, 29634, 29635, 29637, 29745, 29766, 29771, 29781, 29786, 29787, 29789, 29815, 29819, 29830, 29835, 29836, 29839, 29849, 29851, 29853, 29856, 29857, 29859, 29860, 29862, 29876, 29880, 29881, 29908, 29922, 29928, 29934, 29943, 29948, 29949, 29953, 29954, 30046, 30063, 30070, 30075, 30076, 30077, 30080, 30081, 30091, 30092, 30095, 30096, 30097, 30098, 30099, 30100, 30101, 30119, 30124, 30125, 30126, 30128, 30129, 30140, 30141, 30144, 30145, 30146, 30147, 30148, 30149, 30150, 30157, 30159, 30161, 30162, 30163, 30164, 30165, 30166, 30167, 30169, 30170, 30171, 30172, 30174, 30186, 30188, 30189, 30190, 30191, 30218, 30229, 30232, 30238, 30242, 30244, 30247, 30253, 30254, 30258, 30259, 30261, 30262, 30263, 30264, 30356, 30365, 30373, 30381, 30384, 30387, 30388, 30389, 30390, 30400, 30402, 30403, 30404, 30405, 30407, 30408, 30409, 30410, 30411, 30415, 30430, 30433, 30436, 30437, 30438, 30440, 30449, 30451, 30452, 30453, 30454, 30456, 30457, 30458, 30459, 30460, 30464, 30467, 30468, 30471, 30472, 30473, 30474, 30475, 30476, 30477, 30479, 30480, 30481, 30484, 30492, 30493, 30496, 30498, 30499, 30528, 30539, 30540, 30548, 30552, 30557, 30563, 30564, 30565, 30566, 30568, 30569, 30571, 30572, 30666, 30675, 30683, 30692, 30693, 30698, 30699, 30710, 30713, 30714, 30718, 30720, 30721, 30725, 30741, 30742, 30747, 30750, 30759, 30762, 30763, 30767, 30768, 30770, 30774, 30775, 30782, 30784, 30785, 30786, 30787, 30788, 30794, 30802, 30803, 30804, 30838, 30867, 30873, 30874, 30875, 30876, 30877, 30976, 30985, 31006, 31011, 31012, 31015, 31021, 31026, 31027, 31029, 31032, 31033, 31034, 31055, 31059, 31061, 31065, 31070, 31075, 31076, 31079, 31081, 31082, 31083, 31086, 31089, 31091, 31093, 31096, 31097, 31099, 31100, 31102, 31103, 31116, 31117, 31120, 31121, 31148, 31157, 31162, 31168, 31174, 31176, 31183, 31188, 31189, 31190, 31193, 31194, 31286, 31290, 31303, 31317, 31320, 31322, 31323, 31324, 31325, 31326, 31332, 31335, 31337, 31338, 31339, 31340, 31341, 31342, 31343, 31344, 31366, 31368, 31371, 31372, 31373, 31374, 31375, 31381, 31384, 31386, 31387, 31388, 31389, 31390, 31391, 31392, 31393, 31396, 31397, 31401, 31402, 31403, 31404, 31405, 31406, 31407, 31409, 31410, 31411, 31413, 31414, 31415, 31426, 31427, 31428, 31429, 31458, 31467, 31469, 31478, 31482, 31486, 31487, 31488, 31493, 31494, 31498, 31499, 31500, 31501, 31502, 31596, 31600, 31605, 31613, 31628, 31629, 31633, 31634, 31636, 31640, 31643, 31644, 31648, 31650, 31651, 31652, 31653, 31654, 31655, 31677, 31680, 31682, 31683, 31684, 31689, 31692, 31693, 31697, 31698, 31700, 31701, 31702, 31703, 31704, 31712, 31714, 31715, 31716, 31717, 31723, 31724, 31725, 31732, 31733, 31768, 31796, 31797, 31798, 31803, 31804, 31805, 31806, 31906, 31910, 31915, 31942, 31945, 31947, 31948, 31949, 31957, 31959, 31962, 31963, 31964, 31991, 31995, 31996, 31997, 31998, 32006, 32009, 32011, 32012, 32013, 32016, 32020, 32021, 32023, 32026, 32027, 32029, 32030, 32033, 32046, 32047, 32078, 32087, 32093, 32098, 32106, 32113, 32118, 32119, 32120, 32216, 32220, 32233, 32253, 32254, 32256, 32257, 32258, 32259, 32268, 32270, 32271, 32272, 32273, 32274, 32302, 32303, 32304, 32306, 32307, 32308, 32317, 32318, 32320, 32321, 32322, 32323, 32330, 32332, 32334, 32335, 32336, 32337, 32343, 32344, 32345, 32388, 32403, 32416, 32417, 32418, 32423, 32424, 32526, 32530, 32535, 32567, 32568, 32569, 32582, 32583, 32584, 32616, 32617, 32618, 32631, 32632, 32633, 32640, 32646, 32647, 32653, 32698, 32713, 32726, 32733, 32836, 32840, 32881, 32886, 32896, 32899, 32904, 32930, 32935, 32951, 32953, 32959, 32962, 32966, 32967, 32968, 32969, 32975, 32980, 33034, 33048, 33053, 33134, 33163, 33170, 33175, 33191, 33192, 33195, 33196, 33206, 33207, 33208, 33209, 33210, 33214, 33219, 33224, 33240, 33241, 33244, 33245, 33261, 33262, 33263, 33264, 33265, 33269, 33271, 33272, 33276, 33277, 33278, 33279, 33281, 33285, 33288, 33290, 33342, 33344, 33354, 33358, 33361, 33363, 33444, 33465, 33473, 33481, 33484, 33502, 33503, 33504, 33505, 33515, 33516, 33517, 33518, 33519, 33520, 33524, 33530, 33533, 33551, 33552, 33553, 33554, 33564, 33568, 33571, 33572, 33573, 33574, 33575, 33579, 33581, 33586, 33587, 33588, 33589, 33591, 33592, 33595, 33598, 33640, 33652, 33664, 33665, 33668, 33671, 33754, 33775, 33783, 33792, 33793, 33813, 33814, 33825, 33827, 33828, 33830, 33841, 33842, 33862, 33863, 33874, 33875, 33882, 33884, 33885, 33888, 33896, 33897, 33898, 33899, 33901, 33902, 33904, 33974, 33975, 33977, 34064, 34085, 34106, 34111, 34121, 34126, 34127, 34129, 34136, 34139, 34141, 34142, 34143, 34144, 34155, 34159, 34170, 34175, 34176, 34179, 34189, 34191, 34193, 34196, 34197, 34199, 34200, 34202, 34206, 34207, 34208, 34209, 34210, 34215, 34216, 34220, 34221, 34248, 34262, 34268, 34274, 34283, 34288, 34289, 34293, 34294, 34374, 34386, 34403, 34417, 34420, 34432, 34435, 34437, 34438, 34439, 34440, 34441, 34446, 34447, 34448, 34449, 34450, 34451, 34452, 34453, 34454, 34466, 34468, 34481, 34484, 34486, 34487, 34488, 34489, 34490, 34497, 34501, 34502, 34503, 34504, 34505, 34506, 34507, 34509, 34510, 34511, 34514, 34516, 34517, 34518, 34519, 34520, 34521, 34525, 34526, 34528, 34529, 34558, 34569, 34578, 34582, 34587, 34593, 34594, 34598, 34599, 34601, 34602, 34684, 34696, 34705, 34713, 34728, 34729, 34740, 34743, 34744, 34748, 34750, 34751, 34755, 34757, 34758, 34760, 34761, 34762, 34763, 34777, 34780, 34789, 34792, 34793, 34797, 34798, 34800, 34804, 34812, 34814, 34815, 34816, 34817, 34824, 34826, 34827, 34828, 34829, 34830, 34831, 34832, 34833, 34868, 34897, 34903, 34904, 34905, 34906, 34994, 35006, 35015, 35042, 35045, 35057, 35059, 35062, 35063, 35064, 35066, 35069, 35071, 35072, 35073, 35074, 35091, 35095, 35106, 35109, 35111, 35112, 35113, 35116, 35121, 35123, 35126, 35127, 35129, 35130, 35133, 35136, 35137, 35138, 35139, 35140, 35145, 35146, 35147, 35178, 35187, 35198, 35206, 35213, 35218, 35219, 35220, 35304, 35316, 35320, 35333, 35353, 35354, 35356, 35368, 35370, 35371, 35372, 35373, 35374, 35377, 35378, 35380, 35381, 35382, 35383, 35402, 35403, 35404, 35417, 35418, 35420, 35421, 35422, 35423, 35432, 35434, 35435, 35436, 35437, 35443, 35444, 35445, 35446, 35447, 35448, 35449, 35450, 35451, 35488, 35516, 35517, 35518, 35523, 35524, 35614, 35626, 35630, 35635, 35667, 35668, 35669, 35682, 35683, 35684, 35691, 35692, 35693, 35716, 35717, 35718, 35731, 35732, 35733, 35740, 35746, 35747, 35753, 35756, 35757, 35758, 35759, 35760, 35798, 35813, 35826, 35833, 35924, 35936, 35940, 35981, 35986, 35996, 35999, 36004, 36005, 36006, 36007, 36008, 36030, 36035, 36051, 36053, 36059, 36062, 36066, 36067, 36068, 36069, 36075, 36080, 36134, 36148, 36153, 36234, 36235, 36263, 36292, 36295, 36306, 36307, 36308, 36309, 36310, 36314, 36315, 36316, 36317, 36318, 36341, 36344, 36361, 36362, 36363, 36364, 36365, 36369, 36371, 36376, 36377, 36378, 36379, 36381, 36385, 36388, 36442, 36454, 36458, 36461, 36544, 36545, 36565, 36573, 36603, 36604, 36615, 36617, 36618, 36620, 36625, 36626, 36627, 36628, 36652, 36653, 36664, 36672, 36674, 36675, 36686, 36687, 36688, 36689, 36691, 36692, 36764, 36765, 36854, 36855, 36875, 36917, 36919, 36926, 36929, 36931, 36932, 36933, 36934, 36935, 36936, 36937, 36938, 36966, 36969, 36981, 36983, 36986, 36987, 36989, 36990, 36996, 36997, 36998, 36999, 37000, 37005, 37006, 37038, 37058, 37073, 37078, 37079, 37164, 37165, 37176, 37193, 37228, 37230, 37231, 37237, 37238, 37240, 37241, 37242, 37243, 37245, 37246, 37247, 37248, 37277, 37278, 37280, 37292, 37294, 37295, 37296, 37297, 37304, 37306, 37307, 37308, 37309, 37310, 37311, 37348, 37377, 37383, 37384, 37474, 37475, 37486, 37495, 37542, 37543, 37544, 37551, 37552, 37553, 37555, 37556, 37557, 37558, 37591, 37592, 37593, 37606, 37607, 37613, 37616, 37617, 37618, 37619, 37620, 37658, 37686, 37693, 37784, 37785, 37796, 37800, 37942, 37946, 38252, 38253, 38254, 38256, 38268, 38562, 38563, 38564, 38565, 38566, 38567, 38578, 38621, 38655, 38872, 38873, 38874, 38875, 38876, 38877, 38888, 38931, 38965, 39183, 39184, 39185, 39187, 39198, 39241, 39275, 39495, 39497, 39551, 39585, 39808, 39822, 39855, 39925, 40112, 40116, 40118, 40119, 40120, 40123, 40132, 40165, 40232, 40235, 40422, 40423, 40424, 40426, 40428, 40429, 40430, 40431, 40432, 40433, 40438, 40442, 40475, 40514, 40542, 40543, 40545, 40732, 40733, 40734, 40735, 40736, 40737, 40738, 40739, 40740, 40741, 40742, 40743, 40748, 40752, 40785, 40791, 40824, 40825, 40852, 40853, 40855, 41043, 41044, 41045, 41047, 41049, 41050, 41051, 41052, 41053, 41058, 41101, 41134, 41135, 41162, 41163, 41355, 41357, 41361, 41362, 41411, 41444, 41445, 41473, 41668, 41674, 41677, 41682, 41715, 41779, 41785, 41786, 41972, 41976, 41978, 41979, 41980, 41983, 41984, 41985, 41986, 41987, 41992, 42025, 42032, 42062, 42089, 42092, 42095, 42096, 42282, 42283, 42284, 42286, 42288, 42289, 42290, 42291, 42292, 42293, 42294, 42295, 42296, 42297, 42298, 42302, 42335, 42342, 42372, 42374, 42399, 42402, 42403, 42405, 42406, 42593, 42594, 42595, 42597, 42599, 42600, 42601, 42602, 42603, 42604, 42605, 42606, 42607, 42608, 42651, 42652, 42682, 42684, 42685, 42709, 42712, 42713, 42716, 42905, 42907, 42911, 42912, 42915, 42916, 42961, 42962, 42992, 42994, 42995, 43023, 43218, 43224, 43227, 43229, 43230, 43231, 43232, 43265, 43299, 43329, 43335, 43336, 43522, 43526, 43528, 43529, 43530, 43533, 43534, 43535, 43536, 43537, 43539, 43540, 43541, 43542, 43575, 43582, 43609, 43612, 43639, 43642, 43645, 43646, 43833, 43834, 43839, 43840, 43841, 43842, 43843, 43844, 43845, 43846, 43847, 43848, 43849, 43850, 43851, 43892, 43919, 43922, 43924, 43949, 43952, 43953, 43956, 44145, 44147, 44151, 44152, 44155, 44156, 44159, 44160, 44161, 44201, 44202, 44229, 44232, 44234, 44235, 44263, 44473, 44483, 44491, 44574, 44630, 44689, 44694, 44762, 44766, 44783, 44784, 44787, 44793, 44798, 44801, 44880, 44884, 44940, 44941, 44999, 45000, 45003, 45004, 45072, 45073, 45074, 45076, 45088, 45093, 45094, 45095, 45096, 45097, 45103, 45108, 45110, 45111, 45155, 45176, 45190, 45194, 45249, 45250, 45251, 45309, 45310, 45311, 45312, 45313, 45314, 45358, 45382, 45383, 45384, 45385, 45386, 45387, 45398, 45403, 45404, 45405, 45406, 45407, 45413, 45418, 45420, 45421, 45441, 45447, 45465, 45475, 45486, 45500, 45504, 45559, 45560, 45561, 45620, 45621, 45622, 45623, 45668, 45693, 45694, 45695, 45697, 45708, 45714, 45715, 45716, 45717, 45728, 45730, 45751, 45757, 45775, 45785, 45796, 45810, 45869, 45871, 45931, 45932, 45978, 46005, 46007, 46025, 46026, 46061, 46067, 46085, 46095, 46106, 46179, 46245, 46249, 46318, 46332, 46333, 46339, 46342, 46343, 46351, 46352, 46365, 46384, 46428, 46431, 46434, 46435, 46490, 46492, 46549, 46554, 46555, 46556, 46558, 46559, 46622, 46626, 46628, 46629, 46630, 46633, 46642, 46643, 46644, 46647, 46649, 46650, 46651, 46652, 46653, 46658, 46659, 46661, 46662, 46675, 46692, 46694, 46724, 46725, 46738, 46740, 46741, 46742, 46744, 46745, 46797, 46800, 46801, 46802, 46859, 46860, 46863, 46864, 46865, 46866, 46867, 46868, 46869, 46870, 46879, 46932, 46933, 46934, 46936, 46938, 46939, 46940, 46941, 46942, 46943, 46948, 46952, 46953, 46954, 46955, 46956, 46957, 46959, 46960, 46961, 46962, 46963, 46968, 46969, 46970, 46971, 46972, 46985, 46996, 47002, 47004, 47015, 47024, 47034, 47035, 47036, 47048, 47050, 47051, 47052, 47053, 47054, 47055, 47107, 47109, 47110, 47111, 47112, 47170, 47171, 47172, 47173, 47176, 47177, 47178, 47180, 47189, 47218, 47243, 47244, 47245, 47247, 47249, 47250, 47251, 47252, 47253, 47258, 47264, 47265, 47266, 47267, 47269, 47270, 47271, 47272, 47278, 47279, 47280, 47301, 47306, 47307, 47312, 47325, 47334, 47335, 47344, 47345, 47346, 47358, 47360, 47361, 47362, 47363, 47417, 47419, 47421, 47422, 47481, 47482, 47487, 47490, 47499, 47528, 47555, 47557, 47561, 47562, 47575, 47576, 47580, 47581, 47611, 47616, 47617, 47635, 47644, 47645, 47654, 47655, 47656, 47673, 47727, 47729, 47795, 47799, 47801, 47805, 47868, 47874, 47877, 47882, 47883, 47889, 47892, 47893, 47894, 47895, 47896, 47897, 47901, 47902, 47915, 47930, 47934, 47944, 47978, 47979, 47981, 47984, 47985, 47986, 48029, 48040, 48042, 48099, 48104, 48105, 48106, 48108, 48109, 48111, 48112, 48113, 48114, 48115, 48172, 48176, 48178, 48179, 48180, 48183, 48184, 48185, 48186, 48187, 48192, 48193, 48194, 48197, 48199, 48200, 48201, 48202, 48203, 48204, 48205, 48206, 48207, 48208, 48209, 48211, 48212, 48225, 48228, 48232, 48240, 48242, 48244, 48254, 48262, 48274, 48275, 48288, 48289, 48290, 48291, 48292, 48294, 48295, 48296, 48339, 48347, 48350, 48351, 48352, 48410, 48413, 48416, 48417, 48418, 48420, 48421, 48422, 48423, 48424, 48425, 48429, 48483, 48484, 48489, 48490, 48491, 48492, 48493, 48494, 48495, 48496, 48497, 48498, 48504, 48505, 48506, 48507, 48509, 48510, 48511, 48512, 48514, 48515, 48516, 48517, 48518, 48519, 48520, 48538, 48542, 48546, 48550, 48552, 48564, 48565, 48572, 48574, 48584, 48585, 48586, 48598, 48599, 48600, 48601, 48602, 48603, 48606, 48649, 48657, 48659, 48661, 48662, 48721, 48722, 48727, 48730, 48732, 48733, 48734, 48739, 48768, 48795, 48797, 48801, 48802, 48805, 48806, 48815, 48816, 48820, 48821, 48824, 48825, 48826, 48848, 48851, 48852, 48856, 48857, 48874, 48875, 48882, 48884, 48885, 48894, 48895, 48896, 48913, 48959, 48967, 48969, 49035, 49039, 49041, 49045, 49046, 49047, 49048, 49108, 49114, 49117, 49119, 49120, 49121, 49122, 49123, 49129, 49132, 49133, 49134, 49135, 49136, 49137, 49141, 49142, 49143, 49155, 49170, 49174, 49184, 49189, 49218, 49219, 49221, 49224, 49225, 49226, 49269, 49280, 49282, 49346, 49348, 49351, 49352, 49353, 49354, 49355, 49356, 49357, 49358, 49419, 49420, 49423, 49424, 49425, 49426, 49427, 49429, 49430, 49431, 49434, 49437, 49439, 49440, 49441, 49442, 49444, 49445, 49446, 49447, 49448, 49449, 49453, 49468, 49472, 49480, 49482, 49494, 49499, 49502, 49514, 49515, 49528, 49529, 49530, 49531, 49532, 49536, 49579, 49587, 49591, 49592, 49657, 49660, 49662, 49663, 49664, 49666, 49667, 49668, 49669, 49731, 49732, 49735, 49736, 49739, 49740, 49741, 49745, 49746, 49750, 49751, 49754, 49755, 49756, 49763, 49778, 49782, 49786, 49804, 49805, 49809, 49812, 49814, 49824, 49825, 49826, 49843, 49889, 49897, 49899, 49971, 49975, 49976, 49977, 49978, 50044, 50047, 50049, 50050, 50051, 50059, 50062, 50064, 50065, 50066, 50067, 50073, 50100, 50114, 50119, 50148, 50149, 50151, 50156, 50199, 50212, 50282, 50283, 50284, 50286, 50287, 50288, 50355, 50356, 50359, 50360, 50361, 50370, 50371, 50374, 50375, 50376, 50383, 50398, 50402, 50424, 50429, 50432, 50444, 50445, 50509, 50517, 50596, 50597, 50598, 50669, 50670, 50671, 50684, 50685, 50686, 50693, 50734, 50739, 50819, 50910, 50915, 50983, 50993, 51001, 51004, 51013, 51014, 51033, 51075, 51077, 51084, 51140, 51145, 51150, 51155, 51199, 51204, 51220, 51221, 51224, 51225, 51272, 51276, 51293, 51294, 51297, 51303, 51308, 51311, 51314, 51315, 51316, 51317, 51322, 51323, 51324, 51341, 51343, 51366, 51385, 51387, 51390, 51394, 51443, 51450, 51451, 51455, 51460, 51461, 51464, 51465, 51509, 51510, 51513, 51514, 51530, 51531, 51532, 51533, 51534, 51535, 51544, 51548, 51582, 51583, 51584, 51586, 51598, 51603, 51604, 51605, 51606, 51607, 51613, 51618, 51620, 51621, 51624, 51625, 51626, 51627, 51632, 51633, 51634, 51645, 51651, 51653, 51665, 51676, 51686, 51695, 51697, 51700, 51704, 51753, 51759, 51760, 51761, 51765, 51771, 51772, 51773, 51774, 51820, 51821, 51822, 51823, 51841, 51842, 51843, 51844, 51854, 51855, 51858, 51868, 51884, 51893, 51894, 51895, 51897, 51908, 51914, 51915, 51916, 51917, 51928, 51930, 51934, 51935, 51936, 51937, 51942, 51943, 51951, 51955, 51957, 51961, 51975, 51985, 51986, 51996, 52005, 52007, 52010, 52063, 52069, 52071, 52075, 52082, 52083, 52131, 52132, 52152, 52153, 52164, 52165, 52178, 52194, 52205, 52207, 52225, 52226, 52245, 52246, 52247, 52261, 52265, 52267, 52285, 52295, 52296, 52306, 52373, 52379, 52396, 52401, 52445, 52449, 52460, 52465, 52466, 52469, 52479, 52511, 52518, 52532, 52533, 52539, 52542, 52543, 52551, 52552, 52554, 52558, 52559, 52560, 52561, 52563, 52564, 52565, 52579, 52583, 52584, 52591, 52625, 52627, 52628, 52631, 52634, 52635, 52667, 52690, 52692, 52695, 52700, 52705, 52706, 52707, 52710, 52711, 52749, 52754, 52755, 52756, 52758, 52759, 52770, 52771, 52774, 52775, 52776, 52777, 52778, 52779, 52780, 52787, 52789, 52819, 52821, 52822, 52826, 52828, 52829, 52830, 52833, 52842, 52843, 52844, 52847, 52849, 52850, 52851, 52852, 52853, 52858, 52859, 52861, 52862, 52864, 52865, 52866, 52867, 52868, 52869, 52870, 52871, 52872, 52873, 52874, 52875, 52877, 52889, 52891, 52892, 52893, 52894, 52901, 52916, 52924, 52925, 52935, 52937, 52938, 52940, 52941, 52942, 52944, 52945, 52977, 52993, 52997, 53000, 53001, 53002, 53005, 53011, 53014, 53017, 53018, 53019, 53020, 53030, 53060, 53063, 53066, 53067, 53068, 53070, 53079, 53081, 53082, 53083, 53084, 53086, 53087, 53088, 53089, 53090, 53094, 53097, 53098, 53123, 53129, 53133, 53134, 53139, 53140, 53141, 53142, 53143, 53148, 53154, 53155, 53156, 53157, 53159, 53160, 53161, 53162, 53168, 53169, 53170, 53174, 53175, 53176, 53177, 53178, 53179, 53180, 53181, 53182, 53183, 53187, 53195, 53196, 53199, 53201, 53202, 53211, 53215, 53224, 53226, 53234, 53235, 53236, 53245, 53247, 53248, 53250, 53251, 53252, 53253, 53287, 53303, 53307, 53309, 53311, 53312, 53315, 53322, 53323, 53328, 53329, 53340, 53371, 53372, 53377, 53380, 53389, 53392, 53393, 53397, 53398, 53400, 53404, 53405, 53418, 53433, 53434, 53445, 53447, 53451, 53452, 53465, 53466, 53470, 53471, 53485, 53486, 53487, 53489, 53490, 53491, 53497, 53501, 53505, 53506, 53507, 53521, 53525, 53534, 53535, 53536, 53544, 53545, 53546, 53563, 53597, 53613, 53617, 53619, 53636, 53641, 53642, 53645, 53685, 53689, 53691, 53695, 53700, 53705, 53706, 53709, 53711, 53712, 53713, 53716, 53719, 53747, 53751, 53758, 53764, 53767, 53772, 53773, 53779, 53782, 53783, 53784, 53785, 53786, 53787, 53791, 53792, 53794, 53798, 53799, 53800, 53801, 53803, 53804, 53805, 53806, 53819, 53820, 53823, 53824, 53831, 53834, 53865, 53867, 53868, 53869, 53871, 53874, 53875, 53876, 53907, 53919, 53920, 53930, 53932, 53935, 53947, 53950, 53952, 53953, 53954, 53955, 53956, 53996, 53998, 54001, 54002, 54003, 54004, 54005, 54011, 54014, 54016, 54017, 54018, 54019, 54020, 54021, 54022, 54023, 54026, 54027, 54045, 54057, 54059, 54069, 54070, 54073, 54074, 54075, 54076, 54077, 54084, 54087, 54089, 54090, 54091, 54092, 54094, 54095, 54096, 54097, 54098, 54099, 54104, 54105, 54106, 54107, 54108, 54109, 54110, 54111, 54112, 54113, 54116, 54117, 54118, 54122, 54129, 54130, 54131, 54132, 54141, 54144, 54152, 54156, 54164, 54165, 54175, 54177, 54178, 54179, 54180, 54181, 54182, 54186, 54217, 54229, 54230, 54233, 54237, 54241, 54242, 54245, 54258, 54259, 54263, 54264, 54266, 54270, 54307, 54310, 54312, 54313, 54314, 54319, 54322, 54323, 54327, 54328, 54330, 54331, 54332, 54333, 54334, 54355, 54363, 54381, 54382, 54385, 54386, 54395, 54396, 54400, 54401, 54404, 54405, 54406, 54415, 54416, 54417, 54419, 54420, 54421, 54426, 54427, 54428, 54432, 54435, 54436, 54451, 54454, 54455, 54462, 54464, 54466, 54474, 54475, 54476, 54493, 54527, 54539, 54540, 54543, 54547, 54549, 54572, 54575, 54577, 54578, 54579, 54621, 54625, 54626, 54627, 54628, 54636, 54639, 54641, 54642, 54643, 54646, 54650, 54677, 54694, 54697, 54699, 54700, 54701, 54709, 54712, 54714, 54715, 54716, 54717, 54723, 54724, 54728, 54729, 54730, 54731, 54733, 54736, 54749, 54750, 54761, 54764, 54769, 54795, 54797, 54798, 54799, 54801, 54806, 54837, 54849, 54850, 54862, 54865, 54883, 54884, 54886, 54887, 54888, 54889, 54932, 54933, 54934, 54936, 54937, 54938, 54947, 54948, 54950, 54951, 54952, 54953, 54960, 54975, 55005, 55006, 55009, 55010, 55011, 55020, 55021, 55024, 55025, 55026, 55033, 55035, 55036, 55037, 55039, 55040, 55041, 55046, 55047, 55048, 55052, 55071, 55074, 55079, 55082, 55086, 55094, 55095, 55147, 55159, 55160, 55163, 55167, 55197, 55198, 55199, 55246, 55247, 55248, 55261, 55262, 55263, 55270, 55319, 55320, 55321, 55334, 55335, 55336, 55343, 55349, 55350, 55351, 55356, 55381, 55384, 55389, 55457, 55469, 55470, 55511, 55516, 55560, 55565, 55581, 55583, 55589, 55592, 55610, 55633, 55643, 55651, 55654, 55663, 55664, 55669, 55670, 55678, 55683, 55710, 55722, 55725, 55727, 55734, 55763, 55790, 55793, 55795, 55800, 55805, 55821, 55822, 55825, 55826, 55849, 55854, 55870, 55871, 55874, 55875, 55891, 55892, 55893, 55894, 55895, 55899, 55901, 55902, 55918, 55920, 55922, 55926, 55943, 55944, 55947, 55953, 55958, 55961, 55964, 55965, 55966, 55967, 55972, 55973, 55974, 55979, 55980, 55984, 55988, 55991, 55993, 56016, 56020, 56032, 56035, 56037, 56040, 56044, 56073, 56093, 56095, 56100, 56101, 56103, 56105, 56111, 56114, 56132, 56133, 56134, 56135, 56145, 56160, 56163, 56181, 56182, 56183, 56184, 56194, 56198, 56201, 56202, 56203, 56204, 56205, 56209, 56211, 56222, 56228, 56233, 56234, 56248, 56254, 56255, 56256, 56257, 56268, 56270, 56274, 56275, 56276, 56277, 56282, 56283, 56289, 56290, 56294, 56295, 56298, 56301, 56315, 56326, 56330, 56336, 56342, 56345, 56347, 56350, 56383, 56403, 56405, 56409, 56411, 56413, 56415, 56422, 56423, 56443, 56444, 56455, 56471, 56472, 56492, 56493, 56504, 56505, 56512, 56514, 56515, 56518, 56532, 56534, 56545, 56547, 56565, 56566, 56585, 56586, 56587, 56599, 56600, 56601, 56604, 56605, 56607, 56625, 56635, 56636, 56640, 56646, 56652, 56693, 56713, 56715, 56719, 56736, 56741, 56751, 56756, 56757, 56759, 56785, 56789, 56800, 56805, 56806, 56809, 56819, 56821, 56823, 56826, 56827, 56829, 56830, 56832, 56846, 56850, 56851, 56858, 56872, 56873, 56878, 56879, 56882, 56883, 56891, 56892, 56894, 56898, 56899, 56900, 56901, 56903, 56904, 56905, 56909, 56910, 56913, 56918, 56919, 56923, 56924, 56931, 56950, 56962, 56965, 56967, 56968, 56971, 56974, 56975, 57003, 57007, 57016, 57030, 57032, 57033, 57035, 57047, 57050, 57062, 57065, 57067, 57068, 57069, 57070, 57071, 57096, 57098, 57111, 57114, 57116, 57117, 57118, 57119, 57120, 57127, 57131, 57132, 57133, 57134, 57135, 57136, 57137, 57139, 57140, 57141, 57144, 57156, 57158, 57159, 57169, 57170, 57173, 57184, 57187, 57188, 57189, 57190, 57191, 57192, 57198, 57199, 57204, 57205, 57206, 57207, 57208, 57209, 57210, 57211, 57212, 57213, 57217, 57219, 57220, 57223, 57224, 57228, 57229, 57231, 57232, 57241, 57256, 57260, 57264, 57265, 57272, 57275, 57277, 57278, 57280, 57281, 57282, 57313, 57317, 57326, 57333, 57335, 57337, 57341, 57342, 57343, 57345, 57358, 57359, 57370, 57373, 57374, 57378, 57380, 57381, 57385, 57407, 57410, 57419, 57422, 57423, 57427, 57428, 57430, 57434, 57442, 57444, 57445, 57446, 57447, 57454, 57462, 57463, 57481, 57482, 57495, 57496, 57498, 57500, 57501, 57515, 57516, 57517, 57519, 57520, 57521, 57527, 57529, 57530, 57533, 57534, 57535, 57536, 57551, 57555, 57564, 57566, 57570, 57574, 57575, 57576, 57582, 57593, 57623, 57627, 57636, 57643, 57645, 57647, 57649, 57672, 57675, 57687, 57689, 57692, 57693, 57694, 57721, 57725, 57736, 57739, 57741, 57742, 57743, 57746, 57751, 57753, 57756, 57757, 57759, 57760, 57763, 57776, 57777, 57794, 57797, 57808, 57809, 57812, 57814, 57815, 57816, 57817, 57824, 57828, 57829, 57830, 57831, 57833, 57836, 57839, 57840, 57843, 57848, 57849, 57850, 57861, 57864, 57880, 57892, 57895, 57897, 57898, 57899, 57901, 57906, 57933, 57937, 57946, 57949, 57950, 57962, 57963, 57965, 57983, 57984, 57986, 57998, 58000, 58001, 58002, 58003, 58004, 58032, 58033, 58034, 58047, 58048, 58050, 58051, 58052, 58053, 58062, 58064, 58065, 58066, 58067, 58073, 58074, 58075, 58105, 58106, 58118, 58120, 58121, 58124, 58125, 58126, 58135, 58136, 58137, 58139, 58140, 58141, 58146, 58147, 58148, 58149, 58150, 58152, 58153, 58154, 58171, 58174, 58182, 58186, 58190, 58194, 58195, 58202, 58243, 58247, 58256, 58259, 58260, 58263, 58265, 58267, 58297, 58298, 58299, 58312, 58313, 58314, 58346, 58347, 58348, 58361, 58362, 58363, 58370, 58376, 58377, 58383, 58419, 58420, 58421, 58428, 58434, 58435, 58436, 58443, 58449, 58450, 58451, 58456, 58459, 58460, 58463, 58481, 58484, 58489, 58500, 58512, 58553, 58557, 58566, 58569, 58570, 58611, 58616, 58626, 58629, 58634, 58660, 58665, 58681, 58683, 58689, 58692, 58696, 58697, 58698, 58699, 58705, 58710, 58733, 58743, 58751, 58754, 58763, 58764, 58769, 58770, 58778, 58783, 58810, 58822, 58825, 58827, 58834, 58863, 58864, 58890, 58893, 58895, 58922, 58925, 58936, 58937, 58938, 58939, 58940, 58944, 58971, 58974, 58991, 58992, 58993, 58994, 58995, 58999, 59001, 59006, 59007, 59008, 59009, 59011, 59015, 59018, 59044, 59047, 59058, 59064, 59065, 59066, 59067, 59072, 59073, 59079, 59080, 59084, 59088, 59091, 59116, 59120, 59132, 59135, 59137, 59140, 59173, 59174, 59193, 59195, 59201, 59203, 59205, 59233, 59234, 59245, 59247, 59248, 59250, 59282, 59283, 59294, 59302, 59304, 59305, 59316, 59317, 59318, 59319, 59321, 59322, 59355, 59356, 59375, 59376, 59377, 59389, 59390, 59394, 59395, 59415, 59426, 59430, 59436, 59442, 59483, 59484, 59503, 59505, 59509, 59547, 59549, 59556, 59559, 59561, 59562, 59563, 59564, 59596, 59599, 59611, 59613, 59616, 59617, 59619, 59620, 59626, 59627, 59628, 59629, 59630, 59635, 59636, 59668, 59669, 59672, 59684, 59688, 59689, 59690, 59691, 59693, 59699, 59700, 59703, 59708, 59709, 59721, 59740, 59752, 59755, 59757, 59758, 59761, 59793, 59794, 59797, 59806, 59822, 59823, 59825, 59858, 59860, 59861, 59867, 59868, 59870, 59871, 59872, 59873, 59907, 59908, 59910, 59922, 59924, 59925, 59926, 59927, 59934, 59936, 59937, 59938, 59939, 59940, 59941, 59978, 59980, 59981, 59995, 59996, 59997, 59999, 60000, 60001, 60007, 60009, 60010, 60013, 60014, 60031, 60046, 60050, 60054, 60055, 60062, 60103, 60104, 60107, 60116, 60123, 60125, 60127, 60172, 60173, 60174, 60181, 60182, 60183, 60221, 60222, 60223, 60236, 60237, 60243, 60246, 60247, 60248, 60249, 60250, 60288, 60294, 60295, 60296, 60309, 60310, 60311, 60316, 60319, 60320, 60323, 60341, 60344, 60360, 60372, 60413, 60414, 60417, 60426, 60429, 60430, 60645, 60650, 60680, 60718, 60758, 60882, 60886, 60955, 60956, 60957, 60960, 60963, 60990, 61018, 61028, 61066, 61068, 61192, 61193, 61194, 61196, 61208, 61265, 61266, 61267, 61268, 61269, 61270, 61273, 61283, 61300, 61328, 61338, 61339, 61368, 61376, 61378, 61502, 61503, 61504, 61505, 61506, 61507, 61518, 61561, 61575, 61576, 61577, 61578, 61579, 61580, 61583, 61593, 61595, 61610, 61638, 61648, 61649, 61678, 61686, 61688, 61813, 61814, 61815, 61817, 61828, 61871, 61886, 61887, 61888, 61889, 61893, 61903, 61905, 61948, 61959, 61988, 61996, 62125, 62127, 62181, 62198, 62199, 62213, 62215, 62269, 62298, 62438, 62452, 62485, 62505, 62510, 62540, 62555, 62564, 62566, 62567, 62571, 62578, 62614, 62618, 62742, 62746, 62748, 62749, 62750, 62753, 62762, 62795, 62815, 62816, 62817, 62820, 62822, 62823, 62830, 62831, 62848, 62850, 62862, 62865, 62874, 62876, 62877, 62878, 62881, 62888, 62916, 62924, 62926, 62928, 63052, 63053, 63054, 63056, 63058, 63059, 63060, 63061, 63062, 63063, 63068, 63072, 63105, 63125, 63126, 63127, 63128, 63129, 63130, 63132, 63133, 63140, 63141, 63143, 63144, 63158, 63160, 63172, 63173, 63175, 63184, 63186, 63187, 63188, 63191, 63198, 63199, 63226, 63228, 63234, 63236, 63238, 63363, 63364, 63365, 63367, 63369, 63370, 63371, 63372, 63373, 63378, 63421, 63436, 63437, 63438, 63439, 63442, 63443, 63450, 63451, 63453, 63454, 63455, 63468, 63482, 63483, 63494, 63496, 63497, 63498, 63501, 63509, 63536, 63538, 63544, 63546, 63675, 63677, 63681, 63682, 63731, 63748, 63749, 63752, 63760, 63761, 63763, 63764, 63765, 63778, 63793, 63819, 63846, 63848, 63988, 63994, 63997, 64002, 64035, 64055, 64060, 64066, 64067, 64068, 64090, 64099, 64105, 64106, 64114, 64116, 64117, 64121, 64128, 64131, 64147, 64164, 64168, 64292, 64296, 64298, 64299, 64300, 64303, 64304, 64305, 64306, 64307, 64312, 64345, 64352, 64365, 64366, 64367, 64370, 64372, 64373, 64376, 64377, 64378, 64380, 64381, 64382, 64398, 64400, 64409, 64412, 64415, 64416, 64424, 64426, 64427, 64428, 64431, 64438, 64441, 64457, 64466, 64474, 64476, 64478, 64603, 64604, 64609, 64610, 64611, 64612, 64613, 64614, 64615, 64616, 64617, 64618, 64662, 64676, 64677, 64678, 64679, 64682, 64683, 64686, 64687, 64688, 64690, 64691, 64692, 64693, 64694, 64708, 64719, 64722, 64723, 64726, 64734, 64736, 64737, 64738, 64741, 64749, 64751, 64767, 64776, 64778, 64784, 64786, 64915, 64917, 64921, 64922, 64925, 64926, 64971, 64972, 64988, 64989, 64992, 64996, 64997, 64998, 65000, 65001, 65002, 65003, 65004, 65005, 65018, 65033, 65059, 65061, 65077, 65086, 65088, 65228, 65234, 65237, 65239, 65240, 65241, 65242, 65275, 65295, 65300, 65306, 65307, 65308, 65309, 65330, 65339, 65345, 65346, 65354, 65356, 65357, 65361, 65368, 65371, 65387, 65404, 65408, 65539, 65540, 65543, 65544, 65545, 65546, 65547, 65549, 65550, 65551, 65592, 65606, 65607, 65612, 65613, 65616, 65617, 65618, 65619, 65620, 65621, 65622, 65638, 65649, 65652, 65656, 65664, 65666, 65667, 65668, 65671, 65681, 65697, 65706, 65714, 65716, 65851, 65852, 65855, 65856, 65859, 65860, 65861, 65902, 65918, 65919, 65922, 65926, 65927, 65928, 65929, 65930, 65931, 65932, 65933, 65934, 65948, 65963, 65989, 65991, 66007, 66016, 66018, 66164, 66167, 66169, 66170, 66171, 66236, 66237, 66238, 66239, 66269, 66276, 66284, 66286, 66287, 66291, 66301, 66317, 66334, 66475, 66476, 66479, 66480, 66481, 66522, 66542, 66546, 66547, 66548, 66549, 66550, 66551, 66552, 66568, 66611, 66627, 66636, 66789, 66790, 66791, 66856, 66857, 66858, 66859, 66921, 66937, 67103, 67113, 67121, 67155, 67160, 67187, 67189, 67190, 67196, 67204, 67228, 67230, 67260, 67267, 67268, 67319, 67324, 67392, 67396, 67413, 67414, 67417, 67423, 67428, 67431, 67465, 67466, 67467, 67470, 67473, 67487, 67488, 67489, 67497, 67499, 67500, 67506, 67510, 67514, 67521, 67528, 67538, 67540, 67562, 67570, 67571, 67576, 67577, 67578, 67629, 67630, 67633, 67634, 67702, 67703, 67704, 67706, 67718, 67723, 67724, 67725, 67726, 67727, 67733, 67738, 67740, 67741, 67775, 67776, 67777, 67778, 67779, 67780, 67783, 67785, 67793, 67797, 67798, 67799, 67806, 67807, 67809, 67810, 67816, 67820, 67824, 67831, 67838, 67848, 67849, 67850, 67872, 67878, 67879, 67880, 67881, 67886, 67887, 67888, 67940, 67941, 67942, 67943, 67988, 68013, 68014, 68015, 68017, 68028, 68034, 68035, 68036, 68037, 68048, 68050, 68071, 68077, 68086, 68087, 68088, 68089, 68093, 68095, 68103, 68105, 68107, 68108, 68109, 68116, 68117, 68119, 68126, 68130, 68141, 68148, 68159, 68160, 68182, 68188, 68189, 68191, 68196, 68197, 68251, 68252, 68298, 68325, 68327, 68345, 68346, 68381, 68387, 68398, 68399, 68405, 68413, 68415, 68417, 68418, 68419, 68426, 68451, 68469, 68492, 68498, 68499, 68565, 68569, 68638, 68652, 68653, 68659, 68662, 68663, 68671, 68672, 68685, 68704, 68705, 68710, 68731, 68732, 68733, 68737, 68739, 68740, 68746, 68748, 68751, 68754, 68755, 68764, 68766, 68767, 68771, 68773, 68778, 68780, 68786, 68810, 68812, 68814, 68817, 68818, 68869, 68874, 68875, 68876, 68878, 68879, 68942, 68946, 68948, 68949, 68950, 68953, 68962, 68963, 68964, 68967, 68969, 68970, 68971, 68972, 68973, 68978, 68979, 68981, 68982, 68995, 69012, 69014, 69015, 69016, 69017, 69020, 69022, 69023, 69030, 69031, 69037, 69038, 69039, 69041, 69042, 69043, 69044, 69045, 69047, 69048, 69049, 69050, 69056, 69058, 69060, 69061, 69062, 69064, 69065, 69071, 69074, 69076, 69077, 69078, 69081, 69083, 69088, 69090, 69096, 69112, 69116, 69117, 69120, 69121, 69122, 69124, 69126, 69127, 69128, 69180, 69183, 69186, 69187, 69188, 69190, 69199, 69253, 69254, 69259, 69260, 69261, 69262, 69263, 69268, 69274, 69275, 69276, 69277, 69279, 69280, 69281, 69282, 69288, 69289, 69290, 69316, 69322, 69326, 69327, 69328, 69329, 69332, 69333, 69335, 69340, 69341, 69343, 69344, 69347, 69348, 69349, 69351, 69352, 69353, 69354, 69355, 69356, 69357, 69358, 69359, 69366, 69368, 69370, 69371, 69372, 69373, 69381, 69384, 69386, 69387, 69388, 69391, 69393, 69399, 69400, 69406, 69422, 69426, 69427, 69428, 69429, 69431, 69432, 69434, 69436, 69437, 69491, 69492, 69497, 69500, 69509, 69538, 69565, 69567, 69571, 69572, 69585, 69586, 69590, 69591, 69621, 69626, 69627, 69638, 69639, 69642, 69645, 69650, 69651, 69653, 69654, 69655, 69657, 69658, 69659, 69661, 69662, 69663, 69664, 69665, 69666, 69668, 69683, 69691, 69703, 69709, 69716, 69732, 69736, 69737, 69738, 69739, 69805, 69809, 69811, 69815, 69878, 69884, 69887, 69892, 69893, 69899, 69902, 69903, 69904, 69905, 69906, 69907, 69911, 69912, 69925, 69940, 69944, 69945, 69950, 69954, 69956, 69957, 69958, 69971, 69972, 69973, 69977, 69979, 69980, 69986, 69988, 69989, 69991, 69994, 69995, 69996, 70004, 70006, 70007, 70011, 70013, 70018, 70020, 70021, 70026, 70037, 70039, 70050, 70052, 70054, 70057, 70058, 70116, 70118, 70121, 70122, 70123, 70124, 70125, 70189, 70190, 70193, 70194, 70195, 70196, 70197, 70204, 70207, 70209, 70210, 70211, 70212, 70214, 70215, 70216, 70217, 70218, 70219, 70238, 70242, 70250, 70252, 70256, 70257, 70262, 70263, 70264, 70266, 70267, 70268, 70270, 70271, 70272, 70277, 70278, 70279, 70281, 70282, 70283, 70284, 70285, 70287, 70288, 70289, 70296, 70298, 70299, 70300, 70301, 70302, 70306, 70311, 70314, 70316, 70317, 70318, 70321, 70323, 70330, 70331, 70336, 70347, 70349, 70352, 70356, 70357, 70361, 70362, 70364, 70366, 70367, 70427, 70430, 70432, 70433, 70434, 70439, 70501, 70502, 70505, 70506, 70515, 70516, 70520, 70521, 70524, 70525, 70526, 70548, 70552, 70556, 70568, 70569, 70572, 70574, 70575, 70576, 70577, 70578, 70580, 70581, 70582, 70583, 70584, 70587, 70588, 70589, 70591, 70592, 70593, 70594, 70595, 70596, 70598, 70613, 70621, 70633, 70639, 70641, 70646, 70657, 70659, 70662, 70666, 70667, 70668, 70669, 70741, 70745, 70746, 70747, 70748, 70814, 70817, 70819, 70820, 70821, 70829, 70832, 70834, 70835, 70836, 70837, 70843, 70870, 70884, 70886, 70887, 70888, 70889, 70901, 70902, 70903, 70907, 70909, 70916, 70918, 70919, 70921, 70926, 70934, 70936, 70937, 70941, 70943, 70950, 70951, 70956, 70967, 70969, 70982, 70984, 70987, 71052, 71053, 71054, 71056, 71057, 71058, 71125, 71126, 71129, 71130, 71131, 71140, 71141, 71144, 71145, 71146, 71153, 71168, 71172, 71192, 71194, 71196, 71197, 71198, 71199, 71200, 71201, 71202, 71207, 71208, 71209, 71211, 71212, 71213, 71214, 71215, 71218, 71241, 71253, 71261, 71266, 71277, 71279, 71282, 71286, 71287, 71366, 71367, 71368, 71439, 71440, 71441, 71454, 71455, 71456, 71463, 71504, 71506, 71507, 71508, 71509, 71521, 71522, 71523, 71563, 71571, 71576, 71587, 71589, 71680, 71685, 71753, 71763, 71771, 71774, 71783, 71784, 71803, 71805, 71810, 71837, 71839, 71840, 71841, 71843, 71844, 71845, 71846, 71847, 71854, 71877, 71878, 71880, 71882, 71910, 71915, 71917, 71918, 71920, 71925, 71969, 71974, 71990, 71991, 71994, 71995, 72042, 72046, 72063, 72064, 72067, 72073, 72078, 72081, 72084, 72085, 72086, 72087, 72092, 72093, 72094, 72111, 72113, 72115, 72116, 72117, 72120, 72123, 72136, 72137, 72138, 72139, 72147, 72149, 72150, 72151, 72153, 72154, 72155, 72156, 72157, 72160, 72164, 72171, 72178, 72187, 72188, 72190, 72192, 72212, 72213, 72220, 72221, 72225, 72226, 72227, 72228, 72231, 72234, 72280, 72283, 72301, 72302, 72303, 72304, 72314, 72318, 72353, 72354, 72368, 72374, 72375, 72376, 72377, 72388, 72390, 72394, 72395, 72396, 72397, 72402, 72403, 72415, 72421, 72426, 72427, 72428, 72429, 72433, 72435, 72443, 72446, 72447, 72448, 72449, 72456, 72457, 72459, 72461, 72463, 72464, 72465, 72466, 72467, 72470, 72481, 72488, 72497, 72499, 72500, 72502, 72522, 72523, 72528, 72529, 72531, 72535, 72536, 72537, 72542, 72543, 72591, 72592, 72612, 72613, 72624, 72625, 72638, 72654, 72665, 72667, 72685, 72686, 72705, 72706, 72707, 72721, 72725, 72727, 72738, 72739, 72745, 72753, 72755, 72756, 72757, 72758, 72759, 72766, 72771, 72773, 72774, 72791, 72807, 72809, 72812, 72832, 72833, 72838, 72839, 72856, 72861, 72905, 72909, 72920, 72925, 72926, 72929, 72939, 72971, 72978, 72992, 72993, 72999, 73002, 73003, 73011, 73012, 73014, 73018, 73019, 73020, 73021, 73023, 73024, 73025, 73039, 73043, 73044, 73045, 73050, 73051, 73071, 73072, 73073, 73077, 73079, 73080, 73081, 73083, 73084, 73085, 73086, 73087, 73088, 73091, 73094, 73095, 73104, 73106, 73107, 73111, 73113, 73117, 73118, 73120, 73122, 73126, 73127, 73150, 73152, 73154, 73155, 73157, 73158, 73167, 73170, 73216, 73218, 73231, 73234, 73236, 73237, 73238, 73239, 73240, 73247, 73279, 73289, 73290, 73293, 73304, 73307, 73309, 73310, 73311, 73312, 73318, 73319, 73324, 73325, 73326, 73327, 73328, 73329, 73330, 73331, 73332, 73333, 73337, 73349, 73351, 73352, 73356, 73357, 73361, 73362, 73363, 73370, 73371, 73376, 73377, 73378, 73379, 73381, 73382, 73383, 73384, 73385, 73387, 73388, 73389, 73391, 73393, 73394, 73395, 73396, 73397, 73398, 73400, 73401, 73402, 73411, 73414, 73416, 73417, 73418, 73421, 73423, 73427, 73430, 73432, 73436, 73437, 73452, 73453, 73456, 73457, 73461, 73462, 73464, 73465, 73466, 73467, 73478, 73479, 73490, 73527, 73530, 73539, 73542, 73543, 73547, 73548, 73550, 73554, 73583, 73601, 73602, 73615, 73616, 73620, 73621, 73635, 73636, 73637, 73639, 73640, 73641, 73647, 73655, 73656, 73668, 73669, 73671, 73672, 73675, 73680, 73681, 73683, 73684, 73686, 73687, 73688, 73689, 73691, 73692, 73693, 73694, 73695, 73696, 73698, 73701, 73703, 73704, 73713, 73721, 73733, 73737, 73739, 73742, 73746, 73747, 73762, 73763, 73766, 73767, 73768, 73769, 73792, 73795, 73841, 73845, 73856, 73859, 73861, 73862, 73863, 73866, 73897, 73914, 73917, 73929, 73932, 73934, 73935, 73936, 73937, 73944, 73948, 73949, 73950, 73951, 73953, 73956, 73969, 73970, 73981, 73984, 73986, 73987, 73988, 74001, 74002, 74003, 74007, 74009, 74011, 74013, 74014, 74015, 74016, 74017, 74018, 74019, 74021, 74026, 74034, 74036, 74037, 74041, 74043, 74047, 74050, 74051, 74052, 74056, 74057, 74067, 74069, 74070, 74082, 74084, 74085, 74087, 74103, 74104, 74106, 74152, 74153, 74154, 74167, 74168, 74170, 74171, 74172, 74173, 74195, 74225, 74226, 74240, 74241, 74244, 74245, 74246, 74255, 74256, 74257, 74259, 74260, 74261, 74266, 74267, 74268, 74272, 74291, 74292, 74294, 74296, 74297, 74298, 74300, 74301, 74302, 74306, 74307, 74308, 74309, 74311, 74312, 74313, 74314, 74315, 74318, 74321, 74323, 74324, 74341, 74353, 74357, 74361, 74362, 74366, 74367, 74377, 74379, 74380, 74382, 74383, 74386, 74387, 74417, 74418, 74419, 74466, 74467, 74468, 74481, 74482, 74483, 74490, 74539, 74540, 74541, 74554, 74555, 74556, 74563, 74569, 74570, 74571, 74576, 74601, 74604, 74606, 74607, 74608, 74609, 74621, 74622, 74623, 74631, 74633, 74634, 74663, 74667, 74671, 74672, 74676, 74677, 74687, 74689, 74690, 74731, 74736, 74780, 74785, 74801, 74803, 74809, 74812, 74830, 74853, 74863, 74871, 74874, 74883, 74884, 74889, 74890, 74898, 74903, 74905, 74910, 74930, 74937, 74939, 74940, 74941, 74942, 74943, 74944, 74945, 74946, 74947, 74954, 74977, 74978, 74980, 74982, 74983, 75010, 75013, 75015, 75017, 75018, 75042, 75045, 75091, 75094, 75111, 75112, 75113, 75114, 75115, 75119, 75121, 75138, 75164, 75167, 75178, 75184, 75185, 75186, 75187, 75192, 75193, 75199, 75200, 75204, 75208, 75211, 75216, 75217, 75223, 75236, 75237, 75238, 75239, 75240, 75247, 75249, 75251, 75252, 75253, 75254, 75255, 75256, 75257, 75260, 75271, 75278, 75287, 75290, 75292, 75293, 75312, 75313, 75315, 75321, 75323, 75325, 75326, 75327, 75353, 75354, 75365, 75402, 75403, 75414, 75422, 75424, 75425, 75442, 75475, 75476, 75495, 75496, 75497, 75509, 75510, 75514, 75515, 75528, 75529, 75535, 75543, 75546, 75547, 75548, 75549, 75550, 75556, 75561, 75562, 75563, 75564, 75581, 75597, 75599, 75602, 75603, 75622, 75623, 75625, 75628, 75629, 75667, 75669, 75716, 75719, 75731, 75733, 75736, 75737, 75739, 75740, 75756, 75788, 75789, 75792, 75804, 75808, 75809, 75810, 75811, 75813, 75819, 75820, 75823, 75828, 75829, 75841, 75860, 75861, 75862, 75863, 75867, 75869, 75871, 75872, 75873, 75874, 75875, 75876, 75877, 75878, 75881, 75894, 75896, 75897, 75901, 75903, 75907, 75910, 75912, 75913, 75916, 75917, 75926, 75942, 75943, 75944, 75945, 75947, 75978, 75980, 75981, 76027, 76028, 76030, 76042, 76044, 76045, 76046, 76047, 76054, 76098, 76100, 76101, 76115, 76116, 76117, 76119, 76120, 76121, 76127, 76129, 76130, 76133, 76134, 76151, 76152, 76160, 76161, 76166, 76167, 76168, 76169, 76170, 76171, 76172, 76173, 76174, 76175, 76178, 76181, 76182, 76183, 76184, 76201, 76213, 76217, 76222, 76223, 76226, 76227, 76236, 76242, 76243, 76245, 76246, 76247, 76292, 76293, 76294, 76341, 76342, 76343, 76356, 76357, 76363, 76408, 76414, 76415, 76416, 76429, 76430, 76431, 76436, 76439, 76440, 76443, 76461, 76464, 76466, 76467, 76468, 76480, 76481, 76482, 76483, 76491, 76492, 76493, 76494, 76523, 76527, 76531, 76532, 76533, 76536, 76537, 76546, 76547, 76549, 76550, 76765, 76770, 76800, 76817, 76819, 76838, 76848, 76855, 76878, 76879, 77002, 77006, 77075, 77076, 77077, 77080, 77083, 77110, 77127, 77128, 77129, 77130, 77135, 77138, 77139, 77148, 77158, 77165, 77171, 77186, 77188, 77189, 77312, 77313, 77314, 77316, 77328, 77385, 77386, 77387, 77388, 77389, 77390, 77393, 77403, 77420, 77437, 77438, 77439, 77440, 77445, 77448, 77449, 77458, 77459, 77468, 77475, 77481, 77488, 77496, 77498, 77499, 77623, 77624, 77625, 77627, 77638, 77681, 77696, 77697, 77698, 77699, 77703, 77713, 77715, 77747, 77748, 77749, 77750, 77755, 77758, 77759, 77769, 77778, 77785, 77791, 77798, 77806, 77809, 77935, 77937, 77991, 78008, 78009, 78023, 78025, 78058, 78060, 78065, 78069, 78079, 78101, 78108, 78248, 78262, 78295, 78315, 78320, 78350, 78365, 78367, 78369, 78372, 78373, 78374, 78376, 78377, 78380, 78381, 78388, 78398, 78400, 78404, 78405, 78424, 78428, 78429, 78552, 78556, 78558, 78559, 78560, 78563, 78572, 78605, 78625, 78626, 78627, 78630, 78632, 78633, 78640, 78641, 78658, 78660, 78672, 78675, 78677, 78678, 78679, 78680, 78682, 78683, 78684, 78685, 78686, 78687, 78688, 78689, 78690, 78691, 78698, 78708, 78710, 78714, 78715, 78721, 78726, 78734, 78736, 78738, 78739, 78863, 78864, 78869, 78870, 78871, 78872, 78873, 78878, 78936, 78937, 78938, 78939, 78942, 78943, 78950, 78951, 78953, 78954, 78968, 78982, 78983, 78987, 78988, 78989, 78990, 78992, 78993, 78994, 78995, 78996, 78997, 78998, 78999, 79000, 79001, 79009, 79018, 79020, 79024, 79025, 79031, 79036, 79038, 79044, 79046, 79049, 79175, 79177, 79181, 79182, 79231, 79248, 79249, 79252, 79260, 79261, 79263, 79264, 79265, 79278, 79293, 79298, 79300, 79302, 79303, 79305, 79309, 79310, 79319, 79330, 79334, 79341, 79346, 79348, 79488, 79494, 79497, 79502, 79535, 79555, 79560, 79566, 79567, 79568, 79590, 79599, 79605, 79606, 79607, 79609, 79612, 79613, 79614, 79616, 79617, 79620, 79621, 79628, 79631, 79638, 79640, 79644, 79645, 79647, 79664, 79668, 79669, 79799, 79800, 79803, 79804, 79805, 79806, 79807, 79852, 79866, 79867, 79872, 79873, 79876, 79877, 79878, 79880, 79881, 79882, 79898, 79909, 79912, 79916, 79917, 79918, 79919, 79920, 79922, 79923, 79924, 79925, 79926, 79927, 79928, 79929, 79930, 79931, 79941, 79948, 79950, 79954, 79955, 79957, 79961, 79966, 79974, 79976, 79979, 80111, 80112, 80115, 80116, 80162, 80178, 80179, 80182, 80186, 80187, 80188, 80190, 80191, 80192, 80193, 80194, 80208, 80223, 80228, 80230, 80232, 80233, 80235, 80239, 80240, 80249, 80251, 80260, 80264, 80267, 80271, 80276, 80278, 80424, 80427, 80429, 80430, 80431, 80496, 80497, 80498, 80499, 80529, 80536, 80537, 80539, 80542, 80543, 80544, 80546, 80547, 80550, 80551, 80561, 80568, 80570, 80574, 80575, 80577, 80594, 80599, 80735, 80736, 80739, 80740, 80741, 80782, 80802, 80806, 80807, 80808, 80809, 80810, 80811, 80812, 80828, 80848, 80850, 80852, 80853, 80855, 80859, 80860, 80871, 80880, 80884, 80887, 80891, 80896, 81049, 81050, 81051, 81116, 81117, 81118, 81119, 81162, 81163, 81170, 81181, 81190, 81194, 81197, 81363, 81373, 81381, 81415, 81420, 81447, 81449, 81450, 81456, 81464, 81467, 81469, 81482, 81484, 81485, 81486, 81488, 81490, 81498, 81505, 81508, 81520, 81527, 81528, 81529, 81579, 81584, 81652, 81656, 81673, 81674, 81677, 81683, 81688, 81691, 81725, 81726, 81727, 81730, 81733, 81747, 81748, 81749, 81757, 81759, 81760, 81766, 81770, 81774, 81777, 81778, 81779, 81780, 81781, 81785, 81788, 81789, 81792, 81794, 81795, 81796, 81798, 81800, 81808, 81815, 81818, 81821, 81822, 81830, 81831, 81836, 81837, 81838, 81839, 81890, 81893, 81963, 81964, 81978, 81984, 81985, 81986, 81987, 81998, 82000, 82036, 82037, 82038, 82039, 82043, 82045, 82053, 82057, 82058, 82059, 82066, 82067, 82069, 82076, 82080, 82087, 82088, 82089, 82090, 82091, 82095, 82098, 82099, 82102, 82104, 82105, 82106, 82109, 82110, 82118, 82125, 82128, 82131, 82132, 82138, 82139, 82141, 82146, 82147, 82149, 82201, 82202, 82248, 82275, 82277, 82295, 82296, 82331, 82337, 82348, 82349, 82355, 82363, 82365, 82367, 82368, 82369, 82376, 82398, 82400, 82401, 82405, 82409, 82412, 82414, 82415, 82416, 82419, 82438, 82441, 82442, 82448, 82449, 82515, 82519, 82588, 82602, 82603, 82609, 82612, 82613, 82621, 82622, 82635, 82654, 82655, 82660, 82681, 82682, 82683, 82687, 82689, 82690, 82696, 82698, 82701, 82704, 82705, 82707, 82709, 82712, 82713, 82714, 82716, 82717, 82720, 82721, 82722, 82723, 82724, 82725, 82726, 82728, 82730, 82736, 82738, 82740, 82744, 82745, 82748, 82760, 82762, 82764, 82767, 82768, 82769, 82826, 82828, 82899, 82900, 82903, 82914, 82917, 82919, 82920, 82921, 82922, 82928, 82929, 82962, 82966, 82967, 82972, 82973, 82980, 82981, 82987, 82988, 82989, 82991, 82992, 82993, 82994, 82995, 82997, 82998, 82999, 83006, 83008, 83010, 83011, 83012, 83017, 83018, 83019, 83020, 83021, 83022, 83023, 83024, 83025, 83026, 83027, 83028, 83029, 83030, 83031, 83032, 83033, 83034, 83035, 83036, 83040, 83046, 83048, 83050, 83054, 83055, 83058, 83061, 83062, 83066, 83067, 83071, 83072, 83074, 83076, 83077, 83079, 83137, 83140, 83149, 83211, 83212, 83225, 83226, 83230, 83231, 83266, 83278, 83279, 83282, 83285, 83290, 83291, 83293, 83294, 83297, 83298, 83299, 83301, 83302, 83303, 83304, 83305, 83306, 83308, 83323, 83328, 83330, 83331, 83332, 83333, 83335, 83339, 83340, 83342, 83343, 83344, 83345, 83346, 83349, 83356, 83360, 83364, 83368, 83371, 83372, 83376, 83377, 83378, 83379, 83451, 83455, 83524, 83527, 83539, 83542, 83544, 83545, 83546, 83547, 83580, 83594, 83596, 83597, 83598, 83611, 83612, 83613, 83617, 83619, 83626, 83628, 83629, 83631, 83636, 83637, 83639, 83642, 83643, 83644, 83646, 83647, 83650, 83651, 83652, 83653, 83654, 83655, 83656, 83660, 83661, 83666, 83668, 83670, 83674, 83675, 83677, 83678, 83679, 83692, 83694, 83697, 83699, 83762, 83763, 83764, 83835, 83836, 83850, 83851, 83854, 83855, 83856, 83878, 83882, 83902, 83904, 83906, 83907, 83908, 83910, 83911, 83912, 83917, 83918, 83919, 83921, 83922, 83923, 83924, 83925, 83928, 83948, 83950, 83951, 83952, 83953, 83955, 83959, 83960, 83962, 83963, 83964, 83965, 83966, 83971, 83976, 83980, 83984, 83987, 83988, 83989, 83991, 83992, 83996, 83997, 84076, 84077, 84078, 84149, 84150, 84151, 84164, 84165, 84166, 84173, 84214, 84216, 84217, 84218, 84219, 84231, 84232, 84233, 84262, 84263, 84270, 84272, 84273, 84274, 84275, 84276, 84281, 84286, 84290, 84294, 84297, 84298, 84299, 84390, 84395, 84463, 84473, 84481, 84484, 84493, 84494, 84513, 84515, 84520, 84547, 84549, 84550, 84551, 84553, 84554, 84555, 84556, 84557, 84564, 84567, 84569, 84582, 84584, 84585, 84586, 84587, 84588, 84590, 84592, 84598, 84605, 84608, 84620, 84625, 84627, 84628, 84629, 84701, 84704, 84774, 84777, 84788, 84794, 84795, 84796, 84797, 84802, 84803, 84821, 84826, 84827, 84833, 84846, 84847, 84848, 84849, 84857, 84859, 84861, 84863, 84864, 84865, 84866, 84867, 84870, 84877, 84878, 84879, 84880, 84881, 84885, 84888, 84889, 84892, 84894, 84895, 84896, 84897, 84900, 84902, 84908, 84915, 84918, 84921, 84922, 84923, 84931, 84935, 84936, 84937, 84939, 85012, 85013, 85024, 85085, 85086, 85105, 85106, 85107, 85125, 85138, 85139, 85145, 85153, 85156, 85157, 85158, 85159, 85166, 85171, 85173, 85174, 85188, 85190, 85191, 85195, 85199, 85202, 85204, 85205, 85206, 85207, 85209, 85212, 85228, 85231, 85232, 85233, 85238, 85239, 85326, 85329, 85399, 85402, 85414, 85418, 85419, 85420, 85421, 85423, 85439, 85451, 85471, 85472, 85473, 85477, 85479, 85481, 85483, 85484, 85485, 85486, 85487, 85488, 85491, 85497, 85499, 85502, 85503, 85504, 85506, 85507, 85510, 85511, 85512, 85513, 85514, 85515, 85516, 85517, 85520, 85522, 85526, 85527, 85528, 85530, 85534, 85535, 85538, 85552, 85554, 85555, 85557, 85559, 85637, 85638, 85640, 85710, 85711, 85725, 85726, 85727, 85729, 85730, 85731, 85737, 85761, 85762, 85770, 85771, 85776, 85777, 85778, 85779, 85781, 85782, 85783, 85784, 85785, 85788, 85791, 85793, 85794, 85808, 85810, 85811, 85812, 85813, 85815, 85819, 85820, 85822, 85823, 85824, 85825, 85826, 85827, 85832, 85836, 85837, 85840, 85844, 85848, 85851, 85852, 85853, 85856, 85857, 85951, 85952, 85953, 86024, 86025, 86026, 86039, 86040, 86041, 86046, 86071, 86074, 86076, 86077, 86078, 86091, 86092, 86093, 86101, 86103, 86104, 86122, 86123, 86130, 86132, 86133, 86134, 86135, 86136, 86137, 86141, 86142, 86146, 86147, 86150, 86154, 86157, 86158, 86159, 86160, 86375, 86380, 86410, 86427, 86429, 86448, 86458, 86459, 86461, 86462, 86463, 86465, 86474, 86488, 86489, 86612, 86616, 86685, 86686, 86687, 86690, 86693, 86720, 86737, 86738, 86739, 86740, 86745, 86748, 86749, 86758, 86768, 86769, 86771, 86772, 86773, 86775, 86781, 86784, 86796, 86798, 86799, 86923, 86924, 86938, 86996, 86997, 86998, 86999, 87003, 87013, 87047, 87048, 87049, 87050, 87055, 87058, 87059, 87069, 87078, 87079, 87081, 87082, 87083, 87085, 87091, 87094, 87098, 87106, 87109, 87235, 87237, 87291, 87308, 87309, 87323, 87325, 87358, 87360, 87365, 87369, 87379, 87389, 87391, 87392, 87393, 87401, 87404, 87408, 87548, 87562, 87595, 87615, 87620, 87650, 87665, 87667, 87669, 87672, 87673, 87674, 87676, 87677, 87680, 87681, 87688, 87698, 87699, 87700, 87701, 87702, 87703, 87704, 87705, 87714, 87724, 87728, 87729, 87859, 87860, 87863, 87926, 87927, 87932, 87933, 87940, 87941, 87958, 87972, 87977, 87978, 87979, 87980, 87982, 87983, 87984, 87985, 87986, 87987, 87988, 87989, 87990, 87991, 88008, 88009, 88010, 88011, 88012, 88013, 88014, 88015, 88021, 88024, 88026, 88034, 88036, 88039, 88171, 88172, 88238, 88239, 88242, 88250, 88251, 88253, 88254, 88268, 88283, 88288, 88290, 88292, 88293, 88295, 88299, 88300, 88309, 88319, 88320, 88321, 88322, 88323, 88324, 88331, 88334, 88336, 88338, 88484, 88487, 88556, 88557, 88558, 88589, 88596, 88597, 88599, 88602, 88603, 88604, 88606, 88607, 88610, 88611, 88621, 88628, 88629, 88630, 88631, 88632, 88633, 88634, 88635, 88637, 88644, 88654, 88659, 88795, 88796, 88842, 88862, 88866, 88867, 88868, 88870, 88871, 88872, 88888, 88908, 88910, 88912, 88913, 88915, 88919, 88920, 88931, 88939, 88940, 88941, 88942, 88943, 88944, 88947, 88951, 88954, 88956, 89109, 89110, 89111, 89176, 89177, 89178, 89179, 89222, 89223, 89230, 89241, 89249, 89250, 89251, 89252, 89253, 89254, 89257, 89264, 89423, 89433, 89441, 89475, 89480, 89507, 89509, 89510, 89516, 89524, 89527, 89529, 89542, 89544, 89545, 89546, 89548, 89550, 89558, 89559, 89561, 89562, 89563, 89565, 89568, 89574, 89580, 89587, 89588, 89589, 89734, 89737, 89748, 89786, 89787, 89793, 89807, 89808, 89809, 89817, 89819, 89826, 89830, 89837, 89838, 89839, 89840, 89841, 89845, 89848, 89849, 89852, 89854, 89855, 89856, 89860, 89868, 89869, 89871, 89872, 89873, 89875, 89878, 89881, 89882, 89884, 89891, 89896, 89897, 89899, 90045, 90046, 90098, 90099, 90105, 90113, 90117, 90118, 90119, 90126, 90148, 90150, 90151, 90155, 90159, 90162, 90164, 90165, 90166, 90169, 90179, 90181, 90182, 90183, 90188, 90191, 90192, 90194, 90198, 90199, 90359, 90362, 90431, 90432, 90433, 90437, 90439, 90446, 90448, 90451, 90457, 90459, 90462, 90463, 90464, 90466, 90467, 90470, 90471, 90472, 90473, 90474, 90475, 90476, 90480, 90486, 90488, 90489, 90490, 90491, 90492, 90493, 90494, 90495, 90498, 90504, 90512, 90514, 90517, 90519, 90670, 90671, 90722, 90730, 90731, 90737, 90738, 90739, 90741, 90742, 90743, 90744, 90745, 90748, 90768, 90770, 90771, 90772, 90773, 90775, 90779, 90780, 90782, 90783, 90784, 90785, 90786, 90796, 90799, 90800, 90801, 90802, 90803, 90804, 90808, 90811, 90812, 90814, 90816, 90817, 90984, 90985, 90986, 91034, 91036, 91037, 91038, 91051, 91052, 91053, 91082, 91083, 91090, 91092, 91093, 91094, 91095, 91096, 91101, 91106, 91109, 91110, 91111, 91112, 91113, 91114, 91117, 91118, 91119, 91124, 91335, 91340, 91370, 91387, 91389, 91408, 91418, 91419, 91421, 91422, 91423, 91425, 91434, 91448, 91449, 91646, 91647, 91653, 91697, 91698, 91699, 91700, 91705, 91708, 91709, 91728, 91729, 91731, 91732, 91733, 91735, 91741, 91744, 91756, 91759, 91958, 91959, 91973, 92008, 92010, 92015, 92019, 92029, 92039, 92041, 92042, 92043, 92051, 92054, 92058, 92317, 92319, 92322, 92323, 92324, 92326, 92327, 92330, 92331, 92348, 92349, 92350, 92351, 92352, 92353, 92354, 92355, 92364, 92374, 92379, 92582, 92590, 92591, 92608, 92628, 92630, 92632, 92633, 92635, 92639, 92640, 92659, 92660, 92661, 92662, 92663, 92664, 92671, 92674, 92676, 92896, 92897, 92898, 92942, 92943, 92950, 92961, 92969, 92970, 92971, 92972, 92973, 92974, 92977, 92984, 93300, 93611, 93922, 94233, 94539, 94847, 95155, 95460, 95766, 96065};
    static const int C1_ind[] = {279, 619, 928, 1236, 1544, 1857, 2165, 2461, 2778, 3086, 3392, 3703, 4004, 4317, 4629, 4926, 5237, 5558, 5852, 6163, 6474};

    MatrixXd C0 = MatrixXd::Zero(310, 310);
    MatrixXd C1 = MatrixXd::Zero(310, 21);
    for (int i = 0; i < 9486; i++)
    {
        C0(C0_ind[i]) = coeffs(coeffs0_ind[i]);
    }
    for (int i = 0; i < 21; i++)
    {
        C1(C1_ind[i]) = coeffs(coeffs1_ind[i]);
    }

    MatrixXd C12 = C0.partialPivLu().solve(C1);

    // Setup action matrix
    Matrix<double, 31, 21> RR;
    RR << -C12.bottomRows(10), Matrix<double, 21, 21>::Identity(21, 21);

    static const int AM_ind[] = {27, 15, 0, 1, 2, 16, 3, 20, 4, 5, 21, 6, 25, 24, 7, 26, 8, 28, 29, 30, 9};
    Matrix<double, 21, 21> AM;
    for (int i = 0; i < 21; i++)
    {
        AM.row(i) = RR.row(AM_ind[i]);
    }

    Matrix<std::complex<double>, 5, 21> sols;
    sols.setZero();

    // Solve eigenvalue problem
    EigenSolver<Matrix<double, 21, 21>> es(AM);
    ArrayXcd D = es.eigenvalues();
    ArrayXXcd V = es.eigenvectors();

    V = (V / V.row(0).array().replicate(21, 1)).eval();

    sols.row(0) = V.row(1).array();
    sols.row(1) = V.row(7).array();
    sols.row(2) = V.row(12).array();
    sols.row(3) = D.transpose().array();

    return sols;
}
// Action =  x4
// Quotient ring basis (V) = x5^-1,x1*x5^-1,x1^2*x5^-1,x1*x2*x5^-1,x1*x3*x5^-1,x1*x4*x5^-1,x1*x4^2*x5^-1,x2*x5^-1,x2^2*x5^-1,x2*x3*x5^-1,x2*x4*x5^-1,x2*x4^2*x5^-1,x3*x5^-1,x3^2*x5^-1,x3^2*x4*x5^-1,x3*x4*x5^-1,x3*x4^2*x5^-1,x4*x5^-1,x4^2*x5^-1,x4^3*x5^-1,x4^4*x5^-1,
// Available monomials (RR*V) = x1^2*x4*x5^-1,x1*x2*x4*x5^-1,x1*x3*x4*x5^-1,x1*x4^3*x5^-1,x2^2*x4*x5^-1,x2*x3*x4*x5^-1,x2*x4^3*x5^-1,x3^2*x4^2*x5^-1,x3*x4^3*x5^-1,x4^5*x5^-1,x5^-1,x1*x5^-1,x1^2*x5^-1,x1*x2*x5^-1,x1*x3*x5^-1,x1*x4*x5^-1,x1*x4^2*x5^-1,x2*x5^-1,x2^2*x5^-1,x2*x3*x5^-1,x2*x4*x5^-1,x2*x4^2*x5^-1,x3*x5^-1,x3^2*x5^-1,x3^2*x4*x5^-1,x3*x4*x5^-1,x3*x4^2*x5^-1,x4*x5^-1,x4^2*x5^-1,x4^3*x5^-1,x4^4*x5^-1,

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
    if (nrhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_540:nrhs", "One input required.");
    }
    if (nlhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_540:nlhs", "One output required.");
    }
    if (!mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]))
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_540:notDouble", "Input data must be type double.");
    }
    if (mxGetNumberOfElements(prhs[0]) % 61 != 0)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_540:incorrectSize", "Input size must be multiple of 61.");
    }
    int n_instances = mxGetNumberOfElements(prhs[0]) / 61;
    double *input = mxGetPr(prhs[0]);
    plhs[0] = mxCreateDoubleMatrix(5, 21 * n_instances, mxCOMPLEX);
    double *zr = mxGetPr(plhs[0]);
    double *zi = mxGetPi(plhs[0]);
    for (int k = 0; k < n_instances; k++)
    {
        const VectorXd data = Map<const VectorXd>(input + k * 61, 61);
        MatrixXcd sols = solver_toa_upgrade_540(data);
        Index offset = k * sols.size();
        for (Index i = 0; i < sols.size(); i++)
        {
            zr[i + offset] = sols(i).real();
            zi[i + offset] = sols(i).imag();
        }
    }
}
