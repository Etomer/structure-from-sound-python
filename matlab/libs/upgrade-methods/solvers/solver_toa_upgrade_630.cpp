#include <Eigen/Dense>
#include "mex.h"

using namespace Eigen;

MatrixXcd solver_toa_upgrade_630(const VectorXd &data)
{
    // Compute coefficients
    const double *d = data.data();
    VectorXd coeffs(60);
    coeffs[0] = 2 * d[10] * d[11] * d[15] * d[36] - 2 * std::pow(d[14], 2) * d[15] * d[36] - 2 * d[11] * d[12] * d[16] * d[36] + 2 * d[13] * d[14] * d[16] * d[36] - 2 * d[10] * d[13] * d[17] * d[36] + 2 * d[12] * d[14] * d[17] * d[36] - 2 * d[11] * d[12] * d[15] * d[37] + 2 * d[13] * d[14] * d[15] * d[37] + 2 * d[9] * d[11] * d[16] * d[37] - 2 * std::pow(d[13], 2) * d[16] * d[37] + 2 * d[12] * d[13] * d[17] * d[37] - 2 * d[9] * d[14] * d[17] * d[37] - 2 * d[10] * d[13] * d[15] * d[38] + 2 * d[12] * d[14] * d[15] * d[38] + 2 * d[12] * d[13] * d[16] * d[38] - 2 * d[9] * d[14] * d[16] * d[38] + 2 * d[9] * d[10] * d[17] * d[38] - 2 * std::pow(d[12], 2) * d[17] * d[38] - d[9] * d[10] * d[11] * d[45] + d[11] * std::pow(d[12], 2) * d[45] + d[10] * std::pow(d[13], 2) * d[45] - 2 * d[12] * d[13] * d[14] * d[45] + d[9] * std::pow(d[14], 2) * d[45];
    coeffs[1] = 2 * d[11] * d[15] * d[19] * d[36] - 2 * d[13] * d[17] * d[19] * d[36] + 2 * d[10] * d[15] * d[20] * d[36] - 2 * d[12] * d[16] * d[20] * d[36] - 2 * d[11] * d[16] * d[21] * d[36] + 2 * d[14] * d[17] * d[21] * d[36] + 2 * d[14] * d[16] * d[22] * d[36] - 2 * d[10] * d[17] * d[22] * d[36] - 4 * d[14] * d[15] * d[23] * d[36] + 2 * d[13] * d[16] * d[23] * d[36] + 2 * d[12] * d[17] * d[23] * d[36] + 2 * d[10] * d[11] * d[24] * d[36] - 2 * std::pow(d[14], 2) * d[24] * d[36] - 2 * d[11] * d[12] * d[25] * d[36] + 2 * d[13] * d[14] * d[25] * d[36] - 2 * d[10] * d[13] * d[26] * d[36] + 2 * d[12] * d[14] * d[26] * d[36] + 2 * d[11] * d[16] * d[18] * d[37] - 2 * d[14] * d[17] * d[18] * d[37] - 2 * d[12] * d[15] * d[20] * d[37] + 2 * d[9] * d[16] * d[20] * d[37] - 2 * d[11] * d[15] * d[21] * d[37] + 2 * d[13] * d[17] * d[21] * d[37] + 2 * d[14] * d[15] * d[22] * d[37] - 4 * d[13] * d[16] * d[22] * d[37] + 2 * d[12] * d[17] * d[22] * d[37] + 2 * d[13] * d[15] * d[23] * d[37] - 2 * d[9] * d[17] * d[23] * d[37] - 2 * d[11] * d[12] * d[24] * d[37] + 2 * d[13] * d[14] * d[24] * d[37] + 2 * d[9] * d[11] * d[25] * d[37] - 2 * std::pow(d[13], 2) * d[25] * d[37] + 2 * d[12] * d[13] * d[26] * d[37] - 2 * d[9] * d[14] * d[26] * d[37] - 2 * d[14] * d[16] * d[18] * d[38] + 2 * d[10] * d[17] * d[18] * d[38] - 2 * d[13] * d[15] * d[19] * d[38] + 2 * d[9] * d[17] * d[19] * d[38] + 2 * d[14] * d[15] * d[21] * d[38] + 2 * d[13] * d[16] * d[21] * d[38] - 4 * d[12] * d[17] * d[21] * d[38] - 2 * d[10] * d[15] * d[22] * d[38] + 2 * d[12] * d[16] * d[22] * d[38] + 2 * d[12] * d[15] * d[23] * d[38] - 2 * d[9] * d[16] * d[23] * d[38] - 2 * d[10] * d[13] * d[24] * d[38] + 2 * d[12] * d[14] * d[24] * d[38] + 2 * d[12] * d[13] * d[25] * d[38] - 2 * d[9] * d[14] * d[25] * d[38] + 2 * d[9] * d[10] * d[26] * d[38] - 2 * std::pow(d[12], 2) * d[26] * d[38] - d[10] * d[11] * d[18] * d[45] + std::pow(d[14], 2) * d[18] * d[45] - d[9] * d[11] * d[19] * d[45] + std::pow(d[13], 2) * d[19] * d[45] - d[9] * d[10] * d[20] * d[45] + std::pow(d[12], 2) * d[20] * d[45] + 2 * d[11] * d[12] * d[21] * d[45] - 2 * d[13] * d[14] * d[21] * d[45] + 2 * d[10] * d[13] * d[22] * d[45] - 2 * d[12] * d[14] * d[22] * d[45] - 2 * d[12] * d[13] * d[23] * d[45] + 2 * d[9] * d[14] * d[23] * d[45];
    coeffs[2] = 2 * d[15] * d[19] * d[20] * d[36] - 2 * d[16] * d[20] * d[21] * d[36] - 2 * d[17] * d[19] * d[22] * d[36] + 2 * d[17] * d[21] * d[23] * d[36] + 2 * d[16] * d[22] * d[23] * d[36] - 2 * d[15] * std::pow(d[23], 2) * d[36] + 2 * d[11] * d[19] * d[24] * d[36] + 2 * d[10] * d[20] * d[24] * d[36] - 4 * d[14] * d[23] * d[24] * d[36] - 2 * d[12] * d[20] * d[25] * d[36] - 2 * d[11] * d[21] * d[25] * d[36] + 2 * d[14] * d[22] * d[25] * d[36] + 2 * d[13] * d[23] * d[25] * d[36] - 2 * d[13] * d[19] * d[26] * d[36] + 2 * d[14] * d[21] * d[26] * d[36] - 2 * d[10] * d[22] * d[26] * d[36] + 2 * d[12] * d[23] * d[26] * d[36] + 2 * d[16] * d[18] * d[20] * d[37] - 2 * d[15] * d[20] * d[21] * d[37] + 2 * d[17] * d[21] * d[22] * d[37] - 2 * d[16] * std::pow(d[22], 2) * d[37] - 2 * d[17] * d[18] * d[23] * d[37] + 2 * d[15] * d[22] * d[23] * d[37] - 2 * d[12] * d[20] * d[24] * d[37] - 2 * d[11] * d[21] * d[24] * d[37] + 2 * d[14] * d[22] * d[24] * d[37] + 2 * d[13] * d[23] * d[24] * d[37] + 2 * d[11] * d[18] * d[25] * d[37] + 2 * d[9] * d[20] * d[25] * d[37] - 4 * d[13] * d[22] * d[25] * d[37] - 2 * d[14] * d[18] * d[26] * d[37] + 2 * d[13] * d[21] * d[26] * d[37] + 2 * d[12] * d[22] * d[26] * d[37] - 2 * d[9] * d[23] * d[26] * d[37] + 2 * d[17] * d[18] * d[19] * d[38] - 2 * d[17] * std::pow(d[21], 2) * d[38] - 2 * d[15] * d[19] * d[22] * d[38] + 2 * d[16] * d[21] * d[22] * d[38] - 2 * d[16] * d[18] * d[23] * d[38] + 2 * d[15] * d[21] * d[23] * d[38] - 2 * d[13] * d[19] * d[24] * d[38] + 2 * d[14] * d[21] * d[24] * d[38] - 2 * d[10] * d[22] * d[24] * d[38] + 2 * d[12] * d[23] * d[24] * d[38] - 2 * d[14] * d[18] * d[25] * d[38] + 2 * d[13] * d[21] * d[25] * d[38] + 2 * d[12] * d[22] * d[25] * d[38] - 2 * d[9] * d[23] * d[25] * d[38] + 2 * d[10] * d[18] * d[26] * d[38] + 2 * d[9] * d[19] * d[26] * d[38] - 4 * d[12] * d[21] * d[26] * d[38] - d[11] * d[18] * d[19] * d[45] - d[10] * d[18] * d[20] * d[45] - d[9] * d[19] * d[20] * d[45] + 2 * d[12] * d[20] * d[21] * d[45] + d[11] * std::pow(d[21], 2) * d[45] + 2 * d[13] * d[19] * d[22] * d[45] - 2 * d[14] * d[21] * d[22] * d[45] + d[10] * std::pow(d[22], 2) * d[45] + 2 * d[14] * d[18] * d[23] * d[45] - 2 * d[13] * d[21] * d[23] * d[45] - 2 * d[12] * d[22] * d[23] * d[45] + d[9] * std::pow(d[23], 2) * d[45];
    coeffs[3] = 2 * d[19] * d[20] * d[24] * d[36] - 2 * std::pow(d[23], 2) * d[24] * d[36] - 2 * d[20] * d[21] * d[25] * d[36] + 2 * d[22] * d[23] * d[25] * d[36] - 2 * d[19] * d[22] * d[26] * d[36] + 2 * d[21] * d[23] * d[26] * d[36] - 2 * d[20] * d[21] * d[24] * d[37] + 2 * d[22] * d[23] * d[24] * d[37] + 2 * d[18] * d[20] * d[25] * d[37] - 2 * std::pow(d[22], 2) * d[25] * d[37] + 2 * d[21] * d[22] * d[26] * d[37] - 2 * d[18] * d[23] * d[26] * d[37] - 2 * d[19] * d[22] * d[24] * d[38] + 2 * d[21] * d[23] * d[24] * d[38] + 2 * d[21] * d[22] * d[25] * d[38] - 2 * d[18] * d[23] * d[25] * d[38] + 2 * d[18] * d[19] * d[26] * d[38] - 2 * std::pow(d[21], 2) * d[26] * d[38] - d[18] * d[19] * d[20] * d[45] + d[20] * std::pow(d[21], 2) * d[45] + d[19] * std::pow(d[22], 2) * d[45] - 2 * d[21] * d[22] * d[23] * d[45] + d[18] * std::pow(d[23], 2) * d[45];
    coeffs[4] = 2 * d[11] * d[15] * d[28] * d[36] - 2 * d[13] * d[17] * d[28] * d[36] + 2 * d[10] * d[15] * d[29] * d[36] - 2 * d[12] * d[16] * d[29] * d[36] - 2 * d[11] * d[16] * d[30] * d[36] + 2 * d[14] * d[17] * d[30] * d[36] + 2 * d[14] * d[16] * d[31] * d[36] - 2 * d[10] * d[17] * d[31] * d[36] - 4 * d[14] * d[15] * d[32] * d[36] + 2 * d[13] * d[16] * d[32] * d[36] + 2 * d[12] * d[17] * d[32] * d[36] + 2 * d[10] * d[11] * d[33] * d[36] - 2 * std::pow(d[14], 2) * d[33] * d[36] - 2 * d[11] * d[12] * d[34] * d[36] + 2 * d[13] * d[14] * d[34] * d[36] - 2 * d[10] * d[13] * d[35] * d[36] + 2 * d[12] * d[14] * d[35] * d[36] + 2 * d[11] * d[16] * d[27] * d[37] - 2 * d[14] * d[17] * d[27] * d[37] - 2 * d[12] * d[15] * d[29] * d[37] + 2 * d[9] * d[16] * d[29] * d[37] - 2 * d[11] * d[15] * d[30] * d[37] + 2 * d[13] * d[17] * d[30] * d[37] + 2 * d[14] * d[15] * d[31] * d[37] - 4 * d[13] * d[16] * d[31] * d[37] + 2 * d[12] * d[17] * d[31] * d[37] + 2 * d[13] * d[15] * d[32] * d[37] - 2 * d[9] * d[17] * d[32] * d[37] - 2 * d[11] * d[12] * d[33] * d[37] + 2 * d[13] * d[14] * d[33] * d[37] + 2 * d[9] * d[11] * d[34] * d[37] - 2 * std::pow(d[13], 2) * d[34] * d[37] + 2 * d[12] * d[13] * d[35] * d[37] - 2 * d[9] * d[14] * d[35] * d[37] - 2 * d[14] * d[16] * d[27] * d[38] + 2 * d[10] * d[17] * d[27] * d[38] - 2 * d[13] * d[15] * d[28] * d[38] + 2 * d[9] * d[17] * d[28] * d[38] + 2 * d[14] * d[15] * d[30] * d[38] + 2 * d[13] * d[16] * d[30] * d[38] - 4 * d[12] * d[17] * d[30] * d[38] - 2 * d[10] * d[15] * d[31] * d[38] + 2 * d[12] * d[16] * d[31] * d[38] + 2 * d[12] * d[15] * d[32] * d[38] - 2 * d[9] * d[16] * d[32] * d[38] - 2 * d[10] * d[13] * d[33] * d[38] + 2 * d[12] * d[14] * d[33] * d[38] + 2 * d[12] * d[13] * d[34] * d[38] - 2 * d[9] * d[14] * d[34] * d[38] + 2 * d[9] * d[10] * d[35] * d[38] - 2 * std::pow(d[12], 2) * d[35] * d[38] - d[10] * d[11] * d[27] * d[45] + std::pow(d[14], 2) * d[27] * d[45] - d[9] * d[11] * d[28] * d[45] + std::pow(d[13], 2) * d[28] * d[45] - d[9] * d[10] * d[29] * d[45] + std::pow(d[12], 2) * d[29] * d[45] + 2 * d[11] * d[12] * d[30] * d[45] - 2 * d[13] * d[14] * d[30] * d[45] + 2 * d[10] * d[13] * d[31] * d[45] - 2 * d[12] * d[14] * d[31] * d[45] - 2 * d[12] * d[13] * d[32] * d[45] + 2 * d[9] * d[14] * d[32] * d[45];
    coeffs[5] = 2 * d[15] * d[20] * d[28] * d[36] - 2 * d[17] * d[22] * d[28] * d[36] + 2 * d[11] * d[24] * d[28] * d[36] - 2 * d[13] * d[26] * d[28] * d[36] + 2 * d[15] * d[19] * d[29] * d[36] - 2 * d[16] * d[21] * d[29] * d[36] + 2 * d[10] * d[24] * d[29] * d[36] - 2 * d[12] * d[25] * d[29] * d[36] - 2 * d[16] * d[20] * d[30] * d[36] + 2 * d[17] * d[23] * d[30] * d[36] - 2 * d[11] * d[25] * d[30] * d[36] + 2 * d[14] * d[26] * d[30] * d[36] - 2 * d[17] * d[19] * d[31] * d[36] + 2 * d[16] * d[23] * d[31] * d[36] + 2 * d[14] * d[25] * d[31] * d[36] - 2 * d[10] * d[26] * d[31] * d[36] + 2 * d[17] * d[21] * d[32] * d[36] + 2 * d[16] * d[22] * d[32] * d[36] - 4 * d[15] * d[23] * d[32] * d[36] - 4 * d[14] * d[24] * d[32] * d[36] + 2 * d[13] * d[25] * d[32] * d[36] + 2 * d[12] * d[26] * d[32] * d[36] + 2 * d[11] * d[19] * d[33] * d[36] + 2 * d[10] * d[20] * d[33] * d[36] - 4 * d[14] * d[23] * d[33] * d[36] - 2 * d[12] * d[20] * d[34] * d[36] - 2 * d[11] * d[21] * d[34] * d[36] + 2 * d[14] * d[22] * d[34] * d[36] + 2 * d[13] * d[23] * d[34] * d[36] - 2 * d[13] * d[19] * d[35] * d[36] + 2 * d[14] * d[21] * d[35] * d[36] - 2 * d[10] * d[22] * d[35] * d[36] + 2 * d[12] * d[23] * d[35] * d[36] + 2 * d[16] * d[20] * d[27] * d[37] - 2 * d[17] * d[23] * d[27] * d[37] + 2 * d[11] * d[25] * d[27] * d[37] - 2 * d[14] * d[26] * d[27] * d[37] + 2 * d[16] * d[18] * d[29] * d[37] - 2 * d[15] * d[21] * d[29] * d[37] - 2 * d[12] * d[24] * d[29] * d[37] + 2 * d[9] * d[25] * d[29] * d[37] - 2 * d[15] * d[20] * d[30] * d[37] + 2 * d[17] * d[22] * d[30] * d[37] - 2 * d[11] * d[24] * d[30] * d[37] + 2 * d[13] * d[26] * d[30] * d[37] + 2 * d[17] * d[21] * d[31] * d[37] - 4 * d[16] * d[22] * d[31] * d[37] + 2 * d[15] * d[23] * d[31] * d[37] + 2 * d[14] * d[24] * d[31] * d[37] - 4 * d[13] * d[25] * d[31] * d[37] + 2 * d[12] * d[26] * d[31] * d[37] - 2 * d[17] * d[18] * d[32] * d[37] + 2 * d[15] * d[22] * d[32] * d[37] + 2 * d[13] * d[24] * d[32] * d[37] - 2 * d[9] * d[26] * d[32] * d[37] - 2 * d[12] * d[20] * d[33] * d[37] - 2 * d[11] * d[21] * d[33] * d[37] + 2 * d[14] * d[22] * d[33] * d[37] + 2 * d[13] * d[23] * d[33] * d[37] + 2 * d[11] * d[18] * d[34] * d[37] + 2 * d[9] * d[20] * d[34] * d[37] - 4 * d[13] * d[22] * d[34] * d[37] - 2 * d[14] * d[18] * d[35] * d[37] + 2 * d[13] * d[21] * d[35] * d[37] + 2 * d[12] * d[22] * d[35] * d[37] - 2 * d[9] * d[23] * d[35] * d[37] + 2 * d[17] * d[19] * d[27] * d[38] - 2 * d[16] * d[23] * d[27] * d[38] - 2 * d[14] * d[25] * d[27] * d[38] + 2 * d[10] * d[26] * d[27] * d[38] + 2 * d[17] * d[18] * d[28] * d[38] - 2 * d[15] * d[22] * d[28] * d[38] - 2 * d[13] * d[24] * d[28] * d[38] + 2 * d[9] * d[26] * d[28] * d[38] - 4 * d[17] * d[21] * d[30] * d[38] + 2 * d[16] * d[22] * d[30] * d[38] + 2 * d[15] * d[23] * d[30] * d[38] + 2 * d[14] * d[24] * d[30] * d[38] + 2 * d[13] * d[25] * d[30] * d[38] - 4 * d[12] * d[26] * d[30] * d[38] - 2 * d[15] * d[19] * d[31] * d[38] + 2 * d[16] * d[21] * d[31] * d[38] - 2 * d[10] * d[24] * d[31] * d[38] + 2 * d[12] * d[25] * d[31] * d[38] - 2 * d[16] * d[18] * d[32] * d[38] + 2 * d[15] * d[21] * d[32] * d[38] + 2 * d[12] * d[24] * d[32] * d[38] - 2 * d[9] * d[25] * d[32] * d[38] - 2 * d[13] * d[19] * d[33] * d[38] + 2 * d[14] * d[21] * d[33] * d[38] - 2 * d[10] * d[22] * d[33] * d[38] + 2 * d[12] * d[23] * d[33] * d[38] - 2 * d[14] * d[18] * d[34] * d[38] + 2 * d[13] * d[21] * d[34] * d[38] + 2 * d[12] * d[22] * d[34] * d[38] - 2 * d[9] * d[23] * d[34] * d[38] + 2 * d[10] * d[18] * d[35] * d[38] + 2 * d[9] * d[19] * d[35] * d[38] - 4 * d[12] * d[21] * d[35] * d[38] - d[11] * d[19] * d[27] * d[45] - d[10] * d[20] * d[27] * d[45] + 2 * d[14] * d[23] * d[27] * d[45] - d[11] * d[18] * d[28] * d[45] - d[9] * d[20] * d[28] * d[45] + 2 * d[13] * d[22] * d[28] * d[45] - d[10] * d[18] * d[29] * d[45] - d[9] * d[19] * d[29] * d[45] + 2 * d[12] * d[21] * d[29] * d[45] + 2 * d[12] * d[20] * d[30] * d[45] + 2 * d[11] * d[21] * d[30] * d[45] - 2 * d[14] * d[22] * d[30] * d[45] - 2 * d[13] * d[23] * d[30] * d[45] + 2 * d[13] * d[19] * d[31] * d[45] - 2 * d[14] * d[21] * d[31] * d[45] + 2 * d[10] * d[22] * d[31] * d[45] - 2 * d[12] * d[23] * d[31] * d[45] + 2 * d[14] * d[18] * d[32] * d[45] - 2 * d[13] * d[21] * d[32] * d[45] - 2 * d[12] * d[22] * d[32] * d[45] + 2 * d[9] * d[23] * d[32] * d[45];
    coeffs[6] = 2 * d[20] * d[24] * d[28] * d[36] - 2 * d[22] * d[26] * d[28] * d[36] + 2 * d[19] * d[24] * d[29] * d[36] - 2 * d[21] * d[25] * d[29] * d[36] - 2 * d[20] * d[25] * d[30] * d[36] + 2 * d[23] * d[26] * d[30] * d[36] + 2 * d[23] * d[25] * d[31] * d[36] - 2 * d[19] * d[26] * d[31] * d[36] - 4 * d[23] * d[24] * d[32] * d[36] + 2 * d[22] * d[25] * d[32] * d[36] + 2 * d[21] * d[26] * d[32] * d[36] + 2 * d[19] * d[20] * d[33] * d[36] - 2 * std::pow(d[23], 2) * d[33] * d[36] - 2 * d[20] * d[21] * d[34] * d[36] + 2 * d[22] * d[23] * d[34] * d[36] - 2 * d[19] * d[22] * d[35] * d[36] + 2 * d[21] * d[23] * d[35] * d[36] + 2 * d[20] * d[25] * d[27] * d[37] - 2 * d[23] * d[26] * d[27] * d[37] - 2 * d[21] * d[24] * d[29] * d[37] + 2 * d[18] * d[25] * d[29] * d[37] - 2 * d[20] * d[24] * d[30] * d[37] + 2 * d[22] * d[26] * d[30] * d[37] + 2 * d[23] * d[24] * d[31] * d[37] - 4 * d[22] * d[25] * d[31] * d[37] + 2 * d[21] * d[26] * d[31] * d[37] + 2 * d[22] * d[24] * d[32] * d[37] - 2 * d[18] * d[26] * d[32] * d[37] - 2 * d[20] * d[21] * d[33] * d[37] + 2 * d[22] * d[23] * d[33] * d[37] + 2 * d[18] * d[20] * d[34] * d[37] - 2 * std::pow(d[22], 2) * d[34] * d[37] + 2 * d[21] * d[22] * d[35] * d[37] - 2 * d[18] * d[23] * d[35] * d[37] - 2 * d[23] * d[25] * d[27] * d[38] + 2 * d[19] * d[26] * d[27] * d[38] - 2 * d[22] * d[24] * d[28] * d[38] + 2 * d[18] * d[26] * d[28] * d[38] + 2 * d[23] * d[24] * d[30] * d[38] + 2 * d[22] * d[25] * d[30] * d[38] - 4 * d[21] * d[26] * d[30] * d[38] - 2 * d[19] * d[24] * d[31] * d[38] + 2 * d[21] * d[25] * d[31] * d[38] + 2 * d[21] * d[24] * d[32] * d[38] - 2 * d[18] * d[25] * d[32] * d[38] - 2 * d[19] * d[22] * d[33] * d[38] + 2 * d[21] * d[23] * d[33] * d[38] + 2 * d[21] * d[22] * d[34] * d[38] - 2 * d[18] * d[23] * d[34] * d[38] + 2 * d[18] * d[19] * d[35] * d[38] - 2 * std::pow(d[21], 2) * d[35] * d[38] - d[19] * d[20] * d[27] * d[45] + std::pow(d[23], 2) * d[27] * d[45] - d[18] * d[20] * d[28] * d[45] + std::pow(d[22], 2) * d[28] * d[45] - d[18] * d[19] * d[29] * d[45] + std::pow(d[21], 2) * d[29] * d[45] + 2 * d[20] * d[21] * d[30] * d[45] - 2 * d[22] * d[23] * d[30] * d[45] + 2 * d[19] * d[22] * d[31] * d[45] - 2 * d[21] * d[23] * d[31] * d[45] - 2 * d[21] * d[22] * d[32] * d[45] + 2 * d[18] * d[23] * d[32] * d[45];
    coeffs[7] = 2 * d[15] * d[28] * d[29] * d[36] - 2 * d[16] * d[29] * d[30] * d[36] - 2 * d[17] * d[28] * d[31] * d[36] + 2 * d[17] * d[30] * d[32] * d[36] + 2 * d[16] * d[31] * d[32] * d[36] - 2 * d[15] * std::pow(d[32], 2) * d[36] + 2 * d[11] * d[28] * d[33] * d[36] + 2 * d[10] * d[29] * d[33] * d[36] - 4 * d[14] * d[32] * d[33] * d[36] - 2 * d[12] * d[29] * d[34] * d[36] - 2 * d[11] * d[30] * d[34] * d[36] + 2 * d[14] * d[31] * d[34] * d[36] + 2 * d[13] * d[32] * d[34] * d[36] - 2 * d[13] * d[28] * d[35] * d[36] + 2 * d[14] * d[30] * d[35] * d[36] - 2 * d[10] * d[31] * d[35] * d[36] + 2 * d[12] * d[32] * d[35] * d[36] + 2 * d[16] * d[27] * d[29] * d[37] - 2 * d[15] * d[29] * d[30] * d[37] + 2 * d[17] * d[30] * d[31] * d[37] - 2 * d[16] * std::pow(d[31], 2) * d[37] - 2 * d[17] * d[27] * d[32] * d[37] + 2 * d[15] * d[31] * d[32] * d[37] - 2 * d[12] * d[29] * d[33] * d[37] - 2 * d[11] * d[30] * d[33] * d[37] + 2 * d[14] * d[31] * d[33] * d[37] + 2 * d[13] * d[32] * d[33] * d[37] + 2 * d[11] * d[27] * d[34] * d[37] + 2 * d[9] * d[29] * d[34] * d[37] - 4 * d[13] * d[31] * d[34] * d[37] - 2 * d[14] * d[27] * d[35] * d[37] + 2 * d[13] * d[30] * d[35] * d[37] + 2 * d[12] * d[31] * d[35] * d[37] - 2 * d[9] * d[32] * d[35] * d[37] + 2 * d[17] * d[27] * d[28] * d[38] - 2 * d[17] * std::pow(d[30], 2) * d[38] - 2 * d[15] * d[28] * d[31] * d[38] + 2 * d[16] * d[30] * d[31] * d[38] - 2 * d[16] * d[27] * d[32] * d[38] + 2 * d[15] * d[30] * d[32] * d[38] - 2 * d[13] * d[28] * d[33] * d[38] + 2 * d[14] * d[30] * d[33] * d[38] - 2 * d[10] * d[31] * d[33] * d[38] + 2 * d[12] * d[32] * d[33] * d[38] - 2 * d[14] * d[27] * d[34] * d[38] + 2 * d[13] * d[30] * d[34] * d[38] + 2 * d[12] * d[31] * d[34] * d[38] - 2 * d[9] * d[32] * d[34] * d[38] + 2 * d[10] * d[27] * d[35] * d[38] + 2 * d[9] * d[28] * d[35] * d[38] - 4 * d[12] * d[30] * d[35] * d[38] - d[11] * d[27] * d[28] * d[45] - d[10] * d[27] * d[29] * d[45] - d[9] * d[28] * d[29] * d[45] + 2 * d[12] * d[29] * d[30] * d[45] + d[11] * std::pow(d[30], 2) * d[45] + 2 * d[13] * d[28] * d[31] * d[45] - 2 * d[14] * d[30] * d[31] * d[45] + d[10] * std::pow(d[31], 2) * d[45] + 2 * d[14] * d[27] * d[32] * d[45] - 2 * d[13] * d[30] * d[32] * d[45] - 2 * d[12] * d[31] * d[32] * d[45] + d[9] * std::pow(d[32], 2) * d[45];
    coeffs[8] = 2 * d[24] * d[28] * d[29] * d[36] - 2 * d[25] * d[29] * d[30] * d[36] - 2 * d[26] * d[28] * d[31] * d[36] + 2 * d[26] * d[30] * d[32] * d[36] + 2 * d[25] * d[31] * d[32] * d[36] - 2 * d[24] * std::pow(d[32], 2) * d[36] + 2 * d[20] * d[28] * d[33] * d[36] + 2 * d[19] * d[29] * d[33] * d[36] - 4 * d[23] * d[32] * d[33] * d[36] - 2 * d[21] * d[29] * d[34] * d[36] - 2 * d[20] * d[30] * d[34] * d[36] + 2 * d[23] * d[31] * d[34] * d[36] + 2 * d[22] * d[32] * d[34] * d[36] - 2 * d[22] * d[28] * d[35] * d[36] + 2 * d[23] * d[30] * d[35] * d[36] - 2 * d[19] * d[31] * d[35] * d[36] + 2 * d[21] * d[32] * d[35] * d[36] + 2 * d[25] * d[27] * d[29] * d[37] - 2 * d[24] * d[29] * d[30] * d[37] + 2 * d[26] * d[30] * d[31] * d[37] - 2 * d[25] * std::pow(d[31], 2) * d[37] - 2 * d[26] * d[27] * d[32] * d[37] + 2 * d[24] * d[31] * d[32] * d[37] - 2 * d[21] * d[29] * d[33] * d[37] - 2 * d[20] * d[30] * d[33] * d[37] + 2 * d[23] * d[31] * d[33] * d[37] + 2 * d[22] * d[32] * d[33] * d[37] + 2 * d[20] * d[27] * d[34] * d[37] + 2 * d[18] * d[29] * d[34] * d[37] - 4 * d[22] * d[31] * d[34] * d[37] - 2 * d[23] * d[27] * d[35] * d[37] + 2 * d[22] * d[30] * d[35] * d[37] + 2 * d[21] * d[31] * d[35] * d[37] - 2 * d[18] * d[32] * d[35] * d[37] + 2 * d[26] * d[27] * d[28] * d[38] - 2 * d[26] * std::pow(d[30], 2) * d[38] - 2 * d[24] * d[28] * d[31] * d[38] + 2 * d[25] * d[30] * d[31] * d[38] - 2 * d[25] * d[27] * d[32] * d[38] + 2 * d[24] * d[30] * d[32] * d[38] - 2 * d[22] * d[28] * d[33] * d[38] + 2 * d[23] * d[30] * d[33] * d[38] - 2 * d[19] * d[31] * d[33] * d[38] + 2 * d[21] * d[32] * d[33] * d[38] - 2 * d[23] * d[27] * d[34] * d[38] + 2 * d[22] * d[30] * d[34] * d[38] + 2 * d[21] * d[31] * d[34] * d[38] - 2 * d[18] * d[32] * d[34] * d[38] + 2 * d[19] * d[27] * d[35] * d[38] + 2 * d[18] * d[28] * d[35] * d[38] - 4 * d[21] * d[30] * d[35] * d[38] - d[20] * d[27] * d[28] * d[45] - d[19] * d[27] * d[29] * d[45] - d[18] * d[28] * d[29] * d[45] + 2 * d[21] * d[29] * d[30] * d[45] + d[20] * std::pow(d[30], 2) * d[45] + 2 * d[22] * d[28] * d[31] * d[45] - 2 * d[23] * d[30] * d[31] * d[45] + d[19] * std::pow(d[31], 2) * d[45] + 2 * d[23] * d[27] * d[32] * d[45] - 2 * d[22] * d[30] * d[32] * d[45] - 2 * d[21] * d[31] * d[32] * d[45] + d[18] * std::pow(d[32], 2) * d[45];
    coeffs[9] = 2 * d[28] * d[29] * d[33] * d[36] - 2 * std::pow(d[32], 2) * d[33] * d[36] - 2 * d[29] * d[30] * d[34] * d[36] + 2 * d[31] * d[32] * d[34] * d[36] - 2 * d[28] * d[31] * d[35] * d[36] + 2 * d[30] * d[32] * d[35] * d[36] - 2 * d[29] * d[30] * d[33] * d[37] + 2 * d[31] * d[32] * d[33] * d[37] + 2 * d[27] * d[29] * d[34] * d[37] - 2 * std::pow(d[31], 2) * d[34] * d[37] + 2 * d[30] * d[31] * d[35] * d[37] - 2 * d[27] * d[32] * d[35] * d[37] - 2 * d[28] * d[31] * d[33] * d[38] + 2 * d[30] * d[32] * d[33] * d[38] + 2 * d[30] * d[31] * d[34] * d[38] - 2 * d[27] * d[32] * d[34] * d[38] + 2 * d[27] * d[28] * d[35] * d[38] - 2 * std::pow(d[30], 2) * d[35] * d[38] - d[27] * d[28] * d[29] * d[45] + d[29] * std::pow(d[30], 2) * d[45] + d[28] * std::pow(d[31], 2) * d[45] - 2 * d[30] * d[31] * d[32] * d[45] + d[27] * std::pow(d[32], 2) * d[45];
    coeffs[10] = 2 * d[6] * d[10] * d[11] * d[36] - 2 * d[7] * d[11] * d[12] * d[36] - 2 * d[8] * d[10] * d[13] * d[36] + 2 * d[8] * d[12] * d[14] * d[36] + 2 * d[7] * d[13] * d[14] * d[36] - 2 * d[6] * std::pow(d[14], 2) * d[36] + 2 * d[2] * d[10] * d[15] * d[36] + 2 * d[1] * d[11] * d[15] * d[36] - 4 * d[5] * d[14] * d[15] * d[36] - 2 * d[3] * d[11] * d[16] * d[36] - 2 * d[2] * d[12] * d[16] * d[36] + 2 * d[5] * d[13] * d[16] * d[36] + 2 * d[4] * d[14] * d[16] * d[36] - 2 * d[4] * d[10] * d[17] * d[36] + 2 * d[5] * d[12] * d[17] * d[36] - 2 * d[1] * d[13] * d[17] * d[36] + 2 * d[3] * d[14] * d[17] * d[36] + d[10] * d[11] * std::pow(d[36], 2) - std::pow(d[14], 2) * std::pow(d[36], 2) + 2 * d[7] * d[9] * d[11] * d[37] - 2 * d[6] * d[11] * d[12] * d[37] + 2 * d[8] * d[12] * d[13] * d[37] - 2 * d[7] * std::pow(d[13], 2) * d[37] - 2 * d[8] * d[9] * d[14] * d[37] + 2 * d[6] * d[13] * d[14] * d[37] - 2 * d[3] * d[11] * d[15] * d[37] - 2 * d[2] * d[12] * d[15] * d[37] + 2 * d[5] * d[13] * d[15] * d[37] + 2 * d[4] * d[14] * d[15] * d[37] + 2 * d[2] * d[9] * d[16] * d[37] + 2 * d[0] * d[11] * d[16] * d[37] - 4 * d[4] * d[13] * d[16] * d[37] - 2 * d[5] * d[9] * d[17] * d[37] + 2 * d[4] * d[12] * d[17] * d[37] + 2 * d[3] * d[13] * d[17] * d[37] - 2 * d[0] * d[14] * d[17] * d[37] - 2 * d[11] * d[12] * d[36] * d[37] + 2 * d[13] * d[14] * d[36] * d[37] + d[9] * d[11] * std::pow(d[37], 2) - std::pow(d[13], 2) * std::pow(d[37], 2) + 2 * d[8] * d[9] * d[10] * d[38] - 2 * d[8] * std::pow(d[12], 2) * d[38] - 2 * d[6] * d[10] * d[13] * d[38] + 2 * d[7] * d[12] * d[13] * d[38] - 2 * d[7] * d[9] * d[14] * d[38] + 2 * d[6] * d[12] * d[14] * d[38] - 2 * d[4] * d[10] * d[15] * d[38] + 2 * d[5] * d[12] * d[15] * d[38] - 2 * d[1] * d[13] * d[15] * d[38] + 2 * d[3] * d[14] * d[15] * d[38] - 2 * d[5] * d[9] * d[16] * d[38] + 2 * d[4] * d[12] * d[16] * d[38] + 2 * d[3] * d[13] * d[16] * d[38] - 2 * d[0] * d[14] * d[16] * d[38] + 2 * d[1] * d[9] * d[17] * d[38] + 2 * d[0] * d[10] * d[17] * d[38] - 4 * d[3] * d[12] * d[17] * d[38] - 2 * d[10] * d[13] * d[36] * d[38] + 2 * d[12] * d[14] * d[36] * d[38] + 2 * d[12] * d[13] * d[37] * d[38] - 2 * d[9] * d[14] * d[37] * d[38] + d[9] * d[10] * std::pow(d[38], 2) - std::pow(d[12], 2) * std::pow(d[38], 2) - d[2] * d[9] * d[10] * d[45] - d[1] * d[9] * d[11] * d[45] - d[0] * d[10] * d[11] * d[45] + 2 * d[3] * d[11] * d[12] * d[45] + d[2] * std::pow(d[12], 2) * d[45] + 2 * d[4] * d[10] * d[13] * d[45] - 2 * d[5] * d[12] * d[13] * d[45] + d[1] * std::pow(d[13], 2) * d[45] + 2 * d[5] * d[9] * d[14] * d[45] - 2 * d[4] * d[12] * d[14] * d[45] - 2 * d[3] * d[13] * d[14] * d[45] + d[0] * std::pow(d[14], 2) * d[45];
    coeffs[11] = 2 * d[6] * d[11] * d[19] * d[36] - 2 * d[8] * d[13] * d[19] * d[36] + 2 * d[2] * d[15] * d[19] * d[36] - 2 * d[4] * d[17] * d[19] * d[36] + 2 * d[6] * d[10] * d[20] * d[36] - 2 * d[7] * d[12] * d[20] * d[36] + 2 * d[1] * d[15] * d[20] * d[36] - 2 * d[3] * d[16] * d[20] * d[36] - 2 * d[7] * d[11] * d[21] * d[36] + 2 * d[8] * d[14] * d[21] * d[36] - 2 * d[2] * d[16] * d[21] * d[36] + 2 * d[5] * d[17] * d[21] * d[36] - 2 * d[8] * d[10] * d[22] * d[36] + 2 * d[7] * d[14] * d[22] * d[36] + 2 * d[5] * d[16] * d[22] * d[36] - 2 * d[1] * d[17] * d[22] * d[36] + 2 * d[8] * d[12] * d[23] * d[36] + 2 * d[7] * d[13] * d[23] * d[36] - 4 * d[6] * d[14] * d[23] * d[36] - 4 * d[5] * d[15] * d[23] * d[36] + 2 * d[4] * d[16] * d[23] * d[36] + 2 * d[3] * d[17] * d[23] * d[36] + 2 * d[2] * d[10] * d[24] * d[36] + 2 * d[1] * d[11] * d[24] * d[36] - 4 * d[5] * d[14] * d[24] * d[36] - 2 * d[3] * d[11] * d[25] * d[36] - 2 * d[2] * d[12] * d[25] * d[36] + 2 * d[5] * d[13] * d[25] * d[36] + 2 * d[4] * d[14] * d[25] * d[36] - 2 * d[4] * d[10] * d[26] * d[36] + 2 * d[5] * d[12] * d[26] * d[36] - 2 * d[1] * d[13] * d[26] * d[36] + 2 * d[3] * d[14] * d[26] * d[36] + d[11] * d[19] * std::pow(d[36], 2) + d[10] * d[20] * std::pow(d[36], 2) - 2 * d[14] * d[23] * std::pow(d[36], 2) + 2 * d[7] * d[11] * d[18] * d[37] - 2 * d[8] * d[14] * d[18] * d[37] + 2 * d[2] * d[16] * d[18] * d[37] - 2 * d[5] * d[17] * d[18] * d[37] + 2 * d[7] * d[9] * d[20] * d[37] - 2 * d[6] * d[12] * d[20] * d[37] - 2 * d[3] * d[15] * d[20] * d[37] + 2 * d[0] * d[16] * d[20] * d[37] - 2 * d[6] * d[11] * d[21] * d[37] + 2 * d[8] * d[13] * d[21] * d[37] - 2 * d[2] * d[15] * d[21] * d[37] + 2 * d[4] * d[17] * d[21] * d[37] + 2 * d[8] * d[12] * d[22] * d[37] - 4 * d[7] * d[13] * d[22] * d[37] + 2 * d[6] * d[14] * d[22] * d[37] + 2 * d[5] * d[15] * d[22] * d[37] - 4 * d[4] * d[16] * d[22] * d[37] + 2 * d[3] * d[17] * d[22] * d[37] - 2 * d[8] * d[9] * d[23] * d[37] + 2 * d[6] * d[13] * d[23] * d[37] + 2 * d[4] * d[15] * d[23] * d[37] - 2 * d[0] * d[17] * d[23] * d[37] - 2 * d[3] * d[11] * d[24] * d[37] - 2 * d[2] * d[12] * d[24] * d[37] + 2 * d[5] * d[13] * d[24] * d[37] + 2 * d[4] * d[14] * d[24] * d[37] + 2 * d[2] * d[9] * d[25] * d[37] + 2 * d[0] * d[11] * d[25] * d[37] - 4 * d[4] * d[13] * d[25] * d[37] - 2 * d[5] * d[9] * d[26] * d[37] + 2 * d[4] * d[12] * d[26] * d[37] + 2 * d[3] * d[13] * d[26] * d[37] - 2 * d[0] * d[14] * d[26] * d[37] - 2 * d[12] * d[20] * d[36] * d[37] - 2 * d[11] * d[21] * d[36] * d[37] + 2 * d[14] * d[22] * d[36] * d[37] + 2 * d[13] * d[23] * d[36] * d[37] + d[11] * d[18] * std::pow(d[37], 2) + d[9] * d[20] * std::pow(d[37], 2) - 2 * d[13] * d[22] * std::pow(d[37], 2) + 2 * d[8] * d[10] * d[18] * d[38] - 2 * d[7] * d[14] * d[18] * d[38] - 2 * d[5] * d[16] * d[18] * d[38] + 2 * d[1] * d[17] * d[18] * d[38] + 2 * d[8] * d[9] * d[19] * d[38] - 2 * d[6] * d[13] * d[19] * d[38] - 2 * d[4] * d[15] * d[19] * d[38] + 2 * d[0] * d[17] * d[19] * d[38] - 4 * d[8] * d[12] * d[21] * d[38] + 2 * d[7] * d[13] * d[21] * d[38] + 2 * d[6] * d[14] * d[21] * d[38] + 2 * d[5] * d[15] * d[21] * d[38] + 2 * d[4] * d[16] * d[21] * d[38] - 4 * d[3] * d[17] * d[21] * d[38] - 2 * d[6] * d[10] * d[22] * d[38] + 2 * d[7] * d[12] * d[22] * d[38] - 2 * d[1] * d[15] * d[22] * d[38] + 2 * d[3] * d[16] * d[22] * d[38] - 2 * d[7] * d[9] * d[23] * d[38] + 2 * d[6] * d[12] * d[23] * d[38] + 2 * d[3] * d[15] * d[23] * d[38] - 2 * d[0] * d[16] * d[23] * d[38] - 2 * d[4] * d[10] * d[24] * d[38] + 2 * d[5] * d[12] * d[24] * d[38] - 2 * d[1] * d[13] * d[24] * d[38] + 2 * d[3] * d[14] * d[24] * d[38] - 2 * d[5] * d[9] * d[25] * d[38] + 2 * d[4] * d[12] * d[25] * d[38] + 2 * d[3] * d[13] * d[25] * d[38] - 2 * d[0] * d[14] * d[25] * d[38] + 2 * d[1] * d[9] * d[26] * d[38] + 2 * d[0] * d[10] * d[26] * d[38] - 4 * d[3] * d[12] * d[26] * d[38] - 2 * d[13] * d[19] * d[36] * d[38] + 2 * d[14] * d[21] * d[36] * d[38] - 2 * d[10] * d[22] * d[36] * d[38] + 2 * d[12] * d[23] * d[36] * d[38] - 2 * d[14] * d[18] * d[37] * d[38] + 2 * d[13] * d[21] * d[37] * d[38] + 2 * d[12] * d[22] * d[37] * d[38] - 2 * d[9] * d[23] * d[37] * d[38] + d[10] * d[18] * std::pow(d[38], 2) + d[9] * d[19] * std::pow(d[38], 2) - 2 * d[12] * d[21] * std::pow(d[38], 2) - d[2] * d[10] * d[18] * d[45] - d[1] * d[11] * d[18] * d[45] + 2 * d[5] * d[14] * d[18] * d[45] - d[2] * d[9] * d[19] * d[45] - d[0] * d[11] * d[19] * d[45] + 2 * d[4] * d[13] * d[19] * d[45] - d[1] * d[9] * d[20] * d[45] - d[0] * d[10] * d[20] * d[45] + 2 * d[3] * d[12] * d[20] * d[45] + 2 * d[3] * d[11] * d[21] * d[45] + 2 * d[2] * d[12] * d[21] * d[45] - 2 * d[5] * d[13] * d[21] * d[45] - 2 * d[4] * d[14] * d[21] * d[45] + 2 * d[4] * d[10] * d[22] * d[45] - 2 * d[5] * d[12] * d[22] * d[45] + 2 * d[1] * d[13] * d[22] * d[45] - 2 * d[3] * d[14] * d[22] * d[45] + 2 * d[5] * d[9] * d[23] * d[45] - 2 * d[4] * d[12] * d[23] * d[45] - 2 * d[3] * d[13] * d[23] * d[45] + 2 * d[0] * d[14] * d[23] * d[45];
    coeffs[12] = 2 * d[6] * d[19] * d[20] * d[36] - 2 * d[7] * d[20] * d[21] * d[36] - 2 * d[8] * d[19] * d[22] * d[36] + 2 * d[8] * d[21] * d[23] * d[36] + 2 * d[7] * d[22] * d[23] * d[36] - 2 * d[6] * std::pow(d[23], 2) * d[36] + 2 * d[2] * d[19] * d[24] * d[36] + 2 * d[1] * d[20] * d[24] * d[36] - 4 * d[5] * d[23] * d[24] * d[36] - 2 * d[3] * d[20] * d[25] * d[36] - 2 * d[2] * d[21] * d[25] * d[36] + 2 * d[5] * d[22] * d[25] * d[36] + 2 * d[4] * d[23] * d[25] * d[36] - 2 * d[4] * d[19] * d[26] * d[36] + 2 * d[5] * d[21] * d[26] * d[36] - 2 * d[1] * d[22] * d[26] * d[36] + 2 * d[3] * d[23] * d[26] * d[36] + d[19] * d[20] * std::pow(d[36], 2) - std::pow(d[23], 2) * std::pow(d[36], 2) + 2 * d[7] * d[18] * d[20] * d[37] - 2 * d[6] * d[20] * d[21] * d[37] + 2 * d[8] * d[21] * d[22] * d[37] - 2 * d[7] * std::pow(d[22], 2) * d[37] - 2 * d[8] * d[18] * d[23] * d[37] + 2 * d[6] * d[22] * d[23] * d[37] - 2 * d[3] * d[20] * d[24] * d[37] - 2 * d[2] * d[21] * d[24] * d[37] + 2 * d[5] * d[22] * d[24] * d[37] + 2 * d[4] * d[23] * d[24] * d[37] + 2 * d[2] * d[18] * d[25] * d[37] + 2 * d[0] * d[20] * d[25] * d[37] - 4 * d[4] * d[22] * d[25] * d[37] - 2 * d[5] * d[18] * d[26] * d[37] + 2 * d[4] * d[21] * d[26] * d[37] + 2 * d[3] * d[22] * d[26] * d[37] - 2 * d[0] * d[23] * d[26] * d[37] - 2 * d[20] * d[21] * d[36] * d[37] + 2 * d[22] * d[23] * d[36] * d[37] + d[18] * d[20] * std::pow(d[37], 2) - std::pow(d[22], 2) * std::pow(d[37], 2) + 2 * d[8] * d[18] * d[19] * d[38] - 2 * d[8] * std::pow(d[21], 2) * d[38] - 2 * d[6] * d[19] * d[22] * d[38] + 2 * d[7] * d[21] * d[22] * d[38] - 2 * d[7] * d[18] * d[23] * d[38] + 2 * d[6] * d[21] * d[23] * d[38] - 2 * d[4] * d[19] * d[24] * d[38] + 2 * d[5] * d[21] * d[24] * d[38] - 2 * d[1] * d[22] * d[24] * d[38] + 2 * d[3] * d[23] * d[24] * d[38] - 2 * d[5] * d[18] * d[25] * d[38] + 2 * d[4] * d[21] * d[25] * d[38] + 2 * d[3] * d[22] * d[25] * d[38] - 2 * d[0] * d[23] * d[25] * d[38] + 2 * d[1] * d[18] * d[26] * d[38] + 2 * d[0] * d[19] * d[26] * d[38] - 4 * d[3] * d[21] * d[26] * d[38] - 2 * d[19] * d[22] * d[36] * d[38] + 2 * d[21] * d[23] * d[36] * d[38] + 2 * d[21] * d[22] * d[37] * d[38] - 2 * d[18] * d[23] * d[37] * d[38] + d[18] * d[19] * std::pow(d[38], 2) - std::pow(d[21], 2) * std::pow(d[38], 2) - d[2] * d[18] * d[19] * d[45] - d[1] * d[18] * d[20] * d[45] - d[0] * d[19] * d[20] * d[45] + 2 * d[3] * d[20] * d[21] * d[45] + d[2] * std::pow(d[21], 2) * d[45] + 2 * d[4] * d[19] * d[22] * d[45] - 2 * d[5] * d[21] * d[22] * d[45] + d[1] * std::pow(d[22], 2) * d[45] + 2 * d[5] * d[18] * d[23] * d[45] - 2 * d[4] * d[21] * d[23] * d[45] - 2 * d[3] * d[22] * d[23] * d[45] + d[0] * std::pow(d[23], 2) * d[45];
    coeffs[13] = 2 * d[6] * d[11] * d[28] * d[36] - 2 * d[8] * d[13] * d[28] * d[36] + 2 * d[2] * d[15] * d[28] * d[36] - 2 * d[4] * d[17] * d[28] * d[36] + 2 * d[6] * d[10] * d[29] * d[36] - 2 * d[7] * d[12] * d[29] * d[36] + 2 * d[1] * d[15] * d[29] * d[36] - 2 * d[3] * d[16] * d[29] * d[36] - 2 * d[7] * d[11] * d[30] * d[36] + 2 * d[8] * d[14] * d[30] * d[36] - 2 * d[2] * d[16] * d[30] * d[36] + 2 * d[5] * d[17] * d[30] * d[36] - 2 * d[8] * d[10] * d[31] * d[36] + 2 * d[7] * d[14] * d[31] * d[36] + 2 * d[5] * d[16] * d[31] * d[36] - 2 * d[1] * d[17] * d[31] * d[36] + 2 * d[8] * d[12] * d[32] * d[36] + 2 * d[7] * d[13] * d[32] * d[36] - 4 * d[6] * d[14] * d[32] * d[36] - 4 * d[5] * d[15] * d[32] * d[36] + 2 * d[4] * d[16] * d[32] * d[36] + 2 * d[3] * d[17] * d[32] * d[36] + 2 * d[2] * d[10] * d[33] * d[36] + 2 * d[1] * d[11] * d[33] * d[36] - 4 * d[5] * d[14] * d[33] * d[36] - 2 * d[3] * d[11] * d[34] * d[36] - 2 * d[2] * d[12] * d[34] * d[36] + 2 * d[5] * d[13] * d[34] * d[36] + 2 * d[4] * d[14] * d[34] * d[36] - 2 * d[4] * d[10] * d[35] * d[36] + 2 * d[5] * d[12] * d[35] * d[36] - 2 * d[1] * d[13] * d[35] * d[36] + 2 * d[3] * d[14] * d[35] * d[36] + d[11] * d[28] * std::pow(d[36], 2) + d[10] * d[29] * std::pow(d[36], 2) - 2 * d[14] * d[32] * std::pow(d[36], 2) + 2 * d[7] * d[11] * d[27] * d[37] - 2 * d[8] * d[14] * d[27] * d[37] + 2 * d[2] * d[16] * d[27] * d[37] - 2 * d[5] * d[17] * d[27] * d[37] + 2 * d[7] * d[9] * d[29] * d[37] - 2 * d[6] * d[12] * d[29] * d[37] - 2 * d[3] * d[15] * d[29] * d[37] + 2 * d[0] * d[16] * d[29] * d[37] - 2 * d[6] * d[11] * d[30] * d[37] + 2 * d[8] * d[13] * d[30] * d[37] - 2 * d[2] * d[15] * d[30] * d[37] + 2 * d[4] * d[17] * d[30] * d[37] + 2 * d[8] * d[12] * d[31] * d[37] - 4 * d[7] * d[13] * d[31] * d[37] + 2 * d[6] * d[14] * d[31] * d[37] + 2 * d[5] * d[15] * d[31] * d[37] - 4 * d[4] * d[16] * d[31] * d[37] + 2 * d[3] * d[17] * d[31] * d[37] - 2 * d[8] * d[9] * d[32] * d[37] + 2 * d[6] * d[13] * d[32] * d[37] + 2 * d[4] * d[15] * d[32] * d[37] - 2 * d[0] * d[17] * d[32] * d[37] - 2 * d[3] * d[11] * d[33] * d[37] - 2 * d[2] * d[12] * d[33] * d[37] + 2 * d[5] * d[13] * d[33] * d[37] + 2 * d[4] * d[14] * d[33] * d[37] + 2 * d[2] * d[9] * d[34] * d[37] + 2 * d[0] * d[11] * d[34] * d[37] - 4 * d[4] * d[13] * d[34] * d[37] - 2 * d[5] * d[9] * d[35] * d[37] + 2 * d[4] * d[12] * d[35] * d[37] + 2 * d[3] * d[13] * d[35] * d[37] - 2 * d[0] * d[14] * d[35] * d[37] - 2 * d[12] * d[29] * d[36] * d[37] - 2 * d[11] * d[30] * d[36] * d[37] + 2 * d[14] * d[31] * d[36] * d[37] + 2 * d[13] * d[32] * d[36] * d[37] + d[11] * d[27] * std::pow(d[37], 2) + d[9] * d[29] * std::pow(d[37], 2) - 2 * d[13] * d[31] * std::pow(d[37], 2) + 2 * d[8] * d[10] * d[27] * d[38] - 2 * d[7] * d[14] * d[27] * d[38] - 2 * d[5] * d[16] * d[27] * d[38] + 2 * d[1] * d[17] * d[27] * d[38] + 2 * d[8] * d[9] * d[28] * d[38] - 2 * d[6] * d[13] * d[28] * d[38] - 2 * d[4] * d[15] * d[28] * d[38] + 2 * d[0] * d[17] * d[28] * d[38] - 4 * d[8] * d[12] * d[30] * d[38] + 2 * d[7] * d[13] * d[30] * d[38] + 2 * d[6] * d[14] * d[30] * d[38] + 2 * d[5] * d[15] * d[30] * d[38] + 2 * d[4] * d[16] * d[30] * d[38] - 4 * d[3] * d[17] * d[30] * d[38] - 2 * d[6] * d[10] * d[31] * d[38] + 2 * d[7] * d[12] * d[31] * d[38] - 2 * d[1] * d[15] * d[31] * d[38] + 2 * d[3] * d[16] * d[31] * d[38] - 2 * d[7] * d[9] * d[32] * d[38] + 2 * d[6] * d[12] * d[32] * d[38] + 2 * d[3] * d[15] * d[32] * d[38] - 2 * d[0] * d[16] * d[32] * d[38] - 2 * d[4] * d[10] * d[33] * d[38] + 2 * d[5] * d[12] * d[33] * d[38] - 2 * d[1] * d[13] * d[33] * d[38] + 2 * d[3] * d[14] * d[33] * d[38] - 2 * d[5] * d[9] * d[34] * d[38] + 2 * d[4] * d[12] * d[34] * d[38] + 2 * d[3] * d[13] * d[34] * d[38] - 2 * d[0] * d[14] * d[34] * d[38] + 2 * d[1] * d[9] * d[35] * d[38] + 2 * d[0] * d[10] * d[35] * d[38] - 4 * d[3] * d[12] * d[35] * d[38] - 2 * d[13] * d[28] * d[36] * d[38] + 2 * d[14] * d[30] * d[36] * d[38] - 2 * d[10] * d[31] * d[36] * d[38] + 2 * d[12] * d[32] * d[36] * d[38] - 2 * d[14] * d[27] * d[37] * d[38] + 2 * d[13] * d[30] * d[37] * d[38] + 2 * d[12] * d[31] * d[37] * d[38] - 2 * d[9] * d[32] * d[37] * d[38] + d[10] * d[27] * std::pow(d[38], 2) + d[9] * d[28] * std::pow(d[38], 2) - 2 * d[12] * d[30] * std::pow(d[38], 2) - d[2] * d[10] * d[27] * d[45] - d[1] * d[11] * d[27] * d[45] + 2 * d[5] * d[14] * d[27] * d[45] - d[2] * d[9] * d[28] * d[45] - d[0] * d[11] * d[28] * d[45] + 2 * d[4] * d[13] * d[28] * d[45] - d[1] * d[9] * d[29] * d[45] - d[0] * d[10] * d[29] * d[45] + 2 * d[3] * d[12] * d[29] * d[45] + 2 * d[3] * d[11] * d[30] * d[45] + 2 * d[2] * d[12] * d[30] * d[45] - 2 * d[5] * d[13] * d[30] * d[45] - 2 * d[4] * d[14] * d[30] * d[45] + 2 * d[4] * d[10] * d[31] * d[45] - 2 * d[5] * d[12] * d[31] * d[45] + 2 * d[1] * d[13] * d[31] * d[45] - 2 * d[3] * d[14] * d[31] * d[45] + 2 * d[5] * d[9] * d[32] * d[45] - 2 * d[4] * d[12] * d[32] * d[45] - 2 * d[3] * d[13] * d[32] * d[45] + 2 * d[0] * d[14] * d[32] * d[45];
    coeffs[14] = 2 * d[6] * d[20] * d[28] * d[36] - 2 * d[8] * d[22] * d[28] * d[36] + 2 * d[2] * d[24] * d[28] * d[36] - 2 * d[4] * d[26] * d[28] * d[36] + 2 * d[6] * d[19] * d[29] * d[36] - 2 * d[7] * d[21] * d[29] * d[36] + 2 * d[1] * d[24] * d[29] * d[36] - 2 * d[3] * d[25] * d[29] * d[36] - 2 * d[7] * d[20] * d[30] * d[36] + 2 * d[8] * d[23] * d[30] * d[36] - 2 * d[2] * d[25] * d[30] * d[36] + 2 * d[5] * d[26] * d[30] * d[36] - 2 * d[8] * d[19] * d[31] * d[36] + 2 * d[7] * d[23] * d[31] * d[36] + 2 * d[5] * d[25] * d[31] * d[36] - 2 * d[1] * d[26] * d[31] * d[36] + 2 * d[8] * d[21] * d[32] * d[36] + 2 * d[7] * d[22] * d[32] * d[36] - 4 * d[6] * d[23] * d[32] * d[36] - 4 * d[5] * d[24] * d[32] * d[36] + 2 * d[4] * d[25] * d[32] * d[36] + 2 * d[3] * d[26] * d[32] * d[36] + 2 * d[2] * d[19] * d[33] * d[36] + 2 * d[1] * d[20] * d[33] * d[36] - 4 * d[5] * d[23] * d[33] * d[36] - 2 * d[3] * d[20] * d[34] * d[36] - 2 * d[2] * d[21] * d[34] * d[36] + 2 * d[5] * d[22] * d[34] * d[36] + 2 * d[4] * d[23] * d[34] * d[36] - 2 * d[4] * d[19] * d[35] * d[36] + 2 * d[5] * d[21] * d[35] * d[36] - 2 * d[1] * d[22] * d[35] * d[36] + 2 * d[3] * d[23] * d[35] * d[36] + d[20] * d[28] * std::pow(d[36], 2) + d[19] * d[29] * std::pow(d[36], 2) - 2 * d[23] * d[32] * std::pow(d[36], 2) + 2 * d[7] * d[20] * d[27] * d[37] - 2 * d[8] * d[23] * d[27] * d[37] + 2 * d[2] * d[25] * d[27] * d[37] - 2 * d[5] * d[26] * d[27] * d[37] + 2 * d[7] * d[18] * d[29] * d[37] - 2 * d[6] * d[21] * d[29] * d[37] - 2 * d[3] * d[24] * d[29] * d[37] + 2 * d[0] * d[25] * d[29] * d[37] - 2 * d[6] * d[20] * d[30] * d[37] + 2 * d[8] * d[22] * d[30] * d[37] - 2 * d[2] * d[24] * d[30] * d[37] + 2 * d[4] * d[26] * d[30] * d[37] + 2 * d[8] * d[21] * d[31] * d[37] - 4 * d[7] * d[22] * d[31] * d[37] + 2 * d[6] * d[23] * d[31] * d[37] + 2 * d[5] * d[24] * d[31] * d[37] - 4 * d[4] * d[25] * d[31] * d[37] + 2 * d[3] * d[26] * d[31] * d[37] - 2 * d[8] * d[18] * d[32] * d[37] + 2 * d[6] * d[22] * d[32] * d[37] + 2 * d[4] * d[24] * d[32] * d[37] - 2 * d[0] * d[26] * d[32] * d[37] - 2 * d[3] * d[20] * d[33] * d[37] - 2 * d[2] * d[21] * d[33] * d[37] + 2 * d[5] * d[22] * d[33] * d[37] + 2 * d[4] * d[23] * d[33] * d[37] + 2 * d[2] * d[18] * d[34] * d[37] + 2 * d[0] * d[20] * d[34] * d[37] - 4 * d[4] * d[22] * d[34] * d[37] - 2 * d[5] * d[18] * d[35] * d[37] + 2 * d[4] * d[21] * d[35] * d[37] + 2 * d[3] * d[22] * d[35] * d[37] - 2 * d[0] * d[23] * d[35] * d[37] - 2 * d[21] * d[29] * d[36] * d[37] - 2 * d[20] * d[30] * d[36] * d[37] + 2 * d[23] * d[31] * d[36] * d[37] + 2 * d[22] * d[32] * d[36] * d[37] + d[20] * d[27] * std::pow(d[37], 2) + d[18] * d[29] * std::pow(d[37], 2) - 2 * d[22] * d[31] * std::pow(d[37], 2) + 2 * d[8] * d[19] * d[27] * d[38] - 2 * d[7] * d[23] * d[27] * d[38] - 2 * d[5] * d[25] * d[27] * d[38] + 2 * d[1] * d[26] * d[27] * d[38] + 2 * d[8] * d[18] * d[28] * d[38] - 2 * d[6] * d[22] * d[28] * d[38] - 2 * d[4] * d[24] * d[28] * d[38] + 2 * d[0] * d[26] * d[28] * d[38] - 4 * d[8] * d[21] * d[30] * d[38] + 2 * d[7] * d[22] * d[30] * d[38] + 2 * d[6] * d[23] * d[30] * d[38] + 2 * d[5] * d[24] * d[30] * d[38] + 2 * d[4] * d[25] * d[30] * d[38] - 4 * d[3] * d[26] * d[30] * d[38] - 2 * d[6] * d[19] * d[31] * d[38] + 2 * d[7] * d[21] * d[31] * d[38] - 2 * d[1] * d[24] * d[31] * d[38] + 2 * d[3] * d[25] * d[31] * d[38] - 2 * d[7] * d[18] * d[32] * d[38] + 2 * d[6] * d[21] * d[32] * d[38] + 2 * d[3] * d[24] * d[32] * d[38] - 2 * d[0] * d[25] * d[32] * d[38] - 2 * d[4] * d[19] * d[33] * d[38] + 2 * d[5] * d[21] * d[33] * d[38] - 2 * d[1] * d[22] * d[33] * d[38] + 2 * d[3] * d[23] * d[33] * d[38] - 2 * d[5] * d[18] * d[34] * d[38] + 2 * d[4] * d[21] * d[34] * d[38] + 2 * d[3] * d[22] * d[34] * d[38] - 2 * d[0] * d[23] * d[34] * d[38] + 2 * d[1] * d[18] * d[35] * d[38] + 2 * d[0] * d[19] * d[35] * d[38] - 4 * d[3] * d[21] * d[35] * d[38] - 2 * d[22] * d[28] * d[36] * d[38] + 2 * d[23] * d[30] * d[36] * d[38] - 2 * d[19] * d[31] * d[36] * d[38] + 2 * d[21] * d[32] * d[36] * d[38] - 2 * d[23] * d[27] * d[37] * d[38] + 2 * d[22] * d[30] * d[37] * d[38] + 2 * d[21] * d[31] * d[37] * d[38] - 2 * d[18] * d[32] * d[37] * d[38] + d[19] * d[27] * std::pow(d[38], 2) + d[18] * d[28] * std::pow(d[38], 2) - 2 * d[21] * d[30] * std::pow(d[38], 2) - d[2] * d[19] * d[27] * d[45] - d[1] * d[20] * d[27] * d[45] + 2 * d[5] * d[23] * d[27] * d[45] - d[2] * d[18] * d[28] * d[45] - d[0] * d[20] * d[28] * d[45] + 2 * d[4] * d[22] * d[28] * d[45] - d[1] * d[18] * d[29] * d[45] - d[0] * d[19] * d[29] * d[45] + 2 * d[3] * d[21] * d[29] * d[45] + 2 * d[3] * d[20] * d[30] * d[45] + 2 * d[2] * d[21] * d[30] * d[45] - 2 * d[5] * d[22] * d[30] * d[45] - 2 * d[4] * d[23] * d[30] * d[45] + 2 * d[4] * d[19] * d[31] * d[45] - 2 * d[5] * d[21] * d[31] * d[45] + 2 * d[1] * d[22] * d[31] * d[45] - 2 * d[3] * d[23] * d[31] * d[45] + 2 * d[5] * d[18] * d[32] * d[45] - 2 * d[4] * d[21] * d[32] * d[45] - 2 * d[3] * d[22] * d[32] * d[45] + 2 * d[0] * d[23] * d[32] * d[45];
    coeffs[15] = 2 * d[6] * d[28] * d[29] * d[36] - 2 * d[7] * d[29] * d[30] * d[36] - 2 * d[8] * d[28] * d[31] * d[36] + 2 * d[8] * d[30] * d[32] * d[36] + 2 * d[7] * d[31] * d[32] * d[36] - 2 * d[6] * std::pow(d[32], 2) * d[36] + 2 * d[2] * d[28] * d[33] * d[36] + 2 * d[1] * d[29] * d[33] * d[36] - 4 * d[5] * d[32] * d[33] * d[36] - 2 * d[3] * d[29] * d[34] * d[36] - 2 * d[2] * d[30] * d[34] * d[36] + 2 * d[5] * d[31] * d[34] * d[36] + 2 * d[4] * d[32] * d[34] * d[36] - 2 * d[4] * d[28] * d[35] * d[36] + 2 * d[5] * d[30] * d[35] * d[36] - 2 * d[1] * d[31] * d[35] * d[36] + 2 * d[3] * d[32] * d[35] * d[36] + d[28] * d[29] * std::pow(d[36], 2) - std::pow(d[32], 2) * std::pow(d[36], 2) + 2 * d[7] * d[27] * d[29] * d[37] - 2 * d[6] * d[29] * d[30] * d[37] + 2 * d[8] * d[30] * d[31] * d[37] - 2 * d[7] * std::pow(d[31], 2) * d[37] - 2 * d[8] * d[27] * d[32] * d[37] + 2 * d[6] * d[31] * d[32] * d[37] - 2 * d[3] * d[29] * d[33] * d[37] - 2 * d[2] * d[30] * d[33] * d[37] + 2 * d[5] * d[31] * d[33] * d[37] + 2 * d[4] * d[32] * d[33] * d[37] + 2 * d[2] * d[27] * d[34] * d[37] + 2 * d[0] * d[29] * d[34] * d[37] - 4 * d[4] * d[31] * d[34] * d[37] - 2 * d[5] * d[27] * d[35] * d[37] + 2 * d[4] * d[30] * d[35] * d[37] + 2 * d[3] * d[31] * d[35] * d[37] - 2 * d[0] * d[32] * d[35] * d[37] - 2 * d[29] * d[30] * d[36] * d[37] + 2 * d[31] * d[32] * d[36] * d[37] + d[27] * d[29] * std::pow(d[37], 2) - std::pow(d[31], 2) * std::pow(d[37], 2) + 2 * d[8] * d[27] * d[28] * d[38] - 2 * d[8] * std::pow(d[30], 2) * d[38] - 2 * d[6] * d[28] * d[31] * d[38] + 2 * d[7] * d[30] * d[31] * d[38] - 2 * d[7] * d[27] * d[32] * d[38] + 2 * d[6] * d[30] * d[32] * d[38] - 2 * d[4] * d[28] * d[33] * d[38] + 2 * d[5] * d[30] * d[33] * d[38] - 2 * d[1] * d[31] * d[33] * d[38] + 2 * d[3] * d[32] * d[33] * d[38] - 2 * d[5] * d[27] * d[34] * d[38] + 2 * d[4] * d[30] * d[34] * d[38] + 2 * d[3] * d[31] * d[34] * d[38] - 2 * d[0] * d[32] * d[34] * d[38] + 2 * d[1] * d[27] * d[35] * d[38] + 2 * d[0] * d[28] * d[35] * d[38] - 4 * d[3] * d[30] * d[35] * d[38] - 2 * d[28] * d[31] * d[36] * d[38] + 2 * d[30] * d[32] * d[36] * d[38] + 2 * d[30] * d[31] * d[37] * d[38] - 2 * d[27] * d[32] * d[37] * d[38] + d[27] * d[28] * std::pow(d[38], 2) - std::pow(d[30], 2) * std::pow(d[38], 2) - d[2] * d[27] * d[28] * d[45] - d[1] * d[27] * d[29] * d[45] - d[0] * d[28] * d[29] * d[45] + 2 * d[3] * d[29] * d[30] * d[45] + d[2] * std::pow(d[30], 2) * d[45] + 2 * d[4] * d[28] * d[31] * d[45] - 2 * d[5] * d[30] * d[31] * d[45] + d[1] * std::pow(d[31], 2) * d[45] + 2 * d[5] * d[27] * d[32] * d[45] - 2 * d[4] * d[30] * d[32] * d[45] - 2 * d[3] * d[31] * d[32] * d[45] + d[0] * std::pow(d[32], 2) * d[45];
    coeffs[16] = 2 * d[2] * d[6] * d[10] * d[36] - 2 * d[4] * d[8] * d[10] * d[36] + 2 * d[1] * d[6] * d[11] * d[36] - 2 * d[3] * d[7] * d[11] * d[36] - 2 * d[2] * d[7] * d[12] * d[36] + 2 * d[5] * d[8] * d[12] * d[36] + 2 * d[5] * d[7] * d[13] * d[36] - 2 * d[1] * d[8] * d[13] * d[36] - 4 * d[5] * d[6] * d[14] * d[36] + 2 * d[4] * d[7] * d[14] * d[36] + 2 * d[3] * d[8] * d[14] * d[36] + 2 * d[1] * d[2] * d[15] * d[36] - 2 * std::pow(d[5], 2) * d[15] * d[36] - 2 * d[2] * d[3] * d[16] * d[36] + 2 * d[4] * d[5] * d[16] * d[36] - 2 * d[1] * d[4] * d[17] * d[36] + 2 * d[3] * d[5] * d[17] * d[36] + d[2] * d[10] * std::pow(d[36], 2) + d[1] * d[11] * std::pow(d[36], 2) - 2 * d[5] * d[14] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[9] * d[37] - 2 * d[5] * d[8] * d[9] * d[37] - 2 * d[3] * d[6] * d[11] * d[37] + 2 * d[0] * d[7] * d[11] * d[37] - 2 * d[2] * d[6] * d[12] * d[37] + 2 * d[4] * d[8] * d[12] * d[37] + 2 * d[5] * d[6] * d[13] * d[37] - 4 * d[4] * d[7] * d[13] * d[37] + 2 * d[3] * d[8] * d[13] * d[37] + 2 * d[4] * d[6] * d[14] * d[37] - 2 * d[0] * d[8] * d[14] * d[37] - 2 * d[2] * d[3] * d[15] * d[37] + 2 * d[4] * d[5] * d[15] * d[37] + 2 * d[0] * d[2] * d[16] * d[37] - 2 * std::pow(d[4], 2) * d[16] * d[37] + 2 * d[3] * d[4] * d[17] * d[37] - 2 * d[0] * d[5] * d[17] * d[37] - 2 * d[3] * d[11] * d[36] * d[37] - 2 * d[2] * d[12] * d[36] * d[37] + 2 * d[5] * d[13] * d[36] * d[37] + 2 * d[4] * d[14] * d[36] * d[37] + d[2] * d[9] * std::pow(d[37], 2) + d[0] * d[11] * std::pow(d[37], 2) - 2 * d[4] * d[13] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[9] * d[38] + 2 * d[1] * d[8] * d[9] * d[38] - 2 * d[4] * d[6] * d[10] * d[38] + 2 * d[0] * d[8] * d[10] * d[38] + 2 * d[5] * d[6] * d[12] * d[38] + 2 * d[4] * d[7] * d[12] * d[38] - 4 * d[3] * d[8] * d[12] * d[38] - 2 * d[1] * d[6] * d[13] * d[38] + 2 * d[3] * d[7] * d[13] * d[38] + 2 * d[3] * d[6] * d[14] * d[38] - 2 * d[0] * d[7] * d[14] * d[38] - 2 * d[1] * d[4] * d[15] * d[38] + 2 * d[3] * d[5] * d[15] * d[38] + 2 * d[3] * d[4] * d[16] * d[38] - 2 * d[0] * d[5] * d[16] * d[38] + 2 * d[0] * d[1] * d[17] * d[38] - 2 * std::pow(d[3], 2) * d[17] * d[38] - 2 * d[4] * d[10] * d[36] * d[38] + 2 * d[5] * d[12] * d[36] * d[38] - 2 * d[1] * d[13] * d[36] * d[38] + 2 * d[3] * d[14] * d[36] * d[38] - 2 * d[5] * d[9] * d[37] * d[38] + 2 * d[4] * d[12] * d[37] * d[38] + 2 * d[3] * d[13] * d[37] * d[38] - 2 * d[0] * d[14] * d[37] * d[38] + d[1] * d[9] * std::pow(d[38], 2) + d[0] * d[10] * std::pow(d[38], 2) - 2 * d[3] * d[12] * std::pow(d[38], 2) - d[1] * d[2] * d[9] * d[45] + std::pow(d[5], 2) * d[9] * d[45] - d[0] * d[2] * d[10] * d[45] + std::pow(d[4], 2) * d[10] * d[45] - d[0] * d[1] * d[11] * d[45] + std::pow(d[3], 2) * d[11] * d[45] + 2 * d[2] * d[3] * d[12] * d[45] - 2 * d[4] * d[5] * d[12] * d[45] + 2 * d[1] * d[4] * d[13] * d[45] - 2 * d[3] * d[5] * d[13] * d[45] - 2 * d[3] * d[4] * d[14] * d[45] + 2 * d[0] * d[5] * d[14] * d[45];
    coeffs[17] = 2 * d[2] * d[6] * d[19] * d[36] - 2 * d[4] * d[8] * d[19] * d[36] + 2 * d[1] * d[6] * d[20] * d[36] - 2 * d[3] * d[7] * d[20] * d[36] - 2 * d[2] * d[7] * d[21] * d[36] + 2 * d[5] * d[8] * d[21] * d[36] + 2 * d[5] * d[7] * d[22] * d[36] - 2 * d[1] * d[8] * d[22] * d[36] - 4 * d[5] * d[6] * d[23] * d[36] + 2 * d[4] * d[7] * d[23] * d[36] + 2 * d[3] * d[8] * d[23] * d[36] + 2 * d[1] * d[2] * d[24] * d[36] - 2 * std::pow(d[5], 2) * d[24] * d[36] - 2 * d[2] * d[3] * d[25] * d[36] + 2 * d[4] * d[5] * d[25] * d[36] - 2 * d[1] * d[4] * d[26] * d[36] + 2 * d[3] * d[5] * d[26] * d[36] + d[2] * d[19] * std::pow(d[36], 2) + d[1] * d[20] * std::pow(d[36], 2) - 2 * d[5] * d[23] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[18] * d[37] - 2 * d[5] * d[8] * d[18] * d[37] - 2 * d[3] * d[6] * d[20] * d[37] + 2 * d[0] * d[7] * d[20] * d[37] - 2 * d[2] * d[6] * d[21] * d[37] + 2 * d[4] * d[8] * d[21] * d[37] + 2 * d[5] * d[6] * d[22] * d[37] - 4 * d[4] * d[7] * d[22] * d[37] + 2 * d[3] * d[8] * d[22] * d[37] + 2 * d[4] * d[6] * d[23] * d[37] - 2 * d[0] * d[8] * d[23] * d[37] - 2 * d[2] * d[3] * d[24] * d[37] + 2 * d[4] * d[5] * d[24] * d[37] + 2 * d[0] * d[2] * d[25] * d[37] - 2 * std::pow(d[4], 2) * d[25] * d[37] + 2 * d[3] * d[4] * d[26] * d[37] - 2 * d[0] * d[5] * d[26] * d[37] - 2 * d[3] * d[20] * d[36] * d[37] - 2 * d[2] * d[21] * d[36] * d[37] + 2 * d[5] * d[22] * d[36] * d[37] + 2 * d[4] * d[23] * d[36] * d[37] + d[2] * d[18] * std::pow(d[37], 2) + d[0] * d[20] * std::pow(d[37], 2) - 2 * d[4] * d[22] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[18] * d[38] + 2 * d[1] * d[8] * d[18] * d[38] - 2 * d[4] * d[6] * d[19] * d[38] + 2 * d[0] * d[8] * d[19] * d[38] + 2 * d[5] * d[6] * d[21] * d[38] + 2 * d[4] * d[7] * d[21] * d[38] - 4 * d[3] * d[8] * d[21] * d[38] - 2 * d[1] * d[6] * d[22] * d[38] + 2 * d[3] * d[7] * d[22] * d[38] + 2 * d[3] * d[6] * d[23] * d[38] - 2 * d[0] * d[7] * d[23] * d[38] - 2 * d[1] * d[4] * d[24] * d[38] + 2 * d[3] * d[5] * d[24] * d[38] + 2 * d[3] * d[4] * d[25] * d[38] - 2 * d[0] * d[5] * d[25] * d[38] + 2 * d[0] * d[1] * d[26] * d[38] - 2 * std::pow(d[3], 2) * d[26] * d[38] - 2 * d[4] * d[19] * d[36] * d[38] + 2 * d[5] * d[21] * d[36] * d[38] - 2 * d[1] * d[22] * d[36] * d[38] + 2 * d[3] * d[23] * d[36] * d[38] - 2 * d[5] * d[18] * d[37] * d[38] + 2 * d[4] * d[21] * d[37] * d[38] + 2 * d[3] * d[22] * d[37] * d[38] - 2 * d[0] * d[23] * d[37] * d[38] + d[1] * d[18] * std::pow(d[38], 2) + d[0] * d[19] * std::pow(d[38], 2) - 2 * d[3] * d[21] * std::pow(d[38], 2) - d[1] * d[2] * d[18] * d[45] + std::pow(d[5], 2) * d[18] * d[45] - d[0] * d[2] * d[19] * d[45] + std::pow(d[4], 2) * d[19] * d[45] - d[0] * d[1] * d[20] * d[45] + std::pow(d[3], 2) * d[20] * d[45] + 2 * d[2] * d[3] * d[21] * d[45] - 2 * d[4] * d[5] * d[21] * d[45] + 2 * d[1] * d[4] * d[22] * d[45] - 2 * d[3] * d[5] * d[22] * d[45] - 2 * d[3] * d[4] * d[23] * d[45] + 2 * d[0] * d[5] * d[23] * d[45];
    coeffs[18] = 2 * d[2] * d[6] * d[28] * d[36] - 2 * d[4] * d[8] * d[28] * d[36] + 2 * d[1] * d[6] * d[29] * d[36] - 2 * d[3] * d[7] * d[29] * d[36] - 2 * d[2] * d[7] * d[30] * d[36] + 2 * d[5] * d[8] * d[30] * d[36] + 2 * d[5] * d[7] * d[31] * d[36] - 2 * d[1] * d[8] * d[31] * d[36] - 4 * d[5] * d[6] * d[32] * d[36] + 2 * d[4] * d[7] * d[32] * d[36] + 2 * d[3] * d[8] * d[32] * d[36] + 2 * d[1] * d[2] * d[33] * d[36] - 2 * std::pow(d[5], 2) * d[33] * d[36] - 2 * d[2] * d[3] * d[34] * d[36] + 2 * d[4] * d[5] * d[34] * d[36] - 2 * d[1] * d[4] * d[35] * d[36] + 2 * d[3] * d[5] * d[35] * d[36] + d[2] * d[28] * std::pow(d[36], 2) + d[1] * d[29] * std::pow(d[36], 2) - 2 * d[5] * d[32] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[27] * d[37] - 2 * d[5] * d[8] * d[27] * d[37] - 2 * d[3] * d[6] * d[29] * d[37] + 2 * d[0] * d[7] * d[29] * d[37] - 2 * d[2] * d[6] * d[30] * d[37] + 2 * d[4] * d[8] * d[30] * d[37] + 2 * d[5] * d[6] * d[31] * d[37] - 4 * d[4] * d[7] * d[31] * d[37] + 2 * d[3] * d[8] * d[31] * d[37] + 2 * d[4] * d[6] * d[32] * d[37] - 2 * d[0] * d[8] * d[32] * d[37] - 2 * d[2] * d[3] * d[33] * d[37] + 2 * d[4] * d[5] * d[33] * d[37] + 2 * d[0] * d[2] * d[34] * d[37] - 2 * std::pow(d[4], 2) * d[34] * d[37] + 2 * d[3] * d[4] * d[35] * d[37] - 2 * d[0] * d[5] * d[35] * d[37] - 2 * d[3] * d[29] * d[36] * d[37] - 2 * d[2] * d[30] * d[36] * d[37] + 2 * d[5] * d[31] * d[36] * d[37] + 2 * d[4] * d[32] * d[36] * d[37] + d[2] * d[27] * std::pow(d[37], 2) + d[0] * d[29] * std::pow(d[37], 2) - 2 * d[4] * d[31] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[27] * d[38] + 2 * d[1] * d[8] * d[27] * d[38] - 2 * d[4] * d[6] * d[28] * d[38] + 2 * d[0] * d[8] * d[28] * d[38] + 2 * d[5] * d[6] * d[30] * d[38] + 2 * d[4] * d[7] * d[30] * d[38] - 4 * d[3] * d[8] * d[30] * d[38] - 2 * d[1] * d[6] * d[31] * d[38] + 2 * d[3] * d[7] * d[31] * d[38] + 2 * d[3] * d[6] * d[32] * d[38] - 2 * d[0] * d[7] * d[32] * d[38] - 2 * d[1] * d[4] * d[33] * d[38] + 2 * d[3] * d[5] * d[33] * d[38] + 2 * d[3] * d[4] * d[34] * d[38] - 2 * d[0] * d[5] * d[34] * d[38] + 2 * d[0] * d[1] * d[35] * d[38] - 2 * std::pow(d[3], 2) * d[35] * d[38] - 2 * d[4] * d[28] * d[36] * d[38] + 2 * d[5] * d[30] * d[36] * d[38] - 2 * d[1] * d[31] * d[36] * d[38] + 2 * d[3] * d[32] * d[36] * d[38] - 2 * d[5] * d[27] * d[37] * d[38] + 2 * d[4] * d[30] * d[37] * d[38] + 2 * d[3] * d[31] * d[37] * d[38] - 2 * d[0] * d[32] * d[37] * d[38] + d[1] * d[27] * std::pow(d[38], 2) + d[0] * d[28] * std::pow(d[38], 2) - 2 * d[3] * d[30] * std::pow(d[38], 2) - d[1] * d[2] * d[27] * d[45] + std::pow(d[5], 2) * d[27] * d[45] - d[0] * d[2] * d[28] * d[45] + std::pow(d[4], 2) * d[28] * d[45] - d[0] * d[1] * d[29] * d[45] + std::pow(d[3], 2) * d[29] * d[45] + 2 * d[2] * d[3] * d[30] * d[45] - 2 * d[4] * d[5] * d[30] * d[45] + 2 * d[1] * d[4] * d[31] * d[45] - 2 * d[3] * d[5] * d[31] * d[45] - 2 * d[3] * d[4] * d[32] * d[45] + 2 * d[0] * d[5] * d[32] * d[45];
    coeffs[19] = 2 * d[1] * d[2] * d[6] * d[36] - 2 * std::pow(d[5], 2) * d[6] * d[36] - 2 * d[2] * d[3] * d[7] * d[36] + 2 * d[4] * d[5] * d[7] * d[36] - 2 * d[1] * d[4] * d[8] * d[36] + 2 * d[3] * d[5] * d[8] * d[36] + d[1] * d[2] * std::pow(d[36], 2) - std::pow(d[5], 2) * std::pow(d[36], 2) - 2 * d[2] * d[3] * d[6] * d[37] + 2 * d[4] * d[5] * d[6] * d[37] + 2 * d[0] * d[2] * d[7] * d[37] - 2 * std::pow(d[4], 2) * d[7] * d[37] + 2 * d[3] * d[4] * d[8] * d[37] - 2 * d[0] * d[5] * d[8] * d[37] - 2 * d[2] * d[3] * d[36] * d[37] + 2 * d[4] * d[5] * d[36] * d[37] + d[0] * d[2] * std::pow(d[37], 2) - std::pow(d[4], 2) * std::pow(d[37], 2) - 2 * d[1] * d[4] * d[6] * d[38] + 2 * d[3] * d[5] * d[6] * d[38] + 2 * d[3] * d[4] * d[7] * d[38] - 2 * d[0] * d[5] * d[7] * d[38] + 2 * d[0] * d[1] * d[8] * d[38] - 2 * std::pow(d[3], 2) * d[8] * d[38] - 2 * d[1] * d[4] * d[36] * d[38] + 2 * d[3] * d[5] * d[36] * d[38] + 2 * d[3] * d[4] * d[37] * d[38] - 2 * d[0] * d[5] * d[37] * d[38] + d[0] * d[1] * std::pow(d[38], 2) - std::pow(d[3], 2) * std::pow(d[38], 2) - d[0] * d[1] * d[2] * d[45] + d[2] * std::pow(d[3], 2) * d[45] + d[1] * std::pow(d[4], 2) * d[45] - 2 * d[3] * d[4] * d[5] * d[45] + d[0] * std::pow(d[5], 2) * d[45];
    coeffs[20] = 2 * d[10] * d[11] * d[15] * d[39] - 2 * std::pow(d[14], 2) * d[15] * d[39] - 2 * d[11] * d[12] * d[16] * d[39] + 2 * d[13] * d[14] * d[16] * d[39] - 2 * d[10] * d[13] * d[17] * d[39] + 2 * d[12] * d[14] * d[17] * d[39] - 2 * d[11] * d[12] * d[15] * d[40] + 2 * d[13] * d[14] * d[15] * d[40] + 2 * d[9] * d[11] * d[16] * d[40] - 2 * std::pow(d[13], 2) * d[16] * d[40] + 2 * d[12] * d[13] * d[17] * d[40] - 2 * d[9] * d[14] * d[17] * d[40] - 2 * d[10] * d[13] * d[15] * d[41] + 2 * d[12] * d[14] * d[15] * d[41] + 2 * d[12] * d[13] * d[16] * d[41] - 2 * d[9] * d[14] * d[16] * d[41] + 2 * d[9] * d[10] * d[17] * d[41] - 2 * std::pow(d[12], 2) * d[17] * d[41] - d[9] * d[10] * d[11] * d[46] + d[11] * std::pow(d[12], 2) * d[46] + d[10] * std::pow(d[13], 2) * d[46] - 2 * d[12] * d[13] * d[14] * d[46] + d[9] * std::pow(d[14], 2) * d[46];
    coeffs[21] = 2 * d[11] * d[15] * d[19] * d[39] - 2 * d[13] * d[17] * d[19] * d[39] + 2 * d[10] * d[15] * d[20] * d[39] - 2 * d[12] * d[16] * d[20] * d[39] - 2 * d[11] * d[16] * d[21] * d[39] + 2 * d[14] * d[17] * d[21] * d[39] + 2 * d[14] * d[16] * d[22] * d[39] - 2 * d[10] * d[17] * d[22] * d[39] - 4 * d[14] * d[15] * d[23] * d[39] + 2 * d[13] * d[16] * d[23] * d[39] + 2 * d[12] * d[17] * d[23] * d[39] + 2 * d[10] * d[11] * d[24] * d[39] - 2 * std::pow(d[14], 2) * d[24] * d[39] - 2 * d[11] * d[12] * d[25] * d[39] + 2 * d[13] * d[14] * d[25] * d[39] - 2 * d[10] * d[13] * d[26] * d[39] + 2 * d[12] * d[14] * d[26] * d[39] + 2 * d[11] * d[16] * d[18] * d[40] - 2 * d[14] * d[17] * d[18] * d[40] - 2 * d[12] * d[15] * d[20] * d[40] + 2 * d[9] * d[16] * d[20] * d[40] - 2 * d[11] * d[15] * d[21] * d[40] + 2 * d[13] * d[17] * d[21] * d[40] + 2 * d[14] * d[15] * d[22] * d[40] - 4 * d[13] * d[16] * d[22] * d[40] + 2 * d[12] * d[17] * d[22] * d[40] + 2 * d[13] * d[15] * d[23] * d[40] - 2 * d[9] * d[17] * d[23] * d[40] - 2 * d[11] * d[12] * d[24] * d[40] + 2 * d[13] * d[14] * d[24] * d[40] + 2 * d[9] * d[11] * d[25] * d[40] - 2 * std::pow(d[13], 2) * d[25] * d[40] + 2 * d[12] * d[13] * d[26] * d[40] - 2 * d[9] * d[14] * d[26] * d[40] - 2 * d[14] * d[16] * d[18] * d[41] + 2 * d[10] * d[17] * d[18] * d[41] - 2 * d[13] * d[15] * d[19] * d[41] + 2 * d[9] * d[17] * d[19] * d[41] + 2 * d[14] * d[15] * d[21] * d[41] + 2 * d[13] * d[16] * d[21] * d[41] - 4 * d[12] * d[17] * d[21] * d[41] - 2 * d[10] * d[15] * d[22] * d[41] + 2 * d[12] * d[16] * d[22] * d[41] + 2 * d[12] * d[15] * d[23] * d[41] - 2 * d[9] * d[16] * d[23] * d[41] - 2 * d[10] * d[13] * d[24] * d[41] + 2 * d[12] * d[14] * d[24] * d[41] + 2 * d[12] * d[13] * d[25] * d[41] - 2 * d[9] * d[14] * d[25] * d[41] + 2 * d[9] * d[10] * d[26] * d[41] - 2 * std::pow(d[12], 2) * d[26] * d[41] - d[10] * d[11] * d[18] * d[46] + std::pow(d[14], 2) * d[18] * d[46] - d[9] * d[11] * d[19] * d[46] + std::pow(d[13], 2) * d[19] * d[46] - d[9] * d[10] * d[20] * d[46] + std::pow(d[12], 2) * d[20] * d[46] + 2 * d[11] * d[12] * d[21] * d[46] - 2 * d[13] * d[14] * d[21] * d[46] + 2 * d[10] * d[13] * d[22] * d[46] - 2 * d[12] * d[14] * d[22] * d[46] - 2 * d[12] * d[13] * d[23] * d[46] + 2 * d[9] * d[14] * d[23] * d[46];
    coeffs[22] = 2 * d[15] * d[19] * d[20] * d[39] - 2 * d[16] * d[20] * d[21] * d[39] - 2 * d[17] * d[19] * d[22] * d[39] + 2 * d[17] * d[21] * d[23] * d[39] + 2 * d[16] * d[22] * d[23] * d[39] - 2 * d[15] * std::pow(d[23], 2) * d[39] + 2 * d[11] * d[19] * d[24] * d[39] + 2 * d[10] * d[20] * d[24] * d[39] - 4 * d[14] * d[23] * d[24] * d[39] - 2 * d[12] * d[20] * d[25] * d[39] - 2 * d[11] * d[21] * d[25] * d[39] + 2 * d[14] * d[22] * d[25] * d[39] + 2 * d[13] * d[23] * d[25] * d[39] - 2 * d[13] * d[19] * d[26] * d[39] + 2 * d[14] * d[21] * d[26] * d[39] - 2 * d[10] * d[22] * d[26] * d[39] + 2 * d[12] * d[23] * d[26] * d[39] + 2 * d[16] * d[18] * d[20] * d[40] - 2 * d[15] * d[20] * d[21] * d[40] + 2 * d[17] * d[21] * d[22] * d[40] - 2 * d[16] * std::pow(d[22], 2) * d[40] - 2 * d[17] * d[18] * d[23] * d[40] + 2 * d[15] * d[22] * d[23] * d[40] - 2 * d[12] * d[20] * d[24] * d[40] - 2 * d[11] * d[21] * d[24] * d[40] + 2 * d[14] * d[22] * d[24] * d[40] + 2 * d[13] * d[23] * d[24] * d[40] + 2 * d[11] * d[18] * d[25] * d[40] + 2 * d[9] * d[20] * d[25] * d[40] - 4 * d[13] * d[22] * d[25] * d[40] - 2 * d[14] * d[18] * d[26] * d[40] + 2 * d[13] * d[21] * d[26] * d[40] + 2 * d[12] * d[22] * d[26] * d[40] - 2 * d[9] * d[23] * d[26] * d[40] + 2 * d[17] * d[18] * d[19] * d[41] - 2 * d[17] * std::pow(d[21], 2) * d[41] - 2 * d[15] * d[19] * d[22] * d[41] + 2 * d[16] * d[21] * d[22] * d[41] - 2 * d[16] * d[18] * d[23] * d[41] + 2 * d[15] * d[21] * d[23] * d[41] - 2 * d[13] * d[19] * d[24] * d[41] + 2 * d[14] * d[21] * d[24] * d[41] - 2 * d[10] * d[22] * d[24] * d[41] + 2 * d[12] * d[23] * d[24] * d[41] - 2 * d[14] * d[18] * d[25] * d[41] + 2 * d[13] * d[21] * d[25] * d[41] + 2 * d[12] * d[22] * d[25] * d[41] - 2 * d[9] * d[23] * d[25] * d[41] + 2 * d[10] * d[18] * d[26] * d[41] + 2 * d[9] * d[19] * d[26] * d[41] - 4 * d[12] * d[21] * d[26] * d[41] - d[11] * d[18] * d[19] * d[46] - d[10] * d[18] * d[20] * d[46] - d[9] * d[19] * d[20] * d[46] + 2 * d[12] * d[20] * d[21] * d[46] + d[11] * std::pow(d[21], 2) * d[46] + 2 * d[13] * d[19] * d[22] * d[46] - 2 * d[14] * d[21] * d[22] * d[46] + d[10] * std::pow(d[22], 2) * d[46] + 2 * d[14] * d[18] * d[23] * d[46] - 2 * d[13] * d[21] * d[23] * d[46] - 2 * d[12] * d[22] * d[23] * d[46] + d[9] * std::pow(d[23], 2) * d[46];
    coeffs[23] = 2 * d[19] * d[20] * d[24] * d[39] - 2 * std::pow(d[23], 2) * d[24] * d[39] - 2 * d[20] * d[21] * d[25] * d[39] + 2 * d[22] * d[23] * d[25] * d[39] - 2 * d[19] * d[22] * d[26] * d[39] + 2 * d[21] * d[23] * d[26] * d[39] - 2 * d[20] * d[21] * d[24] * d[40] + 2 * d[22] * d[23] * d[24] * d[40] + 2 * d[18] * d[20] * d[25] * d[40] - 2 * std::pow(d[22], 2) * d[25] * d[40] + 2 * d[21] * d[22] * d[26] * d[40] - 2 * d[18] * d[23] * d[26] * d[40] - 2 * d[19] * d[22] * d[24] * d[41] + 2 * d[21] * d[23] * d[24] * d[41] + 2 * d[21] * d[22] * d[25] * d[41] - 2 * d[18] * d[23] * d[25] * d[41] + 2 * d[18] * d[19] * d[26] * d[41] - 2 * std::pow(d[21], 2) * d[26] * d[41] - d[18] * d[19] * d[20] * d[46] + d[20] * std::pow(d[21], 2) * d[46] + d[19] * std::pow(d[22], 2) * d[46] - 2 * d[21] * d[22] * d[23] * d[46] + d[18] * std::pow(d[23], 2) * d[46];
    coeffs[24] = 2 * d[11] * d[15] * d[28] * d[39] - 2 * d[13] * d[17] * d[28] * d[39] + 2 * d[10] * d[15] * d[29] * d[39] - 2 * d[12] * d[16] * d[29] * d[39] - 2 * d[11] * d[16] * d[30] * d[39] + 2 * d[14] * d[17] * d[30] * d[39] + 2 * d[14] * d[16] * d[31] * d[39] - 2 * d[10] * d[17] * d[31] * d[39] - 4 * d[14] * d[15] * d[32] * d[39] + 2 * d[13] * d[16] * d[32] * d[39] + 2 * d[12] * d[17] * d[32] * d[39] + 2 * d[10] * d[11] * d[33] * d[39] - 2 * std::pow(d[14], 2) * d[33] * d[39] - 2 * d[11] * d[12] * d[34] * d[39] + 2 * d[13] * d[14] * d[34] * d[39] - 2 * d[10] * d[13] * d[35] * d[39] + 2 * d[12] * d[14] * d[35] * d[39] + 2 * d[11] * d[16] * d[27] * d[40] - 2 * d[14] * d[17] * d[27] * d[40] - 2 * d[12] * d[15] * d[29] * d[40] + 2 * d[9] * d[16] * d[29] * d[40] - 2 * d[11] * d[15] * d[30] * d[40] + 2 * d[13] * d[17] * d[30] * d[40] + 2 * d[14] * d[15] * d[31] * d[40] - 4 * d[13] * d[16] * d[31] * d[40] + 2 * d[12] * d[17] * d[31] * d[40] + 2 * d[13] * d[15] * d[32] * d[40] - 2 * d[9] * d[17] * d[32] * d[40] - 2 * d[11] * d[12] * d[33] * d[40] + 2 * d[13] * d[14] * d[33] * d[40] + 2 * d[9] * d[11] * d[34] * d[40] - 2 * std::pow(d[13], 2) * d[34] * d[40] + 2 * d[12] * d[13] * d[35] * d[40] - 2 * d[9] * d[14] * d[35] * d[40] - 2 * d[14] * d[16] * d[27] * d[41] + 2 * d[10] * d[17] * d[27] * d[41] - 2 * d[13] * d[15] * d[28] * d[41] + 2 * d[9] * d[17] * d[28] * d[41] + 2 * d[14] * d[15] * d[30] * d[41] + 2 * d[13] * d[16] * d[30] * d[41] - 4 * d[12] * d[17] * d[30] * d[41] - 2 * d[10] * d[15] * d[31] * d[41] + 2 * d[12] * d[16] * d[31] * d[41] + 2 * d[12] * d[15] * d[32] * d[41] - 2 * d[9] * d[16] * d[32] * d[41] - 2 * d[10] * d[13] * d[33] * d[41] + 2 * d[12] * d[14] * d[33] * d[41] + 2 * d[12] * d[13] * d[34] * d[41] - 2 * d[9] * d[14] * d[34] * d[41] + 2 * d[9] * d[10] * d[35] * d[41] - 2 * std::pow(d[12], 2) * d[35] * d[41] - d[10] * d[11] * d[27] * d[46] + std::pow(d[14], 2) * d[27] * d[46] - d[9] * d[11] * d[28] * d[46] + std::pow(d[13], 2) * d[28] * d[46] - d[9] * d[10] * d[29] * d[46] + std::pow(d[12], 2) * d[29] * d[46] + 2 * d[11] * d[12] * d[30] * d[46] - 2 * d[13] * d[14] * d[30] * d[46] + 2 * d[10] * d[13] * d[31] * d[46] - 2 * d[12] * d[14] * d[31] * d[46] - 2 * d[12] * d[13] * d[32] * d[46] + 2 * d[9] * d[14] * d[32] * d[46];
    coeffs[25] = 2 * d[15] * d[20] * d[28] * d[39] - 2 * d[17] * d[22] * d[28] * d[39] + 2 * d[11] * d[24] * d[28] * d[39] - 2 * d[13] * d[26] * d[28] * d[39] + 2 * d[15] * d[19] * d[29] * d[39] - 2 * d[16] * d[21] * d[29] * d[39] + 2 * d[10] * d[24] * d[29] * d[39] - 2 * d[12] * d[25] * d[29] * d[39] - 2 * d[16] * d[20] * d[30] * d[39] + 2 * d[17] * d[23] * d[30] * d[39] - 2 * d[11] * d[25] * d[30] * d[39] + 2 * d[14] * d[26] * d[30] * d[39] - 2 * d[17] * d[19] * d[31] * d[39] + 2 * d[16] * d[23] * d[31] * d[39] + 2 * d[14] * d[25] * d[31] * d[39] - 2 * d[10] * d[26] * d[31] * d[39] + 2 * d[17] * d[21] * d[32] * d[39] + 2 * d[16] * d[22] * d[32] * d[39] - 4 * d[15] * d[23] * d[32] * d[39] - 4 * d[14] * d[24] * d[32] * d[39] + 2 * d[13] * d[25] * d[32] * d[39] + 2 * d[12] * d[26] * d[32] * d[39] + 2 * d[11] * d[19] * d[33] * d[39] + 2 * d[10] * d[20] * d[33] * d[39] - 4 * d[14] * d[23] * d[33] * d[39] - 2 * d[12] * d[20] * d[34] * d[39] - 2 * d[11] * d[21] * d[34] * d[39] + 2 * d[14] * d[22] * d[34] * d[39] + 2 * d[13] * d[23] * d[34] * d[39] - 2 * d[13] * d[19] * d[35] * d[39] + 2 * d[14] * d[21] * d[35] * d[39] - 2 * d[10] * d[22] * d[35] * d[39] + 2 * d[12] * d[23] * d[35] * d[39] + 2 * d[16] * d[20] * d[27] * d[40] - 2 * d[17] * d[23] * d[27] * d[40] + 2 * d[11] * d[25] * d[27] * d[40] - 2 * d[14] * d[26] * d[27] * d[40] + 2 * d[16] * d[18] * d[29] * d[40] - 2 * d[15] * d[21] * d[29] * d[40] - 2 * d[12] * d[24] * d[29] * d[40] + 2 * d[9] * d[25] * d[29] * d[40] - 2 * d[15] * d[20] * d[30] * d[40] + 2 * d[17] * d[22] * d[30] * d[40] - 2 * d[11] * d[24] * d[30] * d[40] + 2 * d[13] * d[26] * d[30] * d[40] + 2 * d[17] * d[21] * d[31] * d[40] - 4 * d[16] * d[22] * d[31] * d[40] + 2 * d[15] * d[23] * d[31] * d[40] + 2 * d[14] * d[24] * d[31] * d[40] - 4 * d[13] * d[25] * d[31] * d[40] + 2 * d[12] * d[26] * d[31] * d[40] - 2 * d[17] * d[18] * d[32] * d[40] + 2 * d[15] * d[22] * d[32] * d[40] + 2 * d[13] * d[24] * d[32] * d[40] - 2 * d[9] * d[26] * d[32] * d[40] - 2 * d[12] * d[20] * d[33] * d[40] - 2 * d[11] * d[21] * d[33] * d[40] + 2 * d[14] * d[22] * d[33] * d[40] + 2 * d[13] * d[23] * d[33] * d[40] + 2 * d[11] * d[18] * d[34] * d[40] + 2 * d[9] * d[20] * d[34] * d[40] - 4 * d[13] * d[22] * d[34] * d[40] - 2 * d[14] * d[18] * d[35] * d[40] + 2 * d[13] * d[21] * d[35] * d[40] + 2 * d[12] * d[22] * d[35] * d[40] - 2 * d[9] * d[23] * d[35] * d[40] + 2 * d[17] * d[19] * d[27] * d[41] - 2 * d[16] * d[23] * d[27] * d[41] - 2 * d[14] * d[25] * d[27] * d[41] + 2 * d[10] * d[26] * d[27] * d[41] + 2 * d[17] * d[18] * d[28] * d[41] - 2 * d[15] * d[22] * d[28] * d[41] - 2 * d[13] * d[24] * d[28] * d[41] + 2 * d[9] * d[26] * d[28] * d[41] - 4 * d[17] * d[21] * d[30] * d[41] + 2 * d[16] * d[22] * d[30] * d[41] + 2 * d[15] * d[23] * d[30] * d[41] + 2 * d[14] * d[24] * d[30] * d[41] + 2 * d[13] * d[25] * d[30] * d[41] - 4 * d[12] * d[26] * d[30] * d[41] - 2 * d[15] * d[19] * d[31] * d[41] + 2 * d[16] * d[21] * d[31] * d[41] - 2 * d[10] * d[24] * d[31] * d[41] + 2 * d[12] * d[25] * d[31] * d[41] - 2 * d[16] * d[18] * d[32] * d[41] + 2 * d[15] * d[21] * d[32] * d[41] + 2 * d[12] * d[24] * d[32] * d[41] - 2 * d[9] * d[25] * d[32] * d[41] - 2 * d[13] * d[19] * d[33] * d[41] + 2 * d[14] * d[21] * d[33] * d[41] - 2 * d[10] * d[22] * d[33] * d[41] + 2 * d[12] * d[23] * d[33] * d[41] - 2 * d[14] * d[18] * d[34] * d[41] + 2 * d[13] * d[21] * d[34] * d[41] + 2 * d[12] * d[22] * d[34] * d[41] - 2 * d[9] * d[23] * d[34] * d[41] + 2 * d[10] * d[18] * d[35] * d[41] + 2 * d[9] * d[19] * d[35] * d[41] - 4 * d[12] * d[21] * d[35] * d[41] - d[11] * d[19] * d[27] * d[46] - d[10] * d[20] * d[27] * d[46] + 2 * d[14] * d[23] * d[27] * d[46] - d[11] * d[18] * d[28] * d[46] - d[9] * d[20] * d[28] * d[46] + 2 * d[13] * d[22] * d[28] * d[46] - d[10] * d[18] * d[29] * d[46] - d[9] * d[19] * d[29] * d[46] + 2 * d[12] * d[21] * d[29] * d[46] + 2 * d[12] * d[20] * d[30] * d[46] + 2 * d[11] * d[21] * d[30] * d[46] - 2 * d[14] * d[22] * d[30] * d[46] - 2 * d[13] * d[23] * d[30] * d[46] + 2 * d[13] * d[19] * d[31] * d[46] - 2 * d[14] * d[21] * d[31] * d[46] + 2 * d[10] * d[22] * d[31] * d[46] - 2 * d[12] * d[23] * d[31] * d[46] + 2 * d[14] * d[18] * d[32] * d[46] - 2 * d[13] * d[21] * d[32] * d[46] - 2 * d[12] * d[22] * d[32] * d[46] + 2 * d[9] * d[23] * d[32] * d[46];
    coeffs[26] = 2 * d[20] * d[24] * d[28] * d[39] - 2 * d[22] * d[26] * d[28] * d[39] + 2 * d[19] * d[24] * d[29] * d[39] - 2 * d[21] * d[25] * d[29] * d[39] - 2 * d[20] * d[25] * d[30] * d[39] + 2 * d[23] * d[26] * d[30] * d[39] + 2 * d[23] * d[25] * d[31] * d[39] - 2 * d[19] * d[26] * d[31] * d[39] - 4 * d[23] * d[24] * d[32] * d[39] + 2 * d[22] * d[25] * d[32] * d[39] + 2 * d[21] * d[26] * d[32] * d[39] + 2 * d[19] * d[20] * d[33] * d[39] - 2 * std::pow(d[23], 2) * d[33] * d[39] - 2 * d[20] * d[21] * d[34] * d[39] + 2 * d[22] * d[23] * d[34] * d[39] - 2 * d[19] * d[22] * d[35] * d[39] + 2 * d[21] * d[23] * d[35] * d[39] + 2 * d[20] * d[25] * d[27] * d[40] - 2 * d[23] * d[26] * d[27] * d[40] - 2 * d[21] * d[24] * d[29] * d[40] + 2 * d[18] * d[25] * d[29] * d[40] - 2 * d[20] * d[24] * d[30] * d[40] + 2 * d[22] * d[26] * d[30] * d[40] + 2 * d[23] * d[24] * d[31] * d[40] - 4 * d[22] * d[25] * d[31] * d[40] + 2 * d[21] * d[26] * d[31] * d[40] + 2 * d[22] * d[24] * d[32] * d[40] - 2 * d[18] * d[26] * d[32] * d[40] - 2 * d[20] * d[21] * d[33] * d[40] + 2 * d[22] * d[23] * d[33] * d[40] + 2 * d[18] * d[20] * d[34] * d[40] - 2 * std::pow(d[22], 2) * d[34] * d[40] + 2 * d[21] * d[22] * d[35] * d[40] - 2 * d[18] * d[23] * d[35] * d[40] - 2 * d[23] * d[25] * d[27] * d[41] + 2 * d[19] * d[26] * d[27] * d[41] - 2 * d[22] * d[24] * d[28] * d[41] + 2 * d[18] * d[26] * d[28] * d[41] + 2 * d[23] * d[24] * d[30] * d[41] + 2 * d[22] * d[25] * d[30] * d[41] - 4 * d[21] * d[26] * d[30] * d[41] - 2 * d[19] * d[24] * d[31] * d[41] + 2 * d[21] * d[25] * d[31] * d[41] + 2 * d[21] * d[24] * d[32] * d[41] - 2 * d[18] * d[25] * d[32] * d[41] - 2 * d[19] * d[22] * d[33] * d[41] + 2 * d[21] * d[23] * d[33] * d[41] + 2 * d[21] * d[22] * d[34] * d[41] - 2 * d[18] * d[23] * d[34] * d[41] + 2 * d[18] * d[19] * d[35] * d[41] - 2 * std::pow(d[21], 2) * d[35] * d[41] - d[19] * d[20] * d[27] * d[46] + std::pow(d[23], 2) * d[27] * d[46] - d[18] * d[20] * d[28] * d[46] + std::pow(d[22], 2) * d[28] * d[46] - d[18] * d[19] * d[29] * d[46] + std::pow(d[21], 2) * d[29] * d[46] + 2 * d[20] * d[21] * d[30] * d[46] - 2 * d[22] * d[23] * d[30] * d[46] + 2 * d[19] * d[22] * d[31] * d[46] - 2 * d[21] * d[23] * d[31] * d[46] - 2 * d[21] * d[22] * d[32] * d[46] + 2 * d[18] * d[23] * d[32] * d[46];
    coeffs[27] = 2 * d[15] * d[28] * d[29] * d[39] - 2 * d[16] * d[29] * d[30] * d[39] - 2 * d[17] * d[28] * d[31] * d[39] + 2 * d[17] * d[30] * d[32] * d[39] + 2 * d[16] * d[31] * d[32] * d[39] - 2 * d[15] * std::pow(d[32], 2) * d[39] + 2 * d[11] * d[28] * d[33] * d[39] + 2 * d[10] * d[29] * d[33] * d[39] - 4 * d[14] * d[32] * d[33] * d[39] - 2 * d[12] * d[29] * d[34] * d[39] - 2 * d[11] * d[30] * d[34] * d[39] + 2 * d[14] * d[31] * d[34] * d[39] + 2 * d[13] * d[32] * d[34] * d[39] - 2 * d[13] * d[28] * d[35] * d[39] + 2 * d[14] * d[30] * d[35] * d[39] - 2 * d[10] * d[31] * d[35] * d[39] + 2 * d[12] * d[32] * d[35] * d[39] + 2 * d[16] * d[27] * d[29] * d[40] - 2 * d[15] * d[29] * d[30] * d[40] + 2 * d[17] * d[30] * d[31] * d[40] - 2 * d[16] * std::pow(d[31], 2) * d[40] - 2 * d[17] * d[27] * d[32] * d[40] + 2 * d[15] * d[31] * d[32] * d[40] - 2 * d[12] * d[29] * d[33] * d[40] - 2 * d[11] * d[30] * d[33] * d[40] + 2 * d[14] * d[31] * d[33] * d[40] + 2 * d[13] * d[32] * d[33] * d[40] + 2 * d[11] * d[27] * d[34] * d[40] + 2 * d[9] * d[29] * d[34] * d[40] - 4 * d[13] * d[31] * d[34] * d[40] - 2 * d[14] * d[27] * d[35] * d[40] + 2 * d[13] * d[30] * d[35] * d[40] + 2 * d[12] * d[31] * d[35] * d[40] - 2 * d[9] * d[32] * d[35] * d[40] + 2 * d[17] * d[27] * d[28] * d[41] - 2 * d[17] * std::pow(d[30], 2) * d[41] - 2 * d[15] * d[28] * d[31] * d[41] + 2 * d[16] * d[30] * d[31] * d[41] - 2 * d[16] * d[27] * d[32] * d[41] + 2 * d[15] * d[30] * d[32] * d[41] - 2 * d[13] * d[28] * d[33] * d[41] + 2 * d[14] * d[30] * d[33] * d[41] - 2 * d[10] * d[31] * d[33] * d[41] + 2 * d[12] * d[32] * d[33] * d[41] - 2 * d[14] * d[27] * d[34] * d[41] + 2 * d[13] * d[30] * d[34] * d[41] + 2 * d[12] * d[31] * d[34] * d[41] - 2 * d[9] * d[32] * d[34] * d[41] + 2 * d[10] * d[27] * d[35] * d[41] + 2 * d[9] * d[28] * d[35] * d[41] - 4 * d[12] * d[30] * d[35] * d[41] - d[11] * d[27] * d[28] * d[46] - d[10] * d[27] * d[29] * d[46] - d[9] * d[28] * d[29] * d[46] + 2 * d[12] * d[29] * d[30] * d[46] + d[11] * std::pow(d[30], 2) * d[46] + 2 * d[13] * d[28] * d[31] * d[46] - 2 * d[14] * d[30] * d[31] * d[46] + d[10] * std::pow(d[31], 2) * d[46] + 2 * d[14] * d[27] * d[32] * d[46] - 2 * d[13] * d[30] * d[32] * d[46] - 2 * d[12] * d[31] * d[32] * d[46] + d[9] * std::pow(d[32], 2) * d[46];
    coeffs[28] = 2 * d[24] * d[28] * d[29] * d[39] - 2 * d[25] * d[29] * d[30] * d[39] - 2 * d[26] * d[28] * d[31] * d[39] + 2 * d[26] * d[30] * d[32] * d[39] + 2 * d[25] * d[31] * d[32] * d[39] - 2 * d[24] * std::pow(d[32], 2) * d[39] + 2 * d[20] * d[28] * d[33] * d[39] + 2 * d[19] * d[29] * d[33] * d[39] - 4 * d[23] * d[32] * d[33] * d[39] - 2 * d[21] * d[29] * d[34] * d[39] - 2 * d[20] * d[30] * d[34] * d[39] + 2 * d[23] * d[31] * d[34] * d[39] + 2 * d[22] * d[32] * d[34] * d[39] - 2 * d[22] * d[28] * d[35] * d[39] + 2 * d[23] * d[30] * d[35] * d[39] - 2 * d[19] * d[31] * d[35] * d[39] + 2 * d[21] * d[32] * d[35] * d[39] + 2 * d[25] * d[27] * d[29] * d[40] - 2 * d[24] * d[29] * d[30] * d[40] + 2 * d[26] * d[30] * d[31] * d[40] - 2 * d[25] * std::pow(d[31], 2) * d[40] - 2 * d[26] * d[27] * d[32] * d[40] + 2 * d[24] * d[31] * d[32] * d[40] - 2 * d[21] * d[29] * d[33] * d[40] - 2 * d[20] * d[30] * d[33] * d[40] + 2 * d[23] * d[31] * d[33] * d[40] + 2 * d[22] * d[32] * d[33] * d[40] + 2 * d[20] * d[27] * d[34] * d[40] + 2 * d[18] * d[29] * d[34] * d[40] - 4 * d[22] * d[31] * d[34] * d[40] - 2 * d[23] * d[27] * d[35] * d[40] + 2 * d[22] * d[30] * d[35] * d[40] + 2 * d[21] * d[31] * d[35] * d[40] - 2 * d[18] * d[32] * d[35] * d[40] + 2 * d[26] * d[27] * d[28] * d[41] - 2 * d[26] * std::pow(d[30], 2) * d[41] - 2 * d[24] * d[28] * d[31] * d[41] + 2 * d[25] * d[30] * d[31] * d[41] - 2 * d[25] * d[27] * d[32] * d[41] + 2 * d[24] * d[30] * d[32] * d[41] - 2 * d[22] * d[28] * d[33] * d[41] + 2 * d[23] * d[30] * d[33] * d[41] - 2 * d[19] * d[31] * d[33] * d[41] + 2 * d[21] * d[32] * d[33] * d[41] - 2 * d[23] * d[27] * d[34] * d[41] + 2 * d[22] * d[30] * d[34] * d[41] + 2 * d[21] * d[31] * d[34] * d[41] - 2 * d[18] * d[32] * d[34] * d[41] + 2 * d[19] * d[27] * d[35] * d[41] + 2 * d[18] * d[28] * d[35] * d[41] - 4 * d[21] * d[30] * d[35] * d[41] - d[20] * d[27] * d[28] * d[46] - d[19] * d[27] * d[29] * d[46] - d[18] * d[28] * d[29] * d[46] + 2 * d[21] * d[29] * d[30] * d[46] + d[20] * std::pow(d[30], 2) * d[46] + 2 * d[22] * d[28] * d[31] * d[46] - 2 * d[23] * d[30] * d[31] * d[46] + d[19] * std::pow(d[31], 2) * d[46] + 2 * d[23] * d[27] * d[32] * d[46] - 2 * d[22] * d[30] * d[32] * d[46] - 2 * d[21] * d[31] * d[32] * d[46] + d[18] * std::pow(d[32], 2) * d[46];
    coeffs[29] = 2 * d[28] * d[29] * d[33] * d[39] - 2 * std::pow(d[32], 2) * d[33] * d[39] - 2 * d[29] * d[30] * d[34] * d[39] + 2 * d[31] * d[32] * d[34] * d[39] - 2 * d[28] * d[31] * d[35] * d[39] + 2 * d[30] * d[32] * d[35] * d[39] - 2 * d[29] * d[30] * d[33] * d[40] + 2 * d[31] * d[32] * d[33] * d[40] + 2 * d[27] * d[29] * d[34] * d[40] - 2 * std::pow(d[31], 2) * d[34] * d[40] + 2 * d[30] * d[31] * d[35] * d[40] - 2 * d[27] * d[32] * d[35] * d[40] - 2 * d[28] * d[31] * d[33] * d[41] + 2 * d[30] * d[32] * d[33] * d[41] + 2 * d[30] * d[31] * d[34] * d[41] - 2 * d[27] * d[32] * d[34] * d[41] + 2 * d[27] * d[28] * d[35] * d[41] - 2 * std::pow(d[30], 2) * d[35] * d[41] - d[27] * d[28] * d[29] * d[46] + d[29] * std::pow(d[30], 2) * d[46] + d[28] * std::pow(d[31], 2) * d[46] - 2 * d[30] * d[31] * d[32] * d[46] + d[27] * std::pow(d[32], 2) * d[46];
    coeffs[30] = 2 * d[6] * d[10] * d[11] * d[39] - 2 * d[7] * d[11] * d[12] * d[39] - 2 * d[8] * d[10] * d[13] * d[39] + 2 * d[8] * d[12] * d[14] * d[39] + 2 * d[7] * d[13] * d[14] * d[39] - 2 * d[6] * std::pow(d[14], 2) * d[39] + 2 * d[2] * d[10] * d[15] * d[39] + 2 * d[1] * d[11] * d[15] * d[39] - 4 * d[5] * d[14] * d[15] * d[39] - 2 * d[3] * d[11] * d[16] * d[39] - 2 * d[2] * d[12] * d[16] * d[39] + 2 * d[5] * d[13] * d[16] * d[39] + 2 * d[4] * d[14] * d[16] * d[39] - 2 * d[4] * d[10] * d[17] * d[39] + 2 * d[5] * d[12] * d[17] * d[39] - 2 * d[1] * d[13] * d[17] * d[39] + 2 * d[3] * d[14] * d[17] * d[39] + d[10] * d[11] * std::pow(d[39], 2) - std::pow(d[14], 2) * std::pow(d[39], 2) + 2 * d[7] * d[9] * d[11] * d[40] - 2 * d[6] * d[11] * d[12] * d[40] + 2 * d[8] * d[12] * d[13] * d[40] - 2 * d[7] * std::pow(d[13], 2) * d[40] - 2 * d[8] * d[9] * d[14] * d[40] + 2 * d[6] * d[13] * d[14] * d[40] - 2 * d[3] * d[11] * d[15] * d[40] - 2 * d[2] * d[12] * d[15] * d[40] + 2 * d[5] * d[13] * d[15] * d[40] + 2 * d[4] * d[14] * d[15] * d[40] + 2 * d[2] * d[9] * d[16] * d[40] + 2 * d[0] * d[11] * d[16] * d[40] - 4 * d[4] * d[13] * d[16] * d[40] - 2 * d[5] * d[9] * d[17] * d[40] + 2 * d[4] * d[12] * d[17] * d[40] + 2 * d[3] * d[13] * d[17] * d[40] - 2 * d[0] * d[14] * d[17] * d[40] - 2 * d[11] * d[12] * d[39] * d[40] + 2 * d[13] * d[14] * d[39] * d[40] + d[9] * d[11] * std::pow(d[40], 2) - std::pow(d[13], 2) * std::pow(d[40], 2) + 2 * d[8] * d[9] * d[10] * d[41] - 2 * d[8] * std::pow(d[12], 2) * d[41] - 2 * d[6] * d[10] * d[13] * d[41] + 2 * d[7] * d[12] * d[13] * d[41] - 2 * d[7] * d[9] * d[14] * d[41] + 2 * d[6] * d[12] * d[14] * d[41] - 2 * d[4] * d[10] * d[15] * d[41] + 2 * d[5] * d[12] * d[15] * d[41] - 2 * d[1] * d[13] * d[15] * d[41] + 2 * d[3] * d[14] * d[15] * d[41] - 2 * d[5] * d[9] * d[16] * d[41] + 2 * d[4] * d[12] * d[16] * d[41] + 2 * d[3] * d[13] * d[16] * d[41] - 2 * d[0] * d[14] * d[16] * d[41] + 2 * d[1] * d[9] * d[17] * d[41] + 2 * d[0] * d[10] * d[17] * d[41] - 4 * d[3] * d[12] * d[17] * d[41] - 2 * d[10] * d[13] * d[39] * d[41] + 2 * d[12] * d[14] * d[39] * d[41] + 2 * d[12] * d[13] * d[40] * d[41] - 2 * d[9] * d[14] * d[40] * d[41] + d[9] * d[10] * std::pow(d[41], 2) - std::pow(d[12], 2) * std::pow(d[41], 2) - d[2] * d[9] * d[10] * d[46] - d[1] * d[9] * d[11] * d[46] - d[0] * d[10] * d[11] * d[46] + 2 * d[3] * d[11] * d[12] * d[46] + d[2] * std::pow(d[12], 2) * d[46] + 2 * d[4] * d[10] * d[13] * d[46] - 2 * d[5] * d[12] * d[13] * d[46] + d[1] * std::pow(d[13], 2) * d[46] + 2 * d[5] * d[9] * d[14] * d[46] - 2 * d[4] * d[12] * d[14] * d[46] - 2 * d[3] * d[13] * d[14] * d[46] + d[0] * std::pow(d[14], 2) * d[46];
    coeffs[31] = 2 * d[6] * d[11] * d[19] * d[39] - 2 * d[8] * d[13] * d[19] * d[39] + 2 * d[2] * d[15] * d[19] * d[39] - 2 * d[4] * d[17] * d[19] * d[39] + 2 * d[6] * d[10] * d[20] * d[39] - 2 * d[7] * d[12] * d[20] * d[39] + 2 * d[1] * d[15] * d[20] * d[39] - 2 * d[3] * d[16] * d[20] * d[39] - 2 * d[7] * d[11] * d[21] * d[39] + 2 * d[8] * d[14] * d[21] * d[39] - 2 * d[2] * d[16] * d[21] * d[39] + 2 * d[5] * d[17] * d[21] * d[39] - 2 * d[8] * d[10] * d[22] * d[39] + 2 * d[7] * d[14] * d[22] * d[39] + 2 * d[5] * d[16] * d[22] * d[39] - 2 * d[1] * d[17] * d[22] * d[39] + 2 * d[8] * d[12] * d[23] * d[39] + 2 * d[7] * d[13] * d[23] * d[39] - 4 * d[6] * d[14] * d[23] * d[39] - 4 * d[5] * d[15] * d[23] * d[39] + 2 * d[4] * d[16] * d[23] * d[39] + 2 * d[3] * d[17] * d[23] * d[39] + 2 * d[2] * d[10] * d[24] * d[39] + 2 * d[1] * d[11] * d[24] * d[39] - 4 * d[5] * d[14] * d[24] * d[39] - 2 * d[3] * d[11] * d[25] * d[39] - 2 * d[2] * d[12] * d[25] * d[39] + 2 * d[5] * d[13] * d[25] * d[39] + 2 * d[4] * d[14] * d[25] * d[39] - 2 * d[4] * d[10] * d[26] * d[39] + 2 * d[5] * d[12] * d[26] * d[39] - 2 * d[1] * d[13] * d[26] * d[39] + 2 * d[3] * d[14] * d[26] * d[39] + d[11] * d[19] * std::pow(d[39], 2) + d[10] * d[20] * std::pow(d[39], 2) - 2 * d[14] * d[23] * std::pow(d[39], 2) + 2 * d[7] * d[11] * d[18] * d[40] - 2 * d[8] * d[14] * d[18] * d[40] + 2 * d[2] * d[16] * d[18] * d[40] - 2 * d[5] * d[17] * d[18] * d[40] + 2 * d[7] * d[9] * d[20] * d[40] - 2 * d[6] * d[12] * d[20] * d[40] - 2 * d[3] * d[15] * d[20] * d[40] + 2 * d[0] * d[16] * d[20] * d[40] - 2 * d[6] * d[11] * d[21] * d[40] + 2 * d[8] * d[13] * d[21] * d[40] - 2 * d[2] * d[15] * d[21] * d[40] + 2 * d[4] * d[17] * d[21] * d[40] + 2 * d[8] * d[12] * d[22] * d[40] - 4 * d[7] * d[13] * d[22] * d[40] + 2 * d[6] * d[14] * d[22] * d[40] + 2 * d[5] * d[15] * d[22] * d[40] - 4 * d[4] * d[16] * d[22] * d[40] + 2 * d[3] * d[17] * d[22] * d[40] - 2 * d[8] * d[9] * d[23] * d[40] + 2 * d[6] * d[13] * d[23] * d[40] + 2 * d[4] * d[15] * d[23] * d[40] - 2 * d[0] * d[17] * d[23] * d[40] - 2 * d[3] * d[11] * d[24] * d[40] - 2 * d[2] * d[12] * d[24] * d[40] + 2 * d[5] * d[13] * d[24] * d[40] + 2 * d[4] * d[14] * d[24] * d[40] + 2 * d[2] * d[9] * d[25] * d[40] + 2 * d[0] * d[11] * d[25] * d[40] - 4 * d[4] * d[13] * d[25] * d[40] - 2 * d[5] * d[9] * d[26] * d[40] + 2 * d[4] * d[12] * d[26] * d[40] + 2 * d[3] * d[13] * d[26] * d[40] - 2 * d[0] * d[14] * d[26] * d[40] - 2 * d[12] * d[20] * d[39] * d[40] - 2 * d[11] * d[21] * d[39] * d[40] + 2 * d[14] * d[22] * d[39] * d[40] + 2 * d[13] * d[23] * d[39] * d[40] + d[11] * d[18] * std::pow(d[40], 2) + d[9] * d[20] * std::pow(d[40], 2) - 2 * d[13] * d[22] * std::pow(d[40], 2) + 2 * d[8] * d[10] * d[18] * d[41] - 2 * d[7] * d[14] * d[18] * d[41] - 2 * d[5] * d[16] * d[18] * d[41] + 2 * d[1] * d[17] * d[18] * d[41] + 2 * d[8] * d[9] * d[19] * d[41] - 2 * d[6] * d[13] * d[19] * d[41] - 2 * d[4] * d[15] * d[19] * d[41] + 2 * d[0] * d[17] * d[19] * d[41] - 4 * d[8] * d[12] * d[21] * d[41] + 2 * d[7] * d[13] * d[21] * d[41] + 2 * d[6] * d[14] * d[21] * d[41] + 2 * d[5] * d[15] * d[21] * d[41] + 2 * d[4] * d[16] * d[21] * d[41] - 4 * d[3] * d[17] * d[21] * d[41] - 2 * d[6] * d[10] * d[22] * d[41] + 2 * d[7] * d[12] * d[22] * d[41] - 2 * d[1] * d[15] * d[22] * d[41] + 2 * d[3] * d[16] * d[22] * d[41] - 2 * d[7] * d[9] * d[23] * d[41] + 2 * d[6] * d[12] * d[23] * d[41] + 2 * d[3] * d[15] * d[23] * d[41] - 2 * d[0] * d[16] * d[23] * d[41] - 2 * d[4] * d[10] * d[24] * d[41] + 2 * d[5] * d[12] * d[24] * d[41] - 2 * d[1] * d[13] * d[24] * d[41] + 2 * d[3] * d[14] * d[24] * d[41] - 2 * d[5] * d[9] * d[25] * d[41] + 2 * d[4] * d[12] * d[25] * d[41] + 2 * d[3] * d[13] * d[25] * d[41] - 2 * d[0] * d[14] * d[25] * d[41] + 2 * d[1] * d[9] * d[26] * d[41] + 2 * d[0] * d[10] * d[26] * d[41] - 4 * d[3] * d[12] * d[26] * d[41] - 2 * d[13] * d[19] * d[39] * d[41] + 2 * d[14] * d[21] * d[39] * d[41] - 2 * d[10] * d[22] * d[39] * d[41] + 2 * d[12] * d[23] * d[39] * d[41] - 2 * d[14] * d[18] * d[40] * d[41] + 2 * d[13] * d[21] * d[40] * d[41] + 2 * d[12] * d[22] * d[40] * d[41] - 2 * d[9] * d[23] * d[40] * d[41] + d[10] * d[18] * std::pow(d[41], 2) + d[9] * d[19] * std::pow(d[41], 2) - 2 * d[12] * d[21] * std::pow(d[41], 2) - d[2] * d[10] * d[18] * d[46] - d[1] * d[11] * d[18] * d[46] + 2 * d[5] * d[14] * d[18] * d[46] - d[2] * d[9] * d[19] * d[46] - d[0] * d[11] * d[19] * d[46] + 2 * d[4] * d[13] * d[19] * d[46] - d[1] * d[9] * d[20] * d[46] - d[0] * d[10] * d[20] * d[46] + 2 * d[3] * d[12] * d[20] * d[46] + 2 * d[3] * d[11] * d[21] * d[46] + 2 * d[2] * d[12] * d[21] * d[46] - 2 * d[5] * d[13] * d[21] * d[46] - 2 * d[4] * d[14] * d[21] * d[46] + 2 * d[4] * d[10] * d[22] * d[46] - 2 * d[5] * d[12] * d[22] * d[46] + 2 * d[1] * d[13] * d[22] * d[46] - 2 * d[3] * d[14] * d[22] * d[46] + 2 * d[5] * d[9] * d[23] * d[46] - 2 * d[4] * d[12] * d[23] * d[46] - 2 * d[3] * d[13] * d[23] * d[46] + 2 * d[0] * d[14] * d[23] * d[46];
    coeffs[32] = 2 * d[6] * d[19] * d[20] * d[39] - 2 * d[7] * d[20] * d[21] * d[39] - 2 * d[8] * d[19] * d[22] * d[39] + 2 * d[8] * d[21] * d[23] * d[39] + 2 * d[7] * d[22] * d[23] * d[39] - 2 * d[6] * std::pow(d[23], 2) * d[39] + 2 * d[2] * d[19] * d[24] * d[39] + 2 * d[1] * d[20] * d[24] * d[39] - 4 * d[5] * d[23] * d[24] * d[39] - 2 * d[3] * d[20] * d[25] * d[39] - 2 * d[2] * d[21] * d[25] * d[39] + 2 * d[5] * d[22] * d[25] * d[39] + 2 * d[4] * d[23] * d[25] * d[39] - 2 * d[4] * d[19] * d[26] * d[39] + 2 * d[5] * d[21] * d[26] * d[39] - 2 * d[1] * d[22] * d[26] * d[39] + 2 * d[3] * d[23] * d[26] * d[39] + d[19] * d[20] * std::pow(d[39], 2) - std::pow(d[23], 2) * std::pow(d[39], 2) + 2 * d[7] * d[18] * d[20] * d[40] - 2 * d[6] * d[20] * d[21] * d[40] + 2 * d[8] * d[21] * d[22] * d[40] - 2 * d[7] * std::pow(d[22], 2) * d[40] - 2 * d[8] * d[18] * d[23] * d[40] + 2 * d[6] * d[22] * d[23] * d[40] - 2 * d[3] * d[20] * d[24] * d[40] - 2 * d[2] * d[21] * d[24] * d[40] + 2 * d[5] * d[22] * d[24] * d[40] + 2 * d[4] * d[23] * d[24] * d[40] + 2 * d[2] * d[18] * d[25] * d[40] + 2 * d[0] * d[20] * d[25] * d[40] - 4 * d[4] * d[22] * d[25] * d[40] - 2 * d[5] * d[18] * d[26] * d[40] + 2 * d[4] * d[21] * d[26] * d[40] + 2 * d[3] * d[22] * d[26] * d[40] - 2 * d[0] * d[23] * d[26] * d[40] - 2 * d[20] * d[21] * d[39] * d[40] + 2 * d[22] * d[23] * d[39] * d[40] + d[18] * d[20] * std::pow(d[40], 2) - std::pow(d[22], 2) * std::pow(d[40], 2) + 2 * d[8] * d[18] * d[19] * d[41] - 2 * d[8] * std::pow(d[21], 2) * d[41] - 2 * d[6] * d[19] * d[22] * d[41] + 2 * d[7] * d[21] * d[22] * d[41] - 2 * d[7] * d[18] * d[23] * d[41] + 2 * d[6] * d[21] * d[23] * d[41] - 2 * d[4] * d[19] * d[24] * d[41] + 2 * d[5] * d[21] * d[24] * d[41] - 2 * d[1] * d[22] * d[24] * d[41] + 2 * d[3] * d[23] * d[24] * d[41] - 2 * d[5] * d[18] * d[25] * d[41] + 2 * d[4] * d[21] * d[25] * d[41] + 2 * d[3] * d[22] * d[25] * d[41] - 2 * d[0] * d[23] * d[25] * d[41] + 2 * d[1] * d[18] * d[26] * d[41] + 2 * d[0] * d[19] * d[26] * d[41] - 4 * d[3] * d[21] * d[26] * d[41] - 2 * d[19] * d[22] * d[39] * d[41] + 2 * d[21] * d[23] * d[39] * d[41] + 2 * d[21] * d[22] * d[40] * d[41] - 2 * d[18] * d[23] * d[40] * d[41] + d[18] * d[19] * std::pow(d[41], 2) - std::pow(d[21], 2) * std::pow(d[41], 2) - d[2] * d[18] * d[19] * d[46] - d[1] * d[18] * d[20] * d[46] - d[0] * d[19] * d[20] * d[46] + 2 * d[3] * d[20] * d[21] * d[46] + d[2] * std::pow(d[21], 2) * d[46] + 2 * d[4] * d[19] * d[22] * d[46] - 2 * d[5] * d[21] * d[22] * d[46] + d[1] * std::pow(d[22], 2) * d[46] + 2 * d[5] * d[18] * d[23] * d[46] - 2 * d[4] * d[21] * d[23] * d[46] - 2 * d[3] * d[22] * d[23] * d[46] + d[0] * std::pow(d[23], 2) * d[46];
    coeffs[33] = 2 * d[6] * d[11] * d[28] * d[39] - 2 * d[8] * d[13] * d[28] * d[39] + 2 * d[2] * d[15] * d[28] * d[39] - 2 * d[4] * d[17] * d[28] * d[39] + 2 * d[6] * d[10] * d[29] * d[39] - 2 * d[7] * d[12] * d[29] * d[39] + 2 * d[1] * d[15] * d[29] * d[39] - 2 * d[3] * d[16] * d[29] * d[39] - 2 * d[7] * d[11] * d[30] * d[39] + 2 * d[8] * d[14] * d[30] * d[39] - 2 * d[2] * d[16] * d[30] * d[39] + 2 * d[5] * d[17] * d[30] * d[39] - 2 * d[8] * d[10] * d[31] * d[39] + 2 * d[7] * d[14] * d[31] * d[39] + 2 * d[5] * d[16] * d[31] * d[39] - 2 * d[1] * d[17] * d[31] * d[39] + 2 * d[8] * d[12] * d[32] * d[39] + 2 * d[7] * d[13] * d[32] * d[39] - 4 * d[6] * d[14] * d[32] * d[39] - 4 * d[5] * d[15] * d[32] * d[39] + 2 * d[4] * d[16] * d[32] * d[39] + 2 * d[3] * d[17] * d[32] * d[39] + 2 * d[2] * d[10] * d[33] * d[39] + 2 * d[1] * d[11] * d[33] * d[39] - 4 * d[5] * d[14] * d[33] * d[39] - 2 * d[3] * d[11] * d[34] * d[39] - 2 * d[2] * d[12] * d[34] * d[39] + 2 * d[5] * d[13] * d[34] * d[39] + 2 * d[4] * d[14] * d[34] * d[39] - 2 * d[4] * d[10] * d[35] * d[39] + 2 * d[5] * d[12] * d[35] * d[39] - 2 * d[1] * d[13] * d[35] * d[39] + 2 * d[3] * d[14] * d[35] * d[39] + d[11] * d[28] * std::pow(d[39], 2) + d[10] * d[29] * std::pow(d[39], 2) - 2 * d[14] * d[32] * std::pow(d[39], 2) + 2 * d[7] * d[11] * d[27] * d[40] - 2 * d[8] * d[14] * d[27] * d[40] + 2 * d[2] * d[16] * d[27] * d[40] - 2 * d[5] * d[17] * d[27] * d[40] + 2 * d[7] * d[9] * d[29] * d[40] - 2 * d[6] * d[12] * d[29] * d[40] - 2 * d[3] * d[15] * d[29] * d[40] + 2 * d[0] * d[16] * d[29] * d[40] - 2 * d[6] * d[11] * d[30] * d[40] + 2 * d[8] * d[13] * d[30] * d[40] - 2 * d[2] * d[15] * d[30] * d[40] + 2 * d[4] * d[17] * d[30] * d[40] + 2 * d[8] * d[12] * d[31] * d[40] - 4 * d[7] * d[13] * d[31] * d[40] + 2 * d[6] * d[14] * d[31] * d[40] + 2 * d[5] * d[15] * d[31] * d[40] - 4 * d[4] * d[16] * d[31] * d[40] + 2 * d[3] * d[17] * d[31] * d[40] - 2 * d[8] * d[9] * d[32] * d[40] + 2 * d[6] * d[13] * d[32] * d[40] + 2 * d[4] * d[15] * d[32] * d[40] - 2 * d[0] * d[17] * d[32] * d[40] - 2 * d[3] * d[11] * d[33] * d[40] - 2 * d[2] * d[12] * d[33] * d[40] + 2 * d[5] * d[13] * d[33] * d[40] + 2 * d[4] * d[14] * d[33] * d[40] + 2 * d[2] * d[9] * d[34] * d[40] + 2 * d[0] * d[11] * d[34] * d[40] - 4 * d[4] * d[13] * d[34] * d[40] - 2 * d[5] * d[9] * d[35] * d[40] + 2 * d[4] * d[12] * d[35] * d[40] + 2 * d[3] * d[13] * d[35] * d[40] - 2 * d[0] * d[14] * d[35] * d[40] - 2 * d[12] * d[29] * d[39] * d[40] - 2 * d[11] * d[30] * d[39] * d[40] + 2 * d[14] * d[31] * d[39] * d[40] + 2 * d[13] * d[32] * d[39] * d[40] + d[11] * d[27] * std::pow(d[40], 2) + d[9] * d[29] * std::pow(d[40], 2) - 2 * d[13] * d[31] * std::pow(d[40], 2) + 2 * d[8] * d[10] * d[27] * d[41] - 2 * d[7] * d[14] * d[27] * d[41] - 2 * d[5] * d[16] * d[27] * d[41] + 2 * d[1] * d[17] * d[27] * d[41] + 2 * d[8] * d[9] * d[28] * d[41] - 2 * d[6] * d[13] * d[28] * d[41] - 2 * d[4] * d[15] * d[28] * d[41] + 2 * d[0] * d[17] * d[28] * d[41] - 4 * d[8] * d[12] * d[30] * d[41] + 2 * d[7] * d[13] * d[30] * d[41] + 2 * d[6] * d[14] * d[30] * d[41] + 2 * d[5] * d[15] * d[30] * d[41] + 2 * d[4] * d[16] * d[30] * d[41] - 4 * d[3] * d[17] * d[30] * d[41] - 2 * d[6] * d[10] * d[31] * d[41] + 2 * d[7] * d[12] * d[31] * d[41] - 2 * d[1] * d[15] * d[31] * d[41] + 2 * d[3] * d[16] * d[31] * d[41] - 2 * d[7] * d[9] * d[32] * d[41] + 2 * d[6] * d[12] * d[32] * d[41] + 2 * d[3] * d[15] * d[32] * d[41] - 2 * d[0] * d[16] * d[32] * d[41] - 2 * d[4] * d[10] * d[33] * d[41] + 2 * d[5] * d[12] * d[33] * d[41] - 2 * d[1] * d[13] * d[33] * d[41] + 2 * d[3] * d[14] * d[33] * d[41] - 2 * d[5] * d[9] * d[34] * d[41] + 2 * d[4] * d[12] * d[34] * d[41] + 2 * d[3] * d[13] * d[34] * d[41] - 2 * d[0] * d[14] * d[34] * d[41] + 2 * d[1] * d[9] * d[35] * d[41] + 2 * d[0] * d[10] * d[35] * d[41] - 4 * d[3] * d[12] * d[35] * d[41] - 2 * d[13] * d[28] * d[39] * d[41] + 2 * d[14] * d[30] * d[39] * d[41] - 2 * d[10] * d[31] * d[39] * d[41] + 2 * d[12] * d[32] * d[39] * d[41] - 2 * d[14] * d[27] * d[40] * d[41] + 2 * d[13] * d[30] * d[40] * d[41] + 2 * d[12] * d[31] * d[40] * d[41] - 2 * d[9] * d[32] * d[40] * d[41] + d[10] * d[27] * std::pow(d[41], 2) + d[9] * d[28] * std::pow(d[41], 2) - 2 * d[12] * d[30] * std::pow(d[41], 2) - d[2] * d[10] * d[27] * d[46] - d[1] * d[11] * d[27] * d[46] + 2 * d[5] * d[14] * d[27] * d[46] - d[2] * d[9] * d[28] * d[46] - d[0] * d[11] * d[28] * d[46] + 2 * d[4] * d[13] * d[28] * d[46] - d[1] * d[9] * d[29] * d[46] - d[0] * d[10] * d[29] * d[46] + 2 * d[3] * d[12] * d[29] * d[46] + 2 * d[3] * d[11] * d[30] * d[46] + 2 * d[2] * d[12] * d[30] * d[46] - 2 * d[5] * d[13] * d[30] * d[46] - 2 * d[4] * d[14] * d[30] * d[46] + 2 * d[4] * d[10] * d[31] * d[46] - 2 * d[5] * d[12] * d[31] * d[46] + 2 * d[1] * d[13] * d[31] * d[46] - 2 * d[3] * d[14] * d[31] * d[46] + 2 * d[5] * d[9] * d[32] * d[46] - 2 * d[4] * d[12] * d[32] * d[46] - 2 * d[3] * d[13] * d[32] * d[46] + 2 * d[0] * d[14] * d[32] * d[46];
    coeffs[34] = 2 * d[6] * d[20] * d[28] * d[39] - 2 * d[8] * d[22] * d[28] * d[39] + 2 * d[2] * d[24] * d[28] * d[39] - 2 * d[4] * d[26] * d[28] * d[39] + 2 * d[6] * d[19] * d[29] * d[39] - 2 * d[7] * d[21] * d[29] * d[39] + 2 * d[1] * d[24] * d[29] * d[39] - 2 * d[3] * d[25] * d[29] * d[39] - 2 * d[7] * d[20] * d[30] * d[39] + 2 * d[8] * d[23] * d[30] * d[39] - 2 * d[2] * d[25] * d[30] * d[39] + 2 * d[5] * d[26] * d[30] * d[39] - 2 * d[8] * d[19] * d[31] * d[39] + 2 * d[7] * d[23] * d[31] * d[39] + 2 * d[5] * d[25] * d[31] * d[39] - 2 * d[1] * d[26] * d[31] * d[39] + 2 * d[8] * d[21] * d[32] * d[39] + 2 * d[7] * d[22] * d[32] * d[39] - 4 * d[6] * d[23] * d[32] * d[39] - 4 * d[5] * d[24] * d[32] * d[39] + 2 * d[4] * d[25] * d[32] * d[39] + 2 * d[3] * d[26] * d[32] * d[39] + 2 * d[2] * d[19] * d[33] * d[39] + 2 * d[1] * d[20] * d[33] * d[39] - 4 * d[5] * d[23] * d[33] * d[39] - 2 * d[3] * d[20] * d[34] * d[39] - 2 * d[2] * d[21] * d[34] * d[39] + 2 * d[5] * d[22] * d[34] * d[39] + 2 * d[4] * d[23] * d[34] * d[39] - 2 * d[4] * d[19] * d[35] * d[39] + 2 * d[5] * d[21] * d[35] * d[39] - 2 * d[1] * d[22] * d[35] * d[39] + 2 * d[3] * d[23] * d[35] * d[39] + d[20] * d[28] * std::pow(d[39], 2) + d[19] * d[29] * std::pow(d[39], 2) - 2 * d[23] * d[32] * std::pow(d[39], 2) + 2 * d[7] * d[20] * d[27] * d[40] - 2 * d[8] * d[23] * d[27] * d[40] + 2 * d[2] * d[25] * d[27] * d[40] - 2 * d[5] * d[26] * d[27] * d[40] + 2 * d[7] * d[18] * d[29] * d[40] - 2 * d[6] * d[21] * d[29] * d[40] - 2 * d[3] * d[24] * d[29] * d[40] + 2 * d[0] * d[25] * d[29] * d[40] - 2 * d[6] * d[20] * d[30] * d[40] + 2 * d[8] * d[22] * d[30] * d[40] - 2 * d[2] * d[24] * d[30] * d[40] + 2 * d[4] * d[26] * d[30] * d[40] + 2 * d[8] * d[21] * d[31] * d[40] - 4 * d[7] * d[22] * d[31] * d[40] + 2 * d[6] * d[23] * d[31] * d[40] + 2 * d[5] * d[24] * d[31] * d[40] - 4 * d[4] * d[25] * d[31] * d[40] + 2 * d[3] * d[26] * d[31] * d[40] - 2 * d[8] * d[18] * d[32] * d[40] + 2 * d[6] * d[22] * d[32] * d[40] + 2 * d[4] * d[24] * d[32] * d[40] - 2 * d[0] * d[26] * d[32] * d[40] - 2 * d[3] * d[20] * d[33] * d[40] - 2 * d[2] * d[21] * d[33] * d[40] + 2 * d[5] * d[22] * d[33] * d[40] + 2 * d[4] * d[23] * d[33] * d[40] + 2 * d[2] * d[18] * d[34] * d[40] + 2 * d[0] * d[20] * d[34] * d[40] - 4 * d[4] * d[22] * d[34] * d[40] - 2 * d[5] * d[18] * d[35] * d[40] + 2 * d[4] * d[21] * d[35] * d[40] + 2 * d[3] * d[22] * d[35] * d[40] - 2 * d[0] * d[23] * d[35] * d[40] - 2 * d[21] * d[29] * d[39] * d[40] - 2 * d[20] * d[30] * d[39] * d[40] + 2 * d[23] * d[31] * d[39] * d[40] + 2 * d[22] * d[32] * d[39] * d[40] + d[20] * d[27] * std::pow(d[40], 2) + d[18] * d[29] * std::pow(d[40], 2) - 2 * d[22] * d[31] * std::pow(d[40], 2) + 2 * d[8] * d[19] * d[27] * d[41] - 2 * d[7] * d[23] * d[27] * d[41] - 2 * d[5] * d[25] * d[27] * d[41] + 2 * d[1] * d[26] * d[27] * d[41] + 2 * d[8] * d[18] * d[28] * d[41] - 2 * d[6] * d[22] * d[28] * d[41] - 2 * d[4] * d[24] * d[28] * d[41] + 2 * d[0] * d[26] * d[28] * d[41] - 4 * d[8] * d[21] * d[30] * d[41] + 2 * d[7] * d[22] * d[30] * d[41] + 2 * d[6] * d[23] * d[30] * d[41] + 2 * d[5] * d[24] * d[30] * d[41] + 2 * d[4] * d[25] * d[30] * d[41] - 4 * d[3] * d[26] * d[30] * d[41] - 2 * d[6] * d[19] * d[31] * d[41] + 2 * d[7] * d[21] * d[31] * d[41] - 2 * d[1] * d[24] * d[31] * d[41] + 2 * d[3] * d[25] * d[31] * d[41] - 2 * d[7] * d[18] * d[32] * d[41] + 2 * d[6] * d[21] * d[32] * d[41] + 2 * d[3] * d[24] * d[32] * d[41] - 2 * d[0] * d[25] * d[32] * d[41] - 2 * d[4] * d[19] * d[33] * d[41] + 2 * d[5] * d[21] * d[33] * d[41] - 2 * d[1] * d[22] * d[33] * d[41] + 2 * d[3] * d[23] * d[33] * d[41] - 2 * d[5] * d[18] * d[34] * d[41] + 2 * d[4] * d[21] * d[34] * d[41] + 2 * d[3] * d[22] * d[34] * d[41] - 2 * d[0] * d[23] * d[34] * d[41] + 2 * d[1] * d[18] * d[35] * d[41] + 2 * d[0] * d[19] * d[35] * d[41] - 4 * d[3] * d[21] * d[35] * d[41] - 2 * d[22] * d[28] * d[39] * d[41] + 2 * d[23] * d[30] * d[39] * d[41] - 2 * d[19] * d[31] * d[39] * d[41] + 2 * d[21] * d[32] * d[39] * d[41] - 2 * d[23] * d[27] * d[40] * d[41] + 2 * d[22] * d[30] * d[40] * d[41] + 2 * d[21] * d[31] * d[40] * d[41] - 2 * d[18] * d[32] * d[40] * d[41] + d[19] * d[27] * std::pow(d[41], 2) + d[18] * d[28] * std::pow(d[41], 2) - 2 * d[21] * d[30] * std::pow(d[41], 2) - d[2] * d[19] * d[27] * d[46] - d[1] * d[20] * d[27] * d[46] + 2 * d[5] * d[23] * d[27] * d[46] - d[2] * d[18] * d[28] * d[46] - d[0] * d[20] * d[28] * d[46] + 2 * d[4] * d[22] * d[28] * d[46] - d[1] * d[18] * d[29] * d[46] - d[0] * d[19] * d[29] * d[46] + 2 * d[3] * d[21] * d[29] * d[46] + 2 * d[3] * d[20] * d[30] * d[46] + 2 * d[2] * d[21] * d[30] * d[46] - 2 * d[5] * d[22] * d[30] * d[46] - 2 * d[4] * d[23] * d[30] * d[46] + 2 * d[4] * d[19] * d[31] * d[46] - 2 * d[5] * d[21] * d[31] * d[46] + 2 * d[1] * d[22] * d[31] * d[46] - 2 * d[3] * d[23] * d[31] * d[46] + 2 * d[5] * d[18] * d[32] * d[46] - 2 * d[4] * d[21] * d[32] * d[46] - 2 * d[3] * d[22] * d[32] * d[46] + 2 * d[0] * d[23] * d[32] * d[46];
    coeffs[35] = 2 * d[6] * d[28] * d[29] * d[39] - 2 * d[7] * d[29] * d[30] * d[39] - 2 * d[8] * d[28] * d[31] * d[39] + 2 * d[8] * d[30] * d[32] * d[39] + 2 * d[7] * d[31] * d[32] * d[39] - 2 * d[6] * std::pow(d[32], 2) * d[39] + 2 * d[2] * d[28] * d[33] * d[39] + 2 * d[1] * d[29] * d[33] * d[39] - 4 * d[5] * d[32] * d[33] * d[39] - 2 * d[3] * d[29] * d[34] * d[39] - 2 * d[2] * d[30] * d[34] * d[39] + 2 * d[5] * d[31] * d[34] * d[39] + 2 * d[4] * d[32] * d[34] * d[39] - 2 * d[4] * d[28] * d[35] * d[39] + 2 * d[5] * d[30] * d[35] * d[39] - 2 * d[1] * d[31] * d[35] * d[39] + 2 * d[3] * d[32] * d[35] * d[39] + d[28] * d[29] * std::pow(d[39], 2) - std::pow(d[32], 2) * std::pow(d[39], 2) + 2 * d[7] * d[27] * d[29] * d[40] - 2 * d[6] * d[29] * d[30] * d[40] + 2 * d[8] * d[30] * d[31] * d[40] - 2 * d[7] * std::pow(d[31], 2) * d[40] - 2 * d[8] * d[27] * d[32] * d[40] + 2 * d[6] * d[31] * d[32] * d[40] - 2 * d[3] * d[29] * d[33] * d[40] - 2 * d[2] * d[30] * d[33] * d[40] + 2 * d[5] * d[31] * d[33] * d[40] + 2 * d[4] * d[32] * d[33] * d[40] + 2 * d[2] * d[27] * d[34] * d[40] + 2 * d[0] * d[29] * d[34] * d[40] - 4 * d[4] * d[31] * d[34] * d[40] - 2 * d[5] * d[27] * d[35] * d[40] + 2 * d[4] * d[30] * d[35] * d[40] + 2 * d[3] * d[31] * d[35] * d[40] - 2 * d[0] * d[32] * d[35] * d[40] - 2 * d[29] * d[30] * d[39] * d[40] + 2 * d[31] * d[32] * d[39] * d[40] + d[27] * d[29] * std::pow(d[40], 2) - std::pow(d[31], 2) * std::pow(d[40], 2) + 2 * d[8] * d[27] * d[28] * d[41] - 2 * d[8] * std::pow(d[30], 2) * d[41] - 2 * d[6] * d[28] * d[31] * d[41] + 2 * d[7] * d[30] * d[31] * d[41] - 2 * d[7] * d[27] * d[32] * d[41] + 2 * d[6] * d[30] * d[32] * d[41] - 2 * d[4] * d[28] * d[33] * d[41] + 2 * d[5] * d[30] * d[33] * d[41] - 2 * d[1] * d[31] * d[33] * d[41] + 2 * d[3] * d[32] * d[33] * d[41] - 2 * d[5] * d[27] * d[34] * d[41] + 2 * d[4] * d[30] * d[34] * d[41] + 2 * d[3] * d[31] * d[34] * d[41] - 2 * d[0] * d[32] * d[34] * d[41] + 2 * d[1] * d[27] * d[35] * d[41] + 2 * d[0] * d[28] * d[35] * d[41] - 4 * d[3] * d[30] * d[35] * d[41] - 2 * d[28] * d[31] * d[39] * d[41] + 2 * d[30] * d[32] * d[39] * d[41] + 2 * d[30] * d[31] * d[40] * d[41] - 2 * d[27] * d[32] * d[40] * d[41] + d[27] * d[28] * std::pow(d[41], 2) - std::pow(d[30], 2) * std::pow(d[41], 2) - d[2] * d[27] * d[28] * d[46] - d[1] * d[27] * d[29] * d[46] - d[0] * d[28] * d[29] * d[46] + 2 * d[3] * d[29] * d[30] * d[46] + d[2] * std::pow(d[30], 2) * d[46] + 2 * d[4] * d[28] * d[31] * d[46] - 2 * d[5] * d[30] * d[31] * d[46] + d[1] * std::pow(d[31], 2) * d[46] + 2 * d[5] * d[27] * d[32] * d[46] - 2 * d[4] * d[30] * d[32] * d[46] - 2 * d[3] * d[31] * d[32] * d[46] + d[0] * std::pow(d[32], 2) * d[46];
    coeffs[36] = 2 * d[2] * d[6] * d[10] * d[39] - 2 * d[4] * d[8] * d[10] * d[39] + 2 * d[1] * d[6] * d[11] * d[39] - 2 * d[3] * d[7] * d[11] * d[39] - 2 * d[2] * d[7] * d[12] * d[39] + 2 * d[5] * d[8] * d[12] * d[39] + 2 * d[5] * d[7] * d[13] * d[39] - 2 * d[1] * d[8] * d[13] * d[39] - 4 * d[5] * d[6] * d[14] * d[39] + 2 * d[4] * d[7] * d[14] * d[39] + 2 * d[3] * d[8] * d[14] * d[39] + 2 * d[1] * d[2] * d[15] * d[39] - 2 * std::pow(d[5], 2) * d[15] * d[39] - 2 * d[2] * d[3] * d[16] * d[39] + 2 * d[4] * d[5] * d[16] * d[39] - 2 * d[1] * d[4] * d[17] * d[39] + 2 * d[3] * d[5] * d[17] * d[39] + d[2] * d[10] * std::pow(d[39], 2) + d[1] * d[11] * std::pow(d[39], 2) - 2 * d[5] * d[14] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[9] * d[40] - 2 * d[5] * d[8] * d[9] * d[40] - 2 * d[3] * d[6] * d[11] * d[40] + 2 * d[0] * d[7] * d[11] * d[40] - 2 * d[2] * d[6] * d[12] * d[40] + 2 * d[4] * d[8] * d[12] * d[40] + 2 * d[5] * d[6] * d[13] * d[40] - 4 * d[4] * d[7] * d[13] * d[40] + 2 * d[3] * d[8] * d[13] * d[40] + 2 * d[4] * d[6] * d[14] * d[40] - 2 * d[0] * d[8] * d[14] * d[40] - 2 * d[2] * d[3] * d[15] * d[40] + 2 * d[4] * d[5] * d[15] * d[40] + 2 * d[0] * d[2] * d[16] * d[40] - 2 * std::pow(d[4], 2) * d[16] * d[40] + 2 * d[3] * d[4] * d[17] * d[40] - 2 * d[0] * d[5] * d[17] * d[40] - 2 * d[3] * d[11] * d[39] * d[40] - 2 * d[2] * d[12] * d[39] * d[40] + 2 * d[5] * d[13] * d[39] * d[40] + 2 * d[4] * d[14] * d[39] * d[40] + d[2] * d[9] * std::pow(d[40], 2) + d[0] * d[11] * std::pow(d[40], 2) - 2 * d[4] * d[13] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[9] * d[41] + 2 * d[1] * d[8] * d[9] * d[41] - 2 * d[4] * d[6] * d[10] * d[41] + 2 * d[0] * d[8] * d[10] * d[41] + 2 * d[5] * d[6] * d[12] * d[41] + 2 * d[4] * d[7] * d[12] * d[41] - 4 * d[3] * d[8] * d[12] * d[41] - 2 * d[1] * d[6] * d[13] * d[41] + 2 * d[3] * d[7] * d[13] * d[41] + 2 * d[3] * d[6] * d[14] * d[41] - 2 * d[0] * d[7] * d[14] * d[41] - 2 * d[1] * d[4] * d[15] * d[41] + 2 * d[3] * d[5] * d[15] * d[41] + 2 * d[3] * d[4] * d[16] * d[41] - 2 * d[0] * d[5] * d[16] * d[41] + 2 * d[0] * d[1] * d[17] * d[41] - 2 * std::pow(d[3], 2) * d[17] * d[41] - 2 * d[4] * d[10] * d[39] * d[41] + 2 * d[5] * d[12] * d[39] * d[41] - 2 * d[1] * d[13] * d[39] * d[41] + 2 * d[3] * d[14] * d[39] * d[41] - 2 * d[5] * d[9] * d[40] * d[41] + 2 * d[4] * d[12] * d[40] * d[41] + 2 * d[3] * d[13] * d[40] * d[41] - 2 * d[0] * d[14] * d[40] * d[41] + d[1] * d[9] * std::pow(d[41], 2) + d[0] * d[10] * std::pow(d[41], 2) - 2 * d[3] * d[12] * std::pow(d[41], 2) - d[1] * d[2] * d[9] * d[46] + std::pow(d[5], 2) * d[9] * d[46] - d[0] * d[2] * d[10] * d[46] + std::pow(d[4], 2) * d[10] * d[46] - d[0] * d[1] * d[11] * d[46] + std::pow(d[3], 2) * d[11] * d[46] + 2 * d[2] * d[3] * d[12] * d[46] - 2 * d[4] * d[5] * d[12] * d[46] + 2 * d[1] * d[4] * d[13] * d[46] - 2 * d[3] * d[5] * d[13] * d[46] - 2 * d[3] * d[4] * d[14] * d[46] + 2 * d[0] * d[5] * d[14] * d[46];
    coeffs[37] = 2 * d[2] * d[6] * d[19] * d[39] - 2 * d[4] * d[8] * d[19] * d[39] + 2 * d[1] * d[6] * d[20] * d[39] - 2 * d[3] * d[7] * d[20] * d[39] - 2 * d[2] * d[7] * d[21] * d[39] + 2 * d[5] * d[8] * d[21] * d[39] + 2 * d[5] * d[7] * d[22] * d[39] - 2 * d[1] * d[8] * d[22] * d[39] - 4 * d[5] * d[6] * d[23] * d[39] + 2 * d[4] * d[7] * d[23] * d[39] + 2 * d[3] * d[8] * d[23] * d[39] + 2 * d[1] * d[2] * d[24] * d[39] - 2 * std::pow(d[5], 2) * d[24] * d[39] - 2 * d[2] * d[3] * d[25] * d[39] + 2 * d[4] * d[5] * d[25] * d[39] - 2 * d[1] * d[4] * d[26] * d[39] + 2 * d[3] * d[5] * d[26] * d[39] + d[2] * d[19] * std::pow(d[39], 2) + d[1] * d[20] * std::pow(d[39], 2) - 2 * d[5] * d[23] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[18] * d[40] - 2 * d[5] * d[8] * d[18] * d[40] - 2 * d[3] * d[6] * d[20] * d[40] + 2 * d[0] * d[7] * d[20] * d[40] - 2 * d[2] * d[6] * d[21] * d[40] + 2 * d[4] * d[8] * d[21] * d[40] + 2 * d[5] * d[6] * d[22] * d[40] - 4 * d[4] * d[7] * d[22] * d[40] + 2 * d[3] * d[8] * d[22] * d[40] + 2 * d[4] * d[6] * d[23] * d[40] - 2 * d[0] * d[8] * d[23] * d[40] - 2 * d[2] * d[3] * d[24] * d[40] + 2 * d[4] * d[5] * d[24] * d[40] + 2 * d[0] * d[2] * d[25] * d[40] - 2 * std::pow(d[4], 2) * d[25] * d[40] + 2 * d[3] * d[4] * d[26] * d[40] - 2 * d[0] * d[5] * d[26] * d[40] - 2 * d[3] * d[20] * d[39] * d[40] - 2 * d[2] * d[21] * d[39] * d[40] + 2 * d[5] * d[22] * d[39] * d[40] + 2 * d[4] * d[23] * d[39] * d[40] + d[2] * d[18] * std::pow(d[40], 2) + d[0] * d[20] * std::pow(d[40], 2) - 2 * d[4] * d[22] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[18] * d[41] + 2 * d[1] * d[8] * d[18] * d[41] - 2 * d[4] * d[6] * d[19] * d[41] + 2 * d[0] * d[8] * d[19] * d[41] + 2 * d[5] * d[6] * d[21] * d[41] + 2 * d[4] * d[7] * d[21] * d[41] - 4 * d[3] * d[8] * d[21] * d[41] - 2 * d[1] * d[6] * d[22] * d[41] + 2 * d[3] * d[7] * d[22] * d[41] + 2 * d[3] * d[6] * d[23] * d[41] - 2 * d[0] * d[7] * d[23] * d[41] - 2 * d[1] * d[4] * d[24] * d[41] + 2 * d[3] * d[5] * d[24] * d[41] + 2 * d[3] * d[4] * d[25] * d[41] - 2 * d[0] * d[5] * d[25] * d[41] + 2 * d[0] * d[1] * d[26] * d[41] - 2 * std::pow(d[3], 2) * d[26] * d[41] - 2 * d[4] * d[19] * d[39] * d[41] + 2 * d[5] * d[21] * d[39] * d[41] - 2 * d[1] * d[22] * d[39] * d[41] + 2 * d[3] * d[23] * d[39] * d[41] - 2 * d[5] * d[18] * d[40] * d[41] + 2 * d[4] * d[21] * d[40] * d[41] + 2 * d[3] * d[22] * d[40] * d[41] - 2 * d[0] * d[23] * d[40] * d[41] + d[1] * d[18] * std::pow(d[41], 2) + d[0] * d[19] * std::pow(d[41], 2) - 2 * d[3] * d[21] * std::pow(d[41], 2) - d[1] * d[2] * d[18] * d[46] + std::pow(d[5], 2) * d[18] * d[46] - d[0] * d[2] * d[19] * d[46] + std::pow(d[4], 2) * d[19] * d[46] - d[0] * d[1] * d[20] * d[46] + std::pow(d[3], 2) * d[20] * d[46] + 2 * d[2] * d[3] * d[21] * d[46] - 2 * d[4] * d[5] * d[21] * d[46] + 2 * d[1] * d[4] * d[22] * d[46] - 2 * d[3] * d[5] * d[22] * d[46] - 2 * d[3] * d[4] * d[23] * d[46] + 2 * d[0] * d[5] * d[23] * d[46];
    coeffs[38] = 2 * d[2] * d[6] * d[28] * d[39] - 2 * d[4] * d[8] * d[28] * d[39] + 2 * d[1] * d[6] * d[29] * d[39] - 2 * d[3] * d[7] * d[29] * d[39] - 2 * d[2] * d[7] * d[30] * d[39] + 2 * d[5] * d[8] * d[30] * d[39] + 2 * d[5] * d[7] * d[31] * d[39] - 2 * d[1] * d[8] * d[31] * d[39] - 4 * d[5] * d[6] * d[32] * d[39] + 2 * d[4] * d[7] * d[32] * d[39] + 2 * d[3] * d[8] * d[32] * d[39] + 2 * d[1] * d[2] * d[33] * d[39] - 2 * std::pow(d[5], 2) * d[33] * d[39] - 2 * d[2] * d[3] * d[34] * d[39] + 2 * d[4] * d[5] * d[34] * d[39] - 2 * d[1] * d[4] * d[35] * d[39] + 2 * d[3] * d[5] * d[35] * d[39] + d[2] * d[28] * std::pow(d[39], 2) + d[1] * d[29] * std::pow(d[39], 2) - 2 * d[5] * d[32] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[27] * d[40] - 2 * d[5] * d[8] * d[27] * d[40] - 2 * d[3] * d[6] * d[29] * d[40] + 2 * d[0] * d[7] * d[29] * d[40] - 2 * d[2] * d[6] * d[30] * d[40] + 2 * d[4] * d[8] * d[30] * d[40] + 2 * d[5] * d[6] * d[31] * d[40] - 4 * d[4] * d[7] * d[31] * d[40] + 2 * d[3] * d[8] * d[31] * d[40] + 2 * d[4] * d[6] * d[32] * d[40] - 2 * d[0] * d[8] * d[32] * d[40] - 2 * d[2] * d[3] * d[33] * d[40] + 2 * d[4] * d[5] * d[33] * d[40] + 2 * d[0] * d[2] * d[34] * d[40] - 2 * std::pow(d[4], 2) * d[34] * d[40] + 2 * d[3] * d[4] * d[35] * d[40] - 2 * d[0] * d[5] * d[35] * d[40] - 2 * d[3] * d[29] * d[39] * d[40] - 2 * d[2] * d[30] * d[39] * d[40] + 2 * d[5] * d[31] * d[39] * d[40] + 2 * d[4] * d[32] * d[39] * d[40] + d[2] * d[27] * std::pow(d[40], 2) + d[0] * d[29] * std::pow(d[40], 2) - 2 * d[4] * d[31] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[27] * d[41] + 2 * d[1] * d[8] * d[27] * d[41] - 2 * d[4] * d[6] * d[28] * d[41] + 2 * d[0] * d[8] * d[28] * d[41] + 2 * d[5] * d[6] * d[30] * d[41] + 2 * d[4] * d[7] * d[30] * d[41] - 4 * d[3] * d[8] * d[30] * d[41] - 2 * d[1] * d[6] * d[31] * d[41] + 2 * d[3] * d[7] * d[31] * d[41] + 2 * d[3] * d[6] * d[32] * d[41] - 2 * d[0] * d[7] * d[32] * d[41] - 2 * d[1] * d[4] * d[33] * d[41] + 2 * d[3] * d[5] * d[33] * d[41] + 2 * d[3] * d[4] * d[34] * d[41] - 2 * d[0] * d[5] * d[34] * d[41] + 2 * d[0] * d[1] * d[35] * d[41] - 2 * std::pow(d[3], 2) * d[35] * d[41] - 2 * d[4] * d[28] * d[39] * d[41] + 2 * d[5] * d[30] * d[39] * d[41] - 2 * d[1] * d[31] * d[39] * d[41] + 2 * d[3] * d[32] * d[39] * d[41] - 2 * d[5] * d[27] * d[40] * d[41] + 2 * d[4] * d[30] * d[40] * d[41] + 2 * d[3] * d[31] * d[40] * d[41] - 2 * d[0] * d[32] * d[40] * d[41] + d[1] * d[27] * std::pow(d[41], 2) + d[0] * d[28] * std::pow(d[41], 2) - 2 * d[3] * d[30] * std::pow(d[41], 2) - d[1] * d[2] * d[27] * d[46] + std::pow(d[5], 2) * d[27] * d[46] - d[0] * d[2] * d[28] * d[46] + std::pow(d[4], 2) * d[28] * d[46] - d[0] * d[1] * d[29] * d[46] + std::pow(d[3], 2) * d[29] * d[46] + 2 * d[2] * d[3] * d[30] * d[46] - 2 * d[4] * d[5] * d[30] * d[46] + 2 * d[1] * d[4] * d[31] * d[46] - 2 * d[3] * d[5] * d[31] * d[46] - 2 * d[3] * d[4] * d[32] * d[46] + 2 * d[0] * d[5] * d[32] * d[46];
    coeffs[39] = 2 * d[1] * d[2] * d[6] * d[39] - 2 * std::pow(d[5], 2) * d[6] * d[39] - 2 * d[2] * d[3] * d[7] * d[39] + 2 * d[4] * d[5] * d[7] * d[39] - 2 * d[1] * d[4] * d[8] * d[39] + 2 * d[3] * d[5] * d[8] * d[39] + d[1] * d[2] * std::pow(d[39], 2) - std::pow(d[5], 2) * std::pow(d[39], 2) - 2 * d[2] * d[3] * d[6] * d[40] + 2 * d[4] * d[5] * d[6] * d[40] + 2 * d[0] * d[2] * d[7] * d[40] - 2 * std::pow(d[4], 2) * d[7] * d[40] + 2 * d[3] * d[4] * d[8] * d[40] - 2 * d[0] * d[5] * d[8] * d[40] - 2 * d[2] * d[3] * d[39] * d[40] + 2 * d[4] * d[5] * d[39] * d[40] + d[0] * d[2] * std::pow(d[40], 2) - std::pow(d[4], 2) * std::pow(d[40], 2) - 2 * d[1] * d[4] * d[6] * d[41] + 2 * d[3] * d[5] * d[6] * d[41] + 2 * d[3] * d[4] * d[7] * d[41] - 2 * d[0] * d[5] * d[7] * d[41] + 2 * d[0] * d[1] * d[8] * d[41] - 2 * std::pow(d[3], 2) * d[8] * d[41] - 2 * d[1] * d[4] * d[39] * d[41] + 2 * d[3] * d[5] * d[39] * d[41] + 2 * d[3] * d[4] * d[40] * d[41] - 2 * d[0] * d[5] * d[40] * d[41] + d[0] * d[1] * std::pow(d[41], 2) - std::pow(d[3], 2) * std::pow(d[41], 2) - d[0] * d[1] * d[2] * d[46] + d[2] * std::pow(d[3], 2) * d[46] + d[1] * std::pow(d[4], 2) * d[46] - 2 * d[3] * d[4] * d[5] * d[46] + d[0] * std::pow(d[5], 2) * d[46];
    coeffs[40] = 2 * d[10] * d[11] * d[15] * d[42] - 2 * std::pow(d[14], 2) * d[15] * d[42] - 2 * d[11] * d[12] * d[16] * d[42] + 2 * d[13] * d[14] * d[16] * d[42] - 2 * d[10] * d[13] * d[17] * d[42] + 2 * d[12] * d[14] * d[17] * d[42] - 2 * d[11] * d[12] * d[15] * d[43] + 2 * d[13] * d[14] * d[15] * d[43] + 2 * d[9] * d[11] * d[16] * d[43] - 2 * std::pow(d[13], 2) * d[16] * d[43] + 2 * d[12] * d[13] * d[17] * d[43] - 2 * d[9] * d[14] * d[17] * d[43] - 2 * d[10] * d[13] * d[15] * d[44] + 2 * d[12] * d[14] * d[15] * d[44] + 2 * d[12] * d[13] * d[16] * d[44] - 2 * d[9] * d[14] * d[16] * d[44] + 2 * d[9] * d[10] * d[17] * d[44] - 2 * std::pow(d[12], 2) * d[17] * d[44] - d[9] * d[10] * d[11] * d[47] + d[11] * std::pow(d[12], 2) * d[47] + d[10] * std::pow(d[13], 2) * d[47] - 2 * d[12] * d[13] * d[14] * d[47] + d[9] * std::pow(d[14], 2) * d[47];
    coeffs[41] = 2 * d[11] * d[15] * d[19] * d[42] - 2 * d[13] * d[17] * d[19] * d[42] + 2 * d[10] * d[15] * d[20] * d[42] - 2 * d[12] * d[16] * d[20] * d[42] - 2 * d[11] * d[16] * d[21] * d[42] + 2 * d[14] * d[17] * d[21] * d[42] + 2 * d[14] * d[16] * d[22] * d[42] - 2 * d[10] * d[17] * d[22] * d[42] - 4 * d[14] * d[15] * d[23] * d[42] + 2 * d[13] * d[16] * d[23] * d[42] + 2 * d[12] * d[17] * d[23] * d[42] + 2 * d[10] * d[11] * d[24] * d[42] - 2 * std::pow(d[14], 2) * d[24] * d[42] - 2 * d[11] * d[12] * d[25] * d[42] + 2 * d[13] * d[14] * d[25] * d[42] - 2 * d[10] * d[13] * d[26] * d[42] + 2 * d[12] * d[14] * d[26] * d[42] + 2 * d[11] * d[16] * d[18] * d[43] - 2 * d[14] * d[17] * d[18] * d[43] - 2 * d[12] * d[15] * d[20] * d[43] + 2 * d[9] * d[16] * d[20] * d[43] - 2 * d[11] * d[15] * d[21] * d[43] + 2 * d[13] * d[17] * d[21] * d[43] + 2 * d[14] * d[15] * d[22] * d[43] - 4 * d[13] * d[16] * d[22] * d[43] + 2 * d[12] * d[17] * d[22] * d[43] + 2 * d[13] * d[15] * d[23] * d[43] - 2 * d[9] * d[17] * d[23] * d[43] - 2 * d[11] * d[12] * d[24] * d[43] + 2 * d[13] * d[14] * d[24] * d[43] + 2 * d[9] * d[11] * d[25] * d[43] - 2 * std::pow(d[13], 2) * d[25] * d[43] + 2 * d[12] * d[13] * d[26] * d[43] - 2 * d[9] * d[14] * d[26] * d[43] - 2 * d[14] * d[16] * d[18] * d[44] + 2 * d[10] * d[17] * d[18] * d[44] - 2 * d[13] * d[15] * d[19] * d[44] + 2 * d[9] * d[17] * d[19] * d[44] + 2 * d[14] * d[15] * d[21] * d[44] + 2 * d[13] * d[16] * d[21] * d[44] - 4 * d[12] * d[17] * d[21] * d[44] - 2 * d[10] * d[15] * d[22] * d[44] + 2 * d[12] * d[16] * d[22] * d[44] + 2 * d[12] * d[15] * d[23] * d[44] - 2 * d[9] * d[16] * d[23] * d[44] - 2 * d[10] * d[13] * d[24] * d[44] + 2 * d[12] * d[14] * d[24] * d[44] + 2 * d[12] * d[13] * d[25] * d[44] - 2 * d[9] * d[14] * d[25] * d[44] + 2 * d[9] * d[10] * d[26] * d[44] - 2 * std::pow(d[12], 2) * d[26] * d[44] - d[10] * d[11] * d[18] * d[47] + std::pow(d[14], 2) * d[18] * d[47] - d[9] * d[11] * d[19] * d[47] + std::pow(d[13], 2) * d[19] * d[47] - d[9] * d[10] * d[20] * d[47] + std::pow(d[12], 2) * d[20] * d[47] + 2 * d[11] * d[12] * d[21] * d[47] - 2 * d[13] * d[14] * d[21] * d[47] + 2 * d[10] * d[13] * d[22] * d[47] - 2 * d[12] * d[14] * d[22] * d[47] - 2 * d[12] * d[13] * d[23] * d[47] + 2 * d[9] * d[14] * d[23] * d[47];
    coeffs[42] = 2 * d[15] * d[19] * d[20] * d[42] - 2 * d[16] * d[20] * d[21] * d[42] - 2 * d[17] * d[19] * d[22] * d[42] + 2 * d[17] * d[21] * d[23] * d[42] + 2 * d[16] * d[22] * d[23] * d[42] - 2 * d[15] * std::pow(d[23], 2) * d[42] + 2 * d[11] * d[19] * d[24] * d[42] + 2 * d[10] * d[20] * d[24] * d[42] - 4 * d[14] * d[23] * d[24] * d[42] - 2 * d[12] * d[20] * d[25] * d[42] - 2 * d[11] * d[21] * d[25] * d[42] + 2 * d[14] * d[22] * d[25] * d[42] + 2 * d[13] * d[23] * d[25] * d[42] - 2 * d[13] * d[19] * d[26] * d[42] + 2 * d[14] * d[21] * d[26] * d[42] - 2 * d[10] * d[22] * d[26] * d[42] + 2 * d[12] * d[23] * d[26] * d[42] + 2 * d[16] * d[18] * d[20] * d[43] - 2 * d[15] * d[20] * d[21] * d[43] + 2 * d[17] * d[21] * d[22] * d[43] - 2 * d[16] * std::pow(d[22], 2) * d[43] - 2 * d[17] * d[18] * d[23] * d[43] + 2 * d[15] * d[22] * d[23] * d[43] - 2 * d[12] * d[20] * d[24] * d[43] - 2 * d[11] * d[21] * d[24] * d[43] + 2 * d[14] * d[22] * d[24] * d[43] + 2 * d[13] * d[23] * d[24] * d[43] + 2 * d[11] * d[18] * d[25] * d[43] + 2 * d[9] * d[20] * d[25] * d[43] - 4 * d[13] * d[22] * d[25] * d[43] - 2 * d[14] * d[18] * d[26] * d[43] + 2 * d[13] * d[21] * d[26] * d[43] + 2 * d[12] * d[22] * d[26] * d[43] - 2 * d[9] * d[23] * d[26] * d[43] + 2 * d[17] * d[18] * d[19] * d[44] - 2 * d[17] * std::pow(d[21], 2) * d[44] - 2 * d[15] * d[19] * d[22] * d[44] + 2 * d[16] * d[21] * d[22] * d[44] - 2 * d[16] * d[18] * d[23] * d[44] + 2 * d[15] * d[21] * d[23] * d[44] - 2 * d[13] * d[19] * d[24] * d[44] + 2 * d[14] * d[21] * d[24] * d[44] - 2 * d[10] * d[22] * d[24] * d[44] + 2 * d[12] * d[23] * d[24] * d[44] - 2 * d[14] * d[18] * d[25] * d[44] + 2 * d[13] * d[21] * d[25] * d[44] + 2 * d[12] * d[22] * d[25] * d[44] - 2 * d[9] * d[23] * d[25] * d[44] + 2 * d[10] * d[18] * d[26] * d[44] + 2 * d[9] * d[19] * d[26] * d[44] - 4 * d[12] * d[21] * d[26] * d[44] - d[11] * d[18] * d[19] * d[47] - d[10] * d[18] * d[20] * d[47] - d[9] * d[19] * d[20] * d[47] + 2 * d[12] * d[20] * d[21] * d[47] + d[11] * std::pow(d[21], 2) * d[47] + 2 * d[13] * d[19] * d[22] * d[47] - 2 * d[14] * d[21] * d[22] * d[47] + d[10] * std::pow(d[22], 2) * d[47] + 2 * d[14] * d[18] * d[23] * d[47] - 2 * d[13] * d[21] * d[23] * d[47] - 2 * d[12] * d[22] * d[23] * d[47] + d[9] * std::pow(d[23], 2) * d[47];
    coeffs[43] = 2 * d[19] * d[20] * d[24] * d[42] - 2 * std::pow(d[23], 2) * d[24] * d[42] - 2 * d[20] * d[21] * d[25] * d[42] + 2 * d[22] * d[23] * d[25] * d[42] - 2 * d[19] * d[22] * d[26] * d[42] + 2 * d[21] * d[23] * d[26] * d[42] - 2 * d[20] * d[21] * d[24] * d[43] + 2 * d[22] * d[23] * d[24] * d[43] + 2 * d[18] * d[20] * d[25] * d[43] - 2 * std::pow(d[22], 2) * d[25] * d[43] + 2 * d[21] * d[22] * d[26] * d[43] - 2 * d[18] * d[23] * d[26] * d[43] - 2 * d[19] * d[22] * d[24] * d[44] + 2 * d[21] * d[23] * d[24] * d[44] + 2 * d[21] * d[22] * d[25] * d[44] - 2 * d[18] * d[23] * d[25] * d[44] + 2 * d[18] * d[19] * d[26] * d[44] - 2 * std::pow(d[21], 2) * d[26] * d[44] - d[18] * d[19] * d[20] * d[47] + d[20] * std::pow(d[21], 2) * d[47] + d[19] * std::pow(d[22], 2) * d[47] - 2 * d[21] * d[22] * d[23] * d[47] + d[18] * std::pow(d[23], 2) * d[47];
    coeffs[44] = 2 * d[11] * d[15] * d[28] * d[42] - 2 * d[13] * d[17] * d[28] * d[42] + 2 * d[10] * d[15] * d[29] * d[42] - 2 * d[12] * d[16] * d[29] * d[42] - 2 * d[11] * d[16] * d[30] * d[42] + 2 * d[14] * d[17] * d[30] * d[42] + 2 * d[14] * d[16] * d[31] * d[42] - 2 * d[10] * d[17] * d[31] * d[42] - 4 * d[14] * d[15] * d[32] * d[42] + 2 * d[13] * d[16] * d[32] * d[42] + 2 * d[12] * d[17] * d[32] * d[42] + 2 * d[10] * d[11] * d[33] * d[42] - 2 * std::pow(d[14], 2) * d[33] * d[42] - 2 * d[11] * d[12] * d[34] * d[42] + 2 * d[13] * d[14] * d[34] * d[42] - 2 * d[10] * d[13] * d[35] * d[42] + 2 * d[12] * d[14] * d[35] * d[42] + 2 * d[11] * d[16] * d[27] * d[43] - 2 * d[14] * d[17] * d[27] * d[43] - 2 * d[12] * d[15] * d[29] * d[43] + 2 * d[9] * d[16] * d[29] * d[43] - 2 * d[11] * d[15] * d[30] * d[43] + 2 * d[13] * d[17] * d[30] * d[43] + 2 * d[14] * d[15] * d[31] * d[43] - 4 * d[13] * d[16] * d[31] * d[43] + 2 * d[12] * d[17] * d[31] * d[43] + 2 * d[13] * d[15] * d[32] * d[43] - 2 * d[9] * d[17] * d[32] * d[43] - 2 * d[11] * d[12] * d[33] * d[43] + 2 * d[13] * d[14] * d[33] * d[43] + 2 * d[9] * d[11] * d[34] * d[43] - 2 * std::pow(d[13], 2) * d[34] * d[43] + 2 * d[12] * d[13] * d[35] * d[43] - 2 * d[9] * d[14] * d[35] * d[43] - 2 * d[14] * d[16] * d[27] * d[44] + 2 * d[10] * d[17] * d[27] * d[44] - 2 * d[13] * d[15] * d[28] * d[44] + 2 * d[9] * d[17] * d[28] * d[44] + 2 * d[14] * d[15] * d[30] * d[44] + 2 * d[13] * d[16] * d[30] * d[44] - 4 * d[12] * d[17] * d[30] * d[44] - 2 * d[10] * d[15] * d[31] * d[44] + 2 * d[12] * d[16] * d[31] * d[44] + 2 * d[12] * d[15] * d[32] * d[44] - 2 * d[9] * d[16] * d[32] * d[44] - 2 * d[10] * d[13] * d[33] * d[44] + 2 * d[12] * d[14] * d[33] * d[44] + 2 * d[12] * d[13] * d[34] * d[44] - 2 * d[9] * d[14] * d[34] * d[44] + 2 * d[9] * d[10] * d[35] * d[44] - 2 * std::pow(d[12], 2) * d[35] * d[44] - d[10] * d[11] * d[27] * d[47] + std::pow(d[14], 2) * d[27] * d[47] - d[9] * d[11] * d[28] * d[47] + std::pow(d[13], 2) * d[28] * d[47] - d[9] * d[10] * d[29] * d[47] + std::pow(d[12], 2) * d[29] * d[47] + 2 * d[11] * d[12] * d[30] * d[47] - 2 * d[13] * d[14] * d[30] * d[47] + 2 * d[10] * d[13] * d[31] * d[47] - 2 * d[12] * d[14] * d[31] * d[47] - 2 * d[12] * d[13] * d[32] * d[47] + 2 * d[9] * d[14] * d[32] * d[47];
    coeffs[45] = 2 * d[15] * d[20] * d[28] * d[42] - 2 * d[17] * d[22] * d[28] * d[42] + 2 * d[11] * d[24] * d[28] * d[42] - 2 * d[13] * d[26] * d[28] * d[42] + 2 * d[15] * d[19] * d[29] * d[42] - 2 * d[16] * d[21] * d[29] * d[42] + 2 * d[10] * d[24] * d[29] * d[42] - 2 * d[12] * d[25] * d[29] * d[42] - 2 * d[16] * d[20] * d[30] * d[42] + 2 * d[17] * d[23] * d[30] * d[42] - 2 * d[11] * d[25] * d[30] * d[42] + 2 * d[14] * d[26] * d[30] * d[42] - 2 * d[17] * d[19] * d[31] * d[42] + 2 * d[16] * d[23] * d[31] * d[42] + 2 * d[14] * d[25] * d[31] * d[42] - 2 * d[10] * d[26] * d[31] * d[42] + 2 * d[17] * d[21] * d[32] * d[42] + 2 * d[16] * d[22] * d[32] * d[42] - 4 * d[15] * d[23] * d[32] * d[42] - 4 * d[14] * d[24] * d[32] * d[42] + 2 * d[13] * d[25] * d[32] * d[42] + 2 * d[12] * d[26] * d[32] * d[42] + 2 * d[11] * d[19] * d[33] * d[42] + 2 * d[10] * d[20] * d[33] * d[42] - 4 * d[14] * d[23] * d[33] * d[42] - 2 * d[12] * d[20] * d[34] * d[42] - 2 * d[11] * d[21] * d[34] * d[42] + 2 * d[14] * d[22] * d[34] * d[42] + 2 * d[13] * d[23] * d[34] * d[42] - 2 * d[13] * d[19] * d[35] * d[42] + 2 * d[14] * d[21] * d[35] * d[42] - 2 * d[10] * d[22] * d[35] * d[42] + 2 * d[12] * d[23] * d[35] * d[42] + 2 * d[16] * d[20] * d[27] * d[43] - 2 * d[17] * d[23] * d[27] * d[43] + 2 * d[11] * d[25] * d[27] * d[43] - 2 * d[14] * d[26] * d[27] * d[43] + 2 * d[16] * d[18] * d[29] * d[43] - 2 * d[15] * d[21] * d[29] * d[43] - 2 * d[12] * d[24] * d[29] * d[43] + 2 * d[9] * d[25] * d[29] * d[43] - 2 * d[15] * d[20] * d[30] * d[43] + 2 * d[17] * d[22] * d[30] * d[43] - 2 * d[11] * d[24] * d[30] * d[43] + 2 * d[13] * d[26] * d[30] * d[43] + 2 * d[17] * d[21] * d[31] * d[43] - 4 * d[16] * d[22] * d[31] * d[43] + 2 * d[15] * d[23] * d[31] * d[43] + 2 * d[14] * d[24] * d[31] * d[43] - 4 * d[13] * d[25] * d[31] * d[43] + 2 * d[12] * d[26] * d[31] * d[43] - 2 * d[17] * d[18] * d[32] * d[43] + 2 * d[15] * d[22] * d[32] * d[43] + 2 * d[13] * d[24] * d[32] * d[43] - 2 * d[9] * d[26] * d[32] * d[43] - 2 * d[12] * d[20] * d[33] * d[43] - 2 * d[11] * d[21] * d[33] * d[43] + 2 * d[14] * d[22] * d[33] * d[43] + 2 * d[13] * d[23] * d[33] * d[43] + 2 * d[11] * d[18] * d[34] * d[43] + 2 * d[9] * d[20] * d[34] * d[43] - 4 * d[13] * d[22] * d[34] * d[43] - 2 * d[14] * d[18] * d[35] * d[43] + 2 * d[13] * d[21] * d[35] * d[43] + 2 * d[12] * d[22] * d[35] * d[43] - 2 * d[9] * d[23] * d[35] * d[43] + 2 * d[17] * d[19] * d[27] * d[44] - 2 * d[16] * d[23] * d[27] * d[44] - 2 * d[14] * d[25] * d[27] * d[44] + 2 * d[10] * d[26] * d[27] * d[44] + 2 * d[17] * d[18] * d[28] * d[44] - 2 * d[15] * d[22] * d[28] * d[44] - 2 * d[13] * d[24] * d[28] * d[44] + 2 * d[9] * d[26] * d[28] * d[44] - 4 * d[17] * d[21] * d[30] * d[44] + 2 * d[16] * d[22] * d[30] * d[44] + 2 * d[15] * d[23] * d[30] * d[44] + 2 * d[14] * d[24] * d[30] * d[44] + 2 * d[13] * d[25] * d[30] * d[44] - 4 * d[12] * d[26] * d[30] * d[44] - 2 * d[15] * d[19] * d[31] * d[44] + 2 * d[16] * d[21] * d[31] * d[44] - 2 * d[10] * d[24] * d[31] * d[44] + 2 * d[12] * d[25] * d[31] * d[44] - 2 * d[16] * d[18] * d[32] * d[44] + 2 * d[15] * d[21] * d[32] * d[44] + 2 * d[12] * d[24] * d[32] * d[44] - 2 * d[9] * d[25] * d[32] * d[44] - 2 * d[13] * d[19] * d[33] * d[44] + 2 * d[14] * d[21] * d[33] * d[44] - 2 * d[10] * d[22] * d[33] * d[44] + 2 * d[12] * d[23] * d[33] * d[44] - 2 * d[14] * d[18] * d[34] * d[44] + 2 * d[13] * d[21] * d[34] * d[44] + 2 * d[12] * d[22] * d[34] * d[44] - 2 * d[9] * d[23] * d[34] * d[44] + 2 * d[10] * d[18] * d[35] * d[44] + 2 * d[9] * d[19] * d[35] * d[44] - 4 * d[12] * d[21] * d[35] * d[44] - d[11] * d[19] * d[27] * d[47] - d[10] * d[20] * d[27] * d[47] + 2 * d[14] * d[23] * d[27] * d[47] - d[11] * d[18] * d[28] * d[47] - d[9] * d[20] * d[28] * d[47] + 2 * d[13] * d[22] * d[28] * d[47] - d[10] * d[18] * d[29] * d[47] - d[9] * d[19] * d[29] * d[47] + 2 * d[12] * d[21] * d[29] * d[47] + 2 * d[12] * d[20] * d[30] * d[47] + 2 * d[11] * d[21] * d[30] * d[47] - 2 * d[14] * d[22] * d[30] * d[47] - 2 * d[13] * d[23] * d[30] * d[47] + 2 * d[13] * d[19] * d[31] * d[47] - 2 * d[14] * d[21] * d[31] * d[47] + 2 * d[10] * d[22] * d[31] * d[47] - 2 * d[12] * d[23] * d[31] * d[47] + 2 * d[14] * d[18] * d[32] * d[47] - 2 * d[13] * d[21] * d[32] * d[47] - 2 * d[12] * d[22] * d[32] * d[47] + 2 * d[9] * d[23] * d[32] * d[47];
    coeffs[46] = 2 * d[20] * d[24] * d[28] * d[42] - 2 * d[22] * d[26] * d[28] * d[42] + 2 * d[19] * d[24] * d[29] * d[42] - 2 * d[21] * d[25] * d[29] * d[42] - 2 * d[20] * d[25] * d[30] * d[42] + 2 * d[23] * d[26] * d[30] * d[42] + 2 * d[23] * d[25] * d[31] * d[42] - 2 * d[19] * d[26] * d[31] * d[42] - 4 * d[23] * d[24] * d[32] * d[42] + 2 * d[22] * d[25] * d[32] * d[42] + 2 * d[21] * d[26] * d[32] * d[42] + 2 * d[19] * d[20] * d[33] * d[42] - 2 * std::pow(d[23], 2) * d[33] * d[42] - 2 * d[20] * d[21] * d[34] * d[42] + 2 * d[22] * d[23] * d[34] * d[42] - 2 * d[19] * d[22] * d[35] * d[42] + 2 * d[21] * d[23] * d[35] * d[42] + 2 * d[20] * d[25] * d[27] * d[43] - 2 * d[23] * d[26] * d[27] * d[43] - 2 * d[21] * d[24] * d[29] * d[43] + 2 * d[18] * d[25] * d[29] * d[43] - 2 * d[20] * d[24] * d[30] * d[43] + 2 * d[22] * d[26] * d[30] * d[43] + 2 * d[23] * d[24] * d[31] * d[43] - 4 * d[22] * d[25] * d[31] * d[43] + 2 * d[21] * d[26] * d[31] * d[43] + 2 * d[22] * d[24] * d[32] * d[43] - 2 * d[18] * d[26] * d[32] * d[43] - 2 * d[20] * d[21] * d[33] * d[43] + 2 * d[22] * d[23] * d[33] * d[43] + 2 * d[18] * d[20] * d[34] * d[43] - 2 * std::pow(d[22], 2) * d[34] * d[43] + 2 * d[21] * d[22] * d[35] * d[43] - 2 * d[18] * d[23] * d[35] * d[43] - 2 * d[23] * d[25] * d[27] * d[44] + 2 * d[19] * d[26] * d[27] * d[44] - 2 * d[22] * d[24] * d[28] * d[44] + 2 * d[18] * d[26] * d[28] * d[44] + 2 * d[23] * d[24] * d[30] * d[44] + 2 * d[22] * d[25] * d[30] * d[44] - 4 * d[21] * d[26] * d[30] * d[44] - 2 * d[19] * d[24] * d[31] * d[44] + 2 * d[21] * d[25] * d[31] * d[44] + 2 * d[21] * d[24] * d[32] * d[44] - 2 * d[18] * d[25] * d[32] * d[44] - 2 * d[19] * d[22] * d[33] * d[44] + 2 * d[21] * d[23] * d[33] * d[44] + 2 * d[21] * d[22] * d[34] * d[44] - 2 * d[18] * d[23] * d[34] * d[44] + 2 * d[18] * d[19] * d[35] * d[44] - 2 * std::pow(d[21], 2) * d[35] * d[44] - d[19] * d[20] * d[27] * d[47] + std::pow(d[23], 2) * d[27] * d[47] - d[18] * d[20] * d[28] * d[47] + std::pow(d[22], 2) * d[28] * d[47] - d[18] * d[19] * d[29] * d[47] + std::pow(d[21], 2) * d[29] * d[47] + 2 * d[20] * d[21] * d[30] * d[47] - 2 * d[22] * d[23] * d[30] * d[47] + 2 * d[19] * d[22] * d[31] * d[47] - 2 * d[21] * d[23] * d[31] * d[47] - 2 * d[21] * d[22] * d[32] * d[47] + 2 * d[18] * d[23] * d[32] * d[47];
    coeffs[47] = 2 * d[15] * d[28] * d[29] * d[42] - 2 * d[16] * d[29] * d[30] * d[42] - 2 * d[17] * d[28] * d[31] * d[42] + 2 * d[17] * d[30] * d[32] * d[42] + 2 * d[16] * d[31] * d[32] * d[42] - 2 * d[15] * std::pow(d[32], 2) * d[42] + 2 * d[11] * d[28] * d[33] * d[42] + 2 * d[10] * d[29] * d[33] * d[42] - 4 * d[14] * d[32] * d[33] * d[42] - 2 * d[12] * d[29] * d[34] * d[42] - 2 * d[11] * d[30] * d[34] * d[42] + 2 * d[14] * d[31] * d[34] * d[42] + 2 * d[13] * d[32] * d[34] * d[42] - 2 * d[13] * d[28] * d[35] * d[42] + 2 * d[14] * d[30] * d[35] * d[42] - 2 * d[10] * d[31] * d[35] * d[42] + 2 * d[12] * d[32] * d[35] * d[42] + 2 * d[16] * d[27] * d[29] * d[43] - 2 * d[15] * d[29] * d[30] * d[43] + 2 * d[17] * d[30] * d[31] * d[43] - 2 * d[16] * std::pow(d[31], 2) * d[43] - 2 * d[17] * d[27] * d[32] * d[43] + 2 * d[15] * d[31] * d[32] * d[43] - 2 * d[12] * d[29] * d[33] * d[43] - 2 * d[11] * d[30] * d[33] * d[43] + 2 * d[14] * d[31] * d[33] * d[43] + 2 * d[13] * d[32] * d[33] * d[43] + 2 * d[11] * d[27] * d[34] * d[43] + 2 * d[9] * d[29] * d[34] * d[43] - 4 * d[13] * d[31] * d[34] * d[43] - 2 * d[14] * d[27] * d[35] * d[43] + 2 * d[13] * d[30] * d[35] * d[43] + 2 * d[12] * d[31] * d[35] * d[43] - 2 * d[9] * d[32] * d[35] * d[43] + 2 * d[17] * d[27] * d[28] * d[44] - 2 * d[17] * std::pow(d[30], 2) * d[44] - 2 * d[15] * d[28] * d[31] * d[44] + 2 * d[16] * d[30] * d[31] * d[44] - 2 * d[16] * d[27] * d[32] * d[44] + 2 * d[15] * d[30] * d[32] * d[44] - 2 * d[13] * d[28] * d[33] * d[44] + 2 * d[14] * d[30] * d[33] * d[44] - 2 * d[10] * d[31] * d[33] * d[44] + 2 * d[12] * d[32] * d[33] * d[44] - 2 * d[14] * d[27] * d[34] * d[44] + 2 * d[13] * d[30] * d[34] * d[44] + 2 * d[12] * d[31] * d[34] * d[44] - 2 * d[9] * d[32] * d[34] * d[44] + 2 * d[10] * d[27] * d[35] * d[44] + 2 * d[9] * d[28] * d[35] * d[44] - 4 * d[12] * d[30] * d[35] * d[44] - d[11] * d[27] * d[28] * d[47] - d[10] * d[27] * d[29] * d[47] - d[9] * d[28] * d[29] * d[47] + 2 * d[12] * d[29] * d[30] * d[47] + d[11] * std::pow(d[30], 2) * d[47] + 2 * d[13] * d[28] * d[31] * d[47] - 2 * d[14] * d[30] * d[31] * d[47] + d[10] * std::pow(d[31], 2) * d[47] + 2 * d[14] * d[27] * d[32] * d[47] - 2 * d[13] * d[30] * d[32] * d[47] - 2 * d[12] * d[31] * d[32] * d[47] + d[9] * std::pow(d[32], 2) * d[47];
    coeffs[48] = 2 * d[24] * d[28] * d[29] * d[42] - 2 * d[25] * d[29] * d[30] * d[42] - 2 * d[26] * d[28] * d[31] * d[42] + 2 * d[26] * d[30] * d[32] * d[42] + 2 * d[25] * d[31] * d[32] * d[42] - 2 * d[24] * std::pow(d[32], 2) * d[42] + 2 * d[20] * d[28] * d[33] * d[42] + 2 * d[19] * d[29] * d[33] * d[42] - 4 * d[23] * d[32] * d[33] * d[42] - 2 * d[21] * d[29] * d[34] * d[42] - 2 * d[20] * d[30] * d[34] * d[42] + 2 * d[23] * d[31] * d[34] * d[42] + 2 * d[22] * d[32] * d[34] * d[42] - 2 * d[22] * d[28] * d[35] * d[42] + 2 * d[23] * d[30] * d[35] * d[42] - 2 * d[19] * d[31] * d[35] * d[42] + 2 * d[21] * d[32] * d[35] * d[42] + 2 * d[25] * d[27] * d[29] * d[43] - 2 * d[24] * d[29] * d[30] * d[43] + 2 * d[26] * d[30] * d[31] * d[43] - 2 * d[25] * std::pow(d[31], 2) * d[43] - 2 * d[26] * d[27] * d[32] * d[43] + 2 * d[24] * d[31] * d[32] * d[43] - 2 * d[21] * d[29] * d[33] * d[43] - 2 * d[20] * d[30] * d[33] * d[43] + 2 * d[23] * d[31] * d[33] * d[43] + 2 * d[22] * d[32] * d[33] * d[43] + 2 * d[20] * d[27] * d[34] * d[43] + 2 * d[18] * d[29] * d[34] * d[43] - 4 * d[22] * d[31] * d[34] * d[43] - 2 * d[23] * d[27] * d[35] * d[43] + 2 * d[22] * d[30] * d[35] * d[43] + 2 * d[21] * d[31] * d[35] * d[43] - 2 * d[18] * d[32] * d[35] * d[43] + 2 * d[26] * d[27] * d[28] * d[44] - 2 * d[26] * std::pow(d[30], 2) * d[44] - 2 * d[24] * d[28] * d[31] * d[44] + 2 * d[25] * d[30] * d[31] * d[44] - 2 * d[25] * d[27] * d[32] * d[44] + 2 * d[24] * d[30] * d[32] * d[44] - 2 * d[22] * d[28] * d[33] * d[44] + 2 * d[23] * d[30] * d[33] * d[44] - 2 * d[19] * d[31] * d[33] * d[44] + 2 * d[21] * d[32] * d[33] * d[44] - 2 * d[23] * d[27] * d[34] * d[44] + 2 * d[22] * d[30] * d[34] * d[44] + 2 * d[21] * d[31] * d[34] * d[44] - 2 * d[18] * d[32] * d[34] * d[44] + 2 * d[19] * d[27] * d[35] * d[44] + 2 * d[18] * d[28] * d[35] * d[44] - 4 * d[21] * d[30] * d[35] * d[44] - d[20] * d[27] * d[28] * d[47] - d[19] * d[27] * d[29] * d[47] - d[18] * d[28] * d[29] * d[47] + 2 * d[21] * d[29] * d[30] * d[47] + d[20] * std::pow(d[30], 2) * d[47] + 2 * d[22] * d[28] * d[31] * d[47] - 2 * d[23] * d[30] * d[31] * d[47] + d[19] * std::pow(d[31], 2) * d[47] + 2 * d[23] * d[27] * d[32] * d[47] - 2 * d[22] * d[30] * d[32] * d[47] - 2 * d[21] * d[31] * d[32] * d[47] + d[18] * std::pow(d[32], 2) * d[47];
    coeffs[49] = 2 * d[28] * d[29] * d[33] * d[42] - 2 * std::pow(d[32], 2) * d[33] * d[42] - 2 * d[29] * d[30] * d[34] * d[42] + 2 * d[31] * d[32] * d[34] * d[42] - 2 * d[28] * d[31] * d[35] * d[42] + 2 * d[30] * d[32] * d[35] * d[42] - 2 * d[29] * d[30] * d[33] * d[43] + 2 * d[31] * d[32] * d[33] * d[43] + 2 * d[27] * d[29] * d[34] * d[43] - 2 * std::pow(d[31], 2) * d[34] * d[43] + 2 * d[30] * d[31] * d[35] * d[43] - 2 * d[27] * d[32] * d[35] * d[43] - 2 * d[28] * d[31] * d[33] * d[44] + 2 * d[30] * d[32] * d[33] * d[44] + 2 * d[30] * d[31] * d[34] * d[44] - 2 * d[27] * d[32] * d[34] * d[44] + 2 * d[27] * d[28] * d[35] * d[44] - 2 * std::pow(d[30], 2) * d[35] * d[44] - d[27] * d[28] * d[29] * d[47] + d[29] * std::pow(d[30], 2) * d[47] + d[28] * std::pow(d[31], 2) * d[47] - 2 * d[30] * d[31] * d[32] * d[47] + d[27] * std::pow(d[32], 2) * d[47];
    coeffs[50] = 2 * d[6] * d[10] * d[11] * d[42] - 2 * d[7] * d[11] * d[12] * d[42] - 2 * d[8] * d[10] * d[13] * d[42] + 2 * d[8] * d[12] * d[14] * d[42] + 2 * d[7] * d[13] * d[14] * d[42] - 2 * d[6] * std::pow(d[14], 2) * d[42] + 2 * d[2] * d[10] * d[15] * d[42] + 2 * d[1] * d[11] * d[15] * d[42] - 4 * d[5] * d[14] * d[15] * d[42] - 2 * d[3] * d[11] * d[16] * d[42] - 2 * d[2] * d[12] * d[16] * d[42] + 2 * d[5] * d[13] * d[16] * d[42] + 2 * d[4] * d[14] * d[16] * d[42] - 2 * d[4] * d[10] * d[17] * d[42] + 2 * d[5] * d[12] * d[17] * d[42] - 2 * d[1] * d[13] * d[17] * d[42] + 2 * d[3] * d[14] * d[17] * d[42] + d[10] * d[11] * std::pow(d[42], 2) - std::pow(d[14], 2) * std::pow(d[42], 2) + 2 * d[7] * d[9] * d[11] * d[43] - 2 * d[6] * d[11] * d[12] * d[43] + 2 * d[8] * d[12] * d[13] * d[43] - 2 * d[7] * std::pow(d[13], 2) * d[43] - 2 * d[8] * d[9] * d[14] * d[43] + 2 * d[6] * d[13] * d[14] * d[43] - 2 * d[3] * d[11] * d[15] * d[43] - 2 * d[2] * d[12] * d[15] * d[43] + 2 * d[5] * d[13] * d[15] * d[43] + 2 * d[4] * d[14] * d[15] * d[43] + 2 * d[2] * d[9] * d[16] * d[43] + 2 * d[0] * d[11] * d[16] * d[43] - 4 * d[4] * d[13] * d[16] * d[43] - 2 * d[5] * d[9] * d[17] * d[43] + 2 * d[4] * d[12] * d[17] * d[43] + 2 * d[3] * d[13] * d[17] * d[43] - 2 * d[0] * d[14] * d[17] * d[43] - 2 * d[11] * d[12] * d[42] * d[43] + 2 * d[13] * d[14] * d[42] * d[43] + d[9] * d[11] * std::pow(d[43], 2) - std::pow(d[13], 2) * std::pow(d[43], 2) + 2 * d[8] * d[9] * d[10] * d[44] - 2 * d[8] * std::pow(d[12], 2) * d[44] - 2 * d[6] * d[10] * d[13] * d[44] + 2 * d[7] * d[12] * d[13] * d[44] - 2 * d[7] * d[9] * d[14] * d[44] + 2 * d[6] * d[12] * d[14] * d[44] - 2 * d[4] * d[10] * d[15] * d[44] + 2 * d[5] * d[12] * d[15] * d[44] - 2 * d[1] * d[13] * d[15] * d[44] + 2 * d[3] * d[14] * d[15] * d[44] - 2 * d[5] * d[9] * d[16] * d[44] + 2 * d[4] * d[12] * d[16] * d[44] + 2 * d[3] * d[13] * d[16] * d[44] - 2 * d[0] * d[14] * d[16] * d[44] + 2 * d[1] * d[9] * d[17] * d[44] + 2 * d[0] * d[10] * d[17] * d[44] - 4 * d[3] * d[12] * d[17] * d[44] - 2 * d[10] * d[13] * d[42] * d[44] + 2 * d[12] * d[14] * d[42] * d[44] + 2 * d[12] * d[13] * d[43] * d[44] - 2 * d[9] * d[14] * d[43] * d[44] + d[9] * d[10] * std::pow(d[44], 2) - std::pow(d[12], 2) * std::pow(d[44], 2) - d[2] * d[9] * d[10] * d[47] - d[1] * d[9] * d[11] * d[47] - d[0] * d[10] * d[11] * d[47] + 2 * d[3] * d[11] * d[12] * d[47] + d[2] * std::pow(d[12], 2) * d[47] + 2 * d[4] * d[10] * d[13] * d[47] - 2 * d[5] * d[12] * d[13] * d[47] + d[1] * std::pow(d[13], 2) * d[47] + 2 * d[5] * d[9] * d[14] * d[47] - 2 * d[4] * d[12] * d[14] * d[47] - 2 * d[3] * d[13] * d[14] * d[47] + d[0] * std::pow(d[14], 2) * d[47];
    coeffs[51] = 2 * d[6] * d[11] * d[19] * d[42] - 2 * d[8] * d[13] * d[19] * d[42] + 2 * d[2] * d[15] * d[19] * d[42] - 2 * d[4] * d[17] * d[19] * d[42] + 2 * d[6] * d[10] * d[20] * d[42] - 2 * d[7] * d[12] * d[20] * d[42] + 2 * d[1] * d[15] * d[20] * d[42] - 2 * d[3] * d[16] * d[20] * d[42] - 2 * d[7] * d[11] * d[21] * d[42] + 2 * d[8] * d[14] * d[21] * d[42] - 2 * d[2] * d[16] * d[21] * d[42] + 2 * d[5] * d[17] * d[21] * d[42] - 2 * d[8] * d[10] * d[22] * d[42] + 2 * d[7] * d[14] * d[22] * d[42] + 2 * d[5] * d[16] * d[22] * d[42] - 2 * d[1] * d[17] * d[22] * d[42] + 2 * d[8] * d[12] * d[23] * d[42] + 2 * d[7] * d[13] * d[23] * d[42] - 4 * d[6] * d[14] * d[23] * d[42] - 4 * d[5] * d[15] * d[23] * d[42] + 2 * d[4] * d[16] * d[23] * d[42] + 2 * d[3] * d[17] * d[23] * d[42] + 2 * d[2] * d[10] * d[24] * d[42] + 2 * d[1] * d[11] * d[24] * d[42] - 4 * d[5] * d[14] * d[24] * d[42] - 2 * d[3] * d[11] * d[25] * d[42] - 2 * d[2] * d[12] * d[25] * d[42] + 2 * d[5] * d[13] * d[25] * d[42] + 2 * d[4] * d[14] * d[25] * d[42] - 2 * d[4] * d[10] * d[26] * d[42] + 2 * d[5] * d[12] * d[26] * d[42] - 2 * d[1] * d[13] * d[26] * d[42] + 2 * d[3] * d[14] * d[26] * d[42] + d[11] * d[19] * std::pow(d[42], 2) + d[10] * d[20] * std::pow(d[42], 2) - 2 * d[14] * d[23] * std::pow(d[42], 2) + 2 * d[7] * d[11] * d[18] * d[43] - 2 * d[8] * d[14] * d[18] * d[43] + 2 * d[2] * d[16] * d[18] * d[43] - 2 * d[5] * d[17] * d[18] * d[43] + 2 * d[7] * d[9] * d[20] * d[43] - 2 * d[6] * d[12] * d[20] * d[43] - 2 * d[3] * d[15] * d[20] * d[43] + 2 * d[0] * d[16] * d[20] * d[43] - 2 * d[6] * d[11] * d[21] * d[43] + 2 * d[8] * d[13] * d[21] * d[43] - 2 * d[2] * d[15] * d[21] * d[43] + 2 * d[4] * d[17] * d[21] * d[43] + 2 * d[8] * d[12] * d[22] * d[43] - 4 * d[7] * d[13] * d[22] * d[43] + 2 * d[6] * d[14] * d[22] * d[43] + 2 * d[5] * d[15] * d[22] * d[43] - 4 * d[4] * d[16] * d[22] * d[43] + 2 * d[3] * d[17] * d[22] * d[43] - 2 * d[8] * d[9] * d[23] * d[43] + 2 * d[6] * d[13] * d[23] * d[43] + 2 * d[4] * d[15] * d[23] * d[43] - 2 * d[0] * d[17] * d[23] * d[43] - 2 * d[3] * d[11] * d[24] * d[43] - 2 * d[2] * d[12] * d[24] * d[43] + 2 * d[5] * d[13] * d[24] * d[43] + 2 * d[4] * d[14] * d[24] * d[43] + 2 * d[2] * d[9] * d[25] * d[43] + 2 * d[0] * d[11] * d[25] * d[43] - 4 * d[4] * d[13] * d[25] * d[43] - 2 * d[5] * d[9] * d[26] * d[43] + 2 * d[4] * d[12] * d[26] * d[43] + 2 * d[3] * d[13] * d[26] * d[43] - 2 * d[0] * d[14] * d[26] * d[43] - 2 * d[12] * d[20] * d[42] * d[43] - 2 * d[11] * d[21] * d[42] * d[43] + 2 * d[14] * d[22] * d[42] * d[43] + 2 * d[13] * d[23] * d[42] * d[43] + d[11] * d[18] * std::pow(d[43], 2) + d[9] * d[20] * std::pow(d[43], 2) - 2 * d[13] * d[22] * std::pow(d[43], 2) + 2 * d[8] * d[10] * d[18] * d[44] - 2 * d[7] * d[14] * d[18] * d[44] - 2 * d[5] * d[16] * d[18] * d[44] + 2 * d[1] * d[17] * d[18] * d[44] + 2 * d[8] * d[9] * d[19] * d[44] - 2 * d[6] * d[13] * d[19] * d[44] - 2 * d[4] * d[15] * d[19] * d[44] + 2 * d[0] * d[17] * d[19] * d[44] - 4 * d[8] * d[12] * d[21] * d[44] + 2 * d[7] * d[13] * d[21] * d[44] + 2 * d[6] * d[14] * d[21] * d[44] + 2 * d[5] * d[15] * d[21] * d[44] + 2 * d[4] * d[16] * d[21] * d[44] - 4 * d[3] * d[17] * d[21] * d[44] - 2 * d[6] * d[10] * d[22] * d[44] + 2 * d[7] * d[12] * d[22] * d[44] - 2 * d[1] * d[15] * d[22] * d[44] + 2 * d[3] * d[16] * d[22] * d[44] - 2 * d[7] * d[9] * d[23] * d[44] + 2 * d[6] * d[12] * d[23] * d[44] + 2 * d[3] * d[15] * d[23] * d[44] - 2 * d[0] * d[16] * d[23] * d[44] - 2 * d[4] * d[10] * d[24] * d[44] + 2 * d[5] * d[12] * d[24] * d[44] - 2 * d[1] * d[13] * d[24] * d[44] + 2 * d[3] * d[14] * d[24] * d[44] - 2 * d[5] * d[9] * d[25] * d[44] + 2 * d[4] * d[12] * d[25] * d[44] + 2 * d[3] * d[13] * d[25] * d[44] - 2 * d[0] * d[14] * d[25] * d[44] + 2 * d[1] * d[9] * d[26] * d[44] + 2 * d[0] * d[10] * d[26] * d[44] - 4 * d[3] * d[12] * d[26] * d[44] - 2 * d[13] * d[19] * d[42] * d[44] + 2 * d[14] * d[21] * d[42] * d[44] - 2 * d[10] * d[22] * d[42] * d[44] + 2 * d[12] * d[23] * d[42] * d[44] - 2 * d[14] * d[18] * d[43] * d[44] + 2 * d[13] * d[21] * d[43] * d[44] + 2 * d[12] * d[22] * d[43] * d[44] - 2 * d[9] * d[23] * d[43] * d[44] + d[10] * d[18] * std::pow(d[44], 2) + d[9] * d[19] * std::pow(d[44], 2) - 2 * d[12] * d[21] * std::pow(d[44], 2) - d[2] * d[10] * d[18] * d[47] - d[1] * d[11] * d[18] * d[47] + 2 * d[5] * d[14] * d[18] * d[47] - d[2] * d[9] * d[19] * d[47] - d[0] * d[11] * d[19] * d[47] + 2 * d[4] * d[13] * d[19] * d[47] - d[1] * d[9] * d[20] * d[47] - d[0] * d[10] * d[20] * d[47] + 2 * d[3] * d[12] * d[20] * d[47] + 2 * d[3] * d[11] * d[21] * d[47] + 2 * d[2] * d[12] * d[21] * d[47] - 2 * d[5] * d[13] * d[21] * d[47] - 2 * d[4] * d[14] * d[21] * d[47] + 2 * d[4] * d[10] * d[22] * d[47] - 2 * d[5] * d[12] * d[22] * d[47] + 2 * d[1] * d[13] * d[22] * d[47] - 2 * d[3] * d[14] * d[22] * d[47] + 2 * d[5] * d[9] * d[23] * d[47] - 2 * d[4] * d[12] * d[23] * d[47] - 2 * d[3] * d[13] * d[23] * d[47] + 2 * d[0] * d[14] * d[23] * d[47];
    coeffs[52] = 2 * d[6] * d[19] * d[20] * d[42] - 2 * d[7] * d[20] * d[21] * d[42] - 2 * d[8] * d[19] * d[22] * d[42] + 2 * d[8] * d[21] * d[23] * d[42] + 2 * d[7] * d[22] * d[23] * d[42] - 2 * d[6] * std::pow(d[23], 2) * d[42] + 2 * d[2] * d[19] * d[24] * d[42] + 2 * d[1] * d[20] * d[24] * d[42] - 4 * d[5] * d[23] * d[24] * d[42] - 2 * d[3] * d[20] * d[25] * d[42] - 2 * d[2] * d[21] * d[25] * d[42] + 2 * d[5] * d[22] * d[25] * d[42] + 2 * d[4] * d[23] * d[25] * d[42] - 2 * d[4] * d[19] * d[26] * d[42] + 2 * d[5] * d[21] * d[26] * d[42] - 2 * d[1] * d[22] * d[26] * d[42] + 2 * d[3] * d[23] * d[26] * d[42] + d[19] * d[20] * std::pow(d[42], 2) - std::pow(d[23], 2) * std::pow(d[42], 2) + 2 * d[7] * d[18] * d[20] * d[43] - 2 * d[6] * d[20] * d[21] * d[43] + 2 * d[8] * d[21] * d[22] * d[43] - 2 * d[7] * std::pow(d[22], 2) * d[43] - 2 * d[8] * d[18] * d[23] * d[43] + 2 * d[6] * d[22] * d[23] * d[43] - 2 * d[3] * d[20] * d[24] * d[43] - 2 * d[2] * d[21] * d[24] * d[43] + 2 * d[5] * d[22] * d[24] * d[43] + 2 * d[4] * d[23] * d[24] * d[43] + 2 * d[2] * d[18] * d[25] * d[43] + 2 * d[0] * d[20] * d[25] * d[43] - 4 * d[4] * d[22] * d[25] * d[43] - 2 * d[5] * d[18] * d[26] * d[43] + 2 * d[4] * d[21] * d[26] * d[43] + 2 * d[3] * d[22] * d[26] * d[43] - 2 * d[0] * d[23] * d[26] * d[43] - 2 * d[20] * d[21] * d[42] * d[43] + 2 * d[22] * d[23] * d[42] * d[43] + d[18] * d[20] * std::pow(d[43], 2) - std::pow(d[22], 2) * std::pow(d[43], 2) + 2 * d[8] * d[18] * d[19] * d[44] - 2 * d[8] * std::pow(d[21], 2) * d[44] - 2 * d[6] * d[19] * d[22] * d[44] + 2 * d[7] * d[21] * d[22] * d[44] - 2 * d[7] * d[18] * d[23] * d[44] + 2 * d[6] * d[21] * d[23] * d[44] - 2 * d[4] * d[19] * d[24] * d[44] + 2 * d[5] * d[21] * d[24] * d[44] - 2 * d[1] * d[22] * d[24] * d[44] + 2 * d[3] * d[23] * d[24] * d[44] - 2 * d[5] * d[18] * d[25] * d[44] + 2 * d[4] * d[21] * d[25] * d[44] + 2 * d[3] * d[22] * d[25] * d[44] - 2 * d[0] * d[23] * d[25] * d[44] + 2 * d[1] * d[18] * d[26] * d[44] + 2 * d[0] * d[19] * d[26] * d[44] - 4 * d[3] * d[21] * d[26] * d[44] - 2 * d[19] * d[22] * d[42] * d[44] + 2 * d[21] * d[23] * d[42] * d[44] + 2 * d[21] * d[22] * d[43] * d[44] - 2 * d[18] * d[23] * d[43] * d[44] + d[18] * d[19] * std::pow(d[44], 2) - std::pow(d[21], 2) * std::pow(d[44], 2) - d[2] * d[18] * d[19] * d[47] - d[1] * d[18] * d[20] * d[47] - d[0] * d[19] * d[20] * d[47] + 2 * d[3] * d[20] * d[21] * d[47] + d[2] * std::pow(d[21], 2) * d[47] + 2 * d[4] * d[19] * d[22] * d[47] - 2 * d[5] * d[21] * d[22] * d[47] + d[1] * std::pow(d[22], 2) * d[47] + 2 * d[5] * d[18] * d[23] * d[47] - 2 * d[4] * d[21] * d[23] * d[47] - 2 * d[3] * d[22] * d[23] * d[47] + d[0] * std::pow(d[23], 2) * d[47];
    coeffs[53] = 2 * d[6] * d[11] * d[28] * d[42] - 2 * d[8] * d[13] * d[28] * d[42] + 2 * d[2] * d[15] * d[28] * d[42] - 2 * d[4] * d[17] * d[28] * d[42] + 2 * d[6] * d[10] * d[29] * d[42] - 2 * d[7] * d[12] * d[29] * d[42] + 2 * d[1] * d[15] * d[29] * d[42] - 2 * d[3] * d[16] * d[29] * d[42] - 2 * d[7] * d[11] * d[30] * d[42] + 2 * d[8] * d[14] * d[30] * d[42] - 2 * d[2] * d[16] * d[30] * d[42] + 2 * d[5] * d[17] * d[30] * d[42] - 2 * d[8] * d[10] * d[31] * d[42] + 2 * d[7] * d[14] * d[31] * d[42] + 2 * d[5] * d[16] * d[31] * d[42] - 2 * d[1] * d[17] * d[31] * d[42] + 2 * d[8] * d[12] * d[32] * d[42] + 2 * d[7] * d[13] * d[32] * d[42] - 4 * d[6] * d[14] * d[32] * d[42] - 4 * d[5] * d[15] * d[32] * d[42] + 2 * d[4] * d[16] * d[32] * d[42] + 2 * d[3] * d[17] * d[32] * d[42] + 2 * d[2] * d[10] * d[33] * d[42] + 2 * d[1] * d[11] * d[33] * d[42] - 4 * d[5] * d[14] * d[33] * d[42] - 2 * d[3] * d[11] * d[34] * d[42] - 2 * d[2] * d[12] * d[34] * d[42] + 2 * d[5] * d[13] * d[34] * d[42] + 2 * d[4] * d[14] * d[34] * d[42] - 2 * d[4] * d[10] * d[35] * d[42] + 2 * d[5] * d[12] * d[35] * d[42] - 2 * d[1] * d[13] * d[35] * d[42] + 2 * d[3] * d[14] * d[35] * d[42] + d[11] * d[28] * std::pow(d[42], 2) + d[10] * d[29] * std::pow(d[42], 2) - 2 * d[14] * d[32] * std::pow(d[42], 2) + 2 * d[7] * d[11] * d[27] * d[43] - 2 * d[8] * d[14] * d[27] * d[43] + 2 * d[2] * d[16] * d[27] * d[43] - 2 * d[5] * d[17] * d[27] * d[43] + 2 * d[7] * d[9] * d[29] * d[43] - 2 * d[6] * d[12] * d[29] * d[43] - 2 * d[3] * d[15] * d[29] * d[43] + 2 * d[0] * d[16] * d[29] * d[43] - 2 * d[6] * d[11] * d[30] * d[43] + 2 * d[8] * d[13] * d[30] * d[43] - 2 * d[2] * d[15] * d[30] * d[43] + 2 * d[4] * d[17] * d[30] * d[43] + 2 * d[8] * d[12] * d[31] * d[43] - 4 * d[7] * d[13] * d[31] * d[43] + 2 * d[6] * d[14] * d[31] * d[43] + 2 * d[5] * d[15] * d[31] * d[43] - 4 * d[4] * d[16] * d[31] * d[43] + 2 * d[3] * d[17] * d[31] * d[43] - 2 * d[8] * d[9] * d[32] * d[43] + 2 * d[6] * d[13] * d[32] * d[43] + 2 * d[4] * d[15] * d[32] * d[43] - 2 * d[0] * d[17] * d[32] * d[43] - 2 * d[3] * d[11] * d[33] * d[43] - 2 * d[2] * d[12] * d[33] * d[43] + 2 * d[5] * d[13] * d[33] * d[43] + 2 * d[4] * d[14] * d[33] * d[43] + 2 * d[2] * d[9] * d[34] * d[43] + 2 * d[0] * d[11] * d[34] * d[43] - 4 * d[4] * d[13] * d[34] * d[43] - 2 * d[5] * d[9] * d[35] * d[43] + 2 * d[4] * d[12] * d[35] * d[43] + 2 * d[3] * d[13] * d[35] * d[43] - 2 * d[0] * d[14] * d[35] * d[43] - 2 * d[12] * d[29] * d[42] * d[43] - 2 * d[11] * d[30] * d[42] * d[43] + 2 * d[14] * d[31] * d[42] * d[43] + 2 * d[13] * d[32] * d[42] * d[43] + d[11] * d[27] * std::pow(d[43], 2) + d[9] * d[29] * std::pow(d[43], 2) - 2 * d[13] * d[31] * std::pow(d[43], 2) + 2 * d[8] * d[10] * d[27] * d[44] - 2 * d[7] * d[14] * d[27] * d[44] - 2 * d[5] * d[16] * d[27] * d[44] + 2 * d[1] * d[17] * d[27] * d[44] + 2 * d[8] * d[9] * d[28] * d[44] - 2 * d[6] * d[13] * d[28] * d[44] - 2 * d[4] * d[15] * d[28] * d[44] + 2 * d[0] * d[17] * d[28] * d[44] - 4 * d[8] * d[12] * d[30] * d[44] + 2 * d[7] * d[13] * d[30] * d[44] + 2 * d[6] * d[14] * d[30] * d[44] + 2 * d[5] * d[15] * d[30] * d[44] + 2 * d[4] * d[16] * d[30] * d[44] - 4 * d[3] * d[17] * d[30] * d[44] - 2 * d[6] * d[10] * d[31] * d[44] + 2 * d[7] * d[12] * d[31] * d[44] - 2 * d[1] * d[15] * d[31] * d[44] + 2 * d[3] * d[16] * d[31] * d[44] - 2 * d[7] * d[9] * d[32] * d[44] + 2 * d[6] * d[12] * d[32] * d[44] + 2 * d[3] * d[15] * d[32] * d[44] - 2 * d[0] * d[16] * d[32] * d[44] - 2 * d[4] * d[10] * d[33] * d[44] + 2 * d[5] * d[12] * d[33] * d[44] - 2 * d[1] * d[13] * d[33] * d[44] + 2 * d[3] * d[14] * d[33] * d[44] - 2 * d[5] * d[9] * d[34] * d[44] + 2 * d[4] * d[12] * d[34] * d[44] + 2 * d[3] * d[13] * d[34] * d[44] - 2 * d[0] * d[14] * d[34] * d[44] + 2 * d[1] * d[9] * d[35] * d[44] + 2 * d[0] * d[10] * d[35] * d[44] - 4 * d[3] * d[12] * d[35] * d[44] - 2 * d[13] * d[28] * d[42] * d[44] + 2 * d[14] * d[30] * d[42] * d[44] - 2 * d[10] * d[31] * d[42] * d[44] + 2 * d[12] * d[32] * d[42] * d[44] - 2 * d[14] * d[27] * d[43] * d[44] + 2 * d[13] * d[30] * d[43] * d[44] + 2 * d[12] * d[31] * d[43] * d[44] - 2 * d[9] * d[32] * d[43] * d[44] + d[10] * d[27] * std::pow(d[44], 2) + d[9] * d[28] * std::pow(d[44], 2) - 2 * d[12] * d[30] * std::pow(d[44], 2) - d[2] * d[10] * d[27] * d[47] - d[1] * d[11] * d[27] * d[47] + 2 * d[5] * d[14] * d[27] * d[47] - d[2] * d[9] * d[28] * d[47] - d[0] * d[11] * d[28] * d[47] + 2 * d[4] * d[13] * d[28] * d[47] - d[1] * d[9] * d[29] * d[47] - d[0] * d[10] * d[29] * d[47] + 2 * d[3] * d[12] * d[29] * d[47] + 2 * d[3] * d[11] * d[30] * d[47] + 2 * d[2] * d[12] * d[30] * d[47] - 2 * d[5] * d[13] * d[30] * d[47] - 2 * d[4] * d[14] * d[30] * d[47] + 2 * d[4] * d[10] * d[31] * d[47] - 2 * d[5] * d[12] * d[31] * d[47] + 2 * d[1] * d[13] * d[31] * d[47] - 2 * d[3] * d[14] * d[31] * d[47] + 2 * d[5] * d[9] * d[32] * d[47] - 2 * d[4] * d[12] * d[32] * d[47] - 2 * d[3] * d[13] * d[32] * d[47] + 2 * d[0] * d[14] * d[32] * d[47];
    coeffs[54] = 2 * d[6] * d[20] * d[28] * d[42] - 2 * d[8] * d[22] * d[28] * d[42] + 2 * d[2] * d[24] * d[28] * d[42] - 2 * d[4] * d[26] * d[28] * d[42] + 2 * d[6] * d[19] * d[29] * d[42] - 2 * d[7] * d[21] * d[29] * d[42] + 2 * d[1] * d[24] * d[29] * d[42] - 2 * d[3] * d[25] * d[29] * d[42] - 2 * d[7] * d[20] * d[30] * d[42] + 2 * d[8] * d[23] * d[30] * d[42] - 2 * d[2] * d[25] * d[30] * d[42] + 2 * d[5] * d[26] * d[30] * d[42] - 2 * d[8] * d[19] * d[31] * d[42] + 2 * d[7] * d[23] * d[31] * d[42] + 2 * d[5] * d[25] * d[31] * d[42] - 2 * d[1] * d[26] * d[31] * d[42] + 2 * d[8] * d[21] * d[32] * d[42] + 2 * d[7] * d[22] * d[32] * d[42] - 4 * d[6] * d[23] * d[32] * d[42] - 4 * d[5] * d[24] * d[32] * d[42] + 2 * d[4] * d[25] * d[32] * d[42] + 2 * d[3] * d[26] * d[32] * d[42] + 2 * d[2] * d[19] * d[33] * d[42] + 2 * d[1] * d[20] * d[33] * d[42] - 4 * d[5] * d[23] * d[33] * d[42] - 2 * d[3] * d[20] * d[34] * d[42] - 2 * d[2] * d[21] * d[34] * d[42] + 2 * d[5] * d[22] * d[34] * d[42] + 2 * d[4] * d[23] * d[34] * d[42] - 2 * d[4] * d[19] * d[35] * d[42] + 2 * d[5] * d[21] * d[35] * d[42] - 2 * d[1] * d[22] * d[35] * d[42] + 2 * d[3] * d[23] * d[35] * d[42] + d[20] * d[28] * std::pow(d[42], 2) + d[19] * d[29] * std::pow(d[42], 2) - 2 * d[23] * d[32] * std::pow(d[42], 2) + 2 * d[7] * d[20] * d[27] * d[43] - 2 * d[8] * d[23] * d[27] * d[43] + 2 * d[2] * d[25] * d[27] * d[43] - 2 * d[5] * d[26] * d[27] * d[43] + 2 * d[7] * d[18] * d[29] * d[43] - 2 * d[6] * d[21] * d[29] * d[43] - 2 * d[3] * d[24] * d[29] * d[43] + 2 * d[0] * d[25] * d[29] * d[43] - 2 * d[6] * d[20] * d[30] * d[43] + 2 * d[8] * d[22] * d[30] * d[43] - 2 * d[2] * d[24] * d[30] * d[43] + 2 * d[4] * d[26] * d[30] * d[43] + 2 * d[8] * d[21] * d[31] * d[43] - 4 * d[7] * d[22] * d[31] * d[43] + 2 * d[6] * d[23] * d[31] * d[43] + 2 * d[5] * d[24] * d[31] * d[43] - 4 * d[4] * d[25] * d[31] * d[43] + 2 * d[3] * d[26] * d[31] * d[43] - 2 * d[8] * d[18] * d[32] * d[43] + 2 * d[6] * d[22] * d[32] * d[43] + 2 * d[4] * d[24] * d[32] * d[43] - 2 * d[0] * d[26] * d[32] * d[43] - 2 * d[3] * d[20] * d[33] * d[43] - 2 * d[2] * d[21] * d[33] * d[43] + 2 * d[5] * d[22] * d[33] * d[43] + 2 * d[4] * d[23] * d[33] * d[43] + 2 * d[2] * d[18] * d[34] * d[43] + 2 * d[0] * d[20] * d[34] * d[43] - 4 * d[4] * d[22] * d[34] * d[43] - 2 * d[5] * d[18] * d[35] * d[43] + 2 * d[4] * d[21] * d[35] * d[43] + 2 * d[3] * d[22] * d[35] * d[43] - 2 * d[0] * d[23] * d[35] * d[43] - 2 * d[21] * d[29] * d[42] * d[43] - 2 * d[20] * d[30] * d[42] * d[43] + 2 * d[23] * d[31] * d[42] * d[43] + 2 * d[22] * d[32] * d[42] * d[43] + d[20] * d[27] * std::pow(d[43], 2) + d[18] * d[29] * std::pow(d[43], 2) - 2 * d[22] * d[31] * std::pow(d[43], 2) + 2 * d[8] * d[19] * d[27] * d[44] - 2 * d[7] * d[23] * d[27] * d[44] - 2 * d[5] * d[25] * d[27] * d[44] + 2 * d[1] * d[26] * d[27] * d[44] + 2 * d[8] * d[18] * d[28] * d[44] - 2 * d[6] * d[22] * d[28] * d[44] - 2 * d[4] * d[24] * d[28] * d[44] + 2 * d[0] * d[26] * d[28] * d[44] - 4 * d[8] * d[21] * d[30] * d[44] + 2 * d[7] * d[22] * d[30] * d[44] + 2 * d[6] * d[23] * d[30] * d[44] + 2 * d[5] * d[24] * d[30] * d[44] + 2 * d[4] * d[25] * d[30] * d[44] - 4 * d[3] * d[26] * d[30] * d[44] - 2 * d[6] * d[19] * d[31] * d[44] + 2 * d[7] * d[21] * d[31] * d[44] - 2 * d[1] * d[24] * d[31] * d[44] + 2 * d[3] * d[25] * d[31] * d[44] - 2 * d[7] * d[18] * d[32] * d[44] + 2 * d[6] * d[21] * d[32] * d[44] + 2 * d[3] * d[24] * d[32] * d[44] - 2 * d[0] * d[25] * d[32] * d[44] - 2 * d[4] * d[19] * d[33] * d[44] + 2 * d[5] * d[21] * d[33] * d[44] - 2 * d[1] * d[22] * d[33] * d[44] + 2 * d[3] * d[23] * d[33] * d[44] - 2 * d[5] * d[18] * d[34] * d[44] + 2 * d[4] * d[21] * d[34] * d[44] + 2 * d[3] * d[22] * d[34] * d[44] - 2 * d[0] * d[23] * d[34] * d[44] + 2 * d[1] * d[18] * d[35] * d[44] + 2 * d[0] * d[19] * d[35] * d[44] - 4 * d[3] * d[21] * d[35] * d[44] - 2 * d[22] * d[28] * d[42] * d[44] + 2 * d[23] * d[30] * d[42] * d[44] - 2 * d[19] * d[31] * d[42] * d[44] + 2 * d[21] * d[32] * d[42] * d[44] - 2 * d[23] * d[27] * d[43] * d[44] + 2 * d[22] * d[30] * d[43] * d[44] + 2 * d[21] * d[31] * d[43] * d[44] - 2 * d[18] * d[32] * d[43] * d[44] + d[19] * d[27] * std::pow(d[44], 2) + d[18] * d[28] * std::pow(d[44], 2) - 2 * d[21] * d[30] * std::pow(d[44], 2) - d[2] * d[19] * d[27] * d[47] - d[1] * d[20] * d[27] * d[47] + 2 * d[5] * d[23] * d[27] * d[47] - d[2] * d[18] * d[28] * d[47] - d[0] * d[20] * d[28] * d[47] + 2 * d[4] * d[22] * d[28] * d[47] - d[1] * d[18] * d[29] * d[47] - d[0] * d[19] * d[29] * d[47] + 2 * d[3] * d[21] * d[29] * d[47] + 2 * d[3] * d[20] * d[30] * d[47] + 2 * d[2] * d[21] * d[30] * d[47] - 2 * d[5] * d[22] * d[30] * d[47] - 2 * d[4] * d[23] * d[30] * d[47] + 2 * d[4] * d[19] * d[31] * d[47] - 2 * d[5] * d[21] * d[31] * d[47] + 2 * d[1] * d[22] * d[31] * d[47] - 2 * d[3] * d[23] * d[31] * d[47] + 2 * d[5] * d[18] * d[32] * d[47] - 2 * d[4] * d[21] * d[32] * d[47] - 2 * d[3] * d[22] * d[32] * d[47] + 2 * d[0] * d[23] * d[32] * d[47];
    coeffs[55] = 2 * d[6] * d[28] * d[29] * d[42] - 2 * d[7] * d[29] * d[30] * d[42] - 2 * d[8] * d[28] * d[31] * d[42] + 2 * d[8] * d[30] * d[32] * d[42] + 2 * d[7] * d[31] * d[32] * d[42] - 2 * d[6] * std::pow(d[32], 2) * d[42] + 2 * d[2] * d[28] * d[33] * d[42] + 2 * d[1] * d[29] * d[33] * d[42] - 4 * d[5] * d[32] * d[33] * d[42] - 2 * d[3] * d[29] * d[34] * d[42] - 2 * d[2] * d[30] * d[34] * d[42] + 2 * d[5] * d[31] * d[34] * d[42] + 2 * d[4] * d[32] * d[34] * d[42] - 2 * d[4] * d[28] * d[35] * d[42] + 2 * d[5] * d[30] * d[35] * d[42] - 2 * d[1] * d[31] * d[35] * d[42] + 2 * d[3] * d[32] * d[35] * d[42] + d[28] * d[29] * std::pow(d[42], 2) - std::pow(d[32], 2) * std::pow(d[42], 2) + 2 * d[7] * d[27] * d[29] * d[43] - 2 * d[6] * d[29] * d[30] * d[43] + 2 * d[8] * d[30] * d[31] * d[43] - 2 * d[7] * std::pow(d[31], 2) * d[43] - 2 * d[8] * d[27] * d[32] * d[43] + 2 * d[6] * d[31] * d[32] * d[43] - 2 * d[3] * d[29] * d[33] * d[43] - 2 * d[2] * d[30] * d[33] * d[43] + 2 * d[5] * d[31] * d[33] * d[43] + 2 * d[4] * d[32] * d[33] * d[43] + 2 * d[2] * d[27] * d[34] * d[43] + 2 * d[0] * d[29] * d[34] * d[43] - 4 * d[4] * d[31] * d[34] * d[43] - 2 * d[5] * d[27] * d[35] * d[43] + 2 * d[4] * d[30] * d[35] * d[43] + 2 * d[3] * d[31] * d[35] * d[43] - 2 * d[0] * d[32] * d[35] * d[43] - 2 * d[29] * d[30] * d[42] * d[43] + 2 * d[31] * d[32] * d[42] * d[43] + d[27] * d[29] * std::pow(d[43], 2) - std::pow(d[31], 2) * std::pow(d[43], 2) + 2 * d[8] * d[27] * d[28] * d[44] - 2 * d[8] * std::pow(d[30], 2) * d[44] - 2 * d[6] * d[28] * d[31] * d[44] + 2 * d[7] * d[30] * d[31] * d[44] - 2 * d[7] * d[27] * d[32] * d[44] + 2 * d[6] * d[30] * d[32] * d[44] - 2 * d[4] * d[28] * d[33] * d[44] + 2 * d[5] * d[30] * d[33] * d[44] - 2 * d[1] * d[31] * d[33] * d[44] + 2 * d[3] * d[32] * d[33] * d[44] - 2 * d[5] * d[27] * d[34] * d[44] + 2 * d[4] * d[30] * d[34] * d[44] + 2 * d[3] * d[31] * d[34] * d[44] - 2 * d[0] * d[32] * d[34] * d[44] + 2 * d[1] * d[27] * d[35] * d[44] + 2 * d[0] * d[28] * d[35] * d[44] - 4 * d[3] * d[30] * d[35] * d[44] - 2 * d[28] * d[31] * d[42] * d[44] + 2 * d[30] * d[32] * d[42] * d[44] + 2 * d[30] * d[31] * d[43] * d[44] - 2 * d[27] * d[32] * d[43] * d[44] + d[27] * d[28] * std::pow(d[44], 2) - std::pow(d[30], 2) * std::pow(d[44], 2) - d[2] * d[27] * d[28] * d[47] - d[1] * d[27] * d[29] * d[47] - d[0] * d[28] * d[29] * d[47] + 2 * d[3] * d[29] * d[30] * d[47] + d[2] * std::pow(d[30], 2) * d[47] + 2 * d[4] * d[28] * d[31] * d[47] - 2 * d[5] * d[30] * d[31] * d[47] + d[1] * std::pow(d[31], 2) * d[47] + 2 * d[5] * d[27] * d[32] * d[47] - 2 * d[4] * d[30] * d[32] * d[47] - 2 * d[3] * d[31] * d[32] * d[47] + d[0] * std::pow(d[32], 2) * d[47];
    coeffs[56] = 2 * d[2] * d[6] * d[10] * d[42] - 2 * d[4] * d[8] * d[10] * d[42] + 2 * d[1] * d[6] * d[11] * d[42] - 2 * d[3] * d[7] * d[11] * d[42] - 2 * d[2] * d[7] * d[12] * d[42] + 2 * d[5] * d[8] * d[12] * d[42] + 2 * d[5] * d[7] * d[13] * d[42] - 2 * d[1] * d[8] * d[13] * d[42] - 4 * d[5] * d[6] * d[14] * d[42] + 2 * d[4] * d[7] * d[14] * d[42] + 2 * d[3] * d[8] * d[14] * d[42] + 2 * d[1] * d[2] * d[15] * d[42] - 2 * std::pow(d[5], 2) * d[15] * d[42] - 2 * d[2] * d[3] * d[16] * d[42] + 2 * d[4] * d[5] * d[16] * d[42] - 2 * d[1] * d[4] * d[17] * d[42] + 2 * d[3] * d[5] * d[17] * d[42] + d[2] * d[10] * std::pow(d[42], 2) + d[1] * d[11] * std::pow(d[42], 2) - 2 * d[5] * d[14] * std::pow(d[42], 2) + 2 * d[2] * d[7] * d[9] * d[43] - 2 * d[5] * d[8] * d[9] * d[43] - 2 * d[3] * d[6] * d[11] * d[43] + 2 * d[0] * d[7] * d[11] * d[43] - 2 * d[2] * d[6] * d[12] * d[43] + 2 * d[4] * d[8] * d[12] * d[43] + 2 * d[5] * d[6] * d[13] * d[43] - 4 * d[4] * d[7] * d[13] * d[43] + 2 * d[3] * d[8] * d[13] * d[43] + 2 * d[4] * d[6] * d[14] * d[43] - 2 * d[0] * d[8] * d[14] * d[43] - 2 * d[2] * d[3] * d[15] * d[43] + 2 * d[4] * d[5] * d[15] * d[43] + 2 * d[0] * d[2] * d[16] * d[43] - 2 * std::pow(d[4], 2) * d[16] * d[43] + 2 * d[3] * d[4] * d[17] * d[43] - 2 * d[0] * d[5] * d[17] * d[43] - 2 * d[3] * d[11] * d[42] * d[43] - 2 * d[2] * d[12] * d[42] * d[43] + 2 * d[5] * d[13] * d[42] * d[43] + 2 * d[4] * d[14] * d[42] * d[43] + d[2] * d[9] * std::pow(d[43], 2) + d[0] * d[11] * std::pow(d[43], 2) - 2 * d[4] * d[13] * std::pow(d[43], 2) - 2 * d[5] * d[7] * d[9] * d[44] + 2 * d[1] * d[8] * d[9] * d[44] - 2 * d[4] * d[6] * d[10] * d[44] + 2 * d[0] * d[8] * d[10] * d[44] + 2 * d[5] * d[6] * d[12] * d[44] + 2 * d[4] * d[7] * d[12] * d[44] - 4 * d[3] * d[8] * d[12] * d[44] - 2 * d[1] * d[6] * d[13] * d[44] + 2 * d[3] * d[7] * d[13] * d[44] + 2 * d[3] * d[6] * d[14] * d[44] - 2 * d[0] * d[7] * d[14] * d[44] - 2 * d[1] * d[4] * d[15] * d[44] + 2 * d[3] * d[5] * d[15] * d[44] + 2 * d[3] * d[4] * d[16] * d[44] - 2 * d[0] * d[5] * d[16] * d[44] + 2 * d[0] * d[1] * d[17] * d[44] - 2 * std::pow(d[3], 2) * d[17] * d[44] - 2 * d[4] * d[10] * d[42] * d[44] + 2 * d[5] * d[12] * d[42] * d[44] - 2 * d[1] * d[13] * d[42] * d[44] + 2 * d[3] * d[14] * d[42] * d[44] - 2 * d[5] * d[9] * d[43] * d[44] + 2 * d[4] * d[12] * d[43] * d[44] + 2 * d[3] * d[13] * d[43] * d[44] - 2 * d[0] * d[14] * d[43] * d[44] + d[1] * d[9] * std::pow(d[44], 2) + d[0] * d[10] * std::pow(d[44], 2) - 2 * d[3] * d[12] * std::pow(d[44], 2) - d[1] * d[2] * d[9] * d[47] + std::pow(d[5], 2) * d[9] * d[47] - d[0] * d[2] * d[10] * d[47] + std::pow(d[4], 2) * d[10] * d[47] - d[0] * d[1] * d[11] * d[47] + std::pow(d[3], 2) * d[11] * d[47] + 2 * d[2] * d[3] * d[12] * d[47] - 2 * d[4] * d[5] * d[12] * d[47] + 2 * d[1] * d[4] * d[13] * d[47] - 2 * d[3] * d[5] * d[13] * d[47] - 2 * d[3] * d[4] * d[14] * d[47] + 2 * d[0] * d[5] * d[14] * d[47];
    coeffs[57] = 2 * d[2] * d[6] * d[19] * d[42] - 2 * d[4] * d[8] * d[19] * d[42] + 2 * d[1] * d[6] * d[20] * d[42] - 2 * d[3] * d[7] * d[20] * d[42] - 2 * d[2] * d[7] * d[21] * d[42] + 2 * d[5] * d[8] * d[21] * d[42] + 2 * d[5] * d[7] * d[22] * d[42] - 2 * d[1] * d[8] * d[22] * d[42] - 4 * d[5] * d[6] * d[23] * d[42] + 2 * d[4] * d[7] * d[23] * d[42] + 2 * d[3] * d[8] * d[23] * d[42] + 2 * d[1] * d[2] * d[24] * d[42] - 2 * std::pow(d[5], 2) * d[24] * d[42] - 2 * d[2] * d[3] * d[25] * d[42] + 2 * d[4] * d[5] * d[25] * d[42] - 2 * d[1] * d[4] * d[26] * d[42] + 2 * d[3] * d[5] * d[26] * d[42] + d[2] * d[19] * std::pow(d[42], 2) + d[1] * d[20] * std::pow(d[42], 2) - 2 * d[5] * d[23] * std::pow(d[42], 2) + 2 * d[2] * d[7] * d[18] * d[43] - 2 * d[5] * d[8] * d[18] * d[43] - 2 * d[3] * d[6] * d[20] * d[43] + 2 * d[0] * d[7] * d[20] * d[43] - 2 * d[2] * d[6] * d[21] * d[43] + 2 * d[4] * d[8] * d[21] * d[43] + 2 * d[5] * d[6] * d[22] * d[43] - 4 * d[4] * d[7] * d[22] * d[43] + 2 * d[3] * d[8] * d[22] * d[43] + 2 * d[4] * d[6] * d[23] * d[43] - 2 * d[0] * d[8] * d[23] * d[43] - 2 * d[2] * d[3] * d[24] * d[43] + 2 * d[4] * d[5] * d[24] * d[43] + 2 * d[0] * d[2] * d[25] * d[43] - 2 * std::pow(d[4], 2) * d[25] * d[43] + 2 * d[3] * d[4] * d[26] * d[43] - 2 * d[0] * d[5] * d[26] * d[43] - 2 * d[3] * d[20] * d[42] * d[43] - 2 * d[2] * d[21] * d[42] * d[43] + 2 * d[5] * d[22] * d[42] * d[43] + 2 * d[4] * d[23] * d[42] * d[43] + d[2] * d[18] * std::pow(d[43], 2) + d[0] * d[20] * std::pow(d[43], 2) - 2 * d[4] * d[22] * std::pow(d[43], 2) - 2 * d[5] * d[7] * d[18] * d[44] + 2 * d[1] * d[8] * d[18] * d[44] - 2 * d[4] * d[6] * d[19] * d[44] + 2 * d[0] * d[8] * d[19] * d[44] + 2 * d[5] * d[6] * d[21] * d[44] + 2 * d[4] * d[7] * d[21] * d[44] - 4 * d[3] * d[8] * d[21] * d[44] - 2 * d[1] * d[6] * d[22] * d[44] + 2 * d[3] * d[7] * d[22] * d[44] + 2 * d[3] * d[6] * d[23] * d[44] - 2 * d[0] * d[7] * d[23] * d[44] - 2 * d[1] * d[4] * d[24] * d[44] + 2 * d[3] * d[5] * d[24] * d[44] + 2 * d[3] * d[4] * d[25] * d[44] - 2 * d[0] * d[5] * d[25] * d[44] + 2 * d[0] * d[1] * d[26] * d[44] - 2 * std::pow(d[3], 2) * d[26] * d[44] - 2 * d[4] * d[19] * d[42] * d[44] + 2 * d[5] * d[21] * d[42] * d[44] - 2 * d[1] * d[22] * d[42] * d[44] + 2 * d[3] * d[23] * d[42] * d[44] - 2 * d[5] * d[18] * d[43] * d[44] + 2 * d[4] * d[21] * d[43] * d[44] + 2 * d[3] * d[22] * d[43] * d[44] - 2 * d[0] * d[23] * d[43] * d[44] + d[1] * d[18] * std::pow(d[44], 2) + d[0] * d[19] * std::pow(d[44], 2) - 2 * d[3] * d[21] * std::pow(d[44], 2) - d[1] * d[2] * d[18] * d[47] + std::pow(d[5], 2) * d[18] * d[47] - d[0] * d[2] * d[19] * d[47] + std::pow(d[4], 2) * d[19] * d[47] - d[0] * d[1] * d[20] * d[47] + std::pow(d[3], 2) * d[20] * d[47] + 2 * d[2] * d[3] * d[21] * d[47] - 2 * d[4] * d[5] * d[21] * d[47] + 2 * d[1] * d[4] * d[22] * d[47] - 2 * d[3] * d[5] * d[22] * d[47] - 2 * d[3] * d[4] * d[23] * d[47] + 2 * d[0] * d[5] * d[23] * d[47];
    coeffs[58] = 2 * d[2] * d[6] * d[28] * d[42] - 2 * d[4] * d[8] * d[28] * d[42] + 2 * d[1] * d[6] * d[29] * d[42] - 2 * d[3] * d[7] * d[29] * d[42] - 2 * d[2] * d[7] * d[30] * d[42] + 2 * d[5] * d[8] * d[30] * d[42] + 2 * d[5] * d[7] * d[31] * d[42] - 2 * d[1] * d[8] * d[31] * d[42] - 4 * d[5] * d[6] * d[32] * d[42] + 2 * d[4] * d[7] * d[32] * d[42] + 2 * d[3] * d[8] * d[32] * d[42] + 2 * d[1] * d[2] * d[33] * d[42] - 2 * std::pow(d[5], 2) * d[33] * d[42] - 2 * d[2] * d[3] * d[34] * d[42] + 2 * d[4] * d[5] * d[34] * d[42] - 2 * d[1] * d[4] * d[35] * d[42] + 2 * d[3] * d[5] * d[35] * d[42] + d[2] * d[28] * std::pow(d[42], 2) + d[1] * d[29] * std::pow(d[42], 2) - 2 * d[5] * d[32] * std::pow(d[42], 2) + 2 * d[2] * d[7] * d[27] * d[43] - 2 * d[5] * d[8] * d[27] * d[43] - 2 * d[3] * d[6] * d[29] * d[43] + 2 * d[0] * d[7] * d[29] * d[43] - 2 * d[2] * d[6] * d[30] * d[43] + 2 * d[4] * d[8] * d[30] * d[43] + 2 * d[5] * d[6] * d[31] * d[43] - 4 * d[4] * d[7] * d[31] * d[43] + 2 * d[3] * d[8] * d[31] * d[43] + 2 * d[4] * d[6] * d[32] * d[43] - 2 * d[0] * d[8] * d[32] * d[43] - 2 * d[2] * d[3] * d[33] * d[43] + 2 * d[4] * d[5] * d[33] * d[43] + 2 * d[0] * d[2] * d[34] * d[43] - 2 * std::pow(d[4], 2) * d[34] * d[43] + 2 * d[3] * d[4] * d[35] * d[43] - 2 * d[0] * d[5] * d[35] * d[43] - 2 * d[3] * d[29] * d[42] * d[43] - 2 * d[2] * d[30] * d[42] * d[43] + 2 * d[5] * d[31] * d[42] * d[43] + 2 * d[4] * d[32] * d[42] * d[43] + d[2] * d[27] * std::pow(d[43], 2) + d[0] * d[29] * std::pow(d[43], 2) - 2 * d[4] * d[31] * std::pow(d[43], 2) - 2 * d[5] * d[7] * d[27] * d[44] + 2 * d[1] * d[8] * d[27] * d[44] - 2 * d[4] * d[6] * d[28] * d[44] + 2 * d[0] * d[8] * d[28] * d[44] + 2 * d[5] * d[6] * d[30] * d[44] + 2 * d[4] * d[7] * d[30] * d[44] - 4 * d[3] * d[8] * d[30] * d[44] - 2 * d[1] * d[6] * d[31] * d[44] + 2 * d[3] * d[7] * d[31] * d[44] + 2 * d[3] * d[6] * d[32] * d[44] - 2 * d[0] * d[7] * d[32] * d[44] - 2 * d[1] * d[4] * d[33] * d[44] + 2 * d[3] * d[5] * d[33] * d[44] + 2 * d[3] * d[4] * d[34] * d[44] - 2 * d[0] * d[5] * d[34] * d[44] + 2 * d[0] * d[1] * d[35] * d[44] - 2 * std::pow(d[3], 2) * d[35] * d[44] - 2 * d[4] * d[28] * d[42] * d[44] + 2 * d[5] * d[30] * d[42] * d[44] - 2 * d[1] * d[31] * d[42] * d[44] + 2 * d[3] * d[32] * d[42] * d[44] - 2 * d[5] * d[27] * d[43] * d[44] + 2 * d[4] * d[30] * d[43] * d[44] + 2 * d[3] * d[31] * d[43] * d[44] - 2 * d[0] * d[32] * d[43] * d[44] + d[1] * d[27] * std::pow(d[44], 2) + d[0] * d[28] * std::pow(d[44], 2) - 2 * d[3] * d[30] * std::pow(d[44], 2) - d[1] * d[2] * d[27] * d[47] + std::pow(d[5], 2) * d[27] * d[47] - d[0] * d[2] * d[28] * d[47] + std::pow(d[4], 2) * d[28] * d[47] - d[0] * d[1] * d[29] * d[47] + std::pow(d[3], 2) * d[29] * d[47] + 2 * d[2] * d[3] * d[30] * d[47] - 2 * d[4] * d[5] * d[30] * d[47] + 2 * d[1] * d[4] * d[31] * d[47] - 2 * d[3] * d[5] * d[31] * d[47] - 2 * d[3] * d[4] * d[32] * d[47] + 2 * d[0] * d[5] * d[32] * d[47];
    coeffs[59] = 2 * d[1] * d[2] * d[6] * d[42] - 2 * std::pow(d[5], 2) * d[6] * d[42] - 2 * d[2] * d[3] * d[7] * d[42] + 2 * d[4] * d[5] * d[7] * d[42] - 2 * d[1] * d[4] * d[8] * d[42] + 2 * d[3] * d[5] * d[8] * d[42] + d[1] * d[2] * std::pow(d[42], 2) - std::pow(d[5], 2) * std::pow(d[42], 2) - 2 * d[2] * d[3] * d[6] * d[43] + 2 * d[4] * d[5] * d[6] * d[43] + 2 * d[0] * d[2] * d[7] * d[43] - 2 * std::pow(d[4], 2) * d[7] * d[43] + 2 * d[3] * d[4] * d[8] * d[43] - 2 * d[0] * d[5] * d[8] * d[43] - 2 * d[2] * d[3] * d[42] * d[43] + 2 * d[4] * d[5] * d[42] * d[43] + d[0] * d[2] * std::pow(d[43], 2) - std::pow(d[4], 2) * std::pow(d[43], 2) - 2 * d[1] * d[4] * d[6] * d[44] + 2 * d[3] * d[5] * d[6] * d[44] + 2 * d[3] * d[4] * d[7] * d[44] - 2 * d[0] * d[5] * d[7] * d[44] + 2 * d[0] * d[1] * d[8] * d[44] - 2 * std::pow(d[3], 2) * d[8] * d[44] - 2 * d[1] * d[4] * d[42] * d[44] + 2 * d[3] * d[5] * d[42] * d[44] + 2 * d[3] * d[4] * d[43] * d[44] - 2 * d[0] * d[5] * d[43] * d[44] + d[0] * d[1] * std::pow(d[44], 2) - std::pow(d[3], 2) * std::pow(d[44], 2) - d[0] * d[1] * d[2] * d[47] + d[2] * std::pow(d[3], 2) * d[47] + d[1] * std::pow(d[4], 2) * d[47] - 2 * d[3] * d[4] * d[5] * d[47] + d[0] * std::pow(d[5], 2) * d[47];

    // Setup elimination template
    static const int coeffs0_ind[] = {0, 20, 40, 1, 0, 20, 21, 40, 41, 2, 1, 21, 22, 41, 42, 3, 2, 22, 23, 42, 43, 3, 23, 43, 0, 20, 1, 0, 20, 21, 40, 4, 24, 2, 1, 0, 20, 21, 22, 40, 41, 44, 5, 4, 24, 25, 44, 3, 2, 1, 21, 22, 23, 41, 42, 45, 6, 5, 25, 26, 45, 3, 2, 22, 23, 42, 43, 46, 6, 26, 46, 3, 23, 43, 0, 20, 40, 4, 24, 1, 0, 20, 21, 40, 41, 5, 4, 24, 25, 2, 1, 0, 20, 21, 22, 40, 41, 44, 42, 7, 27, 6, 5, 4, 24, 25, 26, 3, 2, 1, 21, 22, 23, 41, 44, 42, 45, 47, 43, 8, 7, 27, 28, 47, 6, 5, 25, 26, 3, 2, 22, 23, 42, 45, 43, 46, 48, 8, 28, 48, 6, 26, 3, 23, 43, 46, 4, 24, 0, 20, 40, 44, 7, 27, 5, 4, 24, 25, 1, 20, 0, 21, 40, 41, 44, 45, 8, 7, 27, 28, 6, 5, 4, 24, 25, 26, 2, 21, 1, 22, 41, 44, 42, 45, 47, 46, 9, 29, 8, 7, 27, 28, 6, 5, 25, 26, 3, 22, 2, 23, 42, 45, 47, 43, 46, 48, 49, 9, 29, 49, 8, 28, 6, 26, 23, 3, 43, 46, 48, 7, 27, 4, 24, 20, 40, 0, 44, 47, 9, 29, 8, 7, 27, 28, 5, 24, 4, 25, 44, 21, 41, 1, 45, 47, 48, 9, 29, 8, 7, 27, 28, 6, 25, 5, 26, 45, 22, 42, 47, 2, 46, 48, 49, 9, 29, 8, 28, 26, 6, 46, 23, 43, 48, 49, 3, 0, 20, 1, 0, 20, 21, 40, 10, 30, 2, 1, 20, 21, 22, 0, 50, 40, 41, 11, 10, 30, 31, 50, 3, 2, 21, 22, 23, 1, 51, 41, 42, 12, 11, 31, 32, 51, 3, 22, 23, 2, 52, 42, 43, 12, 32, 52, 23, 3, 43, 0, 20, 40, 10, 30, 4, 24, 1, 0, 20, 21, 40, 41, 11, 10, 30, 31, 5, 4, 24, 25, 2, 1, 20, 21, 22, 0, 40, 50, 41, 44, 42, 13, 33, 12, 11, 10, 30, 31, 32, 50, 6, 5, 24, 25, 26, 4, 3, 2, 21, 22, 23, 1, 41, 51, 53, 44, 42, 45, 43, 14, 13, 33, 34, 53, 12, 11, 31, 32, 51, 6, 25, 26, 5, 3, 22, 23, 2, 42, 52, 54, 45, 43, 46, 14, 34, 54, 12, 32, 52, 26, 6, 23, 3, 43, 46, 10, 30, 4, 24, 0, 20, 40, 44, 50, 13, 33, 11, 10, 30, 31, 7, 27, 5, 4, 24, 25, 1, 0, 21, 20, 40, 50, 41, 44, 45, 51, 14, 13, 33, 34, 12, 11, 10, 30, 31, 32, 50, 8, 7, 27, 28, 6, 5, 24, 25, 26, 4, 2, 1, 22, 21, 41, 44, 51, 53, 42, 45, 47, 46, 52, 15, 35, 14, 13, 33, 34, 12, 11, 31, 32, 51, 53, 8, 27, 28, 7, 6, 25, 26, 5, 3, 2, 23, 22, 42, 45, 52, 54, 55, 47, 43, 46, 48, 15, 35, 55, 14, 34, 12, 32, 52, 54, 28, 8, 26, 6, 3, 23, 43, 46, 48, 13, 33, 10, 30, 7, 27, 4, 24, 20, 0, 40, 50, 44, 47, 53, 15, 35, 14, 13, 33, 34, 11, 30, 10, 31, 50, 9, 29, 8, 7, 27, 28, 5, 4, 25, 24, 44, 21, 1, 41, 51, 53, 45, 47, 48, 54, 15, 35, 14, 13, 33, 34, 12, 31, 11, 32, 51, 53, 9, 29, 8, 27, 28, 7, 6, 5, 26, 25, 45, 22, 2, 42, 47, 52, 54, 55, 46, 48, 49, 15, 35, 14, 34, 32, 12, 52, 54, 55, 29, 9, 28, 8, 6, 26, 46, 23, 3, 43, 48, 49, 15, 35, 13, 33, 30, 50, 9, 29, 7, 27, 24, 4, 44, 10, 53, 47, 49, 55, 15, 35, 14, 33, 13, 34, 53, 31, 51, 9, 29, 8, 7, 28, 27, 47, 25, 5, 45, 11, 54, 55, 48, 49, 15, 35, 34, 14, 54, 32, 52, 55, 29, 9, 8, 28, 48, 26, 6, 46, 49, 12, 15, 35, 33, 53, 9, 29, 27, 7, 47, 13, 55, 49, 35, 15, 55, 34, 54, 9, 29, 49, 28, 8, 48, 14, 20, 0, 40, 10, 30, 21, 1, 0, 40, 20, 41, 11, 10, 30, 31, 22, 40, 0, 2, 20, 1, 41, 21, 50, 42, 16, 36, 12, 11, 30, 31, 32, 10, 56, 23, 50, 41, 1, 3, 21, 2, 42, 22, 51, 43, 17, 16, 36, 37, 56, 12, 31, 32, 11, 57, 51, 42, 2, 22, 3, 43, 23, 52, 17, 37, 57, 32, 12, 52, 43, 3, 23, 10, 30, 24, 4, 20, 0, 40, 44, 50, 16, 36, 13, 33, 11, 10, 30, 31, 25, 5, 21, 0, 40, 20, 1, 41, 4, 50, 44, 24, 45, 51, 17, 16, 36, 37, 14, 13, 33, 34, 12, 11, 30, 31, 32, 10, 50, 56, 26, 44, 4, 6, 24, 22, 1, 41, 21, 2, 42, 5, 51, 45, 25, 53, 46, 52, 18, 38, 17, 16, 36, 37, 56, 14, 33, 34, 13, 12, 31, 32, 11, 51, 57, 58, 53, 45, 5, 25, 23, 2, 42, 22, 3, 43, 6, 52, 46, 26, 54, 18, 38, 58, 17, 37, 57, 34, 14, 32, 12, 52, 54, 46, 6, 26, 3, 43, 23, 16, 36, 13, 33, 10, 30, 27, 7, 24, 4, 20, 0, 40, 44, 50, 47, 53, 56, 18, 38, 17, 16, 36, 37, 15, 35, 14, 13, 33, 34, 11, 10, 31, 30, 50, 56, 28, 8, 25, 4, 44, 24, 5, 21, 1, 41, 45, 51, 7, 53, 47, 27, 48, 54, 57, 18, 38, 17, 16, 36, 37, 56, 15, 35, 14, 33, 34, 13, 12, 11, 32, 31, 51, 53, 57, 58, 47, 7, 27, 26, 5, 45, 25, 6, 22, 2, 42, 46, 52, 8, 54, 48, 28, 55, 18, 38, 17, 37, 57, 58, 35, 15, 34, 14, 12, 32, 52, 54, 55, 48, 8, 28, 6, 46, 26, 23, 3, 43, 18, 38, 16, 36, 15, 35, 13, 33, 30, 10, 50, 56, 29, 9, 27, 7, 24, 4, 44, 47, 53, 49, 55, 58, 18, 38, 17, 36, 16, 37, 56, 15, 35, 14, 13, 34, 33, 53, 31, 11, 51, 57, 58, 28, 7, 47, 27, 8, 25, 5, 45, 48, 54, 9, 55, 49, 29, 18, 38, 37, 17, 57, 58, 35, 15, 14, 34, 54, 32, 12, 52, 55, 49, 9, 29, 8, 48, 28, 26, 6, 46, 30, 10, 40, 20, 0, 50, 16, 36, 31, 11, 10, 41, 0, 40, 21, 50, 30, 20, 1, 51, 17, 16, 36, 37, 32, 50, 10, 12, 30, 11, 42, 1, 41, 22, 51, 31, 56, 21, 2, 52, 19, 39, 17, 36, 37, 16, 59, 56, 51, 11, 31, 12, 43, 2, 42, 23, 52, 32, 57, 22, 3, 19, 39, 59, 37, 17, 57, 52, 12, 32, 3, 43, 23, 16, 36, 33, 13, 30, 10, 50, 44, 24, 40, 20, 0, 4, 53, 56, 19, 39, 18, 38, 17, 16, 36, 37, 34, 14, 31, 10, 50, 30, 11, 51, 13, 56, 45, 4, 44, 25, 53, 41, 21, 1, 33, 24, 5, 54, 57, 19, 39, 18, 38, 17, 36, 37, 16, 56, 59, 53, 13, 33, 32, 11, 51, 31, 12, 52, 14, 57, 46, 5, 45, 26, 54, 42, 22, 2, 34, 58, 25, 6, 36, 16, 50, 30, 40, 0, 20, 10, 56, 19, 39, 37, 17, 16, 51, 10, 50, 31, 56, 41, 1, 21, 36, 30, 11, 57, 19, 39, 56, 16, 36, 17, 52, 11, 51, 32, 57, 42, 2, 22, 37, 59, 31, 12, 19, 39, 18, 38, 16, 36, 35, 15, 33, 13, 30, 10, 50, 53, 56, 47, 27, 44, 24, 4, 7, 55, 58, 59, 19, 39, 18, 38, 17, 16, 37, 36, 56, 59, 34, 13, 53, 33, 14, 31, 11, 51, 54, 57, 15, 58, 48, 7, 47, 28, 55, 45, 25, 5, 35, 27, 8, 18, 38, 36, 56, 15, 35, 33, 13, 53, 16, 58, 29, 9, 27, 7, 47, 49, 55, 19, 39, 59, 38, 18, 37, 17, 57, 58, 54, 14, 34, 12, 52, 32, 6, 46, 43, 23, 3, 26, 19, 39, 59, 38, 18, 17, 37, 57, 58, 55, 15, 35, 14, 54, 34, 32, 12, 52, 8, 48, 46, 26, 6, 28, 38, 18, 58, 37, 57, 15, 35, 55, 34, 14, 54, 17, 9, 49, 29, 28, 8, 48, 35, 55, 29, 9, 49, 15};
    static const int coeffs1_ind[] = {59, 19, 39, 59, 39, 56, 16, 36, 19, 39, 19, 56, 36, 50, 10, 30, 16, 59, 19, 39, 38, 18, 36, 16, 56, 53, 33, 50, 30, 10, 44, 4, 24, 13, 58, 59, 19, 57, 16, 56, 37, 59, 51, 11, 31, 39, 36, 17, 19, 39, 37, 16, 56, 36, 17, 57, 18, 59, 54, 13, 53, 34, 58, 51, 31, 11, 45, 5, 25, 38, 33, 14, 39, 19, 59, 58, 38, 56, 36, 16, 53, 13, 33, 18, 19, 39, 38, 18, 36, 16, 56, 58, 59, 55, 35, 53, 33, 13, 47, 7, 27, 15, 19, 39, 18, 38, 36, 16, 56, 59, 35, 15, 33, 13, 53, 55, 58, 49, 29, 47, 27, 7, 9, 19, 59, 57, 17, 37, 39, 59, 19, 39, 17, 57, 52, 12, 32, 37, 39, 19, 59, 57, 17, 37, 12, 52, 43, 3, 23, 32, 39, 19, 59, 58, 18, 38, 17, 57, 37, 14, 54, 52, 32, 12, 46, 6, 26, 34, 19, 59, 39, 18, 58, 57, 37, 17, 54, 14, 34, 38, 19, 39, 59, 18, 58, 38, 37, 17, 57, 15, 55, 54, 34, 14, 48, 8, 28, 35, 39, 19, 59, 18, 38, 58, 37, 17, 57, 15, 55, 35, 34, 14, 54, 9, 49, 48, 28, 8, 29, 59, 39, 19, 58, 18, 38, 39, 19, 59, 58, 38, 18, 55, 15, 35, 39, 19, 59, 38, 18, 58, 55, 35, 15, 49, 9, 29, 39, 59, 38, 18, 58, 19, 35, 15, 55, 49, 29, 9, 38, 58, 35, 15, 55, 18, 29, 9, 49};

    static const int C0_ind[] = {0, 3, 51, 88, 89, 90, 91, 92, 139, 176, 177, 178, 179, 180, 227, 264, 265, 266, 267, 268, 315, 353, 354, 356, 445, 450, 533, 534, 537, 538, 578, 616, 619, 621, 622, 623, 624, 625, 626, 641, 666, 667, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 729, 754, 755, 792, 793, 794, 795, 796, 798, 799, 800, 801, 817, 842, 843, 881, 882, 884, 887, 888, 905, 979, 984, 1055, 1061, 1066, 1067, 1068, 1071, 1072, 1105, 1143, 1149, 1150, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1168, 1193, 1194, 1231, 1232, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1256, 1257, 1281, 1282, 1283, 1319, 1320, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1332, 1333, 1334, 1335, 1344, 1345, 1369, 1370, 1371, 1409, 1410, 1412, 1415, 1416, 1421, 1422, 1432, 1433, 1507, 1512, 1513, 1516, 1544, 1583, 1589, 1594, 1595, 1596, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1632, 1633, 1671, 1677, 1678, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1696, 1720, 1721, 1722, 1759, 1760, 1763, 1766, 1767, 1768, 1769, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1784, 1785, 1808, 1809, 1810, 1811, 1849, 1850, 1852, 1855, 1856, 1861, 1862, 1866, 1867, 1869, 1872, 1873, 1947, 1952, 1953, 1956, 1958, 1959, 1983, 1984, 2023, 2029, 2034, 2035, 2036, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2071, 2072, 2073, 2111, 2118, 2121, 2124, 2125, 2126, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2159, 2160, 2161, 2162, 2207, 2208, 2213, 2214, 2218, 2219, 2221, 2222, 2223, 2224, 2225, 2247, 2314, 2318, 2402, 2403, 2405, 2406, 2458, 2464, 2467, 2490, 2491, 2492, 2493, 2494, 2495, 2515, 2517, 2546, 2552, 2553, 2554, 2555, 2556, 2578, 2579, 2580, 2581, 2582, 2583, 2603, 2605, 2634, 2640, 2641, 2642, 2643, 2644, 2667, 2668, 2669, 2671, 2691, 2693, 2722, 2729, 2730, 2732, 2756, 2759, 2781, 2848, 2852, 2902, 2909, 2914, 2930, 2934, 2936, 2937, 2939, 2940, 2973, 2990, 2997, 2998, 3001, 3002, 3018, 3019, 3021, 3022, 3024, 3025, 3026, 3027, 3028, 3029, 3038, 3042, 3061, 3074, 3078, 3080, 3083, 3085, 3086, 3087, 3088, 3089, 3090, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3126, 3130, 3131, 3133, 3149, 3162, 3166, 3168, 3169, 3170, 3171, 3172, 3174, 3175, 3176, 3177, 3193, 3195, 3196, 3197, 3199, 3201, 3202, 3203, 3205, 3214, 3218, 3219, 3221, 3237, 3250, 3257, 3258, 3260, 3263, 3264, 3281, 3284, 3287, 3290, 3293, 3302, 3309, 3355, 3360, 3376, 3380, 3382, 3384, 3411, 3430, 3431, 3437, 3442, 3443, 3444, 3447, 3448, 3458, 3462, 3464, 3465, 3467, 3468, 3470, 3471, 3472, 3473, 3474, 3481, 3499, 3501, 3518, 3519, 3525, 3526, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3544, 3546, 3547, 3549, 3550, 3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3566, 3569, 3570, 3587, 3589, 3602, 3606, 3607, 3608, 3611, 3614, 3615, 3616, 3617, 3620, 3621, 3622, 3623, 3632, 3633, 3635, 3636, 3637, 3639, 3641, 3642, 3643, 3645, 3646, 3647, 3648, 3649, 3650, 3654, 3657, 3658, 3659, 3661, 3675, 3677, 3690, 3697, 3698, 3700, 3703, 3704, 3709, 3710, 3720, 3721, 3724, 3727, 3730, 3733, 3735, 3737, 3738, 3742, 3749, 3795, 3800, 3801, 3804, 3816, 3820, 3822, 3824, 3827, 3828, 3829, 3832, 3851, 3870, 3871, 3877, 3882, 3883, 3884, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3898, 3902, 3904, 3905, 3907, 3908, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3920, 3921, 3939, 3941, 3958, 3959, 3966, 3969, 3972, 3973, 3974, 3975, 3977, 3978, 3979, 3980, 3981, 3984, 3987, 3989, 3993, 3994, 3995, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4008, 4009, 4010, 4027, 4029, 4042, 4055, 4056, 4061, 4062, 4066, 4067, 4069, 4072, 4073, 4076, 4079, 4082, 4085, 4087, 4089, 4090, 4091, 4092, 4093, 4094, 4101, 4147, 4152, 4153, 4156, 4158, 4159, 4168, 4172, 4174, 4176, 4179, 4180, 4181, 4183, 4184, 4203, 4222, 4223, 4236, 4239, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4257, 4259, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4271, 4272, 4273, 4291, 4293, 4325, 4326, 4330, 4331, 4333, 4334, 4335, 4336, 4346, 4349, 4351, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4417, 4420, 4422, 4423, 4438, 4440, 4443, 4444, 4445, 4447, 4448, 4467, 4506, 4507, 4509, 4510, 4511, 4527, 4529, 4530, 4531, 4532, 4533, 4535, 4628, 4632, 4661, 4690, 4694, 4716, 4720, 4732, 4738, 4745, 4749, 4778, 4779, 4781, 4782, 4804, 4806, 4807, 4808, 4809, 4820, 4826, 4833, 4834, 4837, 4840, 4843, 4866, 4867, 4868, 4869, 4870, 4871, 4891, 4892, 4893, 4894, 4895, 4896, 4897, 4908, 4914, 4921, 4922, 4925, 4928, 4929, 4930, 4931, 4932, 4955, 4956, 4957, 4959, 4979, 4981, 4982, 4983, 4985, 4996, 5002, 5009, 5010, 5017, 5018, 5020, 5044, 5047, 5069, 5070, 5071, 5073, 5136, 5140, 5156, 5160, 5162, 5166, 5170, 5189, 5190, 5197, 5202, 5218, 5222, 5224, 5225, 5227, 5228, 5244, 5248, 5250, 5251, 5252, 5253, 5254, 5258, 5260, 5261, 5266, 5273, 5277, 5278, 5285, 5286, 5289, 5290, 5306, 5307, 5309, 5310, 5312, 5313, 5314, 5315, 5316, 5317, 5326, 5330, 5332, 5334, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5346, 5348, 5349, 5354, 5361, 5362, 5365, 5366, 5368, 5371, 5374, 5375, 5376, 5377, 5393, 5395, 5396, 5397, 5399, 5401, 5402, 5403, 5405, 5414, 5418, 5419, 5421, 5422, 5423, 5425, 5426, 5427, 5428, 5429, 5430, 5434, 5436, 5437, 5442, 5449, 5450, 5457, 5458, 5460, 5463, 5464, 5481, 5484, 5487, 5490, 5493, 5502, 5509, 5510, 5511, 5513, 5515, 5516, 5517, 5555, 5560, 5576, 5580, 5582, 5584, 5596, 5600, 5602, 5606, 5607, 5608, 5609, 5610, 5611, 5629, 5630, 5631, 5637, 5642, 5643, 5644, 5647, 5648, 5658, 5662, 5664, 5665, 5667, 5668, 5670, 5671, 5672, 5673, 5674, 5681, 5684, 5688, 5690, 5691, 5692, 5693, 5694, 5695, 5696, 5697, 5698, 5699, 5700, 5701, 5706, 5713, 5717, 5718, 5719, 5726, 5729, 5732, 5733, 5734, 5735, 5744, 5747, 5749, 5753, 5754, 5755, 5757, 5758, 5759, 5760, 5761, 5762, 5766, 5769, 5770, 5774, 5775, 5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5785, 5786, 5787, 5788, 5789, 5794, 5801, 5802, 5815, 5816, 5821, 5822, 5832, 5833, 5836, 5839, 5842, 5845, 5847, 5849, 5850, 5854, 5861, 5862, 5863, 5865, 5867, 5868, 5869, 5871, 5872, 5873, 5907, 5912, 5913, 5916, 5928, 5932, 5934, 5936, 5939, 5940, 5941, 5944, 5948, 5952, 5954, 5958, 5959, 5960, 5961, 5962, 5963, 5981, 5982, 5983, 5996, 5999, 6001, 6002, 6003, 6004, 6005, 6017, 6019, 6022, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6032, 6033, 6042, 6043, 6044, 6045, 6046, 6047, 6048, 6049, 6050, 6051, 6052, 6053, 6058, 6065, 6085, 6086, 6090, 6091, 6093, 6096, 6106, 6109, 6111, 6113, 6114, 6115, 6116, 6117, 6118, 6126, 6127, 6129, 6131, 6132, 6133, 6135, 6136, 6137, 6212, 6216, 6230, 6233, 6244, 6245, 6274, 6278, 6300, 6304, 6316, 6318, 6319, 6320, 6321, 6322, 6329, 6331, 6332, 6333, 6362, 6363, 6365, 6366, 6388, 6390, 6391, 6392, 6393, 6404, 6406, 6407, 6408, 6409, 6410, 6417, 6418, 6419, 6420, 6421, 6424, 6427, 6451, 6452, 6453, 6455, 6475, 6477, 6478, 6479, 6481, 6492, 6494, 6495, 6496, 6497, 6498, 6505, 6506, 6507, 6508, 6513, 6514, 6516, 6540, 6543, 6565, 6566, 6567, 6569, 6583, 6584, 6595, 6632, 6636, 6652, 6656, 6658, 6662, 6666, 6670, 6673, 6675, 6676, 6677, 6684, 6685, 6686, 6693, 6698, 6714, 6718, 6720, 6721, 6723, 6724, 6740, 6744, 6746, 6747, 6748, 6749, 6750, 6754, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6769, 6771, 6772, 6773, 6774, 6782, 6785, 6803, 6805, 6809, 6810, 6811, 6813, 6822, 6826, 6830, 6831, 6833, 6834, 6835, 6836, 6837, 6838, 6842, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6857, 6858, 6859, 6860, 6916, 6920, 6934, 6937, 6942, 6943, 6944, 6948, 6949, 6978, 6982, 7004, 7008, 7020, 7022, 7023, 7024, 7025, 7026, 7030, 7031, 7032, 7033, 7035, 7036, 7037, 7067, 7069, 7094, 7095, 7097, 7108, 7110, 7111, 7112, 7113, 7114, 7118, 7119, 7120, 7121, 7122, 7123, 7124, 7139, 7144, 7160, 7164, 7166, 7168, 7180, 7184, 7186, 7190, 7191, 7192, 7193, 7194, 7195, 7198, 7201, 7203, 7204, 7205, 7212, 7213, 7214, 7215, 7228, 7231, 7249, 7251, 7254, 7255, 7256, 7257, 7258, 7265, 7274, 7275, 7276, 7277, 7278, 7279, 7280, 7281, 7282, 7283, 7284, 7285, 7286, 7287, 7288, 7289, 7290, 7291, 7292, 7293, 7297, 7299, 7300, 7321, 7324, 7326, 7327, 7342, 7344, 7347, 7348, 7349, 7351, 7352, 7362, 7366, 7367, 7368, 7369, 7370, 7371, 7399, 7400, 7417, 7420, 7423, 7426, 7429, 7438, 7445, 7446, 7447, 7449, 7451, 7452, 7453, 7463, 7464, 7467, 7468, 7469, 7475, 7493, 7494, 7504, 7514, 7517, 7519, 7521, 7522, 7526, 7534, 7535, 7537, 7539, 7540, 7541, 7543, 7544, 7545, 7551, 7552, 7555, 7556, 7557, 7563, 7586, 7587, 7589, 7590, 7591, 7607, 7609, 7610, 7611, 7612, 7613, 7615, 7627, 7628, 7629, 7631, 7632, 7633, 7678, 7679, 7699, 7700, 7701, 7703};
    static const int C1_ind[] = {78, 79, 80, 158, 161, 166, 167, 168, 172, 228, 232, 246, 249, 254, 255, 256, 260, 261, 296, 300, 316, 320, 322, 326, 330, 334, 337, 339, 340, 341, 342, 343, 344, 348, 349, 350, 420, 422, 423, 424, 425, 426, 430, 431, 432, 433, 435, 436, 473, 475, 498, 499, 500, 501, 502, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 586, 590, 594, 598, 601, 603, 604, 605, 606, 607, 608, 612, 654, 656, 674, 678, 679, 680, 681, 682, 683, 686, 689, 691, 692, 693, 694, 695, 696, 700, 721, 724, 742, 744, 747, 748, 749, 752, 762, 766, 767, 768, 769, 770, 771, 774, 777, 779, 780, 781, 788, 863, 864, 870, 871, 872, 875, 934, 935, 937, 951, 952, 958, 959, 960, 963, 996, 999, 1021, 1022, 1023, 1025, 1039, 1040, 1046, 1047, 1048, 1051, 1090, 1093, 1102, 1110, 1111, 1113, 1115, 1116, 1117, 1127, 1128, 1131, 1132, 1133, 1134, 1135, 1136, 1139, 1203, 1204, 1205, 1215, 1216, 1219, 1220, 1221, 1222, 1223, 1224, 1227, 1271, 1273, 1274, 1291, 1292, 1293, 1295, 1296, 1297, 1303, 1304, 1307, 1308, 1309, 1310, 1311, 1312, 1315, 1338, 1339, 1341, 1359, 1361, 1362, 1363, 1364, 1365, 1379, 1380, 1381, 1383, 1384, 1385, 1391, 1392, 1395, 1396, 1397, 1403, 1483, 1484, 1485, 1486, 1487, 1488, 1559, 1560, 1561, 1571, 1572, 1573, 1574, 1575, 1576, 1627, 1628, 1629, 1647, 1648, 1649, 1659, 1660, 1661, 1662, 1663, 1664, 1694, 1695, 1715, 1716, 1717, 1719, 1735, 1736, 1737, 1747, 1748, 1749, 1782, 1783, 1803, 1804, 1805, 1807, 1823, 1824, 1825};

    MatrixXd C0 = MatrixXd::Zero(88, 88);
    MatrixXd C1 = MatrixXd::Zero(88, 21);
    for (int i = 0; i < 1448; i++)
    {
        C0(C0_ind[i]) = coeffs(coeffs0_ind[i]);
    }
    for (int i = 0; i < 267; i++)
    {
        C1(C1_ind[i]) = coeffs(coeffs1_ind[i]);
    }

    MatrixXd C12 = C0.partialPivLu().solve(C1);

    // Setup action matrix
    Matrix<double, 28, 21> RR;
    RR << -C12.bottomRows(7), Matrix<double, 21, 21>::Identity(21, 21);

    static const int AM_ind[] = {23, 13, 10, 0, 12, 1, 14, 15, 2, 20, 19, 3, 4, 21, 22, 5, 24, 25, 26, 27, 6};
    Matrix<double, 21, 21> AM;
    for (int i = 0; i < 21; i++)
    {
        AM.row(i) = RR.row(AM_ind[i]);
    }

    Matrix<std::complex<double>, 3, 21> sols;
    sols.setZero();

    // Solve eigenvalue problem
    EigenSolver<Matrix<double, 21, 21>> es(AM);
    ArrayXcd D = es.eigenvalues();
    ArrayXXcd V = es.eigenvectors();

    V = (V / V.row(0).array().replicate(21, 1)).eval();

    sols.row(0) = V.row(1).array();
    sols.row(1) = V.row(9).array();
    sols.row(2) = D.transpose().array();

    return sols;
}
// Action =  z
// Quotient ring basis (V) = 1,x,x^2,x^2*z,x*y,x*y*z,x*z,x*z^2,x*z^3,y,y^2,y^3,y^2*z,y*z,y*z^2,y*z^3,z,z^2,z^3,z^4,z^5,
// Available monomials (RR*V) = x^2*z^2,x*y*z^2,x*z^4,y^3*z,y^2*z^2,y*z^4,z^6,1,x,x^2,x^2*z,x*y,x*y*z,x*z,x*z^2,x*z^3,y,y^2,y^3,y^2*z,y*z,y*z^2,y*z^3,z,z^2,z^3,z^4,z^5,

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
    if (nrhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_630:nrhs", "One input required.");
    }
    if (nlhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_630:nlhs", "One output required.");
    }
    if (!mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]))
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_630:notDouble", "Input data must be type double.");
    }
    if (mxGetNumberOfElements(prhs[0]) % 48 != 0)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_630:incorrectSize", "Input size must be multiple of 48.");
    }
    int n_instances = mxGetNumberOfElements(prhs[0]) / 48;
    double *input = mxGetPr(prhs[0]);
    plhs[0] = mxCreateDoubleMatrix(3, 21 * n_instances, mxCOMPLEX);
    double *zr = mxGetPr(plhs[0]);
    double *zi = mxGetPi(plhs[0]);
    for (int k = 0; k < n_instances; k++)
    {
        const VectorXd data = Map<const VectorXd>(input + k * 48, 48);
        MatrixXcd sols = solver_toa_upgrade_630(data);
        Index offset = k * sols.size();
        for (Index i = 0; i < sols.size(); i++)
        {
            zr[i + offset] = sols(i).real();
            zi[i + offset] = sols(i).imag();
        }
    }
}
