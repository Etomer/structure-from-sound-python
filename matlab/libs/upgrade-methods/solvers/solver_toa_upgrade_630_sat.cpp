#include <Eigen/Dense>
#include "mex.h"

using namespace Eigen;

MatrixXcd solver_toa_upgrade_sat_630(const VectorXd &data)
{
    // Compute coefficients
    const double *d = data.data();
    VectorXd coeffs(81);
    coeffs[0] = 2 * d[10] * d[11] * d[15] * d[36] - 2 * std::pow(d[14], 2) * d[15] * d[36] - 2 * d[11] * d[12] * d[16] * d[36] + 2 * d[13] * d[14] * d[16] * d[36] - 2 * d[10] * d[13] * d[17] * d[36] + 2 * d[12] * d[14] * d[17] * d[36] - 2 * d[11] * d[12] * d[15] * d[37] + 2 * d[13] * d[14] * d[15] * d[37] + 2 * d[9] * d[11] * d[16] * d[37] - 2 * std::pow(d[13], 2) * d[16] * d[37] + 2 * d[12] * d[13] * d[17] * d[37] - 2 * d[9] * d[14] * d[17] * d[37] - 2 * d[10] * d[13] * d[15] * d[38] + 2 * d[12] * d[14] * d[15] * d[38] + 2 * d[12] * d[13] * d[16] * d[38] - 2 * d[9] * d[14] * d[16] * d[38] + 2 * d[9] * d[10] * d[17] * d[38] - 2 * std::pow(d[12], 2) * d[17] * d[38] - d[9] * d[10] * d[11] * d[45] + d[11] * std::pow(d[12], 2) * d[45] + d[10] * std::pow(d[13], 2) * d[45] - 2 * d[12] * d[13] * d[14] * d[45] + d[9] * std::pow(d[14], 2) * d[45];
    coeffs[1] = 2 * d[11] * d[15] * d[19] * d[36] - 2 * d[13] * d[17] * d[19] * d[36] + 2 * d[10] * d[15] * d[20] * d[36] - 2 * d[12] * d[16] * d[20] * d[36] - 2 * d[11] * d[16] * d[21] * d[36] + 2 * d[14] * d[17] * d[21] * d[36] + 2 * d[14] * d[16] * d[22] * d[36] - 2 * d[10] * d[17] * d[22] * d[36] - 4 * d[14] * d[15] * d[23] * d[36] + 2 * d[13] * d[16] * d[23] * d[36] + 2 * d[12] * d[17] * d[23] * d[36] + 2 * d[10] * d[11] * d[24] * d[36] - 2 * std::pow(d[14], 2) * d[24] * d[36] - 2 * d[11] * d[12] * d[25] * d[36] + 2 * d[13] * d[14] * d[25] * d[36] - 2 * d[10] * d[13] * d[26] * d[36] + 2 * d[12] * d[14] * d[26] * d[36] + 2 * d[11] * d[16] * d[18] * d[37] - 2 * d[14] * d[17] * d[18] * d[37] - 2 * d[12] * d[15] * d[20] * d[37] + 2 * d[9] * d[16] * d[20] * d[37] - 2 * d[11] * d[15] * d[21] * d[37] + 2 * d[13] * d[17] * d[21] * d[37] + 2 * d[14] * d[15] * d[22] * d[37] - 4 * d[13] * d[16] * d[22] * d[37] + 2 * d[12] * d[17] * d[22] * d[37] + 2 * d[13] * d[15] * d[23] * d[37] - 2 * d[9] * d[17] * d[23] * d[37] - 2 * d[11] * d[12] * d[24] * d[37] + 2 * d[13] * d[14] * d[24] * d[37] + 2 * d[9] * d[11] * d[25] * d[37] - 2 * std::pow(d[13], 2) * d[25] * d[37] + 2 * d[12] * d[13] * d[26] * d[37] - 2 * d[9] * d[14] * d[26] * d[37] - 2 * d[14] * d[16] * d[18] * d[38] + 2 * d[10] * d[17] * d[18] * d[38] - 2 * d[13] * d[15] * d[19] * d[38] + 2 * d[9] * d[17] * d[19] * d[38] + 2 * d[14] * d[15] * d[21] * d[38] + 2 * d[13] * d[16] * d[21] * d[38] - 4 * d[12] * d[17] * d[21] * d[38] - 2 * d[10] * d[15] * d[22] * d[38] + 2 * d[12] * d[16] * d[22] * d[38] + 2 * d[12] * d[15] * d[23] * d[38] - 2 * d[9] * d[16] * d[23] * d[38] - 2 * d[10] * d[13] * d[24] * d[38] + 2 * d[12] * d[14] * d[24] * d[38] + 2 * d[12] * d[13] * d[25] * d[38] - 2 * d[9] * d[14] * d[25] * d[38] + 2 * d[9] * d[10] * d[26] * d[38] - 2 * std::pow(d[12], 2) * d[26] * d[38] - d[10] * d[11] * d[18] * d[45] + std::pow(d[14], 2) * d[18] * d[45] - d[9] * d[11] * d[19] * d[45] + std::pow(d[13], 2) * d[19] * d[45] - d[9] * d[10] * d[20] * d[45] + std::pow(d[12], 2) * d[20] * d[45] + 2 * d[11] * d[12] * d[21] * d[45] - 2 * d[13] * d[14] * d[21] * d[45] + 2 * d[10] * d[13] * d[22] * d[45] - 2 * d[12] * d[14] * d[22] * d[45] - 2 * d[12] * d[13] * d[23] * d[45] + 2 * d[9] * d[14] * d[23] * d[45];
    coeffs[2] = 2 * d[15] * d[19] * d[20] * d[36] - 2 * d[16] * d[20] * d[21] * d[36] - 2 * d[17] * d[19] * d[22] * d[36] + 2 * d[17] * d[21] * d[23] * d[36] + 2 * d[16] * d[22] * d[23] * d[36] - 2 * d[15] * std::pow(d[23], 2) * d[36] + 2 * d[11] * d[19] * d[24] * d[36] + 2 * d[10] * d[20] * d[24] * d[36] - 4 * d[14] * d[23] * d[24] * d[36] - 2 * d[12] * d[20] * d[25] * d[36] - 2 * d[11] * d[21] * d[25] * d[36] + 2 * d[14] * d[22] * d[25] * d[36] + 2 * d[13] * d[23] * d[25] * d[36] - 2 * d[13] * d[19] * d[26] * d[36] + 2 * d[14] * d[21] * d[26] * d[36] - 2 * d[10] * d[22] * d[26] * d[36] + 2 * d[12] * d[23] * d[26] * d[36] + 2 * d[16] * d[18] * d[20] * d[37] - 2 * d[15] * d[20] * d[21] * d[37] + 2 * d[17] * d[21] * d[22] * d[37] - 2 * d[16] * std::pow(d[22], 2) * d[37] - 2 * d[17] * d[18] * d[23] * d[37] + 2 * d[15] * d[22] * d[23] * d[37] - 2 * d[12] * d[20] * d[24] * d[37] - 2 * d[11] * d[21] * d[24] * d[37] + 2 * d[14] * d[22] * d[24] * d[37] + 2 * d[13] * d[23] * d[24] * d[37] + 2 * d[11] * d[18] * d[25] * d[37] + 2 * d[9] * d[20] * d[25] * d[37] - 4 * d[13] * d[22] * d[25] * d[37] - 2 * d[14] * d[18] * d[26] * d[37] + 2 * d[13] * d[21] * d[26] * d[37] + 2 * d[12] * d[22] * d[26] * d[37] - 2 * d[9] * d[23] * d[26] * d[37] + 2 * d[17] * d[18] * d[19] * d[38] - 2 * d[17] * std::pow(d[21], 2) * d[38] - 2 * d[15] * d[19] * d[22] * d[38] + 2 * d[16] * d[21] * d[22] * d[38] - 2 * d[16] * d[18] * d[23] * d[38] + 2 * d[15] * d[21] * d[23] * d[38] - 2 * d[13] * d[19] * d[24] * d[38] + 2 * d[14] * d[21] * d[24] * d[38] - 2 * d[10] * d[22] * d[24] * d[38] + 2 * d[12] * d[23] * d[24] * d[38] - 2 * d[14] * d[18] * d[25] * d[38] + 2 * d[13] * d[21] * d[25] * d[38] + 2 * d[12] * d[22] * d[25] * d[38] - 2 * d[9] * d[23] * d[25] * d[38] + 2 * d[10] * d[18] * d[26] * d[38] + 2 * d[9] * d[19] * d[26] * d[38] - 4 * d[12] * d[21] * d[26] * d[38] - d[11] * d[18] * d[19] * d[45] - d[10] * d[18] * d[20] * d[45] - d[9] * d[19] * d[20] * d[45] + 2 * d[12] * d[20] * d[21] * d[45] + d[11] * std::pow(d[21], 2) * d[45] + 2 * d[13] * d[19] * d[22] * d[45] - 2 * d[14] * d[21] * d[22] * d[45] + d[10] * std::pow(d[22], 2) * d[45] + 2 * d[14] * d[18] * d[23] * d[45] - 2 * d[13] * d[21] * d[23] * d[45] - 2 * d[12] * d[22] * d[23] * d[45] + d[9] * std::pow(d[23], 2) * d[45];
    coeffs[3] = 2 * d[19] * d[20] * d[24] * d[36] - 2 * std::pow(d[23], 2) * d[24] * d[36] - 2 * d[20] * d[21] * d[25] * d[36] + 2 * d[22] * d[23] * d[25] * d[36] - 2 * d[19] * d[22] * d[26] * d[36] + 2 * d[21] * d[23] * d[26] * d[36] - 2 * d[20] * d[21] * d[24] * d[37] + 2 * d[22] * d[23] * d[24] * d[37] + 2 * d[18] * d[20] * d[25] * d[37] - 2 * std::pow(d[22], 2) * d[25] * d[37] + 2 * d[21] * d[22] * d[26] * d[37] - 2 * d[18] * d[23] * d[26] * d[37] - 2 * d[19] * d[22] * d[24] * d[38] + 2 * d[21] * d[23] * d[24] * d[38] + 2 * d[21] * d[22] * d[25] * d[38] - 2 * d[18] * d[23] * d[25] * d[38] + 2 * d[18] * d[19] * d[26] * d[38] - 2 * std::pow(d[21], 2) * d[26] * d[38] - d[18] * d[19] * d[20] * d[45] + d[20] * std::pow(d[21], 2) * d[45] + d[19] * std::pow(d[22], 2) * d[45] - 2 * d[21] * d[22] * d[23] * d[45] + d[18] * std::pow(d[23], 2) * d[45];
    coeffs[4] = 2 * d[11] * d[15] * d[28] * d[36] - 2 * d[13] * d[17] * d[28] * d[36] + 2 * d[10] * d[15] * d[29] * d[36] - 2 * d[12] * d[16] * d[29] * d[36] - 2 * d[11] * d[16] * d[30] * d[36] + 2 * d[14] * d[17] * d[30] * d[36] + 2 * d[14] * d[16] * d[31] * d[36] - 2 * d[10] * d[17] * d[31] * d[36] - 4 * d[14] * d[15] * d[32] * d[36] + 2 * d[13] * d[16] * d[32] * d[36] + 2 * d[12] * d[17] * d[32] * d[36] + 2 * d[10] * d[11] * d[33] * d[36] - 2 * std::pow(d[14], 2) * d[33] * d[36] - 2 * d[11] * d[12] * d[34] * d[36] + 2 * d[13] * d[14] * d[34] * d[36] - 2 * d[10] * d[13] * d[35] * d[36] + 2 * d[12] * d[14] * d[35] * d[36] + 2 * d[11] * d[16] * d[27] * d[37] - 2 * d[14] * d[17] * d[27] * d[37] - 2 * d[12] * d[15] * d[29] * d[37] + 2 * d[9] * d[16] * d[29] * d[37] - 2 * d[11] * d[15] * d[30] * d[37] + 2 * d[13] * d[17] * d[30] * d[37] + 2 * d[14] * d[15] * d[31] * d[37] - 4 * d[13] * d[16] * d[31] * d[37] + 2 * d[12] * d[17] * d[31] * d[37] + 2 * d[13] * d[15] * d[32] * d[37] - 2 * d[9] * d[17] * d[32] * d[37] - 2 * d[11] * d[12] * d[33] * d[37] + 2 * d[13] * d[14] * d[33] * d[37] + 2 * d[9] * d[11] * d[34] * d[37] - 2 * std::pow(d[13], 2) * d[34] * d[37] + 2 * d[12] * d[13] * d[35] * d[37] - 2 * d[9] * d[14] * d[35] * d[37] - 2 * d[14] * d[16] * d[27] * d[38] + 2 * d[10] * d[17] * d[27] * d[38] - 2 * d[13] * d[15] * d[28] * d[38] + 2 * d[9] * d[17] * d[28] * d[38] + 2 * d[14] * d[15] * d[30] * d[38] + 2 * d[13] * d[16] * d[30] * d[38] - 4 * d[12] * d[17] * d[30] * d[38] - 2 * d[10] * d[15] * d[31] * d[38] + 2 * d[12] * d[16] * d[31] * d[38] + 2 * d[12] * d[15] * d[32] * d[38] - 2 * d[9] * d[16] * d[32] * d[38] - 2 * d[10] * d[13] * d[33] * d[38] + 2 * d[12] * d[14] * d[33] * d[38] + 2 * d[12] * d[13] * d[34] * d[38] - 2 * d[9] * d[14] * d[34] * d[38] + 2 * d[9] * d[10] * d[35] * d[38] - 2 * std::pow(d[12], 2) * d[35] * d[38] - d[10] * d[11] * d[27] * d[45] + std::pow(d[14], 2) * d[27] * d[45] - d[9] * d[11] * d[28] * d[45] + std::pow(d[13], 2) * d[28] * d[45] - d[9] * d[10] * d[29] * d[45] + std::pow(d[12], 2) * d[29] * d[45] + 2 * d[11] * d[12] * d[30] * d[45] - 2 * d[13] * d[14] * d[30] * d[45] + 2 * d[10] * d[13] * d[31] * d[45] - 2 * d[12] * d[14] * d[31] * d[45] - 2 * d[12] * d[13] * d[32] * d[45] + 2 * d[9] * d[14] * d[32] * d[45];
    coeffs[5] = 2 * d[15] * d[20] * d[28] * d[36] - 2 * d[17] * d[22] * d[28] * d[36] + 2 * d[11] * d[24] * d[28] * d[36] - 2 * d[13] * d[26] * d[28] * d[36] + 2 * d[15] * d[19] * d[29] * d[36] - 2 * d[16] * d[21] * d[29] * d[36] + 2 * d[10] * d[24] * d[29] * d[36] - 2 * d[12] * d[25] * d[29] * d[36] - 2 * d[16] * d[20] * d[30] * d[36] + 2 * d[17] * d[23] * d[30] * d[36] - 2 * d[11] * d[25] * d[30] * d[36] + 2 * d[14] * d[26] * d[30] * d[36] - 2 * d[17] * d[19] * d[31] * d[36] + 2 * d[16] * d[23] * d[31] * d[36] + 2 * d[14] * d[25] * d[31] * d[36] - 2 * d[10] * d[26] * d[31] * d[36] + 2 * d[17] * d[21] * d[32] * d[36] + 2 * d[16] * d[22] * d[32] * d[36] - 4 * d[15] * d[23] * d[32] * d[36] - 4 * d[14] * d[24] * d[32] * d[36] + 2 * d[13] * d[25] * d[32] * d[36] + 2 * d[12] * d[26] * d[32] * d[36] + 2 * d[11] * d[19] * d[33] * d[36] + 2 * d[10] * d[20] * d[33] * d[36] - 4 * d[14] * d[23] * d[33] * d[36] - 2 * d[12] * d[20] * d[34] * d[36] - 2 * d[11] * d[21] * d[34] * d[36] + 2 * d[14] * d[22] * d[34] * d[36] + 2 * d[13] * d[23] * d[34] * d[36] - 2 * d[13] * d[19] * d[35] * d[36] + 2 * d[14] * d[21] * d[35] * d[36] - 2 * d[10] * d[22] * d[35] * d[36] + 2 * d[12] * d[23] * d[35] * d[36] + 2 * d[16] * d[20] * d[27] * d[37] - 2 * d[17] * d[23] * d[27] * d[37] + 2 * d[11] * d[25] * d[27] * d[37] - 2 * d[14] * d[26] * d[27] * d[37] + 2 * d[16] * d[18] * d[29] * d[37] - 2 * d[15] * d[21] * d[29] * d[37] - 2 * d[12] * d[24] * d[29] * d[37] + 2 * d[9] * d[25] * d[29] * d[37] - 2 * d[15] * d[20] * d[30] * d[37] + 2 * d[17] * d[22] * d[30] * d[37] - 2 * d[11] * d[24] * d[30] * d[37] + 2 * d[13] * d[26] * d[30] * d[37] + 2 * d[17] * d[21] * d[31] * d[37] - 4 * d[16] * d[22] * d[31] * d[37] + 2 * d[15] * d[23] * d[31] * d[37] + 2 * d[14] * d[24] * d[31] * d[37] - 4 * d[13] * d[25] * d[31] * d[37] + 2 * d[12] * d[26] * d[31] * d[37] - 2 * d[17] * d[18] * d[32] * d[37] + 2 * d[15] * d[22] * d[32] * d[37] + 2 * d[13] * d[24] * d[32] * d[37] - 2 * d[9] * d[26] * d[32] * d[37] - 2 * d[12] * d[20] * d[33] * d[37] - 2 * d[11] * d[21] * d[33] * d[37] + 2 * d[14] * d[22] * d[33] * d[37] + 2 * d[13] * d[23] * d[33] * d[37] + 2 * d[11] * d[18] * d[34] * d[37] + 2 * d[9] * d[20] * d[34] * d[37] - 4 * d[13] * d[22] * d[34] * d[37] - 2 * d[14] * d[18] * d[35] * d[37] + 2 * d[13] * d[21] * d[35] * d[37] + 2 * d[12] * d[22] * d[35] * d[37] - 2 * d[9] * d[23] * d[35] * d[37] + 2 * d[17] * d[19] * d[27] * d[38] - 2 * d[16] * d[23] * d[27] * d[38] - 2 * d[14] * d[25] * d[27] * d[38] + 2 * d[10] * d[26] * d[27] * d[38] + 2 * d[17] * d[18] * d[28] * d[38] - 2 * d[15] * d[22] * d[28] * d[38] - 2 * d[13] * d[24] * d[28] * d[38] + 2 * d[9] * d[26] * d[28] * d[38] - 4 * d[17] * d[21] * d[30] * d[38] + 2 * d[16] * d[22] * d[30] * d[38] + 2 * d[15] * d[23] * d[30] * d[38] + 2 * d[14] * d[24] * d[30] * d[38] + 2 * d[13] * d[25] * d[30] * d[38] - 4 * d[12] * d[26] * d[30] * d[38] - 2 * d[15] * d[19] * d[31] * d[38] + 2 * d[16] * d[21] * d[31] * d[38] - 2 * d[10] * d[24] * d[31] * d[38] + 2 * d[12] * d[25] * d[31] * d[38] - 2 * d[16] * d[18] * d[32] * d[38] + 2 * d[15] * d[21] * d[32] * d[38] + 2 * d[12] * d[24] * d[32] * d[38] - 2 * d[9] * d[25] * d[32] * d[38] - 2 * d[13] * d[19] * d[33] * d[38] + 2 * d[14] * d[21] * d[33] * d[38] - 2 * d[10] * d[22] * d[33] * d[38] + 2 * d[12] * d[23] * d[33] * d[38] - 2 * d[14] * d[18] * d[34] * d[38] + 2 * d[13] * d[21] * d[34] * d[38] + 2 * d[12] * d[22] * d[34] * d[38] - 2 * d[9] * d[23] * d[34] * d[38] + 2 * d[10] * d[18] * d[35] * d[38] + 2 * d[9] * d[19] * d[35] * d[38] - 4 * d[12] * d[21] * d[35] * d[38] - d[11] * d[19] * d[27] * d[45] - d[10] * d[20] * d[27] * d[45] + 2 * d[14] * d[23] * d[27] * d[45] - d[11] * d[18] * d[28] * d[45] - d[9] * d[20] * d[28] * d[45] + 2 * d[13] * d[22] * d[28] * d[45] - d[10] * d[18] * d[29] * d[45] - d[9] * d[19] * d[29] * d[45] + 2 * d[12] * d[21] * d[29] * d[45] + 2 * d[12] * d[20] * d[30] * d[45] + 2 * d[11] * d[21] * d[30] * d[45] - 2 * d[14] * d[22] * d[30] * d[45] - 2 * d[13] * d[23] * d[30] * d[45] + 2 * d[13] * d[19] * d[31] * d[45] - 2 * d[14] * d[21] * d[31] * d[45] + 2 * d[10] * d[22] * d[31] * d[45] - 2 * d[12] * d[23] * d[31] * d[45] + 2 * d[14] * d[18] * d[32] * d[45] - 2 * d[13] * d[21] * d[32] * d[45] - 2 * d[12] * d[22] * d[32] * d[45] + 2 * d[9] * d[23] * d[32] * d[45];
    coeffs[6] = 2 * d[20] * d[24] * d[28] * d[36] - 2 * d[22] * d[26] * d[28] * d[36] + 2 * d[19] * d[24] * d[29] * d[36] - 2 * d[21] * d[25] * d[29] * d[36] - 2 * d[20] * d[25] * d[30] * d[36] + 2 * d[23] * d[26] * d[30] * d[36] + 2 * d[23] * d[25] * d[31] * d[36] - 2 * d[19] * d[26] * d[31] * d[36] - 4 * d[23] * d[24] * d[32] * d[36] + 2 * d[22] * d[25] * d[32] * d[36] + 2 * d[21] * d[26] * d[32] * d[36] + 2 * d[19] * d[20] * d[33] * d[36] - 2 * std::pow(d[23], 2) * d[33] * d[36] - 2 * d[20] * d[21] * d[34] * d[36] + 2 * d[22] * d[23] * d[34] * d[36] - 2 * d[19] * d[22] * d[35] * d[36] + 2 * d[21] * d[23] * d[35] * d[36] + 2 * d[20] * d[25] * d[27] * d[37] - 2 * d[23] * d[26] * d[27] * d[37] - 2 * d[21] * d[24] * d[29] * d[37] + 2 * d[18] * d[25] * d[29] * d[37] - 2 * d[20] * d[24] * d[30] * d[37] + 2 * d[22] * d[26] * d[30] * d[37] + 2 * d[23] * d[24] * d[31] * d[37] - 4 * d[22] * d[25] * d[31] * d[37] + 2 * d[21] * d[26] * d[31] * d[37] + 2 * d[22] * d[24] * d[32] * d[37] - 2 * d[18] * d[26] * d[32] * d[37] - 2 * d[20] * d[21] * d[33] * d[37] + 2 * d[22] * d[23] * d[33] * d[37] + 2 * d[18] * d[20] * d[34] * d[37] - 2 * std::pow(d[22], 2) * d[34] * d[37] + 2 * d[21] * d[22] * d[35] * d[37] - 2 * d[18] * d[23] * d[35] * d[37] - 2 * d[23] * d[25] * d[27] * d[38] + 2 * d[19] * d[26] * d[27] * d[38] - 2 * d[22] * d[24] * d[28] * d[38] + 2 * d[18] * d[26] * d[28] * d[38] + 2 * d[23] * d[24] * d[30] * d[38] + 2 * d[22] * d[25] * d[30] * d[38] - 4 * d[21] * d[26] * d[30] * d[38] - 2 * d[19] * d[24] * d[31] * d[38] + 2 * d[21] * d[25] * d[31] * d[38] + 2 * d[21] * d[24] * d[32] * d[38] - 2 * d[18] * d[25] * d[32] * d[38] - 2 * d[19] * d[22] * d[33] * d[38] + 2 * d[21] * d[23] * d[33] * d[38] + 2 * d[21] * d[22] * d[34] * d[38] - 2 * d[18] * d[23] * d[34] * d[38] + 2 * d[18] * d[19] * d[35] * d[38] - 2 * std::pow(d[21], 2) * d[35] * d[38] - d[19] * d[20] * d[27] * d[45] + std::pow(d[23], 2) * d[27] * d[45] - d[18] * d[20] * d[28] * d[45] + std::pow(d[22], 2) * d[28] * d[45] - d[18] * d[19] * d[29] * d[45] + std::pow(d[21], 2) * d[29] * d[45] + 2 * d[20] * d[21] * d[30] * d[45] - 2 * d[22] * d[23] * d[30] * d[45] + 2 * d[19] * d[22] * d[31] * d[45] - 2 * d[21] * d[23] * d[31] * d[45] - 2 * d[21] * d[22] * d[32] * d[45] + 2 * d[18] * d[23] * d[32] * d[45];
    coeffs[7] = 2 * d[15] * d[28] * d[29] * d[36] - 2 * d[16] * d[29] * d[30] * d[36] - 2 * d[17] * d[28] * d[31] * d[36] + 2 * d[17] * d[30] * d[32] * d[36] + 2 * d[16] * d[31] * d[32] * d[36] - 2 * d[15] * std::pow(d[32], 2) * d[36] + 2 * d[11] * d[28] * d[33] * d[36] + 2 * d[10] * d[29] * d[33] * d[36] - 4 * d[14] * d[32] * d[33] * d[36] - 2 * d[12] * d[29] * d[34] * d[36] - 2 * d[11] * d[30] * d[34] * d[36] + 2 * d[14] * d[31] * d[34] * d[36] + 2 * d[13] * d[32] * d[34] * d[36] - 2 * d[13] * d[28] * d[35] * d[36] + 2 * d[14] * d[30] * d[35] * d[36] - 2 * d[10] * d[31] * d[35] * d[36] + 2 * d[12] * d[32] * d[35] * d[36] + 2 * d[16] * d[27] * d[29] * d[37] - 2 * d[15] * d[29] * d[30] * d[37] + 2 * d[17] * d[30] * d[31] * d[37] - 2 * d[16] * std::pow(d[31], 2) * d[37] - 2 * d[17] * d[27] * d[32] * d[37] + 2 * d[15] * d[31] * d[32] * d[37] - 2 * d[12] * d[29] * d[33] * d[37] - 2 * d[11] * d[30] * d[33] * d[37] + 2 * d[14] * d[31] * d[33] * d[37] + 2 * d[13] * d[32] * d[33] * d[37] + 2 * d[11] * d[27] * d[34] * d[37] + 2 * d[9] * d[29] * d[34] * d[37] - 4 * d[13] * d[31] * d[34] * d[37] - 2 * d[14] * d[27] * d[35] * d[37] + 2 * d[13] * d[30] * d[35] * d[37] + 2 * d[12] * d[31] * d[35] * d[37] - 2 * d[9] * d[32] * d[35] * d[37] + 2 * d[17] * d[27] * d[28] * d[38] - 2 * d[17] * std::pow(d[30], 2) * d[38] - 2 * d[15] * d[28] * d[31] * d[38] + 2 * d[16] * d[30] * d[31] * d[38] - 2 * d[16] * d[27] * d[32] * d[38] + 2 * d[15] * d[30] * d[32] * d[38] - 2 * d[13] * d[28] * d[33] * d[38] + 2 * d[14] * d[30] * d[33] * d[38] - 2 * d[10] * d[31] * d[33] * d[38] + 2 * d[12] * d[32] * d[33] * d[38] - 2 * d[14] * d[27] * d[34] * d[38] + 2 * d[13] * d[30] * d[34] * d[38] + 2 * d[12] * d[31] * d[34] * d[38] - 2 * d[9] * d[32] * d[34] * d[38] + 2 * d[10] * d[27] * d[35] * d[38] + 2 * d[9] * d[28] * d[35] * d[38] - 4 * d[12] * d[30] * d[35] * d[38] - d[11] * d[27] * d[28] * d[45] - d[10] * d[27] * d[29] * d[45] - d[9] * d[28] * d[29] * d[45] + 2 * d[12] * d[29] * d[30] * d[45] + d[11] * std::pow(d[30], 2) * d[45] + 2 * d[13] * d[28] * d[31] * d[45] - 2 * d[14] * d[30] * d[31] * d[45] + d[10] * std::pow(d[31], 2) * d[45] + 2 * d[14] * d[27] * d[32] * d[45] - 2 * d[13] * d[30] * d[32] * d[45] - 2 * d[12] * d[31] * d[32] * d[45] + d[9] * std::pow(d[32], 2) * d[45];
    coeffs[8] = 2 * d[24] * d[28] * d[29] * d[36] - 2 * d[25] * d[29] * d[30] * d[36] - 2 * d[26] * d[28] * d[31] * d[36] + 2 * d[26] * d[30] * d[32] * d[36] + 2 * d[25] * d[31] * d[32] * d[36] - 2 * d[24] * std::pow(d[32], 2) * d[36] + 2 * d[20] * d[28] * d[33] * d[36] + 2 * d[19] * d[29] * d[33] * d[36] - 4 * d[23] * d[32] * d[33] * d[36] - 2 * d[21] * d[29] * d[34] * d[36] - 2 * d[20] * d[30] * d[34] * d[36] + 2 * d[23] * d[31] * d[34] * d[36] + 2 * d[22] * d[32] * d[34] * d[36] - 2 * d[22] * d[28] * d[35] * d[36] + 2 * d[23] * d[30] * d[35] * d[36] - 2 * d[19] * d[31] * d[35] * d[36] + 2 * d[21] * d[32] * d[35] * d[36] + 2 * d[25] * d[27] * d[29] * d[37] - 2 * d[24] * d[29] * d[30] * d[37] + 2 * d[26] * d[30] * d[31] * d[37] - 2 * d[25] * std::pow(d[31], 2) * d[37] - 2 * d[26] * d[27] * d[32] * d[37] + 2 * d[24] * d[31] * d[32] * d[37] - 2 * d[21] * d[29] * d[33] * d[37] - 2 * d[20] * d[30] * d[33] * d[37] + 2 * d[23] * d[31] * d[33] * d[37] + 2 * d[22] * d[32] * d[33] * d[37] + 2 * d[20] * d[27] * d[34] * d[37] + 2 * d[18] * d[29] * d[34] * d[37] - 4 * d[22] * d[31] * d[34] * d[37] - 2 * d[23] * d[27] * d[35] * d[37] + 2 * d[22] * d[30] * d[35] * d[37] + 2 * d[21] * d[31] * d[35] * d[37] - 2 * d[18] * d[32] * d[35] * d[37] + 2 * d[26] * d[27] * d[28] * d[38] - 2 * d[26] * std::pow(d[30], 2) * d[38] - 2 * d[24] * d[28] * d[31] * d[38] + 2 * d[25] * d[30] * d[31] * d[38] - 2 * d[25] * d[27] * d[32] * d[38] + 2 * d[24] * d[30] * d[32] * d[38] - 2 * d[22] * d[28] * d[33] * d[38] + 2 * d[23] * d[30] * d[33] * d[38] - 2 * d[19] * d[31] * d[33] * d[38] + 2 * d[21] * d[32] * d[33] * d[38] - 2 * d[23] * d[27] * d[34] * d[38] + 2 * d[22] * d[30] * d[34] * d[38] + 2 * d[21] * d[31] * d[34] * d[38] - 2 * d[18] * d[32] * d[34] * d[38] + 2 * d[19] * d[27] * d[35] * d[38] + 2 * d[18] * d[28] * d[35] * d[38] - 4 * d[21] * d[30] * d[35] * d[38] - d[20] * d[27] * d[28] * d[45] - d[19] * d[27] * d[29] * d[45] - d[18] * d[28] * d[29] * d[45] + 2 * d[21] * d[29] * d[30] * d[45] + d[20] * std::pow(d[30], 2) * d[45] + 2 * d[22] * d[28] * d[31] * d[45] - 2 * d[23] * d[30] * d[31] * d[45] + d[19] * std::pow(d[31], 2) * d[45] + 2 * d[23] * d[27] * d[32] * d[45] - 2 * d[22] * d[30] * d[32] * d[45] - 2 * d[21] * d[31] * d[32] * d[45] + d[18] * std::pow(d[32], 2) * d[45];
    coeffs[9] = 2 * d[28] * d[29] * d[33] * d[36] - 2 * std::pow(d[32], 2) * d[33] * d[36] - 2 * d[29] * d[30] * d[34] * d[36] + 2 * d[31] * d[32] * d[34] * d[36] - 2 * d[28] * d[31] * d[35] * d[36] + 2 * d[30] * d[32] * d[35] * d[36] - 2 * d[29] * d[30] * d[33] * d[37] + 2 * d[31] * d[32] * d[33] * d[37] + 2 * d[27] * d[29] * d[34] * d[37] - 2 * std::pow(d[31], 2) * d[34] * d[37] + 2 * d[30] * d[31] * d[35] * d[37] - 2 * d[27] * d[32] * d[35] * d[37] - 2 * d[28] * d[31] * d[33] * d[38] + 2 * d[30] * d[32] * d[33] * d[38] + 2 * d[30] * d[31] * d[34] * d[38] - 2 * d[27] * d[32] * d[34] * d[38] + 2 * d[27] * d[28] * d[35] * d[38] - 2 * std::pow(d[30], 2) * d[35] * d[38] - d[27] * d[28] * d[29] * d[45] + d[29] * std::pow(d[30], 2) * d[45] + d[28] * std::pow(d[31], 2) * d[45] - 2 * d[30] * d[31] * d[32] * d[45] + d[27] * std::pow(d[32], 2) * d[45];
    coeffs[10] = 2 * d[6] * d[10] * d[11] * d[36] - 2 * d[7] * d[11] * d[12] * d[36] - 2 * d[8] * d[10] * d[13] * d[36] + 2 * d[8] * d[12] * d[14] * d[36] + 2 * d[7] * d[13] * d[14] * d[36] - 2 * d[6] * std::pow(d[14], 2) * d[36] + 2 * d[2] * d[10] * d[15] * d[36] + 2 * d[1] * d[11] * d[15] * d[36] - 4 * d[5] * d[14] * d[15] * d[36] - 2 * d[3] * d[11] * d[16] * d[36] - 2 * d[2] * d[12] * d[16] * d[36] + 2 * d[5] * d[13] * d[16] * d[36] + 2 * d[4] * d[14] * d[16] * d[36] - 2 * d[4] * d[10] * d[17] * d[36] + 2 * d[5] * d[12] * d[17] * d[36] - 2 * d[1] * d[13] * d[17] * d[36] + 2 * d[3] * d[14] * d[17] * d[36] + d[10] * d[11] * std::pow(d[36], 2) - std::pow(d[14], 2) * std::pow(d[36], 2) + 2 * d[7] * d[9] * d[11] * d[37] - 2 * d[6] * d[11] * d[12] * d[37] + 2 * d[8] * d[12] * d[13] * d[37] - 2 * d[7] * std::pow(d[13], 2) * d[37] - 2 * d[8] * d[9] * d[14] * d[37] + 2 * d[6] * d[13] * d[14] * d[37] - 2 * d[3] * d[11] * d[15] * d[37] - 2 * d[2] * d[12] * d[15] * d[37] + 2 * d[5] * d[13] * d[15] * d[37] + 2 * d[4] * d[14] * d[15] * d[37] + 2 * d[2] * d[9] * d[16] * d[37] + 2 * d[0] * d[11] * d[16] * d[37] - 4 * d[4] * d[13] * d[16] * d[37] - 2 * d[5] * d[9] * d[17] * d[37] + 2 * d[4] * d[12] * d[17] * d[37] + 2 * d[3] * d[13] * d[17] * d[37] - 2 * d[0] * d[14] * d[17] * d[37] - 2 * d[11] * d[12] * d[36] * d[37] + 2 * d[13] * d[14] * d[36] * d[37] + d[9] * d[11] * std::pow(d[37], 2) - std::pow(d[13], 2) * std::pow(d[37], 2) + 2 * d[8] * d[9] * d[10] * d[38] - 2 * d[8] * std::pow(d[12], 2) * d[38] - 2 * d[6] * d[10] * d[13] * d[38] + 2 * d[7] * d[12] * d[13] * d[38] - 2 * d[7] * d[9] * d[14] * d[38] + 2 * d[6] * d[12] * d[14] * d[38] - 2 * d[4] * d[10] * d[15] * d[38] + 2 * d[5] * d[12] * d[15] * d[38] - 2 * d[1] * d[13] * d[15] * d[38] + 2 * d[3] * d[14] * d[15] * d[38] - 2 * d[5] * d[9] * d[16] * d[38] + 2 * d[4] * d[12] * d[16] * d[38] + 2 * d[3] * d[13] * d[16] * d[38] - 2 * d[0] * d[14] * d[16] * d[38] + 2 * d[1] * d[9] * d[17] * d[38] + 2 * d[0] * d[10] * d[17] * d[38] - 4 * d[3] * d[12] * d[17] * d[38] - 2 * d[10] * d[13] * d[36] * d[38] + 2 * d[12] * d[14] * d[36] * d[38] + 2 * d[12] * d[13] * d[37] * d[38] - 2 * d[9] * d[14] * d[37] * d[38] + d[9] * d[10] * std::pow(d[38], 2) - std::pow(d[12], 2) * std::pow(d[38], 2) - d[2] * d[9] * d[10] * d[45] - d[1] * d[9] * d[11] * d[45] - d[0] * d[10] * d[11] * d[45] + 2 * d[3] * d[11] * d[12] * d[45] + d[2] * std::pow(d[12], 2) * d[45] + 2 * d[4] * d[10] * d[13] * d[45] - 2 * d[5] * d[12] * d[13] * d[45] + d[1] * std::pow(d[13], 2) * d[45] + 2 * d[5] * d[9] * d[14] * d[45] - 2 * d[4] * d[12] * d[14] * d[45] - 2 * d[3] * d[13] * d[14] * d[45] + d[0] * std::pow(d[14], 2) * d[45];
    coeffs[11] = 2 * d[6] * d[11] * d[19] * d[36] - 2 * d[8] * d[13] * d[19] * d[36] + 2 * d[2] * d[15] * d[19] * d[36] - 2 * d[4] * d[17] * d[19] * d[36] + 2 * d[6] * d[10] * d[20] * d[36] - 2 * d[7] * d[12] * d[20] * d[36] + 2 * d[1] * d[15] * d[20] * d[36] - 2 * d[3] * d[16] * d[20] * d[36] - 2 * d[7] * d[11] * d[21] * d[36] + 2 * d[8] * d[14] * d[21] * d[36] - 2 * d[2] * d[16] * d[21] * d[36] + 2 * d[5] * d[17] * d[21] * d[36] - 2 * d[8] * d[10] * d[22] * d[36] + 2 * d[7] * d[14] * d[22] * d[36] + 2 * d[5] * d[16] * d[22] * d[36] - 2 * d[1] * d[17] * d[22] * d[36] + 2 * d[8] * d[12] * d[23] * d[36] + 2 * d[7] * d[13] * d[23] * d[36] - 4 * d[6] * d[14] * d[23] * d[36] - 4 * d[5] * d[15] * d[23] * d[36] + 2 * d[4] * d[16] * d[23] * d[36] + 2 * d[3] * d[17] * d[23] * d[36] + 2 * d[2] * d[10] * d[24] * d[36] + 2 * d[1] * d[11] * d[24] * d[36] - 4 * d[5] * d[14] * d[24] * d[36] - 2 * d[3] * d[11] * d[25] * d[36] - 2 * d[2] * d[12] * d[25] * d[36] + 2 * d[5] * d[13] * d[25] * d[36] + 2 * d[4] * d[14] * d[25] * d[36] - 2 * d[4] * d[10] * d[26] * d[36] + 2 * d[5] * d[12] * d[26] * d[36] - 2 * d[1] * d[13] * d[26] * d[36] + 2 * d[3] * d[14] * d[26] * d[36] + d[11] * d[19] * std::pow(d[36], 2) + d[10] * d[20] * std::pow(d[36], 2) - 2 * d[14] * d[23] * std::pow(d[36], 2) + 2 * d[7] * d[11] * d[18] * d[37] - 2 * d[8] * d[14] * d[18] * d[37] + 2 * d[2] * d[16] * d[18] * d[37] - 2 * d[5] * d[17] * d[18] * d[37] + 2 * d[7] * d[9] * d[20] * d[37] - 2 * d[6] * d[12] * d[20] * d[37] - 2 * d[3] * d[15] * d[20] * d[37] + 2 * d[0] * d[16] * d[20] * d[37] - 2 * d[6] * d[11] * d[21] * d[37] + 2 * d[8] * d[13] * d[21] * d[37] - 2 * d[2] * d[15] * d[21] * d[37] + 2 * d[4] * d[17] * d[21] * d[37] + 2 * d[8] * d[12] * d[22] * d[37] - 4 * d[7] * d[13] * d[22] * d[37] + 2 * d[6] * d[14] * d[22] * d[37] + 2 * d[5] * d[15] * d[22] * d[37] - 4 * d[4] * d[16] * d[22] * d[37] + 2 * d[3] * d[17] * d[22] * d[37] - 2 * d[8] * d[9] * d[23] * d[37] + 2 * d[6] * d[13] * d[23] * d[37] + 2 * d[4] * d[15] * d[23] * d[37] - 2 * d[0] * d[17] * d[23] * d[37] - 2 * d[3] * d[11] * d[24] * d[37] - 2 * d[2] * d[12] * d[24] * d[37] + 2 * d[5] * d[13] * d[24] * d[37] + 2 * d[4] * d[14] * d[24] * d[37] + 2 * d[2] * d[9] * d[25] * d[37] + 2 * d[0] * d[11] * d[25] * d[37] - 4 * d[4] * d[13] * d[25] * d[37] - 2 * d[5] * d[9] * d[26] * d[37] + 2 * d[4] * d[12] * d[26] * d[37] + 2 * d[3] * d[13] * d[26] * d[37] - 2 * d[0] * d[14] * d[26] * d[37] - 2 * d[12] * d[20] * d[36] * d[37] - 2 * d[11] * d[21] * d[36] * d[37] + 2 * d[14] * d[22] * d[36] * d[37] + 2 * d[13] * d[23] * d[36] * d[37] + d[11] * d[18] * std::pow(d[37], 2) + d[9] * d[20] * std::pow(d[37], 2) - 2 * d[13] * d[22] * std::pow(d[37], 2) + 2 * d[8] * d[10] * d[18] * d[38] - 2 * d[7] * d[14] * d[18] * d[38] - 2 * d[5] * d[16] * d[18] * d[38] + 2 * d[1] * d[17] * d[18] * d[38] + 2 * d[8] * d[9] * d[19] * d[38] - 2 * d[6] * d[13] * d[19] * d[38] - 2 * d[4] * d[15] * d[19] * d[38] + 2 * d[0] * d[17] * d[19] * d[38] - 4 * d[8] * d[12] * d[21] * d[38] + 2 * d[7] * d[13] * d[21] * d[38] + 2 * d[6] * d[14] * d[21] * d[38] + 2 * d[5] * d[15] * d[21] * d[38] + 2 * d[4] * d[16] * d[21] * d[38] - 4 * d[3] * d[17] * d[21] * d[38] - 2 * d[6] * d[10] * d[22] * d[38] + 2 * d[7] * d[12] * d[22] * d[38] - 2 * d[1] * d[15] * d[22] * d[38] + 2 * d[3] * d[16] * d[22] * d[38] - 2 * d[7] * d[9] * d[23] * d[38] + 2 * d[6] * d[12] * d[23] * d[38] + 2 * d[3] * d[15] * d[23] * d[38] - 2 * d[0] * d[16] * d[23] * d[38] - 2 * d[4] * d[10] * d[24] * d[38] + 2 * d[5] * d[12] * d[24] * d[38] - 2 * d[1] * d[13] * d[24] * d[38] + 2 * d[3] * d[14] * d[24] * d[38] - 2 * d[5] * d[9] * d[25] * d[38] + 2 * d[4] * d[12] * d[25] * d[38] + 2 * d[3] * d[13] * d[25] * d[38] - 2 * d[0] * d[14] * d[25] * d[38] + 2 * d[1] * d[9] * d[26] * d[38] + 2 * d[0] * d[10] * d[26] * d[38] - 4 * d[3] * d[12] * d[26] * d[38] - 2 * d[13] * d[19] * d[36] * d[38] + 2 * d[14] * d[21] * d[36] * d[38] - 2 * d[10] * d[22] * d[36] * d[38] + 2 * d[12] * d[23] * d[36] * d[38] - 2 * d[14] * d[18] * d[37] * d[38] + 2 * d[13] * d[21] * d[37] * d[38] + 2 * d[12] * d[22] * d[37] * d[38] - 2 * d[9] * d[23] * d[37] * d[38] + d[10] * d[18] * std::pow(d[38], 2) + d[9] * d[19] * std::pow(d[38], 2) - 2 * d[12] * d[21] * std::pow(d[38], 2) - d[2] * d[10] * d[18] * d[45] - d[1] * d[11] * d[18] * d[45] + 2 * d[5] * d[14] * d[18] * d[45] - d[2] * d[9] * d[19] * d[45] - d[0] * d[11] * d[19] * d[45] + 2 * d[4] * d[13] * d[19] * d[45] - d[1] * d[9] * d[20] * d[45] - d[0] * d[10] * d[20] * d[45] + 2 * d[3] * d[12] * d[20] * d[45] + 2 * d[3] * d[11] * d[21] * d[45] + 2 * d[2] * d[12] * d[21] * d[45] - 2 * d[5] * d[13] * d[21] * d[45] - 2 * d[4] * d[14] * d[21] * d[45] + 2 * d[4] * d[10] * d[22] * d[45] - 2 * d[5] * d[12] * d[22] * d[45] + 2 * d[1] * d[13] * d[22] * d[45] - 2 * d[3] * d[14] * d[22] * d[45] + 2 * d[5] * d[9] * d[23] * d[45] - 2 * d[4] * d[12] * d[23] * d[45] - 2 * d[3] * d[13] * d[23] * d[45] + 2 * d[0] * d[14] * d[23] * d[45];
    coeffs[12] = 2 * d[6] * d[19] * d[20] * d[36] - 2 * d[7] * d[20] * d[21] * d[36] - 2 * d[8] * d[19] * d[22] * d[36] + 2 * d[8] * d[21] * d[23] * d[36] + 2 * d[7] * d[22] * d[23] * d[36] - 2 * d[6] * std::pow(d[23], 2) * d[36] + 2 * d[2] * d[19] * d[24] * d[36] + 2 * d[1] * d[20] * d[24] * d[36] - 4 * d[5] * d[23] * d[24] * d[36] - 2 * d[3] * d[20] * d[25] * d[36] - 2 * d[2] * d[21] * d[25] * d[36] + 2 * d[5] * d[22] * d[25] * d[36] + 2 * d[4] * d[23] * d[25] * d[36] - 2 * d[4] * d[19] * d[26] * d[36] + 2 * d[5] * d[21] * d[26] * d[36] - 2 * d[1] * d[22] * d[26] * d[36] + 2 * d[3] * d[23] * d[26] * d[36] + d[19] * d[20] * std::pow(d[36], 2) - std::pow(d[23], 2) * std::pow(d[36], 2) + 2 * d[7] * d[18] * d[20] * d[37] - 2 * d[6] * d[20] * d[21] * d[37] + 2 * d[8] * d[21] * d[22] * d[37] - 2 * d[7] * std::pow(d[22], 2) * d[37] - 2 * d[8] * d[18] * d[23] * d[37] + 2 * d[6] * d[22] * d[23] * d[37] - 2 * d[3] * d[20] * d[24] * d[37] - 2 * d[2] * d[21] * d[24] * d[37] + 2 * d[5] * d[22] * d[24] * d[37] + 2 * d[4] * d[23] * d[24] * d[37] + 2 * d[2] * d[18] * d[25] * d[37] + 2 * d[0] * d[20] * d[25] * d[37] - 4 * d[4] * d[22] * d[25] * d[37] - 2 * d[5] * d[18] * d[26] * d[37] + 2 * d[4] * d[21] * d[26] * d[37] + 2 * d[3] * d[22] * d[26] * d[37] - 2 * d[0] * d[23] * d[26] * d[37] - 2 * d[20] * d[21] * d[36] * d[37] + 2 * d[22] * d[23] * d[36] * d[37] + d[18] * d[20] * std::pow(d[37], 2) - std::pow(d[22], 2) * std::pow(d[37], 2) + 2 * d[8] * d[18] * d[19] * d[38] - 2 * d[8] * std::pow(d[21], 2) * d[38] - 2 * d[6] * d[19] * d[22] * d[38] + 2 * d[7] * d[21] * d[22] * d[38] - 2 * d[7] * d[18] * d[23] * d[38] + 2 * d[6] * d[21] * d[23] * d[38] - 2 * d[4] * d[19] * d[24] * d[38] + 2 * d[5] * d[21] * d[24] * d[38] - 2 * d[1] * d[22] * d[24] * d[38] + 2 * d[3] * d[23] * d[24] * d[38] - 2 * d[5] * d[18] * d[25] * d[38] + 2 * d[4] * d[21] * d[25] * d[38] + 2 * d[3] * d[22] * d[25] * d[38] - 2 * d[0] * d[23] * d[25] * d[38] + 2 * d[1] * d[18] * d[26] * d[38] + 2 * d[0] * d[19] * d[26] * d[38] - 4 * d[3] * d[21] * d[26] * d[38] - 2 * d[19] * d[22] * d[36] * d[38] + 2 * d[21] * d[23] * d[36] * d[38] + 2 * d[21] * d[22] * d[37] * d[38] - 2 * d[18] * d[23] * d[37] * d[38] + d[18] * d[19] * std::pow(d[38], 2) - std::pow(d[21], 2) * std::pow(d[38], 2) - d[2] * d[18] * d[19] * d[45] - d[1] * d[18] * d[20] * d[45] - d[0] * d[19] * d[20] * d[45] + 2 * d[3] * d[20] * d[21] * d[45] + d[2] * std::pow(d[21], 2) * d[45] + 2 * d[4] * d[19] * d[22] * d[45] - 2 * d[5] * d[21] * d[22] * d[45] + d[1] * std::pow(d[22], 2) * d[45] + 2 * d[5] * d[18] * d[23] * d[45] - 2 * d[4] * d[21] * d[23] * d[45] - 2 * d[3] * d[22] * d[23] * d[45] + d[0] * std::pow(d[23], 2) * d[45];
    coeffs[13] = 2 * d[6] * d[11] * d[28] * d[36] - 2 * d[8] * d[13] * d[28] * d[36] + 2 * d[2] * d[15] * d[28] * d[36] - 2 * d[4] * d[17] * d[28] * d[36] + 2 * d[6] * d[10] * d[29] * d[36] - 2 * d[7] * d[12] * d[29] * d[36] + 2 * d[1] * d[15] * d[29] * d[36] - 2 * d[3] * d[16] * d[29] * d[36] - 2 * d[7] * d[11] * d[30] * d[36] + 2 * d[8] * d[14] * d[30] * d[36] - 2 * d[2] * d[16] * d[30] * d[36] + 2 * d[5] * d[17] * d[30] * d[36] - 2 * d[8] * d[10] * d[31] * d[36] + 2 * d[7] * d[14] * d[31] * d[36] + 2 * d[5] * d[16] * d[31] * d[36] - 2 * d[1] * d[17] * d[31] * d[36] + 2 * d[8] * d[12] * d[32] * d[36] + 2 * d[7] * d[13] * d[32] * d[36] - 4 * d[6] * d[14] * d[32] * d[36] - 4 * d[5] * d[15] * d[32] * d[36] + 2 * d[4] * d[16] * d[32] * d[36] + 2 * d[3] * d[17] * d[32] * d[36] + 2 * d[2] * d[10] * d[33] * d[36] + 2 * d[1] * d[11] * d[33] * d[36] - 4 * d[5] * d[14] * d[33] * d[36] - 2 * d[3] * d[11] * d[34] * d[36] - 2 * d[2] * d[12] * d[34] * d[36] + 2 * d[5] * d[13] * d[34] * d[36] + 2 * d[4] * d[14] * d[34] * d[36] - 2 * d[4] * d[10] * d[35] * d[36] + 2 * d[5] * d[12] * d[35] * d[36] - 2 * d[1] * d[13] * d[35] * d[36] + 2 * d[3] * d[14] * d[35] * d[36] + d[11] * d[28] * std::pow(d[36], 2) + d[10] * d[29] * std::pow(d[36], 2) - 2 * d[14] * d[32] * std::pow(d[36], 2) + 2 * d[7] * d[11] * d[27] * d[37] - 2 * d[8] * d[14] * d[27] * d[37] + 2 * d[2] * d[16] * d[27] * d[37] - 2 * d[5] * d[17] * d[27] * d[37] + 2 * d[7] * d[9] * d[29] * d[37] - 2 * d[6] * d[12] * d[29] * d[37] - 2 * d[3] * d[15] * d[29] * d[37] + 2 * d[0] * d[16] * d[29] * d[37] - 2 * d[6] * d[11] * d[30] * d[37] + 2 * d[8] * d[13] * d[30] * d[37] - 2 * d[2] * d[15] * d[30] * d[37] + 2 * d[4] * d[17] * d[30] * d[37] + 2 * d[8] * d[12] * d[31] * d[37] - 4 * d[7] * d[13] * d[31] * d[37] + 2 * d[6] * d[14] * d[31] * d[37] + 2 * d[5] * d[15] * d[31] * d[37] - 4 * d[4] * d[16] * d[31] * d[37] + 2 * d[3] * d[17] * d[31] * d[37] - 2 * d[8] * d[9] * d[32] * d[37] + 2 * d[6] * d[13] * d[32] * d[37] + 2 * d[4] * d[15] * d[32] * d[37] - 2 * d[0] * d[17] * d[32] * d[37] - 2 * d[3] * d[11] * d[33] * d[37] - 2 * d[2] * d[12] * d[33] * d[37] + 2 * d[5] * d[13] * d[33] * d[37] + 2 * d[4] * d[14] * d[33] * d[37] + 2 * d[2] * d[9] * d[34] * d[37] + 2 * d[0] * d[11] * d[34] * d[37] - 4 * d[4] * d[13] * d[34] * d[37] - 2 * d[5] * d[9] * d[35] * d[37] + 2 * d[4] * d[12] * d[35] * d[37] + 2 * d[3] * d[13] * d[35] * d[37] - 2 * d[0] * d[14] * d[35] * d[37] - 2 * d[12] * d[29] * d[36] * d[37] - 2 * d[11] * d[30] * d[36] * d[37] + 2 * d[14] * d[31] * d[36] * d[37] + 2 * d[13] * d[32] * d[36] * d[37] + d[11] * d[27] * std::pow(d[37], 2) + d[9] * d[29] * std::pow(d[37], 2) - 2 * d[13] * d[31] * std::pow(d[37], 2) + 2 * d[8] * d[10] * d[27] * d[38] - 2 * d[7] * d[14] * d[27] * d[38] - 2 * d[5] * d[16] * d[27] * d[38] + 2 * d[1] * d[17] * d[27] * d[38] + 2 * d[8] * d[9] * d[28] * d[38] - 2 * d[6] * d[13] * d[28] * d[38] - 2 * d[4] * d[15] * d[28] * d[38] + 2 * d[0] * d[17] * d[28] * d[38] - 4 * d[8] * d[12] * d[30] * d[38] + 2 * d[7] * d[13] * d[30] * d[38] + 2 * d[6] * d[14] * d[30] * d[38] + 2 * d[5] * d[15] * d[30] * d[38] + 2 * d[4] * d[16] * d[30] * d[38] - 4 * d[3] * d[17] * d[30] * d[38] - 2 * d[6] * d[10] * d[31] * d[38] + 2 * d[7] * d[12] * d[31] * d[38] - 2 * d[1] * d[15] * d[31] * d[38] + 2 * d[3] * d[16] * d[31] * d[38] - 2 * d[7] * d[9] * d[32] * d[38] + 2 * d[6] * d[12] * d[32] * d[38] + 2 * d[3] * d[15] * d[32] * d[38] - 2 * d[0] * d[16] * d[32] * d[38] - 2 * d[4] * d[10] * d[33] * d[38] + 2 * d[5] * d[12] * d[33] * d[38] - 2 * d[1] * d[13] * d[33] * d[38] + 2 * d[3] * d[14] * d[33] * d[38] - 2 * d[5] * d[9] * d[34] * d[38] + 2 * d[4] * d[12] * d[34] * d[38] + 2 * d[3] * d[13] * d[34] * d[38] - 2 * d[0] * d[14] * d[34] * d[38] + 2 * d[1] * d[9] * d[35] * d[38] + 2 * d[0] * d[10] * d[35] * d[38] - 4 * d[3] * d[12] * d[35] * d[38] - 2 * d[13] * d[28] * d[36] * d[38] + 2 * d[14] * d[30] * d[36] * d[38] - 2 * d[10] * d[31] * d[36] * d[38] + 2 * d[12] * d[32] * d[36] * d[38] - 2 * d[14] * d[27] * d[37] * d[38] + 2 * d[13] * d[30] * d[37] * d[38] + 2 * d[12] * d[31] * d[37] * d[38] - 2 * d[9] * d[32] * d[37] * d[38] + d[10] * d[27] * std::pow(d[38], 2) + d[9] * d[28] * std::pow(d[38], 2) - 2 * d[12] * d[30] * std::pow(d[38], 2) - d[2] * d[10] * d[27] * d[45] - d[1] * d[11] * d[27] * d[45] + 2 * d[5] * d[14] * d[27] * d[45] - d[2] * d[9] * d[28] * d[45] - d[0] * d[11] * d[28] * d[45] + 2 * d[4] * d[13] * d[28] * d[45] - d[1] * d[9] * d[29] * d[45] - d[0] * d[10] * d[29] * d[45] + 2 * d[3] * d[12] * d[29] * d[45] + 2 * d[3] * d[11] * d[30] * d[45] + 2 * d[2] * d[12] * d[30] * d[45] - 2 * d[5] * d[13] * d[30] * d[45] - 2 * d[4] * d[14] * d[30] * d[45] + 2 * d[4] * d[10] * d[31] * d[45] - 2 * d[5] * d[12] * d[31] * d[45] + 2 * d[1] * d[13] * d[31] * d[45] - 2 * d[3] * d[14] * d[31] * d[45] + 2 * d[5] * d[9] * d[32] * d[45] - 2 * d[4] * d[12] * d[32] * d[45] - 2 * d[3] * d[13] * d[32] * d[45] + 2 * d[0] * d[14] * d[32] * d[45];
    coeffs[14] = 2 * d[6] * d[20] * d[28] * d[36] - 2 * d[8] * d[22] * d[28] * d[36] + 2 * d[2] * d[24] * d[28] * d[36] - 2 * d[4] * d[26] * d[28] * d[36] + 2 * d[6] * d[19] * d[29] * d[36] - 2 * d[7] * d[21] * d[29] * d[36] + 2 * d[1] * d[24] * d[29] * d[36] - 2 * d[3] * d[25] * d[29] * d[36] - 2 * d[7] * d[20] * d[30] * d[36] + 2 * d[8] * d[23] * d[30] * d[36] - 2 * d[2] * d[25] * d[30] * d[36] + 2 * d[5] * d[26] * d[30] * d[36] - 2 * d[8] * d[19] * d[31] * d[36] + 2 * d[7] * d[23] * d[31] * d[36] + 2 * d[5] * d[25] * d[31] * d[36] - 2 * d[1] * d[26] * d[31] * d[36] + 2 * d[8] * d[21] * d[32] * d[36] + 2 * d[7] * d[22] * d[32] * d[36] - 4 * d[6] * d[23] * d[32] * d[36] - 4 * d[5] * d[24] * d[32] * d[36] + 2 * d[4] * d[25] * d[32] * d[36] + 2 * d[3] * d[26] * d[32] * d[36] + 2 * d[2] * d[19] * d[33] * d[36] + 2 * d[1] * d[20] * d[33] * d[36] - 4 * d[5] * d[23] * d[33] * d[36] - 2 * d[3] * d[20] * d[34] * d[36] - 2 * d[2] * d[21] * d[34] * d[36] + 2 * d[5] * d[22] * d[34] * d[36] + 2 * d[4] * d[23] * d[34] * d[36] - 2 * d[4] * d[19] * d[35] * d[36] + 2 * d[5] * d[21] * d[35] * d[36] - 2 * d[1] * d[22] * d[35] * d[36] + 2 * d[3] * d[23] * d[35] * d[36] + d[20] * d[28] * std::pow(d[36], 2) + d[19] * d[29] * std::pow(d[36], 2) - 2 * d[23] * d[32] * std::pow(d[36], 2) + 2 * d[7] * d[20] * d[27] * d[37] - 2 * d[8] * d[23] * d[27] * d[37] + 2 * d[2] * d[25] * d[27] * d[37] - 2 * d[5] * d[26] * d[27] * d[37] + 2 * d[7] * d[18] * d[29] * d[37] - 2 * d[6] * d[21] * d[29] * d[37] - 2 * d[3] * d[24] * d[29] * d[37] + 2 * d[0] * d[25] * d[29] * d[37] - 2 * d[6] * d[20] * d[30] * d[37] + 2 * d[8] * d[22] * d[30] * d[37] - 2 * d[2] * d[24] * d[30] * d[37] + 2 * d[4] * d[26] * d[30] * d[37] + 2 * d[8] * d[21] * d[31] * d[37] - 4 * d[7] * d[22] * d[31] * d[37] + 2 * d[6] * d[23] * d[31] * d[37] + 2 * d[5] * d[24] * d[31] * d[37] - 4 * d[4] * d[25] * d[31] * d[37] + 2 * d[3] * d[26] * d[31] * d[37] - 2 * d[8] * d[18] * d[32] * d[37] + 2 * d[6] * d[22] * d[32] * d[37] + 2 * d[4] * d[24] * d[32] * d[37] - 2 * d[0] * d[26] * d[32] * d[37] - 2 * d[3] * d[20] * d[33] * d[37] - 2 * d[2] * d[21] * d[33] * d[37] + 2 * d[5] * d[22] * d[33] * d[37] + 2 * d[4] * d[23] * d[33] * d[37] + 2 * d[2] * d[18] * d[34] * d[37] + 2 * d[0] * d[20] * d[34] * d[37] - 4 * d[4] * d[22] * d[34] * d[37] - 2 * d[5] * d[18] * d[35] * d[37] + 2 * d[4] * d[21] * d[35] * d[37] + 2 * d[3] * d[22] * d[35] * d[37] - 2 * d[0] * d[23] * d[35] * d[37] - 2 * d[21] * d[29] * d[36] * d[37] - 2 * d[20] * d[30] * d[36] * d[37] + 2 * d[23] * d[31] * d[36] * d[37] + 2 * d[22] * d[32] * d[36] * d[37] + d[20] * d[27] * std::pow(d[37], 2) + d[18] * d[29] * std::pow(d[37], 2) - 2 * d[22] * d[31] * std::pow(d[37], 2) + 2 * d[8] * d[19] * d[27] * d[38] - 2 * d[7] * d[23] * d[27] * d[38] - 2 * d[5] * d[25] * d[27] * d[38] + 2 * d[1] * d[26] * d[27] * d[38] + 2 * d[8] * d[18] * d[28] * d[38] - 2 * d[6] * d[22] * d[28] * d[38] - 2 * d[4] * d[24] * d[28] * d[38] + 2 * d[0] * d[26] * d[28] * d[38] - 4 * d[8] * d[21] * d[30] * d[38] + 2 * d[7] * d[22] * d[30] * d[38] + 2 * d[6] * d[23] * d[30] * d[38] + 2 * d[5] * d[24] * d[30] * d[38] + 2 * d[4] * d[25] * d[30] * d[38] - 4 * d[3] * d[26] * d[30] * d[38] - 2 * d[6] * d[19] * d[31] * d[38] + 2 * d[7] * d[21] * d[31] * d[38] - 2 * d[1] * d[24] * d[31] * d[38] + 2 * d[3] * d[25] * d[31] * d[38] - 2 * d[7] * d[18] * d[32] * d[38] + 2 * d[6] * d[21] * d[32] * d[38] + 2 * d[3] * d[24] * d[32] * d[38] - 2 * d[0] * d[25] * d[32] * d[38] - 2 * d[4] * d[19] * d[33] * d[38] + 2 * d[5] * d[21] * d[33] * d[38] - 2 * d[1] * d[22] * d[33] * d[38] + 2 * d[3] * d[23] * d[33] * d[38] - 2 * d[5] * d[18] * d[34] * d[38] + 2 * d[4] * d[21] * d[34] * d[38] + 2 * d[3] * d[22] * d[34] * d[38] - 2 * d[0] * d[23] * d[34] * d[38] + 2 * d[1] * d[18] * d[35] * d[38] + 2 * d[0] * d[19] * d[35] * d[38] - 4 * d[3] * d[21] * d[35] * d[38] - 2 * d[22] * d[28] * d[36] * d[38] + 2 * d[23] * d[30] * d[36] * d[38] - 2 * d[19] * d[31] * d[36] * d[38] + 2 * d[21] * d[32] * d[36] * d[38] - 2 * d[23] * d[27] * d[37] * d[38] + 2 * d[22] * d[30] * d[37] * d[38] + 2 * d[21] * d[31] * d[37] * d[38] - 2 * d[18] * d[32] * d[37] * d[38] + d[19] * d[27] * std::pow(d[38], 2) + d[18] * d[28] * std::pow(d[38], 2) - 2 * d[21] * d[30] * std::pow(d[38], 2) - d[2] * d[19] * d[27] * d[45] - d[1] * d[20] * d[27] * d[45] + 2 * d[5] * d[23] * d[27] * d[45] - d[2] * d[18] * d[28] * d[45] - d[0] * d[20] * d[28] * d[45] + 2 * d[4] * d[22] * d[28] * d[45] - d[1] * d[18] * d[29] * d[45] - d[0] * d[19] * d[29] * d[45] + 2 * d[3] * d[21] * d[29] * d[45] + 2 * d[3] * d[20] * d[30] * d[45] + 2 * d[2] * d[21] * d[30] * d[45] - 2 * d[5] * d[22] * d[30] * d[45] - 2 * d[4] * d[23] * d[30] * d[45] + 2 * d[4] * d[19] * d[31] * d[45] - 2 * d[5] * d[21] * d[31] * d[45] + 2 * d[1] * d[22] * d[31] * d[45] - 2 * d[3] * d[23] * d[31] * d[45] + 2 * d[5] * d[18] * d[32] * d[45] - 2 * d[4] * d[21] * d[32] * d[45] - 2 * d[3] * d[22] * d[32] * d[45] + 2 * d[0] * d[23] * d[32] * d[45];
    coeffs[15] = 2 * d[6] * d[28] * d[29] * d[36] - 2 * d[7] * d[29] * d[30] * d[36] - 2 * d[8] * d[28] * d[31] * d[36] + 2 * d[8] * d[30] * d[32] * d[36] + 2 * d[7] * d[31] * d[32] * d[36] - 2 * d[6] * std::pow(d[32], 2) * d[36] + 2 * d[2] * d[28] * d[33] * d[36] + 2 * d[1] * d[29] * d[33] * d[36] - 4 * d[5] * d[32] * d[33] * d[36] - 2 * d[3] * d[29] * d[34] * d[36] - 2 * d[2] * d[30] * d[34] * d[36] + 2 * d[5] * d[31] * d[34] * d[36] + 2 * d[4] * d[32] * d[34] * d[36] - 2 * d[4] * d[28] * d[35] * d[36] + 2 * d[5] * d[30] * d[35] * d[36] - 2 * d[1] * d[31] * d[35] * d[36] + 2 * d[3] * d[32] * d[35] * d[36] + d[28] * d[29] * std::pow(d[36], 2) - std::pow(d[32], 2) * std::pow(d[36], 2) + 2 * d[7] * d[27] * d[29] * d[37] - 2 * d[6] * d[29] * d[30] * d[37] + 2 * d[8] * d[30] * d[31] * d[37] - 2 * d[7] * std::pow(d[31], 2) * d[37] - 2 * d[8] * d[27] * d[32] * d[37] + 2 * d[6] * d[31] * d[32] * d[37] - 2 * d[3] * d[29] * d[33] * d[37] - 2 * d[2] * d[30] * d[33] * d[37] + 2 * d[5] * d[31] * d[33] * d[37] + 2 * d[4] * d[32] * d[33] * d[37] + 2 * d[2] * d[27] * d[34] * d[37] + 2 * d[0] * d[29] * d[34] * d[37] - 4 * d[4] * d[31] * d[34] * d[37] - 2 * d[5] * d[27] * d[35] * d[37] + 2 * d[4] * d[30] * d[35] * d[37] + 2 * d[3] * d[31] * d[35] * d[37] - 2 * d[0] * d[32] * d[35] * d[37] - 2 * d[29] * d[30] * d[36] * d[37] + 2 * d[31] * d[32] * d[36] * d[37] + d[27] * d[29] * std::pow(d[37], 2) - std::pow(d[31], 2) * std::pow(d[37], 2) + 2 * d[8] * d[27] * d[28] * d[38] - 2 * d[8] * std::pow(d[30], 2) * d[38] - 2 * d[6] * d[28] * d[31] * d[38] + 2 * d[7] * d[30] * d[31] * d[38] - 2 * d[7] * d[27] * d[32] * d[38] + 2 * d[6] * d[30] * d[32] * d[38] - 2 * d[4] * d[28] * d[33] * d[38] + 2 * d[5] * d[30] * d[33] * d[38] - 2 * d[1] * d[31] * d[33] * d[38] + 2 * d[3] * d[32] * d[33] * d[38] - 2 * d[5] * d[27] * d[34] * d[38] + 2 * d[4] * d[30] * d[34] * d[38] + 2 * d[3] * d[31] * d[34] * d[38] - 2 * d[0] * d[32] * d[34] * d[38] + 2 * d[1] * d[27] * d[35] * d[38] + 2 * d[0] * d[28] * d[35] * d[38] - 4 * d[3] * d[30] * d[35] * d[38] - 2 * d[28] * d[31] * d[36] * d[38] + 2 * d[30] * d[32] * d[36] * d[38] + 2 * d[30] * d[31] * d[37] * d[38] - 2 * d[27] * d[32] * d[37] * d[38] + d[27] * d[28] * std::pow(d[38], 2) - std::pow(d[30], 2) * std::pow(d[38], 2) - d[2] * d[27] * d[28] * d[45] - d[1] * d[27] * d[29] * d[45] - d[0] * d[28] * d[29] * d[45] + 2 * d[3] * d[29] * d[30] * d[45] + d[2] * std::pow(d[30], 2) * d[45] + 2 * d[4] * d[28] * d[31] * d[45] - 2 * d[5] * d[30] * d[31] * d[45] + d[1] * std::pow(d[31], 2) * d[45] + 2 * d[5] * d[27] * d[32] * d[45] - 2 * d[4] * d[30] * d[32] * d[45] - 2 * d[3] * d[31] * d[32] * d[45] + d[0] * std::pow(d[32], 2) * d[45];
    coeffs[16] = 2 * d[2] * d[6] * d[10] * d[36] - 2 * d[4] * d[8] * d[10] * d[36] + 2 * d[1] * d[6] * d[11] * d[36] - 2 * d[3] * d[7] * d[11] * d[36] - 2 * d[2] * d[7] * d[12] * d[36] + 2 * d[5] * d[8] * d[12] * d[36] + 2 * d[5] * d[7] * d[13] * d[36] - 2 * d[1] * d[8] * d[13] * d[36] - 4 * d[5] * d[6] * d[14] * d[36] + 2 * d[4] * d[7] * d[14] * d[36] + 2 * d[3] * d[8] * d[14] * d[36] + 2 * d[1] * d[2] * d[15] * d[36] - 2 * std::pow(d[5], 2) * d[15] * d[36] - 2 * d[2] * d[3] * d[16] * d[36] + 2 * d[4] * d[5] * d[16] * d[36] - 2 * d[1] * d[4] * d[17] * d[36] + 2 * d[3] * d[5] * d[17] * d[36] + d[2] * d[10] * std::pow(d[36], 2) + d[1] * d[11] * std::pow(d[36], 2) - 2 * d[5] * d[14] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[9] * d[37] - 2 * d[5] * d[8] * d[9] * d[37] - 2 * d[3] * d[6] * d[11] * d[37] + 2 * d[0] * d[7] * d[11] * d[37] - 2 * d[2] * d[6] * d[12] * d[37] + 2 * d[4] * d[8] * d[12] * d[37] + 2 * d[5] * d[6] * d[13] * d[37] - 4 * d[4] * d[7] * d[13] * d[37] + 2 * d[3] * d[8] * d[13] * d[37] + 2 * d[4] * d[6] * d[14] * d[37] - 2 * d[0] * d[8] * d[14] * d[37] - 2 * d[2] * d[3] * d[15] * d[37] + 2 * d[4] * d[5] * d[15] * d[37] + 2 * d[0] * d[2] * d[16] * d[37] - 2 * std::pow(d[4], 2) * d[16] * d[37] + 2 * d[3] * d[4] * d[17] * d[37] - 2 * d[0] * d[5] * d[17] * d[37] - 2 * d[3] * d[11] * d[36] * d[37] - 2 * d[2] * d[12] * d[36] * d[37] + 2 * d[5] * d[13] * d[36] * d[37] + 2 * d[4] * d[14] * d[36] * d[37] + d[2] * d[9] * std::pow(d[37], 2) + d[0] * d[11] * std::pow(d[37], 2) - 2 * d[4] * d[13] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[9] * d[38] + 2 * d[1] * d[8] * d[9] * d[38] - 2 * d[4] * d[6] * d[10] * d[38] + 2 * d[0] * d[8] * d[10] * d[38] + 2 * d[5] * d[6] * d[12] * d[38] + 2 * d[4] * d[7] * d[12] * d[38] - 4 * d[3] * d[8] * d[12] * d[38] - 2 * d[1] * d[6] * d[13] * d[38] + 2 * d[3] * d[7] * d[13] * d[38] + 2 * d[3] * d[6] * d[14] * d[38] - 2 * d[0] * d[7] * d[14] * d[38] - 2 * d[1] * d[4] * d[15] * d[38] + 2 * d[3] * d[5] * d[15] * d[38] + 2 * d[3] * d[4] * d[16] * d[38] - 2 * d[0] * d[5] * d[16] * d[38] + 2 * d[0] * d[1] * d[17] * d[38] - 2 * std::pow(d[3], 2) * d[17] * d[38] - 2 * d[4] * d[10] * d[36] * d[38] + 2 * d[5] * d[12] * d[36] * d[38] - 2 * d[1] * d[13] * d[36] * d[38] + 2 * d[3] * d[14] * d[36] * d[38] - 2 * d[5] * d[9] * d[37] * d[38] + 2 * d[4] * d[12] * d[37] * d[38] + 2 * d[3] * d[13] * d[37] * d[38] - 2 * d[0] * d[14] * d[37] * d[38] + d[1] * d[9] * std::pow(d[38], 2) + d[0] * d[10] * std::pow(d[38], 2) - 2 * d[3] * d[12] * std::pow(d[38], 2) - d[1] * d[2] * d[9] * d[45] + std::pow(d[5], 2) * d[9] * d[45] - d[0] * d[2] * d[10] * d[45] + std::pow(d[4], 2) * d[10] * d[45] - d[0] * d[1] * d[11] * d[45] + std::pow(d[3], 2) * d[11] * d[45] + 2 * d[2] * d[3] * d[12] * d[45] - 2 * d[4] * d[5] * d[12] * d[45] + 2 * d[1] * d[4] * d[13] * d[45] - 2 * d[3] * d[5] * d[13] * d[45] - 2 * d[3] * d[4] * d[14] * d[45] + 2 * d[0] * d[5] * d[14] * d[45];
    coeffs[17] = 2 * d[2] * d[6] * d[19] * d[36] - 2 * d[4] * d[8] * d[19] * d[36] + 2 * d[1] * d[6] * d[20] * d[36] - 2 * d[3] * d[7] * d[20] * d[36] - 2 * d[2] * d[7] * d[21] * d[36] + 2 * d[5] * d[8] * d[21] * d[36] + 2 * d[5] * d[7] * d[22] * d[36] - 2 * d[1] * d[8] * d[22] * d[36] - 4 * d[5] * d[6] * d[23] * d[36] + 2 * d[4] * d[7] * d[23] * d[36] + 2 * d[3] * d[8] * d[23] * d[36] + 2 * d[1] * d[2] * d[24] * d[36] - 2 * std::pow(d[5], 2) * d[24] * d[36] - 2 * d[2] * d[3] * d[25] * d[36] + 2 * d[4] * d[5] * d[25] * d[36] - 2 * d[1] * d[4] * d[26] * d[36] + 2 * d[3] * d[5] * d[26] * d[36] + d[2] * d[19] * std::pow(d[36], 2) + d[1] * d[20] * std::pow(d[36], 2) - 2 * d[5] * d[23] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[18] * d[37] - 2 * d[5] * d[8] * d[18] * d[37] - 2 * d[3] * d[6] * d[20] * d[37] + 2 * d[0] * d[7] * d[20] * d[37] - 2 * d[2] * d[6] * d[21] * d[37] + 2 * d[4] * d[8] * d[21] * d[37] + 2 * d[5] * d[6] * d[22] * d[37] - 4 * d[4] * d[7] * d[22] * d[37] + 2 * d[3] * d[8] * d[22] * d[37] + 2 * d[4] * d[6] * d[23] * d[37] - 2 * d[0] * d[8] * d[23] * d[37] - 2 * d[2] * d[3] * d[24] * d[37] + 2 * d[4] * d[5] * d[24] * d[37] + 2 * d[0] * d[2] * d[25] * d[37] - 2 * std::pow(d[4], 2) * d[25] * d[37] + 2 * d[3] * d[4] * d[26] * d[37] - 2 * d[0] * d[5] * d[26] * d[37] - 2 * d[3] * d[20] * d[36] * d[37] - 2 * d[2] * d[21] * d[36] * d[37] + 2 * d[5] * d[22] * d[36] * d[37] + 2 * d[4] * d[23] * d[36] * d[37] + d[2] * d[18] * std::pow(d[37], 2) + d[0] * d[20] * std::pow(d[37], 2) - 2 * d[4] * d[22] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[18] * d[38] + 2 * d[1] * d[8] * d[18] * d[38] - 2 * d[4] * d[6] * d[19] * d[38] + 2 * d[0] * d[8] * d[19] * d[38] + 2 * d[5] * d[6] * d[21] * d[38] + 2 * d[4] * d[7] * d[21] * d[38] - 4 * d[3] * d[8] * d[21] * d[38] - 2 * d[1] * d[6] * d[22] * d[38] + 2 * d[3] * d[7] * d[22] * d[38] + 2 * d[3] * d[6] * d[23] * d[38] - 2 * d[0] * d[7] * d[23] * d[38] - 2 * d[1] * d[4] * d[24] * d[38] + 2 * d[3] * d[5] * d[24] * d[38] + 2 * d[3] * d[4] * d[25] * d[38] - 2 * d[0] * d[5] * d[25] * d[38] + 2 * d[0] * d[1] * d[26] * d[38] - 2 * std::pow(d[3], 2) * d[26] * d[38] - 2 * d[4] * d[19] * d[36] * d[38] + 2 * d[5] * d[21] * d[36] * d[38] - 2 * d[1] * d[22] * d[36] * d[38] + 2 * d[3] * d[23] * d[36] * d[38] - 2 * d[5] * d[18] * d[37] * d[38] + 2 * d[4] * d[21] * d[37] * d[38] + 2 * d[3] * d[22] * d[37] * d[38] - 2 * d[0] * d[23] * d[37] * d[38] + d[1] * d[18] * std::pow(d[38], 2) + d[0] * d[19] * std::pow(d[38], 2) - 2 * d[3] * d[21] * std::pow(d[38], 2) - d[1] * d[2] * d[18] * d[45] + std::pow(d[5], 2) * d[18] * d[45] - d[0] * d[2] * d[19] * d[45] + std::pow(d[4], 2) * d[19] * d[45] - d[0] * d[1] * d[20] * d[45] + std::pow(d[3], 2) * d[20] * d[45] + 2 * d[2] * d[3] * d[21] * d[45] - 2 * d[4] * d[5] * d[21] * d[45] + 2 * d[1] * d[4] * d[22] * d[45] - 2 * d[3] * d[5] * d[22] * d[45] - 2 * d[3] * d[4] * d[23] * d[45] + 2 * d[0] * d[5] * d[23] * d[45];
    coeffs[18] = 2 * d[2] * d[6] * d[28] * d[36] - 2 * d[4] * d[8] * d[28] * d[36] + 2 * d[1] * d[6] * d[29] * d[36] - 2 * d[3] * d[7] * d[29] * d[36] - 2 * d[2] * d[7] * d[30] * d[36] + 2 * d[5] * d[8] * d[30] * d[36] + 2 * d[5] * d[7] * d[31] * d[36] - 2 * d[1] * d[8] * d[31] * d[36] - 4 * d[5] * d[6] * d[32] * d[36] + 2 * d[4] * d[7] * d[32] * d[36] + 2 * d[3] * d[8] * d[32] * d[36] + 2 * d[1] * d[2] * d[33] * d[36] - 2 * std::pow(d[5], 2) * d[33] * d[36] - 2 * d[2] * d[3] * d[34] * d[36] + 2 * d[4] * d[5] * d[34] * d[36] - 2 * d[1] * d[4] * d[35] * d[36] + 2 * d[3] * d[5] * d[35] * d[36] + d[2] * d[28] * std::pow(d[36], 2) + d[1] * d[29] * std::pow(d[36], 2) - 2 * d[5] * d[32] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[27] * d[37] - 2 * d[5] * d[8] * d[27] * d[37] - 2 * d[3] * d[6] * d[29] * d[37] + 2 * d[0] * d[7] * d[29] * d[37] - 2 * d[2] * d[6] * d[30] * d[37] + 2 * d[4] * d[8] * d[30] * d[37] + 2 * d[5] * d[6] * d[31] * d[37] - 4 * d[4] * d[7] * d[31] * d[37] + 2 * d[3] * d[8] * d[31] * d[37] + 2 * d[4] * d[6] * d[32] * d[37] - 2 * d[0] * d[8] * d[32] * d[37] - 2 * d[2] * d[3] * d[33] * d[37] + 2 * d[4] * d[5] * d[33] * d[37] + 2 * d[0] * d[2] * d[34] * d[37] - 2 * std::pow(d[4], 2) * d[34] * d[37] + 2 * d[3] * d[4] * d[35] * d[37] - 2 * d[0] * d[5] * d[35] * d[37] - 2 * d[3] * d[29] * d[36] * d[37] - 2 * d[2] * d[30] * d[36] * d[37] + 2 * d[5] * d[31] * d[36] * d[37] + 2 * d[4] * d[32] * d[36] * d[37] + d[2] * d[27] * std::pow(d[37], 2) + d[0] * d[29] * std::pow(d[37], 2) - 2 * d[4] * d[31] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[27] * d[38] + 2 * d[1] * d[8] * d[27] * d[38] - 2 * d[4] * d[6] * d[28] * d[38] + 2 * d[0] * d[8] * d[28] * d[38] + 2 * d[5] * d[6] * d[30] * d[38] + 2 * d[4] * d[7] * d[30] * d[38] - 4 * d[3] * d[8] * d[30] * d[38] - 2 * d[1] * d[6] * d[31] * d[38] + 2 * d[3] * d[7] * d[31] * d[38] + 2 * d[3] * d[6] * d[32] * d[38] - 2 * d[0] * d[7] * d[32] * d[38] - 2 * d[1] * d[4] * d[33] * d[38] + 2 * d[3] * d[5] * d[33] * d[38] + 2 * d[3] * d[4] * d[34] * d[38] - 2 * d[0] * d[5] * d[34] * d[38] + 2 * d[0] * d[1] * d[35] * d[38] - 2 * std::pow(d[3], 2) * d[35] * d[38] - 2 * d[4] * d[28] * d[36] * d[38] + 2 * d[5] * d[30] * d[36] * d[38] - 2 * d[1] * d[31] * d[36] * d[38] + 2 * d[3] * d[32] * d[36] * d[38] - 2 * d[5] * d[27] * d[37] * d[38] + 2 * d[4] * d[30] * d[37] * d[38] + 2 * d[3] * d[31] * d[37] * d[38] - 2 * d[0] * d[32] * d[37] * d[38] + d[1] * d[27] * std::pow(d[38], 2) + d[0] * d[28] * std::pow(d[38], 2) - 2 * d[3] * d[30] * std::pow(d[38], 2) - d[1] * d[2] * d[27] * d[45] + std::pow(d[5], 2) * d[27] * d[45] - d[0] * d[2] * d[28] * d[45] + std::pow(d[4], 2) * d[28] * d[45] - d[0] * d[1] * d[29] * d[45] + std::pow(d[3], 2) * d[29] * d[45] + 2 * d[2] * d[3] * d[30] * d[45] - 2 * d[4] * d[5] * d[30] * d[45] + 2 * d[1] * d[4] * d[31] * d[45] - 2 * d[3] * d[5] * d[31] * d[45] - 2 * d[3] * d[4] * d[32] * d[45] + 2 * d[0] * d[5] * d[32] * d[45];
    coeffs[19] = 2 * d[1] * d[2] * d[6] * d[36] - 2 * std::pow(d[5], 2) * d[6] * d[36] - 2 * d[2] * d[3] * d[7] * d[36] + 2 * d[4] * d[5] * d[7] * d[36] - 2 * d[1] * d[4] * d[8] * d[36] + 2 * d[3] * d[5] * d[8] * d[36] + d[1] * d[2] * std::pow(d[36], 2) - std::pow(d[5], 2) * std::pow(d[36], 2) - 2 * d[2] * d[3] * d[6] * d[37] + 2 * d[4] * d[5] * d[6] * d[37] + 2 * d[0] * d[2] * d[7] * d[37] - 2 * std::pow(d[4], 2) * d[7] * d[37] + 2 * d[3] * d[4] * d[8] * d[37] - 2 * d[0] * d[5] * d[8] * d[37] - 2 * d[2] * d[3] * d[36] * d[37] + 2 * d[4] * d[5] * d[36] * d[37] + d[0] * d[2] * std::pow(d[37], 2) - std::pow(d[4], 2) * std::pow(d[37], 2) - 2 * d[1] * d[4] * d[6] * d[38] + 2 * d[3] * d[5] * d[6] * d[38] + 2 * d[3] * d[4] * d[7] * d[38] - 2 * d[0] * d[5] * d[7] * d[38] + 2 * d[0] * d[1] * d[8] * d[38] - 2 * std::pow(d[3], 2) * d[8] * d[38] - 2 * d[1] * d[4] * d[36] * d[38] + 2 * d[3] * d[5] * d[36] * d[38] + 2 * d[3] * d[4] * d[37] * d[38] - 2 * d[0] * d[5] * d[37] * d[38] + d[0] * d[1] * std::pow(d[38], 2) - std::pow(d[3], 2) * std::pow(d[38], 2) - d[0] * d[1] * d[2] * d[45] + d[2] * std::pow(d[3], 2) * d[45] + d[1] * std::pow(d[4], 2) * d[45] - 2 * d[3] * d[4] * d[5] * d[45] + d[0] * std::pow(d[5], 2) * d[45];
    coeffs[20] = 2 * d[10] * d[11] * d[15] * d[39] - 2 * std::pow(d[14], 2) * d[15] * d[39] - 2 * d[11] * d[12] * d[16] * d[39] + 2 * d[13] * d[14] * d[16] * d[39] - 2 * d[10] * d[13] * d[17] * d[39] + 2 * d[12] * d[14] * d[17] * d[39] - 2 * d[11] * d[12] * d[15] * d[40] + 2 * d[13] * d[14] * d[15] * d[40] + 2 * d[9] * d[11] * d[16] * d[40] - 2 * std::pow(d[13], 2) * d[16] * d[40] + 2 * d[12] * d[13] * d[17] * d[40] - 2 * d[9] * d[14] * d[17] * d[40] - 2 * d[10] * d[13] * d[15] * d[41] + 2 * d[12] * d[14] * d[15] * d[41] + 2 * d[12] * d[13] * d[16] * d[41] - 2 * d[9] * d[14] * d[16] * d[41] + 2 * d[9] * d[10] * d[17] * d[41] - 2 * std::pow(d[12], 2) * d[17] * d[41] - d[9] * d[10] * d[11] * d[46] + d[11] * std::pow(d[12], 2) * d[46] + d[10] * std::pow(d[13], 2) * d[46] - 2 * d[12] * d[13] * d[14] * d[46] + d[9] * std::pow(d[14], 2) * d[46];
    coeffs[21] = 2 * d[11] * d[15] * d[19] * d[39] - 2 * d[13] * d[17] * d[19] * d[39] + 2 * d[10] * d[15] * d[20] * d[39] - 2 * d[12] * d[16] * d[20] * d[39] - 2 * d[11] * d[16] * d[21] * d[39] + 2 * d[14] * d[17] * d[21] * d[39] + 2 * d[14] * d[16] * d[22] * d[39] - 2 * d[10] * d[17] * d[22] * d[39] - 4 * d[14] * d[15] * d[23] * d[39] + 2 * d[13] * d[16] * d[23] * d[39] + 2 * d[12] * d[17] * d[23] * d[39] + 2 * d[10] * d[11] * d[24] * d[39] - 2 * std::pow(d[14], 2) * d[24] * d[39] - 2 * d[11] * d[12] * d[25] * d[39] + 2 * d[13] * d[14] * d[25] * d[39] - 2 * d[10] * d[13] * d[26] * d[39] + 2 * d[12] * d[14] * d[26] * d[39] + 2 * d[11] * d[16] * d[18] * d[40] - 2 * d[14] * d[17] * d[18] * d[40] - 2 * d[12] * d[15] * d[20] * d[40] + 2 * d[9] * d[16] * d[20] * d[40] - 2 * d[11] * d[15] * d[21] * d[40] + 2 * d[13] * d[17] * d[21] * d[40] + 2 * d[14] * d[15] * d[22] * d[40] - 4 * d[13] * d[16] * d[22] * d[40] + 2 * d[12] * d[17] * d[22] * d[40] + 2 * d[13] * d[15] * d[23] * d[40] - 2 * d[9] * d[17] * d[23] * d[40] - 2 * d[11] * d[12] * d[24] * d[40] + 2 * d[13] * d[14] * d[24] * d[40] + 2 * d[9] * d[11] * d[25] * d[40] - 2 * std::pow(d[13], 2) * d[25] * d[40] + 2 * d[12] * d[13] * d[26] * d[40] - 2 * d[9] * d[14] * d[26] * d[40] - 2 * d[14] * d[16] * d[18] * d[41] + 2 * d[10] * d[17] * d[18] * d[41] - 2 * d[13] * d[15] * d[19] * d[41] + 2 * d[9] * d[17] * d[19] * d[41] + 2 * d[14] * d[15] * d[21] * d[41] + 2 * d[13] * d[16] * d[21] * d[41] - 4 * d[12] * d[17] * d[21] * d[41] - 2 * d[10] * d[15] * d[22] * d[41] + 2 * d[12] * d[16] * d[22] * d[41] + 2 * d[12] * d[15] * d[23] * d[41] - 2 * d[9] * d[16] * d[23] * d[41] - 2 * d[10] * d[13] * d[24] * d[41] + 2 * d[12] * d[14] * d[24] * d[41] + 2 * d[12] * d[13] * d[25] * d[41] - 2 * d[9] * d[14] * d[25] * d[41] + 2 * d[9] * d[10] * d[26] * d[41] - 2 * std::pow(d[12], 2) * d[26] * d[41] - d[10] * d[11] * d[18] * d[46] + std::pow(d[14], 2) * d[18] * d[46] - d[9] * d[11] * d[19] * d[46] + std::pow(d[13], 2) * d[19] * d[46] - d[9] * d[10] * d[20] * d[46] + std::pow(d[12], 2) * d[20] * d[46] + 2 * d[11] * d[12] * d[21] * d[46] - 2 * d[13] * d[14] * d[21] * d[46] + 2 * d[10] * d[13] * d[22] * d[46] - 2 * d[12] * d[14] * d[22] * d[46] - 2 * d[12] * d[13] * d[23] * d[46] + 2 * d[9] * d[14] * d[23] * d[46];
    coeffs[22] = 2 * d[15] * d[19] * d[20] * d[39] - 2 * d[16] * d[20] * d[21] * d[39] - 2 * d[17] * d[19] * d[22] * d[39] + 2 * d[17] * d[21] * d[23] * d[39] + 2 * d[16] * d[22] * d[23] * d[39] - 2 * d[15] * std::pow(d[23], 2) * d[39] + 2 * d[11] * d[19] * d[24] * d[39] + 2 * d[10] * d[20] * d[24] * d[39] - 4 * d[14] * d[23] * d[24] * d[39] - 2 * d[12] * d[20] * d[25] * d[39] - 2 * d[11] * d[21] * d[25] * d[39] + 2 * d[14] * d[22] * d[25] * d[39] + 2 * d[13] * d[23] * d[25] * d[39] - 2 * d[13] * d[19] * d[26] * d[39] + 2 * d[14] * d[21] * d[26] * d[39] - 2 * d[10] * d[22] * d[26] * d[39] + 2 * d[12] * d[23] * d[26] * d[39] + 2 * d[16] * d[18] * d[20] * d[40] - 2 * d[15] * d[20] * d[21] * d[40] + 2 * d[17] * d[21] * d[22] * d[40] - 2 * d[16] * std::pow(d[22], 2) * d[40] - 2 * d[17] * d[18] * d[23] * d[40] + 2 * d[15] * d[22] * d[23] * d[40] - 2 * d[12] * d[20] * d[24] * d[40] - 2 * d[11] * d[21] * d[24] * d[40] + 2 * d[14] * d[22] * d[24] * d[40] + 2 * d[13] * d[23] * d[24] * d[40] + 2 * d[11] * d[18] * d[25] * d[40] + 2 * d[9] * d[20] * d[25] * d[40] - 4 * d[13] * d[22] * d[25] * d[40] - 2 * d[14] * d[18] * d[26] * d[40] + 2 * d[13] * d[21] * d[26] * d[40] + 2 * d[12] * d[22] * d[26] * d[40] - 2 * d[9] * d[23] * d[26] * d[40] + 2 * d[17] * d[18] * d[19] * d[41] - 2 * d[17] * std::pow(d[21], 2) * d[41] - 2 * d[15] * d[19] * d[22] * d[41] + 2 * d[16] * d[21] * d[22] * d[41] - 2 * d[16] * d[18] * d[23] * d[41] + 2 * d[15] * d[21] * d[23] * d[41] - 2 * d[13] * d[19] * d[24] * d[41] + 2 * d[14] * d[21] * d[24] * d[41] - 2 * d[10] * d[22] * d[24] * d[41] + 2 * d[12] * d[23] * d[24] * d[41] - 2 * d[14] * d[18] * d[25] * d[41] + 2 * d[13] * d[21] * d[25] * d[41] + 2 * d[12] * d[22] * d[25] * d[41] - 2 * d[9] * d[23] * d[25] * d[41] + 2 * d[10] * d[18] * d[26] * d[41] + 2 * d[9] * d[19] * d[26] * d[41] - 4 * d[12] * d[21] * d[26] * d[41] - d[11] * d[18] * d[19] * d[46] - d[10] * d[18] * d[20] * d[46] - d[9] * d[19] * d[20] * d[46] + 2 * d[12] * d[20] * d[21] * d[46] + d[11] * std::pow(d[21], 2) * d[46] + 2 * d[13] * d[19] * d[22] * d[46] - 2 * d[14] * d[21] * d[22] * d[46] + d[10] * std::pow(d[22], 2) * d[46] + 2 * d[14] * d[18] * d[23] * d[46] - 2 * d[13] * d[21] * d[23] * d[46] - 2 * d[12] * d[22] * d[23] * d[46] + d[9] * std::pow(d[23], 2) * d[46];
    coeffs[23] = 2 * d[19] * d[20] * d[24] * d[39] - 2 * std::pow(d[23], 2) * d[24] * d[39] - 2 * d[20] * d[21] * d[25] * d[39] + 2 * d[22] * d[23] * d[25] * d[39] - 2 * d[19] * d[22] * d[26] * d[39] + 2 * d[21] * d[23] * d[26] * d[39] - 2 * d[20] * d[21] * d[24] * d[40] + 2 * d[22] * d[23] * d[24] * d[40] + 2 * d[18] * d[20] * d[25] * d[40] - 2 * std::pow(d[22], 2) * d[25] * d[40] + 2 * d[21] * d[22] * d[26] * d[40] - 2 * d[18] * d[23] * d[26] * d[40] - 2 * d[19] * d[22] * d[24] * d[41] + 2 * d[21] * d[23] * d[24] * d[41] + 2 * d[21] * d[22] * d[25] * d[41] - 2 * d[18] * d[23] * d[25] * d[41] + 2 * d[18] * d[19] * d[26] * d[41] - 2 * std::pow(d[21], 2) * d[26] * d[41] - d[18] * d[19] * d[20] * d[46] + d[20] * std::pow(d[21], 2) * d[46] + d[19] * std::pow(d[22], 2) * d[46] - 2 * d[21] * d[22] * d[23] * d[46] + d[18] * std::pow(d[23], 2) * d[46];
    coeffs[24] = 2 * d[11] * d[15] * d[28] * d[39] - 2 * d[13] * d[17] * d[28] * d[39] + 2 * d[10] * d[15] * d[29] * d[39] - 2 * d[12] * d[16] * d[29] * d[39] - 2 * d[11] * d[16] * d[30] * d[39] + 2 * d[14] * d[17] * d[30] * d[39] + 2 * d[14] * d[16] * d[31] * d[39] - 2 * d[10] * d[17] * d[31] * d[39] - 4 * d[14] * d[15] * d[32] * d[39] + 2 * d[13] * d[16] * d[32] * d[39] + 2 * d[12] * d[17] * d[32] * d[39] + 2 * d[10] * d[11] * d[33] * d[39] - 2 * std::pow(d[14], 2) * d[33] * d[39] - 2 * d[11] * d[12] * d[34] * d[39] + 2 * d[13] * d[14] * d[34] * d[39] - 2 * d[10] * d[13] * d[35] * d[39] + 2 * d[12] * d[14] * d[35] * d[39] + 2 * d[11] * d[16] * d[27] * d[40] - 2 * d[14] * d[17] * d[27] * d[40] - 2 * d[12] * d[15] * d[29] * d[40] + 2 * d[9] * d[16] * d[29] * d[40] - 2 * d[11] * d[15] * d[30] * d[40] + 2 * d[13] * d[17] * d[30] * d[40] + 2 * d[14] * d[15] * d[31] * d[40] - 4 * d[13] * d[16] * d[31] * d[40] + 2 * d[12] * d[17] * d[31] * d[40] + 2 * d[13] * d[15] * d[32] * d[40] - 2 * d[9] * d[17] * d[32] * d[40] - 2 * d[11] * d[12] * d[33] * d[40] + 2 * d[13] * d[14] * d[33] * d[40] + 2 * d[9] * d[11] * d[34] * d[40] - 2 * std::pow(d[13], 2) * d[34] * d[40] + 2 * d[12] * d[13] * d[35] * d[40] - 2 * d[9] * d[14] * d[35] * d[40] - 2 * d[14] * d[16] * d[27] * d[41] + 2 * d[10] * d[17] * d[27] * d[41] - 2 * d[13] * d[15] * d[28] * d[41] + 2 * d[9] * d[17] * d[28] * d[41] + 2 * d[14] * d[15] * d[30] * d[41] + 2 * d[13] * d[16] * d[30] * d[41] - 4 * d[12] * d[17] * d[30] * d[41] - 2 * d[10] * d[15] * d[31] * d[41] + 2 * d[12] * d[16] * d[31] * d[41] + 2 * d[12] * d[15] * d[32] * d[41] - 2 * d[9] * d[16] * d[32] * d[41] - 2 * d[10] * d[13] * d[33] * d[41] + 2 * d[12] * d[14] * d[33] * d[41] + 2 * d[12] * d[13] * d[34] * d[41] - 2 * d[9] * d[14] * d[34] * d[41] + 2 * d[9] * d[10] * d[35] * d[41] - 2 * std::pow(d[12], 2) * d[35] * d[41] - d[10] * d[11] * d[27] * d[46] + std::pow(d[14], 2) * d[27] * d[46] - d[9] * d[11] * d[28] * d[46] + std::pow(d[13], 2) * d[28] * d[46] - d[9] * d[10] * d[29] * d[46] + std::pow(d[12], 2) * d[29] * d[46] + 2 * d[11] * d[12] * d[30] * d[46] - 2 * d[13] * d[14] * d[30] * d[46] + 2 * d[10] * d[13] * d[31] * d[46] - 2 * d[12] * d[14] * d[31] * d[46] - 2 * d[12] * d[13] * d[32] * d[46] + 2 * d[9] * d[14] * d[32] * d[46];
    coeffs[25] = 2 * d[15] * d[20] * d[28] * d[39] - 2 * d[17] * d[22] * d[28] * d[39] + 2 * d[11] * d[24] * d[28] * d[39] - 2 * d[13] * d[26] * d[28] * d[39] + 2 * d[15] * d[19] * d[29] * d[39] - 2 * d[16] * d[21] * d[29] * d[39] + 2 * d[10] * d[24] * d[29] * d[39] - 2 * d[12] * d[25] * d[29] * d[39] - 2 * d[16] * d[20] * d[30] * d[39] + 2 * d[17] * d[23] * d[30] * d[39] - 2 * d[11] * d[25] * d[30] * d[39] + 2 * d[14] * d[26] * d[30] * d[39] - 2 * d[17] * d[19] * d[31] * d[39] + 2 * d[16] * d[23] * d[31] * d[39] + 2 * d[14] * d[25] * d[31] * d[39] - 2 * d[10] * d[26] * d[31] * d[39] + 2 * d[17] * d[21] * d[32] * d[39] + 2 * d[16] * d[22] * d[32] * d[39] - 4 * d[15] * d[23] * d[32] * d[39] - 4 * d[14] * d[24] * d[32] * d[39] + 2 * d[13] * d[25] * d[32] * d[39] + 2 * d[12] * d[26] * d[32] * d[39] + 2 * d[11] * d[19] * d[33] * d[39] + 2 * d[10] * d[20] * d[33] * d[39] - 4 * d[14] * d[23] * d[33] * d[39] - 2 * d[12] * d[20] * d[34] * d[39] - 2 * d[11] * d[21] * d[34] * d[39] + 2 * d[14] * d[22] * d[34] * d[39] + 2 * d[13] * d[23] * d[34] * d[39] - 2 * d[13] * d[19] * d[35] * d[39] + 2 * d[14] * d[21] * d[35] * d[39] - 2 * d[10] * d[22] * d[35] * d[39] + 2 * d[12] * d[23] * d[35] * d[39] + 2 * d[16] * d[20] * d[27] * d[40] - 2 * d[17] * d[23] * d[27] * d[40] + 2 * d[11] * d[25] * d[27] * d[40] - 2 * d[14] * d[26] * d[27] * d[40] + 2 * d[16] * d[18] * d[29] * d[40] - 2 * d[15] * d[21] * d[29] * d[40] - 2 * d[12] * d[24] * d[29] * d[40] + 2 * d[9] * d[25] * d[29] * d[40] - 2 * d[15] * d[20] * d[30] * d[40] + 2 * d[17] * d[22] * d[30] * d[40] - 2 * d[11] * d[24] * d[30] * d[40] + 2 * d[13] * d[26] * d[30] * d[40] + 2 * d[17] * d[21] * d[31] * d[40] - 4 * d[16] * d[22] * d[31] * d[40] + 2 * d[15] * d[23] * d[31] * d[40] + 2 * d[14] * d[24] * d[31] * d[40] - 4 * d[13] * d[25] * d[31] * d[40] + 2 * d[12] * d[26] * d[31] * d[40] - 2 * d[17] * d[18] * d[32] * d[40] + 2 * d[15] * d[22] * d[32] * d[40] + 2 * d[13] * d[24] * d[32] * d[40] - 2 * d[9] * d[26] * d[32] * d[40] - 2 * d[12] * d[20] * d[33] * d[40] - 2 * d[11] * d[21] * d[33] * d[40] + 2 * d[14] * d[22] * d[33] * d[40] + 2 * d[13] * d[23] * d[33] * d[40] + 2 * d[11] * d[18] * d[34] * d[40] + 2 * d[9] * d[20] * d[34] * d[40] - 4 * d[13] * d[22] * d[34] * d[40] - 2 * d[14] * d[18] * d[35] * d[40] + 2 * d[13] * d[21] * d[35] * d[40] + 2 * d[12] * d[22] * d[35] * d[40] - 2 * d[9] * d[23] * d[35] * d[40] + 2 * d[17] * d[19] * d[27] * d[41] - 2 * d[16] * d[23] * d[27] * d[41] - 2 * d[14] * d[25] * d[27] * d[41] + 2 * d[10] * d[26] * d[27] * d[41] + 2 * d[17] * d[18] * d[28] * d[41] - 2 * d[15] * d[22] * d[28] * d[41] - 2 * d[13] * d[24] * d[28] * d[41] + 2 * d[9] * d[26] * d[28] * d[41] - 4 * d[17] * d[21] * d[30] * d[41] + 2 * d[16] * d[22] * d[30] * d[41] + 2 * d[15] * d[23] * d[30] * d[41] + 2 * d[14] * d[24] * d[30] * d[41] + 2 * d[13] * d[25] * d[30] * d[41] - 4 * d[12] * d[26] * d[30] * d[41] - 2 * d[15] * d[19] * d[31] * d[41] + 2 * d[16] * d[21] * d[31] * d[41] - 2 * d[10] * d[24] * d[31] * d[41] + 2 * d[12] * d[25] * d[31] * d[41] - 2 * d[16] * d[18] * d[32] * d[41] + 2 * d[15] * d[21] * d[32] * d[41] + 2 * d[12] * d[24] * d[32] * d[41] - 2 * d[9] * d[25] * d[32] * d[41] - 2 * d[13] * d[19] * d[33] * d[41] + 2 * d[14] * d[21] * d[33] * d[41] - 2 * d[10] * d[22] * d[33] * d[41] + 2 * d[12] * d[23] * d[33] * d[41] - 2 * d[14] * d[18] * d[34] * d[41] + 2 * d[13] * d[21] * d[34] * d[41] + 2 * d[12] * d[22] * d[34] * d[41] - 2 * d[9] * d[23] * d[34] * d[41] + 2 * d[10] * d[18] * d[35] * d[41] + 2 * d[9] * d[19] * d[35] * d[41] - 4 * d[12] * d[21] * d[35] * d[41] - d[11] * d[19] * d[27] * d[46] - d[10] * d[20] * d[27] * d[46] + 2 * d[14] * d[23] * d[27] * d[46] - d[11] * d[18] * d[28] * d[46] - d[9] * d[20] * d[28] * d[46] + 2 * d[13] * d[22] * d[28] * d[46] - d[10] * d[18] * d[29] * d[46] - d[9] * d[19] * d[29] * d[46] + 2 * d[12] * d[21] * d[29] * d[46] + 2 * d[12] * d[20] * d[30] * d[46] + 2 * d[11] * d[21] * d[30] * d[46] - 2 * d[14] * d[22] * d[30] * d[46] - 2 * d[13] * d[23] * d[30] * d[46] + 2 * d[13] * d[19] * d[31] * d[46] - 2 * d[14] * d[21] * d[31] * d[46] + 2 * d[10] * d[22] * d[31] * d[46] - 2 * d[12] * d[23] * d[31] * d[46] + 2 * d[14] * d[18] * d[32] * d[46] - 2 * d[13] * d[21] * d[32] * d[46] - 2 * d[12] * d[22] * d[32] * d[46] + 2 * d[9] * d[23] * d[32] * d[46];
    coeffs[26] = 2 * d[20] * d[24] * d[28] * d[39] - 2 * d[22] * d[26] * d[28] * d[39] + 2 * d[19] * d[24] * d[29] * d[39] - 2 * d[21] * d[25] * d[29] * d[39] - 2 * d[20] * d[25] * d[30] * d[39] + 2 * d[23] * d[26] * d[30] * d[39] + 2 * d[23] * d[25] * d[31] * d[39] - 2 * d[19] * d[26] * d[31] * d[39] - 4 * d[23] * d[24] * d[32] * d[39] + 2 * d[22] * d[25] * d[32] * d[39] + 2 * d[21] * d[26] * d[32] * d[39] + 2 * d[19] * d[20] * d[33] * d[39] - 2 * std::pow(d[23], 2) * d[33] * d[39] - 2 * d[20] * d[21] * d[34] * d[39] + 2 * d[22] * d[23] * d[34] * d[39] - 2 * d[19] * d[22] * d[35] * d[39] + 2 * d[21] * d[23] * d[35] * d[39] + 2 * d[20] * d[25] * d[27] * d[40] - 2 * d[23] * d[26] * d[27] * d[40] - 2 * d[21] * d[24] * d[29] * d[40] + 2 * d[18] * d[25] * d[29] * d[40] - 2 * d[20] * d[24] * d[30] * d[40] + 2 * d[22] * d[26] * d[30] * d[40] + 2 * d[23] * d[24] * d[31] * d[40] - 4 * d[22] * d[25] * d[31] * d[40] + 2 * d[21] * d[26] * d[31] * d[40] + 2 * d[22] * d[24] * d[32] * d[40] - 2 * d[18] * d[26] * d[32] * d[40] - 2 * d[20] * d[21] * d[33] * d[40] + 2 * d[22] * d[23] * d[33] * d[40] + 2 * d[18] * d[20] * d[34] * d[40] - 2 * std::pow(d[22], 2) * d[34] * d[40] + 2 * d[21] * d[22] * d[35] * d[40] - 2 * d[18] * d[23] * d[35] * d[40] - 2 * d[23] * d[25] * d[27] * d[41] + 2 * d[19] * d[26] * d[27] * d[41] - 2 * d[22] * d[24] * d[28] * d[41] + 2 * d[18] * d[26] * d[28] * d[41] + 2 * d[23] * d[24] * d[30] * d[41] + 2 * d[22] * d[25] * d[30] * d[41] - 4 * d[21] * d[26] * d[30] * d[41] - 2 * d[19] * d[24] * d[31] * d[41] + 2 * d[21] * d[25] * d[31] * d[41] + 2 * d[21] * d[24] * d[32] * d[41] - 2 * d[18] * d[25] * d[32] * d[41] - 2 * d[19] * d[22] * d[33] * d[41] + 2 * d[21] * d[23] * d[33] * d[41] + 2 * d[21] * d[22] * d[34] * d[41] - 2 * d[18] * d[23] * d[34] * d[41] + 2 * d[18] * d[19] * d[35] * d[41] - 2 * std::pow(d[21], 2) * d[35] * d[41] - d[19] * d[20] * d[27] * d[46] + std::pow(d[23], 2) * d[27] * d[46] - d[18] * d[20] * d[28] * d[46] + std::pow(d[22], 2) * d[28] * d[46] - d[18] * d[19] * d[29] * d[46] + std::pow(d[21], 2) * d[29] * d[46] + 2 * d[20] * d[21] * d[30] * d[46] - 2 * d[22] * d[23] * d[30] * d[46] + 2 * d[19] * d[22] * d[31] * d[46] - 2 * d[21] * d[23] * d[31] * d[46] - 2 * d[21] * d[22] * d[32] * d[46] + 2 * d[18] * d[23] * d[32] * d[46];
    coeffs[27] = 2 * d[15] * d[28] * d[29] * d[39] - 2 * d[16] * d[29] * d[30] * d[39] - 2 * d[17] * d[28] * d[31] * d[39] + 2 * d[17] * d[30] * d[32] * d[39] + 2 * d[16] * d[31] * d[32] * d[39] - 2 * d[15] * std::pow(d[32], 2) * d[39] + 2 * d[11] * d[28] * d[33] * d[39] + 2 * d[10] * d[29] * d[33] * d[39] - 4 * d[14] * d[32] * d[33] * d[39] - 2 * d[12] * d[29] * d[34] * d[39] - 2 * d[11] * d[30] * d[34] * d[39] + 2 * d[14] * d[31] * d[34] * d[39] + 2 * d[13] * d[32] * d[34] * d[39] - 2 * d[13] * d[28] * d[35] * d[39] + 2 * d[14] * d[30] * d[35] * d[39] - 2 * d[10] * d[31] * d[35] * d[39] + 2 * d[12] * d[32] * d[35] * d[39] + 2 * d[16] * d[27] * d[29] * d[40] - 2 * d[15] * d[29] * d[30] * d[40] + 2 * d[17] * d[30] * d[31] * d[40] - 2 * d[16] * std::pow(d[31], 2) * d[40] - 2 * d[17] * d[27] * d[32] * d[40] + 2 * d[15] * d[31] * d[32] * d[40] - 2 * d[12] * d[29] * d[33] * d[40] - 2 * d[11] * d[30] * d[33] * d[40] + 2 * d[14] * d[31] * d[33] * d[40] + 2 * d[13] * d[32] * d[33] * d[40] + 2 * d[11] * d[27] * d[34] * d[40] + 2 * d[9] * d[29] * d[34] * d[40] - 4 * d[13] * d[31] * d[34] * d[40] - 2 * d[14] * d[27] * d[35] * d[40] + 2 * d[13] * d[30] * d[35] * d[40] + 2 * d[12] * d[31] * d[35] * d[40] - 2 * d[9] * d[32] * d[35] * d[40] + 2 * d[17] * d[27] * d[28] * d[41] - 2 * d[17] * std::pow(d[30], 2) * d[41] - 2 * d[15] * d[28] * d[31] * d[41] + 2 * d[16] * d[30] * d[31] * d[41] - 2 * d[16] * d[27] * d[32] * d[41] + 2 * d[15] * d[30] * d[32] * d[41] - 2 * d[13] * d[28] * d[33] * d[41] + 2 * d[14] * d[30] * d[33] * d[41] - 2 * d[10] * d[31] * d[33] * d[41] + 2 * d[12] * d[32] * d[33] * d[41] - 2 * d[14] * d[27] * d[34] * d[41] + 2 * d[13] * d[30] * d[34] * d[41] + 2 * d[12] * d[31] * d[34] * d[41] - 2 * d[9] * d[32] * d[34] * d[41] + 2 * d[10] * d[27] * d[35] * d[41] + 2 * d[9] * d[28] * d[35] * d[41] - 4 * d[12] * d[30] * d[35] * d[41] - d[11] * d[27] * d[28] * d[46] - d[10] * d[27] * d[29] * d[46] - d[9] * d[28] * d[29] * d[46] + 2 * d[12] * d[29] * d[30] * d[46] + d[11] * std::pow(d[30], 2) * d[46] + 2 * d[13] * d[28] * d[31] * d[46] - 2 * d[14] * d[30] * d[31] * d[46] + d[10] * std::pow(d[31], 2) * d[46] + 2 * d[14] * d[27] * d[32] * d[46] - 2 * d[13] * d[30] * d[32] * d[46] - 2 * d[12] * d[31] * d[32] * d[46] + d[9] * std::pow(d[32], 2) * d[46];
    coeffs[28] = 2 * d[24] * d[28] * d[29] * d[39] - 2 * d[25] * d[29] * d[30] * d[39] - 2 * d[26] * d[28] * d[31] * d[39] + 2 * d[26] * d[30] * d[32] * d[39] + 2 * d[25] * d[31] * d[32] * d[39] - 2 * d[24] * std::pow(d[32], 2) * d[39] + 2 * d[20] * d[28] * d[33] * d[39] + 2 * d[19] * d[29] * d[33] * d[39] - 4 * d[23] * d[32] * d[33] * d[39] - 2 * d[21] * d[29] * d[34] * d[39] - 2 * d[20] * d[30] * d[34] * d[39] + 2 * d[23] * d[31] * d[34] * d[39] + 2 * d[22] * d[32] * d[34] * d[39] - 2 * d[22] * d[28] * d[35] * d[39] + 2 * d[23] * d[30] * d[35] * d[39] - 2 * d[19] * d[31] * d[35] * d[39] + 2 * d[21] * d[32] * d[35] * d[39] + 2 * d[25] * d[27] * d[29] * d[40] - 2 * d[24] * d[29] * d[30] * d[40] + 2 * d[26] * d[30] * d[31] * d[40] - 2 * d[25] * std::pow(d[31], 2) * d[40] - 2 * d[26] * d[27] * d[32] * d[40] + 2 * d[24] * d[31] * d[32] * d[40] - 2 * d[21] * d[29] * d[33] * d[40] - 2 * d[20] * d[30] * d[33] * d[40] + 2 * d[23] * d[31] * d[33] * d[40] + 2 * d[22] * d[32] * d[33] * d[40] + 2 * d[20] * d[27] * d[34] * d[40] + 2 * d[18] * d[29] * d[34] * d[40] - 4 * d[22] * d[31] * d[34] * d[40] - 2 * d[23] * d[27] * d[35] * d[40] + 2 * d[22] * d[30] * d[35] * d[40] + 2 * d[21] * d[31] * d[35] * d[40] - 2 * d[18] * d[32] * d[35] * d[40] + 2 * d[26] * d[27] * d[28] * d[41] - 2 * d[26] * std::pow(d[30], 2) * d[41] - 2 * d[24] * d[28] * d[31] * d[41] + 2 * d[25] * d[30] * d[31] * d[41] - 2 * d[25] * d[27] * d[32] * d[41] + 2 * d[24] * d[30] * d[32] * d[41] - 2 * d[22] * d[28] * d[33] * d[41] + 2 * d[23] * d[30] * d[33] * d[41] - 2 * d[19] * d[31] * d[33] * d[41] + 2 * d[21] * d[32] * d[33] * d[41] - 2 * d[23] * d[27] * d[34] * d[41] + 2 * d[22] * d[30] * d[34] * d[41] + 2 * d[21] * d[31] * d[34] * d[41] - 2 * d[18] * d[32] * d[34] * d[41] + 2 * d[19] * d[27] * d[35] * d[41] + 2 * d[18] * d[28] * d[35] * d[41] - 4 * d[21] * d[30] * d[35] * d[41] - d[20] * d[27] * d[28] * d[46] - d[19] * d[27] * d[29] * d[46] - d[18] * d[28] * d[29] * d[46] + 2 * d[21] * d[29] * d[30] * d[46] + d[20] * std::pow(d[30], 2) * d[46] + 2 * d[22] * d[28] * d[31] * d[46] - 2 * d[23] * d[30] * d[31] * d[46] + d[19] * std::pow(d[31], 2) * d[46] + 2 * d[23] * d[27] * d[32] * d[46] - 2 * d[22] * d[30] * d[32] * d[46] - 2 * d[21] * d[31] * d[32] * d[46] + d[18] * std::pow(d[32], 2) * d[46];
    coeffs[29] = 2 * d[28] * d[29] * d[33] * d[39] - 2 * std::pow(d[32], 2) * d[33] * d[39] - 2 * d[29] * d[30] * d[34] * d[39] + 2 * d[31] * d[32] * d[34] * d[39] - 2 * d[28] * d[31] * d[35] * d[39] + 2 * d[30] * d[32] * d[35] * d[39] - 2 * d[29] * d[30] * d[33] * d[40] + 2 * d[31] * d[32] * d[33] * d[40] + 2 * d[27] * d[29] * d[34] * d[40] - 2 * std::pow(d[31], 2) * d[34] * d[40] + 2 * d[30] * d[31] * d[35] * d[40] - 2 * d[27] * d[32] * d[35] * d[40] - 2 * d[28] * d[31] * d[33] * d[41] + 2 * d[30] * d[32] * d[33] * d[41] + 2 * d[30] * d[31] * d[34] * d[41] - 2 * d[27] * d[32] * d[34] * d[41] + 2 * d[27] * d[28] * d[35] * d[41] - 2 * std::pow(d[30], 2) * d[35] * d[41] - d[27] * d[28] * d[29] * d[46] + d[29] * std::pow(d[30], 2) * d[46] + d[28] * std::pow(d[31], 2) * d[46] - 2 * d[30] * d[31] * d[32] * d[46] + d[27] * std::pow(d[32], 2) * d[46];
    coeffs[30] = 2 * d[6] * d[10] * d[11] * d[39] - 2 * d[7] * d[11] * d[12] * d[39] - 2 * d[8] * d[10] * d[13] * d[39] + 2 * d[8] * d[12] * d[14] * d[39] + 2 * d[7] * d[13] * d[14] * d[39] - 2 * d[6] * std::pow(d[14], 2) * d[39] + 2 * d[2] * d[10] * d[15] * d[39] + 2 * d[1] * d[11] * d[15] * d[39] - 4 * d[5] * d[14] * d[15] * d[39] - 2 * d[3] * d[11] * d[16] * d[39] - 2 * d[2] * d[12] * d[16] * d[39] + 2 * d[5] * d[13] * d[16] * d[39] + 2 * d[4] * d[14] * d[16] * d[39] - 2 * d[4] * d[10] * d[17] * d[39] + 2 * d[5] * d[12] * d[17] * d[39] - 2 * d[1] * d[13] * d[17] * d[39] + 2 * d[3] * d[14] * d[17] * d[39] + d[10] * d[11] * std::pow(d[39], 2) - std::pow(d[14], 2) * std::pow(d[39], 2) + 2 * d[7] * d[9] * d[11] * d[40] - 2 * d[6] * d[11] * d[12] * d[40] + 2 * d[8] * d[12] * d[13] * d[40] - 2 * d[7] * std::pow(d[13], 2) * d[40] - 2 * d[8] * d[9] * d[14] * d[40] + 2 * d[6] * d[13] * d[14] * d[40] - 2 * d[3] * d[11] * d[15] * d[40] - 2 * d[2] * d[12] * d[15] * d[40] + 2 * d[5] * d[13] * d[15] * d[40] + 2 * d[4] * d[14] * d[15] * d[40] + 2 * d[2] * d[9] * d[16] * d[40] + 2 * d[0] * d[11] * d[16] * d[40] - 4 * d[4] * d[13] * d[16] * d[40] - 2 * d[5] * d[9] * d[17] * d[40] + 2 * d[4] * d[12] * d[17] * d[40] + 2 * d[3] * d[13] * d[17] * d[40] - 2 * d[0] * d[14] * d[17] * d[40] - 2 * d[11] * d[12] * d[39] * d[40] + 2 * d[13] * d[14] * d[39] * d[40] + d[9] * d[11] * std::pow(d[40], 2) - std::pow(d[13], 2) * std::pow(d[40], 2) + 2 * d[8] * d[9] * d[10] * d[41] - 2 * d[8] * std::pow(d[12], 2) * d[41] - 2 * d[6] * d[10] * d[13] * d[41] + 2 * d[7] * d[12] * d[13] * d[41] - 2 * d[7] * d[9] * d[14] * d[41] + 2 * d[6] * d[12] * d[14] * d[41] - 2 * d[4] * d[10] * d[15] * d[41] + 2 * d[5] * d[12] * d[15] * d[41] - 2 * d[1] * d[13] * d[15] * d[41] + 2 * d[3] * d[14] * d[15] * d[41] - 2 * d[5] * d[9] * d[16] * d[41] + 2 * d[4] * d[12] * d[16] * d[41] + 2 * d[3] * d[13] * d[16] * d[41] - 2 * d[0] * d[14] * d[16] * d[41] + 2 * d[1] * d[9] * d[17] * d[41] + 2 * d[0] * d[10] * d[17] * d[41] - 4 * d[3] * d[12] * d[17] * d[41] - 2 * d[10] * d[13] * d[39] * d[41] + 2 * d[12] * d[14] * d[39] * d[41] + 2 * d[12] * d[13] * d[40] * d[41] - 2 * d[9] * d[14] * d[40] * d[41] + d[9] * d[10] * std::pow(d[41], 2) - std::pow(d[12], 2) * std::pow(d[41], 2) - d[2] * d[9] * d[10] * d[46] - d[1] * d[9] * d[11] * d[46] - d[0] * d[10] * d[11] * d[46] + 2 * d[3] * d[11] * d[12] * d[46] + d[2] * std::pow(d[12], 2) * d[46] + 2 * d[4] * d[10] * d[13] * d[46] - 2 * d[5] * d[12] * d[13] * d[46] + d[1] * std::pow(d[13], 2) * d[46] + 2 * d[5] * d[9] * d[14] * d[46] - 2 * d[4] * d[12] * d[14] * d[46] - 2 * d[3] * d[13] * d[14] * d[46] + d[0] * std::pow(d[14], 2) * d[46];
    coeffs[31] = 2 * d[6] * d[11] * d[19] * d[39] - 2 * d[8] * d[13] * d[19] * d[39] + 2 * d[2] * d[15] * d[19] * d[39] - 2 * d[4] * d[17] * d[19] * d[39] + 2 * d[6] * d[10] * d[20] * d[39] - 2 * d[7] * d[12] * d[20] * d[39] + 2 * d[1] * d[15] * d[20] * d[39] - 2 * d[3] * d[16] * d[20] * d[39] - 2 * d[7] * d[11] * d[21] * d[39] + 2 * d[8] * d[14] * d[21] * d[39] - 2 * d[2] * d[16] * d[21] * d[39] + 2 * d[5] * d[17] * d[21] * d[39] - 2 * d[8] * d[10] * d[22] * d[39] + 2 * d[7] * d[14] * d[22] * d[39] + 2 * d[5] * d[16] * d[22] * d[39] - 2 * d[1] * d[17] * d[22] * d[39] + 2 * d[8] * d[12] * d[23] * d[39] + 2 * d[7] * d[13] * d[23] * d[39] - 4 * d[6] * d[14] * d[23] * d[39] - 4 * d[5] * d[15] * d[23] * d[39] + 2 * d[4] * d[16] * d[23] * d[39] + 2 * d[3] * d[17] * d[23] * d[39] + 2 * d[2] * d[10] * d[24] * d[39] + 2 * d[1] * d[11] * d[24] * d[39] - 4 * d[5] * d[14] * d[24] * d[39] - 2 * d[3] * d[11] * d[25] * d[39] - 2 * d[2] * d[12] * d[25] * d[39] + 2 * d[5] * d[13] * d[25] * d[39] + 2 * d[4] * d[14] * d[25] * d[39] - 2 * d[4] * d[10] * d[26] * d[39] + 2 * d[5] * d[12] * d[26] * d[39] - 2 * d[1] * d[13] * d[26] * d[39] + 2 * d[3] * d[14] * d[26] * d[39] + d[11] * d[19] * std::pow(d[39], 2) + d[10] * d[20] * std::pow(d[39], 2) - 2 * d[14] * d[23] * std::pow(d[39], 2) + 2 * d[7] * d[11] * d[18] * d[40] - 2 * d[8] * d[14] * d[18] * d[40] + 2 * d[2] * d[16] * d[18] * d[40] - 2 * d[5] * d[17] * d[18] * d[40] + 2 * d[7] * d[9] * d[20] * d[40] - 2 * d[6] * d[12] * d[20] * d[40] - 2 * d[3] * d[15] * d[20] * d[40] + 2 * d[0] * d[16] * d[20] * d[40] - 2 * d[6] * d[11] * d[21] * d[40] + 2 * d[8] * d[13] * d[21] * d[40] - 2 * d[2] * d[15] * d[21] * d[40] + 2 * d[4] * d[17] * d[21] * d[40] + 2 * d[8] * d[12] * d[22] * d[40] - 4 * d[7] * d[13] * d[22] * d[40] + 2 * d[6] * d[14] * d[22] * d[40] + 2 * d[5] * d[15] * d[22] * d[40] - 4 * d[4] * d[16] * d[22] * d[40] + 2 * d[3] * d[17] * d[22] * d[40] - 2 * d[8] * d[9] * d[23] * d[40] + 2 * d[6] * d[13] * d[23] * d[40] + 2 * d[4] * d[15] * d[23] * d[40] - 2 * d[0] * d[17] * d[23] * d[40] - 2 * d[3] * d[11] * d[24] * d[40] - 2 * d[2] * d[12] * d[24] * d[40] + 2 * d[5] * d[13] * d[24] * d[40] + 2 * d[4] * d[14] * d[24] * d[40] + 2 * d[2] * d[9] * d[25] * d[40] + 2 * d[0] * d[11] * d[25] * d[40] - 4 * d[4] * d[13] * d[25] * d[40] - 2 * d[5] * d[9] * d[26] * d[40] + 2 * d[4] * d[12] * d[26] * d[40] + 2 * d[3] * d[13] * d[26] * d[40] - 2 * d[0] * d[14] * d[26] * d[40] - 2 * d[12] * d[20] * d[39] * d[40] - 2 * d[11] * d[21] * d[39] * d[40] + 2 * d[14] * d[22] * d[39] * d[40] + 2 * d[13] * d[23] * d[39] * d[40] + d[11] * d[18] * std::pow(d[40], 2) + d[9] * d[20] * std::pow(d[40], 2) - 2 * d[13] * d[22] * std::pow(d[40], 2) + 2 * d[8] * d[10] * d[18] * d[41] - 2 * d[7] * d[14] * d[18] * d[41] - 2 * d[5] * d[16] * d[18] * d[41] + 2 * d[1] * d[17] * d[18] * d[41] + 2 * d[8] * d[9] * d[19] * d[41] - 2 * d[6] * d[13] * d[19] * d[41] - 2 * d[4] * d[15] * d[19] * d[41] + 2 * d[0] * d[17] * d[19] * d[41] - 4 * d[8] * d[12] * d[21] * d[41] + 2 * d[7] * d[13] * d[21] * d[41] + 2 * d[6] * d[14] * d[21] * d[41] + 2 * d[5] * d[15] * d[21] * d[41] + 2 * d[4] * d[16] * d[21] * d[41] - 4 * d[3] * d[17] * d[21] * d[41] - 2 * d[6] * d[10] * d[22] * d[41] + 2 * d[7] * d[12] * d[22] * d[41] - 2 * d[1] * d[15] * d[22] * d[41] + 2 * d[3] * d[16] * d[22] * d[41] - 2 * d[7] * d[9] * d[23] * d[41] + 2 * d[6] * d[12] * d[23] * d[41] + 2 * d[3] * d[15] * d[23] * d[41] - 2 * d[0] * d[16] * d[23] * d[41] - 2 * d[4] * d[10] * d[24] * d[41] + 2 * d[5] * d[12] * d[24] * d[41] - 2 * d[1] * d[13] * d[24] * d[41] + 2 * d[3] * d[14] * d[24] * d[41] - 2 * d[5] * d[9] * d[25] * d[41] + 2 * d[4] * d[12] * d[25] * d[41] + 2 * d[3] * d[13] * d[25] * d[41] - 2 * d[0] * d[14] * d[25] * d[41] + 2 * d[1] * d[9] * d[26] * d[41] + 2 * d[0] * d[10] * d[26] * d[41] - 4 * d[3] * d[12] * d[26] * d[41] - 2 * d[13] * d[19] * d[39] * d[41] + 2 * d[14] * d[21] * d[39] * d[41] - 2 * d[10] * d[22] * d[39] * d[41] + 2 * d[12] * d[23] * d[39] * d[41] - 2 * d[14] * d[18] * d[40] * d[41] + 2 * d[13] * d[21] * d[40] * d[41] + 2 * d[12] * d[22] * d[40] * d[41] - 2 * d[9] * d[23] * d[40] * d[41] + d[10] * d[18] * std::pow(d[41], 2) + d[9] * d[19] * std::pow(d[41], 2) - 2 * d[12] * d[21] * std::pow(d[41], 2) - d[2] * d[10] * d[18] * d[46] - d[1] * d[11] * d[18] * d[46] + 2 * d[5] * d[14] * d[18] * d[46] - d[2] * d[9] * d[19] * d[46] - d[0] * d[11] * d[19] * d[46] + 2 * d[4] * d[13] * d[19] * d[46] - d[1] * d[9] * d[20] * d[46] - d[0] * d[10] * d[20] * d[46] + 2 * d[3] * d[12] * d[20] * d[46] + 2 * d[3] * d[11] * d[21] * d[46] + 2 * d[2] * d[12] * d[21] * d[46] - 2 * d[5] * d[13] * d[21] * d[46] - 2 * d[4] * d[14] * d[21] * d[46] + 2 * d[4] * d[10] * d[22] * d[46] - 2 * d[5] * d[12] * d[22] * d[46] + 2 * d[1] * d[13] * d[22] * d[46] - 2 * d[3] * d[14] * d[22] * d[46] + 2 * d[5] * d[9] * d[23] * d[46] - 2 * d[4] * d[12] * d[23] * d[46] - 2 * d[3] * d[13] * d[23] * d[46] + 2 * d[0] * d[14] * d[23] * d[46];
    coeffs[32] = 2 * d[6] * d[19] * d[20] * d[39] - 2 * d[7] * d[20] * d[21] * d[39] - 2 * d[8] * d[19] * d[22] * d[39] + 2 * d[8] * d[21] * d[23] * d[39] + 2 * d[7] * d[22] * d[23] * d[39] - 2 * d[6] * std::pow(d[23], 2) * d[39] + 2 * d[2] * d[19] * d[24] * d[39] + 2 * d[1] * d[20] * d[24] * d[39] - 4 * d[5] * d[23] * d[24] * d[39] - 2 * d[3] * d[20] * d[25] * d[39] - 2 * d[2] * d[21] * d[25] * d[39] + 2 * d[5] * d[22] * d[25] * d[39] + 2 * d[4] * d[23] * d[25] * d[39] - 2 * d[4] * d[19] * d[26] * d[39] + 2 * d[5] * d[21] * d[26] * d[39] - 2 * d[1] * d[22] * d[26] * d[39] + 2 * d[3] * d[23] * d[26] * d[39] + d[19] * d[20] * std::pow(d[39], 2) - std::pow(d[23], 2) * std::pow(d[39], 2) + 2 * d[7] * d[18] * d[20] * d[40] - 2 * d[6] * d[20] * d[21] * d[40] + 2 * d[8] * d[21] * d[22] * d[40] - 2 * d[7] * std::pow(d[22], 2) * d[40] - 2 * d[8] * d[18] * d[23] * d[40] + 2 * d[6] * d[22] * d[23] * d[40] - 2 * d[3] * d[20] * d[24] * d[40] - 2 * d[2] * d[21] * d[24] * d[40] + 2 * d[5] * d[22] * d[24] * d[40] + 2 * d[4] * d[23] * d[24] * d[40] + 2 * d[2] * d[18] * d[25] * d[40] + 2 * d[0] * d[20] * d[25] * d[40] - 4 * d[4] * d[22] * d[25] * d[40] - 2 * d[5] * d[18] * d[26] * d[40] + 2 * d[4] * d[21] * d[26] * d[40] + 2 * d[3] * d[22] * d[26] * d[40] - 2 * d[0] * d[23] * d[26] * d[40] - 2 * d[20] * d[21] * d[39] * d[40] + 2 * d[22] * d[23] * d[39] * d[40] + d[18] * d[20] * std::pow(d[40], 2) - std::pow(d[22], 2) * std::pow(d[40], 2) + 2 * d[8] * d[18] * d[19] * d[41] - 2 * d[8] * std::pow(d[21], 2) * d[41] - 2 * d[6] * d[19] * d[22] * d[41] + 2 * d[7] * d[21] * d[22] * d[41] - 2 * d[7] * d[18] * d[23] * d[41] + 2 * d[6] * d[21] * d[23] * d[41] - 2 * d[4] * d[19] * d[24] * d[41] + 2 * d[5] * d[21] * d[24] * d[41] - 2 * d[1] * d[22] * d[24] * d[41] + 2 * d[3] * d[23] * d[24] * d[41] - 2 * d[5] * d[18] * d[25] * d[41] + 2 * d[4] * d[21] * d[25] * d[41] + 2 * d[3] * d[22] * d[25] * d[41] - 2 * d[0] * d[23] * d[25] * d[41] + 2 * d[1] * d[18] * d[26] * d[41] + 2 * d[0] * d[19] * d[26] * d[41] - 4 * d[3] * d[21] * d[26] * d[41] - 2 * d[19] * d[22] * d[39] * d[41] + 2 * d[21] * d[23] * d[39] * d[41] + 2 * d[21] * d[22] * d[40] * d[41] - 2 * d[18] * d[23] * d[40] * d[41] + d[18] * d[19] * std::pow(d[41], 2) - std::pow(d[21], 2) * std::pow(d[41], 2) - d[2] * d[18] * d[19] * d[46] - d[1] * d[18] * d[20] * d[46] - d[0] * d[19] * d[20] * d[46] + 2 * d[3] * d[20] * d[21] * d[46] + d[2] * std::pow(d[21], 2) * d[46] + 2 * d[4] * d[19] * d[22] * d[46] - 2 * d[5] * d[21] * d[22] * d[46] + d[1] * std::pow(d[22], 2) * d[46] + 2 * d[5] * d[18] * d[23] * d[46] - 2 * d[4] * d[21] * d[23] * d[46] - 2 * d[3] * d[22] * d[23] * d[46] + d[0] * std::pow(d[23], 2) * d[46];
    coeffs[33] = 2 * d[6] * d[11] * d[28] * d[39] - 2 * d[8] * d[13] * d[28] * d[39] + 2 * d[2] * d[15] * d[28] * d[39] - 2 * d[4] * d[17] * d[28] * d[39] + 2 * d[6] * d[10] * d[29] * d[39] - 2 * d[7] * d[12] * d[29] * d[39] + 2 * d[1] * d[15] * d[29] * d[39] - 2 * d[3] * d[16] * d[29] * d[39] - 2 * d[7] * d[11] * d[30] * d[39] + 2 * d[8] * d[14] * d[30] * d[39] - 2 * d[2] * d[16] * d[30] * d[39] + 2 * d[5] * d[17] * d[30] * d[39] - 2 * d[8] * d[10] * d[31] * d[39] + 2 * d[7] * d[14] * d[31] * d[39] + 2 * d[5] * d[16] * d[31] * d[39] - 2 * d[1] * d[17] * d[31] * d[39] + 2 * d[8] * d[12] * d[32] * d[39] + 2 * d[7] * d[13] * d[32] * d[39] - 4 * d[6] * d[14] * d[32] * d[39] - 4 * d[5] * d[15] * d[32] * d[39] + 2 * d[4] * d[16] * d[32] * d[39] + 2 * d[3] * d[17] * d[32] * d[39] + 2 * d[2] * d[10] * d[33] * d[39] + 2 * d[1] * d[11] * d[33] * d[39] - 4 * d[5] * d[14] * d[33] * d[39] - 2 * d[3] * d[11] * d[34] * d[39] - 2 * d[2] * d[12] * d[34] * d[39] + 2 * d[5] * d[13] * d[34] * d[39] + 2 * d[4] * d[14] * d[34] * d[39] - 2 * d[4] * d[10] * d[35] * d[39] + 2 * d[5] * d[12] * d[35] * d[39] - 2 * d[1] * d[13] * d[35] * d[39] + 2 * d[3] * d[14] * d[35] * d[39] + d[11] * d[28] * std::pow(d[39], 2) + d[10] * d[29] * std::pow(d[39], 2) - 2 * d[14] * d[32] * std::pow(d[39], 2) + 2 * d[7] * d[11] * d[27] * d[40] - 2 * d[8] * d[14] * d[27] * d[40] + 2 * d[2] * d[16] * d[27] * d[40] - 2 * d[5] * d[17] * d[27] * d[40] + 2 * d[7] * d[9] * d[29] * d[40] - 2 * d[6] * d[12] * d[29] * d[40] - 2 * d[3] * d[15] * d[29] * d[40] + 2 * d[0] * d[16] * d[29] * d[40] - 2 * d[6] * d[11] * d[30] * d[40] + 2 * d[8] * d[13] * d[30] * d[40] - 2 * d[2] * d[15] * d[30] * d[40] + 2 * d[4] * d[17] * d[30] * d[40] + 2 * d[8] * d[12] * d[31] * d[40] - 4 * d[7] * d[13] * d[31] * d[40] + 2 * d[6] * d[14] * d[31] * d[40] + 2 * d[5] * d[15] * d[31] * d[40] - 4 * d[4] * d[16] * d[31] * d[40] + 2 * d[3] * d[17] * d[31] * d[40] - 2 * d[8] * d[9] * d[32] * d[40] + 2 * d[6] * d[13] * d[32] * d[40] + 2 * d[4] * d[15] * d[32] * d[40] - 2 * d[0] * d[17] * d[32] * d[40] - 2 * d[3] * d[11] * d[33] * d[40] - 2 * d[2] * d[12] * d[33] * d[40] + 2 * d[5] * d[13] * d[33] * d[40] + 2 * d[4] * d[14] * d[33] * d[40] + 2 * d[2] * d[9] * d[34] * d[40] + 2 * d[0] * d[11] * d[34] * d[40] - 4 * d[4] * d[13] * d[34] * d[40] - 2 * d[5] * d[9] * d[35] * d[40] + 2 * d[4] * d[12] * d[35] * d[40] + 2 * d[3] * d[13] * d[35] * d[40] - 2 * d[0] * d[14] * d[35] * d[40] - 2 * d[12] * d[29] * d[39] * d[40] - 2 * d[11] * d[30] * d[39] * d[40] + 2 * d[14] * d[31] * d[39] * d[40] + 2 * d[13] * d[32] * d[39] * d[40] + d[11] * d[27] * std::pow(d[40], 2) + d[9] * d[29] * std::pow(d[40], 2) - 2 * d[13] * d[31] * std::pow(d[40], 2) + 2 * d[8] * d[10] * d[27] * d[41] - 2 * d[7] * d[14] * d[27] * d[41] - 2 * d[5] * d[16] * d[27] * d[41] + 2 * d[1] * d[17] * d[27] * d[41] + 2 * d[8] * d[9] * d[28] * d[41] - 2 * d[6] * d[13] * d[28] * d[41] - 2 * d[4] * d[15] * d[28] * d[41] + 2 * d[0] * d[17] * d[28] * d[41] - 4 * d[8] * d[12] * d[30] * d[41] + 2 * d[7] * d[13] * d[30] * d[41] + 2 * d[6] * d[14] * d[30] * d[41] + 2 * d[5] * d[15] * d[30] * d[41] + 2 * d[4] * d[16] * d[30] * d[41] - 4 * d[3] * d[17] * d[30] * d[41] - 2 * d[6] * d[10] * d[31] * d[41] + 2 * d[7] * d[12] * d[31] * d[41] - 2 * d[1] * d[15] * d[31] * d[41] + 2 * d[3] * d[16] * d[31] * d[41] - 2 * d[7] * d[9] * d[32] * d[41] + 2 * d[6] * d[12] * d[32] * d[41] + 2 * d[3] * d[15] * d[32] * d[41] - 2 * d[0] * d[16] * d[32] * d[41] - 2 * d[4] * d[10] * d[33] * d[41] + 2 * d[5] * d[12] * d[33] * d[41] - 2 * d[1] * d[13] * d[33] * d[41] + 2 * d[3] * d[14] * d[33] * d[41] - 2 * d[5] * d[9] * d[34] * d[41] + 2 * d[4] * d[12] * d[34] * d[41] + 2 * d[3] * d[13] * d[34] * d[41] - 2 * d[0] * d[14] * d[34] * d[41] + 2 * d[1] * d[9] * d[35] * d[41] + 2 * d[0] * d[10] * d[35] * d[41] - 4 * d[3] * d[12] * d[35] * d[41] - 2 * d[13] * d[28] * d[39] * d[41] + 2 * d[14] * d[30] * d[39] * d[41] - 2 * d[10] * d[31] * d[39] * d[41] + 2 * d[12] * d[32] * d[39] * d[41] - 2 * d[14] * d[27] * d[40] * d[41] + 2 * d[13] * d[30] * d[40] * d[41] + 2 * d[12] * d[31] * d[40] * d[41] - 2 * d[9] * d[32] * d[40] * d[41] + d[10] * d[27] * std::pow(d[41], 2) + d[9] * d[28] * std::pow(d[41], 2) - 2 * d[12] * d[30] * std::pow(d[41], 2) - d[2] * d[10] * d[27] * d[46] - d[1] * d[11] * d[27] * d[46] + 2 * d[5] * d[14] * d[27] * d[46] - d[2] * d[9] * d[28] * d[46] - d[0] * d[11] * d[28] * d[46] + 2 * d[4] * d[13] * d[28] * d[46] - d[1] * d[9] * d[29] * d[46] - d[0] * d[10] * d[29] * d[46] + 2 * d[3] * d[12] * d[29] * d[46] + 2 * d[3] * d[11] * d[30] * d[46] + 2 * d[2] * d[12] * d[30] * d[46] - 2 * d[5] * d[13] * d[30] * d[46] - 2 * d[4] * d[14] * d[30] * d[46] + 2 * d[4] * d[10] * d[31] * d[46] - 2 * d[5] * d[12] * d[31] * d[46] + 2 * d[1] * d[13] * d[31] * d[46] - 2 * d[3] * d[14] * d[31] * d[46] + 2 * d[5] * d[9] * d[32] * d[46] - 2 * d[4] * d[12] * d[32] * d[46] - 2 * d[3] * d[13] * d[32] * d[46] + 2 * d[0] * d[14] * d[32] * d[46];
    coeffs[34] = 2 * d[6] * d[20] * d[28] * d[39] - 2 * d[8] * d[22] * d[28] * d[39] + 2 * d[2] * d[24] * d[28] * d[39] - 2 * d[4] * d[26] * d[28] * d[39] + 2 * d[6] * d[19] * d[29] * d[39] - 2 * d[7] * d[21] * d[29] * d[39] + 2 * d[1] * d[24] * d[29] * d[39] - 2 * d[3] * d[25] * d[29] * d[39] - 2 * d[7] * d[20] * d[30] * d[39] + 2 * d[8] * d[23] * d[30] * d[39] - 2 * d[2] * d[25] * d[30] * d[39] + 2 * d[5] * d[26] * d[30] * d[39] - 2 * d[8] * d[19] * d[31] * d[39] + 2 * d[7] * d[23] * d[31] * d[39] + 2 * d[5] * d[25] * d[31] * d[39] - 2 * d[1] * d[26] * d[31] * d[39] + 2 * d[8] * d[21] * d[32] * d[39] + 2 * d[7] * d[22] * d[32] * d[39] - 4 * d[6] * d[23] * d[32] * d[39] - 4 * d[5] * d[24] * d[32] * d[39] + 2 * d[4] * d[25] * d[32] * d[39] + 2 * d[3] * d[26] * d[32] * d[39] + 2 * d[2] * d[19] * d[33] * d[39] + 2 * d[1] * d[20] * d[33] * d[39] - 4 * d[5] * d[23] * d[33] * d[39] - 2 * d[3] * d[20] * d[34] * d[39] - 2 * d[2] * d[21] * d[34] * d[39] + 2 * d[5] * d[22] * d[34] * d[39] + 2 * d[4] * d[23] * d[34] * d[39] - 2 * d[4] * d[19] * d[35] * d[39] + 2 * d[5] * d[21] * d[35] * d[39] - 2 * d[1] * d[22] * d[35] * d[39] + 2 * d[3] * d[23] * d[35] * d[39] + d[20] * d[28] * std::pow(d[39], 2) + d[19] * d[29] * std::pow(d[39], 2) - 2 * d[23] * d[32] * std::pow(d[39], 2) + 2 * d[7] * d[20] * d[27] * d[40] - 2 * d[8] * d[23] * d[27] * d[40] + 2 * d[2] * d[25] * d[27] * d[40] - 2 * d[5] * d[26] * d[27] * d[40] + 2 * d[7] * d[18] * d[29] * d[40] - 2 * d[6] * d[21] * d[29] * d[40] - 2 * d[3] * d[24] * d[29] * d[40] + 2 * d[0] * d[25] * d[29] * d[40] - 2 * d[6] * d[20] * d[30] * d[40] + 2 * d[8] * d[22] * d[30] * d[40] - 2 * d[2] * d[24] * d[30] * d[40] + 2 * d[4] * d[26] * d[30] * d[40] + 2 * d[8] * d[21] * d[31] * d[40] - 4 * d[7] * d[22] * d[31] * d[40] + 2 * d[6] * d[23] * d[31] * d[40] + 2 * d[5] * d[24] * d[31] * d[40] - 4 * d[4] * d[25] * d[31] * d[40] + 2 * d[3] * d[26] * d[31] * d[40] - 2 * d[8] * d[18] * d[32] * d[40] + 2 * d[6] * d[22] * d[32] * d[40] + 2 * d[4] * d[24] * d[32] * d[40] - 2 * d[0] * d[26] * d[32] * d[40] - 2 * d[3] * d[20] * d[33] * d[40] - 2 * d[2] * d[21] * d[33] * d[40] + 2 * d[5] * d[22] * d[33] * d[40] + 2 * d[4] * d[23] * d[33] * d[40] + 2 * d[2] * d[18] * d[34] * d[40] + 2 * d[0] * d[20] * d[34] * d[40] - 4 * d[4] * d[22] * d[34] * d[40] - 2 * d[5] * d[18] * d[35] * d[40] + 2 * d[4] * d[21] * d[35] * d[40] + 2 * d[3] * d[22] * d[35] * d[40] - 2 * d[0] * d[23] * d[35] * d[40] - 2 * d[21] * d[29] * d[39] * d[40] - 2 * d[20] * d[30] * d[39] * d[40] + 2 * d[23] * d[31] * d[39] * d[40] + 2 * d[22] * d[32] * d[39] * d[40] + d[20] * d[27] * std::pow(d[40], 2) + d[18] * d[29] * std::pow(d[40], 2) - 2 * d[22] * d[31] * std::pow(d[40], 2) + 2 * d[8] * d[19] * d[27] * d[41] - 2 * d[7] * d[23] * d[27] * d[41] - 2 * d[5] * d[25] * d[27] * d[41] + 2 * d[1] * d[26] * d[27] * d[41] + 2 * d[8] * d[18] * d[28] * d[41] - 2 * d[6] * d[22] * d[28] * d[41] - 2 * d[4] * d[24] * d[28] * d[41] + 2 * d[0] * d[26] * d[28] * d[41] - 4 * d[8] * d[21] * d[30] * d[41] + 2 * d[7] * d[22] * d[30] * d[41] + 2 * d[6] * d[23] * d[30] * d[41] + 2 * d[5] * d[24] * d[30] * d[41] + 2 * d[4] * d[25] * d[30] * d[41] - 4 * d[3] * d[26] * d[30] * d[41] - 2 * d[6] * d[19] * d[31] * d[41] + 2 * d[7] * d[21] * d[31] * d[41] - 2 * d[1] * d[24] * d[31] * d[41] + 2 * d[3] * d[25] * d[31] * d[41] - 2 * d[7] * d[18] * d[32] * d[41] + 2 * d[6] * d[21] * d[32] * d[41] + 2 * d[3] * d[24] * d[32] * d[41] - 2 * d[0] * d[25] * d[32] * d[41] - 2 * d[4] * d[19] * d[33] * d[41] + 2 * d[5] * d[21] * d[33] * d[41] - 2 * d[1] * d[22] * d[33] * d[41] + 2 * d[3] * d[23] * d[33] * d[41] - 2 * d[5] * d[18] * d[34] * d[41] + 2 * d[4] * d[21] * d[34] * d[41] + 2 * d[3] * d[22] * d[34] * d[41] - 2 * d[0] * d[23] * d[34] * d[41] + 2 * d[1] * d[18] * d[35] * d[41] + 2 * d[0] * d[19] * d[35] * d[41] - 4 * d[3] * d[21] * d[35] * d[41] - 2 * d[22] * d[28] * d[39] * d[41] + 2 * d[23] * d[30] * d[39] * d[41] - 2 * d[19] * d[31] * d[39] * d[41] + 2 * d[21] * d[32] * d[39] * d[41] - 2 * d[23] * d[27] * d[40] * d[41] + 2 * d[22] * d[30] * d[40] * d[41] + 2 * d[21] * d[31] * d[40] * d[41] - 2 * d[18] * d[32] * d[40] * d[41] + d[19] * d[27] * std::pow(d[41], 2) + d[18] * d[28] * std::pow(d[41], 2) - 2 * d[21] * d[30] * std::pow(d[41], 2) - d[2] * d[19] * d[27] * d[46] - d[1] * d[20] * d[27] * d[46] + 2 * d[5] * d[23] * d[27] * d[46] - d[2] * d[18] * d[28] * d[46] - d[0] * d[20] * d[28] * d[46] + 2 * d[4] * d[22] * d[28] * d[46] - d[1] * d[18] * d[29] * d[46] - d[0] * d[19] * d[29] * d[46] + 2 * d[3] * d[21] * d[29] * d[46] + 2 * d[3] * d[20] * d[30] * d[46] + 2 * d[2] * d[21] * d[30] * d[46] - 2 * d[5] * d[22] * d[30] * d[46] - 2 * d[4] * d[23] * d[30] * d[46] + 2 * d[4] * d[19] * d[31] * d[46] - 2 * d[5] * d[21] * d[31] * d[46] + 2 * d[1] * d[22] * d[31] * d[46] - 2 * d[3] * d[23] * d[31] * d[46] + 2 * d[5] * d[18] * d[32] * d[46] - 2 * d[4] * d[21] * d[32] * d[46] - 2 * d[3] * d[22] * d[32] * d[46] + 2 * d[0] * d[23] * d[32] * d[46];
    coeffs[35] = 2 * d[6] * d[28] * d[29] * d[39] - 2 * d[7] * d[29] * d[30] * d[39] - 2 * d[8] * d[28] * d[31] * d[39] + 2 * d[8] * d[30] * d[32] * d[39] + 2 * d[7] * d[31] * d[32] * d[39] - 2 * d[6] * std::pow(d[32], 2) * d[39] + 2 * d[2] * d[28] * d[33] * d[39] + 2 * d[1] * d[29] * d[33] * d[39] - 4 * d[5] * d[32] * d[33] * d[39] - 2 * d[3] * d[29] * d[34] * d[39] - 2 * d[2] * d[30] * d[34] * d[39] + 2 * d[5] * d[31] * d[34] * d[39] + 2 * d[4] * d[32] * d[34] * d[39] - 2 * d[4] * d[28] * d[35] * d[39] + 2 * d[5] * d[30] * d[35] * d[39] - 2 * d[1] * d[31] * d[35] * d[39] + 2 * d[3] * d[32] * d[35] * d[39] + d[28] * d[29] * std::pow(d[39], 2) - std::pow(d[32], 2) * std::pow(d[39], 2) + 2 * d[7] * d[27] * d[29] * d[40] - 2 * d[6] * d[29] * d[30] * d[40] + 2 * d[8] * d[30] * d[31] * d[40] - 2 * d[7] * std::pow(d[31], 2) * d[40] - 2 * d[8] * d[27] * d[32] * d[40] + 2 * d[6] * d[31] * d[32] * d[40] - 2 * d[3] * d[29] * d[33] * d[40] - 2 * d[2] * d[30] * d[33] * d[40] + 2 * d[5] * d[31] * d[33] * d[40] + 2 * d[4] * d[32] * d[33] * d[40] + 2 * d[2] * d[27] * d[34] * d[40] + 2 * d[0] * d[29] * d[34] * d[40] - 4 * d[4] * d[31] * d[34] * d[40] - 2 * d[5] * d[27] * d[35] * d[40] + 2 * d[4] * d[30] * d[35] * d[40] + 2 * d[3] * d[31] * d[35] * d[40] - 2 * d[0] * d[32] * d[35] * d[40] - 2 * d[29] * d[30] * d[39] * d[40] + 2 * d[31] * d[32] * d[39] * d[40] + d[27] * d[29] * std::pow(d[40], 2) - std::pow(d[31], 2) * std::pow(d[40], 2) + 2 * d[8] * d[27] * d[28] * d[41] - 2 * d[8] * std::pow(d[30], 2) * d[41] - 2 * d[6] * d[28] * d[31] * d[41] + 2 * d[7] * d[30] * d[31] * d[41] - 2 * d[7] * d[27] * d[32] * d[41] + 2 * d[6] * d[30] * d[32] * d[41] - 2 * d[4] * d[28] * d[33] * d[41] + 2 * d[5] * d[30] * d[33] * d[41] - 2 * d[1] * d[31] * d[33] * d[41] + 2 * d[3] * d[32] * d[33] * d[41] - 2 * d[5] * d[27] * d[34] * d[41] + 2 * d[4] * d[30] * d[34] * d[41] + 2 * d[3] * d[31] * d[34] * d[41] - 2 * d[0] * d[32] * d[34] * d[41] + 2 * d[1] * d[27] * d[35] * d[41] + 2 * d[0] * d[28] * d[35] * d[41] - 4 * d[3] * d[30] * d[35] * d[41] - 2 * d[28] * d[31] * d[39] * d[41] + 2 * d[30] * d[32] * d[39] * d[41] + 2 * d[30] * d[31] * d[40] * d[41] - 2 * d[27] * d[32] * d[40] * d[41] + d[27] * d[28] * std::pow(d[41], 2) - std::pow(d[30], 2) * std::pow(d[41], 2) - d[2] * d[27] * d[28] * d[46] - d[1] * d[27] * d[29] * d[46] - d[0] * d[28] * d[29] * d[46] + 2 * d[3] * d[29] * d[30] * d[46] + d[2] * std::pow(d[30], 2) * d[46] + 2 * d[4] * d[28] * d[31] * d[46] - 2 * d[5] * d[30] * d[31] * d[46] + d[1] * std::pow(d[31], 2) * d[46] + 2 * d[5] * d[27] * d[32] * d[46] - 2 * d[4] * d[30] * d[32] * d[46] - 2 * d[3] * d[31] * d[32] * d[46] + d[0] * std::pow(d[32], 2) * d[46];
    coeffs[36] = 2 * d[2] * d[6] * d[10] * d[39] - 2 * d[4] * d[8] * d[10] * d[39] + 2 * d[1] * d[6] * d[11] * d[39] - 2 * d[3] * d[7] * d[11] * d[39] - 2 * d[2] * d[7] * d[12] * d[39] + 2 * d[5] * d[8] * d[12] * d[39] + 2 * d[5] * d[7] * d[13] * d[39] - 2 * d[1] * d[8] * d[13] * d[39] - 4 * d[5] * d[6] * d[14] * d[39] + 2 * d[4] * d[7] * d[14] * d[39] + 2 * d[3] * d[8] * d[14] * d[39] + 2 * d[1] * d[2] * d[15] * d[39] - 2 * std::pow(d[5], 2) * d[15] * d[39] - 2 * d[2] * d[3] * d[16] * d[39] + 2 * d[4] * d[5] * d[16] * d[39] - 2 * d[1] * d[4] * d[17] * d[39] + 2 * d[3] * d[5] * d[17] * d[39] + d[2] * d[10] * std::pow(d[39], 2) + d[1] * d[11] * std::pow(d[39], 2) - 2 * d[5] * d[14] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[9] * d[40] - 2 * d[5] * d[8] * d[9] * d[40] - 2 * d[3] * d[6] * d[11] * d[40] + 2 * d[0] * d[7] * d[11] * d[40] - 2 * d[2] * d[6] * d[12] * d[40] + 2 * d[4] * d[8] * d[12] * d[40] + 2 * d[5] * d[6] * d[13] * d[40] - 4 * d[4] * d[7] * d[13] * d[40] + 2 * d[3] * d[8] * d[13] * d[40] + 2 * d[4] * d[6] * d[14] * d[40] - 2 * d[0] * d[8] * d[14] * d[40] - 2 * d[2] * d[3] * d[15] * d[40] + 2 * d[4] * d[5] * d[15] * d[40] + 2 * d[0] * d[2] * d[16] * d[40] - 2 * std::pow(d[4], 2) * d[16] * d[40] + 2 * d[3] * d[4] * d[17] * d[40] - 2 * d[0] * d[5] * d[17] * d[40] - 2 * d[3] * d[11] * d[39] * d[40] - 2 * d[2] * d[12] * d[39] * d[40] + 2 * d[5] * d[13] * d[39] * d[40] + 2 * d[4] * d[14] * d[39] * d[40] + d[2] * d[9] * std::pow(d[40], 2) + d[0] * d[11] * std::pow(d[40], 2) - 2 * d[4] * d[13] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[9] * d[41] + 2 * d[1] * d[8] * d[9] * d[41] - 2 * d[4] * d[6] * d[10] * d[41] + 2 * d[0] * d[8] * d[10] * d[41] + 2 * d[5] * d[6] * d[12] * d[41] + 2 * d[4] * d[7] * d[12] * d[41] - 4 * d[3] * d[8] * d[12] * d[41] - 2 * d[1] * d[6] * d[13] * d[41] + 2 * d[3] * d[7] * d[13] * d[41] + 2 * d[3] * d[6] * d[14] * d[41] - 2 * d[0] * d[7] * d[14] * d[41] - 2 * d[1] * d[4] * d[15] * d[41] + 2 * d[3] * d[5] * d[15] * d[41] + 2 * d[3] * d[4] * d[16] * d[41] - 2 * d[0] * d[5] * d[16] * d[41] + 2 * d[0] * d[1] * d[17] * d[41] - 2 * std::pow(d[3], 2) * d[17] * d[41] - 2 * d[4] * d[10] * d[39] * d[41] + 2 * d[5] * d[12] * d[39] * d[41] - 2 * d[1] * d[13] * d[39] * d[41] + 2 * d[3] * d[14] * d[39] * d[41] - 2 * d[5] * d[9] * d[40] * d[41] + 2 * d[4] * d[12] * d[40] * d[41] + 2 * d[3] * d[13] * d[40] * d[41] - 2 * d[0] * d[14] * d[40] * d[41] + d[1] * d[9] * std::pow(d[41], 2) + d[0] * d[10] * std::pow(d[41], 2) - 2 * d[3] * d[12] * std::pow(d[41], 2) - d[1] * d[2] * d[9] * d[46] + std::pow(d[5], 2) * d[9] * d[46] - d[0] * d[2] * d[10] * d[46] + std::pow(d[4], 2) * d[10] * d[46] - d[0] * d[1] * d[11] * d[46] + std::pow(d[3], 2) * d[11] * d[46] + 2 * d[2] * d[3] * d[12] * d[46] - 2 * d[4] * d[5] * d[12] * d[46] + 2 * d[1] * d[4] * d[13] * d[46] - 2 * d[3] * d[5] * d[13] * d[46] - 2 * d[3] * d[4] * d[14] * d[46] + 2 * d[0] * d[5] * d[14] * d[46];
    coeffs[37] = 2 * d[2] * d[6] * d[19] * d[39] - 2 * d[4] * d[8] * d[19] * d[39] + 2 * d[1] * d[6] * d[20] * d[39] - 2 * d[3] * d[7] * d[20] * d[39] - 2 * d[2] * d[7] * d[21] * d[39] + 2 * d[5] * d[8] * d[21] * d[39] + 2 * d[5] * d[7] * d[22] * d[39] - 2 * d[1] * d[8] * d[22] * d[39] - 4 * d[5] * d[6] * d[23] * d[39] + 2 * d[4] * d[7] * d[23] * d[39] + 2 * d[3] * d[8] * d[23] * d[39] + 2 * d[1] * d[2] * d[24] * d[39] - 2 * std::pow(d[5], 2) * d[24] * d[39] - 2 * d[2] * d[3] * d[25] * d[39] + 2 * d[4] * d[5] * d[25] * d[39] - 2 * d[1] * d[4] * d[26] * d[39] + 2 * d[3] * d[5] * d[26] * d[39] + d[2] * d[19] * std::pow(d[39], 2) + d[1] * d[20] * std::pow(d[39], 2) - 2 * d[5] * d[23] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[18] * d[40] - 2 * d[5] * d[8] * d[18] * d[40] - 2 * d[3] * d[6] * d[20] * d[40] + 2 * d[0] * d[7] * d[20] * d[40] - 2 * d[2] * d[6] * d[21] * d[40] + 2 * d[4] * d[8] * d[21] * d[40] + 2 * d[5] * d[6] * d[22] * d[40] - 4 * d[4] * d[7] * d[22] * d[40] + 2 * d[3] * d[8] * d[22] * d[40] + 2 * d[4] * d[6] * d[23] * d[40] - 2 * d[0] * d[8] * d[23] * d[40] - 2 * d[2] * d[3] * d[24] * d[40] + 2 * d[4] * d[5] * d[24] * d[40] + 2 * d[0] * d[2] * d[25] * d[40] - 2 * std::pow(d[4], 2) * d[25] * d[40] + 2 * d[3] * d[4] * d[26] * d[40] - 2 * d[0] * d[5] * d[26] * d[40] - 2 * d[3] * d[20] * d[39] * d[40] - 2 * d[2] * d[21] * d[39] * d[40] + 2 * d[5] * d[22] * d[39] * d[40] + 2 * d[4] * d[23] * d[39] * d[40] + d[2] * d[18] * std::pow(d[40], 2) + d[0] * d[20] * std::pow(d[40], 2) - 2 * d[4] * d[22] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[18] * d[41] + 2 * d[1] * d[8] * d[18] * d[41] - 2 * d[4] * d[6] * d[19] * d[41] + 2 * d[0] * d[8] * d[19] * d[41] + 2 * d[5] * d[6] * d[21] * d[41] + 2 * d[4] * d[7] * d[21] * d[41] - 4 * d[3] * d[8] * d[21] * d[41] - 2 * d[1] * d[6] * d[22] * d[41] + 2 * d[3] * d[7] * d[22] * d[41] + 2 * d[3] * d[6] * d[23] * d[41] - 2 * d[0] * d[7] * d[23] * d[41] - 2 * d[1] * d[4] * d[24] * d[41] + 2 * d[3] * d[5] * d[24] * d[41] + 2 * d[3] * d[4] * d[25] * d[41] - 2 * d[0] * d[5] * d[25] * d[41] + 2 * d[0] * d[1] * d[26] * d[41] - 2 * std::pow(d[3], 2) * d[26] * d[41] - 2 * d[4] * d[19] * d[39] * d[41] + 2 * d[5] * d[21] * d[39] * d[41] - 2 * d[1] * d[22] * d[39] * d[41] + 2 * d[3] * d[23] * d[39] * d[41] - 2 * d[5] * d[18] * d[40] * d[41] + 2 * d[4] * d[21] * d[40] * d[41] + 2 * d[3] * d[22] * d[40] * d[41] - 2 * d[0] * d[23] * d[40] * d[41] + d[1] * d[18] * std::pow(d[41], 2) + d[0] * d[19] * std::pow(d[41], 2) - 2 * d[3] * d[21] * std::pow(d[41], 2) - d[1] * d[2] * d[18] * d[46] + std::pow(d[5], 2) * d[18] * d[46] - d[0] * d[2] * d[19] * d[46] + std::pow(d[4], 2) * d[19] * d[46] - d[0] * d[1] * d[20] * d[46] + std::pow(d[3], 2) * d[20] * d[46] + 2 * d[2] * d[3] * d[21] * d[46] - 2 * d[4] * d[5] * d[21] * d[46] + 2 * d[1] * d[4] * d[22] * d[46] - 2 * d[3] * d[5] * d[22] * d[46] - 2 * d[3] * d[4] * d[23] * d[46] + 2 * d[0] * d[5] * d[23] * d[46];
    coeffs[38] = 2 * d[2] * d[6] * d[28] * d[39] - 2 * d[4] * d[8] * d[28] * d[39] + 2 * d[1] * d[6] * d[29] * d[39] - 2 * d[3] * d[7] * d[29] * d[39] - 2 * d[2] * d[7] * d[30] * d[39] + 2 * d[5] * d[8] * d[30] * d[39] + 2 * d[5] * d[7] * d[31] * d[39] - 2 * d[1] * d[8] * d[31] * d[39] - 4 * d[5] * d[6] * d[32] * d[39] + 2 * d[4] * d[7] * d[32] * d[39] + 2 * d[3] * d[8] * d[32] * d[39] + 2 * d[1] * d[2] * d[33] * d[39] - 2 * std::pow(d[5], 2) * d[33] * d[39] - 2 * d[2] * d[3] * d[34] * d[39] + 2 * d[4] * d[5] * d[34] * d[39] - 2 * d[1] * d[4] * d[35] * d[39] + 2 * d[3] * d[5] * d[35] * d[39] + d[2] * d[28] * std::pow(d[39], 2) + d[1] * d[29] * std::pow(d[39], 2) - 2 * d[5] * d[32] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[27] * d[40] - 2 * d[5] * d[8] * d[27] * d[40] - 2 * d[3] * d[6] * d[29] * d[40] + 2 * d[0] * d[7] * d[29] * d[40] - 2 * d[2] * d[6] * d[30] * d[40] + 2 * d[4] * d[8] * d[30] * d[40] + 2 * d[5] * d[6] * d[31] * d[40] - 4 * d[4] * d[7] * d[31] * d[40] + 2 * d[3] * d[8] * d[31] * d[40] + 2 * d[4] * d[6] * d[32] * d[40] - 2 * d[0] * d[8] * d[32] * d[40] - 2 * d[2] * d[3] * d[33] * d[40] + 2 * d[4] * d[5] * d[33] * d[40] + 2 * d[0] * d[2] * d[34] * d[40] - 2 * std::pow(d[4], 2) * d[34] * d[40] + 2 * d[3] * d[4] * d[35] * d[40] - 2 * d[0] * d[5] * d[35] * d[40] - 2 * d[3] * d[29] * d[39] * d[40] - 2 * d[2] * d[30] * d[39] * d[40] + 2 * d[5] * d[31] * d[39] * d[40] + 2 * d[4] * d[32] * d[39] * d[40] + d[2] * d[27] * std::pow(d[40], 2) + d[0] * d[29] * std::pow(d[40], 2) - 2 * d[4] * d[31] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[27] * d[41] + 2 * d[1] * d[8] * d[27] * d[41] - 2 * d[4] * d[6] * d[28] * d[41] + 2 * d[0] * d[8] * d[28] * d[41] + 2 * d[5] * d[6] * d[30] * d[41] + 2 * d[4] * d[7] * d[30] * d[41] - 4 * d[3] * d[8] * d[30] * d[41] - 2 * d[1] * d[6] * d[31] * d[41] + 2 * d[3] * d[7] * d[31] * d[41] + 2 * d[3] * d[6] * d[32] * d[41] - 2 * d[0] * d[7] * d[32] * d[41] - 2 * d[1] * d[4] * d[33] * d[41] + 2 * d[3] * d[5] * d[33] * d[41] + 2 * d[3] * d[4] * d[34] * d[41] - 2 * d[0] * d[5] * d[34] * d[41] + 2 * d[0] * d[1] * d[35] * d[41] - 2 * std::pow(d[3], 2) * d[35] * d[41] - 2 * d[4] * d[28] * d[39] * d[41] + 2 * d[5] * d[30] * d[39] * d[41] - 2 * d[1] * d[31] * d[39] * d[41] + 2 * d[3] * d[32] * d[39] * d[41] - 2 * d[5] * d[27] * d[40] * d[41] + 2 * d[4] * d[30] * d[40] * d[41] + 2 * d[3] * d[31] * d[40] * d[41] - 2 * d[0] * d[32] * d[40] * d[41] + d[1] * d[27] * std::pow(d[41], 2) + d[0] * d[28] * std::pow(d[41], 2) - 2 * d[3] * d[30] * std::pow(d[41], 2) - d[1] * d[2] * d[27] * d[46] + std::pow(d[5], 2) * d[27] * d[46] - d[0] * d[2] * d[28] * d[46] + std::pow(d[4], 2) * d[28] * d[46] - d[0] * d[1] * d[29] * d[46] + std::pow(d[3], 2) * d[29] * d[46] + 2 * d[2] * d[3] * d[30] * d[46] - 2 * d[4] * d[5] * d[30] * d[46] + 2 * d[1] * d[4] * d[31] * d[46] - 2 * d[3] * d[5] * d[31] * d[46] - 2 * d[3] * d[4] * d[32] * d[46] + 2 * d[0] * d[5] * d[32] * d[46];
    coeffs[39] = 2 * d[1] * d[2] * d[6] * d[39] - 2 * std::pow(d[5], 2) * d[6] * d[39] - 2 * d[2] * d[3] * d[7] * d[39] + 2 * d[4] * d[5] * d[7] * d[39] - 2 * d[1] * d[4] * d[8] * d[39] + 2 * d[3] * d[5] * d[8] * d[39] + d[1] * d[2] * std::pow(d[39], 2) - std::pow(d[5], 2) * std::pow(d[39], 2) - 2 * d[2] * d[3] * d[6] * d[40] + 2 * d[4] * d[5] * d[6] * d[40] + 2 * d[0] * d[2] * d[7] * d[40] - 2 * std::pow(d[4], 2) * d[7] * d[40] + 2 * d[3] * d[4] * d[8] * d[40] - 2 * d[0] * d[5] * d[8] * d[40] - 2 * d[2] * d[3] * d[39] * d[40] + 2 * d[4] * d[5] * d[39] * d[40] + d[0] * d[2] * std::pow(d[40], 2) - std::pow(d[4], 2) * std::pow(d[40], 2) - 2 * d[1] * d[4] * d[6] * d[41] + 2 * d[3] * d[5] * d[6] * d[41] + 2 * d[3] * d[4] * d[7] * d[41] - 2 * d[0] * d[5] * d[7] * d[41] + 2 * d[0] * d[1] * d[8] * d[41] - 2 * std::pow(d[3], 2) * d[8] * d[41] - 2 * d[1] * d[4] * d[39] * d[41] + 2 * d[3] * d[5] * d[39] * d[41] + 2 * d[3] * d[4] * d[40] * d[41] - 2 * d[0] * d[5] * d[40] * d[41] + d[0] * d[1] * std::pow(d[41], 2) - std::pow(d[3], 2) * std::pow(d[41], 2) - d[0] * d[1] * d[2] * d[46] + d[2] * std::pow(d[3], 2) * d[46] + d[1] * std::pow(d[4], 2) * d[46] - 2 * d[3] * d[4] * d[5] * d[46] + d[0] * std::pow(d[5], 2) * d[46];
    coeffs[40] = 2 * d[10] * d[11] * d[15] * d[42] - 2 * std::pow(d[14], 2) * d[15] * d[42] - 2 * d[11] * d[12] * d[16] * d[42] + 2 * d[13] * d[14] * d[16] * d[42] - 2 * d[10] * d[13] * d[17] * d[42] + 2 * d[12] * d[14] * d[17] * d[42] - 2 * d[11] * d[12] * d[15] * d[43] + 2 * d[13] * d[14] * d[15] * d[43] + 2 * d[9] * d[11] * d[16] * d[43] - 2 * std::pow(d[13], 2) * d[16] * d[43] + 2 * d[12] * d[13] * d[17] * d[43] - 2 * d[9] * d[14] * d[17] * d[43] - 2 * d[10] * d[13] * d[15] * d[44] + 2 * d[12] * d[14] * d[15] * d[44] + 2 * d[12] * d[13] * d[16] * d[44] - 2 * d[9] * d[14] * d[16] * d[44] + 2 * d[9] * d[10] * d[17] * d[44] - 2 * std::pow(d[12], 2) * d[17] * d[44] - d[9] * d[10] * d[11] * d[47] + d[11] * std::pow(d[12], 2) * d[47] + d[10] * std::pow(d[13], 2) * d[47] - 2 * d[12] * d[13] * d[14] * d[47] + d[9] * std::pow(d[14], 2) * d[47];
    coeffs[41] = 2 * d[11] * d[15] * d[19] * d[42] - 2 * d[13] * d[17] * d[19] * d[42] + 2 * d[10] * d[15] * d[20] * d[42] - 2 * d[12] * d[16] * d[20] * d[42] - 2 * d[11] * d[16] * d[21] * d[42] + 2 * d[14] * d[17] * d[21] * d[42] + 2 * d[14] * d[16] * d[22] * d[42] - 2 * d[10] * d[17] * d[22] * d[42] - 4 * d[14] * d[15] * d[23] * d[42] + 2 * d[13] * d[16] * d[23] * d[42] + 2 * d[12] * d[17] * d[23] * d[42] + 2 * d[10] * d[11] * d[24] * d[42] - 2 * std::pow(d[14], 2) * d[24] * d[42] - 2 * d[11] * d[12] * d[25] * d[42] + 2 * d[13] * d[14] * d[25] * d[42] - 2 * d[10] * d[13] * d[26] * d[42] + 2 * d[12] * d[14] * d[26] * d[42] + 2 * d[11] * d[16] * d[18] * d[43] - 2 * d[14] * d[17] * d[18] * d[43] - 2 * d[12] * d[15] * d[20] * d[43] + 2 * d[9] * d[16] * d[20] * d[43] - 2 * d[11] * d[15] * d[21] * d[43] + 2 * d[13] * d[17] * d[21] * d[43] + 2 * d[14] * d[15] * d[22] * d[43] - 4 * d[13] * d[16] * d[22] * d[43] + 2 * d[12] * d[17] * d[22] * d[43] + 2 * d[13] * d[15] * d[23] * d[43] - 2 * d[9] * d[17] * d[23] * d[43] - 2 * d[11] * d[12] * d[24] * d[43] + 2 * d[13] * d[14] * d[24] * d[43] + 2 * d[9] * d[11] * d[25] * d[43] - 2 * std::pow(d[13], 2) * d[25] * d[43] + 2 * d[12] * d[13] * d[26] * d[43] - 2 * d[9] * d[14] * d[26] * d[43] - 2 * d[14] * d[16] * d[18] * d[44] + 2 * d[10] * d[17] * d[18] * d[44] - 2 * d[13] * d[15] * d[19] * d[44] + 2 * d[9] * d[17] * d[19] * d[44] + 2 * d[14] * d[15] * d[21] * d[44] + 2 * d[13] * d[16] * d[21] * d[44] - 4 * d[12] * d[17] * d[21] * d[44] - 2 * d[10] * d[15] * d[22] * d[44] + 2 * d[12] * d[16] * d[22] * d[44] + 2 * d[12] * d[15] * d[23] * d[44] - 2 * d[9] * d[16] * d[23] * d[44] - 2 * d[10] * d[13] * d[24] * d[44] + 2 * d[12] * d[14] * d[24] * d[44] + 2 * d[12] * d[13] * d[25] * d[44] - 2 * d[9] * d[14] * d[25] * d[44] + 2 * d[9] * d[10] * d[26] * d[44] - 2 * std::pow(d[12], 2) * d[26] * d[44] - d[10] * d[11] * d[18] * d[47] + std::pow(d[14], 2) * d[18] * d[47] - d[9] * d[11] * d[19] * d[47] + std::pow(d[13], 2) * d[19] * d[47] - d[9] * d[10] * d[20] * d[47] + std::pow(d[12], 2) * d[20] * d[47] + 2 * d[11] * d[12] * d[21] * d[47] - 2 * d[13] * d[14] * d[21] * d[47] + 2 * d[10] * d[13] * d[22] * d[47] - 2 * d[12] * d[14] * d[22] * d[47] - 2 * d[12] * d[13] * d[23] * d[47] + 2 * d[9] * d[14] * d[23] * d[47];
    coeffs[42] = 2 * d[15] * d[19] * d[20] * d[42] - 2 * d[16] * d[20] * d[21] * d[42] - 2 * d[17] * d[19] * d[22] * d[42] + 2 * d[17] * d[21] * d[23] * d[42] + 2 * d[16] * d[22] * d[23] * d[42] - 2 * d[15] * std::pow(d[23], 2) * d[42] + 2 * d[11] * d[19] * d[24] * d[42] + 2 * d[10] * d[20] * d[24] * d[42] - 4 * d[14] * d[23] * d[24] * d[42] - 2 * d[12] * d[20] * d[25] * d[42] - 2 * d[11] * d[21] * d[25] * d[42] + 2 * d[14] * d[22] * d[25] * d[42] + 2 * d[13] * d[23] * d[25] * d[42] - 2 * d[13] * d[19] * d[26] * d[42] + 2 * d[14] * d[21] * d[26] * d[42] - 2 * d[10] * d[22] * d[26] * d[42] + 2 * d[12] * d[23] * d[26] * d[42] + 2 * d[16] * d[18] * d[20] * d[43] - 2 * d[15] * d[20] * d[21] * d[43] + 2 * d[17] * d[21] * d[22] * d[43] - 2 * d[16] * std::pow(d[22], 2) * d[43] - 2 * d[17] * d[18] * d[23] * d[43] + 2 * d[15] * d[22] * d[23] * d[43] - 2 * d[12] * d[20] * d[24] * d[43] - 2 * d[11] * d[21] * d[24] * d[43] + 2 * d[14] * d[22] * d[24] * d[43] + 2 * d[13] * d[23] * d[24] * d[43] + 2 * d[11] * d[18] * d[25] * d[43] + 2 * d[9] * d[20] * d[25] * d[43] - 4 * d[13] * d[22] * d[25] * d[43] - 2 * d[14] * d[18] * d[26] * d[43] + 2 * d[13] * d[21] * d[26] * d[43] + 2 * d[12] * d[22] * d[26] * d[43] - 2 * d[9] * d[23] * d[26] * d[43] + 2 * d[17] * d[18] * d[19] * d[44] - 2 * d[17] * std::pow(d[21], 2) * d[44] - 2 * d[15] * d[19] * d[22] * d[44] + 2 * d[16] * d[21] * d[22] * d[44] - 2 * d[16] * d[18] * d[23] * d[44] + 2 * d[15] * d[21] * d[23] * d[44] - 2 * d[13] * d[19] * d[24] * d[44] + 2 * d[14] * d[21] * d[24] * d[44] - 2 * d[10] * d[22] * d[24] * d[44] + 2 * d[12] * d[23] * d[24] * d[44] - 2 * d[14] * d[18] * d[25] * d[44] + 2 * d[13] * d[21] * d[25] * d[44] + 2 * d[12] * d[22] * d[25] * d[44] - 2 * d[9] * d[23] * d[25] * d[44] + 2 * d[10] * d[18] * d[26] * d[44] + 2 * d[9] * d[19] * d[26] * d[44] - 4 * d[12] * d[21] * d[26] * d[44] - d[11] * d[18] * d[19] * d[47] - d[10] * d[18] * d[20] * d[47] - d[9] * d[19] * d[20] * d[47] + 2 * d[12] * d[20] * d[21] * d[47] + d[11] * std::pow(d[21], 2) * d[47] + 2 * d[13] * d[19] * d[22] * d[47] - 2 * d[14] * d[21] * d[22] * d[47] + d[10] * std::pow(d[22], 2) * d[47] + 2 * d[14] * d[18] * d[23] * d[47] - 2 * d[13] * d[21] * d[23] * d[47] - 2 * d[12] * d[22] * d[23] * d[47] + d[9] * std::pow(d[23], 2) * d[47];
    coeffs[43] = 2 * d[19] * d[20] * d[24] * d[42] - 2 * std::pow(d[23], 2) * d[24] * d[42] - 2 * d[20] * d[21] * d[25] * d[42] + 2 * d[22] * d[23] * d[25] * d[42] - 2 * d[19] * d[22] * d[26] * d[42] + 2 * d[21] * d[23] * d[26] * d[42] - 2 * d[20] * d[21] * d[24] * d[43] + 2 * d[22] * d[23] * d[24] * d[43] + 2 * d[18] * d[20] * d[25] * d[43] - 2 * std::pow(d[22], 2) * d[25] * d[43] + 2 * d[21] * d[22] * d[26] * d[43] - 2 * d[18] * d[23] * d[26] * d[43] - 2 * d[19] * d[22] * d[24] * d[44] + 2 * d[21] * d[23] * d[24] * d[44] + 2 * d[21] * d[22] * d[25] * d[44] - 2 * d[18] * d[23] * d[25] * d[44] + 2 * d[18] * d[19] * d[26] * d[44] - 2 * std::pow(d[21], 2) * d[26] * d[44] - d[18] * d[19] * d[20] * d[47] + d[20] * std::pow(d[21], 2) * d[47] + d[19] * std::pow(d[22], 2) * d[47] - 2 * d[21] * d[22] * d[23] * d[47] + d[18] * std::pow(d[23], 2) * d[47];
    coeffs[44] = 2 * d[11] * d[15] * d[28] * d[42] - 2 * d[13] * d[17] * d[28] * d[42] + 2 * d[10] * d[15] * d[29] * d[42] - 2 * d[12] * d[16] * d[29] * d[42] - 2 * d[11] * d[16] * d[30] * d[42] + 2 * d[14] * d[17] * d[30] * d[42] + 2 * d[14] * d[16] * d[31] * d[42] - 2 * d[10] * d[17] * d[31] * d[42] - 4 * d[14] * d[15] * d[32] * d[42] + 2 * d[13] * d[16] * d[32] * d[42] + 2 * d[12] * d[17] * d[32] * d[42] + 2 * d[10] * d[11] * d[33] * d[42] - 2 * std::pow(d[14], 2) * d[33] * d[42] - 2 * d[11] * d[12] * d[34] * d[42] + 2 * d[13] * d[14] * d[34] * d[42] - 2 * d[10] * d[13] * d[35] * d[42] + 2 * d[12] * d[14] * d[35] * d[42] + 2 * d[11] * d[16] * d[27] * d[43] - 2 * d[14] * d[17] * d[27] * d[43] - 2 * d[12] * d[15] * d[29] * d[43] + 2 * d[9] * d[16] * d[29] * d[43] - 2 * d[11] * d[15] * d[30] * d[43] + 2 * d[13] * d[17] * d[30] * d[43] + 2 * d[14] * d[15] * d[31] * d[43] - 4 * d[13] * d[16] * d[31] * d[43] + 2 * d[12] * d[17] * d[31] * d[43] + 2 * d[13] * d[15] * d[32] * d[43] - 2 * d[9] * d[17] * d[32] * d[43] - 2 * d[11] * d[12] * d[33] * d[43] + 2 * d[13] * d[14] * d[33] * d[43] + 2 * d[9] * d[11] * d[34] * d[43] - 2 * std::pow(d[13], 2) * d[34] * d[43] + 2 * d[12] * d[13] * d[35] * d[43] - 2 * d[9] * d[14] * d[35] * d[43] - 2 * d[14] * d[16] * d[27] * d[44] + 2 * d[10] * d[17] * d[27] * d[44] - 2 * d[13] * d[15] * d[28] * d[44] + 2 * d[9] * d[17] * d[28] * d[44] + 2 * d[14] * d[15] * d[30] * d[44] + 2 * d[13] * d[16] * d[30] * d[44] - 4 * d[12] * d[17] * d[30] * d[44] - 2 * d[10] * d[15] * d[31] * d[44] + 2 * d[12] * d[16] * d[31] * d[44] + 2 * d[12] * d[15] * d[32] * d[44] - 2 * d[9] * d[16] * d[32] * d[44] - 2 * d[10] * d[13] * d[33] * d[44] + 2 * d[12] * d[14] * d[33] * d[44] + 2 * d[12] * d[13] * d[34] * d[44] - 2 * d[9] * d[14] * d[34] * d[44] + 2 * d[9] * d[10] * d[35] * d[44] - 2 * std::pow(d[12], 2) * d[35] * d[44] - d[10] * d[11] * d[27] * d[47] + std::pow(d[14], 2) * d[27] * d[47] - d[9] * d[11] * d[28] * d[47] + std::pow(d[13], 2) * d[28] * d[47] - d[9] * d[10] * d[29] * d[47] + std::pow(d[12], 2) * d[29] * d[47] + 2 * d[11] * d[12] * d[30] * d[47] - 2 * d[13] * d[14] * d[30] * d[47] + 2 * d[10] * d[13] * d[31] * d[47] - 2 * d[12] * d[14] * d[31] * d[47] - 2 * d[12] * d[13] * d[32] * d[47] + 2 * d[9] * d[14] * d[32] * d[47];
    coeffs[45] = 2 * d[15] * d[20] * d[28] * d[42] - 2 * d[17] * d[22] * d[28] * d[42] + 2 * d[11] * d[24] * d[28] * d[42] - 2 * d[13] * d[26] * d[28] * d[42] + 2 * d[15] * d[19] * d[29] * d[42] - 2 * d[16] * d[21] * d[29] * d[42] + 2 * d[10] * d[24] * d[29] * d[42] - 2 * d[12] * d[25] * d[29] * d[42] - 2 * d[16] * d[20] * d[30] * d[42] + 2 * d[17] * d[23] * d[30] * d[42] - 2 * d[11] * d[25] * d[30] * d[42] + 2 * d[14] * d[26] * d[30] * d[42] - 2 * d[17] * d[19] * d[31] * d[42] + 2 * d[16] * d[23] * d[31] * d[42] + 2 * d[14] * d[25] * d[31] * d[42] - 2 * d[10] * d[26] * d[31] * d[42] + 2 * d[17] * d[21] * d[32] * d[42] + 2 * d[16] * d[22] * d[32] * d[42] - 4 * d[15] * d[23] * d[32] * d[42] - 4 * d[14] * d[24] * d[32] * d[42] + 2 * d[13] * d[25] * d[32] * d[42] + 2 * d[12] * d[26] * d[32] * d[42] + 2 * d[11] * d[19] * d[33] * d[42] + 2 * d[10] * d[20] * d[33] * d[42] - 4 * d[14] * d[23] * d[33] * d[42] - 2 * d[12] * d[20] * d[34] * d[42] - 2 * d[11] * d[21] * d[34] * d[42] + 2 * d[14] * d[22] * d[34] * d[42] + 2 * d[13] * d[23] * d[34] * d[42] - 2 * d[13] * d[19] * d[35] * d[42] + 2 * d[14] * d[21] * d[35] * d[42] - 2 * d[10] * d[22] * d[35] * d[42] + 2 * d[12] * d[23] * d[35] * d[42] + 2 * d[16] * d[20] * d[27] * d[43] - 2 * d[17] * d[23] * d[27] * d[43] + 2 * d[11] * d[25] * d[27] * d[43] - 2 * d[14] * d[26] * d[27] * d[43] + 2 * d[16] * d[18] * d[29] * d[43] - 2 * d[15] * d[21] * d[29] * d[43] - 2 * d[12] * d[24] * d[29] * d[43] + 2 * d[9] * d[25] * d[29] * d[43] - 2 * d[15] * d[20] * d[30] * d[43] + 2 * d[17] * d[22] * d[30] * d[43] - 2 * d[11] * d[24] * d[30] * d[43] + 2 * d[13] * d[26] * d[30] * d[43] + 2 * d[17] * d[21] * d[31] * d[43] - 4 * d[16] * d[22] * d[31] * d[43] + 2 * d[15] * d[23] * d[31] * d[43] + 2 * d[14] * d[24] * d[31] * d[43] - 4 * d[13] * d[25] * d[31] * d[43] + 2 * d[12] * d[26] * d[31] * d[43] - 2 * d[17] * d[18] * d[32] * d[43] + 2 * d[15] * d[22] * d[32] * d[43] + 2 * d[13] * d[24] * d[32] * d[43] - 2 * d[9] * d[26] * d[32] * d[43] - 2 * d[12] * d[20] * d[33] * d[43] - 2 * d[11] * d[21] * d[33] * d[43] + 2 * d[14] * d[22] * d[33] * d[43] + 2 * d[13] * d[23] * d[33] * d[43] + 2 * d[11] * d[18] * d[34] * d[43] + 2 * d[9] * d[20] * d[34] * d[43] - 4 * d[13] * d[22] * d[34] * d[43] - 2 * d[14] * d[18] * d[35] * d[43] + 2 * d[13] * d[21] * d[35] * d[43] + 2 * d[12] * d[22] * d[35] * d[43] - 2 * d[9] * d[23] * d[35] * d[43] + 2 * d[17] * d[19] * d[27] * d[44] - 2 * d[16] * d[23] * d[27] * d[44] - 2 * d[14] * d[25] * d[27] * d[44] + 2 * d[10] * d[26] * d[27] * d[44] + 2 * d[17] * d[18] * d[28] * d[44] - 2 * d[15] * d[22] * d[28] * d[44] - 2 * d[13] * d[24] * d[28] * d[44] + 2 * d[9] * d[26] * d[28] * d[44] - 4 * d[17] * d[21] * d[30] * d[44] + 2 * d[16] * d[22] * d[30] * d[44] + 2 * d[15] * d[23] * d[30] * d[44] + 2 * d[14] * d[24] * d[30] * d[44] + 2 * d[13] * d[25] * d[30] * d[44] - 4 * d[12] * d[26] * d[30] * d[44] - 2 * d[15] * d[19] * d[31] * d[44] + 2 * d[16] * d[21] * d[31] * d[44] - 2 * d[10] * d[24] * d[31] * d[44] + 2 * d[12] * d[25] * d[31] * d[44] - 2 * d[16] * d[18] * d[32] * d[44] + 2 * d[15] * d[21] * d[32] * d[44] + 2 * d[12] * d[24] * d[32] * d[44] - 2 * d[9] * d[25] * d[32] * d[44] - 2 * d[13] * d[19] * d[33] * d[44] + 2 * d[14] * d[21] * d[33] * d[44] - 2 * d[10] * d[22] * d[33] * d[44] + 2 * d[12] * d[23] * d[33] * d[44] - 2 * d[14] * d[18] * d[34] * d[44] + 2 * d[13] * d[21] * d[34] * d[44] + 2 * d[12] * d[22] * d[34] * d[44] - 2 * d[9] * d[23] * d[34] * d[44] + 2 * d[10] * d[18] * d[35] * d[44] + 2 * d[9] * d[19] * d[35] * d[44] - 4 * d[12] * d[21] * d[35] * d[44] - d[11] * d[19] * d[27] * d[47] - d[10] * d[20] * d[27] * d[47] + 2 * d[14] * d[23] * d[27] * d[47] - d[11] * d[18] * d[28] * d[47] - d[9] * d[20] * d[28] * d[47] + 2 * d[13] * d[22] * d[28] * d[47] - d[10] * d[18] * d[29] * d[47] - d[9] * d[19] * d[29] * d[47] + 2 * d[12] * d[21] * d[29] * d[47] + 2 * d[12] * d[20] * d[30] * d[47] + 2 * d[11] * d[21] * d[30] * d[47] - 2 * d[14] * d[22] * d[30] * d[47] - 2 * d[13] * d[23] * d[30] * d[47] + 2 * d[13] * d[19] * d[31] * d[47] - 2 * d[14] * d[21] * d[31] * d[47] + 2 * d[10] * d[22] * d[31] * d[47] - 2 * d[12] * d[23] * d[31] * d[47] + 2 * d[14] * d[18] * d[32] * d[47] - 2 * d[13] * d[21] * d[32] * d[47] - 2 * d[12] * d[22] * d[32] * d[47] + 2 * d[9] * d[23] * d[32] * d[47];
    coeffs[46] = 2 * d[20] * d[24] * d[28] * d[42] - 2 * d[22] * d[26] * d[28] * d[42] + 2 * d[19] * d[24] * d[29] * d[42] - 2 * d[21] * d[25] * d[29] * d[42] - 2 * d[20] * d[25] * d[30] * d[42] + 2 * d[23] * d[26] * d[30] * d[42] + 2 * d[23] * d[25] * d[31] * d[42] - 2 * d[19] * d[26] * d[31] * d[42] - 4 * d[23] * d[24] * d[32] * d[42] + 2 * d[22] * d[25] * d[32] * d[42] + 2 * d[21] * d[26] * d[32] * d[42] + 2 * d[19] * d[20] * d[33] * d[42] - 2 * std::pow(d[23], 2) * d[33] * d[42] - 2 * d[20] * d[21] * d[34] * d[42] + 2 * d[22] * d[23] * d[34] * d[42] - 2 * d[19] * d[22] * d[35] * d[42] + 2 * d[21] * d[23] * d[35] * d[42] + 2 * d[20] * d[25] * d[27] * d[43] - 2 * d[23] * d[26] * d[27] * d[43] - 2 * d[21] * d[24] * d[29] * d[43] + 2 * d[18] * d[25] * d[29] * d[43] - 2 * d[20] * d[24] * d[30] * d[43] + 2 * d[22] * d[26] * d[30] * d[43] + 2 * d[23] * d[24] * d[31] * d[43] - 4 * d[22] * d[25] * d[31] * d[43] + 2 * d[21] * d[26] * d[31] * d[43] + 2 * d[22] * d[24] * d[32] * d[43] - 2 * d[18] * d[26] * d[32] * d[43] - 2 * d[20] * d[21] * d[33] * d[43] + 2 * d[22] * d[23] * d[33] * d[43] + 2 * d[18] * d[20] * d[34] * d[43] - 2 * std::pow(d[22], 2) * d[34] * d[43] + 2 * d[21] * d[22] * d[35] * d[43] - 2 * d[18] * d[23] * d[35] * d[43] - 2 * d[23] * d[25] * d[27] * d[44] + 2 * d[19] * d[26] * d[27] * d[44] - 2 * d[22] * d[24] * d[28] * d[44] + 2 * d[18] * d[26] * d[28] * d[44] + 2 * d[23] * d[24] * d[30] * d[44] + 2 * d[22] * d[25] * d[30] * d[44] - 4 * d[21] * d[26] * d[30] * d[44] - 2 * d[19] * d[24] * d[31] * d[44] + 2 * d[21] * d[25] * d[31] * d[44] + 2 * d[21] * d[24] * d[32] * d[44] - 2 * d[18] * d[25] * d[32] * d[44] - 2 * d[19] * d[22] * d[33] * d[44] + 2 * d[21] * d[23] * d[33] * d[44] + 2 * d[21] * d[22] * d[34] * d[44] - 2 * d[18] * d[23] * d[34] * d[44] + 2 * d[18] * d[19] * d[35] * d[44] - 2 * std::pow(d[21], 2) * d[35] * d[44] - d[19] * d[20] * d[27] * d[47] + std::pow(d[23], 2) * d[27] * d[47] - d[18] * d[20] * d[28] * d[47] + std::pow(d[22], 2) * d[28] * d[47] - d[18] * d[19] * d[29] * d[47] + std::pow(d[21], 2) * d[29] * d[47] + 2 * d[20] * d[21] * d[30] * d[47] - 2 * d[22] * d[23] * d[30] * d[47] + 2 * d[19] * d[22] * d[31] * d[47] - 2 * d[21] * d[23] * d[31] * d[47] - 2 * d[21] * d[22] * d[32] * d[47] + 2 * d[18] * d[23] * d[32] * d[47];
    coeffs[47] = 2 * d[15] * d[28] * d[29] * d[42] - 2 * d[16] * d[29] * d[30] * d[42] - 2 * d[17] * d[28] * d[31] * d[42] + 2 * d[17] * d[30] * d[32] * d[42] + 2 * d[16] * d[31] * d[32] * d[42] - 2 * d[15] * std::pow(d[32], 2) * d[42] + 2 * d[11] * d[28] * d[33] * d[42] + 2 * d[10] * d[29] * d[33] * d[42] - 4 * d[14] * d[32] * d[33] * d[42] - 2 * d[12] * d[29] * d[34] * d[42] - 2 * d[11] * d[30] * d[34] * d[42] + 2 * d[14] * d[31] * d[34] * d[42] + 2 * d[13] * d[32] * d[34] * d[42] - 2 * d[13] * d[28] * d[35] * d[42] + 2 * d[14] * d[30] * d[35] * d[42] - 2 * d[10] * d[31] * d[35] * d[42] + 2 * d[12] * d[32] * d[35] * d[42] + 2 * d[16] * d[27] * d[29] * d[43] - 2 * d[15] * d[29] * d[30] * d[43] + 2 * d[17] * d[30] * d[31] * d[43] - 2 * d[16] * std::pow(d[31], 2) * d[43] - 2 * d[17] * d[27] * d[32] * d[43] + 2 * d[15] * d[31] * d[32] * d[43] - 2 * d[12] * d[29] * d[33] * d[43] - 2 * d[11] * d[30] * d[33] * d[43] + 2 * d[14] * d[31] * d[33] * d[43] + 2 * d[13] * d[32] * d[33] * d[43] + 2 * d[11] * d[27] * d[34] * d[43] + 2 * d[9] * d[29] * d[34] * d[43] - 4 * d[13] * d[31] * d[34] * d[43] - 2 * d[14] * d[27] * d[35] * d[43] + 2 * d[13] * d[30] * d[35] * d[43] + 2 * d[12] * d[31] * d[35] * d[43] - 2 * d[9] * d[32] * d[35] * d[43] + 2 * d[17] * d[27] * d[28] * d[44] - 2 * d[17] * std::pow(d[30], 2) * d[44] - 2 * d[15] * d[28] * d[31] * d[44] + 2 * d[16] * d[30] * d[31] * d[44] - 2 * d[16] * d[27] * d[32] * d[44] + 2 * d[15] * d[30] * d[32] * d[44] - 2 * d[13] * d[28] * d[33] * d[44] + 2 * d[14] * d[30] * d[33] * d[44] - 2 * d[10] * d[31] * d[33] * d[44] + 2 * d[12] * d[32] * d[33] * d[44] - 2 * d[14] * d[27] * d[34] * d[44] + 2 * d[13] * d[30] * d[34] * d[44] + 2 * d[12] * d[31] * d[34] * d[44] - 2 * d[9] * d[32] * d[34] * d[44] + 2 * d[10] * d[27] * d[35] * d[44] + 2 * d[9] * d[28] * d[35] * d[44] - 4 * d[12] * d[30] * d[35] * d[44] - d[11] * d[27] * d[28] * d[47] - d[10] * d[27] * d[29] * d[47] - d[9] * d[28] * d[29] * d[47] + 2 * d[12] * d[29] * d[30] * d[47] + d[11] * std::pow(d[30], 2) * d[47] + 2 * d[13] * d[28] * d[31] * d[47] - 2 * d[14] * d[30] * d[31] * d[47] + d[10] * std::pow(d[31], 2) * d[47] + 2 * d[14] * d[27] * d[32] * d[47] - 2 * d[13] * d[30] * d[32] * d[47] - 2 * d[12] * d[31] * d[32] * d[47] + d[9] * std::pow(d[32], 2) * d[47];
    coeffs[48] = 2 * d[24] * d[28] * d[29] * d[42] - 2 * d[25] * d[29] * d[30] * d[42] - 2 * d[26] * d[28] * d[31] * d[42] + 2 * d[26] * d[30] * d[32] * d[42] + 2 * d[25] * d[31] * d[32] * d[42] - 2 * d[24] * std::pow(d[32], 2) * d[42] + 2 * d[20] * d[28] * d[33] * d[42] + 2 * d[19] * d[29] * d[33] * d[42] - 4 * d[23] * d[32] * d[33] * d[42] - 2 * d[21] * d[29] * d[34] * d[42] - 2 * d[20] * d[30] * d[34] * d[42] + 2 * d[23] * d[31] * d[34] * d[42] + 2 * d[22] * d[32] * d[34] * d[42] - 2 * d[22] * d[28] * d[35] * d[42] + 2 * d[23] * d[30] * d[35] * d[42] - 2 * d[19] * d[31] * d[35] * d[42] + 2 * d[21] * d[32] * d[35] * d[42] + 2 * d[25] * d[27] * d[29] * d[43] - 2 * d[24] * d[29] * d[30] * d[43] + 2 * d[26] * d[30] * d[31] * d[43] - 2 * d[25] * std::pow(d[31], 2) * d[43] - 2 * d[26] * d[27] * d[32] * d[43] + 2 * d[24] * d[31] * d[32] * d[43] - 2 * d[21] * d[29] * d[33] * d[43] - 2 * d[20] * d[30] * d[33] * d[43] + 2 * d[23] * d[31] * d[33] * d[43] + 2 * d[22] * d[32] * d[33] * d[43] + 2 * d[20] * d[27] * d[34] * d[43] + 2 * d[18] * d[29] * d[34] * d[43] - 4 * d[22] * d[31] * d[34] * d[43] - 2 * d[23] * d[27] * d[35] * d[43] + 2 * d[22] * d[30] * d[35] * d[43] + 2 * d[21] * d[31] * d[35] * d[43] - 2 * d[18] * d[32] * d[35] * d[43] + 2 * d[26] * d[27] * d[28] * d[44] - 2 * d[26] * std::pow(d[30], 2) * d[44] - 2 * d[24] * d[28] * d[31] * d[44] + 2 * d[25] * d[30] * d[31] * d[44] - 2 * d[25] * d[27] * d[32] * d[44] + 2 * d[24] * d[30] * d[32] * d[44] - 2 * d[22] * d[28] * d[33] * d[44] + 2 * d[23] * d[30] * d[33] * d[44] - 2 * d[19] * d[31] * d[33] * d[44] + 2 * d[21] * d[32] * d[33] * d[44] - 2 * d[23] * d[27] * d[34] * d[44] + 2 * d[22] * d[30] * d[34] * d[44] + 2 * d[21] * d[31] * d[34] * d[44] - 2 * d[18] * d[32] * d[34] * d[44] + 2 * d[19] * d[27] * d[35] * d[44] + 2 * d[18] * d[28] * d[35] * d[44] - 4 * d[21] * d[30] * d[35] * d[44] - d[20] * d[27] * d[28] * d[47] - d[19] * d[27] * d[29] * d[47] - d[18] * d[28] * d[29] * d[47] + 2 * d[21] * d[29] * d[30] * d[47] + d[20] * std::pow(d[30], 2) * d[47] + 2 * d[22] * d[28] * d[31] * d[47] - 2 * d[23] * d[30] * d[31] * d[47] + d[19] * std::pow(d[31], 2) * d[47] + 2 * d[23] * d[27] * d[32] * d[47] - 2 * d[22] * d[30] * d[32] * d[47] - 2 * d[21] * d[31] * d[32] * d[47] + d[18] * std::pow(d[32], 2) * d[47];
    coeffs[49] = 2 * d[28] * d[29] * d[33] * d[42] - 2 * std::pow(d[32], 2) * d[33] * d[42] - 2 * d[29] * d[30] * d[34] * d[42] + 2 * d[31] * d[32] * d[34] * d[42] - 2 * d[28] * d[31] * d[35] * d[42] + 2 * d[30] * d[32] * d[35] * d[42] - 2 * d[29] * d[30] * d[33] * d[43] + 2 * d[31] * d[32] * d[33] * d[43] + 2 * d[27] * d[29] * d[34] * d[43] - 2 * std::pow(d[31], 2) * d[34] * d[43] + 2 * d[30] * d[31] * d[35] * d[43] - 2 * d[27] * d[32] * d[35] * d[43] - 2 * d[28] * d[31] * d[33] * d[44] + 2 * d[30] * d[32] * d[33] * d[44] + 2 * d[30] * d[31] * d[34] * d[44] - 2 * d[27] * d[32] * d[34] * d[44] + 2 * d[27] * d[28] * d[35] * d[44] - 2 * std::pow(d[30], 2) * d[35] * d[44] - d[27] * d[28] * d[29] * d[47] + d[29] * std::pow(d[30], 2) * d[47] + d[28] * std::pow(d[31], 2) * d[47] - 2 * d[30] * d[31] * d[32] * d[47] + d[27] * std::pow(d[32], 2) * d[47];
    coeffs[50] = 2 * d[6] * d[10] * d[11] * d[42] - 2 * d[7] * d[11] * d[12] * d[42] - 2 * d[8] * d[10] * d[13] * d[42] + 2 * d[8] * d[12] * d[14] * d[42] + 2 * d[7] * d[13] * d[14] * d[42] - 2 * d[6] * std::pow(d[14], 2) * d[42] + 2 * d[2] * d[10] * d[15] * d[42] + 2 * d[1] * d[11] * d[15] * d[42] - 4 * d[5] * d[14] * d[15] * d[42] - 2 * d[3] * d[11] * d[16] * d[42] - 2 * d[2] * d[12] * d[16] * d[42] + 2 * d[5] * d[13] * d[16] * d[42] + 2 * d[4] * d[14] * d[16] * d[42] - 2 * d[4] * d[10] * d[17] * d[42] + 2 * d[5] * d[12] * d[17] * d[42] - 2 * d[1] * d[13] * d[17] * d[42] + 2 * d[3] * d[14] * d[17] * d[42] + d[10] * d[11] * std::pow(d[42], 2) - std::pow(d[14], 2) * std::pow(d[42], 2) + 2 * d[7] * d[9] * d[11] * d[43] - 2 * d[6] * d[11] * d[12] * d[43] + 2 * d[8] * d[12] * d[13] * d[43] - 2 * d[7] * std::pow(d[13], 2) * d[43] - 2 * d[8] * d[9] * d[14] * d[43] + 2 * d[6] * d[13] * d[14] * d[43] - 2 * d[3] * d[11] * d[15] * d[43] - 2 * d[2] * d[12] * d[15] * d[43] + 2 * d[5] * d[13] * d[15] * d[43] + 2 * d[4] * d[14] * d[15] * d[43] + 2 * d[2] * d[9] * d[16] * d[43] + 2 * d[0] * d[11] * d[16] * d[43] - 4 * d[4] * d[13] * d[16] * d[43] - 2 * d[5] * d[9] * d[17] * d[43] + 2 * d[4] * d[12] * d[17] * d[43] + 2 * d[3] * d[13] * d[17] * d[43] - 2 * d[0] * d[14] * d[17] * d[43] - 2 * d[11] * d[12] * d[42] * d[43] + 2 * d[13] * d[14] * d[42] * d[43] + d[9] * d[11] * std::pow(d[43], 2) - std::pow(d[13], 2) * std::pow(d[43], 2) + 2 * d[8] * d[9] * d[10] * d[44] - 2 * d[8] * std::pow(d[12], 2) * d[44] - 2 * d[6] * d[10] * d[13] * d[44] + 2 * d[7] * d[12] * d[13] * d[44] - 2 * d[7] * d[9] * d[14] * d[44] + 2 * d[6] * d[12] * d[14] * d[44] - 2 * d[4] * d[10] * d[15] * d[44] + 2 * d[5] * d[12] * d[15] * d[44] - 2 * d[1] * d[13] * d[15] * d[44] + 2 * d[3] * d[14] * d[15] * d[44] - 2 * d[5] * d[9] * d[16] * d[44] + 2 * d[4] * d[12] * d[16] * d[44] + 2 * d[3] * d[13] * d[16] * d[44] - 2 * d[0] * d[14] * d[16] * d[44] + 2 * d[1] * d[9] * d[17] * d[44] + 2 * d[0] * d[10] * d[17] * d[44] - 4 * d[3] * d[12] * d[17] * d[44] - 2 * d[10] * d[13] * d[42] * d[44] + 2 * d[12] * d[14] * d[42] * d[44] + 2 * d[12] * d[13] * d[43] * d[44] - 2 * d[9] * d[14] * d[43] * d[44] + d[9] * d[10] * std::pow(d[44], 2) - std::pow(d[12], 2) * std::pow(d[44], 2) - d[2] * d[9] * d[10] * d[47] - d[1] * d[9] * d[11] * d[47] - d[0] * d[10] * d[11] * d[47] + 2 * d[3] * d[11] * d[12] * d[47] + d[2] * std::pow(d[12], 2) * d[47] + 2 * d[4] * d[10] * d[13] * d[47] - 2 * d[5] * d[12] * d[13] * d[47] + d[1] * std::pow(d[13], 2) * d[47] + 2 * d[5] * d[9] * d[14] * d[47] - 2 * d[4] * d[12] * d[14] * d[47] - 2 * d[3] * d[13] * d[14] * d[47] + d[0] * std::pow(d[14], 2) * d[47];
    coeffs[51] = 2 * d[6] * d[11] * d[19] * d[42] - 2 * d[8] * d[13] * d[19] * d[42] + 2 * d[2] * d[15] * d[19] * d[42] - 2 * d[4] * d[17] * d[19] * d[42] + 2 * d[6] * d[10] * d[20] * d[42] - 2 * d[7] * d[12] * d[20] * d[42] + 2 * d[1] * d[15] * d[20] * d[42] - 2 * d[3] * d[16] * d[20] * d[42] - 2 * d[7] * d[11] * d[21] * d[42] + 2 * d[8] * d[14] * d[21] * d[42] - 2 * d[2] * d[16] * d[21] * d[42] + 2 * d[5] * d[17] * d[21] * d[42] - 2 * d[8] * d[10] * d[22] * d[42] + 2 * d[7] * d[14] * d[22] * d[42] + 2 * d[5] * d[16] * d[22] * d[42] - 2 * d[1] * d[17] * d[22] * d[42] + 2 * d[8] * d[12] * d[23] * d[42] + 2 * d[7] * d[13] * d[23] * d[42] - 4 * d[6] * d[14] * d[23] * d[42] - 4 * d[5] * d[15] * d[23] * d[42] + 2 * d[4] * d[16] * d[23] * d[42] + 2 * d[3] * d[17] * d[23] * d[42] + 2 * d[2] * d[10] * d[24] * d[42] + 2 * d[1] * d[11] * d[24] * d[42] - 4 * d[5] * d[14] * d[24] * d[42] - 2 * d[3] * d[11] * d[25] * d[42] - 2 * d[2] * d[12] * d[25] * d[42] + 2 * d[5] * d[13] * d[25] * d[42] + 2 * d[4] * d[14] * d[25] * d[42] - 2 * d[4] * d[10] * d[26] * d[42] + 2 * d[5] * d[12] * d[26] * d[42] - 2 * d[1] * d[13] * d[26] * d[42] + 2 * d[3] * d[14] * d[26] * d[42] + d[11] * d[19] * std::pow(d[42], 2) + d[10] * d[20] * std::pow(d[42], 2) - 2 * d[14] * d[23] * std::pow(d[42], 2) + 2 * d[7] * d[11] * d[18] * d[43] - 2 * d[8] * d[14] * d[18] * d[43] + 2 * d[2] * d[16] * d[18] * d[43] - 2 * d[5] * d[17] * d[18] * d[43] + 2 * d[7] * d[9] * d[20] * d[43] - 2 * d[6] * d[12] * d[20] * d[43] - 2 * d[3] * d[15] * d[20] * d[43] + 2 * d[0] * d[16] * d[20] * d[43] - 2 * d[6] * d[11] * d[21] * d[43] + 2 * d[8] * d[13] * d[21] * d[43] - 2 * d[2] * d[15] * d[21] * d[43] + 2 * d[4] * d[17] * d[21] * d[43] + 2 * d[8] * d[12] * d[22] * d[43] - 4 * d[7] * d[13] * d[22] * d[43] + 2 * d[6] * d[14] * d[22] * d[43] + 2 * d[5] * d[15] * d[22] * d[43] - 4 * d[4] * d[16] * d[22] * d[43] + 2 * d[3] * d[17] * d[22] * d[43] - 2 * d[8] * d[9] * d[23] * d[43] + 2 * d[6] * d[13] * d[23] * d[43] + 2 * d[4] * d[15] * d[23] * d[43] - 2 * d[0] * d[17] * d[23] * d[43] - 2 * d[3] * d[11] * d[24] * d[43] - 2 * d[2] * d[12] * d[24] * d[43] + 2 * d[5] * d[13] * d[24] * d[43] + 2 * d[4] * d[14] * d[24] * d[43] + 2 * d[2] * d[9] * d[25] * d[43] + 2 * d[0] * d[11] * d[25] * d[43] - 4 * d[4] * d[13] * d[25] * d[43] - 2 * d[5] * d[9] * d[26] * d[43] + 2 * d[4] * d[12] * d[26] * d[43] + 2 * d[3] * d[13] * d[26] * d[43] - 2 * d[0] * d[14] * d[26] * d[43] - 2 * d[12] * d[20] * d[42] * d[43] - 2 * d[11] * d[21] * d[42] * d[43] + 2 * d[14] * d[22] * d[42] * d[43] + 2 * d[13] * d[23] * d[42] * d[43] + d[11] * d[18] * std::pow(d[43], 2) + d[9] * d[20] * std::pow(d[43], 2) - 2 * d[13] * d[22] * std::pow(d[43], 2) + 2 * d[8] * d[10] * d[18] * d[44] - 2 * d[7] * d[14] * d[18] * d[44] - 2 * d[5] * d[16] * d[18] * d[44] + 2 * d[1] * d[17] * d[18] * d[44] + 2 * d[8] * d[9] * d[19] * d[44] - 2 * d[6] * d[13] * d[19] * d[44] - 2 * d[4] * d[15] * d[19] * d[44] + 2 * d[0] * d[17] * d[19] * d[44] - 4 * d[8] * d[12] * d[21] * d[44] + 2 * d[7] * d[13] * d[21] * d[44] + 2 * d[6] * d[14] * d[21] * d[44] + 2 * d[5] * d[15] * d[21] * d[44] + 2 * d[4] * d[16] * d[21] * d[44] - 4 * d[3] * d[17] * d[21] * d[44] - 2 * d[6] * d[10] * d[22] * d[44] + 2 * d[7] * d[12] * d[22] * d[44] - 2 * d[1] * d[15] * d[22] * d[44] + 2 * d[3] * d[16] * d[22] * d[44] - 2 * d[7] * d[9] * d[23] * d[44] + 2 * d[6] * d[12] * d[23] * d[44] + 2 * d[3] * d[15] * d[23] * d[44] - 2 * d[0] * d[16] * d[23] * d[44] - 2 * d[4] * d[10] * d[24] * d[44] + 2 * d[5] * d[12] * d[24] * d[44] - 2 * d[1] * d[13] * d[24] * d[44] + 2 * d[3] * d[14] * d[24] * d[44] - 2 * d[5] * d[9] * d[25] * d[44] + 2 * d[4] * d[12] * d[25] * d[44] + 2 * d[3] * d[13] * d[25] * d[44] - 2 * d[0] * d[14] * d[25] * d[44] + 2 * d[1] * d[9] * d[26] * d[44] + 2 * d[0] * d[10] * d[26] * d[44] - 4 * d[3] * d[12] * d[26] * d[44] - 2 * d[13] * d[19] * d[42] * d[44] + 2 * d[14] * d[21] * d[42] * d[44] - 2 * d[10] * d[22] * d[42] * d[44] + 2 * d[12] * d[23] * d[42] * d[44] - 2 * d[14] * d[18] * d[43] * d[44] + 2 * d[13] * d[21] * d[43] * d[44] + 2 * d[12] * d[22] * d[43] * d[44] - 2 * d[9] * d[23] * d[43] * d[44] + d[10] * d[18] * std::pow(d[44], 2) + d[9] * d[19] * std::pow(d[44], 2) - 2 * d[12] * d[21] * std::pow(d[44], 2) - d[2] * d[10] * d[18] * d[47] - d[1] * d[11] * d[18] * d[47] + 2 * d[5] * d[14] * d[18] * d[47] - d[2] * d[9] * d[19] * d[47] - d[0] * d[11] * d[19] * d[47] + 2 * d[4] * d[13] * d[19] * d[47] - d[1] * d[9] * d[20] * d[47] - d[0] * d[10] * d[20] * d[47] + 2 * d[3] * d[12] * d[20] * d[47] + 2 * d[3] * d[11] * d[21] * d[47] + 2 * d[2] * d[12] * d[21] * d[47] - 2 * d[5] * d[13] * d[21] * d[47] - 2 * d[4] * d[14] * d[21] * d[47] + 2 * d[4] * d[10] * d[22] * d[47] - 2 * d[5] * d[12] * d[22] * d[47] + 2 * d[1] * d[13] * d[22] * d[47] - 2 * d[3] * d[14] * d[22] * d[47] + 2 * d[5] * d[9] * d[23] * d[47] - 2 * d[4] * d[12] * d[23] * d[47] - 2 * d[3] * d[13] * d[23] * d[47] + 2 * d[0] * d[14] * d[23] * d[47];
    coeffs[52] = 2 * d[6] * d[19] * d[20] * d[42] - 2 * d[7] * d[20] * d[21] * d[42] - 2 * d[8] * d[19] * d[22] * d[42] + 2 * d[8] * d[21] * d[23] * d[42] + 2 * d[7] * d[22] * d[23] * d[42] - 2 * d[6] * std::pow(d[23], 2) * d[42] + 2 * d[2] * d[19] * d[24] * d[42] + 2 * d[1] * d[20] * d[24] * d[42] - 4 * d[5] * d[23] * d[24] * d[42] - 2 * d[3] * d[20] * d[25] * d[42] - 2 * d[2] * d[21] * d[25] * d[42] + 2 * d[5] * d[22] * d[25] * d[42] + 2 * d[4] * d[23] * d[25] * d[42] - 2 * d[4] * d[19] * d[26] * d[42] + 2 * d[5] * d[21] * d[26] * d[42] - 2 * d[1] * d[22] * d[26] * d[42] + 2 * d[3] * d[23] * d[26] * d[42] + d[19] * d[20] * std::pow(d[42], 2) - std::pow(d[23], 2) * std::pow(d[42], 2) + 2 * d[7] * d[18] * d[20] * d[43] - 2 * d[6] * d[20] * d[21] * d[43] + 2 * d[8] * d[21] * d[22] * d[43] - 2 * d[7] * std::pow(d[22], 2) * d[43] - 2 * d[8] * d[18] * d[23] * d[43] + 2 * d[6] * d[22] * d[23] * d[43] - 2 * d[3] * d[20] * d[24] * d[43] - 2 * d[2] * d[21] * d[24] * d[43] + 2 * d[5] * d[22] * d[24] * d[43] + 2 * d[4] * d[23] * d[24] * d[43] + 2 * d[2] * d[18] * d[25] * d[43] + 2 * d[0] * d[20] * d[25] * d[43] - 4 * d[4] * d[22] * d[25] * d[43] - 2 * d[5] * d[18] * d[26] * d[43] + 2 * d[4] * d[21] * d[26] * d[43] + 2 * d[3] * d[22] * d[26] * d[43] - 2 * d[0] * d[23] * d[26] * d[43] - 2 * d[20] * d[21] * d[42] * d[43] + 2 * d[22] * d[23] * d[42] * d[43] + d[18] * d[20] * std::pow(d[43], 2) - std::pow(d[22], 2) * std::pow(d[43], 2) + 2 * d[8] * d[18] * d[19] * d[44] - 2 * d[8] * std::pow(d[21], 2) * d[44] - 2 * d[6] * d[19] * d[22] * d[44] + 2 * d[7] * d[21] * d[22] * d[44] - 2 * d[7] * d[18] * d[23] * d[44] + 2 * d[6] * d[21] * d[23] * d[44] - 2 * d[4] * d[19] * d[24] * d[44] + 2 * d[5] * d[21] * d[24] * d[44] - 2 * d[1] * d[22] * d[24] * d[44] + 2 * d[3] * d[23] * d[24] * d[44] - 2 * d[5] * d[18] * d[25] * d[44] + 2 * d[4] * d[21] * d[25] * d[44] + 2 * d[3] * d[22] * d[25] * d[44] - 2 * d[0] * d[23] * d[25] * d[44] + 2 * d[1] * d[18] * d[26] * d[44] + 2 * d[0] * d[19] * d[26] * d[44] - 4 * d[3] * d[21] * d[26] * d[44] - 2 * d[19] * d[22] * d[42] * d[44] + 2 * d[21] * d[23] * d[42] * d[44] + 2 * d[21] * d[22] * d[43] * d[44] - 2 * d[18] * d[23] * d[43] * d[44] + d[18] * d[19] * std::pow(d[44], 2) - std::pow(d[21], 2) * std::pow(d[44], 2) - d[2] * d[18] * d[19] * d[47] - d[1] * d[18] * d[20] * d[47] - d[0] * d[19] * d[20] * d[47] + 2 * d[3] * d[20] * d[21] * d[47] + d[2] * std::pow(d[21], 2) * d[47] + 2 * d[4] * d[19] * d[22] * d[47] - 2 * d[5] * d[21] * d[22] * d[47] + d[1] * std::pow(d[22], 2) * d[47] + 2 * d[5] * d[18] * d[23] * d[47] - 2 * d[4] * d[21] * d[23] * d[47] - 2 * d[3] * d[22] * d[23] * d[47] + d[0] * std::pow(d[23], 2) * d[47];
    coeffs[53] = 2 * d[6] * d[11] * d[28] * d[42] - 2 * d[8] * d[13] * d[28] * d[42] + 2 * d[2] * d[15] * d[28] * d[42] - 2 * d[4] * d[17] * d[28] * d[42] + 2 * d[6] * d[10] * d[29] * d[42] - 2 * d[7] * d[12] * d[29] * d[42] + 2 * d[1] * d[15] * d[29] * d[42] - 2 * d[3] * d[16] * d[29] * d[42] - 2 * d[7] * d[11] * d[30] * d[42] + 2 * d[8] * d[14] * d[30] * d[42] - 2 * d[2] * d[16] * d[30] * d[42] + 2 * d[5] * d[17] * d[30] * d[42] - 2 * d[8] * d[10] * d[31] * d[42] + 2 * d[7] * d[14] * d[31] * d[42] + 2 * d[5] * d[16] * d[31] * d[42] - 2 * d[1] * d[17] * d[31] * d[42] + 2 * d[8] * d[12] * d[32] * d[42] + 2 * d[7] * d[13] * d[32] * d[42] - 4 * d[6] * d[14] * d[32] * d[42] - 4 * d[5] * d[15] * d[32] * d[42] + 2 * d[4] * d[16] * d[32] * d[42] + 2 * d[3] * d[17] * d[32] * d[42] + 2 * d[2] * d[10] * d[33] * d[42] + 2 * d[1] * d[11] * d[33] * d[42] - 4 * d[5] * d[14] * d[33] * d[42] - 2 * d[3] * d[11] * d[34] * d[42] - 2 * d[2] * d[12] * d[34] * d[42] + 2 * d[5] * d[13] * d[34] * d[42] + 2 * d[4] * d[14] * d[34] * d[42] - 2 * d[4] * d[10] * d[35] * d[42] + 2 * d[5] * d[12] * d[35] * d[42] - 2 * d[1] * d[13] * d[35] * d[42] + 2 * d[3] * d[14] * d[35] * d[42] + d[11] * d[28] * std::pow(d[42], 2) + d[10] * d[29] * std::pow(d[42], 2) - 2 * d[14] * d[32] * std::pow(d[42], 2) + 2 * d[7] * d[11] * d[27] * d[43] - 2 * d[8] * d[14] * d[27] * d[43] + 2 * d[2] * d[16] * d[27] * d[43] - 2 * d[5] * d[17] * d[27] * d[43] + 2 * d[7] * d[9] * d[29] * d[43] - 2 * d[6] * d[12] * d[29] * d[43] - 2 * d[3] * d[15] * d[29] * d[43] + 2 * d[0] * d[16] * d[29] * d[43] - 2 * d[6] * d[11] * d[30] * d[43] + 2 * d[8] * d[13] * d[30] * d[43] - 2 * d[2] * d[15] * d[30] * d[43] + 2 * d[4] * d[17] * d[30] * d[43] + 2 * d[8] * d[12] * d[31] * d[43] - 4 * d[7] * d[13] * d[31] * d[43] + 2 * d[6] * d[14] * d[31] * d[43] + 2 * d[5] * d[15] * d[31] * d[43] - 4 * d[4] * d[16] * d[31] * d[43] + 2 * d[3] * d[17] * d[31] * d[43] - 2 * d[8] * d[9] * d[32] * d[43] + 2 * d[6] * d[13] * d[32] * d[43] + 2 * d[4] * d[15] * d[32] * d[43] - 2 * d[0] * d[17] * d[32] * d[43] - 2 * d[3] * d[11] * d[33] * d[43] - 2 * d[2] * d[12] * d[33] * d[43] + 2 * d[5] * d[13] * d[33] * d[43] + 2 * d[4] * d[14] * d[33] * d[43] + 2 * d[2] * d[9] * d[34] * d[43] + 2 * d[0] * d[11] * d[34] * d[43] - 4 * d[4] * d[13] * d[34] * d[43] - 2 * d[5] * d[9] * d[35] * d[43] + 2 * d[4] * d[12] * d[35] * d[43] + 2 * d[3] * d[13] * d[35] * d[43] - 2 * d[0] * d[14] * d[35] * d[43] - 2 * d[12] * d[29] * d[42] * d[43] - 2 * d[11] * d[30] * d[42] * d[43] + 2 * d[14] * d[31] * d[42] * d[43] + 2 * d[13] * d[32] * d[42] * d[43] + d[11] * d[27] * std::pow(d[43], 2) + d[9] * d[29] * std::pow(d[43], 2) - 2 * d[13] * d[31] * std::pow(d[43], 2) + 2 * d[8] * d[10] * d[27] * d[44] - 2 * d[7] * d[14] * d[27] * d[44] - 2 * d[5] * d[16] * d[27] * d[44] + 2 * d[1] * d[17] * d[27] * d[44] + 2 * d[8] * d[9] * d[28] * d[44] - 2 * d[6] * d[13] * d[28] * d[44] - 2 * d[4] * d[15] * d[28] * d[44] + 2 * d[0] * d[17] * d[28] * d[44] - 4 * d[8] * d[12] * d[30] * d[44] + 2 * d[7] * d[13] * d[30] * d[44] + 2 * d[6] * d[14] * d[30] * d[44] + 2 * d[5] * d[15] * d[30] * d[44] + 2 * d[4] * d[16] * d[30] * d[44] - 4 * d[3] * d[17] * d[30] * d[44] - 2 * d[6] * d[10] * d[31] * d[44] + 2 * d[7] * d[12] * d[31] * d[44] - 2 * d[1] * d[15] * d[31] * d[44] + 2 * d[3] * d[16] * d[31] * d[44] - 2 * d[7] * d[9] * d[32] * d[44] + 2 * d[6] * d[12] * d[32] * d[44] + 2 * d[3] * d[15] * d[32] * d[44] - 2 * d[0] * d[16] * d[32] * d[44] - 2 * d[4] * d[10] * d[33] * d[44] + 2 * d[5] * d[12] * d[33] * d[44] - 2 * d[1] * d[13] * d[33] * d[44] + 2 * d[3] * d[14] * d[33] * d[44] - 2 * d[5] * d[9] * d[34] * d[44] + 2 * d[4] * d[12] * d[34] * d[44] + 2 * d[3] * d[13] * d[34] * d[44] - 2 * d[0] * d[14] * d[34] * d[44] + 2 * d[1] * d[9] * d[35] * d[44] + 2 * d[0] * d[10] * d[35] * d[44] - 4 * d[3] * d[12] * d[35] * d[44] - 2 * d[13] * d[28] * d[42] * d[44] + 2 * d[14] * d[30] * d[42] * d[44] - 2 * d[10] * d[31] * d[42] * d[44] + 2 * d[12] * d[32] * d[42] * d[44] - 2 * d[14] * d[27] * d[43] * d[44] + 2 * d[13] * d[30] * d[43] * d[44] + 2 * d[12] * d[31] * d[43] * d[44] - 2 * d[9] * d[32] * d[43] * d[44] + d[10] * d[27] * std::pow(d[44], 2) + d[9] * d[28] * std::pow(d[44], 2) - 2 * d[12] * d[30] * std::pow(d[44], 2) - d[2] * d[10] * d[27] * d[47] - d[1] * d[11] * d[27] * d[47] + 2 * d[5] * d[14] * d[27] * d[47] - d[2] * d[9] * d[28] * d[47] - d[0] * d[11] * d[28] * d[47] + 2 * d[4] * d[13] * d[28] * d[47] - d[1] * d[9] * d[29] * d[47] - d[0] * d[10] * d[29] * d[47] + 2 * d[3] * d[12] * d[29] * d[47] + 2 * d[3] * d[11] * d[30] * d[47] + 2 * d[2] * d[12] * d[30] * d[47] - 2 * d[5] * d[13] * d[30] * d[47] - 2 * d[4] * d[14] * d[30] * d[47] + 2 * d[4] * d[10] * d[31] * d[47] - 2 * d[5] * d[12] * d[31] * d[47] + 2 * d[1] * d[13] * d[31] * d[47] - 2 * d[3] * d[14] * d[31] * d[47] + 2 * d[5] * d[9] * d[32] * d[47] - 2 * d[4] * d[12] * d[32] * d[47] - 2 * d[3] * d[13] * d[32] * d[47] + 2 * d[0] * d[14] * d[32] * d[47];
    coeffs[54] = 2 * d[6] * d[20] * d[28] * d[42] - 2 * d[8] * d[22] * d[28] * d[42] + 2 * d[2] * d[24] * d[28] * d[42] - 2 * d[4] * d[26] * d[28] * d[42] + 2 * d[6] * d[19] * d[29] * d[42] - 2 * d[7] * d[21] * d[29] * d[42] + 2 * d[1] * d[24] * d[29] * d[42] - 2 * d[3] * d[25] * d[29] * d[42] - 2 * d[7] * d[20] * d[30] * d[42] + 2 * d[8] * d[23] * d[30] * d[42] - 2 * d[2] * d[25] * d[30] * d[42] + 2 * d[5] * d[26] * d[30] * d[42] - 2 * d[8] * d[19] * d[31] * d[42] + 2 * d[7] * d[23] * d[31] * d[42] + 2 * d[5] * d[25] * d[31] * d[42] - 2 * d[1] * d[26] * d[31] * d[42] + 2 * d[8] * d[21] * d[32] * d[42] + 2 * d[7] * d[22] * d[32] * d[42] - 4 * d[6] * d[23] * d[32] * d[42] - 4 * d[5] * d[24] * d[32] * d[42] + 2 * d[4] * d[25] * d[32] * d[42] + 2 * d[3] * d[26] * d[32] * d[42] + 2 * d[2] * d[19] * d[33] * d[42] + 2 * d[1] * d[20] * d[33] * d[42] - 4 * d[5] * d[23] * d[33] * d[42] - 2 * d[3] * d[20] * d[34] * d[42] - 2 * d[2] * d[21] * d[34] * d[42] + 2 * d[5] * d[22] * d[34] * d[42] + 2 * d[4] * d[23] * d[34] * d[42] - 2 * d[4] * d[19] * d[35] * d[42] + 2 * d[5] * d[21] * d[35] * d[42] - 2 * d[1] * d[22] * d[35] * d[42] + 2 * d[3] * d[23] * d[35] * d[42] + d[20] * d[28] * std::pow(d[42], 2) + d[19] * d[29] * std::pow(d[42], 2) - 2 * d[23] * d[32] * std::pow(d[42], 2) + 2 * d[7] * d[20] * d[27] * d[43] - 2 * d[8] * d[23] * d[27] * d[43] + 2 * d[2] * d[25] * d[27] * d[43] - 2 * d[5] * d[26] * d[27] * d[43] + 2 * d[7] * d[18] * d[29] * d[43] - 2 * d[6] * d[21] * d[29] * d[43] - 2 * d[3] * d[24] * d[29] * d[43] + 2 * d[0] * d[25] * d[29] * d[43] - 2 * d[6] * d[20] * d[30] * d[43] + 2 * d[8] * d[22] * d[30] * d[43] - 2 * d[2] * d[24] * d[30] * d[43] + 2 * d[4] * d[26] * d[30] * d[43] + 2 * d[8] * d[21] * d[31] * d[43] - 4 * d[7] * d[22] * d[31] * d[43] + 2 * d[6] * d[23] * d[31] * d[43] + 2 * d[5] * d[24] * d[31] * d[43] - 4 * d[4] * d[25] * d[31] * d[43] + 2 * d[3] * d[26] * d[31] * d[43] - 2 * d[8] * d[18] * d[32] * d[43] + 2 * d[6] * d[22] * d[32] * d[43] + 2 * d[4] * d[24] * d[32] * d[43] - 2 * d[0] * d[26] * d[32] * d[43] - 2 * d[3] * d[20] * d[33] * d[43] - 2 * d[2] * d[21] * d[33] * d[43] + 2 * d[5] * d[22] * d[33] * d[43] + 2 * d[4] * d[23] * d[33] * d[43] + 2 * d[2] * d[18] * d[34] * d[43] + 2 * d[0] * d[20] * d[34] * d[43] - 4 * d[4] * d[22] * d[34] * d[43] - 2 * d[5] * d[18] * d[35] * d[43] + 2 * d[4] * d[21] * d[35] * d[43] + 2 * d[3] * d[22] * d[35] * d[43] - 2 * d[0] * d[23] * d[35] * d[43] - 2 * d[21] * d[29] * d[42] * d[43] - 2 * d[20] * d[30] * d[42] * d[43] + 2 * d[23] * d[31] * d[42] * d[43] + 2 * d[22] * d[32] * d[42] * d[43] + d[20] * d[27] * std::pow(d[43], 2) + d[18] * d[29] * std::pow(d[43], 2) - 2 * d[22] * d[31] * std::pow(d[43], 2) + 2 * d[8] * d[19] * d[27] * d[44] - 2 * d[7] * d[23] * d[27] * d[44] - 2 * d[5] * d[25] * d[27] * d[44] + 2 * d[1] * d[26] * d[27] * d[44] + 2 * d[8] * d[18] * d[28] * d[44] - 2 * d[6] * d[22] * d[28] * d[44] - 2 * d[4] * d[24] * d[28] * d[44] + 2 * d[0] * d[26] * d[28] * d[44] - 4 * d[8] * d[21] * d[30] * d[44] + 2 * d[7] * d[22] * d[30] * d[44] + 2 * d[6] * d[23] * d[30] * d[44] + 2 * d[5] * d[24] * d[30] * d[44] + 2 * d[4] * d[25] * d[30] * d[44] - 4 * d[3] * d[26] * d[30] * d[44] - 2 * d[6] * d[19] * d[31] * d[44] + 2 * d[7] * d[21] * d[31] * d[44] - 2 * d[1] * d[24] * d[31] * d[44] + 2 * d[3] * d[25] * d[31] * d[44] - 2 * d[7] * d[18] * d[32] * d[44] + 2 * d[6] * d[21] * d[32] * d[44] + 2 * d[3] * d[24] * d[32] * d[44] - 2 * d[0] * d[25] * d[32] * d[44] - 2 * d[4] * d[19] * d[33] * d[44] + 2 * d[5] * d[21] * d[33] * d[44] - 2 * d[1] * d[22] * d[33] * d[44] + 2 * d[3] * d[23] * d[33] * d[44] - 2 * d[5] * d[18] * d[34] * d[44] + 2 * d[4] * d[21] * d[34] * d[44] + 2 * d[3] * d[22] * d[34] * d[44] - 2 * d[0] * d[23] * d[34] * d[44] + 2 * d[1] * d[18] * d[35] * d[44] + 2 * d[0] * d[19] * d[35] * d[44] - 4 * d[3] * d[21] * d[35] * d[44] - 2 * d[22] * d[28] * d[42] * d[44] + 2 * d[23] * d[30] * d[42] * d[44] - 2 * d[19] * d[31] * d[42] * d[44] + 2 * d[21] * d[32] * d[42] * d[44] - 2 * d[23] * d[27] * d[43] * d[44] + 2 * d[22] * d[30] * d[43] * d[44] + 2 * d[21] * d[31] * d[43] * d[44] - 2 * d[18] * d[32] * d[43] * d[44] + d[19] * d[27] * std::pow(d[44], 2) + d[18] * d[28] * std::pow(d[44], 2) - 2 * d[21] * d[30] * std::pow(d[44], 2) - d[2] * d[19] * d[27] * d[47] - d[1] * d[20] * d[27] * d[47] + 2 * d[5] * d[23] * d[27] * d[47] - d[2] * d[18] * d[28] * d[47] - d[0] * d[20] * d[28] * d[47] + 2 * d[4] * d[22] * d[28] * d[47] - d[1] * d[18] * d[29] * d[47] - d[0] * d[19] * d[29] * d[47] + 2 * d[3] * d[21] * d[29] * d[47] + 2 * d[3] * d[20] * d[30] * d[47] + 2 * d[2] * d[21] * d[30] * d[47] - 2 * d[5] * d[22] * d[30] * d[47] - 2 * d[4] * d[23] * d[30] * d[47] + 2 * d[4] * d[19] * d[31] * d[47] - 2 * d[5] * d[21] * d[31] * d[47] + 2 * d[1] * d[22] * d[31] * d[47] - 2 * d[3] * d[23] * d[31] * d[47] + 2 * d[5] * d[18] * d[32] * d[47] - 2 * d[4] * d[21] * d[32] * d[47] - 2 * d[3] * d[22] * d[32] * d[47] + 2 * d[0] * d[23] * d[32] * d[47];
    coeffs[55] = 2 * d[6] * d[28] * d[29] * d[42] - 2 * d[7] * d[29] * d[30] * d[42] - 2 * d[8] * d[28] * d[31] * d[42] + 2 * d[8] * d[30] * d[32] * d[42] + 2 * d[7] * d[31] * d[32] * d[42] - 2 * d[6] * std::pow(d[32], 2) * d[42] + 2 * d[2] * d[28] * d[33] * d[42] + 2 * d[1] * d[29] * d[33] * d[42] - 4 * d[5] * d[32] * d[33] * d[42] - 2 * d[3] * d[29] * d[34] * d[42] - 2 * d[2] * d[30] * d[34] * d[42] + 2 * d[5] * d[31] * d[34] * d[42] + 2 * d[4] * d[32] * d[34] * d[42] - 2 * d[4] * d[28] * d[35] * d[42] + 2 * d[5] * d[30] * d[35] * d[42] - 2 * d[1] * d[31] * d[35] * d[42] + 2 * d[3] * d[32] * d[35] * d[42] + d[28] * d[29] * std::pow(d[42], 2) - std::pow(d[32], 2) * std::pow(d[42], 2) + 2 * d[7] * d[27] * d[29] * d[43] - 2 * d[6] * d[29] * d[30] * d[43] + 2 * d[8] * d[30] * d[31] * d[43] - 2 * d[7] * std::pow(d[31], 2) * d[43] - 2 * d[8] * d[27] * d[32] * d[43] + 2 * d[6] * d[31] * d[32] * d[43] - 2 * d[3] * d[29] * d[33] * d[43] - 2 * d[2] * d[30] * d[33] * d[43] + 2 * d[5] * d[31] * d[33] * d[43] + 2 * d[4] * d[32] * d[33] * d[43] + 2 * d[2] * d[27] * d[34] * d[43] + 2 * d[0] * d[29] * d[34] * d[43] - 4 * d[4] * d[31] * d[34] * d[43] - 2 * d[5] * d[27] * d[35] * d[43] + 2 * d[4] * d[30] * d[35] * d[43] + 2 * d[3] * d[31] * d[35] * d[43] - 2 * d[0] * d[32] * d[35] * d[43] - 2 * d[29] * d[30] * d[42] * d[43] + 2 * d[31] * d[32] * d[42] * d[43] + d[27] * d[29] * std::pow(d[43], 2) - std::pow(d[31], 2) * std::pow(d[43], 2) + 2 * d[8] * d[27] * d[28] * d[44] - 2 * d[8] * std::pow(d[30], 2) * d[44] - 2 * d[6] * d[28] * d[31] * d[44] + 2 * d[7] * d[30] * d[31] * d[44] - 2 * d[7] * d[27] * d[32] * d[44] + 2 * d[6] * d[30] * d[32] * d[44] - 2 * d[4] * d[28] * d[33] * d[44] + 2 * d[5] * d[30] * d[33] * d[44] - 2 * d[1] * d[31] * d[33] * d[44] + 2 * d[3] * d[32] * d[33] * d[44] - 2 * d[5] * d[27] * d[34] * d[44] + 2 * d[4] * d[30] * d[34] * d[44] + 2 * d[3] * d[31] * d[34] * d[44] - 2 * d[0] * d[32] * d[34] * d[44] + 2 * d[1] * d[27] * d[35] * d[44] + 2 * d[0] * d[28] * d[35] * d[44] - 4 * d[3] * d[30] * d[35] * d[44] - 2 * d[28] * d[31] * d[42] * d[44] + 2 * d[30] * d[32] * d[42] * d[44] + 2 * d[30] * d[31] * d[43] * d[44] - 2 * d[27] * d[32] * d[43] * d[44] + d[27] * d[28] * std::pow(d[44], 2) - std::pow(d[30], 2) * std::pow(d[44], 2) - d[2] * d[27] * d[28] * d[47] - d[1] * d[27] * d[29] * d[47] - d[0] * d[28] * d[29] * d[47] + 2 * d[3] * d[29] * d[30] * d[47] + d[2] * std::pow(d[30], 2) * d[47] + 2 * d[4] * d[28] * d[31] * d[47] - 2 * d[5] * d[30] * d[31] * d[47] + d[1] * std::pow(d[31], 2) * d[47] + 2 * d[5] * d[27] * d[32] * d[47] - 2 * d[4] * d[30] * d[32] * d[47] - 2 * d[3] * d[31] * d[32] * d[47] + d[0] * std::pow(d[32], 2) * d[47];
    coeffs[56] = 2 * d[2] * d[6] * d[10] * d[42] - 2 * d[4] * d[8] * d[10] * d[42] + 2 * d[1] * d[6] * d[11] * d[42] - 2 * d[3] * d[7] * d[11] * d[42] - 2 * d[2] * d[7] * d[12] * d[42] + 2 * d[5] * d[8] * d[12] * d[42] + 2 * d[5] * d[7] * d[13] * d[42] - 2 * d[1] * d[8] * d[13] * d[42] - 4 * d[5] * d[6] * d[14] * d[42] + 2 * d[4] * d[7] * d[14] * d[42] + 2 * d[3] * d[8] * d[14] * d[42] + 2 * d[1] * d[2] * d[15] * d[42] - 2 * std::pow(d[5], 2) * d[15] * d[42] - 2 * d[2] * d[3] * d[16] * d[42] + 2 * d[4] * d[5] * d[16] * d[42] - 2 * d[1] * d[4] * d[17] * d[42] + 2 * d[3] * d[5] * d[17] * d[42] + d[2] * d[10] * std::pow(d[42], 2) + d[1] * d[11] * std::pow(d[42], 2) - 2 * d[5] * d[14] * std::pow(d[42], 2) + 2 * d[2] * d[7] * d[9] * d[43] - 2 * d[5] * d[8] * d[9] * d[43] - 2 * d[3] * d[6] * d[11] * d[43] + 2 * d[0] * d[7] * d[11] * d[43] - 2 * d[2] * d[6] * d[12] * d[43] + 2 * d[4] * d[8] * d[12] * d[43] + 2 * d[5] * d[6] * d[13] * d[43] - 4 * d[4] * d[7] * d[13] * d[43] + 2 * d[3] * d[8] * d[13] * d[43] + 2 * d[4] * d[6] * d[14] * d[43] - 2 * d[0] * d[8] * d[14] * d[43] - 2 * d[2] * d[3] * d[15] * d[43] + 2 * d[4] * d[5] * d[15] * d[43] + 2 * d[0] * d[2] * d[16] * d[43] - 2 * std::pow(d[4], 2) * d[16] * d[43] + 2 * d[3] * d[4] * d[17] * d[43] - 2 * d[0] * d[5] * d[17] * d[43] - 2 * d[3] * d[11] * d[42] * d[43] - 2 * d[2] * d[12] * d[42] * d[43] + 2 * d[5] * d[13] * d[42] * d[43] + 2 * d[4] * d[14] * d[42] * d[43] + d[2] * d[9] * std::pow(d[43], 2) + d[0] * d[11] * std::pow(d[43], 2) - 2 * d[4] * d[13] * std::pow(d[43], 2) - 2 * d[5] * d[7] * d[9] * d[44] + 2 * d[1] * d[8] * d[9] * d[44] - 2 * d[4] * d[6] * d[10] * d[44] + 2 * d[0] * d[8] * d[10] * d[44] + 2 * d[5] * d[6] * d[12] * d[44] + 2 * d[4] * d[7] * d[12] * d[44] - 4 * d[3] * d[8] * d[12] * d[44] - 2 * d[1] * d[6] * d[13] * d[44] + 2 * d[3] * d[7] * d[13] * d[44] + 2 * d[3] * d[6] * d[14] * d[44] - 2 * d[0] * d[7] * d[14] * d[44] - 2 * d[1] * d[4] * d[15] * d[44] + 2 * d[3] * d[5] * d[15] * d[44] + 2 * d[3] * d[4] * d[16] * d[44] - 2 * d[0] * d[5] * d[16] * d[44] + 2 * d[0] * d[1] * d[17] * d[44] - 2 * std::pow(d[3], 2) * d[17] * d[44] - 2 * d[4] * d[10] * d[42] * d[44] + 2 * d[5] * d[12] * d[42] * d[44] - 2 * d[1] * d[13] * d[42] * d[44] + 2 * d[3] * d[14] * d[42] * d[44] - 2 * d[5] * d[9] * d[43] * d[44] + 2 * d[4] * d[12] * d[43] * d[44] + 2 * d[3] * d[13] * d[43] * d[44] - 2 * d[0] * d[14] * d[43] * d[44] + d[1] * d[9] * std::pow(d[44], 2) + d[0] * d[10] * std::pow(d[44], 2) - 2 * d[3] * d[12] * std::pow(d[44], 2) - d[1] * d[2] * d[9] * d[47] + std::pow(d[5], 2) * d[9] * d[47] - d[0] * d[2] * d[10] * d[47] + std::pow(d[4], 2) * d[10] * d[47] - d[0] * d[1] * d[11] * d[47] + std::pow(d[3], 2) * d[11] * d[47] + 2 * d[2] * d[3] * d[12] * d[47] - 2 * d[4] * d[5] * d[12] * d[47] + 2 * d[1] * d[4] * d[13] * d[47] - 2 * d[3] * d[5] * d[13] * d[47] - 2 * d[3] * d[4] * d[14] * d[47] + 2 * d[0] * d[5] * d[14] * d[47];
    coeffs[57] = 2 * d[2] * d[6] * d[19] * d[42] - 2 * d[4] * d[8] * d[19] * d[42] + 2 * d[1] * d[6] * d[20] * d[42] - 2 * d[3] * d[7] * d[20] * d[42] - 2 * d[2] * d[7] * d[21] * d[42] + 2 * d[5] * d[8] * d[21] * d[42] + 2 * d[5] * d[7] * d[22] * d[42] - 2 * d[1] * d[8] * d[22] * d[42] - 4 * d[5] * d[6] * d[23] * d[42] + 2 * d[4] * d[7] * d[23] * d[42] + 2 * d[3] * d[8] * d[23] * d[42] + 2 * d[1] * d[2] * d[24] * d[42] - 2 * std::pow(d[5], 2) * d[24] * d[42] - 2 * d[2] * d[3] * d[25] * d[42] + 2 * d[4] * d[5] * d[25] * d[42] - 2 * d[1] * d[4] * d[26] * d[42] + 2 * d[3] * d[5] * d[26] * d[42] + d[2] * d[19] * std::pow(d[42], 2) + d[1] * d[20] * std::pow(d[42], 2) - 2 * d[5] * d[23] * std::pow(d[42], 2) + 2 * d[2] * d[7] * d[18] * d[43] - 2 * d[5] * d[8] * d[18] * d[43] - 2 * d[3] * d[6] * d[20] * d[43] + 2 * d[0] * d[7] * d[20] * d[43] - 2 * d[2] * d[6] * d[21] * d[43] + 2 * d[4] * d[8] * d[21] * d[43] + 2 * d[5] * d[6] * d[22] * d[43] - 4 * d[4] * d[7] * d[22] * d[43] + 2 * d[3] * d[8] * d[22] * d[43] + 2 * d[4] * d[6] * d[23] * d[43] - 2 * d[0] * d[8] * d[23] * d[43] - 2 * d[2] * d[3] * d[24] * d[43] + 2 * d[4] * d[5] * d[24] * d[43] + 2 * d[0] * d[2] * d[25] * d[43] - 2 * std::pow(d[4], 2) * d[25] * d[43] + 2 * d[3] * d[4] * d[26] * d[43] - 2 * d[0] * d[5] * d[26] * d[43] - 2 * d[3] * d[20] * d[42] * d[43] - 2 * d[2] * d[21] * d[42] * d[43] + 2 * d[5] * d[22] * d[42] * d[43] + 2 * d[4] * d[23] * d[42] * d[43] + d[2] * d[18] * std::pow(d[43], 2) + d[0] * d[20] * std::pow(d[43], 2) - 2 * d[4] * d[22] * std::pow(d[43], 2) - 2 * d[5] * d[7] * d[18] * d[44] + 2 * d[1] * d[8] * d[18] * d[44] - 2 * d[4] * d[6] * d[19] * d[44] + 2 * d[0] * d[8] * d[19] * d[44] + 2 * d[5] * d[6] * d[21] * d[44] + 2 * d[4] * d[7] * d[21] * d[44] - 4 * d[3] * d[8] * d[21] * d[44] - 2 * d[1] * d[6] * d[22] * d[44] + 2 * d[3] * d[7] * d[22] * d[44] + 2 * d[3] * d[6] * d[23] * d[44] - 2 * d[0] * d[7] * d[23] * d[44] - 2 * d[1] * d[4] * d[24] * d[44] + 2 * d[3] * d[5] * d[24] * d[44] + 2 * d[3] * d[4] * d[25] * d[44] - 2 * d[0] * d[5] * d[25] * d[44] + 2 * d[0] * d[1] * d[26] * d[44] - 2 * std::pow(d[3], 2) * d[26] * d[44] - 2 * d[4] * d[19] * d[42] * d[44] + 2 * d[5] * d[21] * d[42] * d[44] - 2 * d[1] * d[22] * d[42] * d[44] + 2 * d[3] * d[23] * d[42] * d[44] - 2 * d[5] * d[18] * d[43] * d[44] + 2 * d[4] * d[21] * d[43] * d[44] + 2 * d[3] * d[22] * d[43] * d[44] - 2 * d[0] * d[23] * d[43] * d[44] + d[1] * d[18] * std::pow(d[44], 2) + d[0] * d[19] * std::pow(d[44], 2) - 2 * d[3] * d[21] * std::pow(d[44], 2) - d[1] * d[2] * d[18] * d[47] + std::pow(d[5], 2) * d[18] * d[47] - d[0] * d[2] * d[19] * d[47] + std::pow(d[4], 2) * d[19] * d[47] - d[0] * d[1] * d[20] * d[47] + std::pow(d[3], 2) * d[20] * d[47] + 2 * d[2] * d[3] * d[21] * d[47] - 2 * d[4] * d[5] * d[21] * d[47] + 2 * d[1] * d[4] * d[22] * d[47] - 2 * d[3] * d[5] * d[22] * d[47] - 2 * d[3] * d[4] * d[23] * d[47] + 2 * d[0] * d[5] * d[23] * d[47];
    coeffs[58] = 2 * d[2] * d[6] * d[28] * d[42] - 2 * d[4] * d[8] * d[28] * d[42] + 2 * d[1] * d[6] * d[29] * d[42] - 2 * d[3] * d[7] * d[29] * d[42] - 2 * d[2] * d[7] * d[30] * d[42] + 2 * d[5] * d[8] * d[30] * d[42] + 2 * d[5] * d[7] * d[31] * d[42] - 2 * d[1] * d[8] * d[31] * d[42] - 4 * d[5] * d[6] * d[32] * d[42] + 2 * d[4] * d[7] * d[32] * d[42] + 2 * d[3] * d[8] * d[32] * d[42] + 2 * d[1] * d[2] * d[33] * d[42] - 2 * std::pow(d[5], 2) * d[33] * d[42] - 2 * d[2] * d[3] * d[34] * d[42] + 2 * d[4] * d[5] * d[34] * d[42] - 2 * d[1] * d[4] * d[35] * d[42] + 2 * d[3] * d[5] * d[35] * d[42] + d[2] * d[28] * std::pow(d[42], 2) + d[1] * d[29] * std::pow(d[42], 2) - 2 * d[5] * d[32] * std::pow(d[42], 2) + 2 * d[2] * d[7] * d[27] * d[43] - 2 * d[5] * d[8] * d[27] * d[43] - 2 * d[3] * d[6] * d[29] * d[43] + 2 * d[0] * d[7] * d[29] * d[43] - 2 * d[2] * d[6] * d[30] * d[43] + 2 * d[4] * d[8] * d[30] * d[43] + 2 * d[5] * d[6] * d[31] * d[43] - 4 * d[4] * d[7] * d[31] * d[43] + 2 * d[3] * d[8] * d[31] * d[43] + 2 * d[4] * d[6] * d[32] * d[43] - 2 * d[0] * d[8] * d[32] * d[43] - 2 * d[2] * d[3] * d[33] * d[43] + 2 * d[4] * d[5] * d[33] * d[43] + 2 * d[0] * d[2] * d[34] * d[43] - 2 * std::pow(d[4], 2) * d[34] * d[43] + 2 * d[3] * d[4] * d[35] * d[43] - 2 * d[0] * d[5] * d[35] * d[43] - 2 * d[3] * d[29] * d[42] * d[43] - 2 * d[2] * d[30] * d[42] * d[43] + 2 * d[5] * d[31] * d[42] * d[43] + 2 * d[4] * d[32] * d[42] * d[43] + d[2] * d[27] * std::pow(d[43], 2) + d[0] * d[29] * std::pow(d[43], 2) - 2 * d[4] * d[31] * std::pow(d[43], 2) - 2 * d[5] * d[7] * d[27] * d[44] + 2 * d[1] * d[8] * d[27] * d[44] - 2 * d[4] * d[6] * d[28] * d[44] + 2 * d[0] * d[8] * d[28] * d[44] + 2 * d[5] * d[6] * d[30] * d[44] + 2 * d[4] * d[7] * d[30] * d[44] - 4 * d[3] * d[8] * d[30] * d[44] - 2 * d[1] * d[6] * d[31] * d[44] + 2 * d[3] * d[7] * d[31] * d[44] + 2 * d[3] * d[6] * d[32] * d[44] - 2 * d[0] * d[7] * d[32] * d[44] - 2 * d[1] * d[4] * d[33] * d[44] + 2 * d[3] * d[5] * d[33] * d[44] + 2 * d[3] * d[4] * d[34] * d[44] - 2 * d[0] * d[5] * d[34] * d[44] + 2 * d[0] * d[1] * d[35] * d[44] - 2 * std::pow(d[3], 2) * d[35] * d[44] - 2 * d[4] * d[28] * d[42] * d[44] + 2 * d[5] * d[30] * d[42] * d[44] - 2 * d[1] * d[31] * d[42] * d[44] + 2 * d[3] * d[32] * d[42] * d[44] - 2 * d[5] * d[27] * d[43] * d[44] + 2 * d[4] * d[30] * d[43] * d[44] + 2 * d[3] * d[31] * d[43] * d[44] - 2 * d[0] * d[32] * d[43] * d[44] + d[1] * d[27] * std::pow(d[44], 2) + d[0] * d[28] * std::pow(d[44], 2) - 2 * d[3] * d[30] * std::pow(d[44], 2) - d[1] * d[2] * d[27] * d[47] + std::pow(d[5], 2) * d[27] * d[47] - d[0] * d[2] * d[28] * d[47] + std::pow(d[4], 2) * d[28] * d[47] - d[0] * d[1] * d[29] * d[47] + std::pow(d[3], 2) * d[29] * d[47] + 2 * d[2] * d[3] * d[30] * d[47] - 2 * d[4] * d[5] * d[30] * d[47] + 2 * d[1] * d[4] * d[31] * d[47] - 2 * d[3] * d[5] * d[31] * d[47] - 2 * d[3] * d[4] * d[32] * d[47] + 2 * d[0] * d[5] * d[32] * d[47];
    coeffs[59] = 2 * d[1] * d[2] * d[6] * d[42] - 2 * std::pow(d[5], 2) * d[6] * d[42] - 2 * d[2] * d[3] * d[7] * d[42] + 2 * d[4] * d[5] * d[7] * d[42] - 2 * d[1] * d[4] * d[8] * d[42] + 2 * d[3] * d[5] * d[8] * d[42] + d[1] * d[2] * std::pow(d[42], 2) - std::pow(d[5], 2) * std::pow(d[42], 2) - 2 * d[2] * d[3] * d[6] * d[43] + 2 * d[4] * d[5] * d[6] * d[43] + 2 * d[0] * d[2] * d[7] * d[43] - 2 * std::pow(d[4], 2) * d[7] * d[43] + 2 * d[3] * d[4] * d[8] * d[43] - 2 * d[0] * d[5] * d[8] * d[43] - 2 * d[2] * d[3] * d[42] * d[43] + 2 * d[4] * d[5] * d[42] * d[43] + d[0] * d[2] * std::pow(d[43], 2) - std::pow(d[4], 2) * std::pow(d[43], 2) - 2 * d[1] * d[4] * d[6] * d[44] + 2 * d[3] * d[5] * d[6] * d[44] + 2 * d[3] * d[4] * d[7] * d[44] - 2 * d[0] * d[5] * d[7] * d[44] + 2 * d[0] * d[1] * d[8] * d[44] - 2 * std::pow(d[3], 2) * d[8] * d[44] - 2 * d[1] * d[4] * d[42] * d[44] + 2 * d[3] * d[5] * d[42] * d[44] + 2 * d[3] * d[4] * d[43] * d[44] - 2 * d[0] * d[5] * d[43] * d[44] + d[0] * d[1] * std::pow(d[44], 2) - std::pow(d[3], 2) * std::pow(d[44], 2) - d[0] * d[1] * d[2] * d[47] + d[2] * std::pow(d[3], 2) * d[47] + d[1] * std::pow(d[4], 2) * d[47] - 2 * d[3] * d[4] * d[5] * d[47] + d[0] * std::pow(d[5], 2) * d[47];
    coeffs[60] = d[9] * d[10] * d[11] - d[11] * std::pow(d[12], 2) - d[10] * std::pow(d[13], 2) + 2 * d[12] * d[13] * d[14] - d[9] * std::pow(d[14], 2);
    coeffs[61] = d[10] * d[11] * d[18] - std::pow(d[14], 2) * d[18] + d[9] * d[11] * d[19] - std::pow(d[13], 2) * d[19] + d[9] * d[10] * d[20] - std::pow(d[12], 2) * d[20] - 2 * d[11] * d[12] * d[21] + 2 * d[13] * d[14] * d[21] - 2 * d[10] * d[13] * d[22] + 2 * d[12] * d[14] * d[22] + 2 * d[12] * d[13] * d[23] - 2 * d[9] * d[14] * d[23];
    coeffs[62] = d[11] * d[18] * d[19] + d[10] * d[18] * d[20] + d[9] * d[19] * d[20] - 2 * d[12] * d[20] * d[21] - d[11] * std::pow(d[21], 2) - 2 * d[13] * d[19] * d[22] + 2 * d[14] * d[21] * d[22] - d[10] * std::pow(d[22], 2) - 2 * d[14] * d[18] * d[23] + 2 * d[13] * d[21] * d[23] + 2 * d[12] * d[22] * d[23] - d[9] * std::pow(d[23], 2);
    coeffs[63] = d[18] * d[19] * d[20] - d[20] * std::pow(d[21], 2) - d[19] * std::pow(d[22], 2) + 2 * d[21] * d[22] * d[23] - d[18] * std::pow(d[23], 2);
    coeffs[64] = d[10] * d[11] * d[27] - std::pow(d[14], 2) * d[27] + d[9] * d[11] * d[28] - std::pow(d[13], 2) * d[28] + d[9] * d[10] * d[29] - std::pow(d[12], 2) * d[29] - 2 * d[11] * d[12] * d[30] + 2 * d[13] * d[14] * d[30] - 2 * d[10] * d[13] * d[31] + 2 * d[12] * d[14] * d[31] + 2 * d[12] * d[13] * d[32] - 2 * d[9] * d[14] * d[32];
    coeffs[65] = d[11] * d[19] * d[27] + d[10] * d[20] * d[27] - 2 * d[14] * d[23] * d[27] + d[11] * d[18] * d[28] + d[9] * d[20] * d[28] - 2 * d[13] * d[22] * d[28] + d[10] * d[18] * d[29] + d[9] * d[19] * d[29] - 2 * d[12] * d[21] * d[29] - 2 * d[12] * d[20] * d[30] - 2 * d[11] * d[21] * d[30] + 2 * d[14] * d[22] * d[30] + 2 * d[13] * d[23] * d[30] - 2 * d[13] * d[19] * d[31] + 2 * d[14] * d[21] * d[31] - 2 * d[10] * d[22] * d[31] + 2 * d[12] * d[23] * d[31] - 2 * d[14] * d[18] * d[32] + 2 * d[13] * d[21] * d[32] + 2 * d[12] * d[22] * d[32] - 2 * d[9] * d[23] * d[32];
    coeffs[66] = d[19] * d[20] * d[27] - std::pow(d[23], 2) * d[27] + d[18] * d[20] * d[28] - std::pow(d[22], 2) * d[28] + d[18] * d[19] * d[29] - std::pow(d[21], 2) * d[29] - 2 * d[20] * d[21] * d[30] + 2 * d[22] * d[23] * d[30] - 2 * d[19] * d[22] * d[31] + 2 * d[21] * d[23] * d[31] + 2 * d[21] * d[22] * d[32] - 2 * d[18] * d[23] * d[32];
    coeffs[67] = d[11] * d[27] * d[28] + d[10] * d[27] * d[29] + d[9] * d[28] * d[29] - 2 * d[12] * d[29] * d[30] - d[11] * std::pow(d[30], 2) - 2 * d[13] * d[28] * d[31] + 2 * d[14] * d[30] * d[31] - d[10] * std::pow(d[31], 2) - 2 * d[14] * d[27] * d[32] + 2 * d[13] * d[30] * d[32] + 2 * d[12] * d[31] * d[32] - d[9] * std::pow(d[32], 2);
    coeffs[68] = d[20] * d[27] * d[28] + d[19] * d[27] * d[29] + d[18] * d[28] * d[29] - 2 * d[21] * d[29] * d[30] - d[20] * std::pow(d[30], 2) - 2 * d[22] * d[28] * d[31] + 2 * d[23] * d[30] * d[31] - d[19] * std::pow(d[31], 2) - 2 * d[23] * d[27] * d[32] + 2 * d[22] * d[30] * d[32] + 2 * d[21] * d[31] * d[32] - d[18] * std::pow(d[32], 2);
    coeffs[69] = d[27] * d[28] * d[29] - d[29] * std::pow(d[30], 2) - d[28] * std::pow(d[31], 2) + 2 * d[30] * d[31] * d[32] - d[27] * std::pow(d[32], 2);
    coeffs[70] = d[2] * d[9] * d[10] + d[1] * d[9] * d[11] + d[0] * d[10] * d[11] - 2 * d[3] * d[11] * d[12] - d[2] * std::pow(d[12], 2) - 2 * d[4] * d[10] * d[13] + 2 * d[5] * d[12] * d[13] - d[1] * std::pow(d[13], 2) - 2 * d[5] * d[9] * d[14] + 2 * d[4] * d[12] * d[14] + 2 * d[3] * d[13] * d[14] - d[0] * std::pow(d[14], 2);
    coeffs[71] = d[2] * d[10] * d[18] + d[1] * d[11] * d[18] - 2 * d[5] * d[14] * d[18] + d[2] * d[9] * d[19] + d[0] * d[11] * d[19] - 2 * d[4] * d[13] * d[19] + d[1] * d[9] * d[20] + d[0] * d[10] * d[20] - 2 * d[3] * d[12] * d[20] - 2 * d[3] * d[11] * d[21] - 2 * d[2] * d[12] * d[21] + 2 * d[5] * d[13] * d[21] + 2 * d[4] * d[14] * d[21] - 2 * d[4] * d[10] * d[22] + 2 * d[5] * d[12] * d[22] - 2 * d[1] * d[13] * d[22] + 2 * d[3] * d[14] * d[22] - 2 * d[5] * d[9] * d[23] + 2 * d[4] * d[12] * d[23] + 2 * d[3] * d[13] * d[23] - 2 * d[0] * d[14] * d[23];
    coeffs[72] = d[2] * d[18] * d[19] + d[1] * d[18] * d[20] + d[0] * d[19] * d[20] - 2 * d[3] * d[20] * d[21] - d[2] * std::pow(d[21], 2) - 2 * d[4] * d[19] * d[22] + 2 * d[5] * d[21] * d[22] - d[1] * std::pow(d[22], 2) - 2 * d[5] * d[18] * d[23] + 2 * d[4] * d[21] * d[23] + 2 * d[3] * d[22] * d[23] - d[0] * std::pow(d[23], 2);
    coeffs[73] = d[2] * d[10] * d[27] + d[1] * d[11] * d[27] - 2 * d[5] * d[14] * d[27] + d[2] * d[9] * d[28] + d[0] * d[11] * d[28] - 2 * d[4] * d[13] * d[28] + d[1] * d[9] * d[29] + d[0] * d[10] * d[29] - 2 * d[3] * d[12] * d[29] - 2 * d[3] * d[11] * d[30] - 2 * d[2] * d[12] * d[30] + 2 * d[5] * d[13] * d[30] + 2 * d[4] * d[14] * d[30] - 2 * d[4] * d[10] * d[31] + 2 * d[5] * d[12] * d[31] - 2 * d[1] * d[13] * d[31] + 2 * d[3] * d[14] * d[31] - 2 * d[5] * d[9] * d[32] + 2 * d[4] * d[12] * d[32] + 2 * d[3] * d[13] * d[32] - 2 * d[0] * d[14] * d[32];
    coeffs[74] = d[2] * d[19] * d[27] + d[1] * d[20] * d[27] - 2 * d[5] * d[23] * d[27] + d[2] * d[18] * d[28] + d[0] * d[20] * d[28] - 2 * d[4] * d[22] * d[28] + d[1] * d[18] * d[29] + d[0] * d[19] * d[29] - 2 * d[3] * d[21] * d[29] - 2 * d[3] * d[20] * d[30] - 2 * d[2] * d[21] * d[30] + 2 * d[5] * d[22] * d[30] + 2 * d[4] * d[23] * d[30] - 2 * d[4] * d[19] * d[31] + 2 * d[5] * d[21] * d[31] - 2 * d[1] * d[22] * d[31] + 2 * d[3] * d[23] * d[31] - 2 * d[5] * d[18] * d[32] + 2 * d[4] * d[21] * d[32] + 2 * d[3] * d[22] * d[32] - 2 * d[0] * d[23] * d[32];
    coeffs[75] = d[2] * d[27] * d[28] + d[1] * d[27] * d[29] + d[0] * d[28] * d[29] - 2 * d[3] * d[29] * d[30] - d[2] * std::pow(d[30], 2) - 2 * d[4] * d[28] * d[31] + 2 * d[5] * d[30] * d[31] - d[1] * std::pow(d[31], 2) - 2 * d[5] * d[27] * d[32] + 2 * d[4] * d[30] * d[32] + 2 * d[3] * d[31] * d[32] - d[0] * std::pow(d[32], 2);
    coeffs[76] = d[1] * d[2] * d[9] - std::pow(d[5], 2) * d[9] + d[0] * d[2] * d[10] - std::pow(d[4], 2) * d[10] + d[0] * d[1] * d[11] - std::pow(d[3], 2) * d[11] - 2 * d[2] * d[3] * d[12] + 2 * d[4] * d[5] * d[12] - 2 * d[1] * d[4] * d[13] + 2 * d[3] * d[5] * d[13] + 2 * d[3] * d[4] * d[14] - 2 * d[0] * d[5] * d[14];
    coeffs[77] = d[1] * d[2] * d[18] - std::pow(d[5], 2) * d[18] + d[0] * d[2] * d[19] - std::pow(d[4], 2) * d[19] + d[0] * d[1] * d[20] - std::pow(d[3], 2) * d[20] - 2 * d[2] * d[3] * d[21] + 2 * d[4] * d[5] * d[21] - 2 * d[1] * d[4] * d[22] + 2 * d[3] * d[5] * d[22] + 2 * d[3] * d[4] * d[23] - 2 * d[0] * d[5] * d[23];
    coeffs[78] = d[1] * d[2] * d[27] - std::pow(d[5], 2) * d[27] + d[0] * d[2] * d[28] - std::pow(d[4], 2) * d[28] + d[0] * d[1] * d[29] - std::pow(d[3], 2) * d[29] - 2 * d[2] * d[3] * d[30] + 2 * d[4] * d[5] * d[30] - 2 * d[1] * d[4] * d[31] + 2 * d[3] * d[5] * d[31] + 2 * d[3] * d[4] * d[32] - 2 * d[0] * d[5] * d[32];
    coeffs[79] = -1;
    coeffs[80] = d[0] * d[1] * d[2] - d[2] * std::pow(d[3], 2) - d[1] * std::pow(d[4], 2) + 2 * d[3] * d[4] * d[5] - d[0] * std::pow(d[5], 2);

    // Setup elimination template
    static const int coeffs0_ind[] = {0, 20, 40, 1, 0, 20, 21, 40, 41, 2, 1, 21, 22, 41, 42, 3, 2, 22, 23, 42, 43, 3, 23, 43, 0, 20, 1, 0, 20, 21, 40, 4, 24, 2, 1, 0, 20, 21, 22, 40, 41, 44, 60, 5, 4, 24, 25, 44, 3, 2, 1, 21, 22, 23, 41, 42, 45, 61, 6, 5, 25, 26, 45, 3, 2, 22, 23, 42, 43, 46, 62, 6, 26, 46, 3, 23, 43, 63, 0, 20, 40, 60, 4, 24, 1, 0, 20, 21, 40, 41, 61, 60, 5, 4, 24, 25, 2, 1, 0, 20, 21, 22, 40, 41, 44, 42, 60, 62, 61, 7, 27, 6, 5, 4, 24, 25, 26, 3, 2, 1, 21, 22, 23, 41, 44, 42, 45, 47, 43, 61, 64, 63, 62, 8, 7, 27, 28, 47, 6, 5, 25, 26, 3, 2, 22, 23, 42, 45, 43, 46, 48, 62, 65, 63, 8, 28, 48, 6, 26, 3, 23, 43, 46, 63, 66, 4, 24, 0, 20, 40, 44, 64, 60, 7, 27, 5, 4, 24, 25, 1, 20, 0, 21, 40, 41, 44, 45, 60, 65, 64, 61, 8, 7, 27, 28, 6, 5, 4, 24, 25, 26, 2, 21, 1, 22, 41, 44, 42, 45, 47, 46, 61, 64, 66, 65, 62, 9, 29, 8, 7, 27, 28, 6, 5, 25, 26, 3, 22, 2, 23, 42, 45, 47, 43, 46, 48, 49, 62, 65, 67, 66, 63, 9, 29, 49, 8, 28, 6, 26, 23, 3, 43, 46, 48, 63, 66, 68, 7, 27, 4, 24, 20, 40, 0, 44, 47, 60, 67, 64, 9, 29, 8, 7, 27, 28, 5, 24, 4, 25, 44, 21, 41, 1, 45, 47, 48, 61, 64, 68, 67, 65, 9, 29, 8, 7, 27, 28, 6, 25, 5, 26, 45, 22, 42, 47, 2, 46, 48, 49, 62, 65, 67, 68, 66, 9, 29, 8, 28, 26, 6, 46, 23, 43, 48, 49, 3, 63, 66, 68, 69, 0, 20, 1, 0, 20, 21, 40, 10, 30, 2, 1, 20, 21, 22, 0, 50, 40, 41, 60, 11, 10, 30, 31, 50, 3, 2, 21, 22, 23, 1, 51, 41, 42, 61, 12, 11, 31, 32, 51, 3, 22, 23, 2, 52, 42, 43, 62, 12, 32, 52, 23, 3, 43, 63, 0, 20, 40, 60, 10, 30, 4, 24, 1, 0, 20, 21, 40, 41, 61, 60, 11, 10, 30, 31, 5, 4, 24, 25, 2, 1, 20, 21, 22, 0, 40, 50, 41, 44, 42, 60, 62, 61, 13, 33, 12, 11, 10, 30, 31, 32, 50, 6, 5, 24, 25, 26, 4, 3, 2, 21, 22, 23, 1, 41, 51, 53, 44, 42, 45, 43, 61, 64, 70, 63, 62, 14, 13, 33, 34, 53, 12, 11, 31, 32, 51, 6, 25, 26, 5, 3, 22, 23, 2, 42, 52, 54, 45, 43, 46, 62, 65, 71, 63, 14, 34, 54, 12, 32, 52, 26, 6, 23, 3, 43, 46, 63, 66, 72, 10, 30, 4, 24, 0, 20, 50, 40, 44, 60, 70, 64, 13, 33, 11, 10, 30, 31, 7, 27, 5, 4, 24, 25, 1, 0, 21, 20, 40, 50, 51, 41, 44, 45, 60, 61, 71, 70, 65, 64, 14, 13, 33, 34, 12, 11, 10, 30, 31, 32, 50, 8, 7, 27, 28, 6, 5, 24, 25, 26, 4, 2, 1, 22, 21, 41, 44, 51, 53, 52, 42, 45, 47, 46, 61, 64, 70, 62, 72, 71, 66, 65, 15, 35, 14, 13, 33, 34, 12, 11, 31, 32, 51, 53, 8, 27, 28, 7, 6, 25, 26, 5, 3, 2, 23, 22, 42, 45, 52, 54, 55, 47, 43, 46, 48, 62, 65, 71, 67, 73, 63, 72, 66, 15, 35, 55, 14, 34, 12, 32, 52, 54, 28, 8, 26, 6, 3, 23, 43, 46, 48, 63, 66, 72, 68, 74, 13, 33, 10, 30, 7, 27, 4, 24, 20, 0, 40, 50, 53, 44, 47, 60, 64, 73, 70, 67, 15, 35, 14, 13, 33, 34, 11, 30, 10, 31, 50, 9, 29, 8, 7, 27, 28, 5, 4, 25, 24, 44, 21, 1, 41, 51, 53, 54, 45, 47, 48, 61, 64, 70, 65, 74, 73, 71, 68, 67, 15, 35, 14, 13, 33, 34, 12, 31, 11, 32, 51, 53, 9, 29, 8, 27, 28, 7, 6, 5, 26, 25, 45, 22, 2, 42, 47, 52, 54, 55, 46, 48, 49, 62, 65, 71, 67, 73, 66, 74, 72, 68, 15, 35, 14, 34, 32, 12, 52, 54, 55, 29, 9, 28, 8, 6, 26, 46, 23, 3, 43, 48, 49, 63, 66, 72, 68, 74, 69, 75, 15, 35, 13, 33, 30, 50, 9, 29, 7, 27, 24, 4, 44, 10, 53, 55, 47, 49, 64, 70, 67, 75, 73, 69, 15, 35, 14, 33, 13, 34, 53, 31, 51, 9, 29, 8, 7, 28, 27, 47, 25, 5, 45, 11, 54, 55, 48, 49, 65, 71, 67, 73, 68, 75, 74, 69, 15, 35, 34, 14, 54, 32, 52, 55, 29, 9, 8, 28, 48, 26, 6, 46, 49, 12, 66, 72, 68, 74, 69, 75, 15, 35, 33, 53, 9, 29, 27, 7, 47, 13, 55, 49, 67, 73, 69, 75, 35, 15, 55, 34, 54, 9, 29, 49, 28, 8, 48, 14, 68, 74, 69, 75, 35, 55, 29, 9, 49, 15, 69, 75, 20, 0, 40, 60, 10, 30, 21, 1, 0, 40, 20, 41, 60, 61, 11, 10, 30, 31, 22, 0, 40, 2, 20, 1, 50, 41, 21, 42, 60, 61, 62, 16, 36, 12, 11, 30, 31, 32, 10, 56, 23, 50, 1, 41, 3, 21, 2, 51, 42, 22, 43, 61, 70, 62, 63, 17, 16, 36, 37, 56, 12, 31, 32, 11, 57, 51, 2, 42, 22, 3, 52, 43, 23, 62, 71, 63, 17, 37, 57, 32, 12, 52, 3, 43, 23, 63, 72, 10, 30, 24, 4, 20, 0, 40, 50, 44, 60, 64, 70, 16, 36, 13, 33, 11, 10, 30, 31, 25, 5, 21, 0, 40, 20, 1, 41, 4, 50, 51, 44, 24, 45, 60, 61, 64, 65, 71, 70, 17, 16, 36, 37, 14, 13, 33, 34, 12, 11, 30, 31, 32, 10, 50, 56, 26, 4, 44, 6, 24, 22, 1, 41, 21, 2, 42, 5, 51, 53, 52, 45, 25, 46, 61, 64, 70, 62, 65, 66, 72, 71, 18, 38, 17, 16, 36, 37, 56, 14, 33, 34, 13, 12, 31, 32, 11, 51, 57, 58, 53, 5, 45, 25, 23, 2, 42, 22, 3, 43, 6, 52, 54, 46, 26, 62, 65, 71, 73, 76, 63, 66, 72, 18, 38, 58, 17, 37, 57, 34, 14, 32, 12, 52, 54, 6, 46, 26, 3, 43, 23, 63, 66, 72, 74, 77, 16, 36, 13, 33, 10, 30, 56, 27, 7, 24, 4, 20, 40, 0, 44, 50, 53, 47, 60, 64, 70, 76, 67, 73, 18, 38, 17, 16, 36, 37, 15, 35, 14, 13, 33, 34, 11, 10, 31, 30, 50, 56, 57, 28, 8, 25, 4, 44, 24, 5, 21, 41, 1, 45, 51, 7, 53, 54, 47, 27, 48, 61, 64, 70, 65, 71, 77, 76, 67, 68, 74, 73, 18, 38, 17, 16, 36, 37, 56, 15, 35, 14, 33, 34, 13, 12, 11, 32, 31, 51, 53, 57, 58, 7, 47, 27, 26, 5, 45, 25, 6, 22, 42, 2, 46, 52, 8, 54, 55, 48, 28, 62, 65, 71, 67, 73, 76, 66, 72, 77, 68, 74, 18, 38, 17, 37, 57, 58, 35, 15, 34, 14, 12, 32, 52, 54, 55, 8, 48, 28, 6, 46, 26, 23, 43, 3, 63, 66, 72, 68, 74, 77, 75, 78, 18, 38, 16, 36, 15, 35, 13, 33, 30, 10, 50, 56, 58, 29, 9, 27, 7, 24, 44, 4, 47, 53, 55, 70, 49, 64, 67, 73, 78, 76, 69, 75, 18, 38, 17, 36, 16, 37, 56, 15, 35, 14, 13, 34, 33, 53, 31, 11, 51, 57, 58, 28, 7, 47, 27, 8, 25, 45, 5, 48, 54, 9, 55, 71, 49, 29, 65, 67, 73, 76, 68, 74, 78, 77, 69, 75, 18, 38, 37, 17, 57, 58, 35, 15, 14, 34, 54, 32, 12, 52, 55, 9, 49, 29, 8, 48, 28, 26, 46, 6, 72, 66, 68, 74, 77, 69, 75, 78, 18, 38, 36, 56, 15, 35, 33, 13, 53, 16, 58, 29, 9, 27, 47, 7, 49, 55, 73, 67, 76, 69, 75, 78, 38, 18, 58, 37, 57, 15, 35, 55, 34, 14, 54, 17, 9, 49, 29, 28, 48, 8, 74, 68, 77, 69, 75, 78, 38, 58, 35, 15, 55, 18, 29, 49, 9, 75, 69, 78, 30, 10, 40, 0, 50, 20, 60, 70, 16, 36, 31, 11, 10, 41, 40, 50, 30, 20, 1, 51, 0, 21, 60, 61, 70, 71, 17, 16, 36, 37, 32, 10, 50, 12, 30, 11, 56, 42, 41, 51, 31, 21, 2, 52, 1, 22, 61, 70, 62, 71, 72, 19, 39, 17, 36, 37, 16, 59, 56, 11, 51, 31, 12, 57, 43, 42, 52, 32, 22, 3, 2, 23, 62, 71, 76, 63, 72, 19, 39, 59, 37, 17, 57, 12, 52, 32, 43, 23, 3, 63, 72, 77, 16, 36, 33, 13, 30, 10, 50, 56, 44, 0, 20, 4, 53, 40, 60, 24, 64, 70, 73, 76, 19, 39, 18, 38, 17, 16, 36, 37, 34, 14, 31, 10, 50, 30, 11, 51, 13, 56, 57, 45, 44, 53, 33, 24, 1, 21, 5, 54, 41, 4, 61, 70, 25, 64, 65, 71, 73, 74, 77, 76, 19, 39, 18, 38, 17, 36, 37, 16, 56, 59, 13, 53, 33, 32, 11, 51, 31, 12, 52, 14, 57, 58, 46, 45, 54, 34, 25, 2, 22, 6, 42, 5, 62, 71, 26, 65, 73, 76, 66, 72, 74, 77, 19, 39, 59, 38, 18, 37, 17, 57, 58, 14, 54, 34, 12, 52, 32, 46, 26, 3, 23, 43, 6, 63, 72, 66, 74, 77, 78, 80, 19, 39, 18, 38, 16, 36, 59, 35, 15, 33, 13, 30, 50, 10, 53, 56, 58, 47, 4, 24, 7, 55, 44, 64, 70, 27, 67, 73, 76, 80, 75, 78, 19, 39, 18, 38, 17, 16, 37, 36, 56, 59, 34, 13, 53, 33, 14, 31, 51, 11, 54, 57, 15, 58, 48, 47, 55, 35, 27, 5, 25, 8, 45, 7, 65, 71, 73, 28, 67, 76, 68, 74, 77, 80, 75, 78, 19, 39, 59, 38, 18, 17, 37, 57, 58, 15, 55, 35, 14, 54, 34, 32, 52, 12, 48, 28, 6, 26, 46, 8, 66, 72, 74, 68, 77, 75, 78, 80, 19, 39, 18, 38, 36, 16, 56, 59, 35, 15, 33, 53, 13, 55, 58, 76, 49, 7, 27, 9, 47, 67, 73, 29, 69, 75, 78, 80, 39, 19, 59, 18, 38, 58, 37, 17, 57, 15, 55, 35, 34, 54, 14, 77, 49, 29, 8, 28, 48, 9, 68, 74, 75, 69, 78, 80, 39, 59, 38, 18, 58, 19, 35, 55, 15, 78, 9, 29, 49, 69, 75, 80, 36, 16, 50, 10, 56, 0, 20, 30, 40, 60, 70, 76, 19, 39, 37, 17, 16, 51, 50, 56, 36, 30, 11, 57, 10, 1, 21, 31, 41, 70, 61, 71, 76, 77, 19, 39, 16, 56, 36, 17, 59, 52, 51, 57, 37, 31, 12, 11, 2, 22, 32, 42, 71, 62, 76, 72, 77, 39, 19, 59, 17, 57, 37, 52, 32, 12, 3, 23, 43, 72, 63, 77, 80, 19, 39, 38, 18, 36, 16, 56, 59, 53, 10, 30, 13, 58, 50, 70, 4, 24, 33, 44, 64, 73, 76, 78, 80, 19, 39, 37, 16, 56, 36, 17, 57, 18, 59, 54, 53, 58, 38, 33, 11, 31, 14, 51, 13, 71, 76, 5, 25, 34, 45, 73, 65, 74, 77, 78, 80, 39, 19, 59, 18, 58, 38, 17, 57, 37, 54, 34, 12, 32, 52, 14, 72, 77, 6, 26, 46, 74, 66, 78, 80, 19, 39, 38, 18, 36, 56, 16, 58, 59, 55, 13, 33, 15, 53, 73, 76, 7, 27, 35, 47, 67, 75, 78, 80, 19, 39, 59, 18, 58, 38, 37, 57, 17, 55, 35, 14, 34, 54, 15, 74, 77, 78, 8, 28, 48, 75, 68, 80, 39, 19, 59, 38, 58, 18, 80, 15, 35, 55, 75, 78, 9, 29, 49, 69, 39, 19, 56, 16, 59, 10, 30, 36, 50, 70, 76, 80, 19, 57, 56, 59, 39, 36, 17, 16, 11, 31, 37, 51, 76, 71, 77, 80, 19, 59, 39, 57, 37, 17, 12, 32, 52, 77, 72, 80, 39, 19, 59, 58, 16, 36, 18, 56, 76, 13, 33, 38, 53, 73, 78, 80, 19, 59, 39, 58, 38, 17, 37, 57, 18, 77, 80, 14, 34, 54, 78, 74, 39, 59, 19, 18, 38, 58, 78, 80, 15, 35, 55, 75, 79, 79, 79, 79, 79, 79, 79};
    static const int coeffs1_ind[] = {79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79};

    static const int C0_ind[] = {0, 3, 51, 112, 113, 114, 115, 116, 163, 224, 225, 226, 227, 228, 275, 336, 337, 338, 339, 340, 387, 449, 450, 452, 565, 570, 677, 678, 681, 682, 722, 784, 787, 789, 790, 791, 792, 793, 794, 809, 834, 835, 885, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 921, 946, 947, 997, 1008, 1009, 1010, 1011, 1012, 1014, 1015, 1016, 1017, 1033, 1058, 1059, 1109, 1121, 1122, 1124, 1127, 1128, 1145, 1221, 1243, 1248, 1284, 1337, 1349, 1354, 1355, 1356, 1359, 1360, 1393, 1396, 1449, 1450, 1461, 1462, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1480, 1505, 1506, 1508, 1555, 1561, 1562, 1568, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1592, 1593, 1617, 1618, 1619, 1620, 1667, 1669, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1692, 1693, 1694, 1695, 1704, 1705, 1729, 1730, 1731, 1779, 1781, 1786, 1793, 1794, 1796, 1799, 1800, 1805, 1806, 1816, 1817, 1891, 1893, 1915, 1920, 1921, 1924, 1952, 1956, 2009, 2011, 2021, 2026, 2027, 2028, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2064, 2065, 2068, 2112, 2121, 2122, 2123, 2133, 2134, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2152, 2176, 2177, 2178, 2180, 2224, 2227, 2233, 2234, 2235, 2240, 2243, 2246, 2247, 2248, 2249, 2252, 2253, 2254, 2255, 2257, 2258, 2259, 2260, 2261, 2264, 2265, 2288, 2289, 2290, 2291, 2336, 2339, 2341, 2346, 2347, 2353, 2354, 2356, 2359, 2360, 2365, 2366, 2370, 2371, 2373, 2376, 2377, 2448, 2451, 2453, 2475, 2480, 2481, 2484, 2486, 2487, 2511, 2512, 2516, 2551, 2569, 2571, 2581, 2586, 2587, 2588, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2623, 2624, 2625, 2628, 2663, 2672, 2681, 2682, 2683, 2694, 2697, 2700, 2701, 2702, 2703, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2735, 2736, 2737, 2738, 2775, 2784, 2787, 2794, 2795, 2807, 2808, 2813, 2814, 2818, 2819, 2821, 2822, 2823, 2824, 2825, 2847, 2887, 2896, 2899, 2901, 2938, 2942, 3050, 3051, 3053, 3054, 3095, 3136, 3139, 3162, 3163, 3164, 3165, 3166, 3167, 3187, 3190, 3207, 3236, 3248, 3249, 3250, 3251, 3252, 3274, 3275, 3276, 3277, 3278, 3279, 3299, 3302, 3319, 3348, 3360, 3361, 3362, 3363, 3364, 3387, 3388, 3389, 3391, 3411, 3414, 3431, 3460, 3473, 3474, 3476, 3500, 3503, 3526, 3572, 3616, 3620, 3656, 3694, 3701, 3706, 3722, 3726, 3728, 3729, 3731, 3732, 3766, 3768, 3806, 3807, 3813, 3814, 3817, 3818, 3834, 3835, 3837, 3838, 3840, 3841, 3842, 3843, 3844, 3845, 3854, 3858, 3878, 3879, 3880, 3906, 3918, 3919, 3920, 3923, 3925, 3926, 3927, 3928, 3929, 3930, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957, 3966, 3970, 3971, 3974, 3990, 3991, 3992, 4018, 4020, 4021, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4038, 4039, 4040, 4041, 4057, 4059, 4060, 4061, 4063, 4065, 4066, 4067, 4069, 4078, 4082, 4083, 4086, 4102, 4103, 4130, 4132, 4133, 4143, 4145, 4146, 4148, 4151, 4152, 4169, 4172, 4175, 4178, 4181, 4190, 4198, 4242, 4244, 4245, 4267, 4272, 4288, 4292, 4294, 4296, 4308, 4324, 4328, 4360, 4361, 4366, 4373, 4378, 4379, 4380, 4383, 4384, 4394, 4398, 4400, 4401, 4403, 4404, 4406, 4407, 4408, 4409, 4410, 4417, 4420, 4436, 4438, 4440, 4463, 4472, 4473, 4474, 4478, 4479, 4485, 4486, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4504, 4506, 4507, 4509, 4510, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4526, 4529, 4530, 4532, 4548, 4550, 4551, 4552, 4575, 4578, 4579, 4584, 4585, 4586, 4590, 4591, 4592, 4595, 4598, 4599, 4600, 4601, 4604, 4605, 4606, 4607, 4616, 4617, 4619, 4620, 4621, 4623, 4625, 4626, 4627, 4629, 4630, 4631, 4632, 4633, 4634, 4638, 4641, 4642, 4643, 4646, 4660, 4662, 4663, 4687, 4690, 4691, 4692, 4693, 4696, 4698, 4703, 4705, 4706, 4708, 4711, 4712, 4717, 4718, 4728, 4729, 4732, 4735, 4738, 4741, 4743, 4745, 4746, 4750, 4758, 4799, 4802, 4803, 4804, 4805, 4827, 4832, 4833, 4836, 4848, 4852, 4854, 4856, 4859, 4860, 4861, 4864, 4868, 4884, 4888, 4889, 4920, 4921, 4923, 4926, 4933, 4938, 4939, 4940, 4943, 4944, 4945, 4946, 4947, 4948, 4949, 4954, 4958, 4960, 4961, 4963, 4964, 4966, 4967, 4968, 4969, 4970, 4971, 4972, 4973, 4976, 4977, 4980, 4996, 4998, 5000, 5001, 5023, 5024, 5032, 5033, 5034, 5035, 5038, 5039, 5046, 5049, 5052, 5053, 5054, 5055, 5057, 5058, 5059, 5060, 5061, 5064, 5067, 5069, 5073, 5074, 5075, 5077, 5078, 5079, 5080, 5081, 5082, 5083, 5084, 5085, 5086, 5088, 5089, 5090, 5108, 5110, 5111, 5113, 5135, 5136, 5138, 5139, 5144, 5146, 5147, 5151, 5159, 5160, 5165, 5166, 5170, 5171, 5173, 5176, 5177, 5180, 5183, 5186, 5189, 5191, 5193, 5194, 5195, 5196, 5197, 5198, 5206, 5225, 5247, 5248, 5250, 5251, 5252, 5253, 5275, 5280, 5281, 5284, 5286, 5287, 5296, 5300, 5302, 5304, 5307, 5308, 5309, 5311, 5312, 5316, 5332, 5336, 5337, 5351, 5368, 5369, 5371, 5374, 5388, 5391, 5393, 5394, 5395, 5396, 5397, 5398, 5399, 5409, 5411, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 5421, 5423, 5424, 5425, 5444, 5446, 5449, 5463, 5471, 5472, 5480, 5482, 5483, 5487, 5501, 5502, 5506, 5507, 5509, 5510, 5511, 5512, 5522, 5525, 5527, 5529, 5530, 5531, 5532, 5533, 5534, 5535, 5561, 5575, 5583, 5584, 5586, 5587, 5617, 5620, 5622, 5623, 5638, 5640, 5643, 5644, 5645, 5647, 5648, 5668, 5673, 5687, 5704, 5707, 5730, 5731, 5733, 5734, 5735, 5751, 5753, 5754, 5755, 5756, 5757, 5759, 5785, 5799, 5807, 5808, 5846, 5847, 5867, 5868, 5869, 5871, 5897, 5911, 5989, 5993, 6018, 6045, 6074, 6078, 6101, 6105, 6117, 6124, 6125, 6130, 6156, 6157, 6186, 6187, 6189, 6190, 6213, 6215, 6216, 6217, 6218, 6229, 6231, 6236, 6237, 6242, 6257, 6268, 6269, 6272, 6275, 6298, 6299, 6300, 6301, 6302, 6303, 6323, 6325, 6326, 6327, 6328, 6329, 6330, 6341, 6343, 6348, 6349, 6354, 6369, 6372, 6380, 6381, 6384, 6385, 6386, 6387, 6388, 6411, 6412, 6413, 6415, 6435, 6438, 6439, 6440, 6442, 6453, 6455, 6460, 6461, 6481, 6484, 6492, 6497, 6498, 6500, 6524, 6527, 6550, 6551, 6552, 6554, 6593, 6596, 6640, 6644, 6661, 6665, 6667, 6671, 6675, 6680, 6690, 6711, 6717, 6718, 6725, 6730, 6746, 6750, 6752, 6753, 6755, 6756, 6773, 6777, 6779, 6780, 6781, 6782, 6783, 6787, 6789, 6790, 6792, 6796, 6797, 6802, 6808, 6823, 6828, 6829, 6830, 6831, 6837, 6838, 6841, 6842, 6858, 6859, 6861, 6862, 6864, 6865, 6866, 6867, 6868, 6869, 6878, 6882, 6885, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6899, 6901, 6902, 6903, 6904, 6908, 6909, 6914, 6920, 6929, 6930, 6935, 6940, 6941, 6942, 6943, 6944, 6947, 6950, 6951, 6952, 6953, 6969, 6971, 6972, 6973, 6975, 6977, 6978, 6979, 6981, 6990, 6994, 6995, 6998, 6999, 7000, 7002, 7003, 7004, 7005, 7006, 7007, 7011, 7013, 7014, 7015, 7020, 7021, 7032, 7041, 7042, 7044, 7045, 7047, 7052, 7055, 7057, 7058, 7060, 7063, 7064, 7081, 7084, 7087, 7090, 7093, 7102, 7110, 7111, 7112, 7114, 7116, 7117, 7118, 7144, 7153, 7154, 7156, 7157, 7179, 7184, 7200, 7204, 7206, 7208, 7220, 7221, 7225, 7227, 7231, 7232, 7233, 7234, 7235, 7236, 7240, 7250, 7254, 7271, 7272, 7273, 7277, 7278, 7285, 7290, 7291, 7292, 7295, 7296, 7306, 7310, 7312, 7313, 7315, 7316, 7318, 7319, 7320, 7321, 7322, 7329, 7332, 7333, 7337, 7339, 7340, 7341, 7342, 7343, 7344, 7345, 7346, 7347, 7348, 7349, 7350, 7352, 7356, 7357, 7362, 7366, 7368, 7375, 7383, 7384, 7385, 7386, 7388, 7389, 7390, 7391, 7398, 7401, 7404, 7405, 7406, 7407, 7416, 7419, 7421, 7425, 7426, 7427, 7429, 7430, 7431, 7432, 7433, 7434, 7438, 7441, 7442, 7447, 7448, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 7457, 7458, 7459, 7460, 7461, 7462, 7463, 7468, 7469, 7478, 7480, 7487, 7489, 7490, 7491, 7495, 7496, 7498, 7500, 7503, 7511, 7512, 7517, 7518, 7528, 7529, 7532, 7535, 7538, 7541, 7543, 7545, 7546, 7550, 7558, 7559, 7560, 7562, 7564, 7565, 7566, 7568, 7569, 7570, 7590, 7592, 7599, 7601, 7602, 7603, 7604, 7605, 7627, 7632, 7633, 7636, 7648, 7652, 7654, 7656, 7659, 7660, 7661, 7664, 7668, 7669, 7673, 7675, 7679, 7680, 7681, 7682, 7683, 7684, 7688, 7689, 7698, 7702, 7719, 7720, 7721, 7723, 7725, 7726, 7740, 7743, 7745, 7746, 7747, 7748, 7749, 7761, 7763, 7766, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7776, 7777, 7787, 7788, 7789, 7790, 7791, 7792, 7793, 7794, 7795, 7796, 7797, 7798, 7801, 7804, 7805, 7814, 7816, 7823, 7824, 7831, 7832, 7834, 7835, 7836, 7839, 7853, 7854, 7858, 7859, 7861, 7864, 7874, 7877, 7879, 7881, 7882, 7883, 7884, 7885, 7886, 7895, 7896, 7898, 7900, 7901, 7902, 7904, 7905, 7906, 7913, 7926, 7928, 7935, 7936, 7937, 7938, 7939, 7969, 7972, 7974, 7975, 7990, 7992, 7995, 7996, 7997, 7999, 8000, 8011, 8015, 8016, 8017, 8018, 8019, 8020, 8025, 8038, 8039, 8055, 8056, 8059, 8082, 8083, 8085, 8086, 8087, 8103, 8105, 8106, 8107, 8108, 8109, 8111, 8124, 8125, 8126, 8128, 8129, 8130, 8137, 8150, 8151, 8152, 8159, 8160, 8198, 8199, 8219, 8220, 8221, 8223, 8240, 8241, 8242, 8249, 8262, 8263, 8341, 8345, 8362, 8369, 8370, 8379, 8390, 8397, 8426, 8430, 8453, 8457, 8469, 8474, 8475, 8476, 8477, 8478, 8481, 8482, 8484, 8491, 8493, 8502, 8508, 8509, 8538, 8539, 8541, 8542, 8565, 8567, 8568, 8569, 8570, 8581, 8583, 8586, 8587, 8588, 8589, 8590, 8593, 8594, 8596, 8603, 8605, 8609, 8614, 8620, 8621, 8624, 8627, 8651, 8652, 8653, 8655, 8675, 8678, 8679, 8680, 8682, 8693, 8695, 8698, 8699, 8700, 8701, 8702, 8705, 8708, 8715, 8717, 8721, 8724, 8726, 8732, 8737, 8738, 8740, 8764, 8767, 8790, 8791, 8792, 8794, 8811, 8814, 8820, 8829, 8833, 8836, 8880, 8884, 8901, 8905, 8907, 8911, 8915, 8920, 8922, 8927, 8928, 8929, 8930, 8931, 8933, 8939, 8950, 8951, 8957, 8958, 8965, 8970, 8986, 8990, 8992, 8993, 8995, 8996, 9013, 9017, 9019, 9020, 9021, 9022, 9023, 9027, 9029, 9030, 9032, 9034, 9035, 9036, 9037, 9038, 9039, 9040, 9041, 9042, 9043, 9044, 9045, 9048, 9051, 9053, 9062, 9063, 9068, 9069, 9070, 9071, 9078, 9081, 9099, 9101, 9105, 9106, 9107, 9109, 9118, 9122, 9127, 9128, 9130, 9131, 9132, 9133, 9134, 9135, 9139, 9141, 9142, 9143, 9146, 9147, 9148, 9149, 9150, 9151, 9152, 9153, 9155, 9156, 9157, 9160, 9163, 9165, 9169, 9170, 9174, 9175, 9180, 9183, 9191, 9192, 9209, 9212, 9215, 9218, 9221, 9230, 9238, 9239, 9240, 9242, 9244, 9245, 9246, 9259, 9262, 9263, 9264, 9267, 9268, 9269, 9272, 9277, 9281, 9282, 9284, 9285, 9307, 9312, 9328, 9332, 9334, 9336, 9348, 9349, 9353, 9355, 9359, 9360, 9361, 9362, 9363, 9364, 9368, 9370, 9375, 9376, 9377, 9378, 9379, 9381, 9382, 9387, 9398, 9399, 9400, 9401, 9405, 9406, 9420, 9423, 9441, 9443, 9446, 9447, 9448, 9449, 9450, 9457, 9467, 9468, 9469, 9470, 9471, 9472, 9473, 9474, 9475, 9476, 9477, 9478, 9482, 9483, 9484, 9485, 9486, 9487, 9488, 9489, 9491, 9492, 9493, 9494, 9496, 9499, 9501, 9503, 9510, 9511, 9512, 9514, 9516, 9519, 9533, 9534, 9544, 9554, 9557, 9559, 9561, 9562, 9566, 9575, 9576, 9578, 9580, 9581, 9582, 9584, 9585, 9586, 9595, 9598, 9599, 9600, 9603, 9604, 9605, 9606, 9608, 9613, 9615, 9617, 9618, 9619, 9649, 9652, 9670, 9672, 9675, 9676, 9677, 9680, 9691, 9695, 9696, 9697, 9698, 9699, 9700, 9705, 9706, 9711, 9712, 9713, 9715, 9717, 9718, 9723, 9734, 9735, 9736, 9739, 9762, 9763, 9765, 9783, 9785, 9786, 9787, 9788, 9789, 9804, 9805, 9806, 9808, 9809, 9810, 9817, 9819, 9822, 9823, 9824, 9827, 9828, 9829, 9830, 9832, 9837, 9839, 9840, 9878, 9879, 9899, 9900, 9901, 9903, 9920, 9921, 9922, 9929, 9935, 9936, 9939, 9941, 9942, 9943, 10021, 10025, 10042, 10049, 10050, 10057, 10058, 10059, 10060, 10062, 10070, 10077, 10106, 10110, 10133, 10137, 10149, 10154, 10155, 10156, 10157, 10158, 10161, 10162, 10164, 10169, 10170, 10171, 10172, 10173, 10174, 10182, 10188, 10189, 10219, 10221, 10247, 10248, 10250, 10261, 10263, 10266, 10267, 10268, 10269, 10270, 10273, 10276, 10281, 10282, 10283, 10284, 10285, 10286, 10289, 10294, 10300, 10332, 10335, 10358, 10359, 10360, 10362, 10379, 10382, 10388, 10393, 10394, 10396, 10397, 10398, 10401, 10404, 10448, 10452, 10469, 10473, 10475, 10479, 10483, 10488, 10490, 10495, 10496, 10497, 10498, 10499, 10501, 10505, 10506, 10507, 10508, 10510, 10518, 10519, 10525, 10526, 10561, 10563, 10587, 10588, 10589, 10590, 10591, 10595, 10597, 10598, 10602, 10603, 10604, 10605, 10606, 10607, 10608, 10609, 10611, 10612, 10613, 10616, 10617, 10618, 10619, 10620, 10621, 10622, 10630, 10631, 10636, 10639, 10674, 10677, 10686, 10695, 10696, 10698, 10700, 10701, 10702, 10715, 10718, 10719, 10720, 10723, 10724, 10725, 10728, 10729, 10730, 10732, 10733, 10734, 10737, 10738, 10790, 10792, 10811, 10815, 10816, 10817, 10818, 10819, 10820, 10826, 10831, 10832, 10833, 10835, 10837, 10838, 10841, 10842, 10843, 10844, 10846, 10854, 10855, 10856, 10903, 10905, 10906, 10924, 10925, 10926, 10928, 10929, 10930, 10939, 10942, 10943, 10944, 10947, 10948, 10949, 10950, 10952, 10953, 10954, 10956, 10957, 10958, 10959, 11019, 11020, 11021, 11040, 11041, 11042, 11049, 11055, 11056, 11059, 11061, 11062, 11065, 11066, 11068, 11070, 11141, 11145, 11162, 11169, 11170, 11177, 11178, 11179, 11180, 11182, 11190, 11197, 11269, 11274, 11275, 11276, 11277, 11278, 11281, 11284, 11289, 11290, 11291, 11292, 11293, 11294, 11302, 11308, 11367, 11368, 11370, 11387, 11390, 11396, 11401, 11402, 11404, 11405, 11406, 11409, 11483, 11487, 11491, 11498, 11503, 11504, 11505, 11507, 11509, 11513, 11514, 11515, 11516, 11518, 11526, 11527, 11596, 11597, 11598, 11611, 11614, 11615, 11616, 11619, 11620, 11621, 11624, 11625, 11626, 11628, 11629, 11630, 11712, 11713, 11714, 11727, 11728, 11731, 11733, 11734, 11737, 11738, 11740, 11742, 11865, 11978, 12091, 12197, 12307, 12416, 12519};
    static const int C1_ind[] = {94, 214, 333, 446, 556, 671, 775, 888, 989, 1105, 1220, 1330, 1432, 1551, 1653, 1766, 1865};

    MatrixXd C0 = MatrixXd::Zero(112, 112);
    MatrixXd C1 = MatrixXd::Zero(112, 17);
    for (int i = 0; i < 2159; i++)
    {
        C0(C0_ind[i]) = coeffs(coeffs0_ind[i]);
    }
    for (int i = 0; i < 17; i++)
    {
        C1(C1_ind[i]) = coeffs(coeffs1_ind[i]);
    }

    MatrixXd C12 = C0.partialPivLu().solve(C1);

    // Setup action matrix
    Matrix<double, 24, 17> RR;
    RR << -C12.bottomRows(7), Matrix<double, 17, 17>::Identity(17, 17);

    static const int AM_ind[] = {21, 13, 10, 0, 12, 1, 14, 2, 19, 18, 3, 4, 20, 5, 22, 23, 6};
    Matrix<double, 17, 17> AM;
    for (int i = 0; i < 17; i++)
    {
        AM.row(i) = RR.row(AM_ind[i]);
    }

    Matrix<std::complex<double>, 4, 17> sols;
    sols.setZero();

    // Solve eigenvalue problem
    EigenSolver<Matrix<double, 17, 17>> es(AM);
    ArrayXcd D = es.eigenvalues();
    ArrayXXcd V = es.eigenvectors();

    V = (V / V.row(0).array().replicate(17, 1)).eval();

    sols.row(0) = V.row(1).array();
    sols.row(1) = V.row(8).array();
    sols.row(2) = D.transpose().array();

    return sols;
}
// Action =  z
// Quotient ring basis (V) = w^-1,x*w^-1,x^2*w^-1,x^2*z*w^-1,x*y*w^-1,x*y*z*w^-1,x*z*w^-1,x*z^2*w^-1,y*w^-1,y^2*w^-1,y^3*w^-1,y^2*z*w^-1,y*z*w^-1,y*z^2*w^-1,z*w^-1,z^2*w^-1,z^3*w^-1,
// Available monomials (RR*V) = x^2*z^2*w^-1,x*y*z^2*w^-1,x*z^3*w^-1,y^3*z*w^-1,y^2*z^2*w^-1,y*z^3*w^-1,z^4*w^-1,w^-1,x*w^-1,x^2*w^-1,x^2*z*w^-1,x*y*w^-1,x*y*z*w^-1,x*z*w^-1,x*z^2*w^-1,y*w^-1,y^2*w^-1,y^3*w^-1,y^2*z*w^-1,y*z*w^-1,y*z^2*w^-1,z*w^-1,z^2*w^-1,z^3*w^-1,

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
    if (nrhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_sat_630:nrhs", "One input required.");
    }
    if (nlhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_sat_630:nlhs", "One output required.");
    }
    if (!mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]))
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_sat_630:notDouble", "Input data must be type double.");
    }
    if (mxGetNumberOfElements(prhs[0]) % 48 != 0)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_sat_630:incorrectSize", "Input size must be multiple of 48.");
    }
    int n_instances = mxGetNumberOfElements(prhs[0]) / 48;
    double *input = mxGetPr(prhs[0]);
    plhs[0] = mxCreateDoubleMatrix(4, 17 * n_instances, mxCOMPLEX);
    double *zr = mxGetPr(plhs[0]);
    double *zi = mxGetPi(plhs[0]);
    for (int k = 0; k < n_instances; k++)
    {
        const VectorXd data = Map<const VectorXd>(input + k * 48, 48);
        MatrixXcd sols = solver_toa_upgrade_sat_630(data);
        Index offset = k * sols.size();
        for (Index i = 0; i < sols.size(); i++)
        {
            zr[i + offset] = sols(i).real();
            zi[i + offset] = sols(i).imag();
        }
    }
}
