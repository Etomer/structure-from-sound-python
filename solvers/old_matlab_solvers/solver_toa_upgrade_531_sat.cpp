#include <Eigen/Dense>
#include "mex.h"

using namespace Eigen;

MatrixXcd solver_toa_upgrade_531(const VectorXd &data)
{
    // Compute coefficients
    const double *d = data.data();
    VectorXd coeffs(211);
    coeffs[0] = 2 * d[10] * d[11] * d[15] * d[45] - 2 * std::pow(d[14], 2) * d[15] * d[45] - 2 * d[11] * d[12] * d[16] * d[45] + 2 * d[13] * d[14] * d[16] * d[45] - 2 * d[10] * d[13] * d[17] * d[45] + 2 * d[12] * d[14] * d[17] * d[45] - 2 * d[11] * d[12] * d[15] * d[46] + 2 * d[13] * d[14] * d[15] * d[46] + 2 * d[9] * d[11] * d[16] * d[46] - 2 * std::pow(d[13], 2) * d[16] * d[46] + 2 * d[12] * d[13] * d[17] * d[46] - 2 * d[9] * d[14] * d[17] * d[46] - 2 * d[10] * d[13] * d[15] * d[47] + 2 * d[12] * d[14] * d[15] * d[47] + 2 * d[12] * d[13] * d[16] * d[47] - 2 * d[9] * d[14] * d[16] * d[47] + 2 * d[9] * d[10] * d[17] * d[47] - 2 * std::pow(d[12], 2) * d[17] * d[47] - d[9] * d[10] * d[11] * d[54] + d[11] * std::pow(d[12], 2) * d[54] + d[10] * std::pow(d[13], 2) * d[54] - 2 * d[12] * d[13] * d[14] * d[54] + d[9] * std::pow(d[14], 2) * d[54];
    coeffs[1] = 2 * d[11] * d[15] * d[19] * d[45] - 2 * d[13] * d[17] * d[19] * d[45] + 2 * d[10] * d[15] * d[20] * d[45] - 2 * d[12] * d[16] * d[20] * d[45] - 2 * d[11] * d[16] * d[21] * d[45] + 2 * d[14] * d[17] * d[21] * d[45] + 2 * d[14] * d[16] * d[22] * d[45] - 2 * d[10] * d[17] * d[22] * d[45] - 4 * d[14] * d[15] * d[23] * d[45] + 2 * d[13] * d[16] * d[23] * d[45] + 2 * d[12] * d[17] * d[23] * d[45] + 2 * d[10] * d[11] * d[24] * d[45] - 2 * std::pow(d[14], 2) * d[24] * d[45] - 2 * d[11] * d[12] * d[25] * d[45] + 2 * d[13] * d[14] * d[25] * d[45] - 2 * d[10] * d[13] * d[26] * d[45] + 2 * d[12] * d[14] * d[26] * d[45] + 2 * d[11] * d[16] * d[18] * d[46] - 2 * d[14] * d[17] * d[18] * d[46] - 2 * d[12] * d[15] * d[20] * d[46] + 2 * d[9] * d[16] * d[20] * d[46] - 2 * d[11] * d[15] * d[21] * d[46] + 2 * d[13] * d[17] * d[21] * d[46] + 2 * d[14] * d[15] * d[22] * d[46] - 4 * d[13] * d[16] * d[22] * d[46] + 2 * d[12] * d[17] * d[22] * d[46] + 2 * d[13] * d[15] * d[23] * d[46] - 2 * d[9] * d[17] * d[23] * d[46] - 2 * d[11] * d[12] * d[24] * d[46] + 2 * d[13] * d[14] * d[24] * d[46] + 2 * d[9] * d[11] * d[25] * d[46] - 2 * std::pow(d[13], 2) * d[25] * d[46] + 2 * d[12] * d[13] * d[26] * d[46] - 2 * d[9] * d[14] * d[26] * d[46] - 2 * d[14] * d[16] * d[18] * d[47] + 2 * d[10] * d[17] * d[18] * d[47] - 2 * d[13] * d[15] * d[19] * d[47] + 2 * d[9] * d[17] * d[19] * d[47] + 2 * d[14] * d[15] * d[21] * d[47] + 2 * d[13] * d[16] * d[21] * d[47] - 4 * d[12] * d[17] * d[21] * d[47] - 2 * d[10] * d[15] * d[22] * d[47] + 2 * d[12] * d[16] * d[22] * d[47] + 2 * d[12] * d[15] * d[23] * d[47] - 2 * d[9] * d[16] * d[23] * d[47] - 2 * d[10] * d[13] * d[24] * d[47] + 2 * d[12] * d[14] * d[24] * d[47] + 2 * d[12] * d[13] * d[25] * d[47] - 2 * d[9] * d[14] * d[25] * d[47] + 2 * d[9] * d[10] * d[26] * d[47] - 2 * std::pow(d[12], 2) * d[26] * d[47] - d[10] * d[11] * d[18] * d[54] + std::pow(d[14], 2) * d[18] * d[54] - d[9] * d[11] * d[19] * d[54] + std::pow(d[13], 2) * d[19] * d[54] - d[9] * d[10] * d[20] * d[54] + std::pow(d[12], 2) * d[20] * d[54] + 2 * d[11] * d[12] * d[21] * d[54] - 2 * d[13] * d[14] * d[21] * d[54] + 2 * d[10] * d[13] * d[22] * d[54] - 2 * d[12] * d[14] * d[22] * d[54] - 2 * d[12] * d[13] * d[23] * d[54] + 2 * d[9] * d[14] * d[23] * d[54];
    coeffs[2] = 2 * d[15] * d[19] * d[20] * d[45] - 2 * d[16] * d[20] * d[21] * d[45] - 2 * d[17] * d[19] * d[22] * d[45] + 2 * d[17] * d[21] * d[23] * d[45] + 2 * d[16] * d[22] * d[23] * d[45] - 2 * d[15] * std::pow(d[23], 2) * d[45] + 2 * d[11] * d[19] * d[24] * d[45] + 2 * d[10] * d[20] * d[24] * d[45] - 4 * d[14] * d[23] * d[24] * d[45] - 2 * d[12] * d[20] * d[25] * d[45] - 2 * d[11] * d[21] * d[25] * d[45] + 2 * d[14] * d[22] * d[25] * d[45] + 2 * d[13] * d[23] * d[25] * d[45] - 2 * d[13] * d[19] * d[26] * d[45] + 2 * d[14] * d[21] * d[26] * d[45] - 2 * d[10] * d[22] * d[26] * d[45] + 2 * d[12] * d[23] * d[26] * d[45] + 2 * d[16] * d[18] * d[20] * d[46] - 2 * d[15] * d[20] * d[21] * d[46] + 2 * d[17] * d[21] * d[22] * d[46] - 2 * d[16] * std::pow(d[22], 2) * d[46] - 2 * d[17] * d[18] * d[23] * d[46] + 2 * d[15] * d[22] * d[23] * d[46] - 2 * d[12] * d[20] * d[24] * d[46] - 2 * d[11] * d[21] * d[24] * d[46] + 2 * d[14] * d[22] * d[24] * d[46] + 2 * d[13] * d[23] * d[24] * d[46] + 2 * d[11] * d[18] * d[25] * d[46] + 2 * d[9] * d[20] * d[25] * d[46] - 4 * d[13] * d[22] * d[25] * d[46] - 2 * d[14] * d[18] * d[26] * d[46] + 2 * d[13] * d[21] * d[26] * d[46] + 2 * d[12] * d[22] * d[26] * d[46] - 2 * d[9] * d[23] * d[26] * d[46] + 2 * d[17] * d[18] * d[19] * d[47] - 2 * d[17] * std::pow(d[21], 2) * d[47] - 2 * d[15] * d[19] * d[22] * d[47] + 2 * d[16] * d[21] * d[22] * d[47] - 2 * d[16] * d[18] * d[23] * d[47] + 2 * d[15] * d[21] * d[23] * d[47] - 2 * d[13] * d[19] * d[24] * d[47] + 2 * d[14] * d[21] * d[24] * d[47] - 2 * d[10] * d[22] * d[24] * d[47] + 2 * d[12] * d[23] * d[24] * d[47] - 2 * d[14] * d[18] * d[25] * d[47] + 2 * d[13] * d[21] * d[25] * d[47] + 2 * d[12] * d[22] * d[25] * d[47] - 2 * d[9] * d[23] * d[25] * d[47] + 2 * d[10] * d[18] * d[26] * d[47] + 2 * d[9] * d[19] * d[26] * d[47] - 4 * d[12] * d[21] * d[26] * d[47] - d[11] * d[18] * d[19] * d[54] - d[10] * d[18] * d[20] * d[54] - d[9] * d[19] * d[20] * d[54] + 2 * d[12] * d[20] * d[21] * d[54] + d[11] * std::pow(d[21], 2) * d[54] + 2 * d[13] * d[19] * d[22] * d[54] - 2 * d[14] * d[21] * d[22] * d[54] + d[10] * std::pow(d[22], 2) * d[54] + 2 * d[14] * d[18] * d[23] * d[54] - 2 * d[13] * d[21] * d[23] * d[54] - 2 * d[12] * d[22] * d[23] * d[54] + d[9] * std::pow(d[23], 2) * d[54];
    coeffs[3] = 2 * d[19] * d[20] * d[24] * d[45] - 2 * std::pow(d[23], 2) * d[24] * d[45] - 2 * d[20] * d[21] * d[25] * d[45] + 2 * d[22] * d[23] * d[25] * d[45] - 2 * d[19] * d[22] * d[26] * d[45] + 2 * d[21] * d[23] * d[26] * d[45] - 2 * d[20] * d[21] * d[24] * d[46] + 2 * d[22] * d[23] * d[24] * d[46] + 2 * d[18] * d[20] * d[25] * d[46] - 2 * std::pow(d[22], 2) * d[25] * d[46] + 2 * d[21] * d[22] * d[26] * d[46] - 2 * d[18] * d[23] * d[26] * d[46] - 2 * d[19] * d[22] * d[24] * d[47] + 2 * d[21] * d[23] * d[24] * d[47] + 2 * d[21] * d[22] * d[25] * d[47] - 2 * d[18] * d[23] * d[25] * d[47] + 2 * d[18] * d[19] * d[26] * d[47] - 2 * std::pow(d[21], 2) * d[26] * d[47] - d[18] * d[19] * d[20] * d[54] + d[20] * std::pow(d[21], 2) * d[54] + d[19] * std::pow(d[22], 2) * d[54] - 2 * d[21] * d[22] * d[23] * d[54] + d[18] * std::pow(d[23], 2) * d[54];
    coeffs[4] = 2 * d[11] * d[15] * d[28] * d[45] - 2 * d[13] * d[17] * d[28] * d[45] + 2 * d[10] * d[15] * d[29] * d[45] - 2 * d[12] * d[16] * d[29] * d[45] - 2 * d[11] * d[16] * d[30] * d[45] + 2 * d[14] * d[17] * d[30] * d[45] + 2 * d[14] * d[16] * d[31] * d[45] - 2 * d[10] * d[17] * d[31] * d[45] - 4 * d[14] * d[15] * d[32] * d[45] + 2 * d[13] * d[16] * d[32] * d[45] + 2 * d[12] * d[17] * d[32] * d[45] + 2 * d[10] * d[11] * d[33] * d[45] - 2 * std::pow(d[14], 2) * d[33] * d[45] - 2 * d[11] * d[12] * d[34] * d[45] + 2 * d[13] * d[14] * d[34] * d[45] - 2 * d[10] * d[13] * d[35] * d[45] + 2 * d[12] * d[14] * d[35] * d[45] + 2 * d[11] * d[16] * d[27] * d[46] - 2 * d[14] * d[17] * d[27] * d[46] - 2 * d[12] * d[15] * d[29] * d[46] + 2 * d[9] * d[16] * d[29] * d[46] - 2 * d[11] * d[15] * d[30] * d[46] + 2 * d[13] * d[17] * d[30] * d[46] + 2 * d[14] * d[15] * d[31] * d[46] - 4 * d[13] * d[16] * d[31] * d[46] + 2 * d[12] * d[17] * d[31] * d[46] + 2 * d[13] * d[15] * d[32] * d[46] - 2 * d[9] * d[17] * d[32] * d[46] - 2 * d[11] * d[12] * d[33] * d[46] + 2 * d[13] * d[14] * d[33] * d[46] + 2 * d[9] * d[11] * d[34] * d[46] - 2 * std::pow(d[13], 2) * d[34] * d[46] + 2 * d[12] * d[13] * d[35] * d[46] - 2 * d[9] * d[14] * d[35] * d[46] - 2 * d[14] * d[16] * d[27] * d[47] + 2 * d[10] * d[17] * d[27] * d[47] - 2 * d[13] * d[15] * d[28] * d[47] + 2 * d[9] * d[17] * d[28] * d[47] + 2 * d[14] * d[15] * d[30] * d[47] + 2 * d[13] * d[16] * d[30] * d[47] - 4 * d[12] * d[17] * d[30] * d[47] - 2 * d[10] * d[15] * d[31] * d[47] + 2 * d[12] * d[16] * d[31] * d[47] + 2 * d[12] * d[15] * d[32] * d[47] - 2 * d[9] * d[16] * d[32] * d[47] - 2 * d[10] * d[13] * d[33] * d[47] + 2 * d[12] * d[14] * d[33] * d[47] + 2 * d[12] * d[13] * d[34] * d[47] - 2 * d[9] * d[14] * d[34] * d[47] + 2 * d[9] * d[10] * d[35] * d[47] - 2 * std::pow(d[12], 2) * d[35] * d[47] - d[10] * d[11] * d[27] * d[54] + std::pow(d[14], 2) * d[27] * d[54] - d[9] * d[11] * d[28] * d[54] + std::pow(d[13], 2) * d[28] * d[54] - d[9] * d[10] * d[29] * d[54] + std::pow(d[12], 2) * d[29] * d[54] + 2 * d[11] * d[12] * d[30] * d[54] - 2 * d[13] * d[14] * d[30] * d[54] + 2 * d[10] * d[13] * d[31] * d[54] - 2 * d[12] * d[14] * d[31] * d[54] - 2 * d[12] * d[13] * d[32] * d[54] + 2 * d[9] * d[14] * d[32] * d[54];
    coeffs[5] = 2 * d[15] * d[20] * d[28] * d[45] - 2 * d[17] * d[22] * d[28] * d[45] + 2 * d[11] * d[24] * d[28] * d[45] - 2 * d[13] * d[26] * d[28] * d[45] + 2 * d[15] * d[19] * d[29] * d[45] - 2 * d[16] * d[21] * d[29] * d[45] + 2 * d[10] * d[24] * d[29] * d[45] - 2 * d[12] * d[25] * d[29] * d[45] - 2 * d[16] * d[20] * d[30] * d[45] + 2 * d[17] * d[23] * d[30] * d[45] - 2 * d[11] * d[25] * d[30] * d[45] + 2 * d[14] * d[26] * d[30] * d[45] - 2 * d[17] * d[19] * d[31] * d[45] + 2 * d[16] * d[23] * d[31] * d[45] + 2 * d[14] * d[25] * d[31] * d[45] - 2 * d[10] * d[26] * d[31] * d[45] + 2 * d[17] * d[21] * d[32] * d[45] + 2 * d[16] * d[22] * d[32] * d[45] - 4 * d[15] * d[23] * d[32] * d[45] - 4 * d[14] * d[24] * d[32] * d[45] + 2 * d[13] * d[25] * d[32] * d[45] + 2 * d[12] * d[26] * d[32] * d[45] + 2 * d[11] * d[19] * d[33] * d[45] + 2 * d[10] * d[20] * d[33] * d[45] - 4 * d[14] * d[23] * d[33] * d[45] - 2 * d[12] * d[20] * d[34] * d[45] - 2 * d[11] * d[21] * d[34] * d[45] + 2 * d[14] * d[22] * d[34] * d[45] + 2 * d[13] * d[23] * d[34] * d[45] - 2 * d[13] * d[19] * d[35] * d[45] + 2 * d[14] * d[21] * d[35] * d[45] - 2 * d[10] * d[22] * d[35] * d[45] + 2 * d[12] * d[23] * d[35] * d[45] + 2 * d[16] * d[20] * d[27] * d[46] - 2 * d[17] * d[23] * d[27] * d[46] + 2 * d[11] * d[25] * d[27] * d[46] - 2 * d[14] * d[26] * d[27] * d[46] + 2 * d[16] * d[18] * d[29] * d[46] - 2 * d[15] * d[21] * d[29] * d[46] - 2 * d[12] * d[24] * d[29] * d[46] + 2 * d[9] * d[25] * d[29] * d[46] - 2 * d[15] * d[20] * d[30] * d[46] + 2 * d[17] * d[22] * d[30] * d[46] - 2 * d[11] * d[24] * d[30] * d[46] + 2 * d[13] * d[26] * d[30] * d[46] + 2 * d[17] * d[21] * d[31] * d[46] - 4 * d[16] * d[22] * d[31] * d[46] + 2 * d[15] * d[23] * d[31] * d[46] + 2 * d[14] * d[24] * d[31] * d[46] - 4 * d[13] * d[25] * d[31] * d[46] + 2 * d[12] * d[26] * d[31] * d[46] - 2 * d[17] * d[18] * d[32] * d[46] + 2 * d[15] * d[22] * d[32] * d[46] + 2 * d[13] * d[24] * d[32] * d[46] - 2 * d[9] * d[26] * d[32] * d[46] - 2 * d[12] * d[20] * d[33] * d[46] - 2 * d[11] * d[21] * d[33] * d[46] + 2 * d[14] * d[22] * d[33] * d[46] + 2 * d[13] * d[23] * d[33] * d[46] + 2 * d[11] * d[18] * d[34] * d[46] + 2 * d[9] * d[20] * d[34] * d[46] - 4 * d[13] * d[22] * d[34] * d[46] - 2 * d[14] * d[18] * d[35] * d[46] + 2 * d[13] * d[21] * d[35] * d[46] + 2 * d[12] * d[22] * d[35] * d[46] - 2 * d[9] * d[23] * d[35] * d[46] + 2 * d[17] * d[19] * d[27] * d[47] - 2 * d[16] * d[23] * d[27] * d[47] - 2 * d[14] * d[25] * d[27] * d[47] + 2 * d[10] * d[26] * d[27] * d[47] + 2 * d[17] * d[18] * d[28] * d[47] - 2 * d[15] * d[22] * d[28] * d[47] - 2 * d[13] * d[24] * d[28] * d[47] + 2 * d[9] * d[26] * d[28] * d[47] - 4 * d[17] * d[21] * d[30] * d[47] + 2 * d[16] * d[22] * d[30] * d[47] + 2 * d[15] * d[23] * d[30] * d[47] + 2 * d[14] * d[24] * d[30] * d[47] + 2 * d[13] * d[25] * d[30] * d[47] - 4 * d[12] * d[26] * d[30] * d[47] - 2 * d[15] * d[19] * d[31] * d[47] + 2 * d[16] * d[21] * d[31] * d[47] - 2 * d[10] * d[24] * d[31] * d[47] + 2 * d[12] * d[25] * d[31] * d[47] - 2 * d[16] * d[18] * d[32] * d[47] + 2 * d[15] * d[21] * d[32] * d[47] + 2 * d[12] * d[24] * d[32] * d[47] - 2 * d[9] * d[25] * d[32] * d[47] - 2 * d[13] * d[19] * d[33] * d[47] + 2 * d[14] * d[21] * d[33] * d[47] - 2 * d[10] * d[22] * d[33] * d[47] + 2 * d[12] * d[23] * d[33] * d[47] - 2 * d[14] * d[18] * d[34] * d[47] + 2 * d[13] * d[21] * d[34] * d[47] + 2 * d[12] * d[22] * d[34] * d[47] - 2 * d[9] * d[23] * d[34] * d[47] + 2 * d[10] * d[18] * d[35] * d[47] + 2 * d[9] * d[19] * d[35] * d[47] - 4 * d[12] * d[21] * d[35] * d[47] - d[11] * d[19] * d[27] * d[54] - d[10] * d[20] * d[27] * d[54] + 2 * d[14] * d[23] * d[27] * d[54] - d[11] * d[18] * d[28] * d[54] - d[9] * d[20] * d[28] * d[54] + 2 * d[13] * d[22] * d[28] * d[54] - d[10] * d[18] * d[29] * d[54] - d[9] * d[19] * d[29] * d[54] + 2 * d[12] * d[21] * d[29] * d[54] + 2 * d[12] * d[20] * d[30] * d[54] + 2 * d[11] * d[21] * d[30] * d[54] - 2 * d[14] * d[22] * d[30] * d[54] - 2 * d[13] * d[23] * d[30] * d[54] + 2 * d[13] * d[19] * d[31] * d[54] - 2 * d[14] * d[21] * d[31] * d[54] + 2 * d[10] * d[22] * d[31] * d[54] - 2 * d[12] * d[23] * d[31] * d[54] + 2 * d[14] * d[18] * d[32] * d[54] - 2 * d[13] * d[21] * d[32] * d[54] - 2 * d[12] * d[22] * d[32] * d[54] + 2 * d[9] * d[23] * d[32] * d[54];
    coeffs[6] = 2 * d[20] * d[24] * d[28] * d[45] - 2 * d[22] * d[26] * d[28] * d[45] + 2 * d[19] * d[24] * d[29] * d[45] - 2 * d[21] * d[25] * d[29] * d[45] - 2 * d[20] * d[25] * d[30] * d[45] + 2 * d[23] * d[26] * d[30] * d[45] + 2 * d[23] * d[25] * d[31] * d[45] - 2 * d[19] * d[26] * d[31] * d[45] - 4 * d[23] * d[24] * d[32] * d[45] + 2 * d[22] * d[25] * d[32] * d[45] + 2 * d[21] * d[26] * d[32] * d[45] + 2 * d[19] * d[20] * d[33] * d[45] - 2 * std::pow(d[23], 2) * d[33] * d[45] - 2 * d[20] * d[21] * d[34] * d[45] + 2 * d[22] * d[23] * d[34] * d[45] - 2 * d[19] * d[22] * d[35] * d[45] + 2 * d[21] * d[23] * d[35] * d[45] + 2 * d[20] * d[25] * d[27] * d[46] - 2 * d[23] * d[26] * d[27] * d[46] - 2 * d[21] * d[24] * d[29] * d[46] + 2 * d[18] * d[25] * d[29] * d[46] - 2 * d[20] * d[24] * d[30] * d[46] + 2 * d[22] * d[26] * d[30] * d[46] + 2 * d[23] * d[24] * d[31] * d[46] - 4 * d[22] * d[25] * d[31] * d[46] + 2 * d[21] * d[26] * d[31] * d[46] + 2 * d[22] * d[24] * d[32] * d[46] - 2 * d[18] * d[26] * d[32] * d[46] - 2 * d[20] * d[21] * d[33] * d[46] + 2 * d[22] * d[23] * d[33] * d[46] + 2 * d[18] * d[20] * d[34] * d[46] - 2 * std::pow(d[22], 2) * d[34] * d[46] + 2 * d[21] * d[22] * d[35] * d[46] - 2 * d[18] * d[23] * d[35] * d[46] - 2 * d[23] * d[25] * d[27] * d[47] + 2 * d[19] * d[26] * d[27] * d[47] - 2 * d[22] * d[24] * d[28] * d[47] + 2 * d[18] * d[26] * d[28] * d[47] + 2 * d[23] * d[24] * d[30] * d[47] + 2 * d[22] * d[25] * d[30] * d[47] - 4 * d[21] * d[26] * d[30] * d[47] - 2 * d[19] * d[24] * d[31] * d[47] + 2 * d[21] * d[25] * d[31] * d[47] + 2 * d[21] * d[24] * d[32] * d[47] - 2 * d[18] * d[25] * d[32] * d[47] - 2 * d[19] * d[22] * d[33] * d[47] + 2 * d[21] * d[23] * d[33] * d[47] + 2 * d[21] * d[22] * d[34] * d[47] - 2 * d[18] * d[23] * d[34] * d[47] + 2 * d[18] * d[19] * d[35] * d[47] - 2 * std::pow(d[21], 2) * d[35] * d[47] - d[19] * d[20] * d[27] * d[54] + std::pow(d[23], 2) * d[27] * d[54] - d[18] * d[20] * d[28] * d[54] + std::pow(d[22], 2) * d[28] * d[54] - d[18] * d[19] * d[29] * d[54] + std::pow(d[21], 2) * d[29] * d[54] + 2 * d[20] * d[21] * d[30] * d[54] - 2 * d[22] * d[23] * d[30] * d[54] + 2 * d[19] * d[22] * d[31] * d[54] - 2 * d[21] * d[23] * d[31] * d[54] - 2 * d[21] * d[22] * d[32] * d[54] + 2 * d[18] * d[23] * d[32] * d[54];
    coeffs[7] = 2 * d[15] * d[28] * d[29] * d[45] - 2 * d[16] * d[29] * d[30] * d[45] - 2 * d[17] * d[28] * d[31] * d[45] + 2 * d[17] * d[30] * d[32] * d[45] + 2 * d[16] * d[31] * d[32] * d[45] - 2 * d[15] * std::pow(d[32], 2) * d[45] + 2 * d[11] * d[28] * d[33] * d[45] + 2 * d[10] * d[29] * d[33] * d[45] - 4 * d[14] * d[32] * d[33] * d[45] - 2 * d[12] * d[29] * d[34] * d[45] - 2 * d[11] * d[30] * d[34] * d[45] + 2 * d[14] * d[31] * d[34] * d[45] + 2 * d[13] * d[32] * d[34] * d[45] - 2 * d[13] * d[28] * d[35] * d[45] + 2 * d[14] * d[30] * d[35] * d[45] - 2 * d[10] * d[31] * d[35] * d[45] + 2 * d[12] * d[32] * d[35] * d[45] + 2 * d[16] * d[27] * d[29] * d[46] - 2 * d[15] * d[29] * d[30] * d[46] + 2 * d[17] * d[30] * d[31] * d[46] - 2 * d[16] * std::pow(d[31], 2) * d[46] - 2 * d[17] * d[27] * d[32] * d[46] + 2 * d[15] * d[31] * d[32] * d[46] - 2 * d[12] * d[29] * d[33] * d[46] - 2 * d[11] * d[30] * d[33] * d[46] + 2 * d[14] * d[31] * d[33] * d[46] + 2 * d[13] * d[32] * d[33] * d[46] + 2 * d[11] * d[27] * d[34] * d[46] + 2 * d[9] * d[29] * d[34] * d[46] - 4 * d[13] * d[31] * d[34] * d[46] - 2 * d[14] * d[27] * d[35] * d[46] + 2 * d[13] * d[30] * d[35] * d[46] + 2 * d[12] * d[31] * d[35] * d[46] - 2 * d[9] * d[32] * d[35] * d[46] + 2 * d[17] * d[27] * d[28] * d[47] - 2 * d[17] * std::pow(d[30], 2) * d[47] - 2 * d[15] * d[28] * d[31] * d[47] + 2 * d[16] * d[30] * d[31] * d[47] - 2 * d[16] * d[27] * d[32] * d[47] + 2 * d[15] * d[30] * d[32] * d[47] - 2 * d[13] * d[28] * d[33] * d[47] + 2 * d[14] * d[30] * d[33] * d[47] - 2 * d[10] * d[31] * d[33] * d[47] + 2 * d[12] * d[32] * d[33] * d[47] - 2 * d[14] * d[27] * d[34] * d[47] + 2 * d[13] * d[30] * d[34] * d[47] + 2 * d[12] * d[31] * d[34] * d[47] - 2 * d[9] * d[32] * d[34] * d[47] + 2 * d[10] * d[27] * d[35] * d[47] + 2 * d[9] * d[28] * d[35] * d[47] - 4 * d[12] * d[30] * d[35] * d[47] - d[11] * d[27] * d[28] * d[54] - d[10] * d[27] * d[29] * d[54] - d[9] * d[28] * d[29] * d[54] + 2 * d[12] * d[29] * d[30] * d[54] + d[11] * std::pow(d[30], 2) * d[54] + 2 * d[13] * d[28] * d[31] * d[54] - 2 * d[14] * d[30] * d[31] * d[54] + d[10] * std::pow(d[31], 2) * d[54] + 2 * d[14] * d[27] * d[32] * d[54] - 2 * d[13] * d[30] * d[32] * d[54] - 2 * d[12] * d[31] * d[32] * d[54] + d[9] * std::pow(d[32], 2) * d[54];
    coeffs[8] = 2 * d[24] * d[28] * d[29] * d[45] - 2 * d[25] * d[29] * d[30] * d[45] - 2 * d[26] * d[28] * d[31] * d[45] + 2 * d[26] * d[30] * d[32] * d[45] + 2 * d[25] * d[31] * d[32] * d[45] - 2 * d[24] * std::pow(d[32], 2) * d[45] + 2 * d[20] * d[28] * d[33] * d[45] + 2 * d[19] * d[29] * d[33] * d[45] - 4 * d[23] * d[32] * d[33] * d[45] - 2 * d[21] * d[29] * d[34] * d[45] - 2 * d[20] * d[30] * d[34] * d[45] + 2 * d[23] * d[31] * d[34] * d[45] + 2 * d[22] * d[32] * d[34] * d[45] - 2 * d[22] * d[28] * d[35] * d[45] + 2 * d[23] * d[30] * d[35] * d[45] - 2 * d[19] * d[31] * d[35] * d[45] + 2 * d[21] * d[32] * d[35] * d[45] + 2 * d[25] * d[27] * d[29] * d[46] - 2 * d[24] * d[29] * d[30] * d[46] + 2 * d[26] * d[30] * d[31] * d[46] - 2 * d[25] * std::pow(d[31], 2) * d[46] - 2 * d[26] * d[27] * d[32] * d[46] + 2 * d[24] * d[31] * d[32] * d[46] - 2 * d[21] * d[29] * d[33] * d[46] - 2 * d[20] * d[30] * d[33] * d[46] + 2 * d[23] * d[31] * d[33] * d[46] + 2 * d[22] * d[32] * d[33] * d[46] + 2 * d[20] * d[27] * d[34] * d[46] + 2 * d[18] * d[29] * d[34] * d[46] - 4 * d[22] * d[31] * d[34] * d[46] - 2 * d[23] * d[27] * d[35] * d[46] + 2 * d[22] * d[30] * d[35] * d[46] + 2 * d[21] * d[31] * d[35] * d[46] - 2 * d[18] * d[32] * d[35] * d[46] + 2 * d[26] * d[27] * d[28] * d[47] - 2 * d[26] * std::pow(d[30], 2) * d[47] - 2 * d[24] * d[28] * d[31] * d[47] + 2 * d[25] * d[30] * d[31] * d[47] - 2 * d[25] * d[27] * d[32] * d[47] + 2 * d[24] * d[30] * d[32] * d[47] - 2 * d[22] * d[28] * d[33] * d[47] + 2 * d[23] * d[30] * d[33] * d[47] - 2 * d[19] * d[31] * d[33] * d[47] + 2 * d[21] * d[32] * d[33] * d[47] - 2 * d[23] * d[27] * d[34] * d[47] + 2 * d[22] * d[30] * d[34] * d[47] + 2 * d[21] * d[31] * d[34] * d[47] - 2 * d[18] * d[32] * d[34] * d[47] + 2 * d[19] * d[27] * d[35] * d[47] + 2 * d[18] * d[28] * d[35] * d[47] - 4 * d[21] * d[30] * d[35] * d[47] - d[20] * d[27] * d[28] * d[54] - d[19] * d[27] * d[29] * d[54] - d[18] * d[28] * d[29] * d[54] + 2 * d[21] * d[29] * d[30] * d[54] + d[20] * std::pow(d[30], 2) * d[54] + 2 * d[22] * d[28] * d[31] * d[54] - 2 * d[23] * d[30] * d[31] * d[54] + d[19] * std::pow(d[31], 2) * d[54] + 2 * d[23] * d[27] * d[32] * d[54] - 2 * d[22] * d[30] * d[32] * d[54] - 2 * d[21] * d[31] * d[32] * d[54] + d[18] * std::pow(d[32], 2) * d[54];
    coeffs[9] = 2 * d[28] * d[29] * d[33] * d[45] - 2 * std::pow(d[32], 2) * d[33] * d[45] - 2 * d[29] * d[30] * d[34] * d[45] + 2 * d[31] * d[32] * d[34] * d[45] - 2 * d[28] * d[31] * d[35] * d[45] + 2 * d[30] * d[32] * d[35] * d[45] - 2 * d[29] * d[30] * d[33] * d[46] + 2 * d[31] * d[32] * d[33] * d[46] + 2 * d[27] * d[29] * d[34] * d[46] - 2 * std::pow(d[31], 2) * d[34] * d[46] + 2 * d[30] * d[31] * d[35] * d[46] - 2 * d[27] * d[32] * d[35] * d[46] - 2 * d[28] * d[31] * d[33] * d[47] + 2 * d[30] * d[32] * d[33] * d[47] + 2 * d[30] * d[31] * d[34] * d[47] - 2 * d[27] * d[32] * d[34] * d[47] + 2 * d[27] * d[28] * d[35] * d[47] - 2 * std::pow(d[30], 2) * d[35] * d[47] - d[27] * d[28] * d[29] * d[54] + d[29] * std::pow(d[30], 2) * d[54] + d[28] * std::pow(d[31], 2) * d[54] - 2 * d[30] * d[31] * d[32] * d[54] + d[27] * std::pow(d[32], 2) * d[54];
    coeffs[10] = 2 * d[11] * d[15] * d[37] * d[45] - 2 * d[13] * d[17] * d[37] * d[45] + 2 * d[10] * d[15] * d[38] * d[45] - 2 * d[12] * d[16] * d[38] * d[45] - 2 * d[11] * d[16] * d[39] * d[45] + 2 * d[14] * d[17] * d[39] * d[45] + 2 * d[14] * d[16] * d[40] * d[45] - 2 * d[10] * d[17] * d[40] * d[45] - 4 * d[14] * d[15] * d[41] * d[45] + 2 * d[13] * d[16] * d[41] * d[45] + 2 * d[12] * d[17] * d[41] * d[45] + 2 * d[10] * d[11] * d[42] * d[45] - 2 * std::pow(d[14], 2) * d[42] * d[45] - 2 * d[11] * d[12] * d[43] * d[45] + 2 * d[13] * d[14] * d[43] * d[45] - 2 * d[10] * d[13] * d[44] * d[45] + 2 * d[12] * d[14] * d[44] * d[45] + 2 * d[11] * d[16] * d[36] * d[46] - 2 * d[14] * d[17] * d[36] * d[46] - 2 * d[12] * d[15] * d[38] * d[46] + 2 * d[9] * d[16] * d[38] * d[46] - 2 * d[11] * d[15] * d[39] * d[46] + 2 * d[13] * d[17] * d[39] * d[46] + 2 * d[14] * d[15] * d[40] * d[46] - 4 * d[13] * d[16] * d[40] * d[46] + 2 * d[12] * d[17] * d[40] * d[46] + 2 * d[13] * d[15] * d[41] * d[46] - 2 * d[9] * d[17] * d[41] * d[46] - 2 * d[11] * d[12] * d[42] * d[46] + 2 * d[13] * d[14] * d[42] * d[46] + 2 * d[9] * d[11] * d[43] * d[46] - 2 * std::pow(d[13], 2) * d[43] * d[46] + 2 * d[12] * d[13] * d[44] * d[46] - 2 * d[9] * d[14] * d[44] * d[46] - 2 * d[14] * d[16] * d[36] * d[47] + 2 * d[10] * d[17] * d[36] * d[47] - 2 * d[13] * d[15] * d[37] * d[47] + 2 * d[9] * d[17] * d[37] * d[47] + 2 * d[14] * d[15] * d[39] * d[47] + 2 * d[13] * d[16] * d[39] * d[47] - 4 * d[12] * d[17] * d[39] * d[47] - 2 * d[10] * d[15] * d[40] * d[47] + 2 * d[12] * d[16] * d[40] * d[47] + 2 * d[12] * d[15] * d[41] * d[47] - 2 * d[9] * d[16] * d[41] * d[47] - 2 * d[10] * d[13] * d[42] * d[47] + 2 * d[12] * d[14] * d[42] * d[47] + 2 * d[12] * d[13] * d[43] * d[47] - 2 * d[9] * d[14] * d[43] * d[47] + 2 * d[9] * d[10] * d[44] * d[47] - 2 * std::pow(d[12], 2) * d[44] * d[47] - d[10] * d[11] * d[36] * d[54] + std::pow(d[14], 2) * d[36] * d[54] - d[9] * d[11] * d[37] * d[54] + std::pow(d[13], 2) * d[37] * d[54] - d[9] * d[10] * d[38] * d[54] + std::pow(d[12], 2) * d[38] * d[54] + 2 * d[11] * d[12] * d[39] * d[54] - 2 * d[13] * d[14] * d[39] * d[54] + 2 * d[10] * d[13] * d[40] * d[54] - 2 * d[12] * d[14] * d[40] * d[54] - 2 * d[12] * d[13] * d[41] * d[54] + 2 * d[9] * d[14] * d[41] * d[54];
    coeffs[11] = 2 * d[15] * d[20] * d[37] * d[45] - 2 * d[17] * d[22] * d[37] * d[45] + 2 * d[11] * d[24] * d[37] * d[45] - 2 * d[13] * d[26] * d[37] * d[45] + 2 * d[15] * d[19] * d[38] * d[45] - 2 * d[16] * d[21] * d[38] * d[45] + 2 * d[10] * d[24] * d[38] * d[45] - 2 * d[12] * d[25] * d[38] * d[45] - 2 * d[16] * d[20] * d[39] * d[45] + 2 * d[17] * d[23] * d[39] * d[45] - 2 * d[11] * d[25] * d[39] * d[45] + 2 * d[14] * d[26] * d[39] * d[45] - 2 * d[17] * d[19] * d[40] * d[45] + 2 * d[16] * d[23] * d[40] * d[45] + 2 * d[14] * d[25] * d[40] * d[45] - 2 * d[10] * d[26] * d[40] * d[45] + 2 * d[17] * d[21] * d[41] * d[45] + 2 * d[16] * d[22] * d[41] * d[45] - 4 * d[15] * d[23] * d[41] * d[45] - 4 * d[14] * d[24] * d[41] * d[45] + 2 * d[13] * d[25] * d[41] * d[45] + 2 * d[12] * d[26] * d[41] * d[45] + 2 * d[11] * d[19] * d[42] * d[45] + 2 * d[10] * d[20] * d[42] * d[45] - 4 * d[14] * d[23] * d[42] * d[45] - 2 * d[12] * d[20] * d[43] * d[45] - 2 * d[11] * d[21] * d[43] * d[45] + 2 * d[14] * d[22] * d[43] * d[45] + 2 * d[13] * d[23] * d[43] * d[45] - 2 * d[13] * d[19] * d[44] * d[45] + 2 * d[14] * d[21] * d[44] * d[45] - 2 * d[10] * d[22] * d[44] * d[45] + 2 * d[12] * d[23] * d[44] * d[45] + 2 * d[16] * d[20] * d[36] * d[46] - 2 * d[17] * d[23] * d[36] * d[46] + 2 * d[11] * d[25] * d[36] * d[46] - 2 * d[14] * d[26] * d[36] * d[46] + 2 * d[16] * d[18] * d[38] * d[46] - 2 * d[15] * d[21] * d[38] * d[46] - 2 * d[12] * d[24] * d[38] * d[46] + 2 * d[9] * d[25] * d[38] * d[46] - 2 * d[15] * d[20] * d[39] * d[46] + 2 * d[17] * d[22] * d[39] * d[46] - 2 * d[11] * d[24] * d[39] * d[46] + 2 * d[13] * d[26] * d[39] * d[46] + 2 * d[17] * d[21] * d[40] * d[46] - 4 * d[16] * d[22] * d[40] * d[46] + 2 * d[15] * d[23] * d[40] * d[46] + 2 * d[14] * d[24] * d[40] * d[46] - 4 * d[13] * d[25] * d[40] * d[46] + 2 * d[12] * d[26] * d[40] * d[46] - 2 * d[17] * d[18] * d[41] * d[46] + 2 * d[15] * d[22] * d[41] * d[46] + 2 * d[13] * d[24] * d[41] * d[46] - 2 * d[9] * d[26] * d[41] * d[46] - 2 * d[12] * d[20] * d[42] * d[46] - 2 * d[11] * d[21] * d[42] * d[46] + 2 * d[14] * d[22] * d[42] * d[46] + 2 * d[13] * d[23] * d[42] * d[46] + 2 * d[11] * d[18] * d[43] * d[46] + 2 * d[9] * d[20] * d[43] * d[46] - 4 * d[13] * d[22] * d[43] * d[46] - 2 * d[14] * d[18] * d[44] * d[46] + 2 * d[13] * d[21] * d[44] * d[46] + 2 * d[12] * d[22] * d[44] * d[46] - 2 * d[9] * d[23] * d[44] * d[46] + 2 * d[17] * d[19] * d[36] * d[47] - 2 * d[16] * d[23] * d[36] * d[47] - 2 * d[14] * d[25] * d[36] * d[47] + 2 * d[10] * d[26] * d[36] * d[47] + 2 * d[17] * d[18] * d[37] * d[47] - 2 * d[15] * d[22] * d[37] * d[47] - 2 * d[13] * d[24] * d[37] * d[47] + 2 * d[9] * d[26] * d[37] * d[47] - 4 * d[17] * d[21] * d[39] * d[47] + 2 * d[16] * d[22] * d[39] * d[47] + 2 * d[15] * d[23] * d[39] * d[47] + 2 * d[14] * d[24] * d[39] * d[47] + 2 * d[13] * d[25] * d[39] * d[47] - 4 * d[12] * d[26] * d[39] * d[47] - 2 * d[15] * d[19] * d[40] * d[47] + 2 * d[16] * d[21] * d[40] * d[47] - 2 * d[10] * d[24] * d[40] * d[47] + 2 * d[12] * d[25] * d[40] * d[47] - 2 * d[16] * d[18] * d[41] * d[47] + 2 * d[15] * d[21] * d[41] * d[47] + 2 * d[12] * d[24] * d[41] * d[47] - 2 * d[9] * d[25] * d[41] * d[47] - 2 * d[13] * d[19] * d[42] * d[47] + 2 * d[14] * d[21] * d[42] * d[47] - 2 * d[10] * d[22] * d[42] * d[47] + 2 * d[12] * d[23] * d[42] * d[47] - 2 * d[14] * d[18] * d[43] * d[47] + 2 * d[13] * d[21] * d[43] * d[47] + 2 * d[12] * d[22] * d[43] * d[47] - 2 * d[9] * d[23] * d[43] * d[47] + 2 * d[10] * d[18] * d[44] * d[47] + 2 * d[9] * d[19] * d[44] * d[47] - 4 * d[12] * d[21] * d[44] * d[47] - d[11] * d[19] * d[36] * d[54] - d[10] * d[20] * d[36] * d[54] + 2 * d[14] * d[23] * d[36] * d[54] - d[11] * d[18] * d[37] * d[54] - d[9] * d[20] * d[37] * d[54] + 2 * d[13] * d[22] * d[37] * d[54] - d[10] * d[18] * d[38] * d[54] - d[9] * d[19] * d[38] * d[54] + 2 * d[12] * d[21] * d[38] * d[54] + 2 * d[12] * d[20] * d[39] * d[54] + 2 * d[11] * d[21] * d[39] * d[54] - 2 * d[14] * d[22] * d[39] * d[54] - 2 * d[13] * d[23] * d[39] * d[54] + 2 * d[13] * d[19] * d[40] * d[54] - 2 * d[14] * d[21] * d[40] * d[54] + 2 * d[10] * d[22] * d[40] * d[54] - 2 * d[12] * d[23] * d[40] * d[54] + 2 * d[14] * d[18] * d[41] * d[54] - 2 * d[13] * d[21] * d[41] * d[54] - 2 * d[12] * d[22] * d[41] * d[54] + 2 * d[9] * d[23] * d[41] * d[54];
    coeffs[12] = 2 * d[20] * d[24] * d[37] * d[45] - 2 * d[22] * d[26] * d[37] * d[45] + 2 * d[19] * d[24] * d[38] * d[45] - 2 * d[21] * d[25] * d[38] * d[45] - 2 * d[20] * d[25] * d[39] * d[45] + 2 * d[23] * d[26] * d[39] * d[45] + 2 * d[23] * d[25] * d[40] * d[45] - 2 * d[19] * d[26] * d[40] * d[45] - 4 * d[23] * d[24] * d[41] * d[45] + 2 * d[22] * d[25] * d[41] * d[45] + 2 * d[21] * d[26] * d[41] * d[45] + 2 * d[19] * d[20] * d[42] * d[45] - 2 * std::pow(d[23], 2) * d[42] * d[45] - 2 * d[20] * d[21] * d[43] * d[45] + 2 * d[22] * d[23] * d[43] * d[45] - 2 * d[19] * d[22] * d[44] * d[45] + 2 * d[21] * d[23] * d[44] * d[45] + 2 * d[20] * d[25] * d[36] * d[46] - 2 * d[23] * d[26] * d[36] * d[46] - 2 * d[21] * d[24] * d[38] * d[46] + 2 * d[18] * d[25] * d[38] * d[46] - 2 * d[20] * d[24] * d[39] * d[46] + 2 * d[22] * d[26] * d[39] * d[46] + 2 * d[23] * d[24] * d[40] * d[46] - 4 * d[22] * d[25] * d[40] * d[46] + 2 * d[21] * d[26] * d[40] * d[46] + 2 * d[22] * d[24] * d[41] * d[46] - 2 * d[18] * d[26] * d[41] * d[46] - 2 * d[20] * d[21] * d[42] * d[46] + 2 * d[22] * d[23] * d[42] * d[46] + 2 * d[18] * d[20] * d[43] * d[46] - 2 * std::pow(d[22], 2) * d[43] * d[46] + 2 * d[21] * d[22] * d[44] * d[46] - 2 * d[18] * d[23] * d[44] * d[46] - 2 * d[23] * d[25] * d[36] * d[47] + 2 * d[19] * d[26] * d[36] * d[47] - 2 * d[22] * d[24] * d[37] * d[47] + 2 * d[18] * d[26] * d[37] * d[47] + 2 * d[23] * d[24] * d[39] * d[47] + 2 * d[22] * d[25] * d[39] * d[47] - 4 * d[21] * d[26] * d[39] * d[47] - 2 * d[19] * d[24] * d[40] * d[47] + 2 * d[21] * d[25] * d[40] * d[47] + 2 * d[21] * d[24] * d[41] * d[47] - 2 * d[18] * d[25] * d[41] * d[47] - 2 * d[19] * d[22] * d[42] * d[47] + 2 * d[21] * d[23] * d[42] * d[47] + 2 * d[21] * d[22] * d[43] * d[47] - 2 * d[18] * d[23] * d[43] * d[47] + 2 * d[18] * d[19] * d[44] * d[47] - 2 * std::pow(d[21], 2) * d[44] * d[47] - d[19] * d[20] * d[36] * d[54] + std::pow(d[23], 2) * d[36] * d[54] - d[18] * d[20] * d[37] * d[54] + std::pow(d[22], 2) * d[37] * d[54] - d[18] * d[19] * d[38] * d[54] + std::pow(d[21], 2) * d[38] * d[54] + 2 * d[20] * d[21] * d[39] * d[54] - 2 * d[22] * d[23] * d[39] * d[54] + 2 * d[19] * d[22] * d[40] * d[54] - 2 * d[21] * d[23] * d[40] * d[54] - 2 * d[21] * d[22] * d[41] * d[54] + 2 * d[18] * d[23] * d[41] * d[54];
    coeffs[13] = 2 * d[15] * d[29] * d[37] * d[45] - 2 * d[17] * d[31] * d[37] * d[45] + 2 * d[11] * d[33] * d[37] * d[45] - 2 * d[13] * d[35] * d[37] * d[45] + 2 * d[15] * d[28] * d[38] * d[45] - 2 * d[16] * d[30] * d[38] * d[45] + 2 * d[10] * d[33] * d[38] * d[45] - 2 * d[12] * d[34] * d[38] * d[45] - 2 * d[16] * d[29] * d[39] * d[45] + 2 * d[17] * d[32] * d[39] * d[45] - 2 * d[11] * d[34] * d[39] * d[45] + 2 * d[14] * d[35] * d[39] * d[45] - 2 * d[17] * d[28] * d[40] * d[45] + 2 * d[16] * d[32] * d[40] * d[45] + 2 * d[14] * d[34] * d[40] * d[45] - 2 * d[10] * d[35] * d[40] * d[45] + 2 * d[17] * d[30] * d[41] * d[45] + 2 * d[16] * d[31] * d[41] * d[45] - 4 * d[15] * d[32] * d[41] * d[45] - 4 * d[14] * d[33] * d[41] * d[45] + 2 * d[13] * d[34] * d[41] * d[45] + 2 * d[12] * d[35] * d[41] * d[45] + 2 * d[11] * d[28] * d[42] * d[45] + 2 * d[10] * d[29] * d[42] * d[45] - 4 * d[14] * d[32] * d[42] * d[45] - 2 * d[12] * d[29] * d[43] * d[45] - 2 * d[11] * d[30] * d[43] * d[45] + 2 * d[14] * d[31] * d[43] * d[45] + 2 * d[13] * d[32] * d[43] * d[45] - 2 * d[13] * d[28] * d[44] * d[45] + 2 * d[14] * d[30] * d[44] * d[45] - 2 * d[10] * d[31] * d[44] * d[45] + 2 * d[12] * d[32] * d[44] * d[45] + 2 * d[16] * d[29] * d[36] * d[46] - 2 * d[17] * d[32] * d[36] * d[46] + 2 * d[11] * d[34] * d[36] * d[46] - 2 * d[14] * d[35] * d[36] * d[46] + 2 * d[16] * d[27] * d[38] * d[46] - 2 * d[15] * d[30] * d[38] * d[46] - 2 * d[12] * d[33] * d[38] * d[46] + 2 * d[9] * d[34] * d[38] * d[46] - 2 * d[15] * d[29] * d[39] * d[46] + 2 * d[17] * d[31] * d[39] * d[46] - 2 * d[11] * d[33] * d[39] * d[46] + 2 * d[13] * d[35] * d[39] * d[46] + 2 * d[17] * d[30] * d[40] * d[46] - 4 * d[16] * d[31] * d[40] * d[46] + 2 * d[15] * d[32] * d[40] * d[46] + 2 * d[14] * d[33] * d[40] * d[46] - 4 * d[13] * d[34] * d[40] * d[46] + 2 * d[12] * d[35] * d[40] * d[46] - 2 * d[17] * d[27] * d[41] * d[46] + 2 * d[15] * d[31] * d[41] * d[46] + 2 * d[13] * d[33] * d[41] * d[46] - 2 * d[9] * d[35] * d[41] * d[46] - 2 * d[12] * d[29] * d[42] * d[46] - 2 * d[11] * d[30] * d[42] * d[46] + 2 * d[14] * d[31] * d[42] * d[46] + 2 * d[13] * d[32] * d[42] * d[46] + 2 * d[11] * d[27] * d[43] * d[46] + 2 * d[9] * d[29] * d[43] * d[46] - 4 * d[13] * d[31] * d[43] * d[46] - 2 * d[14] * d[27] * d[44] * d[46] + 2 * d[13] * d[30] * d[44] * d[46] + 2 * d[12] * d[31] * d[44] * d[46] - 2 * d[9] * d[32] * d[44] * d[46] + 2 * d[17] * d[28] * d[36] * d[47] - 2 * d[16] * d[32] * d[36] * d[47] - 2 * d[14] * d[34] * d[36] * d[47] + 2 * d[10] * d[35] * d[36] * d[47] + 2 * d[17] * d[27] * d[37] * d[47] - 2 * d[15] * d[31] * d[37] * d[47] - 2 * d[13] * d[33] * d[37] * d[47] + 2 * d[9] * d[35] * d[37] * d[47] - 4 * d[17] * d[30] * d[39] * d[47] + 2 * d[16] * d[31] * d[39] * d[47] + 2 * d[15] * d[32] * d[39] * d[47] + 2 * d[14] * d[33] * d[39] * d[47] + 2 * d[13] * d[34] * d[39] * d[47] - 4 * d[12] * d[35] * d[39] * d[47] - 2 * d[15] * d[28] * d[40] * d[47] + 2 * d[16] * d[30] * d[40] * d[47] - 2 * d[10] * d[33] * d[40] * d[47] + 2 * d[12] * d[34] * d[40] * d[47] - 2 * d[16] * d[27] * d[41] * d[47] + 2 * d[15] * d[30] * d[41] * d[47] + 2 * d[12] * d[33] * d[41] * d[47] - 2 * d[9] * d[34] * d[41] * d[47] - 2 * d[13] * d[28] * d[42] * d[47] + 2 * d[14] * d[30] * d[42] * d[47] - 2 * d[10] * d[31] * d[42] * d[47] + 2 * d[12] * d[32] * d[42] * d[47] - 2 * d[14] * d[27] * d[43] * d[47] + 2 * d[13] * d[30] * d[43] * d[47] + 2 * d[12] * d[31] * d[43] * d[47] - 2 * d[9] * d[32] * d[43] * d[47] + 2 * d[10] * d[27] * d[44] * d[47] + 2 * d[9] * d[28] * d[44] * d[47] - 4 * d[12] * d[30] * d[44] * d[47] - d[11] * d[28] * d[36] * d[54] - d[10] * d[29] * d[36] * d[54] + 2 * d[14] * d[32] * d[36] * d[54] - d[11] * d[27] * d[37] * d[54] - d[9] * d[29] * d[37] * d[54] + 2 * d[13] * d[31] * d[37] * d[54] - d[10] * d[27] * d[38] * d[54] - d[9] * d[28] * d[38] * d[54] + 2 * d[12] * d[30] * d[38] * d[54] + 2 * d[12] * d[29] * d[39] * d[54] + 2 * d[11] * d[30] * d[39] * d[54] - 2 * d[14] * d[31] * d[39] * d[54] - 2 * d[13] * d[32] * d[39] * d[54] + 2 * d[13] * d[28] * d[40] * d[54] - 2 * d[14] * d[30] * d[40] * d[54] + 2 * d[10] * d[31] * d[40] * d[54] - 2 * d[12] * d[32] * d[40] * d[54] + 2 * d[14] * d[27] * d[41] * d[54] - 2 * d[13] * d[30] * d[41] * d[54] - 2 * d[12] * d[31] * d[41] * d[54] + 2 * d[9] * d[32] * d[41] * d[54];
    coeffs[14] = 2 * d[24] * d[29] * d[37] * d[45] - 2 * d[26] * d[31] * d[37] * d[45] + 2 * d[20] * d[33] * d[37] * d[45] - 2 * d[22] * d[35] * d[37] * d[45] + 2 * d[24] * d[28] * d[38] * d[45] - 2 * d[25] * d[30] * d[38] * d[45] + 2 * d[19] * d[33] * d[38] * d[45] - 2 * d[21] * d[34] * d[38] * d[45] - 2 * d[25] * d[29] * d[39] * d[45] + 2 * d[26] * d[32] * d[39] * d[45] - 2 * d[20] * d[34] * d[39] * d[45] + 2 * d[23] * d[35] * d[39] * d[45] - 2 * d[26] * d[28] * d[40] * d[45] + 2 * d[25] * d[32] * d[40] * d[45] + 2 * d[23] * d[34] * d[40] * d[45] - 2 * d[19] * d[35] * d[40] * d[45] + 2 * d[26] * d[30] * d[41] * d[45] + 2 * d[25] * d[31] * d[41] * d[45] - 4 * d[24] * d[32] * d[41] * d[45] - 4 * d[23] * d[33] * d[41] * d[45] + 2 * d[22] * d[34] * d[41] * d[45] + 2 * d[21] * d[35] * d[41] * d[45] + 2 * d[20] * d[28] * d[42] * d[45] + 2 * d[19] * d[29] * d[42] * d[45] - 4 * d[23] * d[32] * d[42] * d[45] - 2 * d[21] * d[29] * d[43] * d[45] - 2 * d[20] * d[30] * d[43] * d[45] + 2 * d[23] * d[31] * d[43] * d[45] + 2 * d[22] * d[32] * d[43] * d[45] - 2 * d[22] * d[28] * d[44] * d[45] + 2 * d[23] * d[30] * d[44] * d[45] - 2 * d[19] * d[31] * d[44] * d[45] + 2 * d[21] * d[32] * d[44] * d[45] + 2 * d[25] * d[29] * d[36] * d[46] - 2 * d[26] * d[32] * d[36] * d[46] + 2 * d[20] * d[34] * d[36] * d[46] - 2 * d[23] * d[35] * d[36] * d[46] + 2 * d[25] * d[27] * d[38] * d[46] - 2 * d[24] * d[30] * d[38] * d[46] - 2 * d[21] * d[33] * d[38] * d[46] + 2 * d[18] * d[34] * d[38] * d[46] - 2 * d[24] * d[29] * d[39] * d[46] + 2 * d[26] * d[31] * d[39] * d[46] - 2 * d[20] * d[33] * d[39] * d[46] + 2 * d[22] * d[35] * d[39] * d[46] + 2 * d[26] * d[30] * d[40] * d[46] - 4 * d[25] * d[31] * d[40] * d[46] + 2 * d[24] * d[32] * d[40] * d[46] + 2 * d[23] * d[33] * d[40] * d[46] - 4 * d[22] * d[34] * d[40] * d[46] + 2 * d[21] * d[35] * d[40] * d[46] - 2 * d[26] * d[27] * d[41] * d[46] + 2 * d[24] * d[31] * d[41] * d[46] + 2 * d[22] * d[33] * d[41] * d[46] - 2 * d[18] * d[35] * d[41] * d[46] - 2 * d[21] * d[29] * d[42] * d[46] - 2 * d[20] * d[30] * d[42] * d[46] + 2 * d[23] * d[31] * d[42] * d[46] + 2 * d[22] * d[32] * d[42] * d[46] + 2 * d[20] * d[27] * d[43] * d[46] + 2 * d[18] * d[29] * d[43] * d[46] - 4 * d[22] * d[31] * d[43] * d[46] - 2 * d[23] * d[27] * d[44] * d[46] + 2 * d[22] * d[30] * d[44] * d[46] + 2 * d[21] * d[31] * d[44] * d[46] - 2 * d[18] * d[32] * d[44] * d[46] + 2 * d[26] * d[28] * d[36] * d[47] - 2 * d[25] * d[32] * d[36] * d[47] - 2 * d[23] * d[34] * d[36] * d[47] + 2 * d[19] * d[35] * d[36] * d[47] + 2 * d[26] * d[27] * d[37] * d[47] - 2 * d[24] * d[31] * d[37] * d[47] - 2 * d[22] * d[33] * d[37] * d[47] + 2 * d[18] * d[35] * d[37] * d[47] - 4 * d[26] * d[30] * d[39] * d[47] + 2 * d[25] * d[31] * d[39] * d[47] + 2 * d[24] * d[32] * d[39] * d[47] + 2 * d[23] * d[33] * d[39] * d[47] + 2 * d[22] * d[34] * d[39] * d[47] - 4 * d[21] * d[35] * d[39] * d[47] - 2 * d[24] * d[28] * d[40] * d[47] + 2 * d[25] * d[30] * d[40] * d[47] - 2 * d[19] * d[33] * d[40] * d[47] + 2 * d[21] * d[34] * d[40] * d[47] - 2 * d[25] * d[27] * d[41] * d[47] + 2 * d[24] * d[30] * d[41] * d[47] + 2 * d[21] * d[33] * d[41] * d[47] - 2 * d[18] * d[34] * d[41] * d[47] - 2 * d[22] * d[28] * d[42] * d[47] + 2 * d[23] * d[30] * d[42] * d[47] - 2 * d[19] * d[31] * d[42] * d[47] + 2 * d[21] * d[32] * d[42] * d[47] - 2 * d[23] * d[27] * d[43] * d[47] + 2 * d[22] * d[30] * d[43] * d[47] + 2 * d[21] * d[31] * d[43] * d[47] - 2 * d[18] * d[32] * d[43] * d[47] + 2 * d[19] * d[27] * d[44] * d[47] + 2 * d[18] * d[28] * d[44] * d[47] - 4 * d[21] * d[30] * d[44] * d[47] - d[20] * d[28] * d[36] * d[54] - d[19] * d[29] * d[36] * d[54] + 2 * d[23] * d[32] * d[36] * d[54] - d[20] * d[27] * d[37] * d[54] - d[18] * d[29] * d[37] * d[54] + 2 * d[22] * d[31] * d[37] * d[54] - d[19] * d[27] * d[38] * d[54] - d[18] * d[28] * d[38] * d[54] + 2 * d[21] * d[30] * d[38] * d[54] + 2 * d[21] * d[29] * d[39] * d[54] + 2 * d[20] * d[30] * d[39] * d[54] - 2 * d[23] * d[31] * d[39] * d[54] - 2 * d[22] * d[32] * d[39] * d[54] + 2 * d[22] * d[28] * d[40] * d[54] - 2 * d[23] * d[30] * d[40] * d[54] + 2 * d[19] * d[31] * d[40] * d[54] - 2 * d[21] * d[32] * d[40] * d[54] + 2 * d[23] * d[27] * d[41] * d[54] - 2 * d[22] * d[30] * d[41] * d[54] - 2 * d[21] * d[31] * d[41] * d[54] + 2 * d[18] * d[32] * d[41] * d[54];
    coeffs[15] = 2 * d[29] * d[33] * d[37] * d[45] - 2 * d[31] * d[35] * d[37] * d[45] + 2 * d[28] * d[33] * d[38] * d[45] - 2 * d[30] * d[34] * d[38] * d[45] - 2 * d[29] * d[34] * d[39] * d[45] + 2 * d[32] * d[35] * d[39] * d[45] + 2 * d[32] * d[34] * d[40] * d[45] - 2 * d[28] * d[35] * d[40] * d[45] - 4 * d[32] * d[33] * d[41] * d[45] + 2 * d[31] * d[34] * d[41] * d[45] + 2 * d[30] * d[35] * d[41] * d[45] + 2 * d[28] * d[29] * d[42] * d[45] - 2 * std::pow(d[32], 2) * d[42] * d[45] - 2 * d[29] * d[30] * d[43] * d[45] + 2 * d[31] * d[32] * d[43] * d[45] - 2 * d[28] * d[31] * d[44] * d[45] + 2 * d[30] * d[32] * d[44] * d[45] + 2 * d[29] * d[34] * d[36] * d[46] - 2 * d[32] * d[35] * d[36] * d[46] - 2 * d[30] * d[33] * d[38] * d[46] + 2 * d[27] * d[34] * d[38] * d[46] - 2 * d[29] * d[33] * d[39] * d[46] + 2 * d[31] * d[35] * d[39] * d[46] + 2 * d[32] * d[33] * d[40] * d[46] - 4 * d[31] * d[34] * d[40] * d[46] + 2 * d[30] * d[35] * d[40] * d[46] + 2 * d[31] * d[33] * d[41] * d[46] - 2 * d[27] * d[35] * d[41] * d[46] - 2 * d[29] * d[30] * d[42] * d[46] + 2 * d[31] * d[32] * d[42] * d[46] + 2 * d[27] * d[29] * d[43] * d[46] - 2 * std::pow(d[31], 2) * d[43] * d[46] + 2 * d[30] * d[31] * d[44] * d[46] - 2 * d[27] * d[32] * d[44] * d[46] - 2 * d[32] * d[34] * d[36] * d[47] + 2 * d[28] * d[35] * d[36] * d[47] - 2 * d[31] * d[33] * d[37] * d[47] + 2 * d[27] * d[35] * d[37] * d[47] + 2 * d[32] * d[33] * d[39] * d[47] + 2 * d[31] * d[34] * d[39] * d[47] - 4 * d[30] * d[35] * d[39] * d[47] - 2 * d[28] * d[33] * d[40] * d[47] + 2 * d[30] * d[34] * d[40] * d[47] + 2 * d[30] * d[33] * d[41] * d[47] - 2 * d[27] * d[34] * d[41] * d[47] - 2 * d[28] * d[31] * d[42] * d[47] + 2 * d[30] * d[32] * d[42] * d[47] + 2 * d[30] * d[31] * d[43] * d[47] - 2 * d[27] * d[32] * d[43] * d[47] + 2 * d[27] * d[28] * d[44] * d[47] - 2 * std::pow(d[30], 2) * d[44] * d[47] - d[28] * d[29] * d[36] * d[54] + std::pow(d[32], 2) * d[36] * d[54] - d[27] * d[29] * d[37] * d[54] + std::pow(d[31], 2) * d[37] * d[54] - d[27] * d[28] * d[38] * d[54] + std::pow(d[30], 2) * d[38] * d[54] + 2 * d[29] * d[30] * d[39] * d[54] - 2 * d[31] * d[32] * d[39] * d[54] + 2 * d[28] * d[31] * d[40] * d[54] - 2 * d[30] * d[32] * d[40] * d[54] - 2 * d[30] * d[31] * d[41] * d[54] + 2 * d[27] * d[32] * d[41] * d[54];
    coeffs[16] = 2 * d[15] * d[37] * d[38] * d[45] - 2 * d[16] * d[38] * d[39] * d[45] - 2 * d[17] * d[37] * d[40] * d[45] + 2 * d[17] * d[39] * d[41] * d[45] + 2 * d[16] * d[40] * d[41] * d[45] - 2 * d[15] * std::pow(d[41], 2) * d[45] + 2 * d[11] * d[37] * d[42] * d[45] + 2 * d[10] * d[38] * d[42] * d[45] - 4 * d[14] * d[41] * d[42] * d[45] - 2 * d[12] * d[38] * d[43] * d[45] - 2 * d[11] * d[39] * d[43] * d[45] + 2 * d[14] * d[40] * d[43] * d[45] + 2 * d[13] * d[41] * d[43] * d[45] - 2 * d[13] * d[37] * d[44] * d[45] + 2 * d[14] * d[39] * d[44] * d[45] - 2 * d[10] * d[40] * d[44] * d[45] + 2 * d[12] * d[41] * d[44] * d[45] + 2 * d[16] * d[36] * d[38] * d[46] - 2 * d[15] * d[38] * d[39] * d[46] + 2 * d[17] * d[39] * d[40] * d[46] - 2 * d[16] * std::pow(d[40], 2) * d[46] - 2 * d[17] * d[36] * d[41] * d[46] + 2 * d[15] * d[40] * d[41] * d[46] - 2 * d[12] * d[38] * d[42] * d[46] - 2 * d[11] * d[39] * d[42] * d[46] + 2 * d[14] * d[40] * d[42] * d[46] + 2 * d[13] * d[41] * d[42] * d[46] + 2 * d[11] * d[36] * d[43] * d[46] + 2 * d[9] * d[38] * d[43] * d[46] - 4 * d[13] * d[40] * d[43] * d[46] - 2 * d[14] * d[36] * d[44] * d[46] + 2 * d[13] * d[39] * d[44] * d[46] + 2 * d[12] * d[40] * d[44] * d[46] - 2 * d[9] * d[41] * d[44] * d[46] + 2 * d[17] * d[36] * d[37] * d[47] - 2 * d[17] * std::pow(d[39], 2) * d[47] - 2 * d[15] * d[37] * d[40] * d[47] + 2 * d[16] * d[39] * d[40] * d[47] - 2 * d[16] * d[36] * d[41] * d[47] + 2 * d[15] * d[39] * d[41] * d[47] - 2 * d[13] * d[37] * d[42] * d[47] + 2 * d[14] * d[39] * d[42] * d[47] - 2 * d[10] * d[40] * d[42] * d[47] + 2 * d[12] * d[41] * d[42] * d[47] - 2 * d[14] * d[36] * d[43] * d[47] + 2 * d[13] * d[39] * d[43] * d[47] + 2 * d[12] * d[40] * d[43] * d[47] - 2 * d[9] * d[41] * d[43] * d[47] + 2 * d[10] * d[36] * d[44] * d[47] + 2 * d[9] * d[37] * d[44] * d[47] - 4 * d[12] * d[39] * d[44] * d[47] - d[11] * d[36] * d[37] * d[54] - d[10] * d[36] * d[38] * d[54] - d[9] * d[37] * d[38] * d[54] + 2 * d[12] * d[38] * d[39] * d[54] + d[11] * std::pow(d[39], 2) * d[54] + 2 * d[13] * d[37] * d[40] * d[54] - 2 * d[14] * d[39] * d[40] * d[54] + d[10] * std::pow(d[40], 2) * d[54] + 2 * d[14] * d[36] * d[41] * d[54] - 2 * d[13] * d[39] * d[41] * d[54] - 2 * d[12] * d[40] * d[41] * d[54] + d[9] * std::pow(d[41], 2) * d[54];
    coeffs[17] = 2 * d[24] * d[37] * d[38] * d[45] - 2 * d[25] * d[38] * d[39] * d[45] - 2 * d[26] * d[37] * d[40] * d[45] + 2 * d[26] * d[39] * d[41] * d[45] + 2 * d[25] * d[40] * d[41] * d[45] - 2 * d[24] * std::pow(d[41], 2) * d[45] + 2 * d[20] * d[37] * d[42] * d[45] + 2 * d[19] * d[38] * d[42] * d[45] - 4 * d[23] * d[41] * d[42] * d[45] - 2 * d[21] * d[38] * d[43] * d[45] - 2 * d[20] * d[39] * d[43] * d[45] + 2 * d[23] * d[40] * d[43] * d[45] + 2 * d[22] * d[41] * d[43] * d[45] - 2 * d[22] * d[37] * d[44] * d[45] + 2 * d[23] * d[39] * d[44] * d[45] - 2 * d[19] * d[40] * d[44] * d[45] + 2 * d[21] * d[41] * d[44] * d[45] + 2 * d[25] * d[36] * d[38] * d[46] - 2 * d[24] * d[38] * d[39] * d[46] + 2 * d[26] * d[39] * d[40] * d[46] - 2 * d[25] * std::pow(d[40], 2) * d[46] - 2 * d[26] * d[36] * d[41] * d[46] + 2 * d[24] * d[40] * d[41] * d[46] - 2 * d[21] * d[38] * d[42] * d[46] - 2 * d[20] * d[39] * d[42] * d[46] + 2 * d[23] * d[40] * d[42] * d[46] + 2 * d[22] * d[41] * d[42] * d[46] + 2 * d[20] * d[36] * d[43] * d[46] + 2 * d[18] * d[38] * d[43] * d[46] - 4 * d[22] * d[40] * d[43] * d[46] - 2 * d[23] * d[36] * d[44] * d[46] + 2 * d[22] * d[39] * d[44] * d[46] + 2 * d[21] * d[40] * d[44] * d[46] - 2 * d[18] * d[41] * d[44] * d[46] + 2 * d[26] * d[36] * d[37] * d[47] - 2 * d[26] * std::pow(d[39], 2) * d[47] - 2 * d[24] * d[37] * d[40] * d[47] + 2 * d[25] * d[39] * d[40] * d[47] - 2 * d[25] * d[36] * d[41] * d[47] + 2 * d[24] * d[39] * d[41] * d[47] - 2 * d[22] * d[37] * d[42] * d[47] + 2 * d[23] * d[39] * d[42] * d[47] - 2 * d[19] * d[40] * d[42] * d[47] + 2 * d[21] * d[41] * d[42] * d[47] - 2 * d[23] * d[36] * d[43] * d[47] + 2 * d[22] * d[39] * d[43] * d[47] + 2 * d[21] * d[40] * d[43] * d[47] - 2 * d[18] * d[41] * d[43] * d[47] + 2 * d[19] * d[36] * d[44] * d[47] + 2 * d[18] * d[37] * d[44] * d[47] - 4 * d[21] * d[39] * d[44] * d[47] - d[20] * d[36] * d[37] * d[54] - d[19] * d[36] * d[38] * d[54] - d[18] * d[37] * d[38] * d[54] + 2 * d[21] * d[38] * d[39] * d[54] + d[20] * std::pow(d[39], 2) * d[54] + 2 * d[22] * d[37] * d[40] * d[54] - 2 * d[23] * d[39] * d[40] * d[54] + d[19] * std::pow(d[40], 2) * d[54] + 2 * d[23] * d[36] * d[41] * d[54] - 2 * d[22] * d[39] * d[41] * d[54] - 2 * d[21] * d[40] * d[41] * d[54] + d[18] * std::pow(d[41], 2) * d[54];
    coeffs[18] = 2 * d[33] * d[37] * d[38] * d[45] - 2 * d[34] * d[38] * d[39] * d[45] - 2 * d[35] * d[37] * d[40] * d[45] + 2 * d[35] * d[39] * d[41] * d[45] + 2 * d[34] * d[40] * d[41] * d[45] - 2 * d[33] * std::pow(d[41], 2) * d[45] + 2 * d[29] * d[37] * d[42] * d[45] + 2 * d[28] * d[38] * d[42] * d[45] - 4 * d[32] * d[41] * d[42] * d[45] - 2 * d[30] * d[38] * d[43] * d[45] - 2 * d[29] * d[39] * d[43] * d[45] + 2 * d[32] * d[40] * d[43] * d[45] + 2 * d[31] * d[41] * d[43] * d[45] - 2 * d[31] * d[37] * d[44] * d[45] + 2 * d[32] * d[39] * d[44] * d[45] - 2 * d[28] * d[40] * d[44] * d[45] + 2 * d[30] * d[41] * d[44] * d[45] + 2 * d[34] * d[36] * d[38] * d[46] - 2 * d[33] * d[38] * d[39] * d[46] + 2 * d[35] * d[39] * d[40] * d[46] - 2 * d[34] * std::pow(d[40], 2) * d[46] - 2 * d[35] * d[36] * d[41] * d[46] + 2 * d[33] * d[40] * d[41] * d[46] - 2 * d[30] * d[38] * d[42] * d[46] - 2 * d[29] * d[39] * d[42] * d[46] + 2 * d[32] * d[40] * d[42] * d[46] + 2 * d[31] * d[41] * d[42] * d[46] + 2 * d[29] * d[36] * d[43] * d[46] + 2 * d[27] * d[38] * d[43] * d[46] - 4 * d[31] * d[40] * d[43] * d[46] - 2 * d[32] * d[36] * d[44] * d[46] + 2 * d[31] * d[39] * d[44] * d[46] + 2 * d[30] * d[40] * d[44] * d[46] - 2 * d[27] * d[41] * d[44] * d[46] + 2 * d[35] * d[36] * d[37] * d[47] - 2 * d[35] * std::pow(d[39], 2) * d[47] - 2 * d[33] * d[37] * d[40] * d[47] + 2 * d[34] * d[39] * d[40] * d[47] - 2 * d[34] * d[36] * d[41] * d[47] + 2 * d[33] * d[39] * d[41] * d[47] - 2 * d[31] * d[37] * d[42] * d[47] + 2 * d[32] * d[39] * d[42] * d[47] - 2 * d[28] * d[40] * d[42] * d[47] + 2 * d[30] * d[41] * d[42] * d[47] - 2 * d[32] * d[36] * d[43] * d[47] + 2 * d[31] * d[39] * d[43] * d[47] + 2 * d[30] * d[40] * d[43] * d[47] - 2 * d[27] * d[41] * d[43] * d[47] + 2 * d[28] * d[36] * d[44] * d[47] + 2 * d[27] * d[37] * d[44] * d[47] - 4 * d[30] * d[39] * d[44] * d[47] - d[29] * d[36] * d[37] * d[54] - d[28] * d[36] * d[38] * d[54] - d[27] * d[37] * d[38] * d[54] + 2 * d[30] * d[38] * d[39] * d[54] + d[29] * std::pow(d[39], 2) * d[54] + 2 * d[31] * d[37] * d[40] * d[54] - 2 * d[32] * d[39] * d[40] * d[54] + d[28] * std::pow(d[40], 2) * d[54] + 2 * d[32] * d[36] * d[41] * d[54] - 2 * d[31] * d[39] * d[41] * d[54] - 2 * d[30] * d[40] * d[41] * d[54] + d[27] * std::pow(d[41], 2) * d[54];
    coeffs[19] = 2 * d[37] * d[38] * d[42] * d[45] - 2 * std::pow(d[41], 2) * d[42] * d[45] - 2 * d[38] * d[39] * d[43] * d[45] + 2 * d[40] * d[41] * d[43] * d[45] - 2 * d[37] * d[40] * d[44] * d[45] + 2 * d[39] * d[41] * d[44] * d[45] - 2 * d[38] * d[39] * d[42] * d[46] + 2 * d[40] * d[41] * d[42] * d[46] + 2 * d[36] * d[38] * d[43] * d[46] - 2 * std::pow(d[40], 2) * d[43] * d[46] + 2 * d[39] * d[40] * d[44] * d[46] - 2 * d[36] * d[41] * d[44] * d[46] - 2 * d[37] * d[40] * d[42] * d[47] + 2 * d[39] * d[41] * d[42] * d[47] + 2 * d[39] * d[40] * d[43] * d[47] - 2 * d[36] * d[41] * d[43] * d[47] + 2 * d[36] * d[37] * d[44] * d[47] - 2 * std::pow(d[39], 2) * d[44] * d[47] - d[36] * d[37] * d[38] * d[54] + d[38] * std::pow(d[39], 2) * d[54] + d[37] * std::pow(d[40], 2) * d[54] - 2 * d[39] * d[40] * d[41] * d[54] + d[36] * std::pow(d[41], 2) * d[54];
    coeffs[20] = 2 * d[6] * d[10] * d[11] * d[45] - 2 * d[7] * d[11] * d[12] * d[45] - 2 * d[8] * d[10] * d[13] * d[45] + 2 * d[8] * d[12] * d[14] * d[45] + 2 * d[7] * d[13] * d[14] * d[45] - 2 * d[6] * std::pow(d[14], 2) * d[45] + 2 * d[2] * d[10] * d[15] * d[45] + 2 * d[1] * d[11] * d[15] * d[45] - 4 * d[5] * d[14] * d[15] * d[45] - 2 * d[3] * d[11] * d[16] * d[45] - 2 * d[2] * d[12] * d[16] * d[45] + 2 * d[5] * d[13] * d[16] * d[45] + 2 * d[4] * d[14] * d[16] * d[45] - 2 * d[4] * d[10] * d[17] * d[45] + 2 * d[5] * d[12] * d[17] * d[45] - 2 * d[1] * d[13] * d[17] * d[45] + 2 * d[3] * d[14] * d[17] * d[45] + d[10] * d[11] * std::pow(d[45], 2) - std::pow(d[14], 2) * std::pow(d[45], 2) + 2 * d[7] * d[9] * d[11] * d[46] - 2 * d[6] * d[11] * d[12] * d[46] + 2 * d[8] * d[12] * d[13] * d[46] - 2 * d[7] * std::pow(d[13], 2) * d[46] - 2 * d[8] * d[9] * d[14] * d[46] + 2 * d[6] * d[13] * d[14] * d[46] - 2 * d[3] * d[11] * d[15] * d[46] - 2 * d[2] * d[12] * d[15] * d[46] + 2 * d[5] * d[13] * d[15] * d[46] + 2 * d[4] * d[14] * d[15] * d[46] + 2 * d[2] * d[9] * d[16] * d[46] + 2 * d[0] * d[11] * d[16] * d[46] - 4 * d[4] * d[13] * d[16] * d[46] - 2 * d[5] * d[9] * d[17] * d[46] + 2 * d[4] * d[12] * d[17] * d[46] + 2 * d[3] * d[13] * d[17] * d[46] - 2 * d[0] * d[14] * d[17] * d[46] - 2 * d[11] * d[12] * d[45] * d[46] + 2 * d[13] * d[14] * d[45] * d[46] + d[9] * d[11] * std::pow(d[46], 2) - std::pow(d[13], 2) * std::pow(d[46], 2) + 2 * d[8] * d[9] * d[10] * d[47] - 2 * d[8] * std::pow(d[12], 2) * d[47] - 2 * d[6] * d[10] * d[13] * d[47] + 2 * d[7] * d[12] * d[13] * d[47] - 2 * d[7] * d[9] * d[14] * d[47] + 2 * d[6] * d[12] * d[14] * d[47] - 2 * d[4] * d[10] * d[15] * d[47] + 2 * d[5] * d[12] * d[15] * d[47] - 2 * d[1] * d[13] * d[15] * d[47] + 2 * d[3] * d[14] * d[15] * d[47] - 2 * d[5] * d[9] * d[16] * d[47] + 2 * d[4] * d[12] * d[16] * d[47] + 2 * d[3] * d[13] * d[16] * d[47] - 2 * d[0] * d[14] * d[16] * d[47] + 2 * d[1] * d[9] * d[17] * d[47] + 2 * d[0] * d[10] * d[17] * d[47] - 4 * d[3] * d[12] * d[17] * d[47] - 2 * d[10] * d[13] * d[45] * d[47] + 2 * d[12] * d[14] * d[45] * d[47] + 2 * d[12] * d[13] * d[46] * d[47] - 2 * d[9] * d[14] * d[46] * d[47] + d[9] * d[10] * std::pow(d[47], 2) - std::pow(d[12], 2) * std::pow(d[47], 2) - d[2] * d[9] * d[10] * d[54] - d[1] * d[9] * d[11] * d[54] - d[0] * d[10] * d[11] * d[54] + 2 * d[3] * d[11] * d[12] * d[54] + d[2] * std::pow(d[12], 2) * d[54] + 2 * d[4] * d[10] * d[13] * d[54] - 2 * d[5] * d[12] * d[13] * d[54] + d[1] * std::pow(d[13], 2) * d[54] + 2 * d[5] * d[9] * d[14] * d[54] - 2 * d[4] * d[12] * d[14] * d[54] - 2 * d[3] * d[13] * d[14] * d[54] + d[0] * std::pow(d[14], 2) * d[54];
    coeffs[21] = 2 * d[6] * d[11] * d[19] * d[45] - 2 * d[8] * d[13] * d[19] * d[45] + 2 * d[2] * d[15] * d[19] * d[45] - 2 * d[4] * d[17] * d[19] * d[45] + 2 * d[6] * d[10] * d[20] * d[45] - 2 * d[7] * d[12] * d[20] * d[45] + 2 * d[1] * d[15] * d[20] * d[45] - 2 * d[3] * d[16] * d[20] * d[45] - 2 * d[7] * d[11] * d[21] * d[45] + 2 * d[8] * d[14] * d[21] * d[45] - 2 * d[2] * d[16] * d[21] * d[45] + 2 * d[5] * d[17] * d[21] * d[45] - 2 * d[8] * d[10] * d[22] * d[45] + 2 * d[7] * d[14] * d[22] * d[45] + 2 * d[5] * d[16] * d[22] * d[45] - 2 * d[1] * d[17] * d[22] * d[45] + 2 * d[8] * d[12] * d[23] * d[45] + 2 * d[7] * d[13] * d[23] * d[45] - 4 * d[6] * d[14] * d[23] * d[45] - 4 * d[5] * d[15] * d[23] * d[45] + 2 * d[4] * d[16] * d[23] * d[45] + 2 * d[3] * d[17] * d[23] * d[45] + 2 * d[2] * d[10] * d[24] * d[45] + 2 * d[1] * d[11] * d[24] * d[45] - 4 * d[5] * d[14] * d[24] * d[45] - 2 * d[3] * d[11] * d[25] * d[45] - 2 * d[2] * d[12] * d[25] * d[45] + 2 * d[5] * d[13] * d[25] * d[45] + 2 * d[4] * d[14] * d[25] * d[45] - 2 * d[4] * d[10] * d[26] * d[45] + 2 * d[5] * d[12] * d[26] * d[45] - 2 * d[1] * d[13] * d[26] * d[45] + 2 * d[3] * d[14] * d[26] * d[45] + d[11] * d[19] * std::pow(d[45], 2) + d[10] * d[20] * std::pow(d[45], 2) - 2 * d[14] * d[23] * std::pow(d[45], 2) + 2 * d[7] * d[11] * d[18] * d[46] - 2 * d[8] * d[14] * d[18] * d[46] + 2 * d[2] * d[16] * d[18] * d[46] - 2 * d[5] * d[17] * d[18] * d[46] + 2 * d[7] * d[9] * d[20] * d[46] - 2 * d[6] * d[12] * d[20] * d[46] - 2 * d[3] * d[15] * d[20] * d[46] + 2 * d[0] * d[16] * d[20] * d[46] - 2 * d[6] * d[11] * d[21] * d[46] + 2 * d[8] * d[13] * d[21] * d[46] - 2 * d[2] * d[15] * d[21] * d[46] + 2 * d[4] * d[17] * d[21] * d[46] + 2 * d[8] * d[12] * d[22] * d[46] - 4 * d[7] * d[13] * d[22] * d[46] + 2 * d[6] * d[14] * d[22] * d[46] + 2 * d[5] * d[15] * d[22] * d[46] - 4 * d[4] * d[16] * d[22] * d[46] + 2 * d[3] * d[17] * d[22] * d[46] - 2 * d[8] * d[9] * d[23] * d[46] + 2 * d[6] * d[13] * d[23] * d[46] + 2 * d[4] * d[15] * d[23] * d[46] - 2 * d[0] * d[17] * d[23] * d[46] - 2 * d[3] * d[11] * d[24] * d[46] - 2 * d[2] * d[12] * d[24] * d[46] + 2 * d[5] * d[13] * d[24] * d[46] + 2 * d[4] * d[14] * d[24] * d[46] + 2 * d[2] * d[9] * d[25] * d[46] + 2 * d[0] * d[11] * d[25] * d[46] - 4 * d[4] * d[13] * d[25] * d[46] - 2 * d[5] * d[9] * d[26] * d[46] + 2 * d[4] * d[12] * d[26] * d[46] + 2 * d[3] * d[13] * d[26] * d[46] - 2 * d[0] * d[14] * d[26] * d[46] - 2 * d[12] * d[20] * d[45] * d[46] - 2 * d[11] * d[21] * d[45] * d[46] + 2 * d[14] * d[22] * d[45] * d[46] + 2 * d[13] * d[23] * d[45] * d[46] + d[11] * d[18] * std::pow(d[46], 2) + d[9] * d[20] * std::pow(d[46], 2) - 2 * d[13] * d[22] * std::pow(d[46], 2) + 2 * d[8] * d[10] * d[18] * d[47] - 2 * d[7] * d[14] * d[18] * d[47] - 2 * d[5] * d[16] * d[18] * d[47] + 2 * d[1] * d[17] * d[18] * d[47] + 2 * d[8] * d[9] * d[19] * d[47] - 2 * d[6] * d[13] * d[19] * d[47] - 2 * d[4] * d[15] * d[19] * d[47] + 2 * d[0] * d[17] * d[19] * d[47] - 4 * d[8] * d[12] * d[21] * d[47] + 2 * d[7] * d[13] * d[21] * d[47] + 2 * d[6] * d[14] * d[21] * d[47] + 2 * d[5] * d[15] * d[21] * d[47] + 2 * d[4] * d[16] * d[21] * d[47] - 4 * d[3] * d[17] * d[21] * d[47] - 2 * d[6] * d[10] * d[22] * d[47] + 2 * d[7] * d[12] * d[22] * d[47] - 2 * d[1] * d[15] * d[22] * d[47] + 2 * d[3] * d[16] * d[22] * d[47] - 2 * d[7] * d[9] * d[23] * d[47] + 2 * d[6] * d[12] * d[23] * d[47] + 2 * d[3] * d[15] * d[23] * d[47] - 2 * d[0] * d[16] * d[23] * d[47] - 2 * d[4] * d[10] * d[24] * d[47] + 2 * d[5] * d[12] * d[24] * d[47] - 2 * d[1] * d[13] * d[24] * d[47] + 2 * d[3] * d[14] * d[24] * d[47] - 2 * d[5] * d[9] * d[25] * d[47] + 2 * d[4] * d[12] * d[25] * d[47] + 2 * d[3] * d[13] * d[25] * d[47] - 2 * d[0] * d[14] * d[25] * d[47] + 2 * d[1] * d[9] * d[26] * d[47] + 2 * d[0] * d[10] * d[26] * d[47] - 4 * d[3] * d[12] * d[26] * d[47] - 2 * d[13] * d[19] * d[45] * d[47] + 2 * d[14] * d[21] * d[45] * d[47] - 2 * d[10] * d[22] * d[45] * d[47] + 2 * d[12] * d[23] * d[45] * d[47] - 2 * d[14] * d[18] * d[46] * d[47] + 2 * d[13] * d[21] * d[46] * d[47] + 2 * d[12] * d[22] * d[46] * d[47] - 2 * d[9] * d[23] * d[46] * d[47] + d[10] * d[18] * std::pow(d[47], 2) + d[9] * d[19] * std::pow(d[47], 2) - 2 * d[12] * d[21] * std::pow(d[47], 2) - d[2] * d[10] * d[18] * d[54] - d[1] * d[11] * d[18] * d[54] + 2 * d[5] * d[14] * d[18] * d[54] - d[2] * d[9] * d[19] * d[54] - d[0] * d[11] * d[19] * d[54] + 2 * d[4] * d[13] * d[19] * d[54] - d[1] * d[9] * d[20] * d[54] - d[0] * d[10] * d[20] * d[54] + 2 * d[3] * d[12] * d[20] * d[54] + 2 * d[3] * d[11] * d[21] * d[54] + 2 * d[2] * d[12] * d[21] * d[54] - 2 * d[5] * d[13] * d[21] * d[54] - 2 * d[4] * d[14] * d[21] * d[54] + 2 * d[4] * d[10] * d[22] * d[54] - 2 * d[5] * d[12] * d[22] * d[54] + 2 * d[1] * d[13] * d[22] * d[54] - 2 * d[3] * d[14] * d[22] * d[54] + 2 * d[5] * d[9] * d[23] * d[54] - 2 * d[4] * d[12] * d[23] * d[54] - 2 * d[3] * d[13] * d[23] * d[54] + 2 * d[0] * d[14] * d[23] * d[54];
    coeffs[22] = 2 * d[6] * d[19] * d[20] * d[45] - 2 * d[7] * d[20] * d[21] * d[45] - 2 * d[8] * d[19] * d[22] * d[45] + 2 * d[8] * d[21] * d[23] * d[45] + 2 * d[7] * d[22] * d[23] * d[45] - 2 * d[6] * std::pow(d[23], 2) * d[45] + 2 * d[2] * d[19] * d[24] * d[45] + 2 * d[1] * d[20] * d[24] * d[45] - 4 * d[5] * d[23] * d[24] * d[45] - 2 * d[3] * d[20] * d[25] * d[45] - 2 * d[2] * d[21] * d[25] * d[45] + 2 * d[5] * d[22] * d[25] * d[45] + 2 * d[4] * d[23] * d[25] * d[45] - 2 * d[4] * d[19] * d[26] * d[45] + 2 * d[5] * d[21] * d[26] * d[45] - 2 * d[1] * d[22] * d[26] * d[45] + 2 * d[3] * d[23] * d[26] * d[45] + d[19] * d[20] * std::pow(d[45], 2) - std::pow(d[23], 2) * std::pow(d[45], 2) + 2 * d[7] * d[18] * d[20] * d[46] - 2 * d[6] * d[20] * d[21] * d[46] + 2 * d[8] * d[21] * d[22] * d[46] - 2 * d[7] * std::pow(d[22], 2) * d[46] - 2 * d[8] * d[18] * d[23] * d[46] + 2 * d[6] * d[22] * d[23] * d[46] - 2 * d[3] * d[20] * d[24] * d[46] - 2 * d[2] * d[21] * d[24] * d[46] + 2 * d[5] * d[22] * d[24] * d[46] + 2 * d[4] * d[23] * d[24] * d[46] + 2 * d[2] * d[18] * d[25] * d[46] + 2 * d[0] * d[20] * d[25] * d[46] - 4 * d[4] * d[22] * d[25] * d[46] - 2 * d[5] * d[18] * d[26] * d[46] + 2 * d[4] * d[21] * d[26] * d[46] + 2 * d[3] * d[22] * d[26] * d[46] - 2 * d[0] * d[23] * d[26] * d[46] - 2 * d[20] * d[21] * d[45] * d[46] + 2 * d[22] * d[23] * d[45] * d[46] + d[18] * d[20] * std::pow(d[46], 2) - std::pow(d[22], 2) * std::pow(d[46], 2) + 2 * d[8] * d[18] * d[19] * d[47] - 2 * d[8] * std::pow(d[21], 2) * d[47] - 2 * d[6] * d[19] * d[22] * d[47] + 2 * d[7] * d[21] * d[22] * d[47] - 2 * d[7] * d[18] * d[23] * d[47] + 2 * d[6] * d[21] * d[23] * d[47] - 2 * d[4] * d[19] * d[24] * d[47] + 2 * d[5] * d[21] * d[24] * d[47] - 2 * d[1] * d[22] * d[24] * d[47] + 2 * d[3] * d[23] * d[24] * d[47] - 2 * d[5] * d[18] * d[25] * d[47] + 2 * d[4] * d[21] * d[25] * d[47] + 2 * d[3] * d[22] * d[25] * d[47] - 2 * d[0] * d[23] * d[25] * d[47] + 2 * d[1] * d[18] * d[26] * d[47] + 2 * d[0] * d[19] * d[26] * d[47] - 4 * d[3] * d[21] * d[26] * d[47] - 2 * d[19] * d[22] * d[45] * d[47] + 2 * d[21] * d[23] * d[45] * d[47] + 2 * d[21] * d[22] * d[46] * d[47] - 2 * d[18] * d[23] * d[46] * d[47] + d[18] * d[19] * std::pow(d[47], 2) - std::pow(d[21], 2) * std::pow(d[47], 2) - d[2] * d[18] * d[19] * d[54] - d[1] * d[18] * d[20] * d[54] - d[0] * d[19] * d[20] * d[54] + 2 * d[3] * d[20] * d[21] * d[54] + d[2] * std::pow(d[21], 2) * d[54] + 2 * d[4] * d[19] * d[22] * d[54] - 2 * d[5] * d[21] * d[22] * d[54] + d[1] * std::pow(d[22], 2) * d[54] + 2 * d[5] * d[18] * d[23] * d[54] - 2 * d[4] * d[21] * d[23] * d[54] - 2 * d[3] * d[22] * d[23] * d[54] + d[0] * std::pow(d[23], 2) * d[54];
    coeffs[23] = 2 * d[6] * d[11] * d[28] * d[45] - 2 * d[8] * d[13] * d[28] * d[45] + 2 * d[2] * d[15] * d[28] * d[45] - 2 * d[4] * d[17] * d[28] * d[45] + 2 * d[6] * d[10] * d[29] * d[45] - 2 * d[7] * d[12] * d[29] * d[45] + 2 * d[1] * d[15] * d[29] * d[45] - 2 * d[3] * d[16] * d[29] * d[45] - 2 * d[7] * d[11] * d[30] * d[45] + 2 * d[8] * d[14] * d[30] * d[45] - 2 * d[2] * d[16] * d[30] * d[45] + 2 * d[5] * d[17] * d[30] * d[45] - 2 * d[8] * d[10] * d[31] * d[45] + 2 * d[7] * d[14] * d[31] * d[45] + 2 * d[5] * d[16] * d[31] * d[45] - 2 * d[1] * d[17] * d[31] * d[45] + 2 * d[8] * d[12] * d[32] * d[45] + 2 * d[7] * d[13] * d[32] * d[45] - 4 * d[6] * d[14] * d[32] * d[45] - 4 * d[5] * d[15] * d[32] * d[45] + 2 * d[4] * d[16] * d[32] * d[45] + 2 * d[3] * d[17] * d[32] * d[45] + 2 * d[2] * d[10] * d[33] * d[45] + 2 * d[1] * d[11] * d[33] * d[45] - 4 * d[5] * d[14] * d[33] * d[45] - 2 * d[3] * d[11] * d[34] * d[45] - 2 * d[2] * d[12] * d[34] * d[45] + 2 * d[5] * d[13] * d[34] * d[45] + 2 * d[4] * d[14] * d[34] * d[45] - 2 * d[4] * d[10] * d[35] * d[45] + 2 * d[5] * d[12] * d[35] * d[45] - 2 * d[1] * d[13] * d[35] * d[45] + 2 * d[3] * d[14] * d[35] * d[45] + d[11] * d[28] * std::pow(d[45], 2) + d[10] * d[29] * std::pow(d[45], 2) - 2 * d[14] * d[32] * std::pow(d[45], 2) + 2 * d[7] * d[11] * d[27] * d[46] - 2 * d[8] * d[14] * d[27] * d[46] + 2 * d[2] * d[16] * d[27] * d[46] - 2 * d[5] * d[17] * d[27] * d[46] + 2 * d[7] * d[9] * d[29] * d[46] - 2 * d[6] * d[12] * d[29] * d[46] - 2 * d[3] * d[15] * d[29] * d[46] + 2 * d[0] * d[16] * d[29] * d[46] - 2 * d[6] * d[11] * d[30] * d[46] + 2 * d[8] * d[13] * d[30] * d[46] - 2 * d[2] * d[15] * d[30] * d[46] + 2 * d[4] * d[17] * d[30] * d[46] + 2 * d[8] * d[12] * d[31] * d[46] - 4 * d[7] * d[13] * d[31] * d[46] + 2 * d[6] * d[14] * d[31] * d[46] + 2 * d[5] * d[15] * d[31] * d[46] - 4 * d[4] * d[16] * d[31] * d[46] + 2 * d[3] * d[17] * d[31] * d[46] - 2 * d[8] * d[9] * d[32] * d[46] + 2 * d[6] * d[13] * d[32] * d[46] + 2 * d[4] * d[15] * d[32] * d[46] - 2 * d[0] * d[17] * d[32] * d[46] - 2 * d[3] * d[11] * d[33] * d[46] - 2 * d[2] * d[12] * d[33] * d[46] + 2 * d[5] * d[13] * d[33] * d[46] + 2 * d[4] * d[14] * d[33] * d[46] + 2 * d[2] * d[9] * d[34] * d[46] + 2 * d[0] * d[11] * d[34] * d[46] - 4 * d[4] * d[13] * d[34] * d[46] - 2 * d[5] * d[9] * d[35] * d[46] + 2 * d[4] * d[12] * d[35] * d[46] + 2 * d[3] * d[13] * d[35] * d[46] - 2 * d[0] * d[14] * d[35] * d[46] - 2 * d[12] * d[29] * d[45] * d[46] - 2 * d[11] * d[30] * d[45] * d[46] + 2 * d[14] * d[31] * d[45] * d[46] + 2 * d[13] * d[32] * d[45] * d[46] + d[11] * d[27] * std::pow(d[46], 2) + d[9] * d[29] * std::pow(d[46], 2) - 2 * d[13] * d[31] * std::pow(d[46], 2) + 2 * d[8] * d[10] * d[27] * d[47] - 2 * d[7] * d[14] * d[27] * d[47] - 2 * d[5] * d[16] * d[27] * d[47] + 2 * d[1] * d[17] * d[27] * d[47] + 2 * d[8] * d[9] * d[28] * d[47] - 2 * d[6] * d[13] * d[28] * d[47] - 2 * d[4] * d[15] * d[28] * d[47] + 2 * d[0] * d[17] * d[28] * d[47] - 4 * d[8] * d[12] * d[30] * d[47] + 2 * d[7] * d[13] * d[30] * d[47] + 2 * d[6] * d[14] * d[30] * d[47] + 2 * d[5] * d[15] * d[30] * d[47] + 2 * d[4] * d[16] * d[30] * d[47] - 4 * d[3] * d[17] * d[30] * d[47] - 2 * d[6] * d[10] * d[31] * d[47] + 2 * d[7] * d[12] * d[31] * d[47] - 2 * d[1] * d[15] * d[31] * d[47] + 2 * d[3] * d[16] * d[31] * d[47] - 2 * d[7] * d[9] * d[32] * d[47] + 2 * d[6] * d[12] * d[32] * d[47] + 2 * d[3] * d[15] * d[32] * d[47] - 2 * d[0] * d[16] * d[32] * d[47] - 2 * d[4] * d[10] * d[33] * d[47] + 2 * d[5] * d[12] * d[33] * d[47] - 2 * d[1] * d[13] * d[33] * d[47] + 2 * d[3] * d[14] * d[33] * d[47] - 2 * d[5] * d[9] * d[34] * d[47] + 2 * d[4] * d[12] * d[34] * d[47] + 2 * d[3] * d[13] * d[34] * d[47] - 2 * d[0] * d[14] * d[34] * d[47] + 2 * d[1] * d[9] * d[35] * d[47] + 2 * d[0] * d[10] * d[35] * d[47] - 4 * d[3] * d[12] * d[35] * d[47] - 2 * d[13] * d[28] * d[45] * d[47] + 2 * d[14] * d[30] * d[45] * d[47] - 2 * d[10] * d[31] * d[45] * d[47] + 2 * d[12] * d[32] * d[45] * d[47] - 2 * d[14] * d[27] * d[46] * d[47] + 2 * d[13] * d[30] * d[46] * d[47] + 2 * d[12] * d[31] * d[46] * d[47] - 2 * d[9] * d[32] * d[46] * d[47] + d[10] * d[27] * std::pow(d[47], 2) + d[9] * d[28] * std::pow(d[47], 2) - 2 * d[12] * d[30] * std::pow(d[47], 2) - d[2] * d[10] * d[27] * d[54] - d[1] * d[11] * d[27] * d[54] + 2 * d[5] * d[14] * d[27] * d[54] - d[2] * d[9] * d[28] * d[54] - d[0] * d[11] * d[28] * d[54] + 2 * d[4] * d[13] * d[28] * d[54] - d[1] * d[9] * d[29] * d[54] - d[0] * d[10] * d[29] * d[54] + 2 * d[3] * d[12] * d[29] * d[54] + 2 * d[3] * d[11] * d[30] * d[54] + 2 * d[2] * d[12] * d[30] * d[54] - 2 * d[5] * d[13] * d[30] * d[54] - 2 * d[4] * d[14] * d[30] * d[54] + 2 * d[4] * d[10] * d[31] * d[54] - 2 * d[5] * d[12] * d[31] * d[54] + 2 * d[1] * d[13] * d[31] * d[54] - 2 * d[3] * d[14] * d[31] * d[54] + 2 * d[5] * d[9] * d[32] * d[54] - 2 * d[4] * d[12] * d[32] * d[54] - 2 * d[3] * d[13] * d[32] * d[54] + 2 * d[0] * d[14] * d[32] * d[54];
    coeffs[24] = 2 * d[6] * d[20] * d[28] * d[45] - 2 * d[8] * d[22] * d[28] * d[45] + 2 * d[2] * d[24] * d[28] * d[45] - 2 * d[4] * d[26] * d[28] * d[45] + 2 * d[6] * d[19] * d[29] * d[45] - 2 * d[7] * d[21] * d[29] * d[45] + 2 * d[1] * d[24] * d[29] * d[45] - 2 * d[3] * d[25] * d[29] * d[45] - 2 * d[7] * d[20] * d[30] * d[45] + 2 * d[8] * d[23] * d[30] * d[45] - 2 * d[2] * d[25] * d[30] * d[45] + 2 * d[5] * d[26] * d[30] * d[45] - 2 * d[8] * d[19] * d[31] * d[45] + 2 * d[7] * d[23] * d[31] * d[45] + 2 * d[5] * d[25] * d[31] * d[45] - 2 * d[1] * d[26] * d[31] * d[45] + 2 * d[8] * d[21] * d[32] * d[45] + 2 * d[7] * d[22] * d[32] * d[45] - 4 * d[6] * d[23] * d[32] * d[45] - 4 * d[5] * d[24] * d[32] * d[45] + 2 * d[4] * d[25] * d[32] * d[45] + 2 * d[3] * d[26] * d[32] * d[45] + 2 * d[2] * d[19] * d[33] * d[45] + 2 * d[1] * d[20] * d[33] * d[45] - 4 * d[5] * d[23] * d[33] * d[45] - 2 * d[3] * d[20] * d[34] * d[45] - 2 * d[2] * d[21] * d[34] * d[45] + 2 * d[5] * d[22] * d[34] * d[45] + 2 * d[4] * d[23] * d[34] * d[45] - 2 * d[4] * d[19] * d[35] * d[45] + 2 * d[5] * d[21] * d[35] * d[45] - 2 * d[1] * d[22] * d[35] * d[45] + 2 * d[3] * d[23] * d[35] * d[45] + d[20] * d[28] * std::pow(d[45], 2) + d[19] * d[29] * std::pow(d[45], 2) - 2 * d[23] * d[32] * std::pow(d[45], 2) + 2 * d[7] * d[20] * d[27] * d[46] - 2 * d[8] * d[23] * d[27] * d[46] + 2 * d[2] * d[25] * d[27] * d[46] - 2 * d[5] * d[26] * d[27] * d[46] + 2 * d[7] * d[18] * d[29] * d[46] - 2 * d[6] * d[21] * d[29] * d[46] - 2 * d[3] * d[24] * d[29] * d[46] + 2 * d[0] * d[25] * d[29] * d[46] - 2 * d[6] * d[20] * d[30] * d[46] + 2 * d[8] * d[22] * d[30] * d[46] - 2 * d[2] * d[24] * d[30] * d[46] + 2 * d[4] * d[26] * d[30] * d[46] + 2 * d[8] * d[21] * d[31] * d[46] - 4 * d[7] * d[22] * d[31] * d[46] + 2 * d[6] * d[23] * d[31] * d[46] + 2 * d[5] * d[24] * d[31] * d[46] - 4 * d[4] * d[25] * d[31] * d[46] + 2 * d[3] * d[26] * d[31] * d[46] - 2 * d[8] * d[18] * d[32] * d[46] + 2 * d[6] * d[22] * d[32] * d[46] + 2 * d[4] * d[24] * d[32] * d[46] - 2 * d[0] * d[26] * d[32] * d[46] - 2 * d[3] * d[20] * d[33] * d[46] - 2 * d[2] * d[21] * d[33] * d[46] + 2 * d[5] * d[22] * d[33] * d[46] + 2 * d[4] * d[23] * d[33] * d[46] + 2 * d[2] * d[18] * d[34] * d[46] + 2 * d[0] * d[20] * d[34] * d[46] - 4 * d[4] * d[22] * d[34] * d[46] - 2 * d[5] * d[18] * d[35] * d[46] + 2 * d[4] * d[21] * d[35] * d[46] + 2 * d[3] * d[22] * d[35] * d[46] - 2 * d[0] * d[23] * d[35] * d[46] - 2 * d[21] * d[29] * d[45] * d[46] - 2 * d[20] * d[30] * d[45] * d[46] + 2 * d[23] * d[31] * d[45] * d[46] + 2 * d[22] * d[32] * d[45] * d[46] + d[20] * d[27] * std::pow(d[46], 2) + d[18] * d[29] * std::pow(d[46], 2) - 2 * d[22] * d[31] * std::pow(d[46], 2) + 2 * d[8] * d[19] * d[27] * d[47] - 2 * d[7] * d[23] * d[27] * d[47] - 2 * d[5] * d[25] * d[27] * d[47] + 2 * d[1] * d[26] * d[27] * d[47] + 2 * d[8] * d[18] * d[28] * d[47] - 2 * d[6] * d[22] * d[28] * d[47] - 2 * d[4] * d[24] * d[28] * d[47] + 2 * d[0] * d[26] * d[28] * d[47] - 4 * d[8] * d[21] * d[30] * d[47] + 2 * d[7] * d[22] * d[30] * d[47] + 2 * d[6] * d[23] * d[30] * d[47] + 2 * d[5] * d[24] * d[30] * d[47] + 2 * d[4] * d[25] * d[30] * d[47] - 4 * d[3] * d[26] * d[30] * d[47] - 2 * d[6] * d[19] * d[31] * d[47] + 2 * d[7] * d[21] * d[31] * d[47] - 2 * d[1] * d[24] * d[31] * d[47] + 2 * d[3] * d[25] * d[31] * d[47] - 2 * d[7] * d[18] * d[32] * d[47] + 2 * d[6] * d[21] * d[32] * d[47] + 2 * d[3] * d[24] * d[32] * d[47] - 2 * d[0] * d[25] * d[32] * d[47] - 2 * d[4] * d[19] * d[33] * d[47] + 2 * d[5] * d[21] * d[33] * d[47] - 2 * d[1] * d[22] * d[33] * d[47] + 2 * d[3] * d[23] * d[33] * d[47] - 2 * d[5] * d[18] * d[34] * d[47] + 2 * d[4] * d[21] * d[34] * d[47] + 2 * d[3] * d[22] * d[34] * d[47] - 2 * d[0] * d[23] * d[34] * d[47] + 2 * d[1] * d[18] * d[35] * d[47] + 2 * d[0] * d[19] * d[35] * d[47] - 4 * d[3] * d[21] * d[35] * d[47] - 2 * d[22] * d[28] * d[45] * d[47] + 2 * d[23] * d[30] * d[45] * d[47] - 2 * d[19] * d[31] * d[45] * d[47] + 2 * d[21] * d[32] * d[45] * d[47] - 2 * d[23] * d[27] * d[46] * d[47] + 2 * d[22] * d[30] * d[46] * d[47] + 2 * d[21] * d[31] * d[46] * d[47] - 2 * d[18] * d[32] * d[46] * d[47] + d[19] * d[27] * std::pow(d[47], 2) + d[18] * d[28] * std::pow(d[47], 2) - 2 * d[21] * d[30] * std::pow(d[47], 2) - d[2] * d[19] * d[27] * d[54] - d[1] * d[20] * d[27] * d[54] + 2 * d[5] * d[23] * d[27] * d[54] - d[2] * d[18] * d[28] * d[54] - d[0] * d[20] * d[28] * d[54] + 2 * d[4] * d[22] * d[28] * d[54] - d[1] * d[18] * d[29] * d[54] - d[0] * d[19] * d[29] * d[54] + 2 * d[3] * d[21] * d[29] * d[54] + 2 * d[3] * d[20] * d[30] * d[54] + 2 * d[2] * d[21] * d[30] * d[54] - 2 * d[5] * d[22] * d[30] * d[54] - 2 * d[4] * d[23] * d[30] * d[54] + 2 * d[4] * d[19] * d[31] * d[54] - 2 * d[5] * d[21] * d[31] * d[54] + 2 * d[1] * d[22] * d[31] * d[54] - 2 * d[3] * d[23] * d[31] * d[54] + 2 * d[5] * d[18] * d[32] * d[54] - 2 * d[4] * d[21] * d[32] * d[54] - 2 * d[3] * d[22] * d[32] * d[54] + 2 * d[0] * d[23] * d[32] * d[54];
    coeffs[25] = 2 * d[6] * d[28] * d[29] * d[45] - 2 * d[7] * d[29] * d[30] * d[45] - 2 * d[8] * d[28] * d[31] * d[45] + 2 * d[8] * d[30] * d[32] * d[45] + 2 * d[7] * d[31] * d[32] * d[45] - 2 * d[6] * std::pow(d[32], 2) * d[45] + 2 * d[2] * d[28] * d[33] * d[45] + 2 * d[1] * d[29] * d[33] * d[45] - 4 * d[5] * d[32] * d[33] * d[45] - 2 * d[3] * d[29] * d[34] * d[45] - 2 * d[2] * d[30] * d[34] * d[45] + 2 * d[5] * d[31] * d[34] * d[45] + 2 * d[4] * d[32] * d[34] * d[45] - 2 * d[4] * d[28] * d[35] * d[45] + 2 * d[5] * d[30] * d[35] * d[45] - 2 * d[1] * d[31] * d[35] * d[45] + 2 * d[3] * d[32] * d[35] * d[45] + d[28] * d[29] * std::pow(d[45], 2) - std::pow(d[32], 2) * std::pow(d[45], 2) + 2 * d[7] * d[27] * d[29] * d[46] - 2 * d[6] * d[29] * d[30] * d[46] + 2 * d[8] * d[30] * d[31] * d[46] - 2 * d[7] * std::pow(d[31], 2) * d[46] - 2 * d[8] * d[27] * d[32] * d[46] + 2 * d[6] * d[31] * d[32] * d[46] - 2 * d[3] * d[29] * d[33] * d[46] - 2 * d[2] * d[30] * d[33] * d[46] + 2 * d[5] * d[31] * d[33] * d[46] + 2 * d[4] * d[32] * d[33] * d[46] + 2 * d[2] * d[27] * d[34] * d[46] + 2 * d[0] * d[29] * d[34] * d[46] - 4 * d[4] * d[31] * d[34] * d[46] - 2 * d[5] * d[27] * d[35] * d[46] + 2 * d[4] * d[30] * d[35] * d[46] + 2 * d[3] * d[31] * d[35] * d[46] - 2 * d[0] * d[32] * d[35] * d[46] - 2 * d[29] * d[30] * d[45] * d[46] + 2 * d[31] * d[32] * d[45] * d[46] + d[27] * d[29] * std::pow(d[46], 2) - std::pow(d[31], 2) * std::pow(d[46], 2) + 2 * d[8] * d[27] * d[28] * d[47] - 2 * d[8] * std::pow(d[30], 2) * d[47] - 2 * d[6] * d[28] * d[31] * d[47] + 2 * d[7] * d[30] * d[31] * d[47] - 2 * d[7] * d[27] * d[32] * d[47] + 2 * d[6] * d[30] * d[32] * d[47] - 2 * d[4] * d[28] * d[33] * d[47] + 2 * d[5] * d[30] * d[33] * d[47] - 2 * d[1] * d[31] * d[33] * d[47] + 2 * d[3] * d[32] * d[33] * d[47] - 2 * d[5] * d[27] * d[34] * d[47] + 2 * d[4] * d[30] * d[34] * d[47] + 2 * d[3] * d[31] * d[34] * d[47] - 2 * d[0] * d[32] * d[34] * d[47] + 2 * d[1] * d[27] * d[35] * d[47] + 2 * d[0] * d[28] * d[35] * d[47] - 4 * d[3] * d[30] * d[35] * d[47] - 2 * d[28] * d[31] * d[45] * d[47] + 2 * d[30] * d[32] * d[45] * d[47] + 2 * d[30] * d[31] * d[46] * d[47] - 2 * d[27] * d[32] * d[46] * d[47] + d[27] * d[28] * std::pow(d[47], 2) - std::pow(d[30], 2) * std::pow(d[47], 2) - d[2] * d[27] * d[28] * d[54] - d[1] * d[27] * d[29] * d[54] - d[0] * d[28] * d[29] * d[54] + 2 * d[3] * d[29] * d[30] * d[54] + d[2] * std::pow(d[30], 2) * d[54] + 2 * d[4] * d[28] * d[31] * d[54] - 2 * d[5] * d[30] * d[31] * d[54] + d[1] * std::pow(d[31], 2) * d[54] + 2 * d[5] * d[27] * d[32] * d[54] - 2 * d[4] * d[30] * d[32] * d[54] - 2 * d[3] * d[31] * d[32] * d[54] + d[0] * std::pow(d[32], 2) * d[54];
    coeffs[26] = 2 * d[6] * d[11] * d[37] * d[45] - 2 * d[8] * d[13] * d[37] * d[45] + 2 * d[2] * d[15] * d[37] * d[45] - 2 * d[4] * d[17] * d[37] * d[45] + 2 * d[6] * d[10] * d[38] * d[45] - 2 * d[7] * d[12] * d[38] * d[45] + 2 * d[1] * d[15] * d[38] * d[45] - 2 * d[3] * d[16] * d[38] * d[45] - 2 * d[7] * d[11] * d[39] * d[45] + 2 * d[8] * d[14] * d[39] * d[45] - 2 * d[2] * d[16] * d[39] * d[45] + 2 * d[5] * d[17] * d[39] * d[45] - 2 * d[8] * d[10] * d[40] * d[45] + 2 * d[7] * d[14] * d[40] * d[45] + 2 * d[5] * d[16] * d[40] * d[45] - 2 * d[1] * d[17] * d[40] * d[45] + 2 * d[8] * d[12] * d[41] * d[45] + 2 * d[7] * d[13] * d[41] * d[45] - 4 * d[6] * d[14] * d[41] * d[45] - 4 * d[5] * d[15] * d[41] * d[45] + 2 * d[4] * d[16] * d[41] * d[45] + 2 * d[3] * d[17] * d[41] * d[45] + 2 * d[2] * d[10] * d[42] * d[45] + 2 * d[1] * d[11] * d[42] * d[45] - 4 * d[5] * d[14] * d[42] * d[45] - 2 * d[3] * d[11] * d[43] * d[45] - 2 * d[2] * d[12] * d[43] * d[45] + 2 * d[5] * d[13] * d[43] * d[45] + 2 * d[4] * d[14] * d[43] * d[45] - 2 * d[4] * d[10] * d[44] * d[45] + 2 * d[5] * d[12] * d[44] * d[45] - 2 * d[1] * d[13] * d[44] * d[45] + 2 * d[3] * d[14] * d[44] * d[45] + d[11] * d[37] * std::pow(d[45], 2) + d[10] * d[38] * std::pow(d[45], 2) - 2 * d[14] * d[41] * std::pow(d[45], 2) + 2 * d[7] * d[11] * d[36] * d[46] - 2 * d[8] * d[14] * d[36] * d[46] + 2 * d[2] * d[16] * d[36] * d[46] - 2 * d[5] * d[17] * d[36] * d[46] + 2 * d[7] * d[9] * d[38] * d[46] - 2 * d[6] * d[12] * d[38] * d[46] - 2 * d[3] * d[15] * d[38] * d[46] + 2 * d[0] * d[16] * d[38] * d[46] - 2 * d[6] * d[11] * d[39] * d[46] + 2 * d[8] * d[13] * d[39] * d[46] - 2 * d[2] * d[15] * d[39] * d[46] + 2 * d[4] * d[17] * d[39] * d[46] + 2 * d[8] * d[12] * d[40] * d[46] - 4 * d[7] * d[13] * d[40] * d[46] + 2 * d[6] * d[14] * d[40] * d[46] + 2 * d[5] * d[15] * d[40] * d[46] - 4 * d[4] * d[16] * d[40] * d[46] + 2 * d[3] * d[17] * d[40] * d[46] - 2 * d[8] * d[9] * d[41] * d[46] + 2 * d[6] * d[13] * d[41] * d[46] + 2 * d[4] * d[15] * d[41] * d[46] - 2 * d[0] * d[17] * d[41] * d[46] - 2 * d[3] * d[11] * d[42] * d[46] - 2 * d[2] * d[12] * d[42] * d[46] + 2 * d[5] * d[13] * d[42] * d[46] + 2 * d[4] * d[14] * d[42] * d[46] + 2 * d[2] * d[9] * d[43] * d[46] + 2 * d[0] * d[11] * d[43] * d[46] - 4 * d[4] * d[13] * d[43] * d[46] - 2 * d[5] * d[9] * d[44] * d[46] + 2 * d[4] * d[12] * d[44] * d[46] + 2 * d[3] * d[13] * d[44] * d[46] - 2 * d[0] * d[14] * d[44] * d[46] - 2 * d[12] * d[38] * d[45] * d[46] - 2 * d[11] * d[39] * d[45] * d[46] + 2 * d[14] * d[40] * d[45] * d[46] + 2 * d[13] * d[41] * d[45] * d[46] + d[11] * d[36] * std::pow(d[46], 2) + d[9] * d[38] * std::pow(d[46], 2) - 2 * d[13] * d[40] * std::pow(d[46], 2) + 2 * d[8] * d[10] * d[36] * d[47] - 2 * d[7] * d[14] * d[36] * d[47] - 2 * d[5] * d[16] * d[36] * d[47] + 2 * d[1] * d[17] * d[36] * d[47] + 2 * d[8] * d[9] * d[37] * d[47] - 2 * d[6] * d[13] * d[37] * d[47] - 2 * d[4] * d[15] * d[37] * d[47] + 2 * d[0] * d[17] * d[37] * d[47] - 4 * d[8] * d[12] * d[39] * d[47] + 2 * d[7] * d[13] * d[39] * d[47] + 2 * d[6] * d[14] * d[39] * d[47] + 2 * d[5] * d[15] * d[39] * d[47] + 2 * d[4] * d[16] * d[39] * d[47] - 4 * d[3] * d[17] * d[39] * d[47] - 2 * d[6] * d[10] * d[40] * d[47] + 2 * d[7] * d[12] * d[40] * d[47] - 2 * d[1] * d[15] * d[40] * d[47] + 2 * d[3] * d[16] * d[40] * d[47] - 2 * d[7] * d[9] * d[41] * d[47] + 2 * d[6] * d[12] * d[41] * d[47] + 2 * d[3] * d[15] * d[41] * d[47] - 2 * d[0] * d[16] * d[41] * d[47] - 2 * d[4] * d[10] * d[42] * d[47] + 2 * d[5] * d[12] * d[42] * d[47] - 2 * d[1] * d[13] * d[42] * d[47] + 2 * d[3] * d[14] * d[42] * d[47] - 2 * d[5] * d[9] * d[43] * d[47] + 2 * d[4] * d[12] * d[43] * d[47] + 2 * d[3] * d[13] * d[43] * d[47] - 2 * d[0] * d[14] * d[43] * d[47] + 2 * d[1] * d[9] * d[44] * d[47] + 2 * d[0] * d[10] * d[44] * d[47] - 4 * d[3] * d[12] * d[44] * d[47] - 2 * d[13] * d[37] * d[45] * d[47] + 2 * d[14] * d[39] * d[45] * d[47] - 2 * d[10] * d[40] * d[45] * d[47] + 2 * d[12] * d[41] * d[45] * d[47] - 2 * d[14] * d[36] * d[46] * d[47] + 2 * d[13] * d[39] * d[46] * d[47] + 2 * d[12] * d[40] * d[46] * d[47] - 2 * d[9] * d[41] * d[46] * d[47] + d[10] * d[36] * std::pow(d[47], 2) + d[9] * d[37] * std::pow(d[47], 2) - 2 * d[12] * d[39] * std::pow(d[47], 2) - d[2] * d[10] * d[36] * d[54] - d[1] * d[11] * d[36] * d[54] + 2 * d[5] * d[14] * d[36] * d[54] - d[2] * d[9] * d[37] * d[54] - d[0] * d[11] * d[37] * d[54] + 2 * d[4] * d[13] * d[37] * d[54] - d[1] * d[9] * d[38] * d[54] - d[0] * d[10] * d[38] * d[54] + 2 * d[3] * d[12] * d[38] * d[54] + 2 * d[3] * d[11] * d[39] * d[54] + 2 * d[2] * d[12] * d[39] * d[54] - 2 * d[5] * d[13] * d[39] * d[54] - 2 * d[4] * d[14] * d[39] * d[54] + 2 * d[4] * d[10] * d[40] * d[54] - 2 * d[5] * d[12] * d[40] * d[54] + 2 * d[1] * d[13] * d[40] * d[54] - 2 * d[3] * d[14] * d[40] * d[54] + 2 * d[5] * d[9] * d[41] * d[54] - 2 * d[4] * d[12] * d[41] * d[54] - 2 * d[3] * d[13] * d[41] * d[54] + 2 * d[0] * d[14] * d[41] * d[54];
    coeffs[27] = 2 * d[6] * d[20] * d[37] * d[45] - 2 * d[8] * d[22] * d[37] * d[45] + 2 * d[2] * d[24] * d[37] * d[45] - 2 * d[4] * d[26] * d[37] * d[45] + 2 * d[6] * d[19] * d[38] * d[45] - 2 * d[7] * d[21] * d[38] * d[45] + 2 * d[1] * d[24] * d[38] * d[45] - 2 * d[3] * d[25] * d[38] * d[45] - 2 * d[7] * d[20] * d[39] * d[45] + 2 * d[8] * d[23] * d[39] * d[45] - 2 * d[2] * d[25] * d[39] * d[45] + 2 * d[5] * d[26] * d[39] * d[45] - 2 * d[8] * d[19] * d[40] * d[45] + 2 * d[7] * d[23] * d[40] * d[45] + 2 * d[5] * d[25] * d[40] * d[45] - 2 * d[1] * d[26] * d[40] * d[45] + 2 * d[8] * d[21] * d[41] * d[45] + 2 * d[7] * d[22] * d[41] * d[45] - 4 * d[6] * d[23] * d[41] * d[45] - 4 * d[5] * d[24] * d[41] * d[45] + 2 * d[4] * d[25] * d[41] * d[45] + 2 * d[3] * d[26] * d[41] * d[45] + 2 * d[2] * d[19] * d[42] * d[45] + 2 * d[1] * d[20] * d[42] * d[45] - 4 * d[5] * d[23] * d[42] * d[45] - 2 * d[3] * d[20] * d[43] * d[45] - 2 * d[2] * d[21] * d[43] * d[45] + 2 * d[5] * d[22] * d[43] * d[45] + 2 * d[4] * d[23] * d[43] * d[45] - 2 * d[4] * d[19] * d[44] * d[45] + 2 * d[5] * d[21] * d[44] * d[45] - 2 * d[1] * d[22] * d[44] * d[45] + 2 * d[3] * d[23] * d[44] * d[45] + d[20] * d[37] * std::pow(d[45], 2) + d[19] * d[38] * std::pow(d[45], 2) - 2 * d[23] * d[41] * std::pow(d[45], 2) + 2 * d[7] * d[20] * d[36] * d[46] - 2 * d[8] * d[23] * d[36] * d[46] + 2 * d[2] * d[25] * d[36] * d[46] - 2 * d[5] * d[26] * d[36] * d[46] + 2 * d[7] * d[18] * d[38] * d[46] - 2 * d[6] * d[21] * d[38] * d[46] - 2 * d[3] * d[24] * d[38] * d[46] + 2 * d[0] * d[25] * d[38] * d[46] - 2 * d[6] * d[20] * d[39] * d[46] + 2 * d[8] * d[22] * d[39] * d[46] - 2 * d[2] * d[24] * d[39] * d[46] + 2 * d[4] * d[26] * d[39] * d[46] + 2 * d[8] * d[21] * d[40] * d[46] - 4 * d[7] * d[22] * d[40] * d[46] + 2 * d[6] * d[23] * d[40] * d[46] + 2 * d[5] * d[24] * d[40] * d[46] - 4 * d[4] * d[25] * d[40] * d[46] + 2 * d[3] * d[26] * d[40] * d[46] - 2 * d[8] * d[18] * d[41] * d[46] + 2 * d[6] * d[22] * d[41] * d[46] + 2 * d[4] * d[24] * d[41] * d[46] - 2 * d[0] * d[26] * d[41] * d[46] - 2 * d[3] * d[20] * d[42] * d[46] - 2 * d[2] * d[21] * d[42] * d[46] + 2 * d[5] * d[22] * d[42] * d[46] + 2 * d[4] * d[23] * d[42] * d[46] + 2 * d[2] * d[18] * d[43] * d[46] + 2 * d[0] * d[20] * d[43] * d[46] - 4 * d[4] * d[22] * d[43] * d[46] - 2 * d[5] * d[18] * d[44] * d[46] + 2 * d[4] * d[21] * d[44] * d[46] + 2 * d[3] * d[22] * d[44] * d[46] - 2 * d[0] * d[23] * d[44] * d[46] - 2 * d[21] * d[38] * d[45] * d[46] - 2 * d[20] * d[39] * d[45] * d[46] + 2 * d[23] * d[40] * d[45] * d[46] + 2 * d[22] * d[41] * d[45] * d[46] + d[20] * d[36] * std::pow(d[46], 2) + d[18] * d[38] * std::pow(d[46], 2) - 2 * d[22] * d[40] * std::pow(d[46], 2) + 2 * d[8] * d[19] * d[36] * d[47] - 2 * d[7] * d[23] * d[36] * d[47] - 2 * d[5] * d[25] * d[36] * d[47] + 2 * d[1] * d[26] * d[36] * d[47] + 2 * d[8] * d[18] * d[37] * d[47] - 2 * d[6] * d[22] * d[37] * d[47] - 2 * d[4] * d[24] * d[37] * d[47] + 2 * d[0] * d[26] * d[37] * d[47] - 4 * d[8] * d[21] * d[39] * d[47] + 2 * d[7] * d[22] * d[39] * d[47] + 2 * d[6] * d[23] * d[39] * d[47] + 2 * d[5] * d[24] * d[39] * d[47] + 2 * d[4] * d[25] * d[39] * d[47] - 4 * d[3] * d[26] * d[39] * d[47] - 2 * d[6] * d[19] * d[40] * d[47] + 2 * d[7] * d[21] * d[40] * d[47] - 2 * d[1] * d[24] * d[40] * d[47] + 2 * d[3] * d[25] * d[40] * d[47] - 2 * d[7] * d[18] * d[41] * d[47] + 2 * d[6] * d[21] * d[41] * d[47] + 2 * d[3] * d[24] * d[41] * d[47] - 2 * d[0] * d[25] * d[41] * d[47] - 2 * d[4] * d[19] * d[42] * d[47] + 2 * d[5] * d[21] * d[42] * d[47] - 2 * d[1] * d[22] * d[42] * d[47] + 2 * d[3] * d[23] * d[42] * d[47] - 2 * d[5] * d[18] * d[43] * d[47] + 2 * d[4] * d[21] * d[43] * d[47] + 2 * d[3] * d[22] * d[43] * d[47] - 2 * d[0] * d[23] * d[43] * d[47] + 2 * d[1] * d[18] * d[44] * d[47] + 2 * d[0] * d[19] * d[44] * d[47] - 4 * d[3] * d[21] * d[44] * d[47] - 2 * d[22] * d[37] * d[45] * d[47] + 2 * d[23] * d[39] * d[45] * d[47] - 2 * d[19] * d[40] * d[45] * d[47] + 2 * d[21] * d[41] * d[45] * d[47] - 2 * d[23] * d[36] * d[46] * d[47] + 2 * d[22] * d[39] * d[46] * d[47] + 2 * d[21] * d[40] * d[46] * d[47] - 2 * d[18] * d[41] * d[46] * d[47] + d[19] * d[36] * std::pow(d[47], 2) + d[18] * d[37] * std::pow(d[47], 2) - 2 * d[21] * d[39] * std::pow(d[47], 2) - d[2] * d[19] * d[36] * d[54] - d[1] * d[20] * d[36] * d[54] + 2 * d[5] * d[23] * d[36] * d[54] - d[2] * d[18] * d[37] * d[54] - d[0] * d[20] * d[37] * d[54] + 2 * d[4] * d[22] * d[37] * d[54] - d[1] * d[18] * d[38] * d[54] - d[0] * d[19] * d[38] * d[54] + 2 * d[3] * d[21] * d[38] * d[54] + 2 * d[3] * d[20] * d[39] * d[54] + 2 * d[2] * d[21] * d[39] * d[54] - 2 * d[5] * d[22] * d[39] * d[54] - 2 * d[4] * d[23] * d[39] * d[54] + 2 * d[4] * d[19] * d[40] * d[54] - 2 * d[5] * d[21] * d[40] * d[54] + 2 * d[1] * d[22] * d[40] * d[54] - 2 * d[3] * d[23] * d[40] * d[54] + 2 * d[5] * d[18] * d[41] * d[54] - 2 * d[4] * d[21] * d[41] * d[54] - 2 * d[3] * d[22] * d[41] * d[54] + 2 * d[0] * d[23] * d[41] * d[54];
    coeffs[28] = 2 * d[6] * d[29] * d[37] * d[45] - 2 * d[8] * d[31] * d[37] * d[45] + 2 * d[2] * d[33] * d[37] * d[45] - 2 * d[4] * d[35] * d[37] * d[45] + 2 * d[6] * d[28] * d[38] * d[45] - 2 * d[7] * d[30] * d[38] * d[45] + 2 * d[1] * d[33] * d[38] * d[45] - 2 * d[3] * d[34] * d[38] * d[45] - 2 * d[7] * d[29] * d[39] * d[45] + 2 * d[8] * d[32] * d[39] * d[45] - 2 * d[2] * d[34] * d[39] * d[45] + 2 * d[5] * d[35] * d[39] * d[45] - 2 * d[8] * d[28] * d[40] * d[45] + 2 * d[7] * d[32] * d[40] * d[45] + 2 * d[5] * d[34] * d[40] * d[45] - 2 * d[1] * d[35] * d[40] * d[45] + 2 * d[8] * d[30] * d[41] * d[45] + 2 * d[7] * d[31] * d[41] * d[45] - 4 * d[6] * d[32] * d[41] * d[45] - 4 * d[5] * d[33] * d[41] * d[45] + 2 * d[4] * d[34] * d[41] * d[45] + 2 * d[3] * d[35] * d[41] * d[45] + 2 * d[2] * d[28] * d[42] * d[45] + 2 * d[1] * d[29] * d[42] * d[45] - 4 * d[5] * d[32] * d[42] * d[45] - 2 * d[3] * d[29] * d[43] * d[45] - 2 * d[2] * d[30] * d[43] * d[45] + 2 * d[5] * d[31] * d[43] * d[45] + 2 * d[4] * d[32] * d[43] * d[45] - 2 * d[4] * d[28] * d[44] * d[45] + 2 * d[5] * d[30] * d[44] * d[45] - 2 * d[1] * d[31] * d[44] * d[45] + 2 * d[3] * d[32] * d[44] * d[45] + d[29] * d[37] * std::pow(d[45], 2) + d[28] * d[38] * std::pow(d[45], 2) - 2 * d[32] * d[41] * std::pow(d[45], 2) + 2 * d[7] * d[29] * d[36] * d[46] - 2 * d[8] * d[32] * d[36] * d[46] + 2 * d[2] * d[34] * d[36] * d[46] - 2 * d[5] * d[35] * d[36] * d[46] + 2 * d[7] * d[27] * d[38] * d[46] - 2 * d[6] * d[30] * d[38] * d[46] - 2 * d[3] * d[33] * d[38] * d[46] + 2 * d[0] * d[34] * d[38] * d[46] - 2 * d[6] * d[29] * d[39] * d[46] + 2 * d[8] * d[31] * d[39] * d[46] - 2 * d[2] * d[33] * d[39] * d[46] + 2 * d[4] * d[35] * d[39] * d[46] + 2 * d[8] * d[30] * d[40] * d[46] - 4 * d[7] * d[31] * d[40] * d[46] + 2 * d[6] * d[32] * d[40] * d[46] + 2 * d[5] * d[33] * d[40] * d[46] - 4 * d[4] * d[34] * d[40] * d[46] + 2 * d[3] * d[35] * d[40] * d[46] - 2 * d[8] * d[27] * d[41] * d[46] + 2 * d[6] * d[31] * d[41] * d[46] + 2 * d[4] * d[33] * d[41] * d[46] - 2 * d[0] * d[35] * d[41] * d[46] - 2 * d[3] * d[29] * d[42] * d[46] - 2 * d[2] * d[30] * d[42] * d[46] + 2 * d[5] * d[31] * d[42] * d[46] + 2 * d[4] * d[32] * d[42] * d[46] + 2 * d[2] * d[27] * d[43] * d[46] + 2 * d[0] * d[29] * d[43] * d[46] - 4 * d[4] * d[31] * d[43] * d[46] - 2 * d[5] * d[27] * d[44] * d[46] + 2 * d[4] * d[30] * d[44] * d[46] + 2 * d[3] * d[31] * d[44] * d[46] - 2 * d[0] * d[32] * d[44] * d[46] - 2 * d[30] * d[38] * d[45] * d[46] - 2 * d[29] * d[39] * d[45] * d[46] + 2 * d[32] * d[40] * d[45] * d[46] + 2 * d[31] * d[41] * d[45] * d[46] + d[29] * d[36] * std::pow(d[46], 2) + d[27] * d[38] * std::pow(d[46], 2) - 2 * d[31] * d[40] * std::pow(d[46], 2) + 2 * d[8] * d[28] * d[36] * d[47] - 2 * d[7] * d[32] * d[36] * d[47] - 2 * d[5] * d[34] * d[36] * d[47] + 2 * d[1] * d[35] * d[36] * d[47] + 2 * d[8] * d[27] * d[37] * d[47] - 2 * d[6] * d[31] * d[37] * d[47] - 2 * d[4] * d[33] * d[37] * d[47] + 2 * d[0] * d[35] * d[37] * d[47] - 4 * d[8] * d[30] * d[39] * d[47] + 2 * d[7] * d[31] * d[39] * d[47] + 2 * d[6] * d[32] * d[39] * d[47] + 2 * d[5] * d[33] * d[39] * d[47] + 2 * d[4] * d[34] * d[39] * d[47] - 4 * d[3] * d[35] * d[39] * d[47] - 2 * d[6] * d[28] * d[40] * d[47] + 2 * d[7] * d[30] * d[40] * d[47] - 2 * d[1] * d[33] * d[40] * d[47] + 2 * d[3] * d[34] * d[40] * d[47] - 2 * d[7] * d[27] * d[41] * d[47] + 2 * d[6] * d[30] * d[41] * d[47] + 2 * d[3] * d[33] * d[41] * d[47] - 2 * d[0] * d[34] * d[41] * d[47] - 2 * d[4] * d[28] * d[42] * d[47] + 2 * d[5] * d[30] * d[42] * d[47] - 2 * d[1] * d[31] * d[42] * d[47] + 2 * d[3] * d[32] * d[42] * d[47] - 2 * d[5] * d[27] * d[43] * d[47] + 2 * d[4] * d[30] * d[43] * d[47] + 2 * d[3] * d[31] * d[43] * d[47] - 2 * d[0] * d[32] * d[43] * d[47] + 2 * d[1] * d[27] * d[44] * d[47] + 2 * d[0] * d[28] * d[44] * d[47] - 4 * d[3] * d[30] * d[44] * d[47] - 2 * d[31] * d[37] * d[45] * d[47] + 2 * d[32] * d[39] * d[45] * d[47] - 2 * d[28] * d[40] * d[45] * d[47] + 2 * d[30] * d[41] * d[45] * d[47] - 2 * d[32] * d[36] * d[46] * d[47] + 2 * d[31] * d[39] * d[46] * d[47] + 2 * d[30] * d[40] * d[46] * d[47] - 2 * d[27] * d[41] * d[46] * d[47] + d[28] * d[36] * std::pow(d[47], 2) + d[27] * d[37] * std::pow(d[47], 2) - 2 * d[30] * d[39] * std::pow(d[47], 2) - d[2] * d[28] * d[36] * d[54] - d[1] * d[29] * d[36] * d[54] + 2 * d[5] * d[32] * d[36] * d[54] - d[2] * d[27] * d[37] * d[54] - d[0] * d[29] * d[37] * d[54] + 2 * d[4] * d[31] * d[37] * d[54] - d[1] * d[27] * d[38] * d[54] - d[0] * d[28] * d[38] * d[54] + 2 * d[3] * d[30] * d[38] * d[54] + 2 * d[3] * d[29] * d[39] * d[54] + 2 * d[2] * d[30] * d[39] * d[54] - 2 * d[5] * d[31] * d[39] * d[54] - 2 * d[4] * d[32] * d[39] * d[54] + 2 * d[4] * d[28] * d[40] * d[54] - 2 * d[5] * d[30] * d[40] * d[54] + 2 * d[1] * d[31] * d[40] * d[54] - 2 * d[3] * d[32] * d[40] * d[54] + 2 * d[5] * d[27] * d[41] * d[54] - 2 * d[4] * d[30] * d[41] * d[54] - 2 * d[3] * d[31] * d[41] * d[54] + 2 * d[0] * d[32] * d[41] * d[54];
    coeffs[29] = 2 * d[6] * d[37] * d[38] * d[45] - 2 * d[7] * d[38] * d[39] * d[45] - 2 * d[8] * d[37] * d[40] * d[45] + 2 * d[8] * d[39] * d[41] * d[45] + 2 * d[7] * d[40] * d[41] * d[45] - 2 * d[6] * std::pow(d[41], 2) * d[45] + 2 * d[2] * d[37] * d[42] * d[45] + 2 * d[1] * d[38] * d[42] * d[45] - 4 * d[5] * d[41] * d[42] * d[45] - 2 * d[3] * d[38] * d[43] * d[45] - 2 * d[2] * d[39] * d[43] * d[45] + 2 * d[5] * d[40] * d[43] * d[45] + 2 * d[4] * d[41] * d[43] * d[45] - 2 * d[4] * d[37] * d[44] * d[45] + 2 * d[5] * d[39] * d[44] * d[45] - 2 * d[1] * d[40] * d[44] * d[45] + 2 * d[3] * d[41] * d[44] * d[45] + d[37] * d[38] * std::pow(d[45], 2) - std::pow(d[41], 2) * std::pow(d[45], 2) + 2 * d[7] * d[36] * d[38] * d[46] - 2 * d[6] * d[38] * d[39] * d[46] + 2 * d[8] * d[39] * d[40] * d[46] - 2 * d[7] * std::pow(d[40], 2) * d[46] - 2 * d[8] * d[36] * d[41] * d[46] + 2 * d[6] * d[40] * d[41] * d[46] - 2 * d[3] * d[38] * d[42] * d[46] - 2 * d[2] * d[39] * d[42] * d[46] + 2 * d[5] * d[40] * d[42] * d[46] + 2 * d[4] * d[41] * d[42] * d[46] + 2 * d[2] * d[36] * d[43] * d[46] + 2 * d[0] * d[38] * d[43] * d[46] - 4 * d[4] * d[40] * d[43] * d[46] - 2 * d[5] * d[36] * d[44] * d[46] + 2 * d[4] * d[39] * d[44] * d[46] + 2 * d[3] * d[40] * d[44] * d[46] - 2 * d[0] * d[41] * d[44] * d[46] - 2 * d[38] * d[39] * d[45] * d[46] + 2 * d[40] * d[41] * d[45] * d[46] + d[36] * d[38] * std::pow(d[46], 2) - std::pow(d[40], 2) * std::pow(d[46], 2) + 2 * d[8] * d[36] * d[37] * d[47] - 2 * d[8] * std::pow(d[39], 2) * d[47] - 2 * d[6] * d[37] * d[40] * d[47] + 2 * d[7] * d[39] * d[40] * d[47] - 2 * d[7] * d[36] * d[41] * d[47] + 2 * d[6] * d[39] * d[41] * d[47] - 2 * d[4] * d[37] * d[42] * d[47] + 2 * d[5] * d[39] * d[42] * d[47] - 2 * d[1] * d[40] * d[42] * d[47] + 2 * d[3] * d[41] * d[42] * d[47] - 2 * d[5] * d[36] * d[43] * d[47] + 2 * d[4] * d[39] * d[43] * d[47] + 2 * d[3] * d[40] * d[43] * d[47] - 2 * d[0] * d[41] * d[43] * d[47] + 2 * d[1] * d[36] * d[44] * d[47] + 2 * d[0] * d[37] * d[44] * d[47] - 4 * d[3] * d[39] * d[44] * d[47] - 2 * d[37] * d[40] * d[45] * d[47] + 2 * d[39] * d[41] * d[45] * d[47] + 2 * d[39] * d[40] * d[46] * d[47] - 2 * d[36] * d[41] * d[46] * d[47] + d[36] * d[37] * std::pow(d[47], 2) - std::pow(d[39], 2) * std::pow(d[47], 2) - d[2] * d[36] * d[37] * d[54] - d[1] * d[36] * d[38] * d[54] - d[0] * d[37] * d[38] * d[54] + 2 * d[3] * d[38] * d[39] * d[54] + d[2] * std::pow(d[39], 2) * d[54] + 2 * d[4] * d[37] * d[40] * d[54] - 2 * d[5] * d[39] * d[40] * d[54] + d[1] * std::pow(d[40], 2) * d[54] + 2 * d[5] * d[36] * d[41] * d[54] - 2 * d[4] * d[39] * d[41] * d[54] - 2 * d[3] * d[40] * d[41] * d[54] + d[0] * std::pow(d[41], 2) * d[54];
    coeffs[30] = 2 * d[2] * d[6] * d[10] * d[45] - 2 * d[4] * d[8] * d[10] * d[45] + 2 * d[1] * d[6] * d[11] * d[45] - 2 * d[3] * d[7] * d[11] * d[45] - 2 * d[2] * d[7] * d[12] * d[45] + 2 * d[5] * d[8] * d[12] * d[45] + 2 * d[5] * d[7] * d[13] * d[45] - 2 * d[1] * d[8] * d[13] * d[45] - 4 * d[5] * d[6] * d[14] * d[45] + 2 * d[4] * d[7] * d[14] * d[45] + 2 * d[3] * d[8] * d[14] * d[45] + 2 * d[1] * d[2] * d[15] * d[45] - 2 * std::pow(d[5], 2) * d[15] * d[45] - 2 * d[2] * d[3] * d[16] * d[45] + 2 * d[4] * d[5] * d[16] * d[45] - 2 * d[1] * d[4] * d[17] * d[45] + 2 * d[3] * d[5] * d[17] * d[45] + d[2] * d[10] * std::pow(d[45], 2) + d[1] * d[11] * std::pow(d[45], 2) - 2 * d[5] * d[14] * std::pow(d[45], 2) + 2 * d[2] * d[7] * d[9] * d[46] - 2 * d[5] * d[8] * d[9] * d[46] - 2 * d[3] * d[6] * d[11] * d[46] + 2 * d[0] * d[7] * d[11] * d[46] - 2 * d[2] * d[6] * d[12] * d[46] + 2 * d[4] * d[8] * d[12] * d[46] + 2 * d[5] * d[6] * d[13] * d[46] - 4 * d[4] * d[7] * d[13] * d[46] + 2 * d[3] * d[8] * d[13] * d[46] + 2 * d[4] * d[6] * d[14] * d[46] - 2 * d[0] * d[8] * d[14] * d[46] - 2 * d[2] * d[3] * d[15] * d[46] + 2 * d[4] * d[5] * d[15] * d[46] + 2 * d[0] * d[2] * d[16] * d[46] - 2 * std::pow(d[4], 2) * d[16] * d[46] + 2 * d[3] * d[4] * d[17] * d[46] - 2 * d[0] * d[5] * d[17] * d[46] - 2 * d[3] * d[11] * d[45] * d[46] - 2 * d[2] * d[12] * d[45] * d[46] + 2 * d[5] * d[13] * d[45] * d[46] + 2 * d[4] * d[14] * d[45] * d[46] + d[2] * d[9] * std::pow(d[46], 2) + d[0] * d[11] * std::pow(d[46], 2) - 2 * d[4] * d[13] * std::pow(d[46], 2) - 2 * d[5] * d[7] * d[9] * d[47] + 2 * d[1] * d[8] * d[9] * d[47] - 2 * d[4] * d[6] * d[10] * d[47] + 2 * d[0] * d[8] * d[10] * d[47] + 2 * d[5] * d[6] * d[12] * d[47] + 2 * d[4] * d[7] * d[12] * d[47] - 4 * d[3] * d[8] * d[12] * d[47] - 2 * d[1] * d[6] * d[13] * d[47] + 2 * d[3] * d[7] * d[13] * d[47] + 2 * d[3] * d[6] * d[14] * d[47] - 2 * d[0] * d[7] * d[14] * d[47] - 2 * d[1] * d[4] * d[15] * d[47] + 2 * d[3] * d[5] * d[15] * d[47] + 2 * d[3] * d[4] * d[16] * d[47] - 2 * d[0] * d[5] * d[16] * d[47] + 2 * d[0] * d[1] * d[17] * d[47] - 2 * std::pow(d[3], 2) * d[17] * d[47] - 2 * d[4] * d[10] * d[45] * d[47] + 2 * d[5] * d[12] * d[45] * d[47] - 2 * d[1] * d[13] * d[45] * d[47] + 2 * d[3] * d[14] * d[45] * d[47] - 2 * d[5] * d[9] * d[46] * d[47] + 2 * d[4] * d[12] * d[46] * d[47] + 2 * d[3] * d[13] * d[46] * d[47] - 2 * d[0] * d[14] * d[46] * d[47] + d[1] * d[9] * std::pow(d[47], 2) + d[0] * d[10] * std::pow(d[47], 2) - 2 * d[3] * d[12] * std::pow(d[47], 2) - d[1] * d[2] * d[9] * d[54] + std::pow(d[5], 2) * d[9] * d[54] - d[0] * d[2] * d[10] * d[54] + std::pow(d[4], 2) * d[10] * d[54] - d[0] * d[1] * d[11] * d[54] + std::pow(d[3], 2) * d[11] * d[54] + 2 * d[2] * d[3] * d[12] * d[54] - 2 * d[4] * d[5] * d[12] * d[54] + 2 * d[1] * d[4] * d[13] * d[54] - 2 * d[3] * d[5] * d[13] * d[54] - 2 * d[3] * d[4] * d[14] * d[54] + 2 * d[0] * d[5] * d[14] * d[54];
    coeffs[31] = 2 * d[2] * d[6] * d[19] * d[45] - 2 * d[4] * d[8] * d[19] * d[45] + 2 * d[1] * d[6] * d[20] * d[45] - 2 * d[3] * d[7] * d[20] * d[45] - 2 * d[2] * d[7] * d[21] * d[45] + 2 * d[5] * d[8] * d[21] * d[45] + 2 * d[5] * d[7] * d[22] * d[45] - 2 * d[1] * d[8] * d[22] * d[45] - 4 * d[5] * d[6] * d[23] * d[45] + 2 * d[4] * d[7] * d[23] * d[45] + 2 * d[3] * d[8] * d[23] * d[45] + 2 * d[1] * d[2] * d[24] * d[45] - 2 * std::pow(d[5], 2) * d[24] * d[45] - 2 * d[2] * d[3] * d[25] * d[45] + 2 * d[4] * d[5] * d[25] * d[45] - 2 * d[1] * d[4] * d[26] * d[45] + 2 * d[3] * d[5] * d[26] * d[45] + d[2] * d[19] * std::pow(d[45], 2) + d[1] * d[20] * std::pow(d[45], 2) - 2 * d[5] * d[23] * std::pow(d[45], 2) + 2 * d[2] * d[7] * d[18] * d[46] - 2 * d[5] * d[8] * d[18] * d[46] - 2 * d[3] * d[6] * d[20] * d[46] + 2 * d[0] * d[7] * d[20] * d[46] - 2 * d[2] * d[6] * d[21] * d[46] + 2 * d[4] * d[8] * d[21] * d[46] + 2 * d[5] * d[6] * d[22] * d[46] - 4 * d[4] * d[7] * d[22] * d[46] + 2 * d[3] * d[8] * d[22] * d[46] + 2 * d[4] * d[6] * d[23] * d[46] - 2 * d[0] * d[8] * d[23] * d[46] - 2 * d[2] * d[3] * d[24] * d[46] + 2 * d[4] * d[5] * d[24] * d[46] + 2 * d[0] * d[2] * d[25] * d[46] - 2 * std::pow(d[4], 2) * d[25] * d[46] + 2 * d[3] * d[4] * d[26] * d[46] - 2 * d[0] * d[5] * d[26] * d[46] - 2 * d[3] * d[20] * d[45] * d[46] - 2 * d[2] * d[21] * d[45] * d[46] + 2 * d[5] * d[22] * d[45] * d[46] + 2 * d[4] * d[23] * d[45] * d[46] + d[2] * d[18] * std::pow(d[46], 2) + d[0] * d[20] * std::pow(d[46], 2) - 2 * d[4] * d[22] * std::pow(d[46], 2) - 2 * d[5] * d[7] * d[18] * d[47] + 2 * d[1] * d[8] * d[18] * d[47] - 2 * d[4] * d[6] * d[19] * d[47] + 2 * d[0] * d[8] * d[19] * d[47] + 2 * d[5] * d[6] * d[21] * d[47] + 2 * d[4] * d[7] * d[21] * d[47] - 4 * d[3] * d[8] * d[21] * d[47] - 2 * d[1] * d[6] * d[22] * d[47] + 2 * d[3] * d[7] * d[22] * d[47] + 2 * d[3] * d[6] * d[23] * d[47] - 2 * d[0] * d[7] * d[23] * d[47] - 2 * d[1] * d[4] * d[24] * d[47] + 2 * d[3] * d[5] * d[24] * d[47] + 2 * d[3] * d[4] * d[25] * d[47] - 2 * d[0] * d[5] * d[25] * d[47] + 2 * d[0] * d[1] * d[26] * d[47] - 2 * std::pow(d[3], 2) * d[26] * d[47] - 2 * d[4] * d[19] * d[45] * d[47] + 2 * d[5] * d[21] * d[45] * d[47] - 2 * d[1] * d[22] * d[45] * d[47] + 2 * d[3] * d[23] * d[45] * d[47] - 2 * d[5] * d[18] * d[46] * d[47] + 2 * d[4] * d[21] * d[46] * d[47] + 2 * d[3] * d[22] * d[46] * d[47] - 2 * d[0] * d[23] * d[46] * d[47] + d[1] * d[18] * std::pow(d[47], 2) + d[0] * d[19] * std::pow(d[47], 2) - 2 * d[3] * d[21] * std::pow(d[47], 2) - d[1] * d[2] * d[18] * d[54] + std::pow(d[5], 2) * d[18] * d[54] - d[0] * d[2] * d[19] * d[54] + std::pow(d[4], 2) * d[19] * d[54] - d[0] * d[1] * d[20] * d[54] + std::pow(d[3], 2) * d[20] * d[54] + 2 * d[2] * d[3] * d[21] * d[54] - 2 * d[4] * d[5] * d[21] * d[54] + 2 * d[1] * d[4] * d[22] * d[54] - 2 * d[3] * d[5] * d[22] * d[54] - 2 * d[3] * d[4] * d[23] * d[54] + 2 * d[0] * d[5] * d[23] * d[54];
    coeffs[32] = 2 * d[2] * d[6] * d[28] * d[45] - 2 * d[4] * d[8] * d[28] * d[45] + 2 * d[1] * d[6] * d[29] * d[45] - 2 * d[3] * d[7] * d[29] * d[45] - 2 * d[2] * d[7] * d[30] * d[45] + 2 * d[5] * d[8] * d[30] * d[45] + 2 * d[5] * d[7] * d[31] * d[45] - 2 * d[1] * d[8] * d[31] * d[45] - 4 * d[5] * d[6] * d[32] * d[45] + 2 * d[4] * d[7] * d[32] * d[45] + 2 * d[3] * d[8] * d[32] * d[45] + 2 * d[1] * d[2] * d[33] * d[45] - 2 * std::pow(d[5], 2) * d[33] * d[45] - 2 * d[2] * d[3] * d[34] * d[45] + 2 * d[4] * d[5] * d[34] * d[45] - 2 * d[1] * d[4] * d[35] * d[45] + 2 * d[3] * d[5] * d[35] * d[45] + d[2] * d[28] * std::pow(d[45], 2) + d[1] * d[29] * std::pow(d[45], 2) - 2 * d[5] * d[32] * std::pow(d[45], 2) + 2 * d[2] * d[7] * d[27] * d[46] - 2 * d[5] * d[8] * d[27] * d[46] - 2 * d[3] * d[6] * d[29] * d[46] + 2 * d[0] * d[7] * d[29] * d[46] - 2 * d[2] * d[6] * d[30] * d[46] + 2 * d[4] * d[8] * d[30] * d[46] + 2 * d[5] * d[6] * d[31] * d[46] - 4 * d[4] * d[7] * d[31] * d[46] + 2 * d[3] * d[8] * d[31] * d[46] + 2 * d[4] * d[6] * d[32] * d[46] - 2 * d[0] * d[8] * d[32] * d[46] - 2 * d[2] * d[3] * d[33] * d[46] + 2 * d[4] * d[5] * d[33] * d[46] + 2 * d[0] * d[2] * d[34] * d[46] - 2 * std::pow(d[4], 2) * d[34] * d[46] + 2 * d[3] * d[4] * d[35] * d[46] - 2 * d[0] * d[5] * d[35] * d[46] - 2 * d[3] * d[29] * d[45] * d[46] - 2 * d[2] * d[30] * d[45] * d[46] + 2 * d[5] * d[31] * d[45] * d[46] + 2 * d[4] * d[32] * d[45] * d[46] + d[2] * d[27] * std::pow(d[46], 2) + d[0] * d[29] * std::pow(d[46], 2) - 2 * d[4] * d[31] * std::pow(d[46], 2) - 2 * d[5] * d[7] * d[27] * d[47] + 2 * d[1] * d[8] * d[27] * d[47] - 2 * d[4] * d[6] * d[28] * d[47] + 2 * d[0] * d[8] * d[28] * d[47] + 2 * d[5] * d[6] * d[30] * d[47] + 2 * d[4] * d[7] * d[30] * d[47] - 4 * d[3] * d[8] * d[30] * d[47] - 2 * d[1] * d[6] * d[31] * d[47] + 2 * d[3] * d[7] * d[31] * d[47] + 2 * d[3] * d[6] * d[32] * d[47] - 2 * d[0] * d[7] * d[32] * d[47] - 2 * d[1] * d[4] * d[33] * d[47] + 2 * d[3] * d[5] * d[33] * d[47] + 2 * d[3] * d[4] * d[34] * d[47] - 2 * d[0] * d[5] * d[34] * d[47] + 2 * d[0] * d[1] * d[35] * d[47] - 2 * std::pow(d[3], 2) * d[35] * d[47] - 2 * d[4] * d[28] * d[45] * d[47] + 2 * d[5] * d[30] * d[45] * d[47] - 2 * d[1] * d[31] * d[45] * d[47] + 2 * d[3] * d[32] * d[45] * d[47] - 2 * d[5] * d[27] * d[46] * d[47] + 2 * d[4] * d[30] * d[46] * d[47] + 2 * d[3] * d[31] * d[46] * d[47] - 2 * d[0] * d[32] * d[46] * d[47] + d[1] * d[27] * std::pow(d[47], 2) + d[0] * d[28] * std::pow(d[47], 2) - 2 * d[3] * d[30] * std::pow(d[47], 2) - d[1] * d[2] * d[27] * d[54] + std::pow(d[5], 2) * d[27] * d[54] - d[0] * d[2] * d[28] * d[54] + std::pow(d[4], 2) * d[28] * d[54] - d[0] * d[1] * d[29] * d[54] + std::pow(d[3], 2) * d[29] * d[54] + 2 * d[2] * d[3] * d[30] * d[54] - 2 * d[4] * d[5] * d[30] * d[54] + 2 * d[1] * d[4] * d[31] * d[54] - 2 * d[3] * d[5] * d[31] * d[54] - 2 * d[3] * d[4] * d[32] * d[54] + 2 * d[0] * d[5] * d[32] * d[54];
    coeffs[33] = 2 * d[2] * d[6] * d[37] * d[45] - 2 * d[4] * d[8] * d[37] * d[45] + 2 * d[1] * d[6] * d[38] * d[45] - 2 * d[3] * d[7] * d[38] * d[45] - 2 * d[2] * d[7] * d[39] * d[45] + 2 * d[5] * d[8] * d[39] * d[45] + 2 * d[5] * d[7] * d[40] * d[45] - 2 * d[1] * d[8] * d[40] * d[45] - 4 * d[5] * d[6] * d[41] * d[45] + 2 * d[4] * d[7] * d[41] * d[45] + 2 * d[3] * d[8] * d[41] * d[45] + 2 * d[1] * d[2] * d[42] * d[45] - 2 * std::pow(d[5], 2) * d[42] * d[45] - 2 * d[2] * d[3] * d[43] * d[45] + 2 * d[4] * d[5] * d[43] * d[45] - 2 * d[1] * d[4] * d[44] * d[45] + 2 * d[3] * d[5] * d[44] * d[45] + d[2] * d[37] * std::pow(d[45], 2) + d[1] * d[38] * std::pow(d[45], 2) - 2 * d[5] * d[41] * std::pow(d[45], 2) + 2 * d[2] * d[7] * d[36] * d[46] - 2 * d[5] * d[8] * d[36] * d[46] - 2 * d[3] * d[6] * d[38] * d[46] + 2 * d[0] * d[7] * d[38] * d[46] - 2 * d[2] * d[6] * d[39] * d[46] + 2 * d[4] * d[8] * d[39] * d[46] + 2 * d[5] * d[6] * d[40] * d[46] - 4 * d[4] * d[7] * d[40] * d[46] + 2 * d[3] * d[8] * d[40] * d[46] + 2 * d[4] * d[6] * d[41] * d[46] - 2 * d[0] * d[8] * d[41] * d[46] - 2 * d[2] * d[3] * d[42] * d[46] + 2 * d[4] * d[5] * d[42] * d[46] + 2 * d[0] * d[2] * d[43] * d[46] - 2 * std::pow(d[4], 2) * d[43] * d[46] + 2 * d[3] * d[4] * d[44] * d[46] - 2 * d[0] * d[5] * d[44] * d[46] - 2 * d[3] * d[38] * d[45] * d[46] - 2 * d[2] * d[39] * d[45] * d[46] + 2 * d[5] * d[40] * d[45] * d[46] + 2 * d[4] * d[41] * d[45] * d[46] + d[2] * d[36] * std::pow(d[46], 2) + d[0] * d[38] * std::pow(d[46], 2) - 2 * d[4] * d[40] * std::pow(d[46], 2) - 2 * d[5] * d[7] * d[36] * d[47] + 2 * d[1] * d[8] * d[36] * d[47] - 2 * d[4] * d[6] * d[37] * d[47] + 2 * d[0] * d[8] * d[37] * d[47] + 2 * d[5] * d[6] * d[39] * d[47] + 2 * d[4] * d[7] * d[39] * d[47] - 4 * d[3] * d[8] * d[39] * d[47] - 2 * d[1] * d[6] * d[40] * d[47] + 2 * d[3] * d[7] * d[40] * d[47] + 2 * d[3] * d[6] * d[41] * d[47] - 2 * d[0] * d[7] * d[41] * d[47] - 2 * d[1] * d[4] * d[42] * d[47] + 2 * d[3] * d[5] * d[42] * d[47] + 2 * d[3] * d[4] * d[43] * d[47] - 2 * d[0] * d[5] * d[43] * d[47] + 2 * d[0] * d[1] * d[44] * d[47] - 2 * std::pow(d[3], 2) * d[44] * d[47] - 2 * d[4] * d[37] * d[45] * d[47] + 2 * d[5] * d[39] * d[45] * d[47] - 2 * d[1] * d[40] * d[45] * d[47] + 2 * d[3] * d[41] * d[45] * d[47] - 2 * d[5] * d[36] * d[46] * d[47] + 2 * d[4] * d[39] * d[46] * d[47] + 2 * d[3] * d[40] * d[46] * d[47] - 2 * d[0] * d[41] * d[46] * d[47] + d[1] * d[36] * std::pow(d[47], 2) + d[0] * d[37] * std::pow(d[47], 2) - 2 * d[3] * d[39] * std::pow(d[47], 2) - d[1] * d[2] * d[36] * d[54] + std::pow(d[5], 2) * d[36] * d[54] - d[0] * d[2] * d[37] * d[54] + std::pow(d[4], 2) * d[37] * d[54] - d[0] * d[1] * d[38] * d[54] + std::pow(d[3], 2) * d[38] * d[54] + 2 * d[2] * d[3] * d[39] * d[54] - 2 * d[4] * d[5] * d[39] * d[54] + 2 * d[1] * d[4] * d[40] * d[54] - 2 * d[3] * d[5] * d[40] * d[54] - 2 * d[3] * d[4] * d[41] * d[54] + 2 * d[0] * d[5] * d[41] * d[54];
    coeffs[34] = 2 * d[1] * d[2] * d[6] * d[45] - 2 * std::pow(d[5], 2) * d[6] * d[45] - 2 * d[2] * d[3] * d[7] * d[45] + 2 * d[4] * d[5] * d[7] * d[45] - 2 * d[1] * d[4] * d[8] * d[45] + 2 * d[3] * d[5] * d[8] * d[45] + d[1] * d[2] * std::pow(d[45], 2) - std::pow(d[5], 2) * std::pow(d[45], 2) - 2 * d[2] * d[3] * d[6] * d[46] + 2 * d[4] * d[5] * d[6] * d[46] + 2 * d[0] * d[2] * d[7] * d[46] - 2 * std::pow(d[4], 2) * d[7] * d[46] + 2 * d[3] * d[4] * d[8] * d[46] - 2 * d[0] * d[5] * d[8] * d[46] - 2 * d[2] * d[3] * d[45] * d[46] + 2 * d[4] * d[5] * d[45] * d[46] + d[0] * d[2] * std::pow(d[46], 2) - std::pow(d[4], 2) * std::pow(d[46], 2) - 2 * d[1] * d[4] * d[6] * d[47] + 2 * d[3] * d[5] * d[6] * d[47] + 2 * d[3] * d[4] * d[7] * d[47] - 2 * d[0] * d[5] * d[7] * d[47] + 2 * d[0] * d[1] * d[8] * d[47] - 2 * std::pow(d[3], 2) * d[8] * d[47] - 2 * d[1] * d[4] * d[45] * d[47] + 2 * d[3] * d[5] * d[45] * d[47] + 2 * d[3] * d[4] * d[46] * d[47] - 2 * d[0] * d[5] * d[46] * d[47] + d[0] * d[1] * std::pow(d[47], 2) - std::pow(d[3], 2) * std::pow(d[47], 2) - d[0] * d[1] * d[2] * d[54] + d[2] * std::pow(d[3], 2) * d[54] + d[1] * std::pow(d[4], 2) * d[54] - 2 * d[3] * d[4] * d[5] * d[54] + d[0] * std::pow(d[5], 2) * d[54];
    coeffs[35] = 2 * d[10] * d[11] * d[15] * d[48] - 2 * std::pow(d[14], 2) * d[15] * d[48] - 2 * d[11] * d[12] * d[16] * d[48] + 2 * d[13] * d[14] * d[16] * d[48] - 2 * d[10] * d[13] * d[17] * d[48] + 2 * d[12] * d[14] * d[17] * d[48] - 2 * d[11] * d[12] * d[15] * d[49] + 2 * d[13] * d[14] * d[15] * d[49] + 2 * d[9] * d[11] * d[16] * d[49] - 2 * std::pow(d[13], 2) * d[16] * d[49] + 2 * d[12] * d[13] * d[17] * d[49] - 2 * d[9] * d[14] * d[17] * d[49] - 2 * d[10] * d[13] * d[15] * d[50] + 2 * d[12] * d[14] * d[15] * d[50] + 2 * d[12] * d[13] * d[16] * d[50] - 2 * d[9] * d[14] * d[16] * d[50] + 2 * d[9] * d[10] * d[17] * d[50] - 2 * std::pow(d[12], 2) * d[17] * d[50] - d[9] * d[10] * d[11] * d[55] + d[11] * std::pow(d[12], 2) * d[55] + d[10] * std::pow(d[13], 2) * d[55] - 2 * d[12] * d[13] * d[14] * d[55] + d[9] * std::pow(d[14], 2) * d[55];
    coeffs[36] = 2 * d[11] * d[15] * d[19] * d[48] - 2 * d[13] * d[17] * d[19] * d[48] + 2 * d[10] * d[15] * d[20] * d[48] - 2 * d[12] * d[16] * d[20] * d[48] - 2 * d[11] * d[16] * d[21] * d[48] + 2 * d[14] * d[17] * d[21] * d[48] + 2 * d[14] * d[16] * d[22] * d[48] - 2 * d[10] * d[17] * d[22] * d[48] - 4 * d[14] * d[15] * d[23] * d[48] + 2 * d[13] * d[16] * d[23] * d[48] + 2 * d[12] * d[17] * d[23] * d[48] + 2 * d[10] * d[11] * d[24] * d[48] - 2 * std::pow(d[14], 2) * d[24] * d[48] - 2 * d[11] * d[12] * d[25] * d[48] + 2 * d[13] * d[14] * d[25] * d[48] - 2 * d[10] * d[13] * d[26] * d[48] + 2 * d[12] * d[14] * d[26] * d[48] + 2 * d[11] * d[16] * d[18] * d[49] - 2 * d[14] * d[17] * d[18] * d[49] - 2 * d[12] * d[15] * d[20] * d[49] + 2 * d[9] * d[16] * d[20] * d[49] - 2 * d[11] * d[15] * d[21] * d[49] + 2 * d[13] * d[17] * d[21] * d[49] + 2 * d[14] * d[15] * d[22] * d[49] - 4 * d[13] * d[16] * d[22] * d[49] + 2 * d[12] * d[17] * d[22] * d[49] + 2 * d[13] * d[15] * d[23] * d[49] - 2 * d[9] * d[17] * d[23] * d[49] - 2 * d[11] * d[12] * d[24] * d[49] + 2 * d[13] * d[14] * d[24] * d[49] + 2 * d[9] * d[11] * d[25] * d[49] - 2 * std::pow(d[13], 2) * d[25] * d[49] + 2 * d[12] * d[13] * d[26] * d[49] - 2 * d[9] * d[14] * d[26] * d[49] - 2 * d[14] * d[16] * d[18] * d[50] + 2 * d[10] * d[17] * d[18] * d[50] - 2 * d[13] * d[15] * d[19] * d[50] + 2 * d[9] * d[17] * d[19] * d[50] + 2 * d[14] * d[15] * d[21] * d[50] + 2 * d[13] * d[16] * d[21] * d[50] - 4 * d[12] * d[17] * d[21] * d[50] - 2 * d[10] * d[15] * d[22] * d[50] + 2 * d[12] * d[16] * d[22] * d[50] + 2 * d[12] * d[15] * d[23] * d[50] - 2 * d[9] * d[16] * d[23] * d[50] - 2 * d[10] * d[13] * d[24] * d[50] + 2 * d[12] * d[14] * d[24] * d[50] + 2 * d[12] * d[13] * d[25] * d[50] - 2 * d[9] * d[14] * d[25] * d[50] + 2 * d[9] * d[10] * d[26] * d[50] - 2 * std::pow(d[12], 2) * d[26] * d[50] - d[10] * d[11] * d[18] * d[55] + std::pow(d[14], 2) * d[18] * d[55] - d[9] * d[11] * d[19] * d[55] + std::pow(d[13], 2) * d[19] * d[55] - d[9] * d[10] * d[20] * d[55] + std::pow(d[12], 2) * d[20] * d[55] + 2 * d[11] * d[12] * d[21] * d[55] - 2 * d[13] * d[14] * d[21] * d[55] + 2 * d[10] * d[13] * d[22] * d[55] - 2 * d[12] * d[14] * d[22] * d[55] - 2 * d[12] * d[13] * d[23] * d[55] + 2 * d[9] * d[14] * d[23] * d[55];
    coeffs[37] = 2 * d[15] * d[19] * d[20] * d[48] - 2 * d[16] * d[20] * d[21] * d[48] - 2 * d[17] * d[19] * d[22] * d[48] + 2 * d[17] * d[21] * d[23] * d[48] + 2 * d[16] * d[22] * d[23] * d[48] - 2 * d[15] * std::pow(d[23], 2) * d[48] + 2 * d[11] * d[19] * d[24] * d[48] + 2 * d[10] * d[20] * d[24] * d[48] - 4 * d[14] * d[23] * d[24] * d[48] - 2 * d[12] * d[20] * d[25] * d[48] - 2 * d[11] * d[21] * d[25] * d[48] + 2 * d[14] * d[22] * d[25] * d[48] + 2 * d[13] * d[23] * d[25] * d[48] - 2 * d[13] * d[19] * d[26] * d[48] + 2 * d[14] * d[21] * d[26] * d[48] - 2 * d[10] * d[22] * d[26] * d[48] + 2 * d[12] * d[23] * d[26] * d[48] + 2 * d[16] * d[18] * d[20] * d[49] - 2 * d[15] * d[20] * d[21] * d[49] + 2 * d[17] * d[21] * d[22] * d[49] - 2 * d[16] * std::pow(d[22], 2) * d[49] - 2 * d[17] * d[18] * d[23] * d[49] + 2 * d[15] * d[22] * d[23] * d[49] - 2 * d[12] * d[20] * d[24] * d[49] - 2 * d[11] * d[21] * d[24] * d[49] + 2 * d[14] * d[22] * d[24] * d[49] + 2 * d[13] * d[23] * d[24] * d[49] + 2 * d[11] * d[18] * d[25] * d[49] + 2 * d[9] * d[20] * d[25] * d[49] - 4 * d[13] * d[22] * d[25] * d[49] - 2 * d[14] * d[18] * d[26] * d[49] + 2 * d[13] * d[21] * d[26] * d[49] + 2 * d[12] * d[22] * d[26] * d[49] - 2 * d[9] * d[23] * d[26] * d[49] + 2 * d[17] * d[18] * d[19] * d[50] - 2 * d[17] * std::pow(d[21], 2) * d[50] - 2 * d[15] * d[19] * d[22] * d[50] + 2 * d[16] * d[21] * d[22] * d[50] - 2 * d[16] * d[18] * d[23] * d[50] + 2 * d[15] * d[21] * d[23] * d[50] - 2 * d[13] * d[19] * d[24] * d[50] + 2 * d[14] * d[21] * d[24] * d[50] - 2 * d[10] * d[22] * d[24] * d[50] + 2 * d[12] * d[23] * d[24] * d[50] - 2 * d[14] * d[18] * d[25] * d[50] + 2 * d[13] * d[21] * d[25] * d[50] + 2 * d[12] * d[22] * d[25] * d[50] - 2 * d[9] * d[23] * d[25] * d[50] + 2 * d[10] * d[18] * d[26] * d[50] + 2 * d[9] * d[19] * d[26] * d[50] - 4 * d[12] * d[21] * d[26] * d[50] - d[11] * d[18] * d[19] * d[55] - d[10] * d[18] * d[20] * d[55] - d[9] * d[19] * d[20] * d[55] + 2 * d[12] * d[20] * d[21] * d[55] + d[11] * std::pow(d[21], 2) * d[55] + 2 * d[13] * d[19] * d[22] * d[55] - 2 * d[14] * d[21] * d[22] * d[55] + d[10] * std::pow(d[22], 2) * d[55] + 2 * d[14] * d[18] * d[23] * d[55] - 2 * d[13] * d[21] * d[23] * d[55] - 2 * d[12] * d[22] * d[23] * d[55] + d[9] * std::pow(d[23], 2) * d[55];
    coeffs[38] = 2 * d[19] * d[20] * d[24] * d[48] - 2 * std::pow(d[23], 2) * d[24] * d[48] - 2 * d[20] * d[21] * d[25] * d[48] + 2 * d[22] * d[23] * d[25] * d[48] - 2 * d[19] * d[22] * d[26] * d[48] + 2 * d[21] * d[23] * d[26] * d[48] - 2 * d[20] * d[21] * d[24] * d[49] + 2 * d[22] * d[23] * d[24] * d[49] + 2 * d[18] * d[20] * d[25] * d[49] - 2 * std::pow(d[22], 2) * d[25] * d[49] + 2 * d[21] * d[22] * d[26] * d[49] - 2 * d[18] * d[23] * d[26] * d[49] - 2 * d[19] * d[22] * d[24] * d[50] + 2 * d[21] * d[23] * d[24] * d[50] + 2 * d[21] * d[22] * d[25] * d[50] - 2 * d[18] * d[23] * d[25] * d[50] + 2 * d[18] * d[19] * d[26] * d[50] - 2 * std::pow(d[21], 2) * d[26] * d[50] - d[18] * d[19] * d[20] * d[55] + d[20] * std::pow(d[21], 2) * d[55] + d[19] * std::pow(d[22], 2) * d[55] - 2 * d[21] * d[22] * d[23] * d[55] + d[18] * std::pow(d[23], 2) * d[55];
    coeffs[39] = 2 * d[11] * d[15] * d[28] * d[48] - 2 * d[13] * d[17] * d[28] * d[48] + 2 * d[10] * d[15] * d[29] * d[48] - 2 * d[12] * d[16] * d[29] * d[48] - 2 * d[11] * d[16] * d[30] * d[48] + 2 * d[14] * d[17] * d[30] * d[48] + 2 * d[14] * d[16] * d[31] * d[48] - 2 * d[10] * d[17] * d[31] * d[48] - 4 * d[14] * d[15] * d[32] * d[48] + 2 * d[13] * d[16] * d[32] * d[48] + 2 * d[12] * d[17] * d[32] * d[48] + 2 * d[10] * d[11] * d[33] * d[48] - 2 * std::pow(d[14], 2) * d[33] * d[48] - 2 * d[11] * d[12] * d[34] * d[48] + 2 * d[13] * d[14] * d[34] * d[48] - 2 * d[10] * d[13] * d[35] * d[48] + 2 * d[12] * d[14] * d[35] * d[48] + 2 * d[11] * d[16] * d[27] * d[49] - 2 * d[14] * d[17] * d[27] * d[49] - 2 * d[12] * d[15] * d[29] * d[49] + 2 * d[9] * d[16] * d[29] * d[49] - 2 * d[11] * d[15] * d[30] * d[49] + 2 * d[13] * d[17] * d[30] * d[49] + 2 * d[14] * d[15] * d[31] * d[49] - 4 * d[13] * d[16] * d[31] * d[49] + 2 * d[12] * d[17] * d[31] * d[49] + 2 * d[13] * d[15] * d[32] * d[49] - 2 * d[9] * d[17] * d[32] * d[49] - 2 * d[11] * d[12] * d[33] * d[49] + 2 * d[13] * d[14] * d[33] * d[49] + 2 * d[9] * d[11] * d[34] * d[49] - 2 * std::pow(d[13], 2) * d[34] * d[49] + 2 * d[12] * d[13] * d[35] * d[49] - 2 * d[9] * d[14] * d[35] * d[49] - 2 * d[14] * d[16] * d[27] * d[50] + 2 * d[10] * d[17] * d[27] * d[50] - 2 * d[13] * d[15] * d[28] * d[50] + 2 * d[9] * d[17] * d[28] * d[50] + 2 * d[14] * d[15] * d[30] * d[50] + 2 * d[13] * d[16] * d[30] * d[50] - 4 * d[12] * d[17] * d[30] * d[50] - 2 * d[10] * d[15] * d[31] * d[50] + 2 * d[12] * d[16] * d[31] * d[50] + 2 * d[12] * d[15] * d[32] * d[50] - 2 * d[9] * d[16] * d[32] * d[50] - 2 * d[10] * d[13] * d[33] * d[50] + 2 * d[12] * d[14] * d[33] * d[50] + 2 * d[12] * d[13] * d[34] * d[50] - 2 * d[9] * d[14] * d[34] * d[50] + 2 * d[9] * d[10] * d[35] * d[50] - 2 * std::pow(d[12], 2) * d[35] * d[50] - d[10] * d[11] * d[27] * d[55] + std::pow(d[14], 2) * d[27] * d[55] - d[9] * d[11] * d[28] * d[55] + std::pow(d[13], 2) * d[28] * d[55] - d[9] * d[10] * d[29] * d[55] + std::pow(d[12], 2) * d[29] * d[55] + 2 * d[11] * d[12] * d[30] * d[55] - 2 * d[13] * d[14] * d[30] * d[55] + 2 * d[10] * d[13] * d[31] * d[55] - 2 * d[12] * d[14] * d[31] * d[55] - 2 * d[12] * d[13] * d[32] * d[55] + 2 * d[9] * d[14] * d[32] * d[55];
    coeffs[40] = 2 * d[15] * d[20] * d[28] * d[48] - 2 * d[17] * d[22] * d[28] * d[48] + 2 * d[11] * d[24] * d[28] * d[48] - 2 * d[13] * d[26] * d[28] * d[48] + 2 * d[15] * d[19] * d[29] * d[48] - 2 * d[16] * d[21] * d[29] * d[48] + 2 * d[10] * d[24] * d[29] * d[48] - 2 * d[12] * d[25] * d[29] * d[48] - 2 * d[16] * d[20] * d[30] * d[48] + 2 * d[17] * d[23] * d[30] * d[48] - 2 * d[11] * d[25] * d[30] * d[48] + 2 * d[14] * d[26] * d[30] * d[48] - 2 * d[17] * d[19] * d[31] * d[48] + 2 * d[16] * d[23] * d[31] * d[48] + 2 * d[14] * d[25] * d[31] * d[48] - 2 * d[10] * d[26] * d[31] * d[48] + 2 * d[17] * d[21] * d[32] * d[48] + 2 * d[16] * d[22] * d[32] * d[48] - 4 * d[15] * d[23] * d[32] * d[48] - 4 * d[14] * d[24] * d[32] * d[48] + 2 * d[13] * d[25] * d[32] * d[48] + 2 * d[12] * d[26] * d[32] * d[48] + 2 * d[11] * d[19] * d[33] * d[48] + 2 * d[10] * d[20] * d[33] * d[48] - 4 * d[14] * d[23] * d[33] * d[48] - 2 * d[12] * d[20] * d[34] * d[48] - 2 * d[11] * d[21] * d[34] * d[48] + 2 * d[14] * d[22] * d[34] * d[48] + 2 * d[13] * d[23] * d[34] * d[48] - 2 * d[13] * d[19] * d[35] * d[48] + 2 * d[14] * d[21] * d[35] * d[48] - 2 * d[10] * d[22] * d[35] * d[48] + 2 * d[12] * d[23] * d[35] * d[48] + 2 * d[16] * d[20] * d[27] * d[49] - 2 * d[17] * d[23] * d[27] * d[49] + 2 * d[11] * d[25] * d[27] * d[49] - 2 * d[14] * d[26] * d[27] * d[49] + 2 * d[16] * d[18] * d[29] * d[49] - 2 * d[15] * d[21] * d[29] * d[49] - 2 * d[12] * d[24] * d[29] * d[49] + 2 * d[9] * d[25] * d[29] * d[49] - 2 * d[15] * d[20] * d[30] * d[49] + 2 * d[17] * d[22] * d[30] * d[49] - 2 * d[11] * d[24] * d[30] * d[49] + 2 * d[13] * d[26] * d[30] * d[49] + 2 * d[17] * d[21] * d[31] * d[49] - 4 * d[16] * d[22] * d[31] * d[49] + 2 * d[15] * d[23] * d[31] * d[49] + 2 * d[14] * d[24] * d[31] * d[49] - 4 * d[13] * d[25] * d[31] * d[49] + 2 * d[12] * d[26] * d[31] * d[49] - 2 * d[17] * d[18] * d[32] * d[49] + 2 * d[15] * d[22] * d[32] * d[49] + 2 * d[13] * d[24] * d[32] * d[49] - 2 * d[9] * d[26] * d[32] * d[49] - 2 * d[12] * d[20] * d[33] * d[49] - 2 * d[11] * d[21] * d[33] * d[49] + 2 * d[14] * d[22] * d[33] * d[49] + 2 * d[13] * d[23] * d[33] * d[49] + 2 * d[11] * d[18] * d[34] * d[49] + 2 * d[9] * d[20] * d[34] * d[49] - 4 * d[13] * d[22] * d[34] * d[49] - 2 * d[14] * d[18] * d[35] * d[49] + 2 * d[13] * d[21] * d[35] * d[49] + 2 * d[12] * d[22] * d[35] * d[49] - 2 * d[9] * d[23] * d[35] * d[49] + 2 * d[17] * d[19] * d[27] * d[50] - 2 * d[16] * d[23] * d[27] * d[50] - 2 * d[14] * d[25] * d[27] * d[50] + 2 * d[10] * d[26] * d[27] * d[50] + 2 * d[17] * d[18] * d[28] * d[50] - 2 * d[15] * d[22] * d[28] * d[50] - 2 * d[13] * d[24] * d[28] * d[50] + 2 * d[9] * d[26] * d[28] * d[50] - 4 * d[17] * d[21] * d[30] * d[50] + 2 * d[16] * d[22] * d[30] * d[50] + 2 * d[15] * d[23] * d[30] * d[50] + 2 * d[14] * d[24] * d[30] * d[50] + 2 * d[13] * d[25] * d[30] * d[50] - 4 * d[12] * d[26] * d[30] * d[50] - 2 * d[15] * d[19] * d[31] * d[50] + 2 * d[16] * d[21] * d[31] * d[50] - 2 * d[10] * d[24] * d[31] * d[50] + 2 * d[12] * d[25] * d[31] * d[50] - 2 * d[16] * d[18] * d[32] * d[50] + 2 * d[15] * d[21] * d[32] * d[50] + 2 * d[12] * d[24] * d[32] * d[50] - 2 * d[9] * d[25] * d[32] * d[50] - 2 * d[13] * d[19] * d[33] * d[50] + 2 * d[14] * d[21] * d[33] * d[50] - 2 * d[10] * d[22] * d[33] * d[50] + 2 * d[12] * d[23] * d[33] * d[50] - 2 * d[14] * d[18] * d[34] * d[50] + 2 * d[13] * d[21] * d[34] * d[50] + 2 * d[12] * d[22] * d[34] * d[50] - 2 * d[9] * d[23] * d[34] * d[50] + 2 * d[10] * d[18] * d[35] * d[50] + 2 * d[9] * d[19] * d[35] * d[50] - 4 * d[12] * d[21] * d[35] * d[50] - d[11] * d[19] * d[27] * d[55] - d[10] * d[20] * d[27] * d[55] + 2 * d[14] * d[23] * d[27] * d[55] - d[11] * d[18] * d[28] * d[55] - d[9] * d[20] * d[28] * d[55] + 2 * d[13] * d[22] * d[28] * d[55] - d[10] * d[18] * d[29] * d[55] - d[9] * d[19] * d[29] * d[55] + 2 * d[12] * d[21] * d[29] * d[55] + 2 * d[12] * d[20] * d[30] * d[55] + 2 * d[11] * d[21] * d[30] * d[55] - 2 * d[14] * d[22] * d[30] * d[55] - 2 * d[13] * d[23] * d[30] * d[55] + 2 * d[13] * d[19] * d[31] * d[55] - 2 * d[14] * d[21] * d[31] * d[55] + 2 * d[10] * d[22] * d[31] * d[55] - 2 * d[12] * d[23] * d[31] * d[55] + 2 * d[14] * d[18] * d[32] * d[55] - 2 * d[13] * d[21] * d[32] * d[55] - 2 * d[12] * d[22] * d[32] * d[55] + 2 * d[9] * d[23] * d[32] * d[55];
    coeffs[41] = 2 * d[20] * d[24] * d[28] * d[48] - 2 * d[22] * d[26] * d[28] * d[48] + 2 * d[19] * d[24] * d[29] * d[48] - 2 * d[21] * d[25] * d[29] * d[48] - 2 * d[20] * d[25] * d[30] * d[48] + 2 * d[23] * d[26] * d[30] * d[48] + 2 * d[23] * d[25] * d[31] * d[48] - 2 * d[19] * d[26] * d[31] * d[48] - 4 * d[23] * d[24] * d[32] * d[48] + 2 * d[22] * d[25] * d[32] * d[48] + 2 * d[21] * d[26] * d[32] * d[48] + 2 * d[19] * d[20] * d[33] * d[48] - 2 * std::pow(d[23], 2) * d[33] * d[48] - 2 * d[20] * d[21] * d[34] * d[48] + 2 * d[22] * d[23] * d[34] * d[48] - 2 * d[19] * d[22] * d[35] * d[48] + 2 * d[21] * d[23] * d[35] * d[48] + 2 * d[20] * d[25] * d[27] * d[49] - 2 * d[23] * d[26] * d[27] * d[49] - 2 * d[21] * d[24] * d[29] * d[49] + 2 * d[18] * d[25] * d[29] * d[49] - 2 * d[20] * d[24] * d[30] * d[49] + 2 * d[22] * d[26] * d[30] * d[49] + 2 * d[23] * d[24] * d[31] * d[49] - 4 * d[22] * d[25] * d[31] * d[49] + 2 * d[21] * d[26] * d[31] * d[49] + 2 * d[22] * d[24] * d[32] * d[49] - 2 * d[18] * d[26] * d[32] * d[49] - 2 * d[20] * d[21] * d[33] * d[49] + 2 * d[22] * d[23] * d[33] * d[49] + 2 * d[18] * d[20] * d[34] * d[49] - 2 * std::pow(d[22], 2) * d[34] * d[49] + 2 * d[21] * d[22] * d[35] * d[49] - 2 * d[18] * d[23] * d[35] * d[49] - 2 * d[23] * d[25] * d[27] * d[50] + 2 * d[19] * d[26] * d[27] * d[50] - 2 * d[22] * d[24] * d[28] * d[50] + 2 * d[18] * d[26] * d[28] * d[50] + 2 * d[23] * d[24] * d[30] * d[50] + 2 * d[22] * d[25] * d[30] * d[50] - 4 * d[21] * d[26] * d[30] * d[50] - 2 * d[19] * d[24] * d[31] * d[50] + 2 * d[21] * d[25] * d[31] * d[50] + 2 * d[21] * d[24] * d[32] * d[50] - 2 * d[18] * d[25] * d[32] * d[50] - 2 * d[19] * d[22] * d[33] * d[50] + 2 * d[21] * d[23] * d[33] * d[50] + 2 * d[21] * d[22] * d[34] * d[50] - 2 * d[18] * d[23] * d[34] * d[50] + 2 * d[18] * d[19] * d[35] * d[50] - 2 * std::pow(d[21], 2) * d[35] * d[50] - d[19] * d[20] * d[27] * d[55] + std::pow(d[23], 2) * d[27] * d[55] - d[18] * d[20] * d[28] * d[55] + std::pow(d[22], 2) * d[28] * d[55] - d[18] * d[19] * d[29] * d[55] + std::pow(d[21], 2) * d[29] * d[55] + 2 * d[20] * d[21] * d[30] * d[55] - 2 * d[22] * d[23] * d[30] * d[55] + 2 * d[19] * d[22] * d[31] * d[55] - 2 * d[21] * d[23] * d[31] * d[55] - 2 * d[21] * d[22] * d[32] * d[55] + 2 * d[18] * d[23] * d[32] * d[55];
    coeffs[42] = 2 * d[15] * d[28] * d[29] * d[48] - 2 * d[16] * d[29] * d[30] * d[48] - 2 * d[17] * d[28] * d[31] * d[48] + 2 * d[17] * d[30] * d[32] * d[48] + 2 * d[16] * d[31] * d[32] * d[48] - 2 * d[15] * std::pow(d[32], 2) * d[48] + 2 * d[11] * d[28] * d[33] * d[48] + 2 * d[10] * d[29] * d[33] * d[48] - 4 * d[14] * d[32] * d[33] * d[48] - 2 * d[12] * d[29] * d[34] * d[48] - 2 * d[11] * d[30] * d[34] * d[48] + 2 * d[14] * d[31] * d[34] * d[48] + 2 * d[13] * d[32] * d[34] * d[48] - 2 * d[13] * d[28] * d[35] * d[48] + 2 * d[14] * d[30] * d[35] * d[48] - 2 * d[10] * d[31] * d[35] * d[48] + 2 * d[12] * d[32] * d[35] * d[48] + 2 * d[16] * d[27] * d[29] * d[49] - 2 * d[15] * d[29] * d[30] * d[49] + 2 * d[17] * d[30] * d[31] * d[49] - 2 * d[16] * std::pow(d[31], 2) * d[49] - 2 * d[17] * d[27] * d[32] * d[49] + 2 * d[15] * d[31] * d[32] * d[49] - 2 * d[12] * d[29] * d[33] * d[49] - 2 * d[11] * d[30] * d[33] * d[49] + 2 * d[14] * d[31] * d[33] * d[49] + 2 * d[13] * d[32] * d[33] * d[49] + 2 * d[11] * d[27] * d[34] * d[49] + 2 * d[9] * d[29] * d[34] * d[49] - 4 * d[13] * d[31] * d[34] * d[49] - 2 * d[14] * d[27] * d[35] * d[49] + 2 * d[13] * d[30] * d[35] * d[49] + 2 * d[12] * d[31] * d[35] * d[49] - 2 * d[9] * d[32] * d[35] * d[49] + 2 * d[17] * d[27] * d[28] * d[50] - 2 * d[17] * std::pow(d[30], 2) * d[50] - 2 * d[15] * d[28] * d[31] * d[50] + 2 * d[16] * d[30] * d[31] * d[50] - 2 * d[16] * d[27] * d[32] * d[50] + 2 * d[15] * d[30] * d[32] * d[50] - 2 * d[13] * d[28] * d[33] * d[50] + 2 * d[14] * d[30] * d[33] * d[50] - 2 * d[10] * d[31] * d[33] * d[50] + 2 * d[12] * d[32] * d[33] * d[50] - 2 * d[14] * d[27] * d[34] * d[50] + 2 * d[13] * d[30] * d[34] * d[50] + 2 * d[12] * d[31] * d[34] * d[50] - 2 * d[9] * d[32] * d[34] * d[50] + 2 * d[10] * d[27] * d[35] * d[50] + 2 * d[9] * d[28] * d[35] * d[50] - 4 * d[12] * d[30] * d[35] * d[50] - d[11] * d[27] * d[28] * d[55] - d[10] * d[27] * d[29] * d[55] - d[9] * d[28] * d[29] * d[55] + 2 * d[12] * d[29] * d[30] * d[55] + d[11] * std::pow(d[30], 2) * d[55] + 2 * d[13] * d[28] * d[31] * d[55] - 2 * d[14] * d[30] * d[31] * d[55] + d[10] * std::pow(d[31], 2) * d[55] + 2 * d[14] * d[27] * d[32] * d[55] - 2 * d[13] * d[30] * d[32] * d[55] - 2 * d[12] * d[31] * d[32] * d[55] + d[9] * std::pow(d[32], 2) * d[55];
    coeffs[43] = 2 * d[24] * d[28] * d[29] * d[48] - 2 * d[25] * d[29] * d[30] * d[48] - 2 * d[26] * d[28] * d[31] * d[48] + 2 * d[26] * d[30] * d[32] * d[48] + 2 * d[25] * d[31] * d[32] * d[48] - 2 * d[24] * std::pow(d[32], 2) * d[48] + 2 * d[20] * d[28] * d[33] * d[48] + 2 * d[19] * d[29] * d[33] * d[48] - 4 * d[23] * d[32] * d[33] * d[48] - 2 * d[21] * d[29] * d[34] * d[48] - 2 * d[20] * d[30] * d[34] * d[48] + 2 * d[23] * d[31] * d[34] * d[48] + 2 * d[22] * d[32] * d[34] * d[48] - 2 * d[22] * d[28] * d[35] * d[48] + 2 * d[23] * d[30] * d[35] * d[48] - 2 * d[19] * d[31] * d[35] * d[48] + 2 * d[21] * d[32] * d[35] * d[48] + 2 * d[25] * d[27] * d[29] * d[49] - 2 * d[24] * d[29] * d[30] * d[49] + 2 * d[26] * d[30] * d[31] * d[49] - 2 * d[25] * std::pow(d[31], 2) * d[49] - 2 * d[26] * d[27] * d[32] * d[49] + 2 * d[24] * d[31] * d[32] * d[49] - 2 * d[21] * d[29] * d[33] * d[49] - 2 * d[20] * d[30] * d[33] * d[49] + 2 * d[23] * d[31] * d[33] * d[49] + 2 * d[22] * d[32] * d[33] * d[49] + 2 * d[20] * d[27] * d[34] * d[49] + 2 * d[18] * d[29] * d[34] * d[49] - 4 * d[22] * d[31] * d[34] * d[49] - 2 * d[23] * d[27] * d[35] * d[49] + 2 * d[22] * d[30] * d[35] * d[49] + 2 * d[21] * d[31] * d[35] * d[49] - 2 * d[18] * d[32] * d[35] * d[49] + 2 * d[26] * d[27] * d[28] * d[50] - 2 * d[26] * std::pow(d[30], 2) * d[50] - 2 * d[24] * d[28] * d[31] * d[50] + 2 * d[25] * d[30] * d[31] * d[50] - 2 * d[25] * d[27] * d[32] * d[50] + 2 * d[24] * d[30] * d[32] * d[50] - 2 * d[22] * d[28] * d[33] * d[50] + 2 * d[23] * d[30] * d[33] * d[50] - 2 * d[19] * d[31] * d[33] * d[50] + 2 * d[21] * d[32] * d[33] * d[50] - 2 * d[23] * d[27] * d[34] * d[50] + 2 * d[22] * d[30] * d[34] * d[50] + 2 * d[21] * d[31] * d[34] * d[50] - 2 * d[18] * d[32] * d[34] * d[50] + 2 * d[19] * d[27] * d[35] * d[50] + 2 * d[18] * d[28] * d[35] * d[50] - 4 * d[21] * d[30] * d[35] * d[50] - d[20] * d[27] * d[28] * d[55] - d[19] * d[27] * d[29] * d[55] - d[18] * d[28] * d[29] * d[55] + 2 * d[21] * d[29] * d[30] * d[55] + d[20] * std::pow(d[30], 2) * d[55] + 2 * d[22] * d[28] * d[31] * d[55] - 2 * d[23] * d[30] * d[31] * d[55] + d[19] * std::pow(d[31], 2) * d[55] + 2 * d[23] * d[27] * d[32] * d[55] - 2 * d[22] * d[30] * d[32] * d[55] - 2 * d[21] * d[31] * d[32] * d[55] + d[18] * std::pow(d[32], 2) * d[55];
    coeffs[44] = 2 * d[28] * d[29] * d[33] * d[48] - 2 * std::pow(d[32], 2) * d[33] * d[48] - 2 * d[29] * d[30] * d[34] * d[48] + 2 * d[31] * d[32] * d[34] * d[48] - 2 * d[28] * d[31] * d[35] * d[48] + 2 * d[30] * d[32] * d[35] * d[48] - 2 * d[29] * d[30] * d[33] * d[49] + 2 * d[31] * d[32] * d[33] * d[49] + 2 * d[27] * d[29] * d[34] * d[49] - 2 * std::pow(d[31], 2) * d[34] * d[49] + 2 * d[30] * d[31] * d[35] * d[49] - 2 * d[27] * d[32] * d[35] * d[49] - 2 * d[28] * d[31] * d[33] * d[50] + 2 * d[30] * d[32] * d[33] * d[50] + 2 * d[30] * d[31] * d[34] * d[50] - 2 * d[27] * d[32] * d[34] * d[50] + 2 * d[27] * d[28] * d[35] * d[50] - 2 * std::pow(d[30], 2) * d[35] * d[50] - d[27] * d[28] * d[29] * d[55] + d[29] * std::pow(d[30], 2) * d[55] + d[28] * std::pow(d[31], 2) * d[55] - 2 * d[30] * d[31] * d[32] * d[55] + d[27] * std::pow(d[32], 2) * d[55];
    coeffs[45] = 2 * d[11] * d[15] * d[37] * d[48] - 2 * d[13] * d[17] * d[37] * d[48] + 2 * d[10] * d[15] * d[38] * d[48] - 2 * d[12] * d[16] * d[38] * d[48] - 2 * d[11] * d[16] * d[39] * d[48] + 2 * d[14] * d[17] * d[39] * d[48] + 2 * d[14] * d[16] * d[40] * d[48] - 2 * d[10] * d[17] * d[40] * d[48] - 4 * d[14] * d[15] * d[41] * d[48] + 2 * d[13] * d[16] * d[41] * d[48] + 2 * d[12] * d[17] * d[41] * d[48] + 2 * d[10] * d[11] * d[42] * d[48] - 2 * std::pow(d[14], 2) * d[42] * d[48] - 2 * d[11] * d[12] * d[43] * d[48] + 2 * d[13] * d[14] * d[43] * d[48] - 2 * d[10] * d[13] * d[44] * d[48] + 2 * d[12] * d[14] * d[44] * d[48] + 2 * d[11] * d[16] * d[36] * d[49] - 2 * d[14] * d[17] * d[36] * d[49] - 2 * d[12] * d[15] * d[38] * d[49] + 2 * d[9] * d[16] * d[38] * d[49] - 2 * d[11] * d[15] * d[39] * d[49] + 2 * d[13] * d[17] * d[39] * d[49] + 2 * d[14] * d[15] * d[40] * d[49] - 4 * d[13] * d[16] * d[40] * d[49] + 2 * d[12] * d[17] * d[40] * d[49] + 2 * d[13] * d[15] * d[41] * d[49] - 2 * d[9] * d[17] * d[41] * d[49] - 2 * d[11] * d[12] * d[42] * d[49] + 2 * d[13] * d[14] * d[42] * d[49] + 2 * d[9] * d[11] * d[43] * d[49] - 2 * std::pow(d[13], 2) * d[43] * d[49] + 2 * d[12] * d[13] * d[44] * d[49] - 2 * d[9] * d[14] * d[44] * d[49] - 2 * d[14] * d[16] * d[36] * d[50] + 2 * d[10] * d[17] * d[36] * d[50] - 2 * d[13] * d[15] * d[37] * d[50] + 2 * d[9] * d[17] * d[37] * d[50] + 2 * d[14] * d[15] * d[39] * d[50] + 2 * d[13] * d[16] * d[39] * d[50] - 4 * d[12] * d[17] * d[39] * d[50] - 2 * d[10] * d[15] * d[40] * d[50] + 2 * d[12] * d[16] * d[40] * d[50] + 2 * d[12] * d[15] * d[41] * d[50] - 2 * d[9] * d[16] * d[41] * d[50] - 2 * d[10] * d[13] * d[42] * d[50] + 2 * d[12] * d[14] * d[42] * d[50] + 2 * d[12] * d[13] * d[43] * d[50] - 2 * d[9] * d[14] * d[43] * d[50] + 2 * d[9] * d[10] * d[44] * d[50] - 2 * std::pow(d[12], 2) * d[44] * d[50] - d[10] * d[11] * d[36] * d[55] + std::pow(d[14], 2) * d[36] * d[55] - d[9] * d[11] * d[37] * d[55] + std::pow(d[13], 2) * d[37] * d[55] - d[9] * d[10] * d[38] * d[55] + std::pow(d[12], 2) * d[38] * d[55] + 2 * d[11] * d[12] * d[39] * d[55] - 2 * d[13] * d[14] * d[39] * d[55] + 2 * d[10] * d[13] * d[40] * d[55] - 2 * d[12] * d[14] * d[40] * d[55] - 2 * d[12] * d[13] * d[41] * d[55] + 2 * d[9] * d[14] * d[41] * d[55];
    coeffs[46] = 2 * d[15] * d[20] * d[37] * d[48] - 2 * d[17] * d[22] * d[37] * d[48] + 2 * d[11] * d[24] * d[37] * d[48] - 2 * d[13] * d[26] * d[37] * d[48] + 2 * d[15] * d[19] * d[38] * d[48] - 2 * d[16] * d[21] * d[38] * d[48] + 2 * d[10] * d[24] * d[38] * d[48] - 2 * d[12] * d[25] * d[38] * d[48] - 2 * d[16] * d[20] * d[39] * d[48] + 2 * d[17] * d[23] * d[39] * d[48] - 2 * d[11] * d[25] * d[39] * d[48] + 2 * d[14] * d[26] * d[39] * d[48] - 2 * d[17] * d[19] * d[40] * d[48] + 2 * d[16] * d[23] * d[40] * d[48] + 2 * d[14] * d[25] * d[40] * d[48] - 2 * d[10] * d[26] * d[40] * d[48] + 2 * d[17] * d[21] * d[41] * d[48] + 2 * d[16] * d[22] * d[41] * d[48] - 4 * d[15] * d[23] * d[41] * d[48] - 4 * d[14] * d[24] * d[41] * d[48] + 2 * d[13] * d[25] * d[41] * d[48] + 2 * d[12] * d[26] * d[41] * d[48] + 2 * d[11] * d[19] * d[42] * d[48] + 2 * d[10] * d[20] * d[42] * d[48] - 4 * d[14] * d[23] * d[42] * d[48] - 2 * d[12] * d[20] * d[43] * d[48] - 2 * d[11] * d[21] * d[43] * d[48] + 2 * d[14] * d[22] * d[43] * d[48] + 2 * d[13] * d[23] * d[43] * d[48] - 2 * d[13] * d[19] * d[44] * d[48] + 2 * d[14] * d[21] * d[44] * d[48] - 2 * d[10] * d[22] * d[44] * d[48] + 2 * d[12] * d[23] * d[44] * d[48] + 2 * d[16] * d[20] * d[36] * d[49] - 2 * d[17] * d[23] * d[36] * d[49] + 2 * d[11] * d[25] * d[36] * d[49] - 2 * d[14] * d[26] * d[36] * d[49] + 2 * d[16] * d[18] * d[38] * d[49] - 2 * d[15] * d[21] * d[38] * d[49] - 2 * d[12] * d[24] * d[38] * d[49] + 2 * d[9] * d[25] * d[38] * d[49] - 2 * d[15] * d[20] * d[39] * d[49] + 2 * d[17] * d[22] * d[39] * d[49] - 2 * d[11] * d[24] * d[39] * d[49] + 2 * d[13] * d[26] * d[39] * d[49] + 2 * d[17] * d[21] * d[40] * d[49] - 4 * d[16] * d[22] * d[40] * d[49] + 2 * d[15] * d[23] * d[40] * d[49] + 2 * d[14] * d[24] * d[40] * d[49] - 4 * d[13] * d[25] * d[40] * d[49] + 2 * d[12] * d[26] * d[40] * d[49] - 2 * d[17] * d[18] * d[41] * d[49] + 2 * d[15] * d[22] * d[41] * d[49] + 2 * d[13] * d[24] * d[41] * d[49] - 2 * d[9] * d[26] * d[41] * d[49] - 2 * d[12] * d[20] * d[42] * d[49] - 2 * d[11] * d[21] * d[42] * d[49] + 2 * d[14] * d[22] * d[42] * d[49] + 2 * d[13] * d[23] * d[42] * d[49] + 2 * d[11] * d[18] * d[43] * d[49] + 2 * d[9] * d[20] * d[43] * d[49] - 4 * d[13] * d[22] * d[43] * d[49] - 2 * d[14] * d[18] * d[44] * d[49] + 2 * d[13] * d[21] * d[44] * d[49] + 2 * d[12] * d[22] * d[44] * d[49] - 2 * d[9] * d[23] * d[44] * d[49] + 2 * d[17] * d[19] * d[36] * d[50] - 2 * d[16] * d[23] * d[36] * d[50] - 2 * d[14] * d[25] * d[36] * d[50] + 2 * d[10] * d[26] * d[36] * d[50] + 2 * d[17] * d[18] * d[37] * d[50] - 2 * d[15] * d[22] * d[37] * d[50] - 2 * d[13] * d[24] * d[37] * d[50] + 2 * d[9] * d[26] * d[37] * d[50] - 4 * d[17] * d[21] * d[39] * d[50] + 2 * d[16] * d[22] * d[39] * d[50] + 2 * d[15] * d[23] * d[39] * d[50] + 2 * d[14] * d[24] * d[39] * d[50] + 2 * d[13] * d[25] * d[39] * d[50] - 4 * d[12] * d[26] * d[39] * d[50] - 2 * d[15] * d[19] * d[40] * d[50] + 2 * d[16] * d[21] * d[40] * d[50] - 2 * d[10] * d[24] * d[40] * d[50] + 2 * d[12] * d[25] * d[40] * d[50] - 2 * d[16] * d[18] * d[41] * d[50] + 2 * d[15] * d[21] * d[41] * d[50] + 2 * d[12] * d[24] * d[41] * d[50] - 2 * d[9] * d[25] * d[41] * d[50] - 2 * d[13] * d[19] * d[42] * d[50] + 2 * d[14] * d[21] * d[42] * d[50] - 2 * d[10] * d[22] * d[42] * d[50] + 2 * d[12] * d[23] * d[42] * d[50] - 2 * d[14] * d[18] * d[43] * d[50] + 2 * d[13] * d[21] * d[43] * d[50] + 2 * d[12] * d[22] * d[43] * d[50] - 2 * d[9] * d[23] * d[43] * d[50] + 2 * d[10] * d[18] * d[44] * d[50] + 2 * d[9] * d[19] * d[44] * d[50] - 4 * d[12] * d[21] * d[44] * d[50] - d[11] * d[19] * d[36] * d[55] - d[10] * d[20] * d[36] * d[55] + 2 * d[14] * d[23] * d[36] * d[55] - d[11] * d[18] * d[37] * d[55] - d[9] * d[20] * d[37] * d[55] + 2 * d[13] * d[22] * d[37] * d[55] - d[10] * d[18] * d[38] * d[55] - d[9] * d[19] * d[38] * d[55] + 2 * d[12] * d[21] * d[38] * d[55] + 2 * d[12] * d[20] * d[39] * d[55] + 2 * d[11] * d[21] * d[39] * d[55] - 2 * d[14] * d[22] * d[39] * d[55] - 2 * d[13] * d[23] * d[39] * d[55] + 2 * d[13] * d[19] * d[40] * d[55] - 2 * d[14] * d[21] * d[40] * d[55] + 2 * d[10] * d[22] * d[40] * d[55] - 2 * d[12] * d[23] * d[40] * d[55] + 2 * d[14] * d[18] * d[41] * d[55] - 2 * d[13] * d[21] * d[41] * d[55] - 2 * d[12] * d[22] * d[41] * d[55] + 2 * d[9] * d[23] * d[41] * d[55];
    coeffs[47] = 2 * d[20] * d[24] * d[37] * d[48] - 2 * d[22] * d[26] * d[37] * d[48] + 2 * d[19] * d[24] * d[38] * d[48] - 2 * d[21] * d[25] * d[38] * d[48] - 2 * d[20] * d[25] * d[39] * d[48] + 2 * d[23] * d[26] * d[39] * d[48] + 2 * d[23] * d[25] * d[40] * d[48] - 2 * d[19] * d[26] * d[40] * d[48] - 4 * d[23] * d[24] * d[41] * d[48] + 2 * d[22] * d[25] * d[41] * d[48] + 2 * d[21] * d[26] * d[41] * d[48] + 2 * d[19] * d[20] * d[42] * d[48] - 2 * std::pow(d[23], 2) * d[42] * d[48] - 2 * d[20] * d[21] * d[43] * d[48] + 2 * d[22] * d[23] * d[43] * d[48] - 2 * d[19] * d[22] * d[44] * d[48] + 2 * d[21] * d[23] * d[44] * d[48] + 2 * d[20] * d[25] * d[36] * d[49] - 2 * d[23] * d[26] * d[36] * d[49] - 2 * d[21] * d[24] * d[38] * d[49] + 2 * d[18] * d[25] * d[38] * d[49] - 2 * d[20] * d[24] * d[39] * d[49] + 2 * d[22] * d[26] * d[39] * d[49] + 2 * d[23] * d[24] * d[40] * d[49] - 4 * d[22] * d[25] * d[40] * d[49] + 2 * d[21] * d[26] * d[40] * d[49] + 2 * d[22] * d[24] * d[41] * d[49] - 2 * d[18] * d[26] * d[41] * d[49] - 2 * d[20] * d[21] * d[42] * d[49] + 2 * d[22] * d[23] * d[42] * d[49] + 2 * d[18] * d[20] * d[43] * d[49] - 2 * std::pow(d[22], 2) * d[43] * d[49] + 2 * d[21] * d[22] * d[44] * d[49] - 2 * d[18] * d[23] * d[44] * d[49] - 2 * d[23] * d[25] * d[36] * d[50] + 2 * d[19] * d[26] * d[36] * d[50] - 2 * d[22] * d[24] * d[37] * d[50] + 2 * d[18] * d[26] * d[37] * d[50] + 2 * d[23] * d[24] * d[39] * d[50] + 2 * d[22] * d[25] * d[39] * d[50] - 4 * d[21] * d[26] * d[39] * d[50] - 2 * d[19] * d[24] * d[40] * d[50] + 2 * d[21] * d[25] * d[40] * d[50] + 2 * d[21] * d[24] * d[41] * d[50] - 2 * d[18] * d[25] * d[41] * d[50] - 2 * d[19] * d[22] * d[42] * d[50] + 2 * d[21] * d[23] * d[42] * d[50] + 2 * d[21] * d[22] * d[43] * d[50] - 2 * d[18] * d[23] * d[43] * d[50] + 2 * d[18] * d[19] * d[44] * d[50] - 2 * std::pow(d[21], 2) * d[44] * d[50] - d[19] * d[20] * d[36] * d[55] + std::pow(d[23], 2) * d[36] * d[55] - d[18] * d[20] * d[37] * d[55] + std::pow(d[22], 2) * d[37] * d[55] - d[18] * d[19] * d[38] * d[55] + std::pow(d[21], 2) * d[38] * d[55] + 2 * d[20] * d[21] * d[39] * d[55] - 2 * d[22] * d[23] * d[39] * d[55] + 2 * d[19] * d[22] * d[40] * d[55] - 2 * d[21] * d[23] * d[40] * d[55] - 2 * d[21] * d[22] * d[41] * d[55] + 2 * d[18] * d[23] * d[41] * d[55];
    coeffs[48] = 2 * d[15] * d[29] * d[37] * d[48] - 2 * d[17] * d[31] * d[37] * d[48] + 2 * d[11] * d[33] * d[37] * d[48] - 2 * d[13] * d[35] * d[37] * d[48] + 2 * d[15] * d[28] * d[38] * d[48] - 2 * d[16] * d[30] * d[38] * d[48] + 2 * d[10] * d[33] * d[38] * d[48] - 2 * d[12] * d[34] * d[38] * d[48] - 2 * d[16] * d[29] * d[39] * d[48] + 2 * d[17] * d[32] * d[39] * d[48] - 2 * d[11] * d[34] * d[39] * d[48] + 2 * d[14] * d[35] * d[39] * d[48] - 2 * d[17] * d[28] * d[40] * d[48] + 2 * d[16] * d[32] * d[40] * d[48] + 2 * d[14] * d[34] * d[40] * d[48] - 2 * d[10] * d[35] * d[40] * d[48] + 2 * d[17] * d[30] * d[41] * d[48] + 2 * d[16] * d[31] * d[41] * d[48] - 4 * d[15] * d[32] * d[41] * d[48] - 4 * d[14] * d[33] * d[41] * d[48] + 2 * d[13] * d[34] * d[41] * d[48] + 2 * d[12] * d[35] * d[41] * d[48] + 2 * d[11] * d[28] * d[42] * d[48] + 2 * d[10] * d[29] * d[42] * d[48] - 4 * d[14] * d[32] * d[42] * d[48] - 2 * d[12] * d[29] * d[43] * d[48] - 2 * d[11] * d[30] * d[43] * d[48] + 2 * d[14] * d[31] * d[43] * d[48] + 2 * d[13] * d[32] * d[43] * d[48] - 2 * d[13] * d[28] * d[44] * d[48] + 2 * d[14] * d[30] * d[44] * d[48] - 2 * d[10] * d[31] * d[44] * d[48] + 2 * d[12] * d[32] * d[44] * d[48] + 2 * d[16] * d[29] * d[36] * d[49] - 2 * d[17] * d[32] * d[36] * d[49] + 2 * d[11] * d[34] * d[36] * d[49] - 2 * d[14] * d[35] * d[36] * d[49] + 2 * d[16] * d[27] * d[38] * d[49] - 2 * d[15] * d[30] * d[38] * d[49] - 2 * d[12] * d[33] * d[38] * d[49] + 2 * d[9] * d[34] * d[38] * d[49] - 2 * d[15] * d[29] * d[39] * d[49] + 2 * d[17] * d[31] * d[39] * d[49] - 2 * d[11] * d[33] * d[39] * d[49] + 2 * d[13] * d[35] * d[39] * d[49] + 2 * d[17] * d[30] * d[40] * d[49] - 4 * d[16] * d[31] * d[40] * d[49] + 2 * d[15] * d[32] * d[40] * d[49] + 2 * d[14] * d[33] * d[40] * d[49] - 4 * d[13] * d[34] * d[40] * d[49] + 2 * d[12] * d[35] * d[40] * d[49] - 2 * d[17] * d[27] * d[41] * d[49] + 2 * d[15] * d[31] * d[41] * d[49] + 2 * d[13] * d[33] * d[41] * d[49] - 2 * d[9] * d[35] * d[41] * d[49] - 2 * d[12] * d[29] * d[42] * d[49] - 2 * d[11] * d[30] * d[42] * d[49] + 2 * d[14] * d[31] * d[42] * d[49] + 2 * d[13] * d[32] * d[42] * d[49] + 2 * d[11] * d[27] * d[43] * d[49] + 2 * d[9] * d[29] * d[43] * d[49] - 4 * d[13] * d[31] * d[43] * d[49] - 2 * d[14] * d[27] * d[44] * d[49] + 2 * d[13] * d[30] * d[44] * d[49] + 2 * d[12] * d[31] * d[44] * d[49] - 2 * d[9] * d[32] * d[44] * d[49] + 2 * d[17] * d[28] * d[36] * d[50] - 2 * d[16] * d[32] * d[36] * d[50] - 2 * d[14] * d[34] * d[36] * d[50] + 2 * d[10] * d[35] * d[36] * d[50] + 2 * d[17] * d[27] * d[37] * d[50] - 2 * d[15] * d[31] * d[37] * d[50] - 2 * d[13] * d[33] * d[37] * d[50] + 2 * d[9] * d[35] * d[37] * d[50] - 4 * d[17] * d[30] * d[39] * d[50] + 2 * d[16] * d[31] * d[39] * d[50] + 2 * d[15] * d[32] * d[39] * d[50] + 2 * d[14] * d[33] * d[39] * d[50] + 2 * d[13] * d[34] * d[39] * d[50] - 4 * d[12] * d[35] * d[39] * d[50] - 2 * d[15] * d[28] * d[40] * d[50] + 2 * d[16] * d[30] * d[40] * d[50] - 2 * d[10] * d[33] * d[40] * d[50] + 2 * d[12] * d[34] * d[40] * d[50] - 2 * d[16] * d[27] * d[41] * d[50] + 2 * d[15] * d[30] * d[41] * d[50] + 2 * d[12] * d[33] * d[41] * d[50] - 2 * d[9] * d[34] * d[41] * d[50] - 2 * d[13] * d[28] * d[42] * d[50] + 2 * d[14] * d[30] * d[42] * d[50] - 2 * d[10] * d[31] * d[42] * d[50] + 2 * d[12] * d[32] * d[42] * d[50] - 2 * d[14] * d[27] * d[43] * d[50] + 2 * d[13] * d[30] * d[43] * d[50] + 2 * d[12] * d[31] * d[43] * d[50] - 2 * d[9] * d[32] * d[43] * d[50] + 2 * d[10] * d[27] * d[44] * d[50] + 2 * d[9] * d[28] * d[44] * d[50] - 4 * d[12] * d[30] * d[44] * d[50] - d[11] * d[28] * d[36] * d[55] - d[10] * d[29] * d[36] * d[55] + 2 * d[14] * d[32] * d[36] * d[55] - d[11] * d[27] * d[37] * d[55] - d[9] * d[29] * d[37] * d[55] + 2 * d[13] * d[31] * d[37] * d[55] - d[10] * d[27] * d[38] * d[55] - d[9] * d[28] * d[38] * d[55] + 2 * d[12] * d[30] * d[38] * d[55] + 2 * d[12] * d[29] * d[39] * d[55] + 2 * d[11] * d[30] * d[39] * d[55] - 2 * d[14] * d[31] * d[39] * d[55] - 2 * d[13] * d[32] * d[39] * d[55] + 2 * d[13] * d[28] * d[40] * d[55] - 2 * d[14] * d[30] * d[40] * d[55] + 2 * d[10] * d[31] * d[40] * d[55] - 2 * d[12] * d[32] * d[40] * d[55] + 2 * d[14] * d[27] * d[41] * d[55] - 2 * d[13] * d[30] * d[41] * d[55] - 2 * d[12] * d[31] * d[41] * d[55] + 2 * d[9] * d[32] * d[41] * d[55];
    coeffs[49] = 2 * d[24] * d[29] * d[37] * d[48] - 2 * d[26] * d[31] * d[37] * d[48] + 2 * d[20] * d[33] * d[37] * d[48] - 2 * d[22] * d[35] * d[37] * d[48] + 2 * d[24] * d[28] * d[38] * d[48] - 2 * d[25] * d[30] * d[38] * d[48] + 2 * d[19] * d[33] * d[38] * d[48] - 2 * d[21] * d[34] * d[38] * d[48] - 2 * d[25] * d[29] * d[39] * d[48] + 2 * d[26] * d[32] * d[39] * d[48] - 2 * d[20] * d[34] * d[39] * d[48] + 2 * d[23] * d[35] * d[39] * d[48] - 2 * d[26] * d[28] * d[40] * d[48] + 2 * d[25] * d[32] * d[40] * d[48] + 2 * d[23] * d[34] * d[40] * d[48] - 2 * d[19] * d[35] * d[40] * d[48] + 2 * d[26] * d[30] * d[41] * d[48] + 2 * d[25] * d[31] * d[41] * d[48] - 4 * d[24] * d[32] * d[41] * d[48] - 4 * d[23] * d[33] * d[41] * d[48] + 2 * d[22] * d[34] * d[41] * d[48] + 2 * d[21] * d[35] * d[41] * d[48] + 2 * d[20] * d[28] * d[42] * d[48] + 2 * d[19] * d[29] * d[42] * d[48] - 4 * d[23] * d[32] * d[42] * d[48] - 2 * d[21] * d[29] * d[43] * d[48] - 2 * d[20] * d[30] * d[43] * d[48] + 2 * d[23] * d[31] * d[43] * d[48] + 2 * d[22] * d[32] * d[43] * d[48] - 2 * d[22] * d[28] * d[44] * d[48] + 2 * d[23] * d[30] * d[44] * d[48] - 2 * d[19] * d[31] * d[44] * d[48] + 2 * d[21] * d[32] * d[44] * d[48] + 2 * d[25] * d[29] * d[36] * d[49] - 2 * d[26] * d[32] * d[36] * d[49] + 2 * d[20] * d[34] * d[36] * d[49] - 2 * d[23] * d[35] * d[36] * d[49] + 2 * d[25] * d[27] * d[38] * d[49] - 2 * d[24] * d[30] * d[38] * d[49] - 2 * d[21] * d[33] * d[38] * d[49] + 2 * d[18] * d[34] * d[38] * d[49] - 2 * d[24] * d[29] * d[39] * d[49] + 2 * d[26] * d[31] * d[39] * d[49] - 2 * d[20] * d[33] * d[39] * d[49] + 2 * d[22] * d[35] * d[39] * d[49] + 2 * d[26] * d[30] * d[40] * d[49] - 4 * d[25] * d[31] * d[40] * d[49] + 2 * d[24] * d[32] * d[40] * d[49] + 2 * d[23] * d[33] * d[40] * d[49] - 4 * d[22] * d[34] * d[40] * d[49] + 2 * d[21] * d[35] * d[40] * d[49] - 2 * d[26] * d[27] * d[41] * d[49] + 2 * d[24] * d[31] * d[41] * d[49] + 2 * d[22] * d[33] * d[41] * d[49] - 2 * d[18] * d[35] * d[41] * d[49] - 2 * d[21] * d[29] * d[42] * d[49] - 2 * d[20] * d[30] * d[42] * d[49] + 2 * d[23] * d[31] * d[42] * d[49] + 2 * d[22] * d[32] * d[42] * d[49] + 2 * d[20] * d[27] * d[43] * d[49] + 2 * d[18] * d[29] * d[43] * d[49] - 4 * d[22] * d[31] * d[43] * d[49] - 2 * d[23] * d[27] * d[44] * d[49] + 2 * d[22] * d[30] * d[44] * d[49] + 2 * d[21] * d[31] * d[44] * d[49] - 2 * d[18] * d[32] * d[44] * d[49] + 2 * d[26] * d[28] * d[36] * d[50] - 2 * d[25] * d[32] * d[36] * d[50] - 2 * d[23] * d[34] * d[36] * d[50] + 2 * d[19] * d[35] * d[36] * d[50] + 2 * d[26] * d[27] * d[37] * d[50] - 2 * d[24] * d[31] * d[37] * d[50] - 2 * d[22] * d[33] * d[37] * d[50] + 2 * d[18] * d[35] * d[37] * d[50] - 4 * d[26] * d[30] * d[39] * d[50] + 2 * d[25] * d[31] * d[39] * d[50] + 2 * d[24] * d[32] * d[39] * d[50] + 2 * d[23] * d[33] * d[39] * d[50] + 2 * d[22] * d[34] * d[39] * d[50] - 4 * d[21] * d[35] * d[39] * d[50] - 2 * d[24] * d[28] * d[40] * d[50] + 2 * d[25] * d[30] * d[40] * d[50] - 2 * d[19] * d[33] * d[40] * d[50] + 2 * d[21] * d[34] * d[40] * d[50] - 2 * d[25] * d[27] * d[41] * d[50] + 2 * d[24] * d[30] * d[41] * d[50] + 2 * d[21] * d[33] * d[41] * d[50] - 2 * d[18] * d[34] * d[41] * d[50] - 2 * d[22] * d[28] * d[42] * d[50] + 2 * d[23] * d[30] * d[42] * d[50] - 2 * d[19] * d[31] * d[42] * d[50] + 2 * d[21] * d[32] * d[42] * d[50] - 2 * d[23] * d[27] * d[43] * d[50] + 2 * d[22] * d[30] * d[43] * d[50] + 2 * d[21] * d[31] * d[43] * d[50] - 2 * d[18] * d[32] * d[43] * d[50] + 2 * d[19] * d[27] * d[44] * d[50] + 2 * d[18] * d[28] * d[44] * d[50] - 4 * d[21] * d[30] * d[44] * d[50] - d[20] * d[28] * d[36] * d[55] - d[19] * d[29] * d[36] * d[55] + 2 * d[23] * d[32] * d[36] * d[55] - d[20] * d[27] * d[37] * d[55] - d[18] * d[29] * d[37] * d[55] + 2 * d[22] * d[31] * d[37] * d[55] - d[19] * d[27] * d[38] * d[55] - d[18] * d[28] * d[38] * d[55] + 2 * d[21] * d[30] * d[38] * d[55] + 2 * d[21] * d[29] * d[39] * d[55] + 2 * d[20] * d[30] * d[39] * d[55] - 2 * d[23] * d[31] * d[39] * d[55] - 2 * d[22] * d[32] * d[39] * d[55] + 2 * d[22] * d[28] * d[40] * d[55] - 2 * d[23] * d[30] * d[40] * d[55] + 2 * d[19] * d[31] * d[40] * d[55] - 2 * d[21] * d[32] * d[40] * d[55] + 2 * d[23] * d[27] * d[41] * d[55] - 2 * d[22] * d[30] * d[41] * d[55] - 2 * d[21] * d[31] * d[41] * d[55] + 2 * d[18] * d[32] * d[41] * d[55];
    coeffs[50] = 2 * d[29] * d[33] * d[37] * d[48] - 2 * d[31] * d[35] * d[37] * d[48] + 2 * d[28] * d[33] * d[38] * d[48] - 2 * d[30] * d[34] * d[38] * d[48] - 2 * d[29] * d[34] * d[39] * d[48] + 2 * d[32] * d[35] * d[39] * d[48] + 2 * d[32] * d[34] * d[40] * d[48] - 2 * d[28] * d[35] * d[40] * d[48] - 4 * d[32] * d[33] * d[41] * d[48] + 2 * d[31] * d[34] * d[41] * d[48] + 2 * d[30] * d[35] * d[41] * d[48] + 2 * d[28] * d[29] * d[42] * d[48] - 2 * std::pow(d[32], 2) * d[42] * d[48] - 2 * d[29] * d[30] * d[43] * d[48] + 2 * d[31] * d[32] * d[43] * d[48] - 2 * d[28] * d[31] * d[44] * d[48] + 2 * d[30] * d[32] * d[44] * d[48] + 2 * d[29] * d[34] * d[36] * d[49] - 2 * d[32] * d[35] * d[36] * d[49] - 2 * d[30] * d[33] * d[38] * d[49] + 2 * d[27] * d[34] * d[38] * d[49] - 2 * d[29] * d[33] * d[39] * d[49] + 2 * d[31] * d[35] * d[39] * d[49] + 2 * d[32] * d[33] * d[40] * d[49] - 4 * d[31] * d[34] * d[40] * d[49] + 2 * d[30] * d[35] * d[40] * d[49] + 2 * d[31] * d[33] * d[41] * d[49] - 2 * d[27] * d[35] * d[41] * d[49] - 2 * d[29] * d[30] * d[42] * d[49] + 2 * d[31] * d[32] * d[42] * d[49] + 2 * d[27] * d[29] * d[43] * d[49] - 2 * std::pow(d[31], 2) * d[43] * d[49] + 2 * d[30] * d[31] * d[44] * d[49] - 2 * d[27] * d[32] * d[44] * d[49] - 2 * d[32] * d[34] * d[36] * d[50] + 2 * d[28] * d[35] * d[36] * d[50] - 2 * d[31] * d[33] * d[37] * d[50] + 2 * d[27] * d[35] * d[37] * d[50] + 2 * d[32] * d[33] * d[39] * d[50] + 2 * d[31] * d[34] * d[39] * d[50] - 4 * d[30] * d[35] * d[39] * d[50] - 2 * d[28] * d[33] * d[40] * d[50] + 2 * d[30] * d[34] * d[40] * d[50] + 2 * d[30] * d[33] * d[41] * d[50] - 2 * d[27] * d[34] * d[41] * d[50] - 2 * d[28] * d[31] * d[42] * d[50] + 2 * d[30] * d[32] * d[42] * d[50] + 2 * d[30] * d[31] * d[43] * d[50] - 2 * d[27] * d[32] * d[43] * d[50] + 2 * d[27] * d[28] * d[44] * d[50] - 2 * std::pow(d[30], 2) * d[44] * d[50] - d[28] * d[29] * d[36] * d[55] + std::pow(d[32], 2) * d[36] * d[55] - d[27] * d[29] * d[37] * d[55] + std::pow(d[31], 2) * d[37] * d[55] - d[27] * d[28] * d[38] * d[55] + std::pow(d[30], 2) * d[38] * d[55] + 2 * d[29] * d[30] * d[39] * d[55] - 2 * d[31] * d[32] * d[39] * d[55] + 2 * d[28] * d[31] * d[40] * d[55] - 2 * d[30] * d[32] * d[40] * d[55] - 2 * d[30] * d[31] * d[41] * d[55] + 2 * d[27] * d[32] * d[41] * d[55];
    coeffs[51] = 2 * d[15] * d[37] * d[38] * d[48] - 2 * d[16] * d[38] * d[39] * d[48] - 2 * d[17] * d[37] * d[40] * d[48] + 2 * d[17] * d[39] * d[41] * d[48] + 2 * d[16] * d[40] * d[41] * d[48] - 2 * d[15] * std::pow(d[41], 2) * d[48] + 2 * d[11] * d[37] * d[42] * d[48] + 2 * d[10] * d[38] * d[42] * d[48] - 4 * d[14] * d[41] * d[42] * d[48] - 2 * d[12] * d[38] * d[43] * d[48] - 2 * d[11] * d[39] * d[43] * d[48] + 2 * d[14] * d[40] * d[43] * d[48] + 2 * d[13] * d[41] * d[43] * d[48] - 2 * d[13] * d[37] * d[44] * d[48] + 2 * d[14] * d[39] * d[44] * d[48] - 2 * d[10] * d[40] * d[44] * d[48] + 2 * d[12] * d[41] * d[44] * d[48] + 2 * d[16] * d[36] * d[38] * d[49] - 2 * d[15] * d[38] * d[39] * d[49] + 2 * d[17] * d[39] * d[40] * d[49] - 2 * d[16] * std::pow(d[40], 2) * d[49] - 2 * d[17] * d[36] * d[41] * d[49] + 2 * d[15] * d[40] * d[41] * d[49] - 2 * d[12] * d[38] * d[42] * d[49] - 2 * d[11] * d[39] * d[42] * d[49] + 2 * d[14] * d[40] * d[42] * d[49] + 2 * d[13] * d[41] * d[42] * d[49] + 2 * d[11] * d[36] * d[43] * d[49] + 2 * d[9] * d[38] * d[43] * d[49] - 4 * d[13] * d[40] * d[43] * d[49] - 2 * d[14] * d[36] * d[44] * d[49] + 2 * d[13] * d[39] * d[44] * d[49] + 2 * d[12] * d[40] * d[44] * d[49] - 2 * d[9] * d[41] * d[44] * d[49] + 2 * d[17] * d[36] * d[37] * d[50] - 2 * d[17] * std::pow(d[39], 2) * d[50] - 2 * d[15] * d[37] * d[40] * d[50] + 2 * d[16] * d[39] * d[40] * d[50] - 2 * d[16] * d[36] * d[41] * d[50] + 2 * d[15] * d[39] * d[41] * d[50] - 2 * d[13] * d[37] * d[42] * d[50] + 2 * d[14] * d[39] * d[42] * d[50] - 2 * d[10] * d[40] * d[42] * d[50] + 2 * d[12] * d[41] * d[42] * d[50] - 2 * d[14] * d[36] * d[43] * d[50] + 2 * d[13] * d[39] * d[43] * d[50] + 2 * d[12] * d[40] * d[43] * d[50] - 2 * d[9] * d[41] * d[43] * d[50] + 2 * d[10] * d[36] * d[44] * d[50] + 2 * d[9] * d[37] * d[44] * d[50] - 4 * d[12] * d[39] * d[44] * d[50] - d[11] * d[36] * d[37] * d[55] - d[10] * d[36] * d[38] * d[55] - d[9] * d[37] * d[38] * d[55] + 2 * d[12] * d[38] * d[39] * d[55] + d[11] * std::pow(d[39], 2) * d[55] + 2 * d[13] * d[37] * d[40] * d[55] - 2 * d[14] * d[39] * d[40] * d[55] + d[10] * std::pow(d[40], 2) * d[55] + 2 * d[14] * d[36] * d[41] * d[55] - 2 * d[13] * d[39] * d[41] * d[55] - 2 * d[12] * d[40] * d[41] * d[55] + d[9] * std::pow(d[41], 2) * d[55];
    coeffs[52] = 2 * d[24] * d[37] * d[38] * d[48] - 2 * d[25] * d[38] * d[39] * d[48] - 2 * d[26] * d[37] * d[40] * d[48] + 2 * d[26] * d[39] * d[41] * d[48] + 2 * d[25] * d[40] * d[41] * d[48] - 2 * d[24] * std::pow(d[41], 2) * d[48] + 2 * d[20] * d[37] * d[42] * d[48] + 2 * d[19] * d[38] * d[42] * d[48] - 4 * d[23] * d[41] * d[42] * d[48] - 2 * d[21] * d[38] * d[43] * d[48] - 2 * d[20] * d[39] * d[43] * d[48] + 2 * d[23] * d[40] * d[43] * d[48] + 2 * d[22] * d[41] * d[43] * d[48] - 2 * d[22] * d[37] * d[44] * d[48] + 2 * d[23] * d[39] * d[44] * d[48] - 2 * d[19] * d[40] * d[44] * d[48] + 2 * d[21] * d[41] * d[44] * d[48] + 2 * d[25] * d[36] * d[38] * d[49] - 2 * d[24] * d[38] * d[39] * d[49] + 2 * d[26] * d[39] * d[40] * d[49] - 2 * d[25] * std::pow(d[40], 2) * d[49] - 2 * d[26] * d[36] * d[41] * d[49] + 2 * d[24] * d[40] * d[41] * d[49] - 2 * d[21] * d[38] * d[42] * d[49] - 2 * d[20] * d[39] * d[42] * d[49] + 2 * d[23] * d[40] * d[42] * d[49] + 2 * d[22] * d[41] * d[42] * d[49] + 2 * d[20] * d[36] * d[43] * d[49] + 2 * d[18] * d[38] * d[43] * d[49] - 4 * d[22] * d[40] * d[43] * d[49] - 2 * d[23] * d[36] * d[44] * d[49] + 2 * d[22] * d[39] * d[44] * d[49] + 2 * d[21] * d[40] * d[44] * d[49] - 2 * d[18] * d[41] * d[44] * d[49] + 2 * d[26] * d[36] * d[37] * d[50] - 2 * d[26] * std::pow(d[39], 2) * d[50] - 2 * d[24] * d[37] * d[40] * d[50] + 2 * d[25] * d[39] * d[40] * d[50] - 2 * d[25] * d[36] * d[41] * d[50] + 2 * d[24] * d[39] * d[41] * d[50] - 2 * d[22] * d[37] * d[42] * d[50] + 2 * d[23] * d[39] * d[42] * d[50] - 2 * d[19] * d[40] * d[42] * d[50] + 2 * d[21] * d[41] * d[42] * d[50] - 2 * d[23] * d[36] * d[43] * d[50] + 2 * d[22] * d[39] * d[43] * d[50] + 2 * d[21] * d[40] * d[43] * d[50] - 2 * d[18] * d[41] * d[43] * d[50] + 2 * d[19] * d[36] * d[44] * d[50] + 2 * d[18] * d[37] * d[44] * d[50] - 4 * d[21] * d[39] * d[44] * d[50] - d[20] * d[36] * d[37] * d[55] - d[19] * d[36] * d[38] * d[55] - d[18] * d[37] * d[38] * d[55] + 2 * d[21] * d[38] * d[39] * d[55] + d[20] * std::pow(d[39], 2) * d[55] + 2 * d[22] * d[37] * d[40] * d[55] - 2 * d[23] * d[39] * d[40] * d[55] + d[19] * std::pow(d[40], 2) * d[55] + 2 * d[23] * d[36] * d[41] * d[55] - 2 * d[22] * d[39] * d[41] * d[55] - 2 * d[21] * d[40] * d[41] * d[55] + d[18] * std::pow(d[41], 2) * d[55];
    coeffs[53] = 2 * d[33] * d[37] * d[38] * d[48] - 2 * d[34] * d[38] * d[39] * d[48] - 2 * d[35] * d[37] * d[40] * d[48] + 2 * d[35] * d[39] * d[41] * d[48] + 2 * d[34] * d[40] * d[41] * d[48] - 2 * d[33] * std::pow(d[41], 2) * d[48] + 2 * d[29] * d[37] * d[42] * d[48] + 2 * d[28] * d[38] * d[42] * d[48] - 4 * d[32] * d[41] * d[42] * d[48] - 2 * d[30] * d[38] * d[43] * d[48] - 2 * d[29] * d[39] * d[43] * d[48] + 2 * d[32] * d[40] * d[43] * d[48] + 2 * d[31] * d[41] * d[43] * d[48] - 2 * d[31] * d[37] * d[44] * d[48] + 2 * d[32] * d[39] * d[44] * d[48] - 2 * d[28] * d[40] * d[44] * d[48] + 2 * d[30] * d[41] * d[44] * d[48] + 2 * d[34] * d[36] * d[38] * d[49] - 2 * d[33] * d[38] * d[39] * d[49] + 2 * d[35] * d[39] * d[40] * d[49] - 2 * d[34] * std::pow(d[40], 2) * d[49] - 2 * d[35] * d[36] * d[41] * d[49] + 2 * d[33] * d[40] * d[41] * d[49] - 2 * d[30] * d[38] * d[42] * d[49] - 2 * d[29] * d[39] * d[42] * d[49] + 2 * d[32] * d[40] * d[42] * d[49] + 2 * d[31] * d[41] * d[42] * d[49] + 2 * d[29] * d[36] * d[43] * d[49] + 2 * d[27] * d[38] * d[43] * d[49] - 4 * d[31] * d[40] * d[43] * d[49] - 2 * d[32] * d[36] * d[44] * d[49] + 2 * d[31] * d[39] * d[44] * d[49] + 2 * d[30] * d[40] * d[44] * d[49] - 2 * d[27] * d[41] * d[44] * d[49] + 2 * d[35] * d[36] * d[37] * d[50] - 2 * d[35] * std::pow(d[39], 2) * d[50] - 2 * d[33] * d[37] * d[40] * d[50] + 2 * d[34] * d[39] * d[40] * d[50] - 2 * d[34] * d[36] * d[41] * d[50] + 2 * d[33] * d[39] * d[41] * d[50] - 2 * d[31] * d[37] * d[42] * d[50] + 2 * d[32] * d[39] * d[42] * d[50] - 2 * d[28] * d[40] * d[42] * d[50] + 2 * d[30] * d[41] * d[42] * d[50] - 2 * d[32] * d[36] * d[43] * d[50] + 2 * d[31] * d[39] * d[43] * d[50] + 2 * d[30] * d[40] * d[43] * d[50] - 2 * d[27] * d[41] * d[43] * d[50] + 2 * d[28] * d[36] * d[44] * d[50] + 2 * d[27] * d[37] * d[44] * d[50] - 4 * d[30] * d[39] * d[44] * d[50] - d[29] * d[36] * d[37] * d[55] - d[28] * d[36] * d[38] * d[55] - d[27] * d[37] * d[38] * d[55] + 2 * d[30] * d[38] * d[39] * d[55] + d[29] * std::pow(d[39], 2) * d[55] + 2 * d[31] * d[37] * d[40] * d[55] - 2 * d[32] * d[39] * d[40] * d[55] + d[28] * std::pow(d[40], 2) * d[55] + 2 * d[32] * d[36] * d[41] * d[55] - 2 * d[31] * d[39] * d[41] * d[55] - 2 * d[30] * d[40] * d[41] * d[55] + d[27] * std::pow(d[41], 2) * d[55];
    coeffs[54] = 2 * d[37] * d[38] * d[42] * d[48] - 2 * std::pow(d[41], 2) * d[42] * d[48] - 2 * d[38] * d[39] * d[43] * d[48] + 2 * d[40] * d[41] * d[43] * d[48] - 2 * d[37] * d[40] * d[44] * d[48] + 2 * d[39] * d[41] * d[44] * d[48] - 2 * d[38] * d[39] * d[42] * d[49] + 2 * d[40] * d[41] * d[42] * d[49] + 2 * d[36] * d[38] * d[43] * d[49] - 2 * std::pow(d[40], 2) * d[43] * d[49] + 2 * d[39] * d[40] * d[44] * d[49] - 2 * d[36] * d[41] * d[44] * d[49] - 2 * d[37] * d[40] * d[42] * d[50] + 2 * d[39] * d[41] * d[42] * d[50] + 2 * d[39] * d[40] * d[43] * d[50] - 2 * d[36] * d[41] * d[43] * d[50] + 2 * d[36] * d[37] * d[44] * d[50] - 2 * std::pow(d[39], 2) * d[44] * d[50] - d[36] * d[37] * d[38] * d[55] + d[38] * std::pow(d[39], 2) * d[55] + d[37] * std::pow(d[40], 2) * d[55] - 2 * d[39] * d[40] * d[41] * d[55] + d[36] * std::pow(d[41], 2) * d[55];
    coeffs[55] = 2 * d[6] * d[10] * d[11] * d[48] - 2 * d[7] * d[11] * d[12] * d[48] - 2 * d[8] * d[10] * d[13] * d[48] + 2 * d[8] * d[12] * d[14] * d[48] + 2 * d[7] * d[13] * d[14] * d[48] - 2 * d[6] * std::pow(d[14], 2) * d[48] + 2 * d[2] * d[10] * d[15] * d[48] + 2 * d[1] * d[11] * d[15] * d[48] - 4 * d[5] * d[14] * d[15] * d[48] - 2 * d[3] * d[11] * d[16] * d[48] - 2 * d[2] * d[12] * d[16] * d[48] + 2 * d[5] * d[13] * d[16] * d[48] + 2 * d[4] * d[14] * d[16] * d[48] - 2 * d[4] * d[10] * d[17] * d[48] + 2 * d[5] * d[12] * d[17] * d[48] - 2 * d[1] * d[13] * d[17] * d[48] + 2 * d[3] * d[14] * d[17] * d[48] + d[10] * d[11] * std::pow(d[48], 2) - std::pow(d[14], 2) * std::pow(d[48], 2) + 2 * d[7] * d[9] * d[11] * d[49] - 2 * d[6] * d[11] * d[12] * d[49] + 2 * d[8] * d[12] * d[13] * d[49] - 2 * d[7] * std::pow(d[13], 2) * d[49] - 2 * d[8] * d[9] * d[14] * d[49] + 2 * d[6] * d[13] * d[14] * d[49] - 2 * d[3] * d[11] * d[15] * d[49] - 2 * d[2] * d[12] * d[15] * d[49] + 2 * d[5] * d[13] * d[15] * d[49] + 2 * d[4] * d[14] * d[15] * d[49] + 2 * d[2] * d[9] * d[16] * d[49] + 2 * d[0] * d[11] * d[16] * d[49] - 4 * d[4] * d[13] * d[16] * d[49] - 2 * d[5] * d[9] * d[17] * d[49] + 2 * d[4] * d[12] * d[17] * d[49] + 2 * d[3] * d[13] * d[17] * d[49] - 2 * d[0] * d[14] * d[17] * d[49] - 2 * d[11] * d[12] * d[48] * d[49] + 2 * d[13] * d[14] * d[48] * d[49] + d[9] * d[11] * std::pow(d[49], 2) - std::pow(d[13], 2) * std::pow(d[49], 2) + 2 * d[8] * d[9] * d[10] * d[50] - 2 * d[8] * std::pow(d[12], 2) * d[50] - 2 * d[6] * d[10] * d[13] * d[50] + 2 * d[7] * d[12] * d[13] * d[50] - 2 * d[7] * d[9] * d[14] * d[50] + 2 * d[6] * d[12] * d[14] * d[50] - 2 * d[4] * d[10] * d[15] * d[50] + 2 * d[5] * d[12] * d[15] * d[50] - 2 * d[1] * d[13] * d[15] * d[50] + 2 * d[3] * d[14] * d[15] * d[50] - 2 * d[5] * d[9] * d[16] * d[50] + 2 * d[4] * d[12] * d[16] * d[50] + 2 * d[3] * d[13] * d[16] * d[50] - 2 * d[0] * d[14] * d[16] * d[50] + 2 * d[1] * d[9] * d[17] * d[50] + 2 * d[0] * d[10] * d[17] * d[50] - 4 * d[3] * d[12] * d[17] * d[50] - 2 * d[10] * d[13] * d[48] * d[50] + 2 * d[12] * d[14] * d[48] * d[50] + 2 * d[12] * d[13] * d[49] * d[50] - 2 * d[9] * d[14] * d[49] * d[50] + d[9] * d[10] * std::pow(d[50], 2) - std::pow(d[12], 2) * std::pow(d[50], 2) - d[2] * d[9] * d[10] * d[55] - d[1] * d[9] * d[11] * d[55] - d[0] * d[10] * d[11] * d[55] + 2 * d[3] * d[11] * d[12] * d[55] + d[2] * std::pow(d[12], 2) * d[55] + 2 * d[4] * d[10] * d[13] * d[55] - 2 * d[5] * d[12] * d[13] * d[55] + d[1] * std::pow(d[13], 2) * d[55] + 2 * d[5] * d[9] * d[14] * d[55] - 2 * d[4] * d[12] * d[14] * d[55] - 2 * d[3] * d[13] * d[14] * d[55] + d[0] * std::pow(d[14], 2) * d[55];
    coeffs[56] = 2 * d[6] * d[11] * d[19] * d[48] - 2 * d[8] * d[13] * d[19] * d[48] + 2 * d[2] * d[15] * d[19] * d[48] - 2 * d[4] * d[17] * d[19] * d[48] + 2 * d[6] * d[10] * d[20] * d[48] - 2 * d[7] * d[12] * d[20] * d[48] + 2 * d[1] * d[15] * d[20] * d[48] - 2 * d[3] * d[16] * d[20] * d[48] - 2 * d[7] * d[11] * d[21] * d[48] + 2 * d[8] * d[14] * d[21] * d[48] - 2 * d[2] * d[16] * d[21] * d[48] + 2 * d[5] * d[17] * d[21] * d[48] - 2 * d[8] * d[10] * d[22] * d[48] + 2 * d[7] * d[14] * d[22] * d[48] + 2 * d[5] * d[16] * d[22] * d[48] - 2 * d[1] * d[17] * d[22] * d[48] + 2 * d[8] * d[12] * d[23] * d[48] + 2 * d[7] * d[13] * d[23] * d[48] - 4 * d[6] * d[14] * d[23] * d[48] - 4 * d[5] * d[15] * d[23] * d[48] + 2 * d[4] * d[16] * d[23] * d[48] + 2 * d[3] * d[17] * d[23] * d[48] + 2 * d[2] * d[10] * d[24] * d[48] + 2 * d[1] * d[11] * d[24] * d[48] - 4 * d[5] * d[14] * d[24] * d[48] - 2 * d[3] * d[11] * d[25] * d[48] - 2 * d[2] * d[12] * d[25] * d[48] + 2 * d[5] * d[13] * d[25] * d[48] + 2 * d[4] * d[14] * d[25] * d[48] - 2 * d[4] * d[10] * d[26] * d[48] + 2 * d[5] * d[12] * d[26] * d[48] - 2 * d[1] * d[13] * d[26] * d[48] + 2 * d[3] * d[14] * d[26] * d[48] + d[11] * d[19] * std::pow(d[48], 2) + d[10] * d[20] * std::pow(d[48], 2) - 2 * d[14] * d[23] * std::pow(d[48], 2) + 2 * d[7] * d[11] * d[18] * d[49] - 2 * d[8] * d[14] * d[18] * d[49] + 2 * d[2] * d[16] * d[18] * d[49] - 2 * d[5] * d[17] * d[18] * d[49] + 2 * d[7] * d[9] * d[20] * d[49] - 2 * d[6] * d[12] * d[20] * d[49] - 2 * d[3] * d[15] * d[20] * d[49] + 2 * d[0] * d[16] * d[20] * d[49] - 2 * d[6] * d[11] * d[21] * d[49] + 2 * d[8] * d[13] * d[21] * d[49] - 2 * d[2] * d[15] * d[21] * d[49] + 2 * d[4] * d[17] * d[21] * d[49] + 2 * d[8] * d[12] * d[22] * d[49] - 4 * d[7] * d[13] * d[22] * d[49] + 2 * d[6] * d[14] * d[22] * d[49] + 2 * d[5] * d[15] * d[22] * d[49] - 4 * d[4] * d[16] * d[22] * d[49] + 2 * d[3] * d[17] * d[22] * d[49] - 2 * d[8] * d[9] * d[23] * d[49] + 2 * d[6] * d[13] * d[23] * d[49] + 2 * d[4] * d[15] * d[23] * d[49] - 2 * d[0] * d[17] * d[23] * d[49] - 2 * d[3] * d[11] * d[24] * d[49] - 2 * d[2] * d[12] * d[24] * d[49] + 2 * d[5] * d[13] * d[24] * d[49] + 2 * d[4] * d[14] * d[24] * d[49] + 2 * d[2] * d[9] * d[25] * d[49] + 2 * d[0] * d[11] * d[25] * d[49] - 4 * d[4] * d[13] * d[25] * d[49] - 2 * d[5] * d[9] * d[26] * d[49] + 2 * d[4] * d[12] * d[26] * d[49] + 2 * d[3] * d[13] * d[26] * d[49] - 2 * d[0] * d[14] * d[26] * d[49] - 2 * d[12] * d[20] * d[48] * d[49] - 2 * d[11] * d[21] * d[48] * d[49] + 2 * d[14] * d[22] * d[48] * d[49] + 2 * d[13] * d[23] * d[48] * d[49] + d[11] * d[18] * std::pow(d[49], 2) + d[9] * d[20] * std::pow(d[49], 2) - 2 * d[13] * d[22] * std::pow(d[49], 2) + 2 * d[8] * d[10] * d[18] * d[50] - 2 * d[7] * d[14] * d[18] * d[50] - 2 * d[5] * d[16] * d[18] * d[50] + 2 * d[1] * d[17] * d[18] * d[50] + 2 * d[8] * d[9] * d[19] * d[50] - 2 * d[6] * d[13] * d[19] * d[50] - 2 * d[4] * d[15] * d[19] * d[50] + 2 * d[0] * d[17] * d[19] * d[50] - 4 * d[8] * d[12] * d[21] * d[50] + 2 * d[7] * d[13] * d[21] * d[50] + 2 * d[6] * d[14] * d[21] * d[50] + 2 * d[5] * d[15] * d[21] * d[50] + 2 * d[4] * d[16] * d[21] * d[50] - 4 * d[3] * d[17] * d[21] * d[50] - 2 * d[6] * d[10] * d[22] * d[50] + 2 * d[7] * d[12] * d[22] * d[50] - 2 * d[1] * d[15] * d[22] * d[50] + 2 * d[3] * d[16] * d[22] * d[50] - 2 * d[7] * d[9] * d[23] * d[50] + 2 * d[6] * d[12] * d[23] * d[50] + 2 * d[3] * d[15] * d[23] * d[50] - 2 * d[0] * d[16] * d[23] * d[50] - 2 * d[4] * d[10] * d[24] * d[50] + 2 * d[5] * d[12] * d[24] * d[50] - 2 * d[1] * d[13] * d[24] * d[50] + 2 * d[3] * d[14] * d[24] * d[50] - 2 * d[5] * d[9] * d[25] * d[50] + 2 * d[4] * d[12] * d[25] * d[50] + 2 * d[3] * d[13] * d[25] * d[50] - 2 * d[0] * d[14] * d[25] * d[50] + 2 * d[1] * d[9] * d[26] * d[50] + 2 * d[0] * d[10] * d[26] * d[50] - 4 * d[3] * d[12] * d[26] * d[50] - 2 * d[13] * d[19] * d[48] * d[50] + 2 * d[14] * d[21] * d[48] * d[50] - 2 * d[10] * d[22] * d[48] * d[50] + 2 * d[12] * d[23] * d[48] * d[50] - 2 * d[14] * d[18] * d[49] * d[50] + 2 * d[13] * d[21] * d[49] * d[50] + 2 * d[12] * d[22] * d[49] * d[50] - 2 * d[9] * d[23] * d[49] * d[50] + d[10] * d[18] * std::pow(d[50], 2) + d[9] * d[19] * std::pow(d[50], 2) - 2 * d[12] * d[21] * std::pow(d[50], 2) - d[2] * d[10] * d[18] * d[55] - d[1] * d[11] * d[18] * d[55] + 2 * d[5] * d[14] * d[18] * d[55] - d[2] * d[9] * d[19] * d[55] - d[0] * d[11] * d[19] * d[55] + 2 * d[4] * d[13] * d[19] * d[55] - d[1] * d[9] * d[20] * d[55] - d[0] * d[10] * d[20] * d[55] + 2 * d[3] * d[12] * d[20] * d[55] + 2 * d[3] * d[11] * d[21] * d[55] + 2 * d[2] * d[12] * d[21] * d[55] - 2 * d[5] * d[13] * d[21] * d[55] - 2 * d[4] * d[14] * d[21] * d[55] + 2 * d[4] * d[10] * d[22] * d[55] - 2 * d[5] * d[12] * d[22] * d[55] + 2 * d[1] * d[13] * d[22] * d[55] - 2 * d[3] * d[14] * d[22] * d[55] + 2 * d[5] * d[9] * d[23] * d[55] - 2 * d[4] * d[12] * d[23] * d[55] - 2 * d[3] * d[13] * d[23] * d[55] + 2 * d[0] * d[14] * d[23] * d[55];
    coeffs[57] = 2 * d[6] * d[19] * d[20] * d[48] - 2 * d[7] * d[20] * d[21] * d[48] - 2 * d[8] * d[19] * d[22] * d[48] + 2 * d[8] * d[21] * d[23] * d[48] + 2 * d[7] * d[22] * d[23] * d[48] - 2 * d[6] * std::pow(d[23], 2) * d[48] + 2 * d[2] * d[19] * d[24] * d[48] + 2 * d[1] * d[20] * d[24] * d[48] - 4 * d[5] * d[23] * d[24] * d[48] - 2 * d[3] * d[20] * d[25] * d[48] - 2 * d[2] * d[21] * d[25] * d[48] + 2 * d[5] * d[22] * d[25] * d[48] + 2 * d[4] * d[23] * d[25] * d[48] - 2 * d[4] * d[19] * d[26] * d[48] + 2 * d[5] * d[21] * d[26] * d[48] - 2 * d[1] * d[22] * d[26] * d[48] + 2 * d[3] * d[23] * d[26] * d[48] + d[19] * d[20] * std::pow(d[48], 2) - std::pow(d[23], 2) * std::pow(d[48], 2) + 2 * d[7] * d[18] * d[20] * d[49] - 2 * d[6] * d[20] * d[21] * d[49] + 2 * d[8] * d[21] * d[22] * d[49] - 2 * d[7] * std::pow(d[22], 2) * d[49] - 2 * d[8] * d[18] * d[23] * d[49] + 2 * d[6] * d[22] * d[23] * d[49] - 2 * d[3] * d[20] * d[24] * d[49] - 2 * d[2] * d[21] * d[24] * d[49] + 2 * d[5] * d[22] * d[24] * d[49] + 2 * d[4] * d[23] * d[24] * d[49] + 2 * d[2] * d[18] * d[25] * d[49] + 2 * d[0] * d[20] * d[25] * d[49] - 4 * d[4] * d[22] * d[25] * d[49] - 2 * d[5] * d[18] * d[26] * d[49] + 2 * d[4] * d[21] * d[26] * d[49] + 2 * d[3] * d[22] * d[26] * d[49] - 2 * d[0] * d[23] * d[26] * d[49] - 2 * d[20] * d[21] * d[48] * d[49] + 2 * d[22] * d[23] * d[48] * d[49] + d[18] * d[20] * std::pow(d[49], 2) - std::pow(d[22], 2) * std::pow(d[49], 2) + 2 * d[8] * d[18] * d[19] * d[50] - 2 * d[8] * std::pow(d[21], 2) * d[50] - 2 * d[6] * d[19] * d[22] * d[50] + 2 * d[7] * d[21] * d[22] * d[50] - 2 * d[7] * d[18] * d[23] * d[50] + 2 * d[6] * d[21] * d[23] * d[50] - 2 * d[4] * d[19] * d[24] * d[50] + 2 * d[5] * d[21] * d[24] * d[50] - 2 * d[1] * d[22] * d[24] * d[50] + 2 * d[3] * d[23] * d[24] * d[50] - 2 * d[5] * d[18] * d[25] * d[50] + 2 * d[4] * d[21] * d[25] * d[50] + 2 * d[3] * d[22] * d[25] * d[50] - 2 * d[0] * d[23] * d[25] * d[50] + 2 * d[1] * d[18] * d[26] * d[50] + 2 * d[0] * d[19] * d[26] * d[50] - 4 * d[3] * d[21] * d[26] * d[50] - 2 * d[19] * d[22] * d[48] * d[50] + 2 * d[21] * d[23] * d[48] * d[50] + 2 * d[21] * d[22] * d[49] * d[50] - 2 * d[18] * d[23] * d[49] * d[50] + d[18] * d[19] * std::pow(d[50], 2) - std::pow(d[21], 2) * std::pow(d[50], 2) - d[2] * d[18] * d[19] * d[55] - d[1] * d[18] * d[20] * d[55] - d[0] * d[19] * d[20] * d[55] + 2 * d[3] * d[20] * d[21] * d[55] + d[2] * std::pow(d[21], 2) * d[55] + 2 * d[4] * d[19] * d[22] * d[55] - 2 * d[5] * d[21] * d[22] * d[55] + d[1] * std::pow(d[22], 2) * d[55] + 2 * d[5] * d[18] * d[23] * d[55] - 2 * d[4] * d[21] * d[23] * d[55] - 2 * d[3] * d[22] * d[23] * d[55] + d[0] * std::pow(d[23], 2) * d[55];
    coeffs[58] = 2 * d[6] * d[11] * d[28] * d[48] - 2 * d[8] * d[13] * d[28] * d[48] + 2 * d[2] * d[15] * d[28] * d[48] - 2 * d[4] * d[17] * d[28] * d[48] + 2 * d[6] * d[10] * d[29] * d[48] - 2 * d[7] * d[12] * d[29] * d[48] + 2 * d[1] * d[15] * d[29] * d[48] - 2 * d[3] * d[16] * d[29] * d[48] - 2 * d[7] * d[11] * d[30] * d[48] + 2 * d[8] * d[14] * d[30] * d[48] - 2 * d[2] * d[16] * d[30] * d[48] + 2 * d[5] * d[17] * d[30] * d[48] - 2 * d[8] * d[10] * d[31] * d[48] + 2 * d[7] * d[14] * d[31] * d[48] + 2 * d[5] * d[16] * d[31] * d[48] - 2 * d[1] * d[17] * d[31] * d[48] + 2 * d[8] * d[12] * d[32] * d[48] + 2 * d[7] * d[13] * d[32] * d[48] - 4 * d[6] * d[14] * d[32] * d[48] - 4 * d[5] * d[15] * d[32] * d[48] + 2 * d[4] * d[16] * d[32] * d[48] + 2 * d[3] * d[17] * d[32] * d[48] + 2 * d[2] * d[10] * d[33] * d[48] + 2 * d[1] * d[11] * d[33] * d[48] - 4 * d[5] * d[14] * d[33] * d[48] - 2 * d[3] * d[11] * d[34] * d[48] - 2 * d[2] * d[12] * d[34] * d[48] + 2 * d[5] * d[13] * d[34] * d[48] + 2 * d[4] * d[14] * d[34] * d[48] - 2 * d[4] * d[10] * d[35] * d[48] + 2 * d[5] * d[12] * d[35] * d[48] - 2 * d[1] * d[13] * d[35] * d[48] + 2 * d[3] * d[14] * d[35] * d[48] + d[11] * d[28] * std::pow(d[48], 2) + d[10] * d[29] * std::pow(d[48], 2) - 2 * d[14] * d[32] * std::pow(d[48], 2) + 2 * d[7] * d[11] * d[27] * d[49] - 2 * d[8] * d[14] * d[27] * d[49] + 2 * d[2] * d[16] * d[27] * d[49] - 2 * d[5] * d[17] * d[27] * d[49] + 2 * d[7] * d[9] * d[29] * d[49] - 2 * d[6] * d[12] * d[29] * d[49] - 2 * d[3] * d[15] * d[29] * d[49] + 2 * d[0] * d[16] * d[29] * d[49] - 2 * d[6] * d[11] * d[30] * d[49] + 2 * d[8] * d[13] * d[30] * d[49] - 2 * d[2] * d[15] * d[30] * d[49] + 2 * d[4] * d[17] * d[30] * d[49] + 2 * d[8] * d[12] * d[31] * d[49] - 4 * d[7] * d[13] * d[31] * d[49] + 2 * d[6] * d[14] * d[31] * d[49] + 2 * d[5] * d[15] * d[31] * d[49] - 4 * d[4] * d[16] * d[31] * d[49] + 2 * d[3] * d[17] * d[31] * d[49] - 2 * d[8] * d[9] * d[32] * d[49] + 2 * d[6] * d[13] * d[32] * d[49] + 2 * d[4] * d[15] * d[32] * d[49] - 2 * d[0] * d[17] * d[32] * d[49] - 2 * d[3] * d[11] * d[33] * d[49] - 2 * d[2] * d[12] * d[33] * d[49] + 2 * d[5] * d[13] * d[33] * d[49] + 2 * d[4] * d[14] * d[33] * d[49] + 2 * d[2] * d[9] * d[34] * d[49] + 2 * d[0] * d[11] * d[34] * d[49] - 4 * d[4] * d[13] * d[34] * d[49] - 2 * d[5] * d[9] * d[35] * d[49] + 2 * d[4] * d[12] * d[35] * d[49] + 2 * d[3] * d[13] * d[35] * d[49] - 2 * d[0] * d[14] * d[35] * d[49] - 2 * d[12] * d[29] * d[48] * d[49] - 2 * d[11] * d[30] * d[48] * d[49] + 2 * d[14] * d[31] * d[48] * d[49] + 2 * d[13] * d[32] * d[48] * d[49] + d[11] * d[27] * std::pow(d[49], 2) + d[9] * d[29] * std::pow(d[49], 2) - 2 * d[13] * d[31] * std::pow(d[49], 2) + 2 * d[8] * d[10] * d[27] * d[50] - 2 * d[7] * d[14] * d[27] * d[50] - 2 * d[5] * d[16] * d[27] * d[50] + 2 * d[1] * d[17] * d[27] * d[50] + 2 * d[8] * d[9] * d[28] * d[50] - 2 * d[6] * d[13] * d[28] * d[50] - 2 * d[4] * d[15] * d[28] * d[50] + 2 * d[0] * d[17] * d[28] * d[50] - 4 * d[8] * d[12] * d[30] * d[50] + 2 * d[7] * d[13] * d[30] * d[50] + 2 * d[6] * d[14] * d[30] * d[50] + 2 * d[5] * d[15] * d[30] * d[50] + 2 * d[4] * d[16] * d[30] * d[50] - 4 * d[3] * d[17] * d[30] * d[50] - 2 * d[6] * d[10] * d[31] * d[50] + 2 * d[7] * d[12] * d[31] * d[50] - 2 * d[1] * d[15] * d[31] * d[50] + 2 * d[3] * d[16] * d[31] * d[50] - 2 * d[7] * d[9] * d[32] * d[50] + 2 * d[6] * d[12] * d[32] * d[50] + 2 * d[3] * d[15] * d[32] * d[50] - 2 * d[0] * d[16] * d[32] * d[50] - 2 * d[4] * d[10] * d[33] * d[50] + 2 * d[5] * d[12] * d[33] * d[50] - 2 * d[1] * d[13] * d[33] * d[50] + 2 * d[3] * d[14] * d[33] * d[50] - 2 * d[5] * d[9] * d[34] * d[50] + 2 * d[4] * d[12] * d[34] * d[50] + 2 * d[3] * d[13] * d[34] * d[50] - 2 * d[0] * d[14] * d[34] * d[50] + 2 * d[1] * d[9] * d[35] * d[50] + 2 * d[0] * d[10] * d[35] * d[50] - 4 * d[3] * d[12] * d[35] * d[50] - 2 * d[13] * d[28] * d[48] * d[50] + 2 * d[14] * d[30] * d[48] * d[50] - 2 * d[10] * d[31] * d[48] * d[50] + 2 * d[12] * d[32] * d[48] * d[50] - 2 * d[14] * d[27] * d[49] * d[50] + 2 * d[13] * d[30] * d[49] * d[50] + 2 * d[12] * d[31] * d[49] * d[50] - 2 * d[9] * d[32] * d[49] * d[50] + d[10] * d[27] * std::pow(d[50], 2) + d[9] * d[28] * std::pow(d[50], 2) - 2 * d[12] * d[30] * std::pow(d[50], 2) - d[2] * d[10] * d[27] * d[55] - d[1] * d[11] * d[27] * d[55] + 2 * d[5] * d[14] * d[27] * d[55] - d[2] * d[9] * d[28] * d[55] - d[0] * d[11] * d[28] * d[55] + 2 * d[4] * d[13] * d[28] * d[55] - d[1] * d[9] * d[29] * d[55] - d[0] * d[10] * d[29] * d[55] + 2 * d[3] * d[12] * d[29] * d[55] + 2 * d[3] * d[11] * d[30] * d[55] + 2 * d[2] * d[12] * d[30] * d[55] - 2 * d[5] * d[13] * d[30] * d[55] - 2 * d[4] * d[14] * d[30] * d[55] + 2 * d[4] * d[10] * d[31] * d[55] - 2 * d[5] * d[12] * d[31] * d[55] + 2 * d[1] * d[13] * d[31] * d[55] - 2 * d[3] * d[14] * d[31] * d[55] + 2 * d[5] * d[9] * d[32] * d[55] - 2 * d[4] * d[12] * d[32] * d[55] - 2 * d[3] * d[13] * d[32] * d[55] + 2 * d[0] * d[14] * d[32] * d[55];
    coeffs[59] = 2 * d[6] * d[20] * d[28] * d[48] - 2 * d[8] * d[22] * d[28] * d[48] + 2 * d[2] * d[24] * d[28] * d[48] - 2 * d[4] * d[26] * d[28] * d[48] + 2 * d[6] * d[19] * d[29] * d[48] - 2 * d[7] * d[21] * d[29] * d[48] + 2 * d[1] * d[24] * d[29] * d[48] - 2 * d[3] * d[25] * d[29] * d[48] - 2 * d[7] * d[20] * d[30] * d[48] + 2 * d[8] * d[23] * d[30] * d[48] - 2 * d[2] * d[25] * d[30] * d[48] + 2 * d[5] * d[26] * d[30] * d[48] - 2 * d[8] * d[19] * d[31] * d[48] + 2 * d[7] * d[23] * d[31] * d[48] + 2 * d[5] * d[25] * d[31] * d[48] - 2 * d[1] * d[26] * d[31] * d[48] + 2 * d[8] * d[21] * d[32] * d[48] + 2 * d[7] * d[22] * d[32] * d[48] - 4 * d[6] * d[23] * d[32] * d[48] - 4 * d[5] * d[24] * d[32] * d[48] + 2 * d[4] * d[25] * d[32] * d[48] + 2 * d[3] * d[26] * d[32] * d[48] + 2 * d[2] * d[19] * d[33] * d[48] + 2 * d[1] * d[20] * d[33] * d[48] - 4 * d[5] * d[23] * d[33] * d[48] - 2 * d[3] * d[20] * d[34] * d[48] - 2 * d[2] * d[21] * d[34] * d[48] + 2 * d[5] * d[22] * d[34] * d[48] + 2 * d[4] * d[23] * d[34] * d[48] - 2 * d[4] * d[19] * d[35] * d[48] + 2 * d[5] * d[21] * d[35] * d[48] - 2 * d[1] * d[22] * d[35] * d[48] + 2 * d[3] * d[23] * d[35] * d[48] + d[20] * d[28] * std::pow(d[48], 2) + d[19] * d[29] * std::pow(d[48], 2) - 2 * d[23] * d[32] * std::pow(d[48], 2) + 2 * d[7] * d[20] * d[27] * d[49] - 2 * d[8] * d[23] * d[27] * d[49] + 2 * d[2] * d[25] * d[27] * d[49] - 2 * d[5] * d[26] * d[27] * d[49] + 2 * d[7] * d[18] * d[29] * d[49] - 2 * d[6] * d[21] * d[29] * d[49] - 2 * d[3] * d[24] * d[29] * d[49] + 2 * d[0] * d[25] * d[29] * d[49] - 2 * d[6] * d[20] * d[30] * d[49] + 2 * d[8] * d[22] * d[30] * d[49] - 2 * d[2] * d[24] * d[30] * d[49] + 2 * d[4] * d[26] * d[30] * d[49] + 2 * d[8] * d[21] * d[31] * d[49] - 4 * d[7] * d[22] * d[31] * d[49] + 2 * d[6] * d[23] * d[31] * d[49] + 2 * d[5] * d[24] * d[31] * d[49] - 4 * d[4] * d[25] * d[31] * d[49] + 2 * d[3] * d[26] * d[31] * d[49] - 2 * d[8] * d[18] * d[32] * d[49] + 2 * d[6] * d[22] * d[32] * d[49] + 2 * d[4] * d[24] * d[32] * d[49] - 2 * d[0] * d[26] * d[32] * d[49] - 2 * d[3] * d[20] * d[33] * d[49] - 2 * d[2] * d[21] * d[33] * d[49] + 2 * d[5] * d[22] * d[33] * d[49] + 2 * d[4] * d[23] * d[33] * d[49] + 2 * d[2] * d[18] * d[34] * d[49] + 2 * d[0] * d[20] * d[34] * d[49] - 4 * d[4] * d[22] * d[34] * d[49] - 2 * d[5] * d[18] * d[35] * d[49] + 2 * d[4] * d[21] * d[35] * d[49] + 2 * d[3] * d[22] * d[35] * d[49] - 2 * d[0] * d[23] * d[35] * d[49] - 2 * d[21] * d[29] * d[48] * d[49] - 2 * d[20] * d[30] * d[48] * d[49] + 2 * d[23] * d[31] * d[48] * d[49] + 2 * d[22] * d[32] * d[48] * d[49] + d[20] * d[27] * std::pow(d[49], 2) + d[18] * d[29] * std::pow(d[49], 2) - 2 * d[22] * d[31] * std::pow(d[49], 2) + 2 * d[8] * d[19] * d[27] * d[50] - 2 * d[7] * d[23] * d[27] * d[50] - 2 * d[5] * d[25] * d[27] * d[50] + 2 * d[1] * d[26] * d[27] * d[50] + 2 * d[8] * d[18] * d[28] * d[50] - 2 * d[6] * d[22] * d[28] * d[50] - 2 * d[4] * d[24] * d[28] * d[50] + 2 * d[0] * d[26] * d[28] * d[50] - 4 * d[8] * d[21] * d[30] * d[50] + 2 * d[7] * d[22] * d[30] * d[50] + 2 * d[6] * d[23] * d[30] * d[50] + 2 * d[5] * d[24] * d[30] * d[50] + 2 * d[4] * d[25] * d[30] * d[50] - 4 * d[3] * d[26] * d[30] * d[50] - 2 * d[6] * d[19] * d[31] * d[50] + 2 * d[7] * d[21] * d[31] * d[50] - 2 * d[1] * d[24] * d[31] * d[50] + 2 * d[3] * d[25] * d[31] * d[50] - 2 * d[7] * d[18] * d[32] * d[50] + 2 * d[6] * d[21] * d[32] * d[50] + 2 * d[3] * d[24] * d[32] * d[50] - 2 * d[0] * d[25] * d[32] * d[50] - 2 * d[4] * d[19] * d[33] * d[50] + 2 * d[5] * d[21] * d[33] * d[50] - 2 * d[1] * d[22] * d[33] * d[50] + 2 * d[3] * d[23] * d[33] * d[50] - 2 * d[5] * d[18] * d[34] * d[50] + 2 * d[4] * d[21] * d[34] * d[50] + 2 * d[3] * d[22] * d[34] * d[50] - 2 * d[0] * d[23] * d[34] * d[50] + 2 * d[1] * d[18] * d[35] * d[50] + 2 * d[0] * d[19] * d[35] * d[50] - 4 * d[3] * d[21] * d[35] * d[50] - 2 * d[22] * d[28] * d[48] * d[50] + 2 * d[23] * d[30] * d[48] * d[50] - 2 * d[19] * d[31] * d[48] * d[50] + 2 * d[21] * d[32] * d[48] * d[50] - 2 * d[23] * d[27] * d[49] * d[50] + 2 * d[22] * d[30] * d[49] * d[50] + 2 * d[21] * d[31] * d[49] * d[50] - 2 * d[18] * d[32] * d[49] * d[50] + d[19] * d[27] * std::pow(d[50], 2) + d[18] * d[28] * std::pow(d[50], 2) - 2 * d[21] * d[30] * std::pow(d[50], 2) - d[2] * d[19] * d[27] * d[55] - d[1] * d[20] * d[27] * d[55] + 2 * d[5] * d[23] * d[27] * d[55] - d[2] * d[18] * d[28] * d[55] - d[0] * d[20] * d[28] * d[55] + 2 * d[4] * d[22] * d[28] * d[55] - d[1] * d[18] * d[29] * d[55] - d[0] * d[19] * d[29] * d[55] + 2 * d[3] * d[21] * d[29] * d[55] + 2 * d[3] * d[20] * d[30] * d[55] + 2 * d[2] * d[21] * d[30] * d[55] - 2 * d[5] * d[22] * d[30] * d[55] - 2 * d[4] * d[23] * d[30] * d[55] + 2 * d[4] * d[19] * d[31] * d[55] - 2 * d[5] * d[21] * d[31] * d[55] + 2 * d[1] * d[22] * d[31] * d[55] - 2 * d[3] * d[23] * d[31] * d[55] + 2 * d[5] * d[18] * d[32] * d[55] - 2 * d[4] * d[21] * d[32] * d[55] - 2 * d[3] * d[22] * d[32] * d[55] + 2 * d[0] * d[23] * d[32] * d[55];
    coeffs[60] = 2 * d[6] * d[28] * d[29] * d[48] - 2 * d[7] * d[29] * d[30] * d[48] - 2 * d[8] * d[28] * d[31] * d[48] + 2 * d[8] * d[30] * d[32] * d[48] + 2 * d[7] * d[31] * d[32] * d[48] - 2 * d[6] * std::pow(d[32], 2) * d[48] + 2 * d[2] * d[28] * d[33] * d[48] + 2 * d[1] * d[29] * d[33] * d[48] - 4 * d[5] * d[32] * d[33] * d[48] - 2 * d[3] * d[29] * d[34] * d[48] - 2 * d[2] * d[30] * d[34] * d[48] + 2 * d[5] * d[31] * d[34] * d[48] + 2 * d[4] * d[32] * d[34] * d[48] - 2 * d[4] * d[28] * d[35] * d[48] + 2 * d[5] * d[30] * d[35] * d[48] - 2 * d[1] * d[31] * d[35] * d[48] + 2 * d[3] * d[32] * d[35] * d[48] + d[28] * d[29] * std::pow(d[48], 2) - std::pow(d[32], 2) * std::pow(d[48], 2) + 2 * d[7] * d[27] * d[29] * d[49] - 2 * d[6] * d[29] * d[30] * d[49] + 2 * d[8] * d[30] * d[31] * d[49] - 2 * d[7] * std::pow(d[31], 2) * d[49] - 2 * d[8] * d[27] * d[32] * d[49] + 2 * d[6] * d[31] * d[32] * d[49] - 2 * d[3] * d[29] * d[33] * d[49] - 2 * d[2] * d[30] * d[33] * d[49] + 2 * d[5] * d[31] * d[33] * d[49] + 2 * d[4] * d[32] * d[33] * d[49] + 2 * d[2] * d[27] * d[34] * d[49] + 2 * d[0] * d[29] * d[34] * d[49] - 4 * d[4] * d[31] * d[34] * d[49] - 2 * d[5] * d[27] * d[35] * d[49] + 2 * d[4] * d[30] * d[35] * d[49] + 2 * d[3] * d[31] * d[35] * d[49] - 2 * d[0] * d[32] * d[35] * d[49] - 2 * d[29] * d[30] * d[48] * d[49] + 2 * d[31] * d[32] * d[48] * d[49] + d[27] * d[29] * std::pow(d[49], 2) - std::pow(d[31], 2) * std::pow(d[49], 2) + 2 * d[8] * d[27] * d[28] * d[50] - 2 * d[8] * std::pow(d[30], 2) * d[50] - 2 * d[6] * d[28] * d[31] * d[50] + 2 * d[7] * d[30] * d[31] * d[50] - 2 * d[7] * d[27] * d[32] * d[50] + 2 * d[6] * d[30] * d[32] * d[50] - 2 * d[4] * d[28] * d[33] * d[50] + 2 * d[5] * d[30] * d[33] * d[50] - 2 * d[1] * d[31] * d[33] * d[50] + 2 * d[3] * d[32] * d[33] * d[50] - 2 * d[5] * d[27] * d[34] * d[50] + 2 * d[4] * d[30] * d[34] * d[50] + 2 * d[3] * d[31] * d[34] * d[50] - 2 * d[0] * d[32] * d[34] * d[50] + 2 * d[1] * d[27] * d[35] * d[50] + 2 * d[0] * d[28] * d[35] * d[50] - 4 * d[3] * d[30] * d[35] * d[50] - 2 * d[28] * d[31] * d[48] * d[50] + 2 * d[30] * d[32] * d[48] * d[50] + 2 * d[30] * d[31] * d[49] * d[50] - 2 * d[27] * d[32] * d[49] * d[50] + d[27] * d[28] * std::pow(d[50], 2) - std::pow(d[30], 2) * std::pow(d[50], 2) - d[2] * d[27] * d[28] * d[55] - d[1] * d[27] * d[29] * d[55] - d[0] * d[28] * d[29] * d[55] + 2 * d[3] * d[29] * d[30] * d[55] + d[2] * std::pow(d[30], 2) * d[55] + 2 * d[4] * d[28] * d[31] * d[55] - 2 * d[5] * d[30] * d[31] * d[55] + d[1] * std::pow(d[31], 2) * d[55] + 2 * d[5] * d[27] * d[32] * d[55] - 2 * d[4] * d[30] * d[32] * d[55] - 2 * d[3] * d[31] * d[32] * d[55] + d[0] * std::pow(d[32], 2) * d[55];
    coeffs[61] = 2 * d[6] * d[11] * d[37] * d[48] - 2 * d[8] * d[13] * d[37] * d[48] + 2 * d[2] * d[15] * d[37] * d[48] - 2 * d[4] * d[17] * d[37] * d[48] + 2 * d[6] * d[10] * d[38] * d[48] - 2 * d[7] * d[12] * d[38] * d[48] + 2 * d[1] * d[15] * d[38] * d[48] - 2 * d[3] * d[16] * d[38] * d[48] - 2 * d[7] * d[11] * d[39] * d[48] + 2 * d[8] * d[14] * d[39] * d[48] - 2 * d[2] * d[16] * d[39] * d[48] + 2 * d[5] * d[17] * d[39] * d[48] - 2 * d[8] * d[10] * d[40] * d[48] + 2 * d[7] * d[14] * d[40] * d[48] + 2 * d[5] * d[16] * d[40] * d[48] - 2 * d[1] * d[17] * d[40] * d[48] + 2 * d[8] * d[12] * d[41] * d[48] + 2 * d[7] * d[13] * d[41] * d[48] - 4 * d[6] * d[14] * d[41] * d[48] - 4 * d[5] * d[15] * d[41] * d[48] + 2 * d[4] * d[16] * d[41] * d[48] + 2 * d[3] * d[17] * d[41] * d[48] + 2 * d[2] * d[10] * d[42] * d[48] + 2 * d[1] * d[11] * d[42] * d[48] - 4 * d[5] * d[14] * d[42] * d[48] - 2 * d[3] * d[11] * d[43] * d[48] - 2 * d[2] * d[12] * d[43] * d[48] + 2 * d[5] * d[13] * d[43] * d[48] + 2 * d[4] * d[14] * d[43] * d[48] - 2 * d[4] * d[10] * d[44] * d[48] + 2 * d[5] * d[12] * d[44] * d[48] - 2 * d[1] * d[13] * d[44] * d[48] + 2 * d[3] * d[14] * d[44] * d[48] + d[11] * d[37] * std::pow(d[48], 2) + d[10] * d[38] * std::pow(d[48], 2) - 2 * d[14] * d[41] * std::pow(d[48], 2) + 2 * d[7] * d[11] * d[36] * d[49] - 2 * d[8] * d[14] * d[36] * d[49] + 2 * d[2] * d[16] * d[36] * d[49] - 2 * d[5] * d[17] * d[36] * d[49] + 2 * d[7] * d[9] * d[38] * d[49] - 2 * d[6] * d[12] * d[38] * d[49] - 2 * d[3] * d[15] * d[38] * d[49] + 2 * d[0] * d[16] * d[38] * d[49] - 2 * d[6] * d[11] * d[39] * d[49] + 2 * d[8] * d[13] * d[39] * d[49] - 2 * d[2] * d[15] * d[39] * d[49] + 2 * d[4] * d[17] * d[39] * d[49] + 2 * d[8] * d[12] * d[40] * d[49] - 4 * d[7] * d[13] * d[40] * d[49] + 2 * d[6] * d[14] * d[40] * d[49] + 2 * d[5] * d[15] * d[40] * d[49] - 4 * d[4] * d[16] * d[40] * d[49] + 2 * d[3] * d[17] * d[40] * d[49] - 2 * d[8] * d[9] * d[41] * d[49] + 2 * d[6] * d[13] * d[41] * d[49] + 2 * d[4] * d[15] * d[41] * d[49] - 2 * d[0] * d[17] * d[41] * d[49] - 2 * d[3] * d[11] * d[42] * d[49] - 2 * d[2] * d[12] * d[42] * d[49] + 2 * d[5] * d[13] * d[42] * d[49] + 2 * d[4] * d[14] * d[42] * d[49] + 2 * d[2] * d[9] * d[43] * d[49] + 2 * d[0] * d[11] * d[43] * d[49] - 4 * d[4] * d[13] * d[43] * d[49] - 2 * d[5] * d[9] * d[44] * d[49] + 2 * d[4] * d[12] * d[44] * d[49] + 2 * d[3] * d[13] * d[44] * d[49] - 2 * d[0] * d[14] * d[44] * d[49] - 2 * d[12] * d[38] * d[48] * d[49] - 2 * d[11] * d[39] * d[48] * d[49] + 2 * d[14] * d[40] * d[48] * d[49] + 2 * d[13] * d[41] * d[48] * d[49] + d[11] * d[36] * std::pow(d[49], 2) + d[9] * d[38] * std::pow(d[49], 2) - 2 * d[13] * d[40] * std::pow(d[49], 2) + 2 * d[8] * d[10] * d[36] * d[50] - 2 * d[7] * d[14] * d[36] * d[50] - 2 * d[5] * d[16] * d[36] * d[50] + 2 * d[1] * d[17] * d[36] * d[50] + 2 * d[8] * d[9] * d[37] * d[50] - 2 * d[6] * d[13] * d[37] * d[50] - 2 * d[4] * d[15] * d[37] * d[50] + 2 * d[0] * d[17] * d[37] * d[50] - 4 * d[8] * d[12] * d[39] * d[50] + 2 * d[7] * d[13] * d[39] * d[50] + 2 * d[6] * d[14] * d[39] * d[50] + 2 * d[5] * d[15] * d[39] * d[50] + 2 * d[4] * d[16] * d[39] * d[50] - 4 * d[3] * d[17] * d[39] * d[50] - 2 * d[6] * d[10] * d[40] * d[50] + 2 * d[7] * d[12] * d[40] * d[50] - 2 * d[1] * d[15] * d[40] * d[50] + 2 * d[3] * d[16] * d[40] * d[50] - 2 * d[7] * d[9] * d[41] * d[50] + 2 * d[6] * d[12] * d[41] * d[50] + 2 * d[3] * d[15] * d[41] * d[50] - 2 * d[0] * d[16] * d[41] * d[50] - 2 * d[4] * d[10] * d[42] * d[50] + 2 * d[5] * d[12] * d[42] * d[50] - 2 * d[1] * d[13] * d[42] * d[50] + 2 * d[3] * d[14] * d[42] * d[50] - 2 * d[5] * d[9] * d[43] * d[50] + 2 * d[4] * d[12] * d[43] * d[50] + 2 * d[3] * d[13] * d[43] * d[50] - 2 * d[0] * d[14] * d[43] * d[50] + 2 * d[1] * d[9] * d[44] * d[50] + 2 * d[0] * d[10] * d[44] * d[50] - 4 * d[3] * d[12] * d[44] * d[50] - 2 * d[13] * d[37] * d[48] * d[50] + 2 * d[14] * d[39] * d[48] * d[50] - 2 * d[10] * d[40] * d[48] * d[50] + 2 * d[12] * d[41] * d[48] * d[50] - 2 * d[14] * d[36] * d[49] * d[50] + 2 * d[13] * d[39] * d[49] * d[50] + 2 * d[12] * d[40] * d[49] * d[50] - 2 * d[9] * d[41] * d[49] * d[50] + d[10] * d[36] * std::pow(d[50], 2) + d[9] * d[37] * std::pow(d[50], 2) - 2 * d[12] * d[39] * std::pow(d[50], 2) - d[2] * d[10] * d[36] * d[55] - d[1] * d[11] * d[36] * d[55] + 2 * d[5] * d[14] * d[36] * d[55] - d[2] * d[9] * d[37] * d[55] - d[0] * d[11] * d[37] * d[55] + 2 * d[4] * d[13] * d[37] * d[55] - d[1] * d[9] * d[38] * d[55] - d[0] * d[10] * d[38] * d[55] + 2 * d[3] * d[12] * d[38] * d[55] + 2 * d[3] * d[11] * d[39] * d[55] + 2 * d[2] * d[12] * d[39] * d[55] - 2 * d[5] * d[13] * d[39] * d[55] - 2 * d[4] * d[14] * d[39] * d[55] + 2 * d[4] * d[10] * d[40] * d[55] - 2 * d[5] * d[12] * d[40] * d[55] + 2 * d[1] * d[13] * d[40] * d[55] - 2 * d[3] * d[14] * d[40] * d[55] + 2 * d[5] * d[9] * d[41] * d[55] - 2 * d[4] * d[12] * d[41] * d[55] - 2 * d[3] * d[13] * d[41] * d[55] + 2 * d[0] * d[14] * d[41] * d[55];
    coeffs[62] = 2 * d[6] * d[20] * d[37] * d[48] - 2 * d[8] * d[22] * d[37] * d[48] + 2 * d[2] * d[24] * d[37] * d[48] - 2 * d[4] * d[26] * d[37] * d[48] + 2 * d[6] * d[19] * d[38] * d[48] - 2 * d[7] * d[21] * d[38] * d[48] + 2 * d[1] * d[24] * d[38] * d[48] - 2 * d[3] * d[25] * d[38] * d[48] - 2 * d[7] * d[20] * d[39] * d[48] + 2 * d[8] * d[23] * d[39] * d[48] - 2 * d[2] * d[25] * d[39] * d[48] + 2 * d[5] * d[26] * d[39] * d[48] - 2 * d[8] * d[19] * d[40] * d[48] + 2 * d[7] * d[23] * d[40] * d[48] + 2 * d[5] * d[25] * d[40] * d[48] - 2 * d[1] * d[26] * d[40] * d[48] + 2 * d[8] * d[21] * d[41] * d[48] + 2 * d[7] * d[22] * d[41] * d[48] - 4 * d[6] * d[23] * d[41] * d[48] - 4 * d[5] * d[24] * d[41] * d[48] + 2 * d[4] * d[25] * d[41] * d[48] + 2 * d[3] * d[26] * d[41] * d[48] + 2 * d[2] * d[19] * d[42] * d[48] + 2 * d[1] * d[20] * d[42] * d[48] - 4 * d[5] * d[23] * d[42] * d[48] - 2 * d[3] * d[20] * d[43] * d[48] - 2 * d[2] * d[21] * d[43] * d[48] + 2 * d[5] * d[22] * d[43] * d[48] + 2 * d[4] * d[23] * d[43] * d[48] - 2 * d[4] * d[19] * d[44] * d[48] + 2 * d[5] * d[21] * d[44] * d[48] - 2 * d[1] * d[22] * d[44] * d[48] + 2 * d[3] * d[23] * d[44] * d[48] + d[20] * d[37] * std::pow(d[48], 2) + d[19] * d[38] * std::pow(d[48], 2) - 2 * d[23] * d[41] * std::pow(d[48], 2) + 2 * d[7] * d[20] * d[36] * d[49] - 2 * d[8] * d[23] * d[36] * d[49] + 2 * d[2] * d[25] * d[36] * d[49] - 2 * d[5] * d[26] * d[36] * d[49] + 2 * d[7] * d[18] * d[38] * d[49] - 2 * d[6] * d[21] * d[38] * d[49] - 2 * d[3] * d[24] * d[38] * d[49] + 2 * d[0] * d[25] * d[38] * d[49] - 2 * d[6] * d[20] * d[39] * d[49] + 2 * d[8] * d[22] * d[39] * d[49] - 2 * d[2] * d[24] * d[39] * d[49] + 2 * d[4] * d[26] * d[39] * d[49] + 2 * d[8] * d[21] * d[40] * d[49] - 4 * d[7] * d[22] * d[40] * d[49] + 2 * d[6] * d[23] * d[40] * d[49] + 2 * d[5] * d[24] * d[40] * d[49] - 4 * d[4] * d[25] * d[40] * d[49] + 2 * d[3] * d[26] * d[40] * d[49] - 2 * d[8] * d[18] * d[41] * d[49] + 2 * d[6] * d[22] * d[41] * d[49] + 2 * d[4] * d[24] * d[41] * d[49] - 2 * d[0] * d[26] * d[41] * d[49] - 2 * d[3] * d[20] * d[42] * d[49] - 2 * d[2] * d[21] * d[42] * d[49] + 2 * d[5] * d[22] * d[42] * d[49] + 2 * d[4] * d[23] * d[42] * d[49] + 2 * d[2] * d[18] * d[43] * d[49] + 2 * d[0] * d[20] * d[43] * d[49] - 4 * d[4] * d[22] * d[43] * d[49] - 2 * d[5] * d[18] * d[44] * d[49] + 2 * d[4] * d[21] * d[44] * d[49] + 2 * d[3] * d[22] * d[44] * d[49] - 2 * d[0] * d[23] * d[44] * d[49] - 2 * d[21] * d[38] * d[48] * d[49] - 2 * d[20] * d[39] * d[48] * d[49] + 2 * d[23] * d[40] * d[48] * d[49] + 2 * d[22] * d[41] * d[48] * d[49] + d[20] * d[36] * std::pow(d[49], 2) + d[18] * d[38] * std::pow(d[49], 2) - 2 * d[22] * d[40] * std::pow(d[49], 2) + 2 * d[8] * d[19] * d[36] * d[50] - 2 * d[7] * d[23] * d[36] * d[50] - 2 * d[5] * d[25] * d[36] * d[50] + 2 * d[1] * d[26] * d[36] * d[50] + 2 * d[8] * d[18] * d[37] * d[50] - 2 * d[6] * d[22] * d[37] * d[50] - 2 * d[4] * d[24] * d[37] * d[50] + 2 * d[0] * d[26] * d[37] * d[50] - 4 * d[8] * d[21] * d[39] * d[50] + 2 * d[7] * d[22] * d[39] * d[50] + 2 * d[6] * d[23] * d[39] * d[50] + 2 * d[5] * d[24] * d[39] * d[50] + 2 * d[4] * d[25] * d[39] * d[50] - 4 * d[3] * d[26] * d[39] * d[50] - 2 * d[6] * d[19] * d[40] * d[50] + 2 * d[7] * d[21] * d[40] * d[50] - 2 * d[1] * d[24] * d[40] * d[50] + 2 * d[3] * d[25] * d[40] * d[50] - 2 * d[7] * d[18] * d[41] * d[50] + 2 * d[6] * d[21] * d[41] * d[50] + 2 * d[3] * d[24] * d[41] * d[50] - 2 * d[0] * d[25] * d[41] * d[50] - 2 * d[4] * d[19] * d[42] * d[50] + 2 * d[5] * d[21] * d[42] * d[50] - 2 * d[1] * d[22] * d[42] * d[50] + 2 * d[3] * d[23] * d[42] * d[50] - 2 * d[5] * d[18] * d[43] * d[50] + 2 * d[4] * d[21] * d[43] * d[50] + 2 * d[3] * d[22] * d[43] * d[50] - 2 * d[0] * d[23] * d[43] * d[50] + 2 * d[1] * d[18] * d[44] * d[50] + 2 * d[0] * d[19] * d[44] * d[50] - 4 * d[3] * d[21] * d[44] * d[50] - 2 * d[22] * d[37] * d[48] * d[50] + 2 * d[23] * d[39] * d[48] * d[50] - 2 * d[19] * d[40] * d[48] * d[50] + 2 * d[21] * d[41] * d[48] * d[50] - 2 * d[23] * d[36] * d[49] * d[50] + 2 * d[22] * d[39] * d[49] * d[50] + 2 * d[21] * d[40] * d[49] * d[50] - 2 * d[18] * d[41] * d[49] * d[50] + d[19] * d[36] * std::pow(d[50], 2) + d[18] * d[37] * std::pow(d[50], 2) - 2 * d[21] * d[39] * std::pow(d[50], 2) - d[2] * d[19] * d[36] * d[55] - d[1] * d[20] * d[36] * d[55] + 2 * d[5] * d[23] * d[36] * d[55] - d[2] * d[18] * d[37] * d[55] - d[0] * d[20] * d[37] * d[55] + 2 * d[4] * d[22] * d[37] * d[55] - d[1] * d[18] * d[38] * d[55] - d[0] * d[19] * d[38] * d[55] + 2 * d[3] * d[21] * d[38] * d[55] + 2 * d[3] * d[20] * d[39] * d[55] + 2 * d[2] * d[21] * d[39] * d[55] - 2 * d[5] * d[22] * d[39] * d[55] - 2 * d[4] * d[23] * d[39] * d[55] + 2 * d[4] * d[19] * d[40] * d[55] - 2 * d[5] * d[21] * d[40] * d[55] + 2 * d[1] * d[22] * d[40] * d[55] - 2 * d[3] * d[23] * d[40] * d[55] + 2 * d[5] * d[18] * d[41] * d[55] - 2 * d[4] * d[21] * d[41] * d[55] - 2 * d[3] * d[22] * d[41] * d[55] + 2 * d[0] * d[23] * d[41] * d[55];
    coeffs[63] = 2 * d[6] * d[29] * d[37] * d[48] - 2 * d[8] * d[31] * d[37] * d[48] + 2 * d[2] * d[33] * d[37] * d[48] - 2 * d[4] * d[35] * d[37] * d[48] + 2 * d[6] * d[28] * d[38] * d[48] - 2 * d[7] * d[30] * d[38] * d[48] + 2 * d[1] * d[33] * d[38] * d[48] - 2 * d[3] * d[34] * d[38] * d[48] - 2 * d[7] * d[29] * d[39] * d[48] + 2 * d[8] * d[32] * d[39] * d[48] - 2 * d[2] * d[34] * d[39] * d[48] + 2 * d[5] * d[35] * d[39] * d[48] - 2 * d[8] * d[28] * d[40] * d[48] + 2 * d[7] * d[32] * d[40] * d[48] + 2 * d[5] * d[34] * d[40] * d[48] - 2 * d[1] * d[35] * d[40] * d[48] + 2 * d[8] * d[30] * d[41] * d[48] + 2 * d[7] * d[31] * d[41] * d[48] - 4 * d[6] * d[32] * d[41] * d[48] - 4 * d[5] * d[33] * d[41] * d[48] + 2 * d[4] * d[34] * d[41] * d[48] + 2 * d[3] * d[35] * d[41] * d[48] + 2 * d[2] * d[28] * d[42] * d[48] + 2 * d[1] * d[29] * d[42] * d[48] - 4 * d[5] * d[32] * d[42] * d[48] - 2 * d[3] * d[29] * d[43] * d[48] - 2 * d[2] * d[30] * d[43] * d[48] + 2 * d[5] * d[31] * d[43] * d[48] + 2 * d[4] * d[32] * d[43] * d[48] - 2 * d[4] * d[28] * d[44] * d[48] + 2 * d[5] * d[30] * d[44] * d[48] - 2 * d[1] * d[31] * d[44] * d[48] + 2 * d[3] * d[32] * d[44] * d[48] + d[29] * d[37] * std::pow(d[48], 2) + d[28] * d[38] * std::pow(d[48], 2) - 2 * d[32] * d[41] * std::pow(d[48], 2) + 2 * d[7] * d[29] * d[36] * d[49] - 2 * d[8] * d[32] * d[36] * d[49] + 2 * d[2] * d[34] * d[36] * d[49] - 2 * d[5] * d[35] * d[36] * d[49] + 2 * d[7] * d[27] * d[38] * d[49] - 2 * d[6] * d[30] * d[38] * d[49] - 2 * d[3] * d[33] * d[38] * d[49] + 2 * d[0] * d[34] * d[38] * d[49] - 2 * d[6] * d[29] * d[39] * d[49] + 2 * d[8] * d[31] * d[39] * d[49] - 2 * d[2] * d[33] * d[39] * d[49] + 2 * d[4] * d[35] * d[39] * d[49] + 2 * d[8] * d[30] * d[40] * d[49] - 4 * d[7] * d[31] * d[40] * d[49] + 2 * d[6] * d[32] * d[40] * d[49] + 2 * d[5] * d[33] * d[40] * d[49] - 4 * d[4] * d[34] * d[40] * d[49] + 2 * d[3] * d[35] * d[40] * d[49] - 2 * d[8] * d[27] * d[41] * d[49] + 2 * d[6] * d[31] * d[41] * d[49] + 2 * d[4] * d[33] * d[41] * d[49] - 2 * d[0] * d[35] * d[41] * d[49] - 2 * d[3] * d[29] * d[42] * d[49] - 2 * d[2] * d[30] * d[42] * d[49] + 2 * d[5] * d[31] * d[42] * d[49] + 2 * d[4] * d[32] * d[42] * d[49] + 2 * d[2] * d[27] * d[43] * d[49] + 2 * d[0] * d[29] * d[43] * d[49] - 4 * d[4] * d[31] * d[43] * d[49] - 2 * d[5] * d[27] * d[44] * d[49] + 2 * d[4] * d[30] * d[44] * d[49] + 2 * d[3] * d[31] * d[44] * d[49] - 2 * d[0] * d[32] * d[44] * d[49] - 2 * d[30] * d[38] * d[48] * d[49] - 2 * d[29] * d[39] * d[48] * d[49] + 2 * d[32] * d[40] * d[48] * d[49] + 2 * d[31] * d[41] * d[48] * d[49] + d[29] * d[36] * std::pow(d[49], 2) + d[27] * d[38] * std::pow(d[49], 2) - 2 * d[31] * d[40] * std::pow(d[49], 2) + 2 * d[8] * d[28] * d[36] * d[50] - 2 * d[7] * d[32] * d[36] * d[50] - 2 * d[5] * d[34] * d[36] * d[50] + 2 * d[1] * d[35] * d[36] * d[50] + 2 * d[8] * d[27] * d[37] * d[50] - 2 * d[6] * d[31] * d[37] * d[50] - 2 * d[4] * d[33] * d[37] * d[50] + 2 * d[0] * d[35] * d[37] * d[50] - 4 * d[8] * d[30] * d[39] * d[50] + 2 * d[7] * d[31] * d[39] * d[50] + 2 * d[6] * d[32] * d[39] * d[50] + 2 * d[5] * d[33] * d[39] * d[50] + 2 * d[4] * d[34] * d[39] * d[50] - 4 * d[3] * d[35] * d[39] * d[50] - 2 * d[6] * d[28] * d[40] * d[50] + 2 * d[7] * d[30] * d[40] * d[50] - 2 * d[1] * d[33] * d[40] * d[50] + 2 * d[3] * d[34] * d[40] * d[50] - 2 * d[7] * d[27] * d[41] * d[50] + 2 * d[6] * d[30] * d[41] * d[50] + 2 * d[3] * d[33] * d[41] * d[50] - 2 * d[0] * d[34] * d[41] * d[50] - 2 * d[4] * d[28] * d[42] * d[50] + 2 * d[5] * d[30] * d[42] * d[50] - 2 * d[1] * d[31] * d[42] * d[50] + 2 * d[3] * d[32] * d[42] * d[50] - 2 * d[5] * d[27] * d[43] * d[50] + 2 * d[4] * d[30] * d[43] * d[50] + 2 * d[3] * d[31] * d[43] * d[50] - 2 * d[0] * d[32] * d[43] * d[50] + 2 * d[1] * d[27] * d[44] * d[50] + 2 * d[0] * d[28] * d[44] * d[50] - 4 * d[3] * d[30] * d[44] * d[50] - 2 * d[31] * d[37] * d[48] * d[50] + 2 * d[32] * d[39] * d[48] * d[50] - 2 * d[28] * d[40] * d[48] * d[50] + 2 * d[30] * d[41] * d[48] * d[50] - 2 * d[32] * d[36] * d[49] * d[50] + 2 * d[31] * d[39] * d[49] * d[50] + 2 * d[30] * d[40] * d[49] * d[50] - 2 * d[27] * d[41] * d[49] * d[50] + d[28] * d[36] * std::pow(d[50], 2) + d[27] * d[37] * std::pow(d[50], 2) - 2 * d[30] * d[39] * std::pow(d[50], 2) - d[2] * d[28] * d[36] * d[55] - d[1] * d[29] * d[36] * d[55] + 2 * d[5] * d[32] * d[36] * d[55] - d[2] * d[27] * d[37] * d[55] - d[0] * d[29] * d[37] * d[55] + 2 * d[4] * d[31] * d[37] * d[55] - d[1] * d[27] * d[38] * d[55] - d[0] * d[28] * d[38] * d[55] + 2 * d[3] * d[30] * d[38] * d[55] + 2 * d[3] * d[29] * d[39] * d[55] + 2 * d[2] * d[30] * d[39] * d[55] - 2 * d[5] * d[31] * d[39] * d[55] - 2 * d[4] * d[32] * d[39] * d[55] + 2 * d[4] * d[28] * d[40] * d[55] - 2 * d[5] * d[30] * d[40] * d[55] + 2 * d[1] * d[31] * d[40] * d[55] - 2 * d[3] * d[32] * d[40] * d[55] + 2 * d[5] * d[27] * d[41] * d[55] - 2 * d[4] * d[30] * d[41] * d[55] - 2 * d[3] * d[31] * d[41] * d[55] + 2 * d[0] * d[32] * d[41] * d[55];
    coeffs[64] = 2 * d[6] * d[37] * d[38] * d[48] - 2 * d[7] * d[38] * d[39] * d[48] - 2 * d[8] * d[37] * d[40] * d[48] + 2 * d[8] * d[39] * d[41] * d[48] + 2 * d[7] * d[40] * d[41] * d[48] - 2 * d[6] * std::pow(d[41], 2) * d[48] + 2 * d[2] * d[37] * d[42] * d[48] + 2 * d[1] * d[38] * d[42] * d[48] - 4 * d[5] * d[41] * d[42] * d[48] - 2 * d[3] * d[38] * d[43] * d[48] - 2 * d[2] * d[39] * d[43] * d[48] + 2 * d[5] * d[40] * d[43] * d[48] + 2 * d[4] * d[41] * d[43] * d[48] - 2 * d[4] * d[37] * d[44] * d[48] + 2 * d[5] * d[39] * d[44] * d[48] - 2 * d[1] * d[40] * d[44] * d[48] + 2 * d[3] * d[41] * d[44] * d[48] + d[37] * d[38] * std::pow(d[48], 2) - std::pow(d[41], 2) * std::pow(d[48], 2) + 2 * d[7] * d[36] * d[38] * d[49] - 2 * d[6] * d[38] * d[39] * d[49] + 2 * d[8] * d[39] * d[40] * d[49] - 2 * d[7] * std::pow(d[40], 2) * d[49] - 2 * d[8] * d[36] * d[41] * d[49] + 2 * d[6] * d[40] * d[41] * d[49] - 2 * d[3] * d[38] * d[42] * d[49] - 2 * d[2] * d[39] * d[42] * d[49] + 2 * d[5] * d[40] * d[42] * d[49] + 2 * d[4] * d[41] * d[42] * d[49] + 2 * d[2] * d[36] * d[43] * d[49] + 2 * d[0] * d[38] * d[43] * d[49] - 4 * d[4] * d[40] * d[43] * d[49] - 2 * d[5] * d[36] * d[44] * d[49] + 2 * d[4] * d[39] * d[44] * d[49] + 2 * d[3] * d[40] * d[44] * d[49] - 2 * d[0] * d[41] * d[44] * d[49] - 2 * d[38] * d[39] * d[48] * d[49] + 2 * d[40] * d[41] * d[48] * d[49] + d[36] * d[38] * std::pow(d[49], 2) - std::pow(d[40], 2) * std::pow(d[49], 2) + 2 * d[8] * d[36] * d[37] * d[50] - 2 * d[8] * std::pow(d[39], 2) * d[50] - 2 * d[6] * d[37] * d[40] * d[50] + 2 * d[7] * d[39] * d[40] * d[50] - 2 * d[7] * d[36] * d[41] * d[50] + 2 * d[6] * d[39] * d[41] * d[50] - 2 * d[4] * d[37] * d[42] * d[50] + 2 * d[5] * d[39] * d[42] * d[50] - 2 * d[1] * d[40] * d[42] * d[50] + 2 * d[3] * d[41] * d[42] * d[50] - 2 * d[5] * d[36] * d[43] * d[50] + 2 * d[4] * d[39] * d[43] * d[50] + 2 * d[3] * d[40] * d[43] * d[50] - 2 * d[0] * d[41] * d[43] * d[50] + 2 * d[1] * d[36] * d[44] * d[50] + 2 * d[0] * d[37] * d[44] * d[50] - 4 * d[3] * d[39] * d[44] * d[50] - 2 * d[37] * d[40] * d[48] * d[50] + 2 * d[39] * d[41] * d[48] * d[50] + 2 * d[39] * d[40] * d[49] * d[50] - 2 * d[36] * d[41] * d[49] * d[50] + d[36] * d[37] * std::pow(d[50], 2) - std::pow(d[39], 2) * std::pow(d[50], 2) - d[2] * d[36] * d[37] * d[55] - d[1] * d[36] * d[38] * d[55] - d[0] * d[37] * d[38] * d[55] + 2 * d[3] * d[38] * d[39] * d[55] + d[2] * std::pow(d[39], 2) * d[55] + 2 * d[4] * d[37] * d[40] * d[55] - 2 * d[5] * d[39] * d[40] * d[55] + d[1] * std::pow(d[40], 2) * d[55] + 2 * d[5] * d[36] * d[41] * d[55] - 2 * d[4] * d[39] * d[41] * d[55] - 2 * d[3] * d[40] * d[41] * d[55] + d[0] * std::pow(d[41], 2) * d[55];
    coeffs[65] = 2 * d[2] * d[6] * d[10] * d[48] - 2 * d[4] * d[8] * d[10] * d[48] + 2 * d[1] * d[6] * d[11] * d[48] - 2 * d[3] * d[7] * d[11] * d[48] - 2 * d[2] * d[7] * d[12] * d[48] + 2 * d[5] * d[8] * d[12] * d[48] + 2 * d[5] * d[7] * d[13] * d[48] - 2 * d[1] * d[8] * d[13] * d[48] - 4 * d[5] * d[6] * d[14] * d[48] + 2 * d[4] * d[7] * d[14] * d[48] + 2 * d[3] * d[8] * d[14] * d[48] + 2 * d[1] * d[2] * d[15] * d[48] - 2 * std::pow(d[5], 2) * d[15] * d[48] - 2 * d[2] * d[3] * d[16] * d[48] + 2 * d[4] * d[5] * d[16] * d[48] - 2 * d[1] * d[4] * d[17] * d[48] + 2 * d[3] * d[5] * d[17] * d[48] + d[2] * d[10] * std::pow(d[48], 2) + d[1] * d[11] * std::pow(d[48], 2) - 2 * d[5] * d[14] * std::pow(d[48], 2) + 2 * d[2] * d[7] * d[9] * d[49] - 2 * d[5] * d[8] * d[9] * d[49] - 2 * d[3] * d[6] * d[11] * d[49] + 2 * d[0] * d[7] * d[11] * d[49] - 2 * d[2] * d[6] * d[12] * d[49] + 2 * d[4] * d[8] * d[12] * d[49] + 2 * d[5] * d[6] * d[13] * d[49] - 4 * d[4] * d[7] * d[13] * d[49] + 2 * d[3] * d[8] * d[13] * d[49] + 2 * d[4] * d[6] * d[14] * d[49] - 2 * d[0] * d[8] * d[14] * d[49] - 2 * d[2] * d[3] * d[15] * d[49] + 2 * d[4] * d[5] * d[15] * d[49] + 2 * d[0] * d[2] * d[16] * d[49] - 2 * std::pow(d[4], 2) * d[16] * d[49] + 2 * d[3] * d[4] * d[17] * d[49] - 2 * d[0] * d[5] * d[17] * d[49] - 2 * d[3] * d[11] * d[48] * d[49] - 2 * d[2] * d[12] * d[48] * d[49] + 2 * d[5] * d[13] * d[48] * d[49] + 2 * d[4] * d[14] * d[48] * d[49] + d[2] * d[9] * std::pow(d[49], 2) + d[0] * d[11] * std::pow(d[49], 2) - 2 * d[4] * d[13] * std::pow(d[49], 2) - 2 * d[5] * d[7] * d[9] * d[50] + 2 * d[1] * d[8] * d[9] * d[50] - 2 * d[4] * d[6] * d[10] * d[50] + 2 * d[0] * d[8] * d[10] * d[50] + 2 * d[5] * d[6] * d[12] * d[50] + 2 * d[4] * d[7] * d[12] * d[50] - 4 * d[3] * d[8] * d[12] * d[50] - 2 * d[1] * d[6] * d[13] * d[50] + 2 * d[3] * d[7] * d[13] * d[50] + 2 * d[3] * d[6] * d[14] * d[50] - 2 * d[0] * d[7] * d[14] * d[50] - 2 * d[1] * d[4] * d[15] * d[50] + 2 * d[3] * d[5] * d[15] * d[50] + 2 * d[3] * d[4] * d[16] * d[50] - 2 * d[0] * d[5] * d[16] * d[50] + 2 * d[0] * d[1] * d[17] * d[50] - 2 * std::pow(d[3], 2) * d[17] * d[50] - 2 * d[4] * d[10] * d[48] * d[50] + 2 * d[5] * d[12] * d[48] * d[50] - 2 * d[1] * d[13] * d[48] * d[50] + 2 * d[3] * d[14] * d[48] * d[50] - 2 * d[5] * d[9] * d[49] * d[50] + 2 * d[4] * d[12] * d[49] * d[50] + 2 * d[3] * d[13] * d[49] * d[50] - 2 * d[0] * d[14] * d[49] * d[50] + d[1] * d[9] * std::pow(d[50], 2) + d[0] * d[10] * std::pow(d[50], 2) - 2 * d[3] * d[12] * std::pow(d[50], 2) - d[1] * d[2] * d[9] * d[55] + std::pow(d[5], 2) * d[9] * d[55] - d[0] * d[2] * d[10] * d[55] + std::pow(d[4], 2) * d[10] * d[55] - d[0] * d[1] * d[11] * d[55] + std::pow(d[3], 2) * d[11] * d[55] + 2 * d[2] * d[3] * d[12] * d[55] - 2 * d[4] * d[5] * d[12] * d[55] + 2 * d[1] * d[4] * d[13] * d[55] - 2 * d[3] * d[5] * d[13] * d[55] - 2 * d[3] * d[4] * d[14] * d[55] + 2 * d[0] * d[5] * d[14] * d[55];
    coeffs[66] = 2 * d[2] * d[6] * d[19] * d[48] - 2 * d[4] * d[8] * d[19] * d[48] + 2 * d[1] * d[6] * d[20] * d[48] - 2 * d[3] * d[7] * d[20] * d[48] - 2 * d[2] * d[7] * d[21] * d[48] + 2 * d[5] * d[8] * d[21] * d[48] + 2 * d[5] * d[7] * d[22] * d[48] - 2 * d[1] * d[8] * d[22] * d[48] - 4 * d[5] * d[6] * d[23] * d[48] + 2 * d[4] * d[7] * d[23] * d[48] + 2 * d[3] * d[8] * d[23] * d[48] + 2 * d[1] * d[2] * d[24] * d[48] - 2 * std::pow(d[5], 2) * d[24] * d[48] - 2 * d[2] * d[3] * d[25] * d[48] + 2 * d[4] * d[5] * d[25] * d[48] - 2 * d[1] * d[4] * d[26] * d[48] + 2 * d[3] * d[5] * d[26] * d[48] + d[2] * d[19] * std::pow(d[48], 2) + d[1] * d[20] * std::pow(d[48], 2) - 2 * d[5] * d[23] * std::pow(d[48], 2) + 2 * d[2] * d[7] * d[18] * d[49] - 2 * d[5] * d[8] * d[18] * d[49] - 2 * d[3] * d[6] * d[20] * d[49] + 2 * d[0] * d[7] * d[20] * d[49] - 2 * d[2] * d[6] * d[21] * d[49] + 2 * d[4] * d[8] * d[21] * d[49] + 2 * d[5] * d[6] * d[22] * d[49] - 4 * d[4] * d[7] * d[22] * d[49] + 2 * d[3] * d[8] * d[22] * d[49] + 2 * d[4] * d[6] * d[23] * d[49] - 2 * d[0] * d[8] * d[23] * d[49] - 2 * d[2] * d[3] * d[24] * d[49] + 2 * d[4] * d[5] * d[24] * d[49] + 2 * d[0] * d[2] * d[25] * d[49] - 2 * std::pow(d[4], 2) * d[25] * d[49] + 2 * d[3] * d[4] * d[26] * d[49] - 2 * d[0] * d[5] * d[26] * d[49] - 2 * d[3] * d[20] * d[48] * d[49] - 2 * d[2] * d[21] * d[48] * d[49] + 2 * d[5] * d[22] * d[48] * d[49] + 2 * d[4] * d[23] * d[48] * d[49] + d[2] * d[18] * std::pow(d[49], 2) + d[0] * d[20] * std::pow(d[49], 2) - 2 * d[4] * d[22] * std::pow(d[49], 2) - 2 * d[5] * d[7] * d[18] * d[50] + 2 * d[1] * d[8] * d[18] * d[50] - 2 * d[4] * d[6] * d[19] * d[50] + 2 * d[0] * d[8] * d[19] * d[50] + 2 * d[5] * d[6] * d[21] * d[50] + 2 * d[4] * d[7] * d[21] * d[50] - 4 * d[3] * d[8] * d[21] * d[50] - 2 * d[1] * d[6] * d[22] * d[50] + 2 * d[3] * d[7] * d[22] * d[50] + 2 * d[3] * d[6] * d[23] * d[50] - 2 * d[0] * d[7] * d[23] * d[50] - 2 * d[1] * d[4] * d[24] * d[50] + 2 * d[3] * d[5] * d[24] * d[50] + 2 * d[3] * d[4] * d[25] * d[50] - 2 * d[0] * d[5] * d[25] * d[50] + 2 * d[0] * d[1] * d[26] * d[50] - 2 * std::pow(d[3], 2) * d[26] * d[50] - 2 * d[4] * d[19] * d[48] * d[50] + 2 * d[5] * d[21] * d[48] * d[50] - 2 * d[1] * d[22] * d[48] * d[50] + 2 * d[3] * d[23] * d[48] * d[50] - 2 * d[5] * d[18] * d[49] * d[50] + 2 * d[4] * d[21] * d[49] * d[50] + 2 * d[3] * d[22] * d[49] * d[50] - 2 * d[0] * d[23] * d[49] * d[50] + d[1] * d[18] * std::pow(d[50], 2) + d[0] * d[19] * std::pow(d[50], 2) - 2 * d[3] * d[21] * std::pow(d[50], 2) - d[1] * d[2] * d[18] * d[55] + std::pow(d[5], 2) * d[18] * d[55] - d[0] * d[2] * d[19] * d[55] + std::pow(d[4], 2) * d[19] * d[55] - d[0] * d[1] * d[20] * d[55] + std::pow(d[3], 2) * d[20] * d[55] + 2 * d[2] * d[3] * d[21] * d[55] - 2 * d[4] * d[5] * d[21] * d[55] + 2 * d[1] * d[4] * d[22] * d[55] - 2 * d[3] * d[5] * d[22] * d[55] - 2 * d[3] * d[4] * d[23] * d[55] + 2 * d[0] * d[5] * d[23] * d[55];
    coeffs[67] = 2 * d[2] * d[6] * d[28] * d[48] - 2 * d[4] * d[8] * d[28] * d[48] + 2 * d[1] * d[6] * d[29] * d[48] - 2 * d[3] * d[7] * d[29] * d[48] - 2 * d[2] * d[7] * d[30] * d[48] + 2 * d[5] * d[8] * d[30] * d[48] + 2 * d[5] * d[7] * d[31] * d[48] - 2 * d[1] * d[8] * d[31] * d[48] - 4 * d[5] * d[6] * d[32] * d[48] + 2 * d[4] * d[7] * d[32] * d[48] + 2 * d[3] * d[8] * d[32] * d[48] + 2 * d[1] * d[2] * d[33] * d[48] - 2 * std::pow(d[5], 2) * d[33] * d[48] - 2 * d[2] * d[3] * d[34] * d[48] + 2 * d[4] * d[5] * d[34] * d[48] - 2 * d[1] * d[4] * d[35] * d[48] + 2 * d[3] * d[5] * d[35] * d[48] + d[2] * d[28] * std::pow(d[48], 2) + d[1] * d[29] * std::pow(d[48], 2) - 2 * d[5] * d[32] * std::pow(d[48], 2) + 2 * d[2] * d[7] * d[27] * d[49] - 2 * d[5] * d[8] * d[27] * d[49] - 2 * d[3] * d[6] * d[29] * d[49] + 2 * d[0] * d[7] * d[29] * d[49] - 2 * d[2] * d[6] * d[30] * d[49] + 2 * d[4] * d[8] * d[30] * d[49] + 2 * d[5] * d[6] * d[31] * d[49] - 4 * d[4] * d[7] * d[31] * d[49] + 2 * d[3] * d[8] * d[31] * d[49] + 2 * d[4] * d[6] * d[32] * d[49] - 2 * d[0] * d[8] * d[32] * d[49] - 2 * d[2] * d[3] * d[33] * d[49] + 2 * d[4] * d[5] * d[33] * d[49] + 2 * d[0] * d[2] * d[34] * d[49] - 2 * std::pow(d[4], 2) * d[34] * d[49] + 2 * d[3] * d[4] * d[35] * d[49] - 2 * d[0] * d[5] * d[35] * d[49] - 2 * d[3] * d[29] * d[48] * d[49] - 2 * d[2] * d[30] * d[48] * d[49] + 2 * d[5] * d[31] * d[48] * d[49] + 2 * d[4] * d[32] * d[48] * d[49] + d[2] * d[27] * std::pow(d[49], 2) + d[0] * d[29] * std::pow(d[49], 2) - 2 * d[4] * d[31] * std::pow(d[49], 2) - 2 * d[5] * d[7] * d[27] * d[50] + 2 * d[1] * d[8] * d[27] * d[50] - 2 * d[4] * d[6] * d[28] * d[50] + 2 * d[0] * d[8] * d[28] * d[50] + 2 * d[5] * d[6] * d[30] * d[50] + 2 * d[4] * d[7] * d[30] * d[50] - 4 * d[3] * d[8] * d[30] * d[50] - 2 * d[1] * d[6] * d[31] * d[50] + 2 * d[3] * d[7] * d[31] * d[50] + 2 * d[3] * d[6] * d[32] * d[50] - 2 * d[0] * d[7] * d[32] * d[50] - 2 * d[1] * d[4] * d[33] * d[50] + 2 * d[3] * d[5] * d[33] * d[50] + 2 * d[3] * d[4] * d[34] * d[50] - 2 * d[0] * d[5] * d[34] * d[50] + 2 * d[0] * d[1] * d[35] * d[50] - 2 * std::pow(d[3], 2) * d[35] * d[50] - 2 * d[4] * d[28] * d[48] * d[50] + 2 * d[5] * d[30] * d[48] * d[50] - 2 * d[1] * d[31] * d[48] * d[50] + 2 * d[3] * d[32] * d[48] * d[50] - 2 * d[5] * d[27] * d[49] * d[50] + 2 * d[4] * d[30] * d[49] * d[50] + 2 * d[3] * d[31] * d[49] * d[50] - 2 * d[0] * d[32] * d[49] * d[50] + d[1] * d[27] * std::pow(d[50], 2) + d[0] * d[28] * std::pow(d[50], 2) - 2 * d[3] * d[30] * std::pow(d[50], 2) - d[1] * d[2] * d[27] * d[55] + std::pow(d[5], 2) * d[27] * d[55] - d[0] * d[2] * d[28] * d[55] + std::pow(d[4], 2) * d[28] * d[55] - d[0] * d[1] * d[29] * d[55] + std::pow(d[3], 2) * d[29] * d[55] + 2 * d[2] * d[3] * d[30] * d[55] - 2 * d[4] * d[5] * d[30] * d[55] + 2 * d[1] * d[4] * d[31] * d[55] - 2 * d[3] * d[5] * d[31] * d[55] - 2 * d[3] * d[4] * d[32] * d[55] + 2 * d[0] * d[5] * d[32] * d[55];
    coeffs[68] = 2 * d[2] * d[6] * d[37] * d[48] - 2 * d[4] * d[8] * d[37] * d[48] + 2 * d[1] * d[6] * d[38] * d[48] - 2 * d[3] * d[7] * d[38] * d[48] - 2 * d[2] * d[7] * d[39] * d[48] + 2 * d[5] * d[8] * d[39] * d[48] + 2 * d[5] * d[7] * d[40] * d[48] - 2 * d[1] * d[8] * d[40] * d[48] - 4 * d[5] * d[6] * d[41] * d[48] + 2 * d[4] * d[7] * d[41] * d[48] + 2 * d[3] * d[8] * d[41] * d[48] + 2 * d[1] * d[2] * d[42] * d[48] - 2 * std::pow(d[5], 2) * d[42] * d[48] - 2 * d[2] * d[3] * d[43] * d[48] + 2 * d[4] * d[5] * d[43] * d[48] - 2 * d[1] * d[4] * d[44] * d[48] + 2 * d[3] * d[5] * d[44] * d[48] + d[2] * d[37] * std::pow(d[48], 2) + d[1] * d[38] * std::pow(d[48], 2) - 2 * d[5] * d[41] * std::pow(d[48], 2) + 2 * d[2] * d[7] * d[36] * d[49] - 2 * d[5] * d[8] * d[36] * d[49] - 2 * d[3] * d[6] * d[38] * d[49] + 2 * d[0] * d[7] * d[38] * d[49] - 2 * d[2] * d[6] * d[39] * d[49] + 2 * d[4] * d[8] * d[39] * d[49] + 2 * d[5] * d[6] * d[40] * d[49] - 4 * d[4] * d[7] * d[40] * d[49] + 2 * d[3] * d[8] * d[40] * d[49] + 2 * d[4] * d[6] * d[41] * d[49] - 2 * d[0] * d[8] * d[41] * d[49] - 2 * d[2] * d[3] * d[42] * d[49] + 2 * d[4] * d[5] * d[42] * d[49] + 2 * d[0] * d[2] * d[43] * d[49] - 2 * std::pow(d[4], 2) * d[43] * d[49] + 2 * d[3] * d[4] * d[44] * d[49] - 2 * d[0] * d[5] * d[44] * d[49] - 2 * d[3] * d[38] * d[48] * d[49] - 2 * d[2] * d[39] * d[48] * d[49] + 2 * d[5] * d[40] * d[48] * d[49] + 2 * d[4] * d[41] * d[48] * d[49] + d[2] * d[36] * std::pow(d[49], 2) + d[0] * d[38] * std::pow(d[49], 2) - 2 * d[4] * d[40] * std::pow(d[49], 2) - 2 * d[5] * d[7] * d[36] * d[50] + 2 * d[1] * d[8] * d[36] * d[50] - 2 * d[4] * d[6] * d[37] * d[50] + 2 * d[0] * d[8] * d[37] * d[50] + 2 * d[5] * d[6] * d[39] * d[50] + 2 * d[4] * d[7] * d[39] * d[50] - 4 * d[3] * d[8] * d[39] * d[50] - 2 * d[1] * d[6] * d[40] * d[50] + 2 * d[3] * d[7] * d[40] * d[50] + 2 * d[3] * d[6] * d[41] * d[50] - 2 * d[0] * d[7] * d[41] * d[50] - 2 * d[1] * d[4] * d[42] * d[50] + 2 * d[3] * d[5] * d[42] * d[50] + 2 * d[3] * d[4] * d[43] * d[50] - 2 * d[0] * d[5] * d[43] * d[50] + 2 * d[0] * d[1] * d[44] * d[50] - 2 * std::pow(d[3], 2) * d[44] * d[50] - 2 * d[4] * d[37] * d[48] * d[50] + 2 * d[5] * d[39] * d[48] * d[50] - 2 * d[1] * d[40] * d[48] * d[50] + 2 * d[3] * d[41] * d[48] * d[50] - 2 * d[5] * d[36] * d[49] * d[50] + 2 * d[4] * d[39] * d[49] * d[50] + 2 * d[3] * d[40] * d[49] * d[50] - 2 * d[0] * d[41] * d[49] * d[50] + d[1] * d[36] * std::pow(d[50], 2) + d[0] * d[37] * std::pow(d[50], 2) - 2 * d[3] * d[39] * std::pow(d[50], 2) - d[1] * d[2] * d[36] * d[55] + std::pow(d[5], 2) * d[36] * d[55] - d[0] * d[2] * d[37] * d[55] + std::pow(d[4], 2) * d[37] * d[55] - d[0] * d[1] * d[38] * d[55] + std::pow(d[3], 2) * d[38] * d[55] + 2 * d[2] * d[3] * d[39] * d[55] - 2 * d[4] * d[5] * d[39] * d[55] + 2 * d[1] * d[4] * d[40] * d[55] - 2 * d[3] * d[5] * d[40] * d[55] - 2 * d[3] * d[4] * d[41] * d[55] + 2 * d[0] * d[5] * d[41] * d[55];
    coeffs[69] = 2 * d[1] * d[2] * d[6] * d[48] - 2 * std::pow(d[5], 2) * d[6] * d[48] - 2 * d[2] * d[3] * d[7] * d[48] + 2 * d[4] * d[5] * d[7] * d[48] - 2 * d[1] * d[4] * d[8] * d[48] + 2 * d[3] * d[5] * d[8] * d[48] + d[1] * d[2] * std::pow(d[48], 2) - std::pow(d[5], 2) * std::pow(d[48], 2) - 2 * d[2] * d[3] * d[6] * d[49] + 2 * d[4] * d[5] * d[6] * d[49] + 2 * d[0] * d[2] * d[7] * d[49] - 2 * std::pow(d[4], 2) * d[7] * d[49] + 2 * d[3] * d[4] * d[8] * d[49] - 2 * d[0] * d[5] * d[8] * d[49] - 2 * d[2] * d[3] * d[48] * d[49] + 2 * d[4] * d[5] * d[48] * d[49] + d[0] * d[2] * std::pow(d[49], 2) - std::pow(d[4], 2) * std::pow(d[49], 2) - 2 * d[1] * d[4] * d[6] * d[50] + 2 * d[3] * d[5] * d[6] * d[50] + 2 * d[3] * d[4] * d[7] * d[50] - 2 * d[0] * d[5] * d[7] * d[50] + 2 * d[0] * d[1] * d[8] * d[50] - 2 * std::pow(d[3], 2) * d[8] * d[50] - 2 * d[1] * d[4] * d[48] * d[50] + 2 * d[3] * d[5] * d[48] * d[50] + 2 * d[3] * d[4] * d[49] * d[50] - 2 * d[0] * d[5] * d[49] * d[50] + d[0] * d[1] * std::pow(d[50], 2) - std::pow(d[3], 2) * std::pow(d[50], 2) - d[0] * d[1] * d[2] * d[55] + d[2] * std::pow(d[3], 2) * d[55] + d[1] * std::pow(d[4], 2) * d[55] - 2 * d[3] * d[4] * d[5] * d[55] + d[0] * std::pow(d[5], 2) * d[55];
    coeffs[70] = 2 * d[10] * d[11] * d[15] * d[51] - 2 * std::pow(d[14], 2) * d[15] * d[51] - 2 * d[11] * d[12] * d[16] * d[51] + 2 * d[13] * d[14] * d[16] * d[51] - 2 * d[10] * d[13] * d[17] * d[51] + 2 * d[12] * d[14] * d[17] * d[51] - 2 * d[11] * d[12] * d[15] * d[52] + 2 * d[13] * d[14] * d[15] * d[52] + 2 * d[9] * d[11] * d[16] * d[52] - 2 * std::pow(d[13], 2) * d[16] * d[52] + 2 * d[12] * d[13] * d[17] * d[52] - 2 * d[9] * d[14] * d[17] * d[52] - 2 * d[10] * d[13] * d[15] * d[53] + 2 * d[12] * d[14] * d[15] * d[53] + 2 * d[12] * d[13] * d[16] * d[53] - 2 * d[9] * d[14] * d[16] * d[53] + 2 * d[9] * d[10] * d[17] * d[53] - 2 * std::pow(d[12], 2) * d[17] * d[53] - d[9] * d[10] * d[11] * d[56] + d[11] * std::pow(d[12], 2) * d[56] + d[10] * std::pow(d[13], 2) * d[56] - 2 * d[12] * d[13] * d[14] * d[56] + d[9] * std::pow(d[14], 2) * d[56];
    coeffs[71] = 2 * d[11] * d[15] * d[19] * d[51] - 2 * d[13] * d[17] * d[19] * d[51] + 2 * d[10] * d[15] * d[20] * d[51] - 2 * d[12] * d[16] * d[20] * d[51] - 2 * d[11] * d[16] * d[21] * d[51] + 2 * d[14] * d[17] * d[21] * d[51] + 2 * d[14] * d[16] * d[22] * d[51] - 2 * d[10] * d[17] * d[22] * d[51] - 4 * d[14] * d[15] * d[23] * d[51] + 2 * d[13] * d[16] * d[23] * d[51] + 2 * d[12] * d[17] * d[23] * d[51] + 2 * d[10] * d[11] * d[24] * d[51] - 2 * std::pow(d[14], 2) * d[24] * d[51] - 2 * d[11] * d[12] * d[25] * d[51] + 2 * d[13] * d[14] * d[25] * d[51] - 2 * d[10] * d[13] * d[26] * d[51] + 2 * d[12] * d[14] * d[26] * d[51] + 2 * d[11] * d[16] * d[18] * d[52] - 2 * d[14] * d[17] * d[18] * d[52] - 2 * d[12] * d[15] * d[20] * d[52] + 2 * d[9] * d[16] * d[20] * d[52] - 2 * d[11] * d[15] * d[21] * d[52] + 2 * d[13] * d[17] * d[21] * d[52] + 2 * d[14] * d[15] * d[22] * d[52] - 4 * d[13] * d[16] * d[22] * d[52] + 2 * d[12] * d[17] * d[22] * d[52] + 2 * d[13] * d[15] * d[23] * d[52] - 2 * d[9] * d[17] * d[23] * d[52] - 2 * d[11] * d[12] * d[24] * d[52] + 2 * d[13] * d[14] * d[24] * d[52] + 2 * d[9] * d[11] * d[25] * d[52] - 2 * std::pow(d[13], 2) * d[25] * d[52] + 2 * d[12] * d[13] * d[26] * d[52] - 2 * d[9] * d[14] * d[26] * d[52] - 2 * d[14] * d[16] * d[18] * d[53] + 2 * d[10] * d[17] * d[18] * d[53] - 2 * d[13] * d[15] * d[19] * d[53] + 2 * d[9] * d[17] * d[19] * d[53] + 2 * d[14] * d[15] * d[21] * d[53] + 2 * d[13] * d[16] * d[21] * d[53] - 4 * d[12] * d[17] * d[21] * d[53] - 2 * d[10] * d[15] * d[22] * d[53] + 2 * d[12] * d[16] * d[22] * d[53] + 2 * d[12] * d[15] * d[23] * d[53] - 2 * d[9] * d[16] * d[23] * d[53] - 2 * d[10] * d[13] * d[24] * d[53] + 2 * d[12] * d[14] * d[24] * d[53] + 2 * d[12] * d[13] * d[25] * d[53] - 2 * d[9] * d[14] * d[25] * d[53] + 2 * d[9] * d[10] * d[26] * d[53] - 2 * std::pow(d[12], 2) * d[26] * d[53] - d[10] * d[11] * d[18] * d[56] + std::pow(d[14], 2) * d[18] * d[56] - d[9] * d[11] * d[19] * d[56] + std::pow(d[13], 2) * d[19] * d[56] - d[9] * d[10] * d[20] * d[56] + std::pow(d[12], 2) * d[20] * d[56] + 2 * d[11] * d[12] * d[21] * d[56] - 2 * d[13] * d[14] * d[21] * d[56] + 2 * d[10] * d[13] * d[22] * d[56] - 2 * d[12] * d[14] * d[22] * d[56] - 2 * d[12] * d[13] * d[23] * d[56] + 2 * d[9] * d[14] * d[23] * d[56];
    coeffs[72] = 2 * d[15] * d[19] * d[20] * d[51] - 2 * d[16] * d[20] * d[21] * d[51] - 2 * d[17] * d[19] * d[22] * d[51] + 2 * d[17] * d[21] * d[23] * d[51] + 2 * d[16] * d[22] * d[23] * d[51] - 2 * d[15] * std::pow(d[23], 2) * d[51] + 2 * d[11] * d[19] * d[24] * d[51] + 2 * d[10] * d[20] * d[24] * d[51] - 4 * d[14] * d[23] * d[24] * d[51] - 2 * d[12] * d[20] * d[25] * d[51] - 2 * d[11] * d[21] * d[25] * d[51] + 2 * d[14] * d[22] * d[25] * d[51] + 2 * d[13] * d[23] * d[25] * d[51] - 2 * d[13] * d[19] * d[26] * d[51] + 2 * d[14] * d[21] * d[26] * d[51] - 2 * d[10] * d[22] * d[26] * d[51] + 2 * d[12] * d[23] * d[26] * d[51] + 2 * d[16] * d[18] * d[20] * d[52] - 2 * d[15] * d[20] * d[21] * d[52] + 2 * d[17] * d[21] * d[22] * d[52] - 2 * d[16] * std::pow(d[22], 2) * d[52] - 2 * d[17] * d[18] * d[23] * d[52] + 2 * d[15] * d[22] * d[23] * d[52] - 2 * d[12] * d[20] * d[24] * d[52] - 2 * d[11] * d[21] * d[24] * d[52] + 2 * d[14] * d[22] * d[24] * d[52] + 2 * d[13] * d[23] * d[24] * d[52] + 2 * d[11] * d[18] * d[25] * d[52] + 2 * d[9] * d[20] * d[25] * d[52] - 4 * d[13] * d[22] * d[25] * d[52] - 2 * d[14] * d[18] * d[26] * d[52] + 2 * d[13] * d[21] * d[26] * d[52] + 2 * d[12] * d[22] * d[26] * d[52] - 2 * d[9] * d[23] * d[26] * d[52] + 2 * d[17] * d[18] * d[19] * d[53] - 2 * d[17] * std::pow(d[21], 2) * d[53] - 2 * d[15] * d[19] * d[22] * d[53] + 2 * d[16] * d[21] * d[22] * d[53] - 2 * d[16] * d[18] * d[23] * d[53] + 2 * d[15] * d[21] * d[23] * d[53] - 2 * d[13] * d[19] * d[24] * d[53] + 2 * d[14] * d[21] * d[24] * d[53] - 2 * d[10] * d[22] * d[24] * d[53] + 2 * d[12] * d[23] * d[24] * d[53] - 2 * d[14] * d[18] * d[25] * d[53] + 2 * d[13] * d[21] * d[25] * d[53] + 2 * d[12] * d[22] * d[25] * d[53] - 2 * d[9] * d[23] * d[25] * d[53] + 2 * d[10] * d[18] * d[26] * d[53] + 2 * d[9] * d[19] * d[26] * d[53] - 4 * d[12] * d[21] * d[26] * d[53] - d[11] * d[18] * d[19] * d[56] - d[10] * d[18] * d[20] * d[56] - d[9] * d[19] * d[20] * d[56] + 2 * d[12] * d[20] * d[21] * d[56] + d[11] * std::pow(d[21], 2) * d[56] + 2 * d[13] * d[19] * d[22] * d[56] - 2 * d[14] * d[21] * d[22] * d[56] + d[10] * std::pow(d[22], 2) * d[56] + 2 * d[14] * d[18] * d[23] * d[56] - 2 * d[13] * d[21] * d[23] * d[56] - 2 * d[12] * d[22] * d[23] * d[56] + d[9] * std::pow(d[23], 2) * d[56];
    coeffs[73] = 2 * d[19] * d[20] * d[24] * d[51] - 2 * std::pow(d[23], 2) * d[24] * d[51] - 2 * d[20] * d[21] * d[25] * d[51] + 2 * d[22] * d[23] * d[25] * d[51] - 2 * d[19] * d[22] * d[26] * d[51] + 2 * d[21] * d[23] * d[26] * d[51] - 2 * d[20] * d[21] * d[24] * d[52] + 2 * d[22] * d[23] * d[24] * d[52] + 2 * d[18] * d[20] * d[25] * d[52] - 2 * std::pow(d[22], 2) * d[25] * d[52] + 2 * d[21] * d[22] * d[26] * d[52] - 2 * d[18] * d[23] * d[26] * d[52] - 2 * d[19] * d[22] * d[24] * d[53] + 2 * d[21] * d[23] * d[24] * d[53] + 2 * d[21] * d[22] * d[25] * d[53] - 2 * d[18] * d[23] * d[25] * d[53] + 2 * d[18] * d[19] * d[26] * d[53] - 2 * std::pow(d[21], 2) * d[26] * d[53] - d[18] * d[19] * d[20] * d[56] + d[20] * std::pow(d[21], 2) * d[56] + d[19] * std::pow(d[22], 2) * d[56] - 2 * d[21] * d[22] * d[23] * d[56] + d[18] * std::pow(d[23], 2) * d[56];
    coeffs[74] = 2 * d[11] * d[15] * d[28] * d[51] - 2 * d[13] * d[17] * d[28] * d[51] + 2 * d[10] * d[15] * d[29] * d[51] - 2 * d[12] * d[16] * d[29] * d[51] - 2 * d[11] * d[16] * d[30] * d[51] + 2 * d[14] * d[17] * d[30] * d[51] + 2 * d[14] * d[16] * d[31] * d[51] - 2 * d[10] * d[17] * d[31] * d[51] - 4 * d[14] * d[15] * d[32] * d[51] + 2 * d[13] * d[16] * d[32] * d[51] + 2 * d[12] * d[17] * d[32] * d[51] + 2 * d[10] * d[11] * d[33] * d[51] - 2 * std::pow(d[14], 2) * d[33] * d[51] - 2 * d[11] * d[12] * d[34] * d[51] + 2 * d[13] * d[14] * d[34] * d[51] - 2 * d[10] * d[13] * d[35] * d[51] + 2 * d[12] * d[14] * d[35] * d[51] + 2 * d[11] * d[16] * d[27] * d[52] - 2 * d[14] * d[17] * d[27] * d[52] - 2 * d[12] * d[15] * d[29] * d[52] + 2 * d[9] * d[16] * d[29] * d[52] - 2 * d[11] * d[15] * d[30] * d[52] + 2 * d[13] * d[17] * d[30] * d[52] + 2 * d[14] * d[15] * d[31] * d[52] - 4 * d[13] * d[16] * d[31] * d[52] + 2 * d[12] * d[17] * d[31] * d[52] + 2 * d[13] * d[15] * d[32] * d[52] - 2 * d[9] * d[17] * d[32] * d[52] - 2 * d[11] * d[12] * d[33] * d[52] + 2 * d[13] * d[14] * d[33] * d[52] + 2 * d[9] * d[11] * d[34] * d[52] - 2 * std::pow(d[13], 2) * d[34] * d[52] + 2 * d[12] * d[13] * d[35] * d[52] - 2 * d[9] * d[14] * d[35] * d[52] - 2 * d[14] * d[16] * d[27] * d[53] + 2 * d[10] * d[17] * d[27] * d[53] - 2 * d[13] * d[15] * d[28] * d[53] + 2 * d[9] * d[17] * d[28] * d[53] + 2 * d[14] * d[15] * d[30] * d[53] + 2 * d[13] * d[16] * d[30] * d[53] - 4 * d[12] * d[17] * d[30] * d[53] - 2 * d[10] * d[15] * d[31] * d[53] + 2 * d[12] * d[16] * d[31] * d[53] + 2 * d[12] * d[15] * d[32] * d[53] - 2 * d[9] * d[16] * d[32] * d[53] - 2 * d[10] * d[13] * d[33] * d[53] + 2 * d[12] * d[14] * d[33] * d[53] + 2 * d[12] * d[13] * d[34] * d[53] - 2 * d[9] * d[14] * d[34] * d[53] + 2 * d[9] * d[10] * d[35] * d[53] - 2 * std::pow(d[12], 2) * d[35] * d[53] - d[10] * d[11] * d[27] * d[56] + std::pow(d[14], 2) * d[27] * d[56] - d[9] * d[11] * d[28] * d[56] + std::pow(d[13], 2) * d[28] * d[56] - d[9] * d[10] * d[29] * d[56] + std::pow(d[12], 2) * d[29] * d[56] + 2 * d[11] * d[12] * d[30] * d[56] - 2 * d[13] * d[14] * d[30] * d[56] + 2 * d[10] * d[13] * d[31] * d[56] - 2 * d[12] * d[14] * d[31] * d[56] - 2 * d[12] * d[13] * d[32] * d[56] + 2 * d[9] * d[14] * d[32] * d[56];
    coeffs[75] = 2 * d[15] * d[20] * d[28] * d[51] - 2 * d[17] * d[22] * d[28] * d[51] + 2 * d[11] * d[24] * d[28] * d[51] - 2 * d[13] * d[26] * d[28] * d[51] + 2 * d[15] * d[19] * d[29] * d[51] - 2 * d[16] * d[21] * d[29] * d[51] + 2 * d[10] * d[24] * d[29] * d[51] - 2 * d[12] * d[25] * d[29] * d[51] - 2 * d[16] * d[20] * d[30] * d[51] + 2 * d[17] * d[23] * d[30] * d[51] - 2 * d[11] * d[25] * d[30] * d[51] + 2 * d[14] * d[26] * d[30] * d[51] - 2 * d[17] * d[19] * d[31] * d[51] + 2 * d[16] * d[23] * d[31] * d[51] + 2 * d[14] * d[25] * d[31] * d[51] - 2 * d[10] * d[26] * d[31] * d[51] + 2 * d[17] * d[21] * d[32] * d[51] + 2 * d[16] * d[22] * d[32] * d[51] - 4 * d[15] * d[23] * d[32] * d[51] - 4 * d[14] * d[24] * d[32] * d[51] + 2 * d[13] * d[25] * d[32] * d[51] + 2 * d[12] * d[26] * d[32] * d[51] + 2 * d[11] * d[19] * d[33] * d[51] + 2 * d[10] * d[20] * d[33] * d[51] - 4 * d[14] * d[23] * d[33] * d[51] - 2 * d[12] * d[20] * d[34] * d[51] - 2 * d[11] * d[21] * d[34] * d[51] + 2 * d[14] * d[22] * d[34] * d[51] + 2 * d[13] * d[23] * d[34] * d[51] - 2 * d[13] * d[19] * d[35] * d[51] + 2 * d[14] * d[21] * d[35] * d[51] - 2 * d[10] * d[22] * d[35] * d[51] + 2 * d[12] * d[23] * d[35] * d[51] + 2 * d[16] * d[20] * d[27] * d[52] - 2 * d[17] * d[23] * d[27] * d[52] + 2 * d[11] * d[25] * d[27] * d[52] - 2 * d[14] * d[26] * d[27] * d[52] + 2 * d[16] * d[18] * d[29] * d[52] - 2 * d[15] * d[21] * d[29] * d[52] - 2 * d[12] * d[24] * d[29] * d[52] + 2 * d[9] * d[25] * d[29] * d[52] - 2 * d[15] * d[20] * d[30] * d[52] + 2 * d[17] * d[22] * d[30] * d[52] - 2 * d[11] * d[24] * d[30] * d[52] + 2 * d[13] * d[26] * d[30] * d[52] + 2 * d[17] * d[21] * d[31] * d[52] - 4 * d[16] * d[22] * d[31] * d[52] + 2 * d[15] * d[23] * d[31] * d[52] + 2 * d[14] * d[24] * d[31] * d[52] - 4 * d[13] * d[25] * d[31] * d[52] + 2 * d[12] * d[26] * d[31] * d[52] - 2 * d[17] * d[18] * d[32] * d[52] + 2 * d[15] * d[22] * d[32] * d[52] + 2 * d[13] * d[24] * d[32] * d[52] - 2 * d[9] * d[26] * d[32] * d[52] - 2 * d[12] * d[20] * d[33] * d[52] - 2 * d[11] * d[21] * d[33] * d[52] + 2 * d[14] * d[22] * d[33] * d[52] + 2 * d[13] * d[23] * d[33] * d[52] + 2 * d[11] * d[18] * d[34] * d[52] + 2 * d[9] * d[20] * d[34] * d[52] - 4 * d[13] * d[22] * d[34] * d[52] - 2 * d[14] * d[18] * d[35] * d[52] + 2 * d[13] * d[21] * d[35] * d[52] + 2 * d[12] * d[22] * d[35] * d[52] - 2 * d[9] * d[23] * d[35] * d[52] + 2 * d[17] * d[19] * d[27] * d[53] - 2 * d[16] * d[23] * d[27] * d[53] - 2 * d[14] * d[25] * d[27] * d[53] + 2 * d[10] * d[26] * d[27] * d[53] + 2 * d[17] * d[18] * d[28] * d[53] - 2 * d[15] * d[22] * d[28] * d[53] - 2 * d[13] * d[24] * d[28] * d[53] + 2 * d[9] * d[26] * d[28] * d[53] - 4 * d[17] * d[21] * d[30] * d[53] + 2 * d[16] * d[22] * d[30] * d[53] + 2 * d[15] * d[23] * d[30] * d[53] + 2 * d[14] * d[24] * d[30] * d[53] + 2 * d[13] * d[25] * d[30] * d[53] - 4 * d[12] * d[26] * d[30] * d[53] - 2 * d[15] * d[19] * d[31] * d[53] + 2 * d[16] * d[21] * d[31] * d[53] - 2 * d[10] * d[24] * d[31] * d[53] + 2 * d[12] * d[25] * d[31] * d[53] - 2 * d[16] * d[18] * d[32] * d[53] + 2 * d[15] * d[21] * d[32] * d[53] + 2 * d[12] * d[24] * d[32] * d[53] - 2 * d[9] * d[25] * d[32] * d[53] - 2 * d[13] * d[19] * d[33] * d[53] + 2 * d[14] * d[21] * d[33] * d[53] - 2 * d[10] * d[22] * d[33] * d[53] + 2 * d[12] * d[23] * d[33] * d[53] - 2 * d[14] * d[18] * d[34] * d[53] + 2 * d[13] * d[21] * d[34] * d[53] + 2 * d[12] * d[22] * d[34] * d[53] - 2 * d[9] * d[23] * d[34] * d[53] + 2 * d[10] * d[18] * d[35] * d[53] + 2 * d[9] * d[19] * d[35] * d[53] - 4 * d[12] * d[21] * d[35] * d[53] - d[11] * d[19] * d[27] * d[56] - d[10] * d[20] * d[27] * d[56] + 2 * d[14] * d[23] * d[27] * d[56] - d[11] * d[18] * d[28] * d[56] - d[9] * d[20] * d[28] * d[56] + 2 * d[13] * d[22] * d[28] * d[56] - d[10] * d[18] * d[29] * d[56] - d[9] * d[19] * d[29] * d[56] + 2 * d[12] * d[21] * d[29] * d[56] + 2 * d[12] * d[20] * d[30] * d[56] + 2 * d[11] * d[21] * d[30] * d[56] - 2 * d[14] * d[22] * d[30] * d[56] - 2 * d[13] * d[23] * d[30] * d[56] + 2 * d[13] * d[19] * d[31] * d[56] - 2 * d[14] * d[21] * d[31] * d[56] + 2 * d[10] * d[22] * d[31] * d[56] - 2 * d[12] * d[23] * d[31] * d[56] + 2 * d[14] * d[18] * d[32] * d[56] - 2 * d[13] * d[21] * d[32] * d[56] - 2 * d[12] * d[22] * d[32] * d[56] + 2 * d[9] * d[23] * d[32] * d[56];
    coeffs[76] = 2 * d[20] * d[24] * d[28] * d[51] - 2 * d[22] * d[26] * d[28] * d[51] + 2 * d[19] * d[24] * d[29] * d[51] - 2 * d[21] * d[25] * d[29] * d[51] - 2 * d[20] * d[25] * d[30] * d[51] + 2 * d[23] * d[26] * d[30] * d[51] + 2 * d[23] * d[25] * d[31] * d[51] - 2 * d[19] * d[26] * d[31] * d[51] - 4 * d[23] * d[24] * d[32] * d[51] + 2 * d[22] * d[25] * d[32] * d[51] + 2 * d[21] * d[26] * d[32] * d[51] + 2 * d[19] * d[20] * d[33] * d[51] - 2 * std::pow(d[23], 2) * d[33] * d[51] - 2 * d[20] * d[21] * d[34] * d[51] + 2 * d[22] * d[23] * d[34] * d[51] - 2 * d[19] * d[22] * d[35] * d[51] + 2 * d[21] * d[23] * d[35] * d[51] + 2 * d[20] * d[25] * d[27] * d[52] - 2 * d[23] * d[26] * d[27] * d[52] - 2 * d[21] * d[24] * d[29] * d[52] + 2 * d[18] * d[25] * d[29] * d[52] - 2 * d[20] * d[24] * d[30] * d[52] + 2 * d[22] * d[26] * d[30] * d[52] + 2 * d[23] * d[24] * d[31] * d[52] - 4 * d[22] * d[25] * d[31] * d[52] + 2 * d[21] * d[26] * d[31] * d[52] + 2 * d[22] * d[24] * d[32] * d[52] - 2 * d[18] * d[26] * d[32] * d[52] - 2 * d[20] * d[21] * d[33] * d[52] + 2 * d[22] * d[23] * d[33] * d[52] + 2 * d[18] * d[20] * d[34] * d[52] - 2 * std::pow(d[22], 2) * d[34] * d[52] + 2 * d[21] * d[22] * d[35] * d[52] - 2 * d[18] * d[23] * d[35] * d[52] - 2 * d[23] * d[25] * d[27] * d[53] + 2 * d[19] * d[26] * d[27] * d[53] - 2 * d[22] * d[24] * d[28] * d[53] + 2 * d[18] * d[26] * d[28] * d[53] + 2 * d[23] * d[24] * d[30] * d[53] + 2 * d[22] * d[25] * d[30] * d[53] - 4 * d[21] * d[26] * d[30] * d[53] - 2 * d[19] * d[24] * d[31] * d[53] + 2 * d[21] * d[25] * d[31] * d[53] + 2 * d[21] * d[24] * d[32] * d[53] - 2 * d[18] * d[25] * d[32] * d[53] - 2 * d[19] * d[22] * d[33] * d[53] + 2 * d[21] * d[23] * d[33] * d[53] + 2 * d[21] * d[22] * d[34] * d[53] - 2 * d[18] * d[23] * d[34] * d[53] + 2 * d[18] * d[19] * d[35] * d[53] - 2 * std::pow(d[21], 2) * d[35] * d[53] - d[19] * d[20] * d[27] * d[56] + std::pow(d[23], 2) * d[27] * d[56] - d[18] * d[20] * d[28] * d[56] + std::pow(d[22], 2) * d[28] * d[56] - d[18] * d[19] * d[29] * d[56] + std::pow(d[21], 2) * d[29] * d[56] + 2 * d[20] * d[21] * d[30] * d[56] - 2 * d[22] * d[23] * d[30] * d[56] + 2 * d[19] * d[22] * d[31] * d[56] - 2 * d[21] * d[23] * d[31] * d[56] - 2 * d[21] * d[22] * d[32] * d[56] + 2 * d[18] * d[23] * d[32] * d[56];
    coeffs[77] = 2 * d[15] * d[28] * d[29] * d[51] - 2 * d[16] * d[29] * d[30] * d[51] - 2 * d[17] * d[28] * d[31] * d[51] + 2 * d[17] * d[30] * d[32] * d[51] + 2 * d[16] * d[31] * d[32] * d[51] - 2 * d[15] * std::pow(d[32], 2) * d[51] + 2 * d[11] * d[28] * d[33] * d[51] + 2 * d[10] * d[29] * d[33] * d[51] - 4 * d[14] * d[32] * d[33] * d[51] - 2 * d[12] * d[29] * d[34] * d[51] - 2 * d[11] * d[30] * d[34] * d[51] + 2 * d[14] * d[31] * d[34] * d[51] + 2 * d[13] * d[32] * d[34] * d[51] - 2 * d[13] * d[28] * d[35] * d[51] + 2 * d[14] * d[30] * d[35] * d[51] - 2 * d[10] * d[31] * d[35] * d[51] + 2 * d[12] * d[32] * d[35] * d[51] + 2 * d[16] * d[27] * d[29] * d[52] - 2 * d[15] * d[29] * d[30] * d[52] + 2 * d[17] * d[30] * d[31] * d[52] - 2 * d[16] * std::pow(d[31], 2) * d[52] - 2 * d[17] * d[27] * d[32] * d[52] + 2 * d[15] * d[31] * d[32] * d[52] - 2 * d[12] * d[29] * d[33] * d[52] - 2 * d[11] * d[30] * d[33] * d[52] + 2 * d[14] * d[31] * d[33] * d[52] + 2 * d[13] * d[32] * d[33] * d[52] + 2 * d[11] * d[27] * d[34] * d[52] + 2 * d[9] * d[29] * d[34] * d[52] - 4 * d[13] * d[31] * d[34] * d[52] - 2 * d[14] * d[27] * d[35] * d[52] + 2 * d[13] * d[30] * d[35] * d[52] + 2 * d[12] * d[31] * d[35] * d[52] - 2 * d[9] * d[32] * d[35] * d[52] + 2 * d[17] * d[27] * d[28] * d[53] - 2 * d[17] * std::pow(d[30], 2) * d[53] - 2 * d[15] * d[28] * d[31] * d[53] + 2 * d[16] * d[30] * d[31] * d[53] - 2 * d[16] * d[27] * d[32] * d[53] + 2 * d[15] * d[30] * d[32] * d[53] - 2 * d[13] * d[28] * d[33] * d[53] + 2 * d[14] * d[30] * d[33] * d[53] - 2 * d[10] * d[31] * d[33] * d[53] + 2 * d[12] * d[32] * d[33] * d[53] - 2 * d[14] * d[27] * d[34] * d[53] + 2 * d[13] * d[30] * d[34] * d[53] + 2 * d[12] * d[31] * d[34] * d[53] - 2 * d[9] * d[32] * d[34] * d[53] + 2 * d[10] * d[27] * d[35] * d[53] + 2 * d[9] * d[28] * d[35] * d[53] - 4 * d[12] * d[30] * d[35] * d[53] - d[11] * d[27] * d[28] * d[56] - d[10] * d[27] * d[29] * d[56] - d[9] * d[28] * d[29] * d[56] + 2 * d[12] * d[29] * d[30] * d[56] + d[11] * std::pow(d[30], 2) * d[56] + 2 * d[13] * d[28] * d[31] * d[56] - 2 * d[14] * d[30] * d[31] * d[56] + d[10] * std::pow(d[31], 2) * d[56] + 2 * d[14] * d[27] * d[32] * d[56] - 2 * d[13] * d[30] * d[32] * d[56] - 2 * d[12] * d[31] * d[32] * d[56] + d[9] * std::pow(d[32], 2) * d[56];
    coeffs[78] = 2 * d[24] * d[28] * d[29] * d[51] - 2 * d[25] * d[29] * d[30] * d[51] - 2 * d[26] * d[28] * d[31] * d[51] + 2 * d[26] * d[30] * d[32] * d[51] + 2 * d[25] * d[31] * d[32] * d[51] - 2 * d[24] * std::pow(d[32], 2) * d[51] + 2 * d[20] * d[28] * d[33] * d[51] + 2 * d[19] * d[29] * d[33] * d[51] - 4 * d[23] * d[32] * d[33] * d[51] - 2 * d[21] * d[29] * d[34] * d[51] - 2 * d[20] * d[30] * d[34] * d[51] + 2 * d[23] * d[31] * d[34] * d[51] + 2 * d[22] * d[32] * d[34] * d[51] - 2 * d[22] * d[28] * d[35] * d[51] + 2 * d[23] * d[30] * d[35] * d[51] - 2 * d[19] * d[31] * d[35] * d[51] + 2 * d[21] * d[32] * d[35] * d[51] + 2 * d[25] * d[27] * d[29] * d[52] - 2 * d[24] * d[29] * d[30] * d[52] + 2 * d[26] * d[30] * d[31] * d[52] - 2 * d[25] * std::pow(d[31], 2) * d[52] - 2 * d[26] * d[27] * d[32] * d[52] + 2 * d[24] * d[31] * d[32] * d[52] - 2 * d[21] * d[29] * d[33] * d[52] - 2 * d[20] * d[30] * d[33] * d[52] + 2 * d[23] * d[31] * d[33] * d[52] + 2 * d[22] * d[32] * d[33] * d[52] + 2 * d[20] * d[27] * d[34] * d[52] + 2 * d[18] * d[29] * d[34] * d[52] - 4 * d[22] * d[31] * d[34] * d[52] - 2 * d[23] * d[27] * d[35] * d[52] + 2 * d[22] * d[30] * d[35] * d[52] + 2 * d[21] * d[31] * d[35] * d[52] - 2 * d[18] * d[32] * d[35] * d[52] + 2 * d[26] * d[27] * d[28] * d[53] - 2 * d[26] * std::pow(d[30], 2) * d[53] - 2 * d[24] * d[28] * d[31] * d[53] + 2 * d[25] * d[30] * d[31] * d[53] - 2 * d[25] * d[27] * d[32] * d[53] + 2 * d[24] * d[30] * d[32] * d[53] - 2 * d[22] * d[28] * d[33] * d[53] + 2 * d[23] * d[30] * d[33] * d[53] - 2 * d[19] * d[31] * d[33] * d[53] + 2 * d[21] * d[32] * d[33] * d[53] - 2 * d[23] * d[27] * d[34] * d[53] + 2 * d[22] * d[30] * d[34] * d[53] + 2 * d[21] * d[31] * d[34] * d[53] - 2 * d[18] * d[32] * d[34] * d[53] + 2 * d[19] * d[27] * d[35] * d[53] + 2 * d[18] * d[28] * d[35] * d[53] - 4 * d[21] * d[30] * d[35] * d[53] - d[20] * d[27] * d[28] * d[56] - d[19] * d[27] * d[29] * d[56] - d[18] * d[28] * d[29] * d[56] + 2 * d[21] * d[29] * d[30] * d[56] + d[20] * std::pow(d[30], 2) * d[56] + 2 * d[22] * d[28] * d[31] * d[56] - 2 * d[23] * d[30] * d[31] * d[56] + d[19] * std::pow(d[31], 2) * d[56] + 2 * d[23] * d[27] * d[32] * d[56] - 2 * d[22] * d[30] * d[32] * d[56] - 2 * d[21] * d[31] * d[32] * d[56] + d[18] * std::pow(d[32], 2) * d[56];
    coeffs[79] = 2 * d[28] * d[29] * d[33] * d[51] - 2 * std::pow(d[32], 2) * d[33] * d[51] - 2 * d[29] * d[30] * d[34] * d[51] + 2 * d[31] * d[32] * d[34] * d[51] - 2 * d[28] * d[31] * d[35] * d[51] + 2 * d[30] * d[32] * d[35] * d[51] - 2 * d[29] * d[30] * d[33] * d[52] + 2 * d[31] * d[32] * d[33] * d[52] + 2 * d[27] * d[29] * d[34] * d[52] - 2 * std::pow(d[31], 2) * d[34] * d[52] + 2 * d[30] * d[31] * d[35] * d[52] - 2 * d[27] * d[32] * d[35] * d[52] - 2 * d[28] * d[31] * d[33] * d[53] + 2 * d[30] * d[32] * d[33] * d[53] + 2 * d[30] * d[31] * d[34] * d[53] - 2 * d[27] * d[32] * d[34] * d[53] + 2 * d[27] * d[28] * d[35] * d[53] - 2 * std::pow(d[30], 2) * d[35] * d[53] - d[27] * d[28] * d[29] * d[56] + d[29] * std::pow(d[30], 2) * d[56] + d[28] * std::pow(d[31], 2) * d[56] - 2 * d[30] * d[31] * d[32] * d[56] + d[27] * std::pow(d[32], 2) * d[56];
    coeffs[80] = 2 * d[11] * d[15] * d[37] * d[51] - 2 * d[13] * d[17] * d[37] * d[51] + 2 * d[10] * d[15] * d[38] * d[51] - 2 * d[12] * d[16] * d[38] * d[51] - 2 * d[11] * d[16] * d[39] * d[51] + 2 * d[14] * d[17] * d[39] * d[51] + 2 * d[14] * d[16] * d[40] * d[51] - 2 * d[10] * d[17] * d[40] * d[51] - 4 * d[14] * d[15] * d[41] * d[51] + 2 * d[13] * d[16] * d[41] * d[51] + 2 * d[12] * d[17] * d[41] * d[51] + 2 * d[10] * d[11] * d[42] * d[51] - 2 * std::pow(d[14], 2) * d[42] * d[51] - 2 * d[11] * d[12] * d[43] * d[51] + 2 * d[13] * d[14] * d[43] * d[51] - 2 * d[10] * d[13] * d[44] * d[51] + 2 * d[12] * d[14] * d[44] * d[51] + 2 * d[11] * d[16] * d[36] * d[52] - 2 * d[14] * d[17] * d[36] * d[52] - 2 * d[12] * d[15] * d[38] * d[52] + 2 * d[9] * d[16] * d[38] * d[52] - 2 * d[11] * d[15] * d[39] * d[52] + 2 * d[13] * d[17] * d[39] * d[52] + 2 * d[14] * d[15] * d[40] * d[52] - 4 * d[13] * d[16] * d[40] * d[52] + 2 * d[12] * d[17] * d[40] * d[52] + 2 * d[13] * d[15] * d[41] * d[52] - 2 * d[9] * d[17] * d[41] * d[52] - 2 * d[11] * d[12] * d[42] * d[52] + 2 * d[13] * d[14] * d[42] * d[52] + 2 * d[9] * d[11] * d[43] * d[52] - 2 * std::pow(d[13], 2) * d[43] * d[52] + 2 * d[12] * d[13] * d[44] * d[52] - 2 * d[9] * d[14] * d[44] * d[52] - 2 * d[14] * d[16] * d[36] * d[53] + 2 * d[10] * d[17] * d[36] * d[53] - 2 * d[13] * d[15] * d[37] * d[53] + 2 * d[9] * d[17] * d[37] * d[53] + 2 * d[14] * d[15] * d[39] * d[53] + 2 * d[13] * d[16] * d[39] * d[53] - 4 * d[12] * d[17] * d[39] * d[53] - 2 * d[10] * d[15] * d[40] * d[53] + 2 * d[12] * d[16] * d[40] * d[53] + 2 * d[12] * d[15] * d[41] * d[53] - 2 * d[9] * d[16] * d[41] * d[53] - 2 * d[10] * d[13] * d[42] * d[53] + 2 * d[12] * d[14] * d[42] * d[53] + 2 * d[12] * d[13] * d[43] * d[53] - 2 * d[9] * d[14] * d[43] * d[53] + 2 * d[9] * d[10] * d[44] * d[53] - 2 * std::pow(d[12], 2) * d[44] * d[53] - d[10] * d[11] * d[36] * d[56] + std::pow(d[14], 2) * d[36] * d[56] - d[9] * d[11] * d[37] * d[56] + std::pow(d[13], 2) * d[37] * d[56] - d[9] * d[10] * d[38] * d[56] + std::pow(d[12], 2) * d[38] * d[56] + 2 * d[11] * d[12] * d[39] * d[56] - 2 * d[13] * d[14] * d[39] * d[56] + 2 * d[10] * d[13] * d[40] * d[56] - 2 * d[12] * d[14] * d[40] * d[56] - 2 * d[12] * d[13] * d[41] * d[56] + 2 * d[9] * d[14] * d[41] * d[56];
    coeffs[81] = 2 * d[15] * d[20] * d[37] * d[51] - 2 * d[17] * d[22] * d[37] * d[51] + 2 * d[11] * d[24] * d[37] * d[51] - 2 * d[13] * d[26] * d[37] * d[51] + 2 * d[15] * d[19] * d[38] * d[51] - 2 * d[16] * d[21] * d[38] * d[51] + 2 * d[10] * d[24] * d[38] * d[51] - 2 * d[12] * d[25] * d[38] * d[51] - 2 * d[16] * d[20] * d[39] * d[51] + 2 * d[17] * d[23] * d[39] * d[51] - 2 * d[11] * d[25] * d[39] * d[51] + 2 * d[14] * d[26] * d[39] * d[51] - 2 * d[17] * d[19] * d[40] * d[51] + 2 * d[16] * d[23] * d[40] * d[51] + 2 * d[14] * d[25] * d[40] * d[51] - 2 * d[10] * d[26] * d[40] * d[51] + 2 * d[17] * d[21] * d[41] * d[51] + 2 * d[16] * d[22] * d[41] * d[51] - 4 * d[15] * d[23] * d[41] * d[51] - 4 * d[14] * d[24] * d[41] * d[51] + 2 * d[13] * d[25] * d[41] * d[51] + 2 * d[12] * d[26] * d[41] * d[51] + 2 * d[11] * d[19] * d[42] * d[51] + 2 * d[10] * d[20] * d[42] * d[51] - 4 * d[14] * d[23] * d[42] * d[51] - 2 * d[12] * d[20] * d[43] * d[51] - 2 * d[11] * d[21] * d[43] * d[51] + 2 * d[14] * d[22] * d[43] * d[51] + 2 * d[13] * d[23] * d[43] * d[51] - 2 * d[13] * d[19] * d[44] * d[51] + 2 * d[14] * d[21] * d[44] * d[51] - 2 * d[10] * d[22] * d[44] * d[51] + 2 * d[12] * d[23] * d[44] * d[51] + 2 * d[16] * d[20] * d[36] * d[52] - 2 * d[17] * d[23] * d[36] * d[52] + 2 * d[11] * d[25] * d[36] * d[52] - 2 * d[14] * d[26] * d[36] * d[52] + 2 * d[16] * d[18] * d[38] * d[52] - 2 * d[15] * d[21] * d[38] * d[52] - 2 * d[12] * d[24] * d[38] * d[52] + 2 * d[9] * d[25] * d[38] * d[52] - 2 * d[15] * d[20] * d[39] * d[52] + 2 * d[17] * d[22] * d[39] * d[52] - 2 * d[11] * d[24] * d[39] * d[52] + 2 * d[13] * d[26] * d[39] * d[52] + 2 * d[17] * d[21] * d[40] * d[52] - 4 * d[16] * d[22] * d[40] * d[52] + 2 * d[15] * d[23] * d[40] * d[52] + 2 * d[14] * d[24] * d[40] * d[52] - 4 * d[13] * d[25] * d[40] * d[52] + 2 * d[12] * d[26] * d[40] * d[52] - 2 * d[17] * d[18] * d[41] * d[52] + 2 * d[15] * d[22] * d[41] * d[52] + 2 * d[13] * d[24] * d[41] * d[52] - 2 * d[9] * d[26] * d[41] * d[52] - 2 * d[12] * d[20] * d[42] * d[52] - 2 * d[11] * d[21] * d[42] * d[52] + 2 * d[14] * d[22] * d[42] * d[52] + 2 * d[13] * d[23] * d[42] * d[52] + 2 * d[11] * d[18] * d[43] * d[52] + 2 * d[9] * d[20] * d[43] * d[52] - 4 * d[13] * d[22] * d[43] * d[52] - 2 * d[14] * d[18] * d[44] * d[52] + 2 * d[13] * d[21] * d[44] * d[52] + 2 * d[12] * d[22] * d[44] * d[52] - 2 * d[9] * d[23] * d[44] * d[52] + 2 * d[17] * d[19] * d[36] * d[53] - 2 * d[16] * d[23] * d[36] * d[53] - 2 * d[14] * d[25] * d[36] * d[53] + 2 * d[10] * d[26] * d[36] * d[53] + 2 * d[17] * d[18] * d[37] * d[53] - 2 * d[15] * d[22] * d[37] * d[53] - 2 * d[13] * d[24] * d[37] * d[53] + 2 * d[9] * d[26] * d[37] * d[53] - 4 * d[17] * d[21] * d[39] * d[53] + 2 * d[16] * d[22] * d[39] * d[53] + 2 * d[15] * d[23] * d[39] * d[53] + 2 * d[14] * d[24] * d[39] * d[53] + 2 * d[13] * d[25] * d[39] * d[53] - 4 * d[12] * d[26] * d[39] * d[53] - 2 * d[15] * d[19] * d[40] * d[53] + 2 * d[16] * d[21] * d[40] * d[53] - 2 * d[10] * d[24] * d[40] * d[53] + 2 * d[12] * d[25] * d[40] * d[53] - 2 * d[16] * d[18] * d[41] * d[53] + 2 * d[15] * d[21] * d[41] * d[53] + 2 * d[12] * d[24] * d[41] * d[53] - 2 * d[9] * d[25] * d[41] * d[53] - 2 * d[13] * d[19] * d[42] * d[53] + 2 * d[14] * d[21] * d[42] * d[53] - 2 * d[10] * d[22] * d[42] * d[53] + 2 * d[12] * d[23] * d[42] * d[53] - 2 * d[14] * d[18] * d[43] * d[53] + 2 * d[13] * d[21] * d[43] * d[53] + 2 * d[12] * d[22] * d[43] * d[53] - 2 * d[9] * d[23] * d[43] * d[53] + 2 * d[10] * d[18] * d[44] * d[53] + 2 * d[9] * d[19] * d[44] * d[53] - 4 * d[12] * d[21] * d[44] * d[53] - d[11] * d[19] * d[36] * d[56] - d[10] * d[20] * d[36] * d[56] + 2 * d[14] * d[23] * d[36] * d[56] - d[11] * d[18] * d[37] * d[56] - d[9] * d[20] * d[37] * d[56] + 2 * d[13] * d[22] * d[37] * d[56] - d[10] * d[18] * d[38] * d[56] - d[9] * d[19] * d[38] * d[56] + 2 * d[12] * d[21] * d[38] * d[56] + 2 * d[12] * d[20] * d[39] * d[56] + 2 * d[11] * d[21] * d[39] * d[56] - 2 * d[14] * d[22] * d[39] * d[56] - 2 * d[13] * d[23] * d[39] * d[56] + 2 * d[13] * d[19] * d[40] * d[56] - 2 * d[14] * d[21] * d[40] * d[56] + 2 * d[10] * d[22] * d[40] * d[56] - 2 * d[12] * d[23] * d[40] * d[56] + 2 * d[14] * d[18] * d[41] * d[56] - 2 * d[13] * d[21] * d[41] * d[56] - 2 * d[12] * d[22] * d[41] * d[56] + 2 * d[9] * d[23] * d[41] * d[56];
    coeffs[82] = 2 * d[20] * d[24] * d[37] * d[51] - 2 * d[22] * d[26] * d[37] * d[51] + 2 * d[19] * d[24] * d[38] * d[51] - 2 * d[21] * d[25] * d[38] * d[51] - 2 * d[20] * d[25] * d[39] * d[51] + 2 * d[23] * d[26] * d[39] * d[51] + 2 * d[23] * d[25] * d[40] * d[51] - 2 * d[19] * d[26] * d[40] * d[51] - 4 * d[23] * d[24] * d[41] * d[51] + 2 * d[22] * d[25] * d[41] * d[51] + 2 * d[21] * d[26] * d[41] * d[51] + 2 * d[19] * d[20] * d[42] * d[51] - 2 * std::pow(d[23], 2) * d[42] * d[51] - 2 * d[20] * d[21] * d[43] * d[51] + 2 * d[22] * d[23] * d[43] * d[51] - 2 * d[19] * d[22] * d[44] * d[51] + 2 * d[21] * d[23] * d[44] * d[51] + 2 * d[20] * d[25] * d[36] * d[52] - 2 * d[23] * d[26] * d[36] * d[52] - 2 * d[21] * d[24] * d[38] * d[52] + 2 * d[18] * d[25] * d[38] * d[52] - 2 * d[20] * d[24] * d[39] * d[52] + 2 * d[22] * d[26] * d[39] * d[52] + 2 * d[23] * d[24] * d[40] * d[52] - 4 * d[22] * d[25] * d[40] * d[52] + 2 * d[21] * d[26] * d[40] * d[52] + 2 * d[22] * d[24] * d[41] * d[52] - 2 * d[18] * d[26] * d[41] * d[52] - 2 * d[20] * d[21] * d[42] * d[52] + 2 * d[22] * d[23] * d[42] * d[52] + 2 * d[18] * d[20] * d[43] * d[52] - 2 * std::pow(d[22], 2) * d[43] * d[52] + 2 * d[21] * d[22] * d[44] * d[52] - 2 * d[18] * d[23] * d[44] * d[52] - 2 * d[23] * d[25] * d[36] * d[53] + 2 * d[19] * d[26] * d[36] * d[53] - 2 * d[22] * d[24] * d[37] * d[53] + 2 * d[18] * d[26] * d[37] * d[53] + 2 * d[23] * d[24] * d[39] * d[53] + 2 * d[22] * d[25] * d[39] * d[53] - 4 * d[21] * d[26] * d[39] * d[53] - 2 * d[19] * d[24] * d[40] * d[53] + 2 * d[21] * d[25] * d[40] * d[53] + 2 * d[21] * d[24] * d[41] * d[53] - 2 * d[18] * d[25] * d[41] * d[53] - 2 * d[19] * d[22] * d[42] * d[53] + 2 * d[21] * d[23] * d[42] * d[53] + 2 * d[21] * d[22] * d[43] * d[53] - 2 * d[18] * d[23] * d[43] * d[53] + 2 * d[18] * d[19] * d[44] * d[53] - 2 * std::pow(d[21], 2) * d[44] * d[53] - d[19] * d[20] * d[36] * d[56] + std::pow(d[23], 2) * d[36] * d[56] - d[18] * d[20] * d[37] * d[56] + std::pow(d[22], 2) * d[37] * d[56] - d[18] * d[19] * d[38] * d[56] + std::pow(d[21], 2) * d[38] * d[56] + 2 * d[20] * d[21] * d[39] * d[56] - 2 * d[22] * d[23] * d[39] * d[56] + 2 * d[19] * d[22] * d[40] * d[56] - 2 * d[21] * d[23] * d[40] * d[56] - 2 * d[21] * d[22] * d[41] * d[56] + 2 * d[18] * d[23] * d[41] * d[56];
    coeffs[83] = 2 * d[15] * d[29] * d[37] * d[51] - 2 * d[17] * d[31] * d[37] * d[51] + 2 * d[11] * d[33] * d[37] * d[51] - 2 * d[13] * d[35] * d[37] * d[51] + 2 * d[15] * d[28] * d[38] * d[51] - 2 * d[16] * d[30] * d[38] * d[51] + 2 * d[10] * d[33] * d[38] * d[51] - 2 * d[12] * d[34] * d[38] * d[51] - 2 * d[16] * d[29] * d[39] * d[51] + 2 * d[17] * d[32] * d[39] * d[51] - 2 * d[11] * d[34] * d[39] * d[51] + 2 * d[14] * d[35] * d[39] * d[51] - 2 * d[17] * d[28] * d[40] * d[51] + 2 * d[16] * d[32] * d[40] * d[51] + 2 * d[14] * d[34] * d[40] * d[51] - 2 * d[10] * d[35] * d[40] * d[51] + 2 * d[17] * d[30] * d[41] * d[51] + 2 * d[16] * d[31] * d[41] * d[51] - 4 * d[15] * d[32] * d[41] * d[51] - 4 * d[14] * d[33] * d[41] * d[51] + 2 * d[13] * d[34] * d[41] * d[51] + 2 * d[12] * d[35] * d[41] * d[51] + 2 * d[11] * d[28] * d[42] * d[51] + 2 * d[10] * d[29] * d[42] * d[51] - 4 * d[14] * d[32] * d[42] * d[51] - 2 * d[12] * d[29] * d[43] * d[51] - 2 * d[11] * d[30] * d[43] * d[51] + 2 * d[14] * d[31] * d[43] * d[51] + 2 * d[13] * d[32] * d[43] * d[51] - 2 * d[13] * d[28] * d[44] * d[51] + 2 * d[14] * d[30] * d[44] * d[51] - 2 * d[10] * d[31] * d[44] * d[51] + 2 * d[12] * d[32] * d[44] * d[51] + 2 * d[16] * d[29] * d[36] * d[52] - 2 * d[17] * d[32] * d[36] * d[52] + 2 * d[11] * d[34] * d[36] * d[52] - 2 * d[14] * d[35] * d[36] * d[52] + 2 * d[16] * d[27] * d[38] * d[52] - 2 * d[15] * d[30] * d[38] * d[52] - 2 * d[12] * d[33] * d[38] * d[52] + 2 * d[9] * d[34] * d[38] * d[52] - 2 * d[15] * d[29] * d[39] * d[52] + 2 * d[17] * d[31] * d[39] * d[52] - 2 * d[11] * d[33] * d[39] * d[52] + 2 * d[13] * d[35] * d[39] * d[52] + 2 * d[17] * d[30] * d[40] * d[52] - 4 * d[16] * d[31] * d[40] * d[52] + 2 * d[15] * d[32] * d[40] * d[52] + 2 * d[14] * d[33] * d[40] * d[52] - 4 * d[13] * d[34] * d[40] * d[52] + 2 * d[12] * d[35] * d[40] * d[52] - 2 * d[17] * d[27] * d[41] * d[52] + 2 * d[15] * d[31] * d[41] * d[52] + 2 * d[13] * d[33] * d[41] * d[52] - 2 * d[9] * d[35] * d[41] * d[52] - 2 * d[12] * d[29] * d[42] * d[52] - 2 * d[11] * d[30] * d[42] * d[52] + 2 * d[14] * d[31] * d[42] * d[52] + 2 * d[13] * d[32] * d[42] * d[52] + 2 * d[11] * d[27] * d[43] * d[52] + 2 * d[9] * d[29] * d[43] * d[52] - 4 * d[13] * d[31] * d[43] * d[52] - 2 * d[14] * d[27] * d[44] * d[52] + 2 * d[13] * d[30] * d[44] * d[52] + 2 * d[12] * d[31] * d[44] * d[52] - 2 * d[9] * d[32] * d[44] * d[52] + 2 * d[17] * d[28] * d[36] * d[53] - 2 * d[16] * d[32] * d[36] * d[53] - 2 * d[14] * d[34] * d[36] * d[53] + 2 * d[10] * d[35] * d[36] * d[53] + 2 * d[17] * d[27] * d[37] * d[53] - 2 * d[15] * d[31] * d[37] * d[53] - 2 * d[13] * d[33] * d[37] * d[53] + 2 * d[9] * d[35] * d[37] * d[53] - 4 * d[17] * d[30] * d[39] * d[53] + 2 * d[16] * d[31] * d[39] * d[53] + 2 * d[15] * d[32] * d[39] * d[53] + 2 * d[14] * d[33] * d[39] * d[53] + 2 * d[13] * d[34] * d[39] * d[53] - 4 * d[12] * d[35] * d[39] * d[53] - 2 * d[15] * d[28] * d[40] * d[53] + 2 * d[16] * d[30] * d[40] * d[53] - 2 * d[10] * d[33] * d[40] * d[53] + 2 * d[12] * d[34] * d[40] * d[53] - 2 * d[16] * d[27] * d[41] * d[53] + 2 * d[15] * d[30] * d[41] * d[53] + 2 * d[12] * d[33] * d[41] * d[53] - 2 * d[9] * d[34] * d[41] * d[53] - 2 * d[13] * d[28] * d[42] * d[53] + 2 * d[14] * d[30] * d[42] * d[53] - 2 * d[10] * d[31] * d[42] * d[53] + 2 * d[12] * d[32] * d[42] * d[53] - 2 * d[14] * d[27] * d[43] * d[53] + 2 * d[13] * d[30] * d[43] * d[53] + 2 * d[12] * d[31] * d[43] * d[53] - 2 * d[9] * d[32] * d[43] * d[53] + 2 * d[10] * d[27] * d[44] * d[53] + 2 * d[9] * d[28] * d[44] * d[53] - 4 * d[12] * d[30] * d[44] * d[53] - d[11] * d[28] * d[36] * d[56] - d[10] * d[29] * d[36] * d[56] + 2 * d[14] * d[32] * d[36] * d[56] - d[11] * d[27] * d[37] * d[56] - d[9] * d[29] * d[37] * d[56] + 2 * d[13] * d[31] * d[37] * d[56] - d[10] * d[27] * d[38] * d[56] - d[9] * d[28] * d[38] * d[56] + 2 * d[12] * d[30] * d[38] * d[56] + 2 * d[12] * d[29] * d[39] * d[56] + 2 * d[11] * d[30] * d[39] * d[56] - 2 * d[14] * d[31] * d[39] * d[56] - 2 * d[13] * d[32] * d[39] * d[56] + 2 * d[13] * d[28] * d[40] * d[56] - 2 * d[14] * d[30] * d[40] * d[56] + 2 * d[10] * d[31] * d[40] * d[56] - 2 * d[12] * d[32] * d[40] * d[56] + 2 * d[14] * d[27] * d[41] * d[56] - 2 * d[13] * d[30] * d[41] * d[56] - 2 * d[12] * d[31] * d[41] * d[56] + 2 * d[9] * d[32] * d[41] * d[56];
    coeffs[84] = 2 * d[24] * d[29] * d[37] * d[51] - 2 * d[26] * d[31] * d[37] * d[51] + 2 * d[20] * d[33] * d[37] * d[51] - 2 * d[22] * d[35] * d[37] * d[51] + 2 * d[24] * d[28] * d[38] * d[51] - 2 * d[25] * d[30] * d[38] * d[51] + 2 * d[19] * d[33] * d[38] * d[51] - 2 * d[21] * d[34] * d[38] * d[51] - 2 * d[25] * d[29] * d[39] * d[51] + 2 * d[26] * d[32] * d[39] * d[51] - 2 * d[20] * d[34] * d[39] * d[51] + 2 * d[23] * d[35] * d[39] * d[51] - 2 * d[26] * d[28] * d[40] * d[51] + 2 * d[25] * d[32] * d[40] * d[51] + 2 * d[23] * d[34] * d[40] * d[51] - 2 * d[19] * d[35] * d[40] * d[51] + 2 * d[26] * d[30] * d[41] * d[51] + 2 * d[25] * d[31] * d[41] * d[51] - 4 * d[24] * d[32] * d[41] * d[51] - 4 * d[23] * d[33] * d[41] * d[51] + 2 * d[22] * d[34] * d[41] * d[51] + 2 * d[21] * d[35] * d[41] * d[51] + 2 * d[20] * d[28] * d[42] * d[51] + 2 * d[19] * d[29] * d[42] * d[51] - 4 * d[23] * d[32] * d[42] * d[51] - 2 * d[21] * d[29] * d[43] * d[51] - 2 * d[20] * d[30] * d[43] * d[51] + 2 * d[23] * d[31] * d[43] * d[51] + 2 * d[22] * d[32] * d[43] * d[51] - 2 * d[22] * d[28] * d[44] * d[51] + 2 * d[23] * d[30] * d[44] * d[51] - 2 * d[19] * d[31] * d[44] * d[51] + 2 * d[21] * d[32] * d[44] * d[51] + 2 * d[25] * d[29] * d[36] * d[52] - 2 * d[26] * d[32] * d[36] * d[52] + 2 * d[20] * d[34] * d[36] * d[52] - 2 * d[23] * d[35] * d[36] * d[52] + 2 * d[25] * d[27] * d[38] * d[52] - 2 * d[24] * d[30] * d[38] * d[52] - 2 * d[21] * d[33] * d[38] * d[52] + 2 * d[18] * d[34] * d[38] * d[52] - 2 * d[24] * d[29] * d[39] * d[52] + 2 * d[26] * d[31] * d[39] * d[52] - 2 * d[20] * d[33] * d[39] * d[52] + 2 * d[22] * d[35] * d[39] * d[52] + 2 * d[26] * d[30] * d[40] * d[52] - 4 * d[25] * d[31] * d[40] * d[52] + 2 * d[24] * d[32] * d[40] * d[52] + 2 * d[23] * d[33] * d[40] * d[52] - 4 * d[22] * d[34] * d[40] * d[52] + 2 * d[21] * d[35] * d[40] * d[52] - 2 * d[26] * d[27] * d[41] * d[52] + 2 * d[24] * d[31] * d[41] * d[52] + 2 * d[22] * d[33] * d[41] * d[52] - 2 * d[18] * d[35] * d[41] * d[52] - 2 * d[21] * d[29] * d[42] * d[52] - 2 * d[20] * d[30] * d[42] * d[52] + 2 * d[23] * d[31] * d[42] * d[52] + 2 * d[22] * d[32] * d[42] * d[52] + 2 * d[20] * d[27] * d[43] * d[52] + 2 * d[18] * d[29] * d[43] * d[52] - 4 * d[22] * d[31] * d[43] * d[52] - 2 * d[23] * d[27] * d[44] * d[52] + 2 * d[22] * d[30] * d[44] * d[52] + 2 * d[21] * d[31] * d[44] * d[52] - 2 * d[18] * d[32] * d[44] * d[52] + 2 * d[26] * d[28] * d[36] * d[53] - 2 * d[25] * d[32] * d[36] * d[53] - 2 * d[23] * d[34] * d[36] * d[53] + 2 * d[19] * d[35] * d[36] * d[53] + 2 * d[26] * d[27] * d[37] * d[53] - 2 * d[24] * d[31] * d[37] * d[53] - 2 * d[22] * d[33] * d[37] * d[53] + 2 * d[18] * d[35] * d[37] * d[53] - 4 * d[26] * d[30] * d[39] * d[53] + 2 * d[25] * d[31] * d[39] * d[53] + 2 * d[24] * d[32] * d[39] * d[53] + 2 * d[23] * d[33] * d[39] * d[53] + 2 * d[22] * d[34] * d[39] * d[53] - 4 * d[21] * d[35] * d[39] * d[53] - 2 * d[24] * d[28] * d[40] * d[53] + 2 * d[25] * d[30] * d[40] * d[53] - 2 * d[19] * d[33] * d[40] * d[53] + 2 * d[21] * d[34] * d[40] * d[53] - 2 * d[25] * d[27] * d[41] * d[53] + 2 * d[24] * d[30] * d[41] * d[53] + 2 * d[21] * d[33] * d[41] * d[53] - 2 * d[18] * d[34] * d[41] * d[53] - 2 * d[22] * d[28] * d[42] * d[53] + 2 * d[23] * d[30] * d[42] * d[53] - 2 * d[19] * d[31] * d[42] * d[53] + 2 * d[21] * d[32] * d[42] * d[53] - 2 * d[23] * d[27] * d[43] * d[53] + 2 * d[22] * d[30] * d[43] * d[53] + 2 * d[21] * d[31] * d[43] * d[53] - 2 * d[18] * d[32] * d[43] * d[53] + 2 * d[19] * d[27] * d[44] * d[53] + 2 * d[18] * d[28] * d[44] * d[53] - 4 * d[21] * d[30] * d[44] * d[53] - d[20] * d[28] * d[36] * d[56] - d[19] * d[29] * d[36] * d[56] + 2 * d[23] * d[32] * d[36] * d[56] - d[20] * d[27] * d[37] * d[56] - d[18] * d[29] * d[37] * d[56] + 2 * d[22] * d[31] * d[37] * d[56] - d[19] * d[27] * d[38] * d[56] - d[18] * d[28] * d[38] * d[56] + 2 * d[21] * d[30] * d[38] * d[56] + 2 * d[21] * d[29] * d[39] * d[56] + 2 * d[20] * d[30] * d[39] * d[56] - 2 * d[23] * d[31] * d[39] * d[56] - 2 * d[22] * d[32] * d[39] * d[56] + 2 * d[22] * d[28] * d[40] * d[56] - 2 * d[23] * d[30] * d[40] * d[56] + 2 * d[19] * d[31] * d[40] * d[56] - 2 * d[21] * d[32] * d[40] * d[56] + 2 * d[23] * d[27] * d[41] * d[56] - 2 * d[22] * d[30] * d[41] * d[56] - 2 * d[21] * d[31] * d[41] * d[56] + 2 * d[18] * d[32] * d[41] * d[56];
    coeffs[85] = 2 * d[29] * d[33] * d[37] * d[51] - 2 * d[31] * d[35] * d[37] * d[51] + 2 * d[28] * d[33] * d[38] * d[51] - 2 * d[30] * d[34] * d[38] * d[51] - 2 * d[29] * d[34] * d[39] * d[51] + 2 * d[32] * d[35] * d[39] * d[51] + 2 * d[32] * d[34] * d[40] * d[51] - 2 * d[28] * d[35] * d[40] * d[51] - 4 * d[32] * d[33] * d[41] * d[51] + 2 * d[31] * d[34] * d[41] * d[51] + 2 * d[30] * d[35] * d[41] * d[51] + 2 * d[28] * d[29] * d[42] * d[51] - 2 * std::pow(d[32], 2) * d[42] * d[51] - 2 * d[29] * d[30] * d[43] * d[51] + 2 * d[31] * d[32] * d[43] * d[51] - 2 * d[28] * d[31] * d[44] * d[51] + 2 * d[30] * d[32] * d[44] * d[51] + 2 * d[29] * d[34] * d[36] * d[52] - 2 * d[32] * d[35] * d[36] * d[52] - 2 * d[30] * d[33] * d[38] * d[52] + 2 * d[27] * d[34] * d[38] * d[52] - 2 * d[29] * d[33] * d[39] * d[52] + 2 * d[31] * d[35] * d[39] * d[52] + 2 * d[32] * d[33] * d[40] * d[52] - 4 * d[31] * d[34] * d[40] * d[52] + 2 * d[30] * d[35] * d[40] * d[52] + 2 * d[31] * d[33] * d[41] * d[52] - 2 * d[27] * d[35] * d[41] * d[52] - 2 * d[29] * d[30] * d[42] * d[52] + 2 * d[31] * d[32] * d[42] * d[52] + 2 * d[27] * d[29] * d[43] * d[52] - 2 * std::pow(d[31], 2) * d[43] * d[52] + 2 * d[30] * d[31] * d[44] * d[52] - 2 * d[27] * d[32] * d[44] * d[52] - 2 * d[32] * d[34] * d[36] * d[53] + 2 * d[28] * d[35] * d[36] * d[53] - 2 * d[31] * d[33] * d[37] * d[53] + 2 * d[27] * d[35] * d[37] * d[53] + 2 * d[32] * d[33] * d[39] * d[53] + 2 * d[31] * d[34] * d[39] * d[53] - 4 * d[30] * d[35] * d[39] * d[53] - 2 * d[28] * d[33] * d[40] * d[53] + 2 * d[30] * d[34] * d[40] * d[53] + 2 * d[30] * d[33] * d[41] * d[53] - 2 * d[27] * d[34] * d[41] * d[53] - 2 * d[28] * d[31] * d[42] * d[53] + 2 * d[30] * d[32] * d[42] * d[53] + 2 * d[30] * d[31] * d[43] * d[53] - 2 * d[27] * d[32] * d[43] * d[53] + 2 * d[27] * d[28] * d[44] * d[53] - 2 * std::pow(d[30], 2) * d[44] * d[53] - d[28] * d[29] * d[36] * d[56] + std::pow(d[32], 2) * d[36] * d[56] - d[27] * d[29] * d[37] * d[56] + std::pow(d[31], 2) * d[37] * d[56] - d[27] * d[28] * d[38] * d[56] + std::pow(d[30], 2) * d[38] * d[56] + 2 * d[29] * d[30] * d[39] * d[56] - 2 * d[31] * d[32] * d[39] * d[56] + 2 * d[28] * d[31] * d[40] * d[56] - 2 * d[30] * d[32] * d[40] * d[56] - 2 * d[30] * d[31] * d[41] * d[56] + 2 * d[27] * d[32] * d[41] * d[56];
    coeffs[86] = 2 * d[15] * d[37] * d[38] * d[51] - 2 * d[16] * d[38] * d[39] * d[51] - 2 * d[17] * d[37] * d[40] * d[51] + 2 * d[17] * d[39] * d[41] * d[51] + 2 * d[16] * d[40] * d[41] * d[51] - 2 * d[15] * std::pow(d[41], 2) * d[51] + 2 * d[11] * d[37] * d[42] * d[51] + 2 * d[10] * d[38] * d[42] * d[51] - 4 * d[14] * d[41] * d[42] * d[51] - 2 * d[12] * d[38] * d[43] * d[51] - 2 * d[11] * d[39] * d[43] * d[51] + 2 * d[14] * d[40] * d[43] * d[51] + 2 * d[13] * d[41] * d[43] * d[51] - 2 * d[13] * d[37] * d[44] * d[51] + 2 * d[14] * d[39] * d[44] * d[51] - 2 * d[10] * d[40] * d[44] * d[51] + 2 * d[12] * d[41] * d[44] * d[51] + 2 * d[16] * d[36] * d[38] * d[52] - 2 * d[15] * d[38] * d[39] * d[52] + 2 * d[17] * d[39] * d[40] * d[52] - 2 * d[16] * std::pow(d[40], 2) * d[52] - 2 * d[17] * d[36] * d[41] * d[52] + 2 * d[15] * d[40] * d[41] * d[52] - 2 * d[12] * d[38] * d[42] * d[52] - 2 * d[11] * d[39] * d[42] * d[52] + 2 * d[14] * d[40] * d[42] * d[52] + 2 * d[13] * d[41] * d[42] * d[52] + 2 * d[11] * d[36] * d[43] * d[52] + 2 * d[9] * d[38] * d[43] * d[52] - 4 * d[13] * d[40] * d[43] * d[52] - 2 * d[14] * d[36] * d[44] * d[52] + 2 * d[13] * d[39] * d[44] * d[52] + 2 * d[12] * d[40] * d[44] * d[52] - 2 * d[9] * d[41] * d[44] * d[52] + 2 * d[17] * d[36] * d[37] * d[53] - 2 * d[17] * std::pow(d[39], 2) * d[53] - 2 * d[15] * d[37] * d[40] * d[53] + 2 * d[16] * d[39] * d[40] * d[53] - 2 * d[16] * d[36] * d[41] * d[53] + 2 * d[15] * d[39] * d[41] * d[53] - 2 * d[13] * d[37] * d[42] * d[53] + 2 * d[14] * d[39] * d[42] * d[53] - 2 * d[10] * d[40] * d[42] * d[53] + 2 * d[12] * d[41] * d[42] * d[53] - 2 * d[14] * d[36] * d[43] * d[53] + 2 * d[13] * d[39] * d[43] * d[53] + 2 * d[12] * d[40] * d[43] * d[53] - 2 * d[9] * d[41] * d[43] * d[53] + 2 * d[10] * d[36] * d[44] * d[53] + 2 * d[9] * d[37] * d[44] * d[53] - 4 * d[12] * d[39] * d[44] * d[53] - d[11] * d[36] * d[37] * d[56] - d[10] * d[36] * d[38] * d[56] - d[9] * d[37] * d[38] * d[56] + 2 * d[12] * d[38] * d[39] * d[56] + d[11] * std::pow(d[39], 2) * d[56] + 2 * d[13] * d[37] * d[40] * d[56] - 2 * d[14] * d[39] * d[40] * d[56] + d[10] * std::pow(d[40], 2) * d[56] + 2 * d[14] * d[36] * d[41] * d[56] - 2 * d[13] * d[39] * d[41] * d[56] - 2 * d[12] * d[40] * d[41] * d[56] + d[9] * std::pow(d[41], 2) * d[56];
    coeffs[87] = 2 * d[24] * d[37] * d[38] * d[51] - 2 * d[25] * d[38] * d[39] * d[51] - 2 * d[26] * d[37] * d[40] * d[51] + 2 * d[26] * d[39] * d[41] * d[51] + 2 * d[25] * d[40] * d[41] * d[51] - 2 * d[24] * std::pow(d[41], 2) * d[51] + 2 * d[20] * d[37] * d[42] * d[51] + 2 * d[19] * d[38] * d[42] * d[51] - 4 * d[23] * d[41] * d[42] * d[51] - 2 * d[21] * d[38] * d[43] * d[51] - 2 * d[20] * d[39] * d[43] * d[51] + 2 * d[23] * d[40] * d[43] * d[51] + 2 * d[22] * d[41] * d[43] * d[51] - 2 * d[22] * d[37] * d[44] * d[51] + 2 * d[23] * d[39] * d[44] * d[51] - 2 * d[19] * d[40] * d[44] * d[51] + 2 * d[21] * d[41] * d[44] * d[51] + 2 * d[25] * d[36] * d[38] * d[52] - 2 * d[24] * d[38] * d[39] * d[52] + 2 * d[26] * d[39] * d[40] * d[52] - 2 * d[25] * std::pow(d[40], 2) * d[52] - 2 * d[26] * d[36] * d[41] * d[52] + 2 * d[24] * d[40] * d[41] * d[52] - 2 * d[21] * d[38] * d[42] * d[52] - 2 * d[20] * d[39] * d[42] * d[52] + 2 * d[23] * d[40] * d[42] * d[52] + 2 * d[22] * d[41] * d[42] * d[52] + 2 * d[20] * d[36] * d[43] * d[52] + 2 * d[18] * d[38] * d[43] * d[52] - 4 * d[22] * d[40] * d[43] * d[52] - 2 * d[23] * d[36] * d[44] * d[52] + 2 * d[22] * d[39] * d[44] * d[52] + 2 * d[21] * d[40] * d[44] * d[52] - 2 * d[18] * d[41] * d[44] * d[52] + 2 * d[26] * d[36] * d[37] * d[53] - 2 * d[26] * std::pow(d[39], 2) * d[53] - 2 * d[24] * d[37] * d[40] * d[53] + 2 * d[25] * d[39] * d[40] * d[53] - 2 * d[25] * d[36] * d[41] * d[53] + 2 * d[24] * d[39] * d[41] * d[53] - 2 * d[22] * d[37] * d[42] * d[53] + 2 * d[23] * d[39] * d[42] * d[53] - 2 * d[19] * d[40] * d[42] * d[53] + 2 * d[21] * d[41] * d[42] * d[53] - 2 * d[23] * d[36] * d[43] * d[53] + 2 * d[22] * d[39] * d[43] * d[53] + 2 * d[21] * d[40] * d[43] * d[53] - 2 * d[18] * d[41] * d[43] * d[53] + 2 * d[19] * d[36] * d[44] * d[53] + 2 * d[18] * d[37] * d[44] * d[53] - 4 * d[21] * d[39] * d[44] * d[53] - d[20] * d[36] * d[37] * d[56] - d[19] * d[36] * d[38] * d[56] - d[18] * d[37] * d[38] * d[56] + 2 * d[21] * d[38] * d[39] * d[56] + d[20] * std::pow(d[39], 2) * d[56] + 2 * d[22] * d[37] * d[40] * d[56] - 2 * d[23] * d[39] * d[40] * d[56] + d[19] * std::pow(d[40], 2) * d[56] + 2 * d[23] * d[36] * d[41] * d[56] - 2 * d[22] * d[39] * d[41] * d[56] - 2 * d[21] * d[40] * d[41] * d[56] + d[18] * std::pow(d[41], 2) * d[56];
    coeffs[88] = 2 * d[33] * d[37] * d[38] * d[51] - 2 * d[34] * d[38] * d[39] * d[51] - 2 * d[35] * d[37] * d[40] * d[51] + 2 * d[35] * d[39] * d[41] * d[51] + 2 * d[34] * d[40] * d[41] * d[51] - 2 * d[33] * std::pow(d[41], 2) * d[51] + 2 * d[29] * d[37] * d[42] * d[51] + 2 * d[28] * d[38] * d[42] * d[51] - 4 * d[32] * d[41] * d[42] * d[51] - 2 * d[30] * d[38] * d[43] * d[51] - 2 * d[29] * d[39] * d[43] * d[51] + 2 * d[32] * d[40] * d[43] * d[51] + 2 * d[31] * d[41] * d[43] * d[51] - 2 * d[31] * d[37] * d[44] * d[51] + 2 * d[32] * d[39] * d[44] * d[51] - 2 * d[28] * d[40] * d[44] * d[51] + 2 * d[30] * d[41] * d[44] * d[51] + 2 * d[34] * d[36] * d[38] * d[52] - 2 * d[33] * d[38] * d[39] * d[52] + 2 * d[35] * d[39] * d[40] * d[52] - 2 * d[34] * std::pow(d[40], 2) * d[52] - 2 * d[35] * d[36] * d[41] * d[52] + 2 * d[33] * d[40] * d[41] * d[52] - 2 * d[30] * d[38] * d[42] * d[52] - 2 * d[29] * d[39] * d[42] * d[52] + 2 * d[32] * d[40] * d[42] * d[52] + 2 * d[31] * d[41] * d[42] * d[52] + 2 * d[29] * d[36] * d[43] * d[52] + 2 * d[27] * d[38] * d[43] * d[52] - 4 * d[31] * d[40] * d[43] * d[52] - 2 * d[32] * d[36] * d[44] * d[52] + 2 * d[31] * d[39] * d[44] * d[52] + 2 * d[30] * d[40] * d[44] * d[52] - 2 * d[27] * d[41] * d[44] * d[52] + 2 * d[35] * d[36] * d[37] * d[53] - 2 * d[35] * std::pow(d[39], 2) * d[53] - 2 * d[33] * d[37] * d[40] * d[53] + 2 * d[34] * d[39] * d[40] * d[53] - 2 * d[34] * d[36] * d[41] * d[53] + 2 * d[33] * d[39] * d[41] * d[53] - 2 * d[31] * d[37] * d[42] * d[53] + 2 * d[32] * d[39] * d[42] * d[53] - 2 * d[28] * d[40] * d[42] * d[53] + 2 * d[30] * d[41] * d[42] * d[53] - 2 * d[32] * d[36] * d[43] * d[53] + 2 * d[31] * d[39] * d[43] * d[53] + 2 * d[30] * d[40] * d[43] * d[53] - 2 * d[27] * d[41] * d[43] * d[53] + 2 * d[28] * d[36] * d[44] * d[53] + 2 * d[27] * d[37] * d[44] * d[53] - 4 * d[30] * d[39] * d[44] * d[53] - d[29] * d[36] * d[37] * d[56] - d[28] * d[36] * d[38] * d[56] - d[27] * d[37] * d[38] * d[56] + 2 * d[30] * d[38] * d[39] * d[56] + d[29] * std::pow(d[39], 2) * d[56] + 2 * d[31] * d[37] * d[40] * d[56] - 2 * d[32] * d[39] * d[40] * d[56] + d[28] * std::pow(d[40], 2) * d[56] + 2 * d[32] * d[36] * d[41] * d[56] - 2 * d[31] * d[39] * d[41] * d[56] - 2 * d[30] * d[40] * d[41] * d[56] + d[27] * std::pow(d[41], 2) * d[56];
    coeffs[89] = 2 * d[37] * d[38] * d[42] * d[51] - 2 * std::pow(d[41], 2) * d[42] * d[51] - 2 * d[38] * d[39] * d[43] * d[51] + 2 * d[40] * d[41] * d[43] * d[51] - 2 * d[37] * d[40] * d[44] * d[51] + 2 * d[39] * d[41] * d[44] * d[51] - 2 * d[38] * d[39] * d[42] * d[52] + 2 * d[40] * d[41] * d[42] * d[52] + 2 * d[36] * d[38] * d[43] * d[52] - 2 * std::pow(d[40], 2) * d[43] * d[52] + 2 * d[39] * d[40] * d[44] * d[52] - 2 * d[36] * d[41] * d[44] * d[52] - 2 * d[37] * d[40] * d[42] * d[53] + 2 * d[39] * d[41] * d[42] * d[53] + 2 * d[39] * d[40] * d[43] * d[53] - 2 * d[36] * d[41] * d[43] * d[53] + 2 * d[36] * d[37] * d[44] * d[53] - 2 * std::pow(d[39], 2) * d[44] * d[53] - d[36] * d[37] * d[38] * d[56] + d[38] * std::pow(d[39], 2) * d[56] + d[37] * std::pow(d[40], 2) * d[56] - 2 * d[39] * d[40] * d[41] * d[56] + d[36] * std::pow(d[41], 2) * d[56];
    coeffs[90] = 2 * d[6] * d[10] * d[11] * d[51] - 2 * d[7] * d[11] * d[12] * d[51] - 2 * d[8] * d[10] * d[13] * d[51] + 2 * d[8] * d[12] * d[14] * d[51] + 2 * d[7] * d[13] * d[14] * d[51] - 2 * d[6] * std::pow(d[14], 2) * d[51] + 2 * d[2] * d[10] * d[15] * d[51] + 2 * d[1] * d[11] * d[15] * d[51] - 4 * d[5] * d[14] * d[15] * d[51] - 2 * d[3] * d[11] * d[16] * d[51] - 2 * d[2] * d[12] * d[16] * d[51] + 2 * d[5] * d[13] * d[16] * d[51] + 2 * d[4] * d[14] * d[16] * d[51] - 2 * d[4] * d[10] * d[17] * d[51] + 2 * d[5] * d[12] * d[17] * d[51] - 2 * d[1] * d[13] * d[17] * d[51] + 2 * d[3] * d[14] * d[17] * d[51] + d[10] * d[11] * std::pow(d[51], 2) - std::pow(d[14], 2) * std::pow(d[51], 2) + 2 * d[7] * d[9] * d[11] * d[52] - 2 * d[6] * d[11] * d[12] * d[52] + 2 * d[8] * d[12] * d[13] * d[52] - 2 * d[7] * std::pow(d[13], 2) * d[52] - 2 * d[8] * d[9] * d[14] * d[52] + 2 * d[6] * d[13] * d[14] * d[52] - 2 * d[3] * d[11] * d[15] * d[52] - 2 * d[2] * d[12] * d[15] * d[52] + 2 * d[5] * d[13] * d[15] * d[52] + 2 * d[4] * d[14] * d[15] * d[52] + 2 * d[2] * d[9] * d[16] * d[52] + 2 * d[0] * d[11] * d[16] * d[52] - 4 * d[4] * d[13] * d[16] * d[52] - 2 * d[5] * d[9] * d[17] * d[52] + 2 * d[4] * d[12] * d[17] * d[52] + 2 * d[3] * d[13] * d[17] * d[52] - 2 * d[0] * d[14] * d[17] * d[52] - 2 * d[11] * d[12] * d[51] * d[52] + 2 * d[13] * d[14] * d[51] * d[52] + d[9] * d[11] * std::pow(d[52], 2) - std::pow(d[13], 2) * std::pow(d[52], 2) + 2 * d[8] * d[9] * d[10] * d[53] - 2 * d[8] * std::pow(d[12], 2) * d[53] - 2 * d[6] * d[10] * d[13] * d[53] + 2 * d[7] * d[12] * d[13] * d[53] - 2 * d[7] * d[9] * d[14] * d[53] + 2 * d[6] * d[12] * d[14] * d[53] - 2 * d[4] * d[10] * d[15] * d[53] + 2 * d[5] * d[12] * d[15] * d[53] - 2 * d[1] * d[13] * d[15] * d[53] + 2 * d[3] * d[14] * d[15] * d[53] - 2 * d[5] * d[9] * d[16] * d[53] + 2 * d[4] * d[12] * d[16] * d[53] + 2 * d[3] * d[13] * d[16] * d[53] - 2 * d[0] * d[14] * d[16] * d[53] + 2 * d[1] * d[9] * d[17] * d[53] + 2 * d[0] * d[10] * d[17] * d[53] - 4 * d[3] * d[12] * d[17] * d[53] - 2 * d[10] * d[13] * d[51] * d[53] + 2 * d[12] * d[14] * d[51] * d[53] + 2 * d[12] * d[13] * d[52] * d[53] - 2 * d[9] * d[14] * d[52] * d[53] + d[9] * d[10] * std::pow(d[53], 2) - std::pow(d[12], 2) * std::pow(d[53], 2) - d[2] * d[9] * d[10] * d[56] - d[1] * d[9] * d[11] * d[56] - d[0] * d[10] * d[11] * d[56] + 2 * d[3] * d[11] * d[12] * d[56] + d[2] * std::pow(d[12], 2) * d[56] + 2 * d[4] * d[10] * d[13] * d[56] - 2 * d[5] * d[12] * d[13] * d[56] + d[1] * std::pow(d[13], 2) * d[56] + 2 * d[5] * d[9] * d[14] * d[56] - 2 * d[4] * d[12] * d[14] * d[56] - 2 * d[3] * d[13] * d[14] * d[56] + d[0] * std::pow(d[14], 2) * d[56];
    coeffs[91] = 2 * d[6] * d[11] * d[19] * d[51] - 2 * d[8] * d[13] * d[19] * d[51] + 2 * d[2] * d[15] * d[19] * d[51] - 2 * d[4] * d[17] * d[19] * d[51] + 2 * d[6] * d[10] * d[20] * d[51] - 2 * d[7] * d[12] * d[20] * d[51] + 2 * d[1] * d[15] * d[20] * d[51] - 2 * d[3] * d[16] * d[20] * d[51] - 2 * d[7] * d[11] * d[21] * d[51] + 2 * d[8] * d[14] * d[21] * d[51] - 2 * d[2] * d[16] * d[21] * d[51] + 2 * d[5] * d[17] * d[21] * d[51] - 2 * d[8] * d[10] * d[22] * d[51] + 2 * d[7] * d[14] * d[22] * d[51] + 2 * d[5] * d[16] * d[22] * d[51] - 2 * d[1] * d[17] * d[22] * d[51] + 2 * d[8] * d[12] * d[23] * d[51] + 2 * d[7] * d[13] * d[23] * d[51] - 4 * d[6] * d[14] * d[23] * d[51] - 4 * d[5] * d[15] * d[23] * d[51] + 2 * d[4] * d[16] * d[23] * d[51] + 2 * d[3] * d[17] * d[23] * d[51] + 2 * d[2] * d[10] * d[24] * d[51] + 2 * d[1] * d[11] * d[24] * d[51] - 4 * d[5] * d[14] * d[24] * d[51] - 2 * d[3] * d[11] * d[25] * d[51] - 2 * d[2] * d[12] * d[25] * d[51] + 2 * d[5] * d[13] * d[25] * d[51] + 2 * d[4] * d[14] * d[25] * d[51] - 2 * d[4] * d[10] * d[26] * d[51] + 2 * d[5] * d[12] * d[26] * d[51] - 2 * d[1] * d[13] * d[26] * d[51] + 2 * d[3] * d[14] * d[26] * d[51] + d[11] * d[19] * std::pow(d[51], 2) + d[10] * d[20] * std::pow(d[51], 2) - 2 * d[14] * d[23] * std::pow(d[51], 2) + 2 * d[7] * d[11] * d[18] * d[52] - 2 * d[8] * d[14] * d[18] * d[52] + 2 * d[2] * d[16] * d[18] * d[52] - 2 * d[5] * d[17] * d[18] * d[52] + 2 * d[7] * d[9] * d[20] * d[52] - 2 * d[6] * d[12] * d[20] * d[52] - 2 * d[3] * d[15] * d[20] * d[52] + 2 * d[0] * d[16] * d[20] * d[52] - 2 * d[6] * d[11] * d[21] * d[52] + 2 * d[8] * d[13] * d[21] * d[52] - 2 * d[2] * d[15] * d[21] * d[52] + 2 * d[4] * d[17] * d[21] * d[52] + 2 * d[8] * d[12] * d[22] * d[52] - 4 * d[7] * d[13] * d[22] * d[52] + 2 * d[6] * d[14] * d[22] * d[52] + 2 * d[5] * d[15] * d[22] * d[52] - 4 * d[4] * d[16] * d[22] * d[52] + 2 * d[3] * d[17] * d[22] * d[52] - 2 * d[8] * d[9] * d[23] * d[52] + 2 * d[6] * d[13] * d[23] * d[52] + 2 * d[4] * d[15] * d[23] * d[52] - 2 * d[0] * d[17] * d[23] * d[52] - 2 * d[3] * d[11] * d[24] * d[52] - 2 * d[2] * d[12] * d[24] * d[52] + 2 * d[5] * d[13] * d[24] * d[52] + 2 * d[4] * d[14] * d[24] * d[52] + 2 * d[2] * d[9] * d[25] * d[52] + 2 * d[0] * d[11] * d[25] * d[52] - 4 * d[4] * d[13] * d[25] * d[52] - 2 * d[5] * d[9] * d[26] * d[52] + 2 * d[4] * d[12] * d[26] * d[52] + 2 * d[3] * d[13] * d[26] * d[52] - 2 * d[0] * d[14] * d[26] * d[52] - 2 * d[12] * d[20] * d[51] * d[52] - 2 * d[11] * d[21] * d[51] * d[52] + 2 * d[14] * d[22] * d[51] * d[52] + 2 * d[13] * d[23] * d[51] * d[52] + d[11] * d[18] * std::pow(d[52], 2) + d[9] * d[20] * std::pow(d[52], 2) - 2 * d[13] * d[22] * std::pow(d[52], 2) + 2 * d[8] * d[10] * d[18] * d[53] - 2 * d[7] * d[14] * d[18] * d[53] - 2 * d[5] * d[16] * d[18] * d[53] + 2 * d[1] * d[17] * d[18] * d[53] + 2 * d[8] * d[9] * d[19] * d[53] - 2 * d[6] * d[13] * d[19] * d[53] - 2 * d[4] * d[15] * d[19] * d[53] + 2 * d[0] * d[17] * d[19] * d[53] - 4 * d[8] * d[12] * d[21] * d[53] + 2 * d[7] * d[13] * d[21] * d[53] + 2 * d[6] * d[14] * d[21] * d[53] + 2 * d[5] * d[15] * d[21] * d[53] + 2 * d[4] * d[16] * d[21] * d[53] - 4 * d[3] * d[17] * d[21] * d[53] - 2 * d[6] * d[10] * d[22] * d[53] + 2 * d[7] * d[12] * d[22] * d[53] - 2 * d[1] * d[15] * d[22] * d[53] + 2 * d[3] * d[16] * d[22] * d[53] - 2 * d[7] * d[9] * d[23] * d[53] + 2 * d[6] * d[12] * d[23] * d[53] + 2 * d[3] * d[15] * d[23] * d[53] - 2 * d[0] * d[16] * d[23] * d[53] - 2 * d[4] * d[10] * d[24] * d[53] + 2 * d[5] * d[12] * d[24] * d[53] - 2 * d[1] * d[13] * d[24] * d[53] + 2 * d[3] * d[14] * d[24] * d[53] - 2 * d[5] * d[9] * d[25] * d[53] + 2 * d[4] * d[12] * d[25] * d[53] + 2 * d[3] * d[13] * d[25] * d[53] - 2 * d[0] * d[14] * d[25] * d[53] + 2 * d[1] * d[9] * d[26] * d[53] + 2 * d[0] * d[10] * d[26] * d[53] - 4 * d[3] * d[12] * d[26] * d[53] - 2 * d[13] * d[19] * d[51] * d[53] + 2 * d[14] * d[21] * d[51] * d[53] - 2 * d[10] * d[22] * d[51] * d[53] + 2 * d[12] * d[23] * d[51] * d[53] - 2 * d[14] * d[18] * d[52] * d[53] + 2 * d[13] * d[21] * d[52] * d[53] + 2 * d[12] * d[22] * d[52] * d[53] - 2 * d[9] * d[23] * d[52] * d[53] + d[10] * d[18] * std::pow(d[53], 2) + d[9] * d[19] * std::pow(d[53], 2) - 2 * d[12] * d[21] * std::pow(d[53], 2) - d[2] * d[10] * d[18] * d[56] - d[1] * d[11] * d[18] * d[56] + 2 * d[5] * d[14] * d[18] * d[56] - d[2] * d[9] * d[19] * d[56] - d[0] * d[11] * d[19] * d[56] + 2 * d[4] * d[13] * d[19] * d[56] - d[1] * d[9] * d[20] * d[56] - d[0] * d[10] * d[20] * d[56] + 2 * d[3] * d[12] * d[20] * d[56] + 2 * d[3] * d[11] * d[21] * d[56] + 2 * d[2] * d[12] * d[21] * d[56] - 2 * d[5] * d[13] * d[21] * d[56] - 2 * d[4] * d[14] * d[21] * d[56] + 2 * d[4] * d[10] * d[22] * d[56] - 2 * d[5] * d[12] * d[22] * d[56] + 2 * d[1] * d[13] * d[22] * d[56] - 2 * d[3] * d[14] * d[22] * d[56] + 2 * d[5] * d[9] * d[23] * d[56] - 2 * d[4] * d[12] * d[23] * d[56] - 2 * d[3] * d[13] * d[23] * d[56] + 2 * d[0] * d[14] * d[23] * d[56];
    coeffs[92] = 2 * d[6] * d[19] * d[20] * d[51] - 2 * d[7] * d[20] * d[21] * d[51] - 2 * d[8] * d[19] * d[22] * d[51] + 2 * d[8] * d[21] * d[23] * d[51] + 2 * d[7] * d[22] * d[23] * d[51] - 2 * d[6] * std::pow(d[23], 2) * d[51] + 2 * d[2] * d[19] * d[24] * d[51] + 2 * d[1] * d[20] * d[24] * d[51] - 4 * d[5] * d[23] * d[24] * d[51] - 2 * d[3] * d[20] * d[25] * d[51] - 2 * d[2] * d[21] * d[25] * d[51] + 2 * d[5] * d[22] * d[25] * d[51] + 2 * d[4] * d[23] * d[25] * d[51] - 2 * d[4] * d[19] * d[26] * d[51] + 2 * d[5] * d[21] * d[26] * d[51] - 2 * d[1] * d[22] * d[26] * d[51] + 2 * d[3] * d[23] * d[26] * d[51] + d[19] * d[20] * std::pow(d[51], 2) - std::pow(d[23], 2) * std::pow(d[51], 2) + 2 * d[7] * d[18] * d[20] * d[52] - 2 * d[6] * d[20] * d[21] * d[52] + 2 * d[8] * d[21] * d[22] * d[52] - 2 * d[7] * std::pow(d[22], 2) * d[52] - 2 * d[8] * d[18] * d[23] * d[52] + 2 * d[6] * d[22] * d[23] * d[52] - 2 * d[3] * d[20] * d[24] * d[52] - 2 * d[2] * d[21] * d[24] * d[52] + 2 * d[5] * d[22] * d[24] * d[52] + 2 * d[4] * d[23] * d[24] * d[52] + 2 * d[2] * d[18] * d[25] * d[52] + 2 * d[0] * d[20] * d[25] * d[52] - 4 * d[4] * d[22] * d[25] * d[52] - 2 * d[5] * d[18] * d[26] * d[52] + 2 * d[4] * d[21] * d[26] * d[52] + 2 * d[3] * d[22] * d[26] * d[52] - 2 * d[0] * d[23] * d[26] * d[52] - 2 * d[20] * d[21] * d[51] * d[52] + 2 * d[22] * d[23] * d[51] * d[52] + d[18] * d[20] * std::pow(d[52], 2) - std::pow(d[22], 2) * std::pow(d[52], 2) + 2 * d[8] * d[18] * d[19] * d[53] - 2 * d[8] * std::pow(d[21], 2) * d[53] - 2 * d[6] * d[19] * d[22] * d[53] + 2 * d[7] * d[21] * d[22] * d[53] - 2 * d[7] * d[18] * d[23] * d[53] + 2 * d[6] * d[21] * d[23] * d[53] - 2 * d[4] * d[19] * d[24] * d[53] + 2 * d[5] * d[21] * d[24] * d[53] - 2 * d[1] * d[22] * d[24] * d[53] + 2 * d[3] * d[23] * d[24] * d[53] - 2 * d[5] * d[18] * d[25] * d[53] + 2 * d[4] * d[21] * d[25] * d[53] + 2 * d[3] * d[22] * d[25] * d[53] - 2 * d[0] * d[23] * d[25] * d[53] + 2 * d[1] * d[18] * d[26] * d[53] + 2 * d[0] * d[19] * d[26] * d[53] - 4 * d[3] * d[21] * d[26] * d[53] - 2 * d[19] * d[22] * d[51] * d[53] + 2 * d[21] * d[23] * d[51] * d[53] + 2 * d[21] * d[22] * d[52] * d[53] - 2 * d[18] * d[23] * d[52] * d[53] + d[18] * d[19] * std::pow(d[53], 2) - std::pow(d[21], 2) * std::pow(d[53], 2) - d[2] * d[18] * d[19] * d[56] - d[1] * d[18] * d[20] * d[56] - d[0] * d[19] * d[20] * d[56] + 2 * d[3] * d[20] * d[21] * d[56] + d[2] * std::pow(d[21], 2) * d[56] + 2 * d[4] * d[19] * d[22] * d[56] - 2 * d[5] * d[21] * d[22] * d[56] + d[1] * std::pow(d[22], 2) * d[56] + 2 * d[5] * d[18] * d[23] * d[56] - 2 * d[4] * d[21] * d[23] * d[56] - 2 * d[3] * d[22] * d[23] * d[56] + d[0] * std::pow(d[23], 2) * d[56];
    coeffs[93] = 2 * d[6] * d[11] * d[28] * d[51] - 2 * d[8] * d[13] * d[28] * d[51] + 2 * d[2] * d[15] * d[28] * d[51] - 2 * d[4] * d[17] * d[28] * d[51] + 2 * d[6] * d[10] * d[29] * d[51] - 2 * d[7] * d[12] * d[29] * d[51] + 2 * d[1] * d[15] * d[29] * d[51] - 2 * d[3] * d[16] * d[29] * d[51] - 2 * d[7] * d[11] * d[30] * d[51] + 2 * d[8] * d[14] * d[30] * d[51] - 2 * d[2] * d[16] * d[30] * d[51] + 2 * d[5] * d[17] * d[30] * d[51] - 2 * d[8] * d[10] * d[31] * d[51] + 2 * d[7] * d[14] * d[31] * d[51] + 2 * d[5] * d[16] * d[31] * d[51] - 2 * d[1] * d[17] * d[31] * d[51] + 2 * d[8] * d[12] * d[32] * d[51] + 2 * d[7] * d[13] * d[32] * d[51] - 4 * d[6] * d[14] * d[32] * d[51] - 4 * d[5] * d[15] * d[32] * d[51] + 2 * d[4] * d[16] * d[32] * d[51] + 2 * d[3] * d[17] * d[32] * d[51] + 2 * d[2] * d[10] * d[33] * d[51] + 2 * d[1] * d[11] * d[33] * d[51] - 4 * d[5] * d[14] * d[33] * d[51] - 2 * d[3] * d[11] * d[34] * d[51] - 2 * d[2] * d[12] * d[34] * d[51] + 2 * d[5] * d[13] * d[34] * d[51] + 2 * d[4] * d[14] * d[34] * d[51] - 2 * d[4] * d[10] * d[35] * d[51] + 2 * d[5] * d[12] * d[35] * d[51] - 2 * d[1] * d[13] * d[35] * d[51] + 2 * d[3] * d[14] * d[35] * d[51] + d[11] * d[28] * std::pow(d[51], 2) + d[10] * d[29] * std::pow(d[51], 2) - 2 * d[14] * d[32] * std::pow(d[51], 2) + 2 * d[7] * d[11] * d[27] * d[52] - 2 * d[8] * d[14] * d[27] * d[52] + 2 * d[2] * d[16] * d[27] * d[52] - 2 * d[5] * d[17] * d[27] * d[52] + 2 * d[7] * d[9] * d[29] * d[52] - 2 * d[6] * d[12] * d[29] * d[52] - 2 * d[3] * d[15] * d[29] * d[52] + 2 * d[0] * d[16] * d[29] * d[52] - 2 * d[6] * d[11] * d[30] * d[52] + 2 * d[8] * d[13] * d[30] * d[52] - 2 * d[2] * d[15] * d[30] * d[52] + 2 * d[4] * d[17] * d[30] * d[52] + 2 * d[8] * d[12] * d[31] * d[52] - 4 * d[7] * d[13] * d[31] * d[52] + 2 * d[6] * d[14] * d[31] * d[52] + 2 * d[5] * d[15] * d[31] * d[52] - 4 * d[4] * d[16] * d[31] * d[52] + 2 * d[3] * d[17] * d[31] * d[52] - 2 * d[8] * d[9] * d[32] * d[52] + 2 * d[6] * d[13] * d[32] * d[52] + 2 * d[4] * d[15] * d[32] * d[52] - 2 * d[0] * d[17] * d[32] * d[52] - 2 * d[3] * d[11] * d[33] * d[52] - 2 * d[2] * d[12] * d[33] * d[52] + 2 * d[5] * d[13] * d[33] * d[52] + 2 * d[4] * d[14] * d[33] * d[52] + 2 * d[2] * d[9] * d[34] * d[52] + 2 * d[0] * d[11] * d[34] * d[52] - 4 * d[4] * d[13] * d[34] * d[52] - 2 * d[5] * d[9] * d[35] * d[52] + 2 * d[4] * d[12] * d[35] * d[52] + 2 * d[3] * d[13] * d[35] * d[52] - 2 * d[0] * d[14] * d[35] * d[52] - 2 * d[12] * d[29] * d[51] * d[52] - 2 * d[11] * d[30] * d[51] * d[52] + 2 * d[14] * d[31] * d[51] * d[52] + 2 * d[13] * d[32] * d[51] * d[52] + d[11] * d[27] * std::pow(d[52], 2) + d[9] * d[29] * std::pow(d[52], 2) - 2 * d[13] * d[31] * std::pow(d[52], 2) + 2 * d[8] * d[10] * d[27] * d[53] - 2 * d[7] * d[14] * d[27] * d[53] - 2 * d[5] * d[16] * d[27] * d[53] + 2 * d[1] * d[17] * d[27] * d[53] + 2 * d[8] * d[9] * d[28] * d[53] - 2 * d[6] * d[13] * d[28] * d[53] - 2 * d[4] * d[15] * d[28] * d[53] + 2 * d[0] * d[17] * d[28] * d[53] - 4 * d[8] * d[12] * d[30] * d[53] + 2 * d[7] * d[13] * d[30] * d[53] + 2 * d[6] * d[14] * d[30] * d[53] + 2 * d[5] * d[15] * d[30] * d[53] + 2 * d[4] * d[16] * d[30] * d[53] - 4 * d[3] * d[17] * d[30] * d[53] - 2 * d[6] * d[10] * d[31] * d[53] + 2 * d[7] * d[12] * d[31] * d[53] - 2 * d[1] * d[15] * d[31] * d[53] + 2 * d[3] * d[16] * d[31] * d[53] - 2 * d[7] * d[9] * d[32] * d[53] + 2 * d[6] * d[12] * d[32] * d[53] + 2 * d[3] * d[15] * d[32] * d[53] - 2 * d[0] * d[16] * d[32] * d[53] - 2 * d[4] * d[10] * d[33] * d[53] + 2 * d[5] * d[12] * d[33] * d[53] - 2 * d[1] * d[13] * d[33] * d[53] + 2 * d[3] * d[14] * d[33] * d[53] - 2 * d[5] * d[9] * d[34] * d[53] + 2 * d[4] * d[12] * d[34] * d[53] + 2 * d[3] * d[13] * d[34] * d[53] - 2 * d[0] * d[14] * d[34] * d[53] + 2 * d[1] * d[9] * d[35] * d[53] + 2 * d[0] * d[10] * d[35] * d[53] - 4 * d[3] * d[12] * d[35] * d[53] - 2 * d[13] * d[28] * d[51] * d[53] + 2 * d[14] * d[30] * d[51] * d[53] - 2 * d[10] * d[31] * d[51] * d[53] + 2 * d[12] * d[32] * d[51] * d[53] - 2 * d[14] * d[27] * d[52] * d[53] + 2 * d[13] * d[30] * d[52] * d[53] + 2 * d[12] * d[31] * d[52] * d[53] - 2 * d[9] * d[32] * d[52] * d[53] + d[10] * d[27] * std::pow(d[53], 2) + d[9] * d[28] * std::pow(d[53], 2) - 2 * d[12] * d[30] * std::pow(d[53], 2) - d[2] * d[10] * d[27] * d[56] - d[1] * d[11] * d[27] * d[56] + 2 * d[5] * d[14] * d[27] * d[56] - d[2] * d[9] * d[28] * d[56] - d[0] * d[11] * d[28] * d[56] + 2 * d[4] * d[13] * d[28] * d[56] - d[1] * d[9] * d[29] * d[56] - d[0] * d[10] * d[29] * d[56] + 2 * d[3] * d[12] * d[29] * d[56] + 2 * d[3] * d[11] * d[30] * d[56] + 2 * d[2] * d[12] * d[30] * d[56] - 2 * d[5] * d[13] * d[30] * d[56] - 2 * d[4] * d[14] * d[30] * d[56] + 2 * d[4] * d[10] * d[31] * d[56] - 2 * d[5] * d[12] * d[31] * d[56] + 2 * d[1] * d[13] * d[31] * d[56] - 2 * d[3] * d[14] * d[31] * d[56] + 2 * d[5] * d[9] * d[32] * d[56] - 2 * d[4] * d[12] * d[32] * d[56] - 2 * d[3] * d[13] * d[32] * d[56] + 2 * d[0] * d[14] * d[32] * d[56];
    coeffs[94] = 2 * d[6] * d[20] * d[28] * d[51] - 2 * d[8] * d[22] * d[28] * d[51] + 2 * d[2] * d[24] * d[28] * d[51] - 2 * d[4] * d[26] * d[28] * d[51] + 2 * d[6] * d[19] * d[29] * d[51] - 2 * d[7] * d[21] * d[29] * d[51] + 2 * d[1] * d[24] * d[29] * d[51] - 2 * d[3] * d[25] * d[29] * d[51] - 2 * d[7] * d[20] * d[30] * d[51] + 2 * d[8] * d[23] * d[30] * d[51] - 2 * d[2] * d[25] * d[30] * d[51] + 2 * d[5] * d[26] * d[30] * d[51] - 2 * d[8] * d[19] * d[31] * d[51] + 2 * d[7] * d[23] * d[31] * d[51] + 2 * d[5] * d[25] * d[31] * d[51] - 2 * d[1] * d[26] * d[31] * d[51] + 2 * d[8] * d[21] * d[32] * d[51] + 2 * d[7] * d[22] * d[32] * d[51] - 4 * d[6] * d[23] * d[32] * d[51] - 4 * d[5] * d[24] * d[32] * d[51] + 2 * d[4] * d[25] * d[32] * d[51] + 2 * d[3] * d[26] * d[32] * d[51] + 2 * d[2] * d[19] * d[33] * d[51] + 2 * d[1] * d[20] * d[33] * d[51] - 4 * d[5] * d[23] * d[33] * d[51] - 2 * d[3] * d[20] * d[34] * d[51] - 2 * d[2] * d[21] * d[34] * d[51] + 2 * d[5] * d[22] * d[34] * d[51] + 2 * d[4] * d[23] * d[34] * d[51] - 2 * d[4] * d[19] * d[35] * d[51] + 2 * d[5] * d[21] * d[35] * d[51] - 2 * d[1] * d[22] * d[35] * d[51] + 2 * d[3] * d[23] * d[35] * d[51] + d[20] * d[28] * std::pow(d[51], 2) + d[19] * d[29] * std::pow(d[51], 2) - 2 * d[23] * d[32] * std::pow(d[51], 2) + 2 * d[7] * d[20] * d[27] * d[52] - 2 * d[8] * d[23] * d[27] * d[52] + 2 * d[2] * d[25] * d[27] * d[52] - 2 * d[5] * d[26] * d[27] * d[52] + 2 * d[7] * d[18] * d[29] * d[52] - 2 * d[6] * d[21] * d[29] * d[52] - 2 * d[3] * d[24] * d[29] * d[52] + 2 * d[0] * d[25] * d[29] * d[52] - 2 * d[6] * d[20] * d[30] * d[52] + 2 * d[8] * d[22] * d[30] * d[52] - 2 * d[2] * d[24] * d[30] * d[52] + 2 * d[4] * d[26] * d[30] * d[52] + 2 * d[8] * d[21] * d[31] * d[52] - 4 * d[7] * d[22] * d[31] * d[52] + 2 * d[6] * d[23] * d[31] * d[52] + 2 * d[5] * d[24] * d[31] * d[52] - 4 * d[4] * d[25] * d[31] * d[52] + 2 * d[3] * d[26] * d[31] * d[52] - 2 * d[8] * d[18] * d[32] * d[52] + 2 * d[6] * d[22] * d[32] * d[52] + 2 * d[4] * d[24] * d[32] * d[52] - 2 * d[0] * d[26] * d[32] * d[52] - 2 * d[3] * d[20] * d[33] * d[52] - 2 * d[2] * d[21] * d[33] * d[52] + 2 * d[5] * d[22] * d[33] * d[52] + 2 * d[4] * d[23] * d[33] * d[52] + 2 * d[2] * d[18] * d[34] * d[52] + 2 * d[0] * d[20] * d[34] * d[52] - 4 * d[4] * d[22] * d[34] * d[52] - 2 * d[5] * d[18] * d[35] * d[52] + 2 * d[4] * d[21] * d[35] * d[52] + 2 * d[3] * d[22] * d[35] * d[52] - 2 * d[0] * d[23] * d[35] * d[52] - 2 * d[21] * d[29] * d[51] * d[52] - 2 * d[20] * d[30] * d[51] * d[52] + 2 * d[23] * d[31] * d[51] * d[52] + 2 * d[22] * d[32] * d[51] * d[52] + d[20] * d[27] * std::pow(d[52], 2) + d[18] * d[29] * std::pow(d[52], 2) - 2 * d[22] * d[31] * std::pow(d[52], 2) + 2 * d[8] * d[19] * d[27] * d[53] - 2 * d[7] * d[23] * d[27] * d[53] - 2 * d[5] * d[25] * d[27] * d[53] + 2 * d[1] * d[26] * d[27] * d[53] + 2 * d[8] * d[18] * d[28] * d[53] - 2 * d[6] * d[22] * d[28] * d[53] - 2 * d[4] * d[24] * d[28] * d[53] + 2 * d[0] * d[26] * d[28] * d[53] - 4 * d[8] * d[21] * d[30] * d[53] + 2 * d[7] * d[22] * d[30] * d[53] + 2 * d[6] * d[23] * d[30] * d[53] + 2 * d[5] * d[24] * d[30] * d[53] + 2 * d[4] * d[25] * d[30] * d[53] - 4 * d[3] * d[26] * d[30] * d[53] - 2 * d[6] * d[19] * d[31] * d[53] + 2 * d[7] * d[21] * d[31] * d[53] - 2 * d[1] * d[24] * d[31] * d[53] + 2 * d[3] * d[25] * d[31] * d[53] - 2 * d[7] * d[18] * d[32] * d[53] + 2 * d[6] * d[21] * d[32] * d[53] + 2 * d[3] * d[24] * d[32] * d[53] - 2 * d[0] * d[25] * d[32] * d[53] - 2 * d[4] * d[19] * d[33] * d[53] + 2 * d[5] * d[21] * d[33] * d[53] - 2 * d[1] * d[22] * d[33] * d[53] + 2 * d[3] * d[23] * d[33] * d[53] - 2 * d[5] * d[18] * d[34] * d[53] + 2 * d[4] * d[21] * d[34] * d[53] + 2 * d[3] * d[22] * d[34] * d[53] - 2 * d[0] * d[23] * d[34] * d[53] + 2 * d[1] * d[18] * d[35] * d[53] + 2 * d[0] * d[19] * d[35] * d[53] - 4 * d[3] * d[21] * d[35] * d[53] - 2 * d[22] * d[28] * d[51] * d[53] + 2 * d[23] * d[30] * d[51] * d[53] - 2 * d[19] * d[31] * d[51] * d[53] + 2 * d[21] * d[32] * d[51] * d[53] - 2 * d[23] * d[27] * d[52] * d[53] + 2 * d[22] * d[30] * d[52] * d[53] + 2 * d[21] * d[31] * d[52] * d[53] - 2 * d[18] * d[32] * d[52] * d[53] + d[19] * d[27] * std::pow(d[53], 2) + d[18] * d[28] * std::pow(d[53], 2) - 2 * d[21] * d[30] * std::pow(d[53], 2) - d[2] * d[19] * d[27] * d[56] - d[1] * d[20] * d[27] * d[56] + 2 * d[5] * d[23] * d[27] * d[56] - d[2] * d[18] * d[28] * d[56] - d[0] * d[20] * d[28] * d[56] + 2 * d[4] * d[22] * d[28] * d[56] - d[1] * d[18] * d[29] * d[56] - d[0] * d[19] * d[29] * d[56] + 2 * d[3] * d[21] * d[29] * d[56] + 2 * d[3] * d[20] * d[30] * d[56] + 2 * d[2] * d[21] * d[30] * d[56] - 2 * d[5] * d[22] * d[30] * d[56] - 2 * d[4] * d[23] * d[30] * d[56] + 2 * d[4] * d[19] * d[31] * d[56] - 2 * d[5] * d[21] * d[31] * d[56] + 2 * d[1] * d[22] * d[31] * d[56] - 2 * d[3] * d[23] * d[31] * d[56] + 2 * d[5] * d[18] * d[32] * d[56] - 2 * d[4] * d[21] * d[32] * d[56] - 2 * d[3] * d[22] * d[32] * d[56] + 2 * d[0] * d[23] * d[32] * d[56];
    coeffs[95] = 2 * d[6] * d[28] * d[29] * d[51] - 2 * d[7] * d[29] * d[30] * d[51] - 2 * d[8] * d[28] * d[31] * d[51] + 2 * d[8] * d[30] * d[32] * d[51] + 2 * d[7] * d[31] * d[32] * d[51] - 2 * d[6] * std::pow(d[32], 2) * d[51] + 2 * d[2] * d[28] * d[33] * d[51] + 2 * d[1] * d[29] * d[33] * d[51] - 4 * d[5] * d[32] * d[33] * d[51] - 2 * d[3] * d[29] * d[34] * d[51] - 2 * d[2] * d[30] * d[34] * d[51] + 2 * d[5] * d[31] * d[34] * d[51] + 2 * d[4] * d[32] * d[34] * d[51] - 2 * d[4] * d[28] * d[35] * d[51] + 2 * d[5] * d[30] * d[35] * d[51] - 2 * d[1] * d[31] * d[35] * d[51] + 2 * d[3] * d[32] * d[35] * d[51] + d[28] * d[29] * std::pow(d[51], 2) - std::pow(d[32], 2) * std::pow(d[51], 2) + 2 * d[7] * d[27] * d[29] * d[52] - 2 * d[6] * d[29] * d[30] * d[52] + 2 * d[8] * d[30] * d[31] * d[52] - 2 * d[7] * std::pow(d[31], 2) * d[52] - 2 * d[8] * d[27] * d[32] * d[52] + 2 * d[6] * d[31] * d[32] * d[52] - 2 * d[3] * d[29] * d[33] * d[52] - 2 * d[2] * d[30] * d[33] * d[52] + 2 * d[5] * d[31] * d[33] * d[52] + 2 * d[4] * d[32] * d[33] * d[52] + 2 * d[2] * d[27] * d[34] * d[52] + 2 * d[0] * d[29] * d[34] * d[52] - 4 * d[4] * d[31] * d[34] * d[52] - 2 * d[5] * d[27] * d[35] * d[52] + 2 * d[4] * d[30] * d[35] * d[52] + 2 * d[3] * d[31] * d[35] * d[52] - 2 * d[0] * d[32] * d[35] * d[52] - 2 * d[29] * d[30] * d[51] * d[52] + 2 * d[31] * d[32] * d[51] * d[52] + d[27] * d[29] * std::pow(d[52], 2) - std::pow(d[31], 2) * std::pow(d[52], 2) + 2 * d[8] * d[27] * d[28] * d[53] - 2 * d[8] * std::pow(d[30], 2) * d[53] - 2 * d[6] * d[28] * d[31] * d[53] + 2 * d[7] * d[30] * d[31] * d[53] - 2 * d[7] * d[27] * d[32] * d[53] + 2 * d[6] * d[30] * d[32] * d[53] - 2 * d[4] * d[28] * d[33] * d[53] + 2 * d[5] * d[30] * d[33] * d[53] - 2 * d[1] * d[31] * d[33] * d[53] + 2 * d[3] * d[32] * d[33] * d[53] - 2 * d[5] * d[27] * d[34] * d[53] + 2 * d[4] * d[30] * d[34] * d[53] + 2 * d[3] * d[31] * d[34] * d[53] - 2 * d[0] * d[32] * d[34] * d[53] + 2 * d[1] * d[27] * d[35] * d[53] + 2 * d[0] * d[28] * d[35] * d[53] - 4 * d[3] * d[30] * d[35] * d[53] - 2 * d[28] * d[31] * d[51] * d[53] + 2 * d[30] * d[32] * d[51] * d[53] + 2 * d[30] * d[31] * d[52] * d[53] - 2 * d[27] * d[32] * d[52] * d[53] + d[27] * d[28] * std::pow(d[53], 2) - std::pow(d[30], 2) * std::pow(d[53], 2) - d[2] * d[27] * d[28] * d[56] - d[1] * d[27] * d[29] * d[56] - d[0] * d[28] * d[29] * d[56] + 2 * d[3] * d[29] * d[30] * d[56] + d[2] * std::pow(d[30], 2) * d[56] + 2 * d[4] * d[28] * d[31] * d[56] - 2 * d[5] * d[30] * d[31] * d[56] + d[1] * std::pow(d[31], 2) * d[56] + 2 * d[5] * d[27] * d[32] * d[56] - 2 * d[4] * d[30] * d[32] * d[56] - 2 * d[3] * d[31] * d[32] * d[56] + d[0] * std::pow(d[32], 2) * d[56];
    coeffs[96] = 2 * d[6] * d[11] * d[37] * d[51] - 2 * d[8] * d[13] * d[37] * d[51] + 2 * d[2] * d[15] * d[37] * d[51] - 2 * d[4] * d[17] * d[37] * d[51] + 2 * d[6] * d[10] * d[38] * d[51] - 2 * d[7] * d[12] * d[38] * d[51] + 2 * d[1] * d[15] * d[38] * d[51] - 2 * d[3] * d[16] * d[38] * d[51] - 2 * d[7] * d[11] * d[39] * d[51] + 2 * d[8] * d[14] * d[39] * d[51] - 2 * d[2] * d[16] * d[39] * d[51] + 2 * d[5] * d[17] * d[39] * d[51] - 2 * d[8] * d[10] * d[40] * d[51] + 2 * d[7] * d[14] * d[40] * d[51] + 2 * d[5] * d[16] * d[40] * d[51] - 2 * d[1] * d[17] * d[40] * d[51] + 2 * d[8] * d[12] * d[41] * d[51] + 2 * d[7] * d[13] * d[41] * d[51] - 4 * d[6] * d[14] * d[41] * d[51] - 4 * d[5] * d[15] * d[41] * d[51] + 2 * d[4] * d[16] * d[41] * d[51] + 2 * d[3] * d[17] * d[41] * d[51] + 2 * d[2] * d[10] * d[42] * d[51] + 2 * d[1] * d[11] * d[42] * d[51] - 4 * d[5] * d[14] * d[42] * d[51] - 2 * d[3] * d[11] * d[43] * d[51] - 2 * d[2] * d[12] * d[43] * d[51] + 2 * d[5] * d[13] * d[43] * d[51] + 2 * d[4] * d[14] * d[43] * d[51] - 2 * d[4] * d[10] * d[44] * d[51] + 2 * d[5] * d[12] * d[44] * d[51] - 2 * d[1] * d[13] * d[44] * d[51] + 2 * d[3] * d[14] * d[44] * d[51] + d[11] * d[37] * std::pow(d[51], 2) + d[10] * d[38] * std::pow(d[51], 2) - 2 * d[14] * d[41] * std::pow(d[51], 2) + 2 * d[7] * d[11] * d[36] * d[52] - 2 * d[8] * d[14] * d[36] * d[52] + 2 * d[2] * d[16] * d[36] * d[52] - 2 * d[5] * d[17] * d[36] * d[52] + 2 * d[7] * d[9] * d[38] * d[52] - 2 * d[6] * d[12] * d[38] * d[52] - 2 * d[3] * d[15] * d[38] * d[52] + 2 * d[0] * d[16] * d[38] * d[52] - 2 * d[6] * d[11] * d[39] * d[52] + 2 * d[8] * d[13] * d[39] * d[52] - 2 * d[2] * d[15] * d[39] * d[52] + 2 * d[4] * d[17] * d[39] * d[52] + 2 * d[8] * d[12] * d[40] * d[52] - 4 * d[7] * d[13] * d[40] * d[52] + 2 * d[6] * d[14] * d[40] * d[52] + 2 * d[5] * d[15] * d[40] * d[52] - 4 * d[4] * d[16] * d[40] * d[52] + 2 * d[3] * d[17] * d[40] * d[52] - 2 * d[8] * d[9] * d[41] * d[52] + 2 * d[6] * d[13] * d[41] * d[52] + 2 * d[4] * d[15] * d[41] * d[52] - 2 * d[0] * d[17] * d[41] * d[52] - 2 * d[3] * d[11] * d[42] * d[52] - 2 * d[2] * d[12] * d[42] * d[52] + 2 * d[5] * d[13] * d[42] * d[52] + 2 * d[4] * d[14] * d[42] * d[52] + 2 * d[2] * d[9] * d[43] * d[52] + 2 * d[0] * d[11] * d[43] * d[52] - 4 * d[4] * d[13] * d[43] * d[52] - 2 * d[5] * d[9] * d[44] * d[52] + 2 * d[4] * d[12] * d[44] * d[52] + 2 * d[3] * d[13] * d[44] * d[52] - 2 * d[0] * d[14] * d[44] * d[52] - 2 * d[12] * d[38] * d[51] * d[52] - 2 * d[11] * d[39] * d[51] * d[52] + 2 * d[14] * d[40] * d[51] * d[52] + 2 * d[13] * d[41] * d[51] * d[52] + d[11] * d[36] * std::pow(d[52], 2) + d[9] * d[38] * std::pow(d[52], 2) - 2 * d[13] * d[40] * std::pow(d[52], 2) + 2 * d[8] * d[10] * d[36] * d[53] - 2 * d[7] * d[14] * d[36] * d[53] - 2 * d[5] * d[16] * d[36] * d[53] + 2 * d[1] * d[17] * d[36] * d[53] + 2 * d[8] * d[9] * d[37] * d[53] - 2 * d[6] * d[13] * d[37] * d[53] - 2 * d[4] * d[15] * d[37] * d[53] + 2 * d[0] * d[17] * d[37] * d[53] - 4 * d[8] * d[12] * d[39] * d[53] + 2 * d[7] * d[13] * d[39] * d[53] + 2 * d[6] * d[14] * d[39] * d[53] + 2 * d[5] * d[15] * d[39] * d[53] + 2 * d[4] * d[16] * d[39] * d[53] - 4 * d[3] * d[17] * d[39] * d[53] - 2 * d[6] * d[10] * d[40] * d[53] + 2 * d[7] * d[12] * d[40] * d[53] - 2 * d[1] * d[15] * d[40] * d[53] + 2 * d[3] * d[16] * d[40] * d[53] - 2 * d[7] * d[9] * d[41] * d[53] + 2 * d[6] * d[12] * d[41] * d[53] + 2 * d[3] * d[15] * d[41] * d[53] - 2 * d[0] * d[16] * d[41] * d[53] - 2 * d[4] * d[10] * d[42] * d[53] + 2 * d[5] * d[12] * d[42] * d[53] - 2 * d[1] * d[13] * d[42] * d[53] + 2 * d[3] * d[14] * d[42] * d[53] - 2 * d[5] * d[9] * d[43] * d[53] + 2 * d[4] * d[12] * d[43] * d[53] + 2 * d[3] * d[13] * d[43] * d[53] - 2 * d[0] * d[14] * d[43] * d[53] + 2 * d[1] * d[9] * d[44] * d[53] + 2 * d[0] * d[10] * d[44] * d[53] - 4 * d[3] * d[12] * d[44] * d[53] - 2 * d[13] * d[37] * d[51] * d[53] + 2 * d[14] * d[39] * d[51] * d[53] - 2 * d[10] * d[40] * d[51] * d[53] + 2 * d[12] * d[41] * d[51] * d[53] - 2 * d[14] * d[36] * d[52] * d[53] + 2 * d[13] * d[39] * d[52] * d[53] + 2 * d[12] * d[40] * d[52] * d[53] - 2 * d[9] * d[41] * d[52] * d[53] + d[10] * d[36] * std::pow(d[53], 2) + d[9] * d[37] * std::pow(d[53], 2) - 2 * d[12] * d[39] * std::pow(d[53], 2) - d[2] * d[10] * d[36] * d[56] - d[1] * d[11] * d[36] * d[56] + 2 * d[5] * d[14] * d[36] * d[56] - d[2] * d[9] * d[37] * d[56] - d[0] * d[11] * d[37] * d[56] + 2 * d[4] * d[13] * d[37] * d[56] - d[1] * d[9] * d[38] * d[56] - d[0] * d[10] * d[38] * d[56] + 2 * d[3] * d[12] * d[38] * d[56] + 2 * d[3] * d[11] * d[39] * d[56] + 2 * d[2] * d[12] * d[39] * d[56] - 2 * d[5] * d[13] * d[39] * d[56] - 2 * d[4] * d[14] * d[39] * d[56] + 2 * d[4] * d[10] * d[40] * d[56] - 2 * d[5] * d[12] * d[40] * d[56] + 2 * d[1] * d[13] * d[40] * d[56] - 2 * d[3] * d[14] * d[40] * d[56] + 2 * d[5] * d[9] * d[41] * d[56] - 2 * d[4] * d[12] * d[41] * d[56] - 2 * d[3] * d[13] * d[41] * d[56] + 2 * d[0] * d[14] * d[41] * d[56];
    coeffs[97] = 2 * d[6] * d[20] * d[37] * d[51] - 2 * d[8] * d[22] * d[37] * d[51] + 2 * d[2] * d[24] * d[37] * d[51] - 2 * d[4] * d[26] * d[37] * d[51] + 2 * d[6] * d[19] * d[38] * d[51] - 2 * d[7] * d[21] * d[38] * d[51] + 2 * d[1] * d[24] * d[38] * d[51] - 2 * d[3] * d[25] * d[38] * d[51] - 2 * d[7] * d[20] * d[39] * d[51] + 2 * d[8] * d[23] * d[39] * d[51] - 2 * d[2] * d[25] * d[39] * d[51] + 2 * d[5] * d[26] * d[39] * d[51] - 2 * d[8] * d[19] * d[40] * d[51] + 2 * d[7] * d[23] * d[40] * d[51] + 2 * d[5] * d[25] * d[40] * d[51] - 2 * d[1] * d[26] * d[40] * d[51] + 2 * d[8] * d[21] * d[41] * d[51] + 2 * d[7] * d[22] * d[41] * d[51] - 4 * d[6] * d[23] * d[41] * d[51] - 4 * d[5] * d[24] * d[41] * d[51] + 2 * d[4] * d[25] * d[41] * d[51] + 2 * d[3] * d[26] * d[41] * d[51] + 2 * d[2] * d[19] * d[42] * d[51] + 2 * d[1] * d[20] * d[42] * d[51] - 4 * d[5] * d[23] * d[42] * d[51] - 2 * d[3] * d[20] * d[43] * d[51] - 2 * d[2] * d[21] * d[43] * d[51] + 2 * d[5] * d[22] * d[43] * d[51] + 2 * d[4] * d[23] * d[43] * d[51] - 2 * d[4] * d[19] * d[44] * d[51] + 2 * d[5] * d[21] * d[44] * d[51] - 2 * d[1] * d[22] * d[44] * d[51] + 2 * d[3] * d[23] * d[44] * d[51] + d[20] * d[37] * std::pow(d[51], 2) + d[19] * d[38] * std::pow(d[51], 2) - 2 * d[23] * d[41] * std::pow(d[51], 2) + 2 * d[7] * d[20] * d[36] * d[52] - 2 * d[8] * d[23] * d[36] * d[52] + 2 * d[2] * d[25] * d[36] * d[52] - 2 * d[5] * d[26] * d[36] * d[52] + 2 * d[7] * d[18] * d[38] * d[52] - 2 * d[6] * d[21] * d[38] * d[52] - 2 * d[3] * d[24] * d[38] * d[52] + 2 * d[0] * d[25] * d[38] * d[52] - 2 * d[6] * d[20] * d[39] * d[52] + 2 * d[8] * d[22] * d[39] * d[52] - 2 * d[2] * d[24] * d[39] * d[52] + 2 * d[4] * d[26] * d[39] * d[52] + 2 * d[8] * d[21] * d[40] * d[52] - 4 * d[7] * d[22] * d[40] * d[52] + 2 * d[6] * d[23] * d[40] * d[52] + 2 * d[5] * d[24] * d[40] * d[52] - 4 * d[4] * d[25] * d[40] * d[52] + 2 * d[3] * d[26] * d[40] * d[52] - 2 * d[8] * d[18] * d[41] * d[52] + 2 * d[6] * d[22] * d[41] * d[52] + 2 * d[4] * d[24] * d[41] * d[52] - 2 * d[0] * d[26] * d[41] * d[52] - 2 * d[3] * d[20] * d[42] * d[52] - 2 * d[2] * d[21] * d[42] * d[52] + 2 * d[5] * d[22] * d[42] * d[52] + 2 * d[4] * d[23] * d[42] * d[52] + 2 * d[2] * d[18] * d[43] * d[52] + 2 * d[0] * d[20] * d[43] * d[52] - 4 * d[4] * d[22] * d[43] * d[52] - 2 * d[5] * d[18] * d[44] * d[52] + 2 * d[4] * d[21] * d[44] * d[52] + 2 * d[3] * d[22] * d[44] * d[52] - 2 * d[0] * d[23] * d[44] * d[52] - 2 * d[21] * d[38] * d[51] * d[52] - 2 * d[20] * d[39] * d[51] * d[52] + 2 * d[23] * d[40] * d[51] * d[52] + 2 * d[22] * d[41] * d[51] * d[52] + d[20] * d[36] * std::pow(d[52], 2) + d[18] * d[38] * std::pow(d[52], 2) - 2 * d[22] * d[40] * std::pow(d[52], 2) + 2 * d[8] * d[19] * d[36] * d[53] - 2 * d[7] * d[23] * d[36] * d[53] - 2 * d[5] * d[25] * d[36] * d[53] + 2 * d[1] * d[26] * d[36] * d[53] + 2 * d[8] * d[18] * d[37] * d[53] - 2 * d[6] * d[22] * d[37] * d[53] - 2 * d[4] * d[24] * d[37] * d[53] + 2 * d[0] * d[26] * d[37] * d[53] - 4 * d[8] * d[21] * d[39] * d[53] + 2 * d[7] * d[22] * d[39] * d[53] + 2 * d[6] * d[23] * d[39] * d[53] + 2 * d[5] * d[24] * d[39] * d[53] + 2 * d[4] * d[25] * d[39] * d[53] - 4 * d[3] * d[26] * d[39] * d[53] - 2 * d[6] * d[19] * d[40] * d[53] + 2 * d[7] * d[21] * d[40] * d[53] - 2 * d[1] * d[24] * d[40] * d[53] + 2 * d[3] * d[25] * d[40] * d[53] - 2 * d[7] * d[18] * d[41] * d[53] + 2 * d[6] * d[21] * d[41] * d[53] + 2 * d[3] * d[24] * d[41] * d[53] - 2 * d[0] * d[25] * d[41] * d[53] - 2 * d[4] * d[19] * d[42] * d[53] + 2 * d[5] * d[21] * d[42] * d[53] - 2 * d[1] * d[22] * d[42] * d[53] + 2 * d[3] * d[23] * d[42] * d[53] - 2 * d[5] * d[18] * d[43] * d[53] + 2 * d[4] * d[21] * d[43] * d[53] + 2 * d[3] * d[22] * d[43] * d[53] - 2 * d[0] * d[23] * d[43] * d[53] + 2 * d[1] * d[18] * d[44] * d[53] + 2 * d[0] * d[19] * d[44] * d[53] - 4 * d[3] * d[21] * d[44] * d[53] - 2 * d[22] * d[37] * d[51] * d[53] + 2 * d[23] * d[39] * d[51] * d[53] - 2 * d[19] * d[40] * d[51] * d[53] + 2 * d[21] * d[41] * d[51] * d[53] - 2 * d[23] * d[36] * d[52] * d[53] + 2 * d[22] * d[39] * d[52] * d[53] + 2 * d[21] * d[40] * d[52] * d[53] - 2 * d[18] * d[41] * d[52] * d[53] + d[19] * d[36] * std::pow(d[53], 2) + d[18] * d[37] * std::pow(d[53], 2) - 2 * d[21] * d[39] * std::pow(d[53], 2) - d[2] * d[19] * d[36] * d[56] - d[1] * d[20] * d[36] * d[56] + 2 * d[5] * d[23] * d[36] * d[56] - d[2] * d[18] * d[37] * d[56] - d[0] * d[20] * d[37] * d[56] + 2 * d[4] * d[22] * d[37] * d[56] - d[1] * d[18] * d[38] * d[56] - d[0] * d[19] * d[38] * d[56] + 2 * d[3] * d[21] * d[38] * d[56] + 2 * d[3] * d[20] * d[39] * d[56] + 2 * d[2] * d[21] * d[39] * d[56] - 2 * d[5] * d[22] * d[39] * d[56] - 2 * d[4] * d[23] * d[39] * d[56] + 2 * d[4] * d[19] * d[40] * d[56] - 2 * d[5] * d[21] * d[40] * d[56] + 2 * d[1] * d[22] * d[40] * d[56] - 2 * d[3] * d[23] * d[40] * d[56] + 2 * d[5] * d[18] * d[41] * d[56] - 2 * d[4] * d[21] * d[41] * d[56] - 2 * d[3] * d[22] * d[41] * d[56] + 2 * d[0] * d[23] * d[41] * d[56];
    coeffs[98] = 2 * d[6] * d[29] * d[37] * d[51] - 2 * d[8] * d[31] * d[37] * d[51] + 2 * d[2] * d[33] * d[37] * d[51] - 2 * d[4] * d[35] * d[37] * d[51] + 2 * d[6] * d[28] * d[38] * d[51] - 2 * d[7] * d[30] * d[38] * d[51] + 2 * d[1] * d[33] * d[38] * d[51] - 2 * d[3] * d[34] * d[38] * d[51] - 2 * d[7] * d[29] * d[39] * d[51] + 2 * d[8] * d[32] * d[39] * d[51] - 2 * d[2] * d[34] * d[39] * d[51] + 2 * d[5] * d[35] * d[39] * d[51] - 2 * d[8] * d[28] * d[40] * d[51] + 2 * d[7] * d[32] * d[40] * d[51] + 2 * d[5] * d[34] * d[40] * d[51] - 2 * d[1] * d[35] * d[40] * d[51] + 2 * d[8] * d[30] * d[41] * d[51] + 2 * d[7] * d[31] * d[41] * d[51] - 4 * d[6] * d[32] * d[41] * d[51] - 4 * d[5] * d[33] * d[41] * d[51] + 2 * d[4] * d[34] * d[41] * d[51] + 2 * d[3] * d[35] * d[41] * d[51] + 2 * d[2] * d[28] * d[42] * d[51] + 2 * d[1] * d[29] * d[42] * d[51] - 4 * d[5] * d[32] * d[42] * d[51] - 2 * d[3] * d[29] * d[43] * d[51] - 2 * d[2] * d[30] * d[43] * d[51] + 2 * d[5] * d[31] * d[43] * d[51] + 2 * d[4] * d[32] * d[43] * d[51] - 2 * d[4] * d[28] * d[44] * d[51] + 2 * d[5] * d[30] * d[44] * d[51] - 2 * d[1] * d[31] * d[44] * d[51] + 2 * d[3] * d[32] * d[44] * d[51] + d[29] * d[37] * std::pow(d[51], 2) + d[28] * d[38] * std::pow(d[51], 2) - 2 * d[32] * d[41] * std::pow(d[51], 2) + 2 * d[7] * d[29] * d[36] * d[52] - 2 * d[8] * d[32] * d[36] * d[52] + 2 * d[2] * d[34] * d[36] * d[52] - 2 * d[5] * d[35] * d[36] * d[52] + 2 * d[7] * d[27] * d[38] * d[52] - 2 * d[6] * d[30] * d[38] * d[52] - 2 * d[3] * d[33] * d[38] * d[52] + 2 * d[0] * d[34] * d[38] * d[52] - 2 * d[6] * d[29] * d[39] * d[52] + 2 * d[8] * d[31] * d[39] * d[52] - 2 * d[2] * d[33] * d[39] * d[52] + 2 * d[4] * d[35] * d[39] * d[52] + 2 * d[8] * d[30] * d[40] * d[52] - 4 * d[7] * d[31] * d[40] * d[52] + 2 * d[6] * d[32] * d[40] * d[52] + 2 * d[5] * d[33] * d[40] * d[52] - 4 * d[4] * d[34] * d[40] * d[52] + 2 * d[3] * d[35] * d[40] * d[52] - 2 * d[8] * d[27] * d[41] * d[52] + 2 * d[6] * d[31] * d[41] * d[52] + 2 * d[4] * d[33] * d[41] * d[52] - 2 * d[0] * d[35] * d[41] * d[52] - 2 * d[3] * d[29] * d[42] * d[52] - 2 * d[2] * d[30] * d[42] * d[52] + 2 * d[5] * d[31] * d[42] * d[52] + 2 * d[4] * d[32] * d[42] * d[52] + 2 * d[2] * d[27] * d[43] * d[52] + 2 * d[0] * d[29] * d[43] * d[52] - 4 * d[4] * d[31] * d[43] * d[52] - 2 * d[5] * d[27] * d[44] * d[52] + 2 * d[4] * d[30] * d[44] * d[52] + 2 * d[3] * d[31] * d[44] * d[52] - 2 * d[0] * d[32] * d[44] * d[52] - 2 * d[30] * d[38] * d[51] * d[52] - 2 * d[29] * d[39] * d[51] * d[52] + 2 * d[32] * d[40] * d[51] * d[52] + 2 * d[31] * d[41] * d[51] * d[52] + d[29] * d[36] * std::pow(d[52], 2) + d[27] * d[38] * std::pow(d[52], 2) - 2 * d[31] * d[40] * std::pow(d[52], 2) + 2 * d[8] * d[28] * d[36] * d[53] - 2 * d[7] * d[32] * d[36] * d[53] - 2 * d[5] * d[34] * d[36] * d[53] + 2 * d[1] * d[35] * d[36] * d[53] + 2 * d[8] * d[27] * d[37] * d[53] - 2 * d[6] * d[31] * d[37] * d[53] - 2 * d[4] * d[33] * d[37] * d[53] + 2 * d[0] * d[35] * d[37] * d[53] - 4 * d[8] * d[30] * d[39] * d[53] + 2 * d[7] * d[31] * d[39] * d[53] + 2 * d[6] * d[32] * d[39] * d[53] + 2 * d[5] * d[33] * d[39] * d[53] + 2 * d[4] * d[34] * d[39] * d[53] - 4 * d[3] * d[35] * d[39] * d[53] - 2 * d[6] * d[28] * d[40] * d[53] + 2 * d[7] * d[30] * d[40] * d[53] - 2 * d[1] * d[33] * d[40] * d[53] + 2 * d[3] * d[34] * d[40] * d[53] - 2 * d[7] * d[27] * d[41] * d[53] + 2 * d[6] * d[30] * d[41] * d[53] + 2 * d[3] * d[33] * d[41] * d[53] - 2 * d[0] * d[34] * d[41] * d[53] - 2 * d[4] * d[28] * d[42] * d[53] + 2 * d[5] * d[30] * d[42] * d[53] - 2 * d[1] * d[31] * d[42] * d[53] + 2 * d[3] * d[32] * d[42] * d[53] - 2 * d[5] * d[27] * d[43] * d[53] + 2 * d[4] * d[30] * d[43] * d[53] + 2 * d[3] * d[31] * d[43] * d[53] - 2 * d[0] * d[32] * d[43] * d[53] + 2 * d[1] * d[27] * d[44] * d[53] + 2 * d[0] * d[28] * d[44] * d[53] - 4 * d[3] * d[30] * d[44] * d[53] - 2 * d[31] * d[37] * d[51] * d[53] + 2 * d[32] * d[39] * d[51] * d[53] - 2 * d[28] * d[40] * d[51] * d[53] + 2 * d[30] * d[41] * d[51] * d[53] - 2 * d[32] * d[36] * d[52] * d[53] + 2 * d[31] * d[39] * d[52] * d[53] + 2 * d[30] * d[40] * d[52] * d[53] - 2 * d[27] * d[41] * d[52] * d[53] + d[28] * d[36] * std::pow(d[53], 2) + d[27] * d[37] * std::pow(d[53], 2) - 2 * d[30] * d[39] * std::pow(d[53], 2) - d[2] * d[28] * d[36] * d[56] - d[1] * d[29] * d[36] * d[56] + 2 * d[5] * d[32] * d[36] * d[56] - d[2] * d[27] * d[37] * d[56] - d[0] * d[29] * d[37] * d[56] + 2 * d[4] * d[31] * d[37] * d[56] - d[1] * d[27] * d[38] * d[56] - d[0] * d[28] * d[38] * d[56] + 2 * d[3] * d[30] * d[38] * d[56] + 2 * d[3] * d[29] * d[39] * d[56] + 2 * d[2] * d[30] * d[39] * d[56] - 2 * d[5] * d[31] * d[39] * d[56] - 2 * d[4] * d[32] * d[39] * d[56] + 2 * d[4] * d[28] * d[40] * d[56] - 2 * d[5] * d[30] * d[40] * d[56] + 2 * d[1] * d[31] * d[40] * d[56] - 2 * d[3] * d[32] * d[40] * d[56] + 2 * d[5] * d[27] * d[41] * d[56] - 2 * d[4] * d[30] * d[41] * d[56] - 2 * d[3] * d[31] * d[41] * d[56] + 2 * d[0] * d[32] * d[41] * d[56];
    coeffs[99] = 2 * d[6] * d[37] * d[38] * d[51] - 2 * d[7] * d[38] * d[39] * d[51] - 2 * d[8] * d[37] * d[40] * d[51] + 2 * d[8] * d[39] * d[41] * d[51] + 2 * d[7] * d[40] * d[41] * d[51] - 2 * d[6] * std::pow(d[41], 2) * d[51] + 2 * d[2] * d[37] * d[42] * d[51] + 2 * d[1] * d[38] * d[42] * d[51] - 4 * d[5] * d[41] * d[42] * d[51] - 2 * d[3] * d[38] * d[43] * d[51] - 2 * d[2] * d[39] * d[43] * d[51] + 2 * d[5] * d[40] * d[43] * d[51] + 2 * d[4] * d[41] * d[43] * d[51] - 2 * d[4] * d[37] * d[44] * d[51] + 2 * d[5] * d[39] * d[44] * d[51] - 2 * d[1] * d[40] * d[44] * d[51] + 2 * d[3] * d[41] * d[44] * d[51] + d[37] * d[38] * std::pow(d[51], 2) - std::pow(d[41], 2) * std::pow(d[51], 2) + 2 * d[7] * d[36] * d[38] * d[52] - 2 * d[6] * d[38] * d[39] * d[52] + 2 * d[8] * d[39] * d[40] * d[52] - 2 * d[7] * std::pow(d[40], 2) * d[52] - 2 * d[8] * d[36] * d[41] * d[52] + 2 * d[6] * d[40] * d[41] * d[52] - 2 * d[3] * d[38] * d[42] * d[52] - 2 * d[2] * d[39] * d[42] * d[52] + 2 * d[5] * d[40] * d[42] * d[52] + 2 * d[4] * d[41] * d[42] * d[52] + 2 * d[2] * d[36] * d[43] * d[52] + 2 * d[0] * d[38] * d[43] * d[52] - 4 * d[4] * d[40] * d[43] * d[52] - 2 * d[5] * d[36] * d[44] * d[52] + 2 * d[4] * d[39] * d[44] * d[52] + 2 * d[3] * d[40] * d[44] * d[52] - 2 * d[0] * d[41] * d[44] * d[52] - 2 * d[38] * d[39] * d[51] * d[52] + 2 * d[40] * d[41] * d[51] * d[52] + d[36] * d[38] * std::pow(d[52], 2) - std::pow(d[40], 2) * std::pow(d[52], 2) + 2 * d[8] * d[36] * d[37] * d[53] - 2 * d[8] * std::pow(d[39], 2) * d[53] - 2 * d[6] * d[37] * d[40] * d[53] + 2 * d[7] * d[39] * d[40] * d[53] - 2 * d[7] * d[36] * d[41] * d[53] + 2 * d[6] * d[39] * d[41] * d[53] - 2 * d[4] * d[37] * d[42] * d[53] + 2 * d[5] * d[39] * d[42] * d[53] - 2 * d[1] * d[40] * d[42] * d[53] + 2 * d[3] * d[41] * d[42] * d[53] - 2 * d[5] * d[36] * d[43] * d[53] + 2 * d[4] * d[39] * d[43] * d[53] + 2 * d[3] * d[40] * d[43] * d[53] - 2 * d[0] * d[41] * d[43] * d[53] + 2 * d[1] * d[36] * d[44] * d[53] + 2 * d[0] * d[37] * d[44] * d[53] - 4 * d[3] * d[39] * d[44] * d[53] - 2 * d[37] * d[40] * d[51] * d[53] + 2 * d[39] * d[41] * d[51] * d[53] + 2 * d[39] * d[40] * d[52] * d[53] - 2 * d[36] * d[41] * d[52] * d[53] + d[36] * d[37] * std::pow(d[53], 2) - std::pow(d[39], 2) * std::pow(d[53], 2) - d[2] * d[36] * d[37] * d[56] - d[1] * d[36] * d[38] * d[56] - d[0] * d[37] * d[38] * d[56] + 2 * d[3] * d[38] * d[39] * d[56] + d[2] * std::pow(d[39], 2) * d[56] + 2 * d[4] * d[37] * d[40] * d[56] - 2 * d[5] * d[39] * d[40] * d[56] + d[1] * std::pow(d[40], 2) * d[56] + 2 * d[5] * d[36] * d[41] * d[56] - 2 * d[4] * d[39] * d[41] * d[56] - 2 * d[3] * d[40] * d[41] * d[56] + d[0] * std::pow(d[41], 2) * d[56];
    coeffs[100] = 2 * d[2] * d[6] * d[10] * d[51] - 2 * d[4] * d[8] * d[10] * d[51] + 2 * d[1] * d[6] * d[11] * d[51] - 2 * d[3] * d[7] * d[11] * d[51] - 2 * d[2] * d[7] * d[12] * d[51] + 2 * d[5] * d[8] * d[12] * d[51] + 2 * d[5] * d[7] * d[13] * d[51] - 2 * d[1] * d[8] * d[13] * d[51] - 4 * d[5] * d[6] * d[14] * d[51] + 2 * d[4] * d[7] * d[14] * d[51] + 2 * d[3] * d[8] * d[14] * d[51] + 2 * d[1] * d[2] * d[15] * d[51] - 2 * std::pow(d[5], 2) * d[15] * d[51] - 2 * d[2] * d[3] * d[16] * d[51] + 2 * d[4] * d[5] * d[16] * d[51] - 2 * d[1] * d[4] * d[17] * d[51] + 2 * d[3] * d[5] * d[17] * d[51] + d[2] * d[10] * std::pow(d[51], 2) + d[1] * d[11] * std::pow(d[51], 2) - 2 * d[5] * d[14] * std::pow(d[51], 2) + 2 * d[2] * d[7] * d[9] * d[52] - 2 * d[5] * d[8] * d[9] * d[52] - 2 * d[3] * d[6] * d[11] * d[52] + 2 * d[0] * d[7] * d[11] * d[52] - 2 * d[2] * d[6] * d[12] * d[52] + 2 * d[4] * d[8] * d[12] * d[52] + 2 * d[5] * d[6] * d[13] * d[52] - 4 * d[4] * d[7] * d[13] * d[52] + 2 * d[3] * d[8] * d[13] * d[52] + 2 * d[4] * d[6] * d[14] * d[52] - 2 * d[0] * d[8] * d[14] * d[52] - 2 * d[2] * d[3] * d[15] * d[52] + 2 * d[4] * d[5] * d[15] * d[52] + 2 * d[0] * d[2] * d[16] * d[52] - 2 * std::pow(d[4], 2) * d[16] * d[52] + 2 * d[3] * d[4] * d[17] * d[52] - 2 * d[0] * d[5] * d[17] * d[52] - 2 * d[3] * d[11] * d[51] * d[52] - 2 * d[2] * d[12] * d[51] * d[52] + 2 * d[5] * d[13] * d[51] * d[52] + 2 * d[4] * d[14] * d[51] * d[52] + d[2] * d[9] * std::pow(d[52], 2) + d[0] * d[11] * std::pow(d[52], 2) - 2 * d[4] * d[13] * std::pow(d[52], 2) - 2 * d[5] * d[7] * d[9] * d[53] + 2 * d[1] * d[8] * d[9] * d[53] - 2 * d[4] * d[6] * d[10] * d[53] + 2 * d[0] * d[8] * d[10] * d[53] + 2 * d[5] * d[6] * d[12] * d[53] + 2 * d[4] * d[7] * d[12] * d[53] - 4 * d[3] * d[8] * d[12] * d[53] - 2 * d[1] * d[6] * d[13] * d[53] + 2 * d[3] * d[7] * d[13] * d[53] + 2 * d[3] * d[6] * d[14] * d[53] - 2 * d[0] * d[7] * d[14] * d[53] - 2 * d[1] * d[4] * d[15] * d[53] + 2 * d[3] * d[5] * d[15] * d[53] + 2 * d[3] * d[4] * d[16] * d[53] - 2 * d[0] * d[5] * d[16] * d[53] + 2 * d[0] * d[1] * d[17] * d[53] - 2 * std::pow(d[3], 2) * d[17] * d[53] - 2 * d[4] * d[10] * d[51] * d[53] + 2 * d[5] * d[12] * d[51] * d[53] - 2 * d[1] * d[13] * d[51] * d[53] + 2 * d[3] * d[14] * d[51] * d[53] - 2 * d[5] * d[9] * d[52] * d[53] + 2 * d[4] * d[12] * d[52] * d[53] + 2 * d[3] * d[13] * d[52] * d[53] - 2 * d[0] * d[14] * d[52] * d[53] + d[1] * d[9] * std::pow(d[53], 2) + d[0] * d[10] * std::pow(d[53], 2) - 2 * d[3] * d[12] * std::pow(d[53], 2) - d[1] * d[2] * d[9] * d[56] + std::pow(d[5], 2) * d[9] * d[56] - d[0] * d[2] * d[10] * d[56] + std::pow(d[4], 2) * d[10] * d[56] - d[0] * d[1] * d[11] * d[56] + std::pow(d[3], 2) * d[11] * d[56] + 2 * d[2] * d[3] * d[12] * d[56] - 2 * d[4] * d[5] * d[12] * d[56] + 2 * d[1] * d[4] * d[13] * d[56] - 2 * d[3] * d[5] * d[13] * d[56] - 2 * d[3] * d[4] * d[14] * d[56] + 2 * d[0] * d[5] * d[14] * d[56];
    coeffs[101] = 2 * d[2] * d[6] * d[19] * d[51] - 2 * d[4] * d[8] * d[19] * d[51] + 2 * d[1] * d[6] * d[20] * d[51] - 2 * d[3] * d[7] * d[20] * d[51] - 2 * d[2] * d[7] * d[21] * d[51] + 2 * d[5] * d[8] * d[21] * d[51] + 2 * d[5] * d[7] * d[22] * d[51] - 2 * d[1] * d[8] * d[22] * d[51] - 4 * d[5] * d[6] * d[23] * d[51] + 2 * d[4] * d[7] * d[23] * d[51] + 2 * d[3] * d[8] * d[23] * d[51] + 2 * d[1] * d[2] * d[24] * d[51] - 2 * std::pow(d[5], 2) * d[24] * d[51] - 2 * d[2] * d[3] * d[25] * d[51] + 2 * d[4] * d[5] * d[25] * d[51] - 2 * d[1] * d[4] * d[26] * d[51] + 2 * d[3] * d[5] * d[26] * d[51] + d[2] * d[19] * std::pow(d[51], 2) + d[1] * d[20] * std::pow(d[51], 2) - 2 * d[5] * d[23] * std::pow(d[51], 2) + 2 * d[2] * d[7] * d[18] * d[52] - 2 * d[5] * d[8] * d[18] * d[52] - 2 * d[3] * d[6] * d[20] * d[52] + 2 * d[0] * d[7] * d[20] * d[52] - 2 * d[2] * d[6] * d[21] * d[52] + 2 * d[4] * d[8] * d[21] * d[52] + 2 * d[5] * d[6] * d[22] * d[52] - 4 * d[4] * d[7] * d[22] * d[52] + 2 * d[3] * d[8] * d[22] * d[52] + 2 * d[4] * d[6] * d[23] * d[52] - 2 * d[0] * d[8] * d[23] * d[52] - 2 * d[2] * d[3] * d[24] * d[52] + 2 * d[4] * d[5] * d[24] * d[52] + 2 * d[0] * d[2] * d[25] * d[52] - 2 * std::pow(d[4], 2) * d[25] * d[52] + 2 * d[3] * d[4] * d[26] * d[52] - 2 * d[0] * d[5] * d[26] * d[52] - 2 * d[3] * d[20] * d[51] * d[52] - 2 * d[2] * d[21] * d[51] * d[52] + 2 * d[5] * d[22] * d[51] * d[52] + 2 * d[4] * d[23] * d[51] * d[52] + d[2] * d[18] * std::pow(d[52], 2) + d[0] * d[20] * std::pow(d[52], 2) - 2 * d[4] * d[22] * std::pow(d[52], 2) - 2 * d[5] * d[7] * d[18] * d[53] + 2 * d[1] * d[8] * d[18] * d[53] - 2 * d[4] * d[6] * d[19] * d[53] + 2 * d[0] * d[8] * d[19] * d[53] + 2 * d[5] * d[6] * d[21] * d[53] + 2 * d[4] * d[7] * d[21] * d[53] - 4 * d[3] * d[8] * d[21] * d[53] - 2 * d[1] * d[6] * d[22] * d[53] + 2 * d[3] * d[7] * d[22] * d[53] + 2 * d[3] * d[6] * d[23] * d[53] - 2 * d[0] * d[7] * d[23] * d[53] - 2 * d[1] * d[4] * d[24] * d[53] + 2 * d[3] * d[5] * d[24] * d[53] + 2 * d[3] * d[4] * d[25] * d[53] - 2 * d[0] * d[5] * d[25] * d[53] + 2 * d[0] * d[1] * d[26] * d[53] - 2 * std::pow(d[3], 2) * d[26] * d[53] - 2 * d[4] * d[19] * d[51] * d[53] + 2 * d[5] * d[21] * d[51] * d[53] - 2 * d[1] * d[22] * d[51] * d[53] + 2 * d[3] * d[23] * d[51] * d[53] - 2 * d[5] * d[18] * d[52] * d[53] + 2 * d[4] * d[21] * d[52] * d[53] + 2 * d[3] * d[22] * d[52] * d[53] - 2 * d[0] * d[23] * d[52] * d[53] + d[1] * d[18] * std::pow(d[53], 2) + d[0] * d[19] * std::pow(d[53], 2) - 2 * d[3] * d[21] * std::pow(d[53], 2) - d[1] * d[2] * d[18] * d[56] + std::pow(d[5], 2) * d[18] * d[56] - d[0] * d[2] * d[19] * d[56] + std::pow(d[4], 2) * d[19] * d[56] - d[0] * d[1] * d[20] * d[56] + std::pow(d[3], 2) * d[20] * d[56] + 2 * d[2] * d[3] * d[21] * d[56] - 2 * d[4] * d[5] * d[21] * d[56] + 2 * d[1] * d[4] * d[22] * d[56] - 2 * d[3] * d[5] * d[22] * d[56] - 2 * d[3] * d[4] * d[23] * d[56] + 2 * d[0] * d[5] * d[23] * d[56];
    coeffs[102] = 2 * d[2] * d[6] * d[28] * d[51] - 2 * d[4] * d[8] * d[28] * d[51] + 2 * d[1] * d[6] * d[29] * d[51] - 2 * d[3] * d[7] * d[29] * d[51] - 2 * d[2] * d[7] * d[30] * d[51] + 2 * d[5] * d[8] * d[30] * d[51] + 2 * d[5] * d[7] * d[31] * d[51] - 2 * d[1] * d[8] * d[31] * d[51] - 4 * d[5] * d[6] * d[32] * d[51] + 2 * d[4] * d[7] * d[32] * d[51] + 2 * d[3] * d[8] * d[32] * d[51] + 2 * d[1] * d[2] * d[33] * d[51] - 2 * std::pow(d[5], 2) * d[33] * d[51] - 2 * d[2] * d[3] * d[34] * d[51] + 2 * d[4] * d[5] * d[34] * d[51] - 2 * d[1] * d[4] * d[35] * d[51] + 2 * d[3] * d[5] * d[35] * d[51] + d[2] * d[28] * std::pow(d[51], 2) + d[1] * d[29] * std::pow(d[51], 2) - 2 * d[5] * d[32] * std::pow(d[51], 2) + 2 * d[2] * d[7] * d[27] * d[52] - 2 * d[5] * d[8] * d[27] * d[52] - 2 * d[3] * d[6] * d[29] * d[52] + 2 * d[0] * d[7] * d[29] * d[52] - 2 * d[2] * d[6] * d[30] * d[52] + 2 * d[4] * d[8] * d[30] * d[52] + 2 * d[5] * d[6] * d[31] * d[52] - 4 * d[4] * d[7] * d[31] * d[52] + 2 * d[3] * d[8] * d[31] * d[52] + 2 * d[4] * d[6] * d[32] * d[52] - 2 * d[0] * d[8] * d[32] * d[52] - 2 * d[2] * d[3] * d[33] * d[52] + 2 * d[4] * d[5] * d[33] * d[52] + 2 * d[0] * d[2] * d[34] * d[52] - 2 * std::pow(d[4], 2) * d[34] * d[52] + 2 * d[3] * d[4] * d[35] * d[52] - 2 * d[0] * d[5] * d[35] * d[52] - 2 * d[3] * d[29] * d[51] * d[52] - 2 * d[2] * d[30] * d[51] * d[52] + 2 * d[5] * d[31] * d[51] * d[52] + 2 * d[4] * d[32] * d[51] * d[52] + d[2] * d[27] * std::pow(d[52], 2) + d[0] * d[29] * std::pow(d[52], 2) - 2 * d[4] * d[31] * std::pow(d[52], 2) - 2 * d[5] * d[7] * d[27] * d[53] + 2 * d[1] * d[8] * d[27] * d[53] - 2 * d[4] * d[6] * d[28] * d[53] + 2 * d[0] * d[8] * d[28] * d[53] + 2 * d[5] * d[6] * d[30] * d[53] + 2 * d[4] * d[7] * d[30] * d[53] - 4 * d[3] * d[8] * d[30] * d[53] - 2 * d[1] * d[6] * d[31] * d[53] + 2 * d[3] * d[7] * d[31] * d[53] + 2 * d[3] * d[6] * d[32] * d[53] - 2 * d[0] * d[7] * d[32] * d[53] - 2 * d[1] * d[4] * d[33] * d[53] + 2 * d[3] * d[5] * d[33] * d[53] + 2 * d[3] * d[4] * d[34] * d[53] - 2 * d[0] * d[5] * d[34] * d[53] + 2 * d[0] * d[1] * d[35] * d[53] - 2 * std::pow(d[3], 2) * d[35] * d[53] - 2 * d[4] * d[28] * d[51] * d[53] + 2 * d[5] * d[30] * d[51] * d[53] - 2 * d[1] * d[31] * d[51] * d[53] + 2 * d[3] * d[32] * d[51] * d[53] - 2 * d[5] * d[27] * d[52] * d[53] + 2 * d[4] * d[30] * d[52] * d[53] + 2 * d[3] * d[31] * d[52] * d[53] - 2 * d[0] * d[32] * d[52] * d[53] + d[1] * d[27] * std::pow(d[53], 2) + d[0] * d[28] * std::pow(d[53], 2) - 2 * d[3] * d[30] * std::pow(d[53], 2) - d[1] * d[2] * d[27] * d[56] + std::pow(d[5], 2) * d[27] * d[56] - d[0] * d[2] * d[28] * d[56] + std::pow(d[4], 2) * d[28] * d[56] - d[0] * d[1] * d[29] * d[56] + std::pow(d[3], 2) * d[29] * d[56] + 2 * d[2] * d[3] * d[30] * d[56] - 2 * d[4] * d[5] * d[30] * d[56] + 2 * d[1] * d[4] * d[31] * d[56] - 2 * d[3] * d[5] * d[31] * d[56] - 2 * d[3] * d[4] * d[32] * d[56] + 2 * d[0] * d[5] * d[32] * d[56];
    coeffs[103] = 2 * d[2] * d[6] * d[37] * d[51] - 2 * d[4] * d[8] * d[37] * d[51] + 2 * d[1] * d[6] * d[38] * d[51] - 2 * d[3] * d[7] * d[38] * d[51] - 2 * d[2] * d[7] * d[39] * d[51] + 2 * d[5] * d[8] * d[39] * d[51] + 2 * d[5] * d[7] * d[40] * d[51] - 2 * d[1] * d[8] * d[40] * d[51] - 4 * d[5] * d[6] * d[41] * d[51] + 2 * d[4] * d[7] * d[41] * d[51] + 2 * d[3] * d[8] * d[41] * d[51] + 2 * d[1] * d[2] * d[42] * d[51] - 2 * std::pow(d[5], 2) * d[42] * d[51] - 2 * d[2] * d[3] * d[43] * d[51] + 2 * d[4] * d[5] * d[43] * d[51] - 2 * d[1] * d[4] * d[44] * d[51] + 2 * d[3] * d[5] * d[44] * d[51] + d[2] * d[37] * std::pow(d[51], 2) + d[1] * d[38] * std::pow(d[51], 2) - 2 * d[5] * d[41] * std::pow(d[51], 2) + 2 * d[2] * d[7] * d[36] * d[52] - 2 * d[5] * d[8] * d[36] * d[52] - 2 * d[3] * d[6] * d[38] * d[52] + 2 * d[0] * d[7] * d[38] * d[52] - 2 * d[2] * d[6] * d[39] * d[52] + 2 * d[4] * d[8] * d[39] * d[52] + 2 * d[5] * d[6] * d[40] * d[52] - 4 * d[4] * d[7] * d[40] * d[52] + 2 * d[3] * d[8] * d[40] * d[52] + 2 * d[4] * d[6] * d[41] * d[52] - 2 * d[0] * d[8] * d[41] * d[52] - 2 * d[2] * d[3] * d[42] * d[52] + 2 * d[4] * d[5] * d[42] * d[52] + 2 * d[0] * d[2] * d[43] * d[52] - 2 * std::pow(d[4], 2) * d[43] * d[52] + 2 * d[3] * d[4] * d[44] * d[52] - 2 * d[0] * d[5] * d[44] * d[52] - 2 * d[3] * d[38] * d[51] * d[52] - 2 * d[2] * d[39] * d[51] * d[52] + 2 * d[5] * d[40] * d[51] * d[52] + 2 * d[4] * d[41] * d[51] * d[52] + d[2] * d[36] * std::pow(d[52], 2) + d[0] * d[38] * std::pow(d[52], 2) - 2 * d[4] * d[40] * std::pow(d[52], 2) - 2 * d[5] * d[7] * d[36] * d[53] + 2 * d[1] * d[8] * d[36] * d[53] - 2 * d[4] * d[6] * d[37] * d[53] + 2 * d[0] * d[8] * d[37] * d[53] + 2 * d[5] * d[6] * d[39] * d[53] + 2 * d[4] * d[7] * d[39] * d[53] - 4 * d[3] * d[8] * d[39] * d[53] - 2 * d[1] * d[6] * d[40] * d[53] + 2 * d[3] * d[7] * d[40] * d[53] + 2 * d[3] * d[6] * d[41] * d[53] - 2 * d[0] * d[7] * d[41] * d[53] - 2 * d[1] * d[4] * d[42] * d[53] + 2 * d[3] * d[5] * d[42] * d[53] + 2 * d[3] * d[4] * d[43] * d[53] - 2 * d[0] * d[5] * d[43] * d[53] + 2 * d[0] * d[1] * d[44] * d[53] - 2 * std::pow(d[3], 2) * d[44] * d[53] - 2 * d[4] * d[37] * d[51] * d[53] + 2 * d[5] * d[39] * d[51] * d[53] - 2 * d[1] * d[40] * d[51] * d[53] + 2 * d[3] * d[41] * d[51] * d[53] - 2 * d[5] * d[36] * d[52] * d[53] + 2 * d[4] * d[39] * d[52] * d[53] + 2 * d[3] * d[40] * d[52] * d[53] - 2 * d[0] * d[41] * d[52] * d[53] + d[1] * d[36] * std::pow(d[53], 2) + d[0] * d[37] * std::pow(d[53], 2) - 2 * d[3] * d[39] * std::pow(d[53], 2) - d[1] * d[2] * d[36] * d[56] + std::pow(d[5], 2) * d[36] * d[56] - d[0] * d[2] * d[37] * d[56] + std::pow(d[4], 2) * d[37] * d[56] - d[0] * d[1] * d[38] * d[56] + std::pow(d[3], 2) * d[38] * d[56] + 2 * d[2] * d[3] * d[39] * d[56] - 2 * d[4] * d[5] * d[39] * d[56] + 2 * d[1] * d[4] * d[40] * d[56] - 2 * d[3] * d[5] * d[40] * d[56] - 2 * d[3] * d[4] * d[41] * d[56] + 2 * d[0] * d[5] * d[41] * d[56];
    coeffs[104] = 2 * d[1] * d[2] * d[6] * d[51] - 2 * std::pow(d[5], 2) * d[6] * d[51] - 2 * d[2] * d[3] * d[7] * d[51] + 2 * d[4] * d[5] * d[7] * d[51] - 2 * d[1] * d[4] * d[8] * d[51] + 2 * d[3] * d[5] * d[8] * d[51] + d[1] * d[2] * std::pow(d[51], 2) - std::pow(d[5], 2) * std::pow(d[51], 2) - 2 * d[2] * d[3] * d[6] * d[52] + 2 * d[4] * d[5] * d[6] * d[52] + 2 * d[0] * d[2] * d[7] * d[52] - 2 * std::pow(d[4], 2) * d[7] * d[52] + 2 * d[3] * d[4] * d[8] * d[52] - 2 * d[0] * d[5] * d[8] * d[52] - 2 * d[2] * d[3] * d[51] * d[52] + 2 * d[4] * d[5] * d[51] * d[52] + d[0] * d[2] * std::pow(d[52], 2) - std::pow(d[4], 2) * std::pow(d[52], 2) - 2 * d[1] * d[4] * d[6] * d[53] + 2 * d[3] * d[5] * d[6] * d[53] + 2 * d[3] * d[4] * d[7] * d[53] - 2 * d[0] * d[5] * d[7] * d[53] + 2 * d[0] * d[1] * d[8] * d[53] - 2 * std::pow(d[3], 2) * d[8] * d[53] - 2 * d[1] * d[4] * d[51] * d[53] + 2 * d[3] * d[5] * d[51] * d[53] + 2 * d[3] * d[4] * d[52] * d[53] - 2 * d[0] * d[5] * d[52] * d[53] + d[0] * d[1] * std::pow(d[53], 2) - std::pow(d[3], 2) * std::pow(d[53], 2) - d[0] * d[1] * d[2] * d[56] + d[2] * std::pow(d[3], 2) * d[56] + d[1] * std::pow(d[4], 2) * d[56] - 2 * d[3] * d[4] * d[5] * d[56] + d[0] * std::pow(d[5], 2) * d[56];
    coeffs[105] = d[10] * d[11] * std::pow(d[15], 2) - std::pow(d[14], 2) * std::pow(d[15], 2) - 2 * d[11] * d[12] * d[15] * d[16] + 2 * d[13] * d[14] * d[15] * d[16] + d[9] * d[11] * std::pow(d[16], 2) - std::pow(d[13], 2) * std::pow(d[16], 2) - 2 * d[10] * d[13] * d[15] * d[17] + 2 * d[12] * d[14] * d[15] * d[17] + 2 * d[12] * d[13] * d[16] * d[17] - 2 * d[9] * d[14] * d[16] * d[17] + d[9] * d[10] * std::pow(d[17], 2) - std::pow(d[12], 2) * std::pow(d[17], 2);
    coeffs[106] = d[11] * std::pow(d[16], 2) * d[18] - 2 * d[14] * d[16] * d[17] * d[18] + d[10] * std::pow(d[17], 2) * d[18] + d[11] * std::pow(d[15], 2) * d[19] - 2 * d[13] * d[15] * d[17] * d[19] + d[9] * std::pow(d[17], 2) * d[19] + d[10] * std::pow(d[15], 2) * d[20] - 2 * d[12] * d[15] * d[16] * d[20] + d[9] * std::pow(d[16], 2) * d[20] - 2 * d[11] * d[15] * d[16] * d[21] + 2 * d[14] * d[15] * d[17] * d[21] + 2 * d[13] * d[16] * d[17] * d[21] - 2 * d[12] * std::pow(d[17], 2) * d[21] + 2 * d[14] * d[15] * d[16] * d[22] - 2 * d[13] * std::pow(d[16], 2) * d[22] - 2 * d[10] * d[15] * d[17] * d[22] + 2 * d[12] * d[16] * d[17] * d[22] - 2 * d[14] * std::pow(d[15], 2) * d[23] + 2 * d[13] * d[15] * d[16] * d[23] + 2 * d[12] * d[15] * d[17] * d[23] - 2 * d[9] * d[16] * d[17] * d[23] + 2 * d[10] * d[11] * d[15] * d[24] - 2 * std::pow(d[14], 2) * d[15] * d[24] - 2 * d[11] * d[12] * d[16] * d[24] + 2 * d[13] * d[14] * d[16] * d[24] - 2 * d[10] * d[13] * d[17] * d[24] + 2 * d[12] * d[14] * d[17] * d[24] - 2 * d[11] * d[12] * d[15] * d[25] + 2 * d[13] * d[14] * d[15] * d[25] + 2 * d[9] * d[11] * d[16] * d[25] - 2 * std::pow(d[13], 2) * d[16] * d[25] + 2 * d[12] * d[13] * d[17] * d[25] - 2 * d[9] * d[14] * d[17] * d[25] - 2 * d[10] * d[13] * d[15] * d[26] + 2 * d[12] * d[14] * d[15] * d[26] + 2 * d[12] * d[13] * d[16] * d[26] - 2 * d[9] * d[14] * d[16] * d[26] + 2 * d[9] * d[10] * d[17] * d[26] - 2 * std::pow(d[12], 2) * d[17] * d[26];
    coeffs[107] = std::pow(d[17], 2) * d[18] * d[19] + std::pow(d[16], 2) * d[18] * d[20] + std::pow(d[15], 2) * d[19] * d[20] - 2 * d[15] * d[16] * d[20] * d[21] - std::pow(d[17], 2) * std::pow(d[21], 2) - 2 * d[15] * d[17] * d[19] * d[22] + 2 * d[16] * d[17] * d[21] * d[22] - std::pow(d[16], 2) * std::pow(d[22], 2) - 2 * d[16] * d[17] * d[18] * d[23] + 2 * d[15] * d[17] * d[21] * d[23] + 2 * d[15] * d[16] * d[22] * d[23] - std::pow(d[15], 2) * std::pow(d[23], 2) + 2 * d[11] * d[15] * d[19] * d[24] - 2 * d[13] * d[17] * d[19] * d[24] + 2 * d[10] * d[15] * d[20] * d[24] - 2 * d[12] * d[16] * d[20] * d[24] - 2 * d[11] * d[16] * d[21] * d[24] + 2 * d[14] * d[17] * d[21] * d[24] + 2 * d[14] * d[16] * d[22] * d[24] - 2 * d[10] * d[17] * d[22] * d[24] - 4 * d[14] * d[15] * d[23] * d[24] + 2 * d[13] * d[16] * d[23] * d[24] + 2 * d[12] * d[17] * d[23] * d[24] + d[10] * d[11] * std::pow(d[24], 2) - std::pow(d[14], 2) * std::pow(d[24], 2) + 2 * d[11] * d[16] * d[18] * d[25] - 2 * d[14] * d[17] * d[18] * d[25] - 2 * d[12] * d[15] * d[20] * d[25] + 2 * d[9] * d[16] * d[20] * d[25] - 2 * d[11] * d[15] * d[21] * d[25] + 2 * d[13] * d[17] * d[21] * d[25] + 2 * d[14] * d[15] * d[22] * d[25] - 4 * d[13] * d[16] * d[22] * d[25] + 2 * d[12] * d[17] * d[22] * d[25] + 2 * d[13] * d[15] * d[23] * d[25] - 2 * d[9] * d[17] * d[23] * d[25] - 2 * d[11] * d[12] * d[24] * d[25] + 2 * d[13] * d[14] * d[24] * d[25] + d[9] * d[11] * std::pow(d[25], 2) - std::pow(d[13], 2) * std::pow(d[25], 2) - 2 * d[14] * d[16] * d[18] * d[26] + 2 * d[10] * d[17] * d[18] * d[26] - 2 * d[13] * d[15] * d[19] * d[26] + 2 * d[9] * d[17] * d[19] * d[26] + 2 * d[14] * d[15] * d[21] * d[26] + 2 * d[13] * d[16] * d[21] * d[26] - 4 * d[12] * d[17] * d[21] * d[26] - 2 * d[10] * d[15] * d[22] * d[26] + 2 * d[12] * d[16] * d[22] * d[26] + 2 * d[12] * d[15] * d[23] * d[26] - 2 * d[9] * d[16] * d[23] * d[26] - 2 * d[10] * d[13] * d[24] * d[26] + 2 * d[12] * d[14] * d[24] * d[26] + 2 * d[12] * d[13] * d[25] * d[26] - 2 * d[9] * d[14] * d[25] * d[26] + d[9] * d[10] * std::pow(d[26], 2) - std::pow(d[12], 2) * std::pow(d[26], 2);
    coeffs[108] = 2 * d[15] * d[19] * d[20] * d[24] - 2 * d[16] * d[20] * d[21] * d[24] - 2 * d[17] * d[19] * d[22] * d[24] + 2 * d[17] * d[21] * d[23] * d[24] + 2 * d[16] * d[22] * d[23] * d[24] - 2 * d[15] * std::pow(d[23], 2) * d[24] + d[11] * d[19] * std::pow(d[24], 2) + d[10] * d[20] * std::pow(d[24], 2) - 2 * d[14] * d[23] * std::pow(d[24], 2) + 2 * d[16] * d[18] * d[20] * d[25] - 2 * d[15] * d[20] * d[21] * d[25] + 2 * d[17] * d[21] * d[22] * d[25] - 2 * d[16] * std::pow(d[22], 2) * d[25] - 2 * d[17] * d[18] * d[23] * d[25] + 2 * d[15] * d[22] * d[23] * d[25] - 2 * d[12] * d[20] * d[24] * d[25] - 2 * d[11] * d[21] * d[24] * d[25] + 2 * d[14] * d[22] * d[24] * d[25] + 2 * d[13] * d[23] * d[24] * d[25] + d[11] * d[18] * std::pow(d[25], 2) + d[9] * d[20] * std::pow(d[25], 2) - 2 * d[13] * d[22] * std::pow(d[25], 2) + 2 * d[17] * d[18] * d[19] * d[26] - 2 * d[17] * std::pow(d[21], 2) * d[26] - 2 * d[15] * d[19] * d[22] * d[26] + 2 * d[16] * d[21] * d[22] * d[26] - 2 * d[16] * d[18] * d[23] * d[26] + 2 * d[15] * d[21] * d[23] * d[26] - 2 * d[13] * d[19] * d[24] * d[26] + 2 * d[14] * d[21] * d[24] * d[26] - 2 * d[10] * d[22] * d[24] * d[26] + 2 * d[12] * d[23] * d[24] * d[26] - 2 * d[14] * d[18] * d[25] * d[26] + 2 * d[13] * d[21] * d[25] * d[26] + 2 * d[12] * d[22] * d[25] * d[26] - 2 * d[9] * d[23] * d[25] * d[26] + d[10] * d[18] * std::pow(d[26], 2) + d[9] * d[19] * std::pow(d[26], 2) - 2 * d[12] * d[21] * std::pow(d[26], 2);
    coeffs[109] = d[19] * d[20] * std::pow(d[24], 2) - std::pow(d[23], 2) * std::pow(d[24], 2) - 2 * d[20] * d[21] * d[24] * d[25] + 2 * d[22] * d[23] * d[24] * d[25] + d[18] * d[20] * std::pow(d[25], 2) - std::pow(d[22], 2) * std::pow(d[25], 2) - 2 * d[19] * d[22] * d[24] * d[26] + 2 * d[21] * d[23] * d[24] * d[26] + 2 * d[21] * d[22] * d[25] * d[26] - 2 * d[18] * d[23] * d[25] * d[26] + d[18] * d[19] * std::pow(d[26], 2) - std::pow(d[21], 2) * std::pow(d[26], 2);
    coeffs[110] = d[11] * std::pow(d[16], 2) * d[27] - 2 * d[14] * d[16] * d[17] * d[27] + d[10] * std::pow(d[17], 2) * d[27] + d[11] * std::pow(d[15], 2) * d[28] - 2 * d[13] * d[15] * d[17] * d[28] + d[9] * std::pow(d[17], 2) * d[28] + d[10] * std::pow(d[15], 2) * d[29] - 2 * d[12] * d[15] * d[16] * d[29] + d[9] * std::pow(d[16], 2) * d[29] - 2 * d[11] * d[15] * d[16] * d[30] + 2 * d[14] * d[15] * d[17] * d[30] + 2 * d[13] * d[16] * d[17] * d[30] - 2 * d[12] * std::pow(d[17], 2) * d[30] + 2 * d[14] * d[15] * d[16] * d[31] - 2 * d[13] * std::pow(d[16], 2) * d[31] - 2 * d[10] * d[15] * d[17] * d[31] + 2 * d[12] * d[16] * d[17] * d[31] - 2 * d[14] * std::pow(d[15], 2) * d[32] + 2 * d[13] * d[15] * d[16] * d[32] + 2 * d[12] * d[15] * d[17] * d[32] - 2 * d[9] * d[16] * d[17] * d[32] + 2 * d[10] * d[11] * d[15] * d[33] - 2 * std::pow(d[14], 2) * d[15] * d[33] - 2 * d[11] * d[12] * d[16] * d[33] + 2 * d[13] * d[14] * d[16] * d[33] - 2 * d[10] * d[13] * d[17] * d[33] + 2 * d[12] * d[14] * d[17] * d[33] - 2 * d[11] * d[12] * d[15] * d[34] + 2 * d[13] * d[14] * d[15] * d[34] + 2 * d[9] * d[11] * d[16] * d[34] - 2 * std::pow(d[13], 2) * d[16] * d[34] + 2 * d[12] * d[13] * d[17] * d[34] - 2 * d[9] * d[14] * d[17] * d[34] - 2 * d[10] * d[13] * d[15] * d[35] + 2 * d[12] * d[14] * d[15] * d[35] + 2 * d[12] * d[13] * d[16] * d[35] - 2 * d[9] * d[14] * d[16] * d[35] + 2 * d[9] * d[10] * d[17] * d[35] - 2 * std::pow(d[12], 2) * d[17] * d[35];
    coeffs[111] = std::pow(d[17], 2) * d[19] * d[27] + std::pow(d[16], 2) * d[20] * d[27] - 2 * d[16] * d[17] * d[23] * d[27] + 2 * d[11] * d[16] * d[25] * d[27] - 2 * d[14] * d[17] * d[25] * d[27] - 2 * d[14] * d[16] * d[26] * d[27] + 2 * d[10] * d[17] * d[26] * d[27] + std::pow(d[17], 2) * d[18] * d[28] + std::pow(d[15], 2) * d[20] * d[28] - 2 * d[15] * d[17] * d[22] * d[28] + 2 * d[11] * d[15] * d[24] * d[28] - 2 * d[13] * d[17] * d[24] * d[28] - 2 * d[13] * d[15] * d[26] * d[28] + 2 * d[9] * d[17] * d[26] * d[28] + std::pow(d[16], 2) * d[18] * d[29] + std::pow(d[15], 2) * d[19] * d[29] - 2 * d[15] * d[16] * d[21] * d[29] + 2 * d[10] * d[15] * d[24] * d[29] - 2 * d[12] * d[16] * d[24] * d[29] - 2 * d[12] * d[15] * d[25] * d[29] + 2 * d[9] * d[16] * d[25] * d[29] - 2 * d[15] * d[16] * d[20] * d[30] - 2 * std::pow(d[17], 2) * d[21] * d[30] + 2 * d[16] * d[17] * d[22] * d[30] + 2 * d[15] * d[17] * d[23] * d[30] - 2 * d[11] * d[16] * d[24] * d[30] + 2 * d[14] * d[17] * d[24] * d[30] - 2 * d[11] * d[15] * d[25] * d[30] + 2 * d[13] * d[17] * d[25] * d[30] + 2 * d[14] * d[15] * d[26] * d[30] + 2 * d[13] * d[16] * d[26] * d[30] - 4 * d[12] * d[17] * d[26] * d[30] - 2 * d[15] * d[17] * d[19] * d[31] + 2 * d[16] * d[17] * d[21] * d[31] - 2 * std::pow(d[16], 2) * d[22] * d[31] + 2 * d[15] * d[16] * d[23] * d[31] + 2 * d[14] * d[16] * d[24] * d[31] - 2 * d[10] * d[17] * d[24] * d[31] + 2 * d[14] * d[15] * d[25] * d[31] - 4 * d[13] * d[16] * d[25] * d[31] + 2 * d[12] * d[17] * d[25] * d[31] - 2 * d[10] * d[15] * d[26] * d[31] + 2 * d[12] * d[16] * d[26] * d[31] - 2 * d[16] * d[17] * d[18] * d[32] + 2 * d[15] * d[17] * d[21] * d[32] + 2 * d[15] * d[16] * d[22] * d[32] - 2 * std::pow(d[15], 2) * d[23] * d[32] - 4 * d[14] * d[15] * d[24] * d[32] + 2 * d[13] * d[16] * d[24] * d[32] + 2 * d[12] * d[17] * d[24] * d[32] + 2 * d[13] * d[15] * d[25] * d[32] - 2 * d[9] * d[17] * d[25] * d[32] + 2 * d[12] * d[15] * d[26] * d[32] - 2 * d[9] * d[16] * d[26] * d[32] + 2 * d[11] * d[15] * d[19] * d[33] - 2 * d[13] * d[17] * d[19] * d[33] + 2 * d[10] * d[15] * d[20] * d[33] - 2 * d[12] * d[16] * d[20] * d[33] - 2 * d[11] * d[16] * d[21] * d[33] + 2 * d[14] * d[17] * d[21] * d[33] + 2 * d[14] * d[16] * d[22] * d[33] - 2 * d[10] * d[17] * d[22] * d[33] - 4 * d[14] * d[15] * d[23] * d[33] + 2 * d[13] * d[16] * d[23] * d[33] + 2 * d[12] * d[17] * d[23] * d[33] + 2 * d[10] * d[11] * d[24] * d[33] - 2 * std::pow(d[14], 2) * d[24] * d[33] - 2 * d[11] * d[12] * d[25] * d[33] + 2 * d[13] * d[14] * d[25] * d[33] - 2 * d[10] * d[13] * d[26] * d[33] + 2 * d[12] * d[14] * d[26] * d[33] + 2 * d[11] * d[16] * d[18] * d[34] - 2 * d[14] * d[17] * d[18] * d[34] - 2 * d[12] * d[15] * d[20] * d[34] + 2 * d[9] * d[16] * d[20] * d[34] - 2 * d[11] * d[15] * d[21] * d[34] + 2 * d[13] * d[17] * d[21] * d[34] + 2 * d[14] * d[15] * d[22] * d[34] - 4 * d[13] * d[16] * d[22] * d[34] + 2 * d[12] * d[17] * d[22] * d[34] + 2 * d[13] * d[15] * d[23] * d[34] - 2 * d[9] * d[17] * d[23] * d[34] - 2 * d[11] * d[12] * d[24] * d[34] + 2 * d[13] * d[14] * d[24] * d[34] + 2 * d[9] * d[11] * d[25] * d[34] - 2 * std::pow(d[13], 2) * d[25] * d[34] + 2 * d[12] * d[13] * d[26] * d[34] - 2 * d[9] * d[14] * d[26] * d[34] - 2 * d[14] * d[16] * d[18] * d[35] + 2 * d[10] * d[17] * d[18] * d[35] - 2 * d[13] * d[15] * d[19] * d[35] + 2 * d[9] * d[17] * d[19] * d[35] + 2 * d[14] * d[15] * d[21] * d[35] + 2 * d[13] * d[16] * d[21] * d[35] - 4 * d[12] * d[17] * d[21] * d[35] - 2 * d[10] * d[15] * d[22] * d[35] + 2 * d[12] * d[16] * d[22] * d[35] + 2 * d[12] * d[15] * d[23] * d[35] - 2 * d[9] * d[16] * d[23] * d[35] - 2 * d[10] * d[13] * d[24] * d[35] + 2 * d[12] * d[14] * d[24] * d[35] + 2 * d[12] * d[13] * d[25] * d[35] - 2 * d[9] * d[14] * d[25] * d[35] + 2 * d[9] * d[10] * d[26] * d[35] - 2 * std::pow(d[12], 2) * d[26] * d[35];
    coeffs[112] = 2 * d[16] * d[20] * d[25] * d[27] - 2 * d[17] * d[23] * d[25] * d[27] + d[11] * std::pow(d[25], 2) * d[27] + 2 * d[17] * d[19] * d[26] * d[27] - 2 * d[16] * d[23] * d[26] * d[27] - 2 * d[14] * d[25] * d[26] * d[27] + d[10] * std::pow(d[26], 2) * d[27] + 2 * d[15] * d[20] * d[24] * d[28] - 2 * d[17] * d[22] * d[24] * d[28] + d[11] * std::pow(d[24], 2) * d[28] + 2 * d[17] * d[18] * d[26] * d[28] - 2 * d[15] * d[22] * d[26] * d[28] - 2 * d[13] * d[24] * d[26] * d[28] + d[9] * std::pow(d[26], 2) * d[28] + 2 * d[15] * d[19] * d[24] * d[29] - 2 * d[16] * d[21] * d[24] * d[29] + d[10] * std::pow(d[24], 2) * d[29] + 2 * d[16] * d[18] * d[25] * d[29] - 2 * d[15] * d[21] * d[25] * d[29] - 2 * d[12] * d[24] * d[25] * d[29] + d[9] * std::pow(d[25], 2) * d[29] - 2 * d[16] * d[20] * d[24] * d[30] + 2 * d[17] * d[23] * d[24] * d[30] - 2 * d[15] * d[20] * d[25] * d[30] + 2 * d[17] * d[22] * d[25] * d[30] - 2 * d[11] * d[24] * d[25] * d[30] - 4 * d[17] * d[21] * d[26] * d[30] + 2 * d[16] * d[22] * d[26] * d[30] + 2 * d[15] * d[23] * d[26] * d[30] + 2 * d[14] * d[24] * d[26] * d[30] + 2 * d[13] * d[25] * d[26] * d[30] - 2 * d[12] * std::pow(d[26], 2) * d[30] - 2 * d[17] * d[19] * d[24] * d[31] + 2 * d[16] * d[23] * d[24] * d[31] + 2 * d[17] * d[21] * d[25] * d[31] - 4 * d[16] * d[22] * d[25] * d[31] + 2 * d[15] * d[23] * d[25] * d[31] + 2 * d[14] * d[24] * d[25] * d[31] - 2 * d[13] * std::pow(d[25], 2) * d[31] - 2 * d[15] * d[19] * d[26] * d[31] + 2 * d[16] * d[21] * d[26] * d[31] - 2 * d[10] * d[24] * d[26] * d[31] + 2 * d[12] * d[25] * d[26] * d[31] + 2 * d[17] * d[21] * d[24] * d[32] + 2 * d[16] * d[22] * d[24] * d[32] - 4 * d[15] * d[23] * d[24] * d[32] - 2 * d[14] * std::pow(d[24], 2) * d[32] - 2 * d[17] * d[18] * d[25] * d[32] + 2 * d[15] * d[22] * d[25] * d[32] + 2 * d[13] * d[24] * d[25] * d[32] - 2 * d[16] * d[18] * d[26] * d[32] + 2 * d[15] * d[21] * d[26] * d[32] + 2 * d[12] * d[24] * d[26] * d[32] - 2 * d[9] * d[25] * d[26] * d[32] + 2 * d[15] * d[19] * d[20] * d[33] - 2 * d[16] * d[20] * d[21] * d[33] - 2 * d[17] * d[19] * d[22] * d[33] + 2 * d[17] * d[21] * d[23] * d[33] + 2 * d[16] * d[22] * d[23] * d[33] - 2 * d[15] * std::pow(d[23], 2) * d[33] + 2 * d[11] * d[19] * d[24] * d[33] + 2 * d[10] * d[20] * d[24] * d[33] - 4 * d[14] * d[23] * d[24] * d[33] - 2 * d[12] * d[20] * d[25] * d[33] - 2 * d[11] * d[21] * d[25] * d[33] + 2 * d[14] * d[22] * d[25] * d[33] + 2 * d[13] * d[23] * d[25] * d[33] - 2 * d[13] * d[19] * d[26] * d[33] + 2 * d[14] * d[21] * d[26] * d[33] - 2 * d[10] * d[22] * d[26] * d[33] + 2 * d[12] * d[23] * d[26] * d[33] + 2 * d[16] * d[18] * d[20] * d[34] - 2 * d[15] * d[20] * d[21] * d[34] + 2 * d[17] * d[21] * d[22] * d[34] - 2 * d[16] * std::pow(d[22], 2) * d[34] - 2 * d[17] * d[18] * d[23] * d[34] + 2 * d[15] * d[22] * d[23] * d[34] - 2 * d[12] * d[20] * d[24] * d[34] - 2 * d[11] * d[21] * d[24] * d[34] + 2 * d[14] * d[22] * d[24] * d[34] + 2 * d[13] * d[23] * d[24] * d[34] + 2 * d[11] * d[18] * d[25] * d[34] + 2 * d[9] * d[20] * d[25] * d[34] - 4 * d[13] * d[22] * d[25] * d[34] - 2 * d[14] * d[18] * d[26] * d[34] + 2 * d[13] * d[21] * d[26] * d[34] + 2 * d[12] * d[22] * d[26] * d[34] - 2 * d[9] * d[23] * d[26] * d[34] + 2 * d[17] * d[18] * d[19] * d[35] - 2 * d[17] * std::pow(d[21], 2) * d[35] - 2 * d[15] * d[19] * d[22] * d[35] + 2 * d[16] * d[21] * d[22] * d[35] - 2 * d[16] * d[18] * d[23] * d[35] + 2 * d[15] * d[21] * d[23] * d[35] - 2 * d[13] * d[19] * d[24] * d[35] + 2 * d[14] * d[21] * d[24] * d[35] - 2 * d[10] * d[22] * d[24] * d[35] + 2 * d[12] * d[23] * d[24] * d[35] - 2 * d[14] * d[18] * d[25] * d[35] + 2 * d[13] * d[21] * d[25] * d[35] + 2 * d[12] * d[22] * d[25] * d[35] - 2 * d[9] * d[23] * d[25] * d[35] + 2 * d[10] * d[18] * d[26] * d[35] + 2 * d[9] * d[19] * d[26] * d[35] - 4 * d[12] * d[21] * d[26] * d[35];
    coeffs[113] = d[20] * std::pow(d[25], 2) * d[27] - 2 * d[23] * d[25] * d[26] * d[27] + d[19] * std::pow(d[26], 2) * d[27] + d[20] * std::pow(d[24], 2) * d[28] - 2 * d[22] * d[24] * d[26] * d[28] + d[18] * std::pow(d[26], 2) * d[28] + d[19] * std::pow(d[24], 2) * d[29] - 2 * d[21] * d[24] * d[25] * d[29] + d[18] * std::pow(d[25], 2) * d[29] - 2 * d[20] * d[24] * d[25] * d[30] + 2 * d[23] * d[24] * d[26] * d[30] + 2 * d[22] * d[25] * d[26] * d[30] - 2 * d[21] * std::pow(d[26], 2) * d[30] + 2 * d[23] * d[24] * d[25] * d[31] - 2 * d[22] * std::pow(d[25], 2) * d[31] - 2 * d[19] * d[24] * d[26] * d[31] + 2 * d[21] * d[25] * d[26] * d[31] - 2 * d[23] * std::pow(d[24], 2) * d[32] + 2 * d[22] * d[24] * d[25] * d[32] + 2 * d[21] * d[24] * d[26] * d[32] - 2 * d[18] * d[25] * d[26] * d[32] + 2 * d[19] * d[20] * d[24] * d[33] - 2 * std::pow(d[23], 2) * d[24] * d[33] - 2 * d[20] * d[21] * d[25] * d[33] + 2 * d[22] * d[23] * d[25] * d[33] - 2 * d[19] * d[22] * d[26] * d[33] + 2 * d[21] * d[23] * d[26] * d[33] - 2 * d[20] * d[21] * d[24] * d[34] + 2 * d[22] * d[23] * d[24] * d[34] + 2 * d[18] * d[20] * d[25] * d[34] - 2 * std::pow(d[22], 2) * d[25] * d[34] + 2 * d[21] * d[22] * d[26] * d[34] - 2 * d[18] * d[23] * d[26] * d[34] - 2 * d[19] * d[22] * d[24] * d[35] + 2 * d[21] * d[23] * d[24] * d[35] + 2 * d[21] * d[22] * d[25] * d[35] - 2 * d[18] * d[23] * d[25] * d[35] + 2 * d[18] * d[19] * d[26] * d[35] - 2 * std::pow(d[21], 2) * d[26] * d[35];
    coeffs[114] = std::pow(d[17], 2) * d[27] * d[28] + std::pow(d[16], 2) * d[27] * d[29] + std::pow(d[15], 2) * d[28] * d[29] - 2 * d[15] * d[16] * d[29] * d[30] - std::pow(d[17], 2) * std::pow(d[30], 2) - 2 * d[15] * d[17] * d[28] * d[31] + 2 * d[16] * d[17] * d[30] * d[31] - std::pow(d[16], 2) * std::pow(d[31], 2) - 2 * d[16] * d[17] * d[27] * d[32] + 2 * d[15] * d[17] * d[30] * d[32] + 2 * d[15] * d[16] * d[31] * d[32] - std::pow(d[15], 2) * std::pow(d[32], 2) + 2 * d[11] * d[15] * d[28] * d[33] - 2 * d[13] * d[17] * d[28] * d[33] + 2 * d[10] * d[15] * d[29] * d[33] - 2 * d[12] * d[16] * d[29] * d[33] - 2 * d[11] * d[16] * d[30] * d[33] + 2 * d[14] * d[17] * d[30] * d[33] + 2 * d[14] * d[16] * d[31] * d[33] - 2 * d[10] * d[17] * d[31] * d[33] - 4 * d[14] * d[15] * d[32] * d[33] + 2 * d[13] * d[16] * d[32] * d[33] + 2 * d[12] * d[17] * d[32] * d[33] + d[10] * d[11] * std::pow(d[33], 2) - std::pow(d[14], 2) * std::pow(d[33], 2) + 2 * d[11] * d[16] * d[27] * d[34] - 2 * d[14] * d[17] * d[27] * d[34] - 2 * d[12] * d[15] * d[29] * d[34] + 2 * d[9] * d[16] * d[29] * d[34] - 2 * d[11] * d[15] * d[30] * d[34] + 2 * d[13] * d[17] * d[30] * d[34] + 2 * d[14] * d[15] * d[31] * d[34] - 4 * d[13] * d[16] * d[31] * d[34] + 2 * d[12] * d[17] * d[31] * d[34] + 2 * d[13] * d[15] * d[32] * d[34] - 2 * d[9] * d[17] * d[32] * d[34] - 2 * d[11] * d[12] * d[33] * d[34] + 2 * d[13] * d[14] * d[33] * d[34] + d[9] * d[11] * std::pow(d[34], 2) - std::pow(d[13], 2) * std::pow(d[34], 2) - 2 * d[14] * d[16] * d[27] * d[35] + 2 * d[10] * d[17] * d[27] * d[35] - 2 * d[13] * d[15] * d[28] * d[35] + 2 * d[9] * d[17] * d[28] * d[35] + 2 * d[14] * d[15] * d[30] * d[35] + 2 * d[13] * d[16] * d[30] * d[35] - 4 * d[12] * d[17] * d[30] * d[35] - 2 * d[10] * d[15] * d[31] * d[35] + 2 * d[12] * d[16] * d[31] * d[35] + 2 * d[12] * d[15] * d[32] * d[35] - 2 * d[9] * d[16] * d[32] * d[35] - 2 * d[10] * d[13] * d[33] * d[35] + 2 * d[12] * d[14] * d[33] * d[35] + 2 * d[12] * d[13] * d[34] * d[35] - 2 * d[9] * d[14] * d[34] * d[35] + d[9] * d[10] * std::pow(d[35], 2) - std::pow(d[12], 2) * std::pow(d[35], 2);
    coeffs[115] = 2 * d[17] * d[26] * d[27] * d[28] + 2 * d[16] * d[25] * d[27] * d[29] + 2 * d[15] * d[24] * d[28] * d[29] - 2 * d[16] * d[24] * d[29] * d[30] - 2 * d[15] * d[25] * d[29] * d[30] - 2 * d[17] * d[26] * std::pow(d[30], 2) - 2 * d[17] * d[24] * d[28] * d[31] - 2 * d[15] * d[26] * d[28] * d[31] + 2 * d[17] * d[25] * d[30] * d[31] + 2 * d[16] * d[26] * d[30] * d[31] - 2 * d[16] * d[25] * std::pow(d[31], 2) - 2 * d[17] * d[25] * d[27] * d[32] - 2 * d[16] * d[26] * d[27] * d[32] + 2 * d[17] * d[24] * d[30] * d[32] + 2 * d[15] * d[26] * d[30] * d[32] + 2 * d[16] * d[24] * d[31] * d[32] + 2 * d[15] * d[25] * d[31] * d[32] - 2 * d[15] * d[24] * std::pow(d[32], 2) + 2 * d[15] * d[20] * d[28] * d[33] - 2 * d[17] * d[22] * d[28] * d[33] + 2 * d[11] * d[24] * d[28] * d[33] - 2 * d[13] * d[26] * d[28] * d[33] + 2 * d[15] * d[19] * d[29] * d[33] - 2 * d[16] * d[21] * d[29] * d[33] + 2 * d[10] * d[24] * d[29] * d[33] - 2 * d[12] * d[25] * d[29] * d[33] - 2 * d[16] * d[20] * d[30] * d[33] + 2 * d[17] * d[23] * d[30] * d[33] - 2 * d[11] * d[25] * d[30] * d[33] + 2 * d[14] * d[26] * d[30] * d[33] - 2 * d[17] * d[19] * d[31] * d[33] + 2 * d[16] * d[23] * d[31] * d[33] + 2 * d[14] * d[25] * d[31] * d[33] - 2 * d[10] * d[26] * d[31] * d[33] + 2 * d[17] * d[21] * d[32] * d[33] + 2 * d[16] * d[22] * d[32] * d[33] - 4 * d[15] * d[23] * d[32] * d[33] - 4 * d[14] * d[24] * d[32] * d[33] + 2 * d[13] * d[25] * d[32] * d[33] + 2 * d[12] * d[26] * d[32] * d[33] + d[11] * d[19] * std::pow(d[33], 2) + d[10] * d[20] * std::pow(d[33], 2) - 2 * d[14] * d[23] * std::pow(d[33], 2) + 2 * d[16] * d[20] * d[27] * d[34] - 2 * d[17] * d[23] * d[27] * d[34] + 2 * d[11] * d[25] * d[27] * d[34] - 2 * d[14] * d[26] * d[27] * d[34] + 2 * d[16] * d[18] * d[29] * d[34] - 2 * d[15] * d[21] * d[29] * d[34] - 2 * d[12] * d[24] * d[29] * d[34] + 2 * d[9] * d[25] * d[29] * d[34] - 2 * d[15] * d[20] * d[30] * d[34] + 2 * d[17] * d[22] * d[30] * d[34] - 2 * d[11] * d[24] * d[30] * d[34] + 2 * d[13] * d[26] * d[30] * d[34] + 2 * d[17] * d[21] * d[31] * d[34] - 4 * d[16] * d[22] * d[31] * d[34] + 2 * d[15] * d[23] * d[31] * d[34] + 2 * d[14] * d[24] * d[31] * d[34] - 4 * d[13] * d[25] * d[31] * d[34] + 2 * d[12] * d[26] * d[31] * d[34] - 2 * d[17] * d[18] * d[32] * d[34] + 2 * d[15] * d[22] * d[32] * d[34] + 2 * d[13] * d[24] * d[32] * d[34] - 2 * d[9] * d[26] * d[32] * d[34] - 2 * d[12] * d[20] * d[33] * d[34] - 2 * d[11] * d[21] * d[33] * d[34] + 2 * d[14] * d[22] * d[33] * d[34] + 2 * d[13] * d[23] * d[33] * d[34] + d[11] * d[18] * std::pow(d[34], 2) + d[9] * d[20] * std::pow(d[34], 2) - 2 * d[13] * d[22] * std::pow(d[34], 2) + 2 * d[17] * d[19] * d[27] * d[35] - 2 * d[16] * d[23] * d[27] * d[35] - 2 * d[14] * d[25] * d[27] * d[35] + 2 * d[10] * d[26] * d[27] * d[35] + 2 * d[17] * d[18] * d[28] * d[35] - 2 * d[15] * d[22] * d[28] * d[35] - 2 * d[13] * d[24] * d[28] * d[35] + 2 * d[9] * d[26] * d[28] * d[35] - 4 * d[17] * d[21] * d[30] * d[35] + 2 * d[16] * d[22] * d[30] * d[35] + 2 * d[15] * d[23] * d[30] * d[35] + 2 * d[14] * d[24] * d[30] * d[35] + 2 * d[13] * d[25] * d[30] * d[35] - 4 * d[12] * d[26] * d[30] * d[35] - 2 * d[15] * d[19] * d[31] * d[35] + 2 * d[16] * d[21] * d[31] * d[35] - 2 * d[10] * d[24] * d[31] * d[35] + 2 * d[12] * d[25] * d[31] * d[35] - 2 * d[16] * d[18] * d[32] * d[35] + 2 * d[15] * d[21] * d[32] * d[35] + 2 * d[12] * d[24] * d[32] * d[35] - 2 * d[9] * d[25] * d[32] * d[35] - 2 * d[13] * d[19] * d[33] * d[35] + 2 * d[14] * d[21] * d[33] * d[35] - 2 * d[10] * d[22] * d[33] * d[35] + 2 * d[12] * d[23] * d[33] * d[35] - 2 * d[14] * d[18] * d[34] * d[35] + 2 * d[13] * d[21] * d[34] * d[35] + 2 * d[12] * d[22] * d[34] * d[35] - 2 * d[9] * d[23] * d[34] * d[35] + d[10] * d[18] * std::pow(d[35], 2) + d[9] * d[19] * std::pow(d[35], 2) - 2 * d[12] * d[21] * std::pow(d[35], 2);
    coeffs[116] = std::pow(d[26], 2) * d[27] * d[28] + std::pow(d[25], 2) * d[27] * d[29] + std::pow(d[24], 2) * d[28] * d[29] - 2 * d[24] * d[25] * d[29] * d[30] - std::pow(d[26], 2) * std::pow(d[30], 2) - 2 * d[24] * d[26] * d[28] * d[31] + 2 * d[25] * d[26] * d[30] * d[31] - std::pow(d[25], 2) * std::pow(d[31], 2) - 2 * d[25] * d[26] * d[27] * d[32] + 2 * d[24] * d[26] * d[30] * d[32] + 2 * d[24] * d[25] * d[31] * d[32] - std::pow(d[24], 2) * std::pow(d[32], 2) + 2 * d[20] * d[24] * d[28] * d[33] - 2 * d[22] * d[26] * d[28] * d[33] + 2 * d[19] * d[24] * d[29] * d[33] - 2 * d[21] * d[25] * d[29] * d[33] - 2 * d[20] * d[25] * d[30] * d[33] + 2 * d[23] * d[26] * d[30] * d[33] + 2 * d[23] * d[25] * d[31] * d[33] - 2 * d[19] * d[26] * d[31] * d[33] - 4 * d[23] * d[24] * d[32] * d[33] + 2 * d[22] * d[25] * d[32] * d[33] + 2 * d[21] * d[26] * d[32] * d[33] + d[19] * d[20] * std::pow(d[33], 2) - std::pow(d[23], 2) * std::pow(d[33], 2) + 2 * d[20] * d[25] * d[27] * d[34] - 2 * d[23] * d[26] * d[27] * d[34] - 2 * d[21] * d[24] * d[29] * d[34] + 2 * d[18] * d[25] * d[29] * d[34] - 2 * d[20] * d[24] * d[30] * d[34] + 2 * d[22] * d[26] * d[30] * d[34] + 2 * d[23] * d[24] * d[31] * d[34] - 4 * d[22] * d[25] * d[31] * d[34] + 2 * d[21] * d[26] * d[31] * d[34] + 2 * d[22] * d[24] * d[32] * d[34] - 2 * d[18] * d[26] * d[32] * d[34] - 2 * d[20] * d[21] * d[33] * d[34] + 2 * d[22] * d[23] * d[33] * d[34] + d[18] * d[20] * std::pow(d[34], 2) - std::pow(d[22], 2) * std::pow(d[34], 2) - 2 * d[23] * d[25] * d[27] * d[35] + 2 * d[19] * d[26] * d[27] * d[35] - 2 * d[22] * d[24] * d[28] * d[35] + 2 * d[18] * d[26] * d[28] * d[35] + 2 * d[23] * d[24] * d[30] * d[35] + 2 * d[22] * d[25] * d[30] * d[35] - 4 * d[21] * d[26] * d[30] * d[35] - 2 * d[19] * d[24] * d[31] * d[35] + 2 * d[21] * d[25] * d[31] * d[35] + 2 * d[21] * d[24] * d[32] * d[35] - 2 * d[18] * d[25] * d[32] * d[35] - 2 * d[19] * d[22] * d[33] * d[35] + 2 * d[21] * d[23] * d[33] * d[35] + 2 * d[21] * d[22] * d[34] * d[35] - 2 * d[18] * d[23] * d[34] * d[35] + d[18] * d[19] * std::pow(d[35], 2) - std::pow(d[21], 2) * std::pow(d[35], 2);
    coeffs[117] = 2 * d[15] * d[28] * d[29] * d[33] - 2 * d[16] * d[29] * d[30] * d[33] - 2 * d[17] * d[28] * d[31] * d[33] + 2 * d[17] * d[30] * d[32] * d[33] + 2 * d[16] * d[31] * d[32] * d[33] - 2 * d[15] * std::pow(d[32], 2) * d[33] + d[11] * d[28] * std::pow(d[33], 2) + d[10] * d[29] * std::pow(d[33], 2) - 2 * d[14] * d[32] * std::pow(d[33], 2) + 2 * d[16] * d[27] * d[29] * d[34] - 2 * d[15] * d[29] * d[30] * d[34] + 2 * d[17] * d[30] * d[31] * d[34] - 2 * d[16] * std::pow(d[31], 2) * d[34] - 2 * d[17] * d[27] * d[32] * d[34] + 2 * d[15] * d[31] * d[32] * d[34] - 2 * d[12] * d[29] * d[33] * d[34] - 2 * d[11] * d[30] * d[33] * d[34] + 2 * d[14] * d[31] * d[33] * d[34] + 2 * d[13] * d[32] * d[33] * d[34] + d[11] * d[27] * std::pow(d[34], 2) + d[9] * d[29] * std::pow(d[34], 2) - 2 * d[13] * d[31] * std::pow(d[34], 2) + 2 * d[17] * d[27] * d[28] * d[35] - 2 * d[17] * std::pow(d[30], 2) * d[35] - 2 * d[15] * d[28] * d[31] * d[35] + 2 * d[16] * d[30] * d[31] * d[35] - 2 * d[16] * d[27] * d[32] * d[35] + 2 * d[15] * d[30] * d[32] * d[35] - 2 * d[13] * d[28] * d[33] * d[35] + 2 * d[14] * d[30] * d[33] * d[35] - 2 * d[10] * d[31] * d[33] * d[35] + 2 * d[12] * d[32] * d[33] * d[35] - 2 * d[14] * d[27] * d[34] * d[35] + 2 * d[13] * d[30] * d[34] * d[35] + 2 * d[12] * d[31] * d[34] * d[35] - 2 * d[9] * d[32] * d[34] * d[35] + d[10] * d[27] * std::pow(d[35], 2) + d[9] * d[28] * std::pow(d[35], 2) - 2 * d[12] * d[30] * std::pow(d[35], 2);
    coeffs[118] = 2 * d[24] * d[28] * d[29] * d[33] - 2 * d[25] * d[29] * d[30] * d[33] - 2 * d[26] * d[28] * d[31] * d[33] + 2 * d[26] * d[30] * d[32] * d[33] + 2 * d[25] * d[31] * d[32] * d[33] - 2 * d[24] * std::pow(d[32], 2) * d[33] + d[20] * d[28] * std::pow(d[33], 2) + d[19] * d[29] * std::pow(d[33], 2) - 2 * d[23] * d[32] * std::pow(d[33], 2) + 2 * d[25] * d[27] * d[29] * d[34] - 2 * d[24] * d[29] * d[30] * d[34] + 2 * d[26] * d[30] * d[31] * d[34] - 2 * d[25] * std::pow(d[31], 2) * d[34] - 2 * d[26] * d[27] * d[32] * d[34] + 2 * d[24] * d[31] * d[32] * d[34] - 2 * d[21] * d[29] * d[33] * d[34] - 2 * d[20] * d[30] * d[33] * d[34] + 2 * d[23] * d[31] * d[33] * d[34] + 2 * d[22] * d[32] * d[33] * d[34] + d[20] * d[27] * std::pow(d[34], 2) + d[18] * d[29] * std::pow(d[34], 2) - 2 * d[22] * d[31] * std::pow(d[34], 2) + 2 * d[26] * d[27] * d[28] * d[35] - 2 * d[26] * std::pow(d[30], 2) * d[35] - 2 * d[24] * d[28] * d[31] * d[35] + 2 * d[25] * d[30] * d[31] * d[35] - 2 * d[25] * d[27] * d[32] * d[35] + 2 * d[24] * d[30] * d[32] * d[35] - 2 * d[22] * d[28] * d[33] * d[35] + 2 * d[23] * d[30] * d[33] * d[35] - 2 * d[19] * d[31] * d[33] * d[35] + 2 * d[21] * d[32] * d[33] * d[35] - 2 * d[23] * d[27] * d[34] * d[35] + 2 * d[22] * d[30] * d[34] * d[35] + 2 * d[21] * d[31] * d[34] * d[35] - 2 * d[18] * d[32] * d[34] * d[35] + d[19] * d[27] * std::pow(d[35], 2) + d[18] * d[28] * std::pow(d[35], 2) - 2 * d[21] * d[30] * std::pow(d[35], 2);
    coeffs[119] = d[28] * d[29] * std::pow(d[33], 2) - std::pow(d[32], 2) * std::pow(d[33], 2) - 2 * d[29] * d[30] * d[33] * d[34] + 2 * d[31] * d[32] * d[33] * d[34] + d[27] * d[29] * std::pow(d[34], 2) - std::pow(d[31], 2) * std::pow(d[34], 2) - 2 * d[28] * d[31] * d[33] * d[35] + 2 * d[30] * d[32] * d[33] * d[35] + 2 * d[30] * d[31] * d[34] * d[35] - 2 * d[27] * d[32] * d[34] * d[35] + d[27] * d[28] * std::pow(d[35], 2) - std::pow(d[30], 2) * std::pow(d[35], 2);
    coeffs[120] = d[11] * std::pow(d[16], 2) * d[36] - 2 * d[14] * d[16] * d[17] * d[36] + d[10] * std::pow(d[17], 2) * d[36] + d[11] * std::pow(d[15], 2) * d[37] - 2 * d[13] * d[15] * d[17] * d[37] + d[9] * std::pow(d[17], 2) * d[37] + d[10] * std::pow(d[15], 2) * d[38] - 2 * d[12] * d[15] * d[16] * d[38] + d[9] * std::pow(d[16], 2) * d[38] - 2 * d[11] * d[15] * d[16] * d[39] + 2 * d[14] * d[15] * d[17] * d[39] + 2 * d[13] * d[16] * d[17] * d[39] - 2 * d[12] * std::pow(d[17], 2) * d[39] + 2 * d[14] * d[15] * d[16] * d[40] - 2 * d[13] * std::pow(d[16], 2) * d[40] - 2 * d[10] * d[15] * d[17] * d[40] + 2 * d[12] * d[16] * d[17] * d[40] - 2 * d[14] * std::pow(d[15], 2) * d[41] + 2 * d[13] * d[15] * d[16] * d[41] + 2 * d[12] * d[15] * d[17] * d[41] - 2 * d[9] * d[16] * d[17] * d[41] + 2 * d[10] * d[11] * d[15] * d[42] - 2 * std::pow(d[14], 2) * d[15] * d[42] - 2 * d[11] * d[12] * d[16] * d[42] + 2 * d[13] * d[14] * d[16] * d[42] - 2 * d[10] * d[13] * d[17] * d[42] + 2 * d[12] * d[14] * d[17] * d[42] - 2 * d[11] * d[12] * d[15] * d[43] + 2 * d[13] * d[14] * d[15] * d[43] + 2 * d[9] * d[11] * d[16] * d[43] - 2 * std::pow(d[13], 2) * d[16] * d[43] + 2 * d[12] * d[13] * d[17] * d[43] - 2 * d[9] * d[14] * d[17] * d[43] - 2 * d[10] * d[13] * d[15] * d[44] + 2 * d[12] * d[14] * d[15] * d[44] + 2 * d[12] * d[13] * d[16] * d[44] - 2 * d[9] * d[14] * d[16] * d[44] + 2 * d[9] * d[10] * d[17] * d[44] - 2 * std::pow(d[12], 2) * d[17] * d[44];
    coeffs[121] = std::pow(d[17], 2) * d[19] * d[36] + std::pow(d[16], 2) * d[20] * d[36] - 2 * d[16] * d[17] * d[23] * d[36] + 2 * d[11] * d[16] * d[25] * d[36] - 2 * d[14] * d[17] * d[25] * d[36] - 2 * d[14] * d[16] * d[26] * d[36] + 2 * d[10] * d[17] * d[26] * d[36] + std::pow(d[17], 2) * d[18] * d[37] + std::pow(d[15], 2) * d[20] * d[37] - 2 * d[15] * d[17] * d[22] * d[37] + 2 * d[11] * d[15] * d[24] * d[37] - 2 * d[13] * d[17] * d[24] * d[37] - 2 * d[13] * d[15] * d[26] * d[37] + 2 * d[9] * d[17] * d[26] * d[37] + std::pow(d[16], 2) * d[18] * d[38] + std::pow(d[15], 2) * d[19] * d[38] - 2 * d[15] * d[16] * d[21] * d[38] + 2 * d[10] * d[15] * d[24] * d[38] - 2 * d[12] * d[16] * d[24] * d[38] - 2 * d[12] * d[15] * d[25] * d[38] + 2 * d[9] * d[16] * d[25] * d[38] - 2 * d[15] * d[16] * d[20] * d[39] - 2 * std::pow(d[17], 2) * d[21] * d[39] + 2 * d[16] * d[17] * d[22] * d[39] + 2 * d[15] * d[17] * d[23] * d[39] - 2 * d[11] * d[16] * d[24] * d[39] + 2 * d[14] * d[17] * d[24] * d[39] - 2 * d[11] * d[15] * d[25] * d[39] + 2 * d[13] * d[17] * d[25] * d[39] + 2 * d[14] * d[15] * d[26] * d[39] + 2 * d[13] * d[16] * d[26] * d[39] - 4 * d[12] * d[17] * d[26] * d[39] - 2 * d[15] * d[17] * d[19] * d[40] + 2 * d[16] * d[17] * d[21] * d[40] - 2 * std::pow(d[16], 2) * d[22] * d[40] + 2 * d[15] * d[16] * d[23] * d[40] + 2 * d[14] * d[16] * d[24] * d[40] - 2 * d[10] * d[17] * d[24] * d[40] + 2 * d[14] * d[15] * d[25] * d[40] - 4 * d[13] * d[16] * d[25] * d[40] + 2 * d[12] * d[17] * d[25] * d[40] - 2 * d[10] * d[15] * d[26] * d[40] + 2 * d[12] * d[16] * d[26] * d[40] - 2 * d[16] * d[17] * d[18] * d[41] + 2 * d[15] * d[17] * d[21] * d[41] + 2 * d[15] * d[16] * d[22] * d[41] - 2 * std::pow(d[15], 2) * d[23] * d[41] - 4 * d[14] * d[15] * d[24] * d[41] + 2 * d[13] * d[16] * d[24] * d[41] + 2 * d[12] * d[17] * d[24] * d[41] + 2 * d[13] * d[15] * d[25] * d[41] - 2 * d[9] * d[17] * d[25] * d[41] + 2 * d[12] * d[15] * d[26] * d[41] - 2 * d[9] * d[16] * d[26] * d[41] + 2 * d[11] * d[15] * d[19] * d[42] - 2 * d[13] * d[17] * d[19] * d[42] + 2 * d[10] * d[15] * d[20] * d[42] - 2 * d[12] * d[16] * d[20] * d[42] - 2 * d[11] * d[16] * d[21] * d[42] + 2 * d[14] * d[17] * d[21] * d[42] + 2 * d[14] * d[16] * d[22] * d[42] - 2 * d[10] * d[17] * d[22] * d[42] - 4 * d[14] * d[15] * d[23] * d[42] + 2 * d[13] * d[16] * d[23] * d[42] + 2 * d[12] * d[17] * d[23] * d[42] + 2 * d[10] * d[11] * d[24] * d[42] - 2 * std::pow(d[14], 2) * d[24] * d[42] - 2 * d[11] * d[12] * d[25] * d[42] + 2 * d[13] * d[14] * d[25] * d[42] - 2 * d[10] * d[13] * d[26] * d[42] + 2 * d[12] * d[14] * d[26] * d[42] + 2 * d[11] * d[16] * d[18] * d[43] - 2 * d[14] * d[17] * d[18] * d[43] - 2 * d[12] * d[15] * d[20] * d[43] + 2 * d[9] * d[16] * d[20] * d[43] - 2 * d[11] * d[15] * d[21] * d[43] + 2 * d[13] * d[17] * d[21] * d[43] + 2 * d[14] * d[15] * d[22] * d[43] - 4 * d[13] * d[16] * d[22] * d[43] + 2 * d[12] * d[17] * d[22] * d[43] + 2 * d[13] * d[15] * d[23] * d[43] - 2 * d[9] * d[17] * d[23] * d[43] - 2 * d[11] * d[12] * d[24] * d[43] + 2 * d[13] * d[14] * d[24] * d[43] + 2 * d[9] * d[11] * d[25] * d[43] - 2 * std::pow(d[13], 2) * d[25] * d[43] + 2 * d[12] * d[13] * d[26] * d[43] - 2 * d[9] * d[14] * d[26] * d[43] - 2 * d[14] * d[16] * d[18] * d[44] + 2 * d[10] * d[17] * d[18] * d[44] - 2 * d[13] * d[15] * d[19] * d[44] + 2 * d[9] * d[17] * d[19] * d[44] + 2 * d[14] * d[15] * d[21] * d[44] + 2 * d[13] * d[16] * d[21] * d[44] - 4 * d[12] * d[17] * d[21] * d[44] - 2 * d[10] * d[15] * d[22] * d[44] + 2 * d[12] * d[16] * d[22] * d[44] + 2 * d[12] * d[15] * d[23] * d[44] - 2 * d[9] * d[16] * d[23] * d[44] - 2 * d[10] * d[13] * d[24] * d[44] + 2 * d[12] * d[14] * d[24] * d[44] + 2 * d[12] * d[13] * d[25] * d[44] - 2 * d[9] * d[14] * d[25] * d[44] + 2 * d[9] * d[10] * d[26] * d[44] - 2 * std::pow(d[12], 2) * d[26] * d[44];
    coeffs[122] = 2 * d[16] * d[20] * d[25] * d[36] - 2 * d[17] * d[23] * d[25] * d[36] + d[11] * std::pow(d[25], 2) * d[36] + 2 * d[17] * d[19] * d[26] * d[36] - 2 * d[16] * d[23] * d[26] * d[36] - 2 * d[14] * d[25] * d[26] * d[36] + d[10] * std::pow(d[26], 2) * d[36] + 2 * d[15] * d[20] * d[24] * d[37] - 2 * d[17] * d[22] * d[24] * d[37] + d[11] * std::pow(d[24], 2) * d[37] + 2 * d[17] * d[18] * d[26] * d[37] - 2 * d[15] * d[22] * d[26] * d[37] - 2 * d[13] * d[24] * d[26] * d[37] + d[9] * std::pow(d[26], 2) * d[37] + 2 * d[15] * d[19] * d[24] * d[38] - 2 * d[16] * d[21] * d[24] * d[38] + d[10] * std::pow(d[24], 2) * d[38] + 2 * d[16] * d[18] * d[25] * d[38] - 2 * d[15] * d[21] * d[25] * d[38] - 2 * d[12] * d[24] * d[25] * d[38] + d[9] * std::pow(d[25], 2) * d[38] - 2 * d[16] * d[20] * d[24] * d[39] + 2 * d[17] * d[23] * d[24] * d[39] - 2 * d[15] * d[20] * d[25] * d[39] + 2 * d[17] * d[22] * d[25] * d[39] - 2 * d[11] * d[24] * d[25] * d[39] - 4 * d[17] * d[21] * d[26] * d[39] + 2 * d[16] * d[22] * d[26] * d[39] + 2 * d[15] * d[23] * d[26] * d[39] + 2 * d[14] * d[24] * d[26] * d[39] + 2 * d[13] * d[25] * d[26] * d[39] - 2 * d[12] * std::pow(d[26], 2) * d[39] - 2 * d[17] * d[19] * d[24] * d[40] + 2 * d[16] * d[23] * d[24] * d[40] + 2 * d[17] * d[21] * d[25] * d[40] - 4 * d[16] * d[22] * d[25] * d[40] + 2 * d[15] * d[23] * d[25] * d[40] + 2 * d[14] * d[24] * d[25] * d[40] - 2 * d[13] * std::pow(d[25], 2) * d[40] - 2 * d[15] * d[19] * d[26] * d[40] + 2 * d[16] * d[21] * d[26] * d[40] - 2 * d[10] * d[24] * d[26] * d[40] + 2 * d[12] * d[25] * d[26] * d[40] + 2 * d[17] * d[21] * d[24] * d[41] + 2 * d[16] * d[22] * d[24] * d[41] - 4 * d[15] * d[23] * d[24] * d[41] - 2 * d[14] * std::pow(d[24], 2) * d[41] - 2 * d[17] * d[18] * d[25] * d[41] + 2 * d[15] * d[22] * d[25] * d[41] + 2 * d[13] * d[24] * d[25] * d[41] - 2 * d[16] * d[18] * d[26] * d[41] + 2 * d[15] * d[21] * d[26] * d[41] + 2 * d[12] * d[24] * d[26] * d[41] - 2 * d[9] * d[25] * d[26] * d[41] + 2 * d[15] * d[19] * d[20] * d[42] - 2 * d[16] * d[20] * d[21] * d[42] - 2 * d[17] * d[19] * d[22] * d[42] + 2 * d[17] * d[21] * d[23] * d[42] + 2 * d[16] * d[22] * d[23] * d[42] - 2 * d[15] * std::pow(d[23], 2) * d[42] + 2 * d[11] * d[19] * d[24] * d[42] + 2 * d[10] * d[20] * d[24] * d[42] - 4 * d[14] * d[23] * d[24] * d[42] - 2 * d[12] * d[20] * d[25] * d[42] - 2 * d[11] * d[21] * d[25] * d[42] + 2 * d[14] * d[22] * d[25] * d[42] + 2 * d[13] * d[23] * d[25] * d[42] - 2 * d[13] * d[19] * d[26] * d[42] + 2 * d[14] * d[21] * d[26] * d[42] - 2 * d[10] * d[22] * d[26] * d[42] + 2 * d[12] * d[23] * d[26] * d[42] + 2 * d[16] * d[18] * d[20] * d[43] - 2 * d[15] * d[20] * d[21] * d[43] + 2 * d[17] * d[21] * d[22] * d[43] - 2 * d[16] * std::pow(d[22], 2) * d[43] - 2 * d[17] * d[18] * d[23] * d[43] + 2 * d[15] * d[22] * d[23] * d[43] - 2 * d[12] * d[20] * d[24] * d[43] - 2 * d[11] * d[21] * d[24] * d[43] + 2 * d[14] * d[22] * d[24] * d[43] + 2 * d[13] * d[23] * d[24] * d[43] + 2 * d[11] * d[18] * d[25] * d[43] + 2 * d[9] * d[20] * d[25] * d[43] - 4 * d[13] * d[22] * d[25] * d[43] - 2 * d[14] * d[18] * d[26] * d[43] + 2 * d[13] * d[21] * d[26] * d[43] + 2 * d[12] * d[22] * d[26] * d[43] - 2 * d[9] * d[23] * d[26] * d[43] + 2 * d[17] * d[18] * d[19] * d[44] - 2 * d[17] * std::pow(d[21], 2) * d[44] - 2 * d[15] * d[19] * d[22] * d[44] + 2 * d[16] * d[21] * d[22] * d[44] - 2 * d[16] * d[18] * d[23] * d[44] + 2 * d[15] * d[21] * d[23] * d[44] - 2 * d[13] * d[19] * d[24] * d[44] + 2 * d[14] * d[21] * d[24] * d[44] - 2 * d[10] * d[22] * d[24] * d[44] + 2 * d[12] * d[23] * d[24] * d[44] - 2 * d[14] * d[18] * d[25] * d[44] + 2 * d[13] * d[21] * d[25] * d[44] + 2 * d[12] * d[22] * d[25] * d[44] - 2 * d[9] * d[23] * d[25] * d[44] + 2 * d[10] * d[18] * d[26] * d[44] + 2 * d[9] * d[19] * d[26] * d[44] - 4 * d[12] * d[21] * d[26] * d[44];
    coeffs[123] = d[20] * std::pow(d[25], 2) * d[36] - 2 * d[23] * d[25] * d[26] * d[36] + d[19] * std::pow(d[26], 2) * d[36] + d[20] * std::pow(d[24], 2) * d[37] - 2 * d[22] * d[24] * d[26] * d[37] + d[18] * std::pow(d[26], 2) * d[37] + d[19] * std::pow(d[24], 2) * d[38] - 2 * d[21] * d[24] * d[25] * d[38] + d[18] * std::pow(d[25], 2) * d[38] - 2 * d[20] * d[24] * d[25] * d[39] + 2 * d[23] * d[24] * d[26] * d[39] + 2 * d[22] * d[25] * d[26] * d[39] - 2 * d[21] * std::pow(d[26], 2) * d[39] + 2 * d[23] * d[24] * d[25] * d[40] - 2 * d[22] * std::pow(d[25], 2) * d[40] - 2 * d[19] * d[24] * d[26] * d[40] + 2 * d[21] * d[25] * d[26] * d[40] - 2 * d[23] * std::pow(d[24], 2) * d[41] + 2 * d[22] * d[24] * d[25] * d[41] + 2 * d[21] * d[24] * d[26] * d[41] - 2 * d[18] * d[25] * d[26] * d[41] + 2 * d[19] * d[20] * d[24] * d[42] - 2 * std::pow(d[23], 2) * d[24] * d[42] - 2 * d[20] * d[21] * d[25] * d[42] + 2 * d[22] * d[23] * d[25] * d[42] - 2 * d[19] * d[22] * d[26] * d[42] + 2 * d[21] * d[23] * d[26] * d[42] - 2 * d[20] * d[21] * d[24] * d[43] + 2 * d[22] * d[23] * d[24] * d[43] + 2 * d[18] * d[20] * d[25] * d[43] - 2 * std::pow(d[22], 2) * d[25] * d[43] + 2 * d[21] * d[22] * d[26] * d[43] - 2 * d[18] * d[23] * d[26] * d[43] - 2 * d[19] * d[22] * d[24] * d[44] + 2 * d[21] * d[23] * d[24] * d[44] + 2 * d[21] * d[22] * d[25] * d[44] - 2 * d[18] * d[23] * d[25] * d[44] + 2 * d[18] * d[19] * d[26] * d[44] - 2 * std::pow(d[21], 2) * d[26] * d[44];
    coeffs[124] = std::pow(d[17], 2) * d[28] * d[36] + std::pow(d[16], 2) * d[29] * d[36] - 2 * d[16] * d[17] * d[32] * d[36] + 2 * d[11] * d[16] * d[34] * d[36] - 2 * d[14] * d[17] * d[34] * d[36] - 2 * d[14] * d[16] * d[35] * d[36] + 2 * d[10] * d[17] * d[35] * d[36] + std::pow(d[17], 2) * d[27] * d[37] + std::pow(d[15], 2) * d[29] * d[37] - 2 * d[15] * d[17] * d[31] * d[37] + 2 * d[11] * d[15] * d[33] * d[37] - 2 * d[13] * d[17] * d[33] * d[37] - 2 * d[13] * d[15] * d[35] * d[37] + 2 * d[9] * d[17] * d[35] * d[37] + std::pow(d[16], 2) * d[27] * d[38] + std::pow(d[15], 2) * d[28] * d[38] - 2 * d[15] * d[16] * d[30] * d[38] + 2 * d[10] * d[15] * d[33] * d[38] - 2 * d[12] * d[16] * d[33] * d[38] - 2 * d[12] * d[15] * d[34] * d[38] + 2 * d[9] * d[16] * d[34] * d[38] - 2 * d[15] * d[16] * d[29] * d[39] - 2 * std::pow(d[17], 2) * d[30] * d[39] + 2 * d[16] * d[17] * d[31] * d[39] + 2 * d[15] * d[17] * d[32] * d[39] - 2 * d[11] * d[16] * d[33] * d[39] + 2 * d[14] * d[17] * d[33] * d[39] - 2 * d[11] * d[15] * d[34] * d[39] + 2 * d[13] * d[17] * d[34] * d[39] + 2 * d[14] * d[15] * d[35] * d[39] + 2 * d[13] * d[16] * d[35] * d[39] - 4 * d[12] * d[17] * d[35] * d[39] - 2 * d[15] * d[17] * d[28] * d[40] + 2 * d[16] * d[17] * d[30] * d[40] - 2 * std::pow(d[16], 2) * d[31] * d[40] + 2 * d[15] * d[16] * d[32] * d[40] + 2 * d[14] * d[16] * d[33] * d[40] - 2 * d[10] * d[17] * d[33] * d[40] + 2 * d[14] * d[15] * d[34] * d[40] - 4 * d[13] * d[16] * d[34] * d[40] + 2 * d[12] * d[17] * d[34] * d[40] - 2 * d[10] * d[15] * d[35] * d[40] + 2 * d[12] * d[16] * d[35] * d[40] - 2 * d[16] * d[17] * d[27] * d[41] + 2 * d[15] * d[17] * d[30] * d[41] + 2 * d[15] * d[16] * d[31] * d[41] - 2 * std::pow(d[15], 2) * d[32] * d[41] - 4 * d[14] * d[15] * d[33] * d[41] + 2 * d[13] * d[16] * d[33] * d[41] + 2 * d[12] * d[17] * d[33] * d[41] + 2 * d[13] * d[15] * d[34] * d[41] - 2 * d[9] * d[17] * d[34] * d[41] + 2 * d[12] * d[15] * d[35] * d[41] - 2 * d[9] * d[16] * d[35] * d[41] + 2 * d[11] * d[15] * d[28] * d[42] - 2 * d[13] * d[17] * d[28] * d[42] + 2 * d[10] * d[15] * d[29] * d[42] - 2 * d[12] * d[16] * d[29] * d[42] - 2 * d[11] * d[16] * d[30] * d[42] + 2 * d[14] * d[17] * d[30] * d[42] + 2 * d[14] * d[16] * d[31] * d[42] - 2 * d[10] * d[17] * d[31] * d[42] - 4 * d[14] * d[15] * d[32] * d[42] + 2 * d[13] * d[16] * d[32] * d[42] + 2 * d[12] * d[17] * d[32] * d[42] + 2 * d[10] * d[11] * d[33] * d[42] - 2 * std::pow(d[14], 2) * d[33] * d[42] - 2 * d[11] * d[12] * d[34] * d[42] + 2 * d[13] * d[14] * d[34] * d[42] - 2 * d[10] * d[13] * d[35] * d[42] + 2 * d[12] * d[14] * d[35] * d[42] + 2 * d[11] * d[16] * d[27] * d[43] - 2 * d[14] * d[17] * d[27] * d[43] - 2 * d[12] * d[15] * d[29] * d[43] + 2 * d[9] * d[16] * d[29] * d[43] - 2 * d[11] * d[15] * d[30] * d[43] + 2 * d[13] * d[17] * d[30] * d[43] + 2 * d[14] * d[15] * d[31] * d[43] - 4 * d[13] * d[16] * d[31] * d[43] + 2 * d[12] * d[17] * d[31] * d[43] + 2 * d[13] * d[15] * d[32] * d[43] - 2 * d[9] * d[17] * d[32] * d[43] - 2 * d[11] * d[12] * d[33] * d[43] + 2 * d[13] * d[14] * d[33] * d[43] + 2 * d[9] * d[11] * d[34] * d[43] - 2 * std::pow(d[13], 2) * d[34] * d[43] + 2 * d[12] * d[13] * d[35] * d[43] - 2 * d[9] * d[14] * d[35] * d[43] - 2 * d[14] * d[16] * d[27] * d[44] + 2 * d[10] * d[17] * d[27] * d[44] - 2 * d[13] * d[15] * d[28] * d[44] + 2 * d[9] * d[17] * d[28] * d[44] + 2 * d[14] * d[15] * d[30] * d[44] + 2 * d[13] * d[16] * d[30] * d[44] - 4 * d[12] * d[17] * d[30] * d[44] - 2 * d[10] * d[15] * d[31] * d[44] + 2 * d[12] * d[16] * d[31] * d[44] + 2 * d[12] * d[15] * d[32] * d[44] - 2 * d[9] * d[16] * d[32] * d[44] - 2 * d[10] * d[13] * d[33] * d[44] + 2 * d[12] * d[14] * d[33] * d[44] + 2 * d[12] * d[13] * d[34] * d[44] - 2 * d[9] * d[14] * d[34] * d[44] + 2 * d[9] * d[10] * d[35] * d[44] - 2 * std::pow(d[12], 2) * d[35] * d[44];
    coeffs[125] = 2 * d[17] * d[26] * d[28] * d[36] + 2 * d[16] * d[25] * d[29] * d[36] - 2 * d[17] * d[25] * d[32] * d[36] - 2 * d[16] * d[26] * d[32] * d[36] + 2 * d[16] * d[20] * d[34] * d[36] - 2 * d[17] * d[23] * d[34] * d[36] + 2 * d[11] * d[25] * d[34] * d[36] - 2 * d[14] * d[26] * d[34] * d[36] + 2 * d[17] * d[19] * d[35] * d[36] - 2 * d[16] * d[23] * d[35] * d[36] - 2 * d[14] * d[25] * d[35] * d[36] + 2 * d[10] * d[26] * d[35] * d[36] + 2 * d[17] * d[26] * d[27] * d[37] + 2 * d[15] * d[24] * d[29] * d[37] - 2 * d[17] * d[24] * d[31] * d[37] - 2 * d[15] * d[26] * d[31] * d[37] + 2 * d[15] * d[20] * d[33] * d[37] - 2 * d[17] * d[22] * d[33] * d[37] + 2 * d[11] * d[24] * d[33] * d[37] - 2 * d[13] * d[26] * d[33] * d[37] + 2 * d[17] * d[18] * d[35] * d[37] - 2 * d[15] * d[22] * d[35] * d[37] - 2 * d[13] * d[24] * d[35] * d[37] + 2 * d[9] * d[26] * d[35] * d[37] + 2 * d[16] * d[25] * d[27] * d[38] + 2 * d[15] * d[24] * d[28] * d[38] - 2 * d[16] * d[24] * d[30] * d[38] - 2 * d[15] * d[25] * d[30] * d[38] + 2 * d[15] * d[19] * d[33] * d[38] - 2 * d[16] * d[21] * d[33] * d[38] + 2 * d[10] * d[24] * d[33] * d[38] - 2 * d[12] * d[25] * d[33] * d[38] + 2 * d[16] * d[18] * d[34] * d[38] - 2 * d[15] * d[21] * d[34] * d[38] - 2 * d[12] * d[24] * d[34] * d[38] + 2 * d[9] * d[25] * d[34] * d[38] - 2 * d[16] * d[24] * d[29] * d[39] - 2 * d[15] * d[25] * d[29] * d[39] - 4 * d[17] * d[26] * d[30] * d[39] + 2 * d[17] * d[25] * d[31] * d[39] + 2 * d[16] * d[26] * d[31] * d[39] + 2 * d[17] * d[24] * d[32] * d[39] + 2 * d[15] * d[26] * d[32] * d[39] - 2 * d[16] * d[20] * d[33] * d[39] + 2 * d[17] * d[23] * d[33] * d[39] - 2 * d[11] * d[25] * d[33] * d[39] + 2 * d[14] * d[26] * d[33] * d[39] - 2 * d[15] * d[20] * d[34] * d[39] + 2 * d[17] * d[22] * d[34] * d[39] - 2 * d[11] * d[24] * d[34] * d[39] + 2 * d[13] * d[26] * d[34] * d[39] - 4 * d[17] * d[21] * d[35] * d[39] + 2 * d[16] * d[22] * d[35] * d[39] + 2 * d[15] * d[23] * d[35] * d[39] + 2 * d[14] * d[24] * d[35] * d[39] + 2 * d[13] * d[25] * d[35] * d[39] - 4 * d[12] * d[26] * d[35] * d[39] - 2 * d[17] * d[24] * d[28] * d[40] - 2 * d[15] * d[26] * d[28] * d[40] + 2 * d[17] * d[25] * d[30] * d[40] + 2 * d[16] * d[26] * d[30] * d[40] - 4 * d[16] * d[25] * d[31] * d[40] + 2 * d[16] * d[24] * d[32] * d[40] + 2 * d[15] * d[25] * d[32] * d[40] - 2 * d[17] * d[19] * d[33] * d[40] + 2 * d[16] * d[23] * d[33] * d[40] + 2 * d[14] * d[25] * d[33] * d[40] - 2 * d[10] * d[26] * d[33] * d[40] + 2 * d[17] * d[21] * d[34] * d[40] - 4 * d[16] * d[22] * d[34] * d[40] + 2 * d[15] * d[23] * d[34] * d[40] + 2 * d[14] * d[24] * d[34] * d[40] - 4 * d[13] * d[25] * d[34] * d[40] + 2 * d[12] * d[26] * d[34] * d[40] - 2 * d[15] * d[19] * d[35] * d[40] + 2 * d[16] * d[21] * d[35] * d[40] - 2 * d[10] * d[24] * d[35] * d[40] + 2 * d[12] * d[25] * d[35] * d[40] - 2 * d[17] * d[25] * d[27] * d[41] - 2 * d[16] * d[26] * d[27] * d[41] + 2 * d[17] * d[24] * d[30] * d[41] + 2 * d[15] * d[26] * d[30] * d[41] + 2 * d[16] * d[24] * d[31] * d[41] + 2 * d[15] * d[25] * d[31] * d[41] - 4 * d[15] * d[24] * d[32] * d[41] + 2 * d[17] * d[21] * d[33] * d[41] + 2 * d[16] * d[22] * d[33] * d[41] - 4 * d[15] * d[23] * d[33] * d[41] - 4 * d[14] * d[24] * d[33] * d[41] + 2 * d[13] * d[25] * d[33] * d[41] + 2 * d[12] * d[26] * d[33] * d[41] - 2 * d[17] * d[18] * d[34] * d[41] + 2 * d[15] * d[22] * d[34] * d[41] + 2 * d[13] * d[24] * d[34] * d[41] - 2 * d[9] * d[26] * d[34] * d[41] - 2 * d[16] * d[18] * d[35] * d[41] + 2 * d[15] * d[21] * d[35] * d[41] + 2 * d[12] * d[24] * d[35] * d[41] - 2 * d[9] * d[25] * d[35] * d[41] + 2 * d[15] * d[20] * d[28] * d[42] - 2 * d[17] * d[22] * d[28] * d[42] + 2 * d[11] * d[24] * d[28] * d[42] - 2 * d[13] * d[26] * d[28] * d[42] + 2 * d[15] * d[19] * d[29] * d[42] - 2 * d[16] * d[21] * d[29] * d[42] + 2 * d[10] * d[24] * d[29] * d[42] - 2 * d[12] * d[25] * d[29] * d[42] - 2 * d[16] * d[20] * d[30] * d[42] + 2 * d[17] * d[23] * d[30] * d[42] - 2 * d[11] * d[25] * d[30] * d[42] + 2 * d[14] * d[26] * d[30] * d[42] - 2 * d[17] * d[19] * d[31] * d[42] + 2 * d[16] * d[23] * d[31] * d[42] + 2 * d[14] * d[25] * d[31] * d[42] - 2 * d[10] * d[26] * d[31] * d[42] + 2 * d[17] * d[21] * d[32] * d[42] + 2 * d[16] * d[22] * d[32] * d[42] - 4 * d[15] * d[23] * d[32] * d[42] - 4 * d[14] * d[24] * d[32] * d[42] + 2 * d[13] * d[25] * d[32] * d[42] + 2 * d[12] * d[26] * d[32] * d[42] + 2 * d[11] * d[19] * d[33] * d[42] + 2 * d[10] * d[20] * d[33] * d[42] - 4 * d[14] * d[23] * d[33] * d[42] - 2 * d[12] * d[20] * d[34] * d[42] - 2 * d[11] * d[21] * d[34] * d[42] + 2 * d[14] * d[22] * d[34] * d[42] + 2 * d[13] * d[23] * d[34] * d[42] - 2 * d[13] * d[19] * d[35] * d[42] + 2 * d[14] * d[21] * d[35] * d[42] - 2 * d[10] * d[22] * d[35] * d[42] + 2 * d[12] * d[23] * d[35] * d[42] + 2 * d[16] * d[20] * d[27] * d[43] - 2 * d[17] * d[23] * d[27] * d[43] + 2 * d[11] * d[25] * d[27] * d[43] - 2 * d[14] * d[26] * d[27] * d[43] + 2 * d[16] * d[18] * d[29] * d[43] - 2 * d[15] * d[21] * d[29] * d[43] - 2 * d[12] * d[24] * d[29] * d[43] + 2 * d[9] * d[25] * d[29] * d[43] - 2 * d[15] * d[20] * d[30] * d[43] + 2 * d[17] * d[22] * d[30] * d[43] - 2 * d[11] * d[24] * d[30] * d[43] + 2 * d[13] * d[26] * d[30] * d[43] + 2 * d[17] * d[21] * d[31] * d[43] - 4 * d[16] * d[22] * d[31] * d[43] + 2 * d[15] * d[23] * d[31] * d[43] + 2 * d[14] * d[24] * d[31] * d[43] - 4 * d[13] * d[25] * d[31] * d[43] + 2 * d[12] * d[26] * d[31] * d[43] - 2 * d[17] * d[18] * d[32] * d[43] + 2 * d[15] * d[22] * d[32] * d[43] + 2 * d[13] * d[24] * d[32] * d[43] - 2 * d[9] * d[26] * d[32] * d[43] - 2 * d[12] * d[20] * d[33] * d[43] - 2 * d[11] * d[21] * d[33] * d[43] + 2 * d[14] * d[22] * d[33] * d[43] + 2 * d[13] * d[23] * d[33] * d[43] + 2 * d[11] * d[18] * d[34] * d[43] + 2 * d[9] * d[20] * d[34] * d[43] - 4 * d[13] * d[22] * d[34] * d[43] - 2 * d[14] * d[18] * d[35] * d[43] + 2 * d[13] * d[21] * d[35] * d[43] + 2 * d[12] * d[22] * d[35] * d[43] - 2 * d[9] * d[23] * d[35] * d[43] + 2 * d[17] * d[19] * d[27] * d[44] - 2 * d[16] * d[23] * d[27] * d[44] - 2 * d[14] * d[25] * d[27] * d[44] + 2 * d[10] * d[26] * d[27] * d[44] + 2 * d[17] * d[18] * d[28] * d[44] - 2 * d[15] * d[22] * d[28] * d[44] - 2 * d[13] * d[24] * d[28] * d[44] + 2 * d[9] * d[26] * d[28] * d[44] - 4 * d[17] * d[21] * d[30] * d[44] + 2 * d[16] * d[22] * d[30] * d[44] + 2 * d[15] * d[23] * d[30] * d[44] + 2 * d[14] * d[24] * d[30] * d[44] + 2 * d[13] * d[25] * d[30] * d[44] - 4 * d[12] * d[26] * d[30] * d[44] - 2 * d[15] * d[19] * d[31] * d[44] + 2 * d[16] * d[21] * d[31] * d[44] - 2 * d[10] * d[24] * d[31] * d[44] + 2 * d[12] * d[25] * d[31] * d[44] - 2 * d[16] * d[18] * d[32] * d[44] + 2 * d[15] * d[21] * d[32] * d[44] + 2 * d[12] * d[24] * d[32] * d[44] - 2 * d[9] * d[25] * d[32] * d[44] - 2 * d[13] * d[19] * d[33] * d[44] + 2 * d[14] * d[21] * d[33] * d[44] - 2 * d[10] * d[22] * d[33] * d[44] + 2 * d[12] * d[23] * d[33] * d[44] - 2 * d[14] * d[18] * d[34] * d[44] + 2 * d[13] * d[21] * d[34] * d[44] + 2 * d[12] * d[22] * d[34] * d[44] - 2 * d[9] * d[23] * d[34] * d[44] + 2 * d[10] * d[18] * d[35] * d[44] + 2 * d[9] * d[19] * d[35] * d[44] - 4 * d[12] * d[21] * d[35] * d[44];
    coeffs[126] = std::pow(d[26], 2) * d[28] * d[36] + std::pow(d[25], 2) * d[29] * d[36] - 2 * d[25] * d[26] * d[32] * d[36] + 2 * d[20] * d[25] * d[34] * d[36] - 2 * d[23] * d[26] * d[34] * d[36] - 2 * d[23] * d[25] * d[35] * d[36] + 2 * d[19] * d[26] * d[35] * d[36] + std::pow(d[26], 2) * d[27] * d[37] + std::pow(d[24], 2) * d[29] * d[37] - 2 * d[24] * d[26] * d[31] * d[37] + 2 * d[20] * d[24] * d[33] * d[37] - 2 * d[22] * d[26] * d[33] * d[37] - 2 * d[22] * d[24] * d[35] * d[37] + 2 * d[18] * d[26] * d[35] * d[37] + std::pow(d[25], 2) * d[27] * d[38] + std::pow(d[24], 2) * d[28] * d[38] - 2 * d[24] * d[25] * d[30] * d[38] + 2 * d[19] * d[24] * d[33] * d[38] - 2 * d[21] * d[25] * d[33] * d[38] - 2 * d[21] * d[24] * d[34] * d[38] + 2 * d[18] * d[25] * d[34] * d[38] - 2 * d[24] * d[25] * d[29] * d[39] - 2 * std::pow(d[26], 2) * d[30] * d[39] + 2 * d[25] * d[26] * d[31] * d[39] + 2 * d[24] * d[26] * d[32] * d[39] - 2 * d[20] * d[25] * d[33] * d[39] + 2 * d[23] * d[26] * d[33] * d[39] - 2 * d[20] * d[24] * d[34] * d[39] + 2 * d[22] * d[26] * d[34] * d[39] + 2 * d[23] * d[24] * d[35] * d[39] + 2 * d[22] * d[25] * d[35] * d[39] - 4 * d[21] * d[26] * d[35] * d[39] - 2 * d[24] * d[26] * d[28] * d[40] + 2 * d[25] * d[26] * d[30] * d[40] - 2 * std::pow(d[25], 2) * d[31] * d[40] + 2 * d[24] * d[25] * d[32] * d[40] + 2 * d[23] * d[25] * d[33] * d[40] - 2 * d[19] * d[26] * d[33] * d[40] + 2 * d[23] * d[24] * d[34] * d[40] - 4 * d[22] * d[25] * d[34] * d[40] + 2 * d[21] * d[26] * d[34] * d[40] - 2 * d[19] * d[24] * d[35] * d[40] + 2 * d[21] * d[25] * d[35] * d[40] - 2 * d[25] * d[26] * d[27] * d[41] + 2 * d[24] * d[26] * d[30] * d[41] + 2 * d[24] * d[25] * d[31] * d[41] - 2 * std::pow(d[24], 2) * d[32] * d[41] - 4 * d[23] * d[24] * d[33] * d[41] + 2 * d[22] * d[25] * d[33] * d[41] + 2 * d[21] * d[26] * d[33] * d[41] + 2 * d[22] * d[24] * d[34] * d[41] - 2 * d[18] * d[26] * d[34] * d[41] + 2 * d[21] * d[24] * d[35] * d[41] - 2 * d[18] * d[25] * d[35] * d[41] + 2 * d[20] * d[24] * d[28] * d[42] - 2 * d[22] * d[26] * d[28] * d[42] + 2 * d[19] * d[24] * d[29] * d[42] - 2 * d[21] * d[25] * d[29] * d[42] - 2 * d[20] * d[25] * d[30] * d[42] + 2 * d[23] * d[26] * d[30] * d[42] + 2 * d[23] * d[25] * d[31] * d[42] - 2 * d[19] * d[26] * d[31] * d[42] - 4 * d[23] * d[24] * d[32] * d[42] + 2 * d[22] * d[25] * d[32] * d[42] + 2 * d[21] * d[26] * d[32] * d[42] + 2 * d[19] * d[20] * d[33] * d[42] - 2 * std::pow(d[23], 2) * d[33] * d[42] - 2 * d[20] * d[21] * d[34] * d[42] + 2 * d[22] * d[23] * d[34] * d[42] - 2 * d[19] * d[22] * d[35] * d[42] + 2 * d[21] * d[23] * d[35] * d[42] + 2 * d[20] * d[25] * d[27] * d[43] - 2 * d[23] * d[26] * d[27] * d[43] - 2 * d[21] * d[24] * d[29] * d[43] + 2 * d[18] * d[25] * d[29] * d[43] - 2 * d[20] * d[24] * d[30] * d[43] + 2 * d[22] * d[26] * d[30] * d[43] + 2 * d[23] * d[24] * d[31] * d[43] - 4 * d[22] * d[25] * d[31] * d[43] + 2 * d[21] * d[26] * d[31] * d[43] + 2 * d[22] * d[24] * d[32] * d[43] - 2 * d[18] * d[26] * d[32] * d[43] - 2 * d[20] * d[21] * d[33] * d[43] + 2 * d[22] * d[23] * d[33] * d[43] + 2 * d[18] * d[20] * d[34] * d[43] - 2 * std::pow(d[22], 2) * d[34] * d[43] + 2 * d[21] * d[22] * d[35] * d[43] - 2 * d[18] * d[23] * d[35] * d[43] - 2 * d[23] * d[25] * d[27] * d[44] + 2 * d[19] * d[26] * d[27] * d[44] - 2 * d[22] * d[24] * d[28] * d[44] + 2 * d[18] * d[26] * d[28] * d[44] + 2 * d[23] * d[24] * d[30] * d[44] + 2 * d[22] * d[25] * d[30] * d[44] - 4 * d[21] * d[26] * d[30] * d[44] - 2 * d[19] * d[24] * d[31] * d[44] + 2 * d[21] * d[25] * d[31] * d[44] + 2 * d[21] * d[24] * d[32] * d[44] - 2 * d[18] * d[25] * d[32] * d[44] - 2 * d[19] * d[22] * d[33] * d[44] + 2 * d[21] * d[23] * d[33] * d[44] + 2 * d[21] * d[22] * d[34] * d[44] - 2 * d[18] * d[23] * d[34] * d[44] + 2 * d[18] * d[19] * d[35] * d[44] - 2 * std::pow(d[21], 2) * d[35] * d[44];
    coeffs[127] = 2 * d[16] * d[29] * d[34] * d[36] - 2 * d[17] * d[32] * d[34] * d[36] + d[11] * std::pow(d[34], 2) * d[36] + 2 * d[17] * d[28] * d[35] * d[36] - 2 * d[16] * d[32] * d[35] * d[36] - 2 * d[14] * d[34] * d[35] * d[36] + d[10] * std::pow(d[35], 2) * d[36] + 2 * d[15] * d[29] * d[33] * d[37] - 2 * d[17] * d[31] * d[33] * d[37] + d[11] * std::pow(d[33], 2) * d[37] + 2 * d[17] * d[27] * d[35] * d[37] - 2 * d[15] * d[31] * d[35] * d[37] - 2 * d[13] * d[33] * d[35] * d[37] + d[9] * std::pow(d[35], 2) * d[37] + 2 * d[15] * d[28] * d[33] * d[38] - 2 * d[16] * d[30] * d[33] * d[38] + d[10] * std::pow(d[33], 2) * d[38] + 2 * d[16] * d[27] * d[34] * d[38] - 2 * d[15] * d[30] * d[34] * d[38] - 2 * d[12] * d[33] * d[34] * d[38] + d[9] * std::pow(d[34], 2) * d[38] - 2 * d[16] * d[29] * d[33] * d[39] + 2 * d[17] * d[32] * d[33] * d[39] - 2 * d[15] * d[29] * d[34] * d[39] + 2 * d[17] * d[31] * d[34] * d[39] - 2 * d[11] * d[33] * d[34] * d[39] - 4 * d[17] * d[30] * d[35] * d[39] + 2 * d[16] * d[31] * d[35] * d[39] + 2 * d[15] * d[32] * d[35] * d[39] + 2 * d[14] * d[33] * d[35] * d[39] + 2 * d[13] * d[34] * d[35] * d[39] - 2 * d[12] * std::pow(d[35], 2) * d[39] - 2 * d[17] * d[28] * d[33] * d[40] + 2 * d[16] * d[32] * d[33] * d[40] + 2 * d[17] * d[30] * d[34] * d[40] - 4 * d[16] * d[31] * d[34] * d[40] + 2 * d[15] * d[32] * d[34] * d[40] + 2 * d[14] * d[33] * d[34] * d[40] - 2 * d[13] * std::pow(d[34], 2) * d[40] - 2 * d[15] * d[28] * d[35] * d[40] + 2 * d[16] * d[30] * d[35] * d[40] - 2 * d[10] * d[33] * d[35] * d[40] + 2 * d[12] * d[34] * d[35] * d[40] + 2 * d[17] * d[30] * d[33] * d[41] + 2 * d[16] * d[31] * d[33] * d[41] - 4 * d[15] * d[32] * d[33] * d[41] - 2 * d[14] * std::pow(d[33], 2) * d[41] - 2 * d[17] * d[27] * d[34] * d[41] + 2 * d[15] * d[31] * d[34] * d[41] + 2 * d[13] * d[33] * d[34] * d[41] - 2 * d[16] * d[27] * d[35] * d[41] + 2 * d[15] * d[30] * d[35] * d[41] + 2 * d[12] * d[33] * d[35] * d[41] - 2 * d[9] * d[34] * d[35] * d[41] + 2 * d[15] * d[28] * d[29] * d[42] - 2 * d[16] * d[29] * d[30] * d[42] - 2 * d[17] * d[28] * d[31] * d[42] + 2 * d[17] * d[30] * d[32] * d[42] + 2 * d[16] * d[31] * d[32] * d[42] - 2 * d[15] * std::pow(d[32], 2) * d[42] + 2 * d[11] * d[28] * d[33] * d[42] + 2 * d[10] * d[29] * d[33] * d[42] - 4 * d[14] * d[32] * d[33] * d[42] - 2 * d[12] * d[29] * d[34] * d[42] - 2 * d[11] * d[30] * d[34] * d[42] + 2 * d[14] * d[31] * d[34] * d[42] + 2 * d[13] * d[32] * d[34] * d[42] - 2 * d[13] * d[28] * d[35] * d[42] + 2 * d[14] * d[30] * d[35] * d[42] - 2 * d[10] * d[31] * d[35] * d[42] + 2 * d[12] * d[32] * d[35] * d[42] + 2 * d[16] * d[27] * d[29] * d[43] - 2 * d[15] * d[29] * d[30] * d[43] + 2 * d[17] * d[30] * d[31] * d[43] - 2 * d[16] * std::pow(d[31], 2) * d[43] - 2 * d[17] * d[27] * d[32] * d[43] + 2 * d[15] * d[31] * d[32] * d[43] - 2 * d[12] * d[29] * d[33] * d[43] - 2 * d[11] * d[30] * d[33] * d[43] + 2 * d[14] * d[31] * d[33] * d[43] + 2 * d[13] * d[32] * d[33] * d[43] + 2 * d[11] * d[27] * d[34] * d[43] + 2 * d[9] * d[29] * d[34] * d[43] - 4 * d[13] * d[31] * d[34] * d[43] - 2 * d[14] * d[27] * d[35] * d[43] + 2 * d[13] * d[30] * d[35] * d[43] + 2 * d[12] * d[31] * d[35] * d[43] - 2 * d[9] * d[32] * d[35] * d[43] + 2 * d[17] * d[27] * d[28] * d[44] - 2 * d[17] * std::pow(d[30], 2) * d[44] - 2 * d[15] * d[28] * d[31] * d[44] + 2 * d[16] * d[30] * d[31] * d[44] - 2 * d[16] * d[27] * d[32] * d[44] + 2 * d[15] * d[30] * d[32] * d[44] - 2 * d[13] * d[28] * d[33] * d[44] + 2 * d[14] * d[30] * d[33] * d[44] - 2 * d[10] * d[31] * d[33] * d[44] + 2 * d[12] * d[32] * d[33] * d[44] - 2 * d[14] * d[27] * d[34] * d[44] + 2 * d[13] * d[30] * d[34] * d[44] + 2 * d[12] * d[31] * d[34] * d[44] - 2 * d[9] * d[32] * d[34] * d[44] + 2 * d[10] * d[27] * d[35] * d[44] + 2 * d[9] * d[28] * d[35] * d[44] - 4 * d[12] * d[30] * d[35] * d[44];
    coeffs[128] = 2 * d[25] * d[29] * d[34] * d[36] - 2 * d[26] * d[32] * d[34] * d[36] + d[20] * std::pow(d[34], 2) * d[36] + 2 * d[26] * d[28] * d[35] * d[36] - 2 * d[25] * d[32] * d[35] * d[36] - 2 * d[23] * d[34] * d[35] * d[36] + d[19] * std::pow(d[35], 2) * d[36] + 2 * d[24] * d[29] * d[33] * d[37] - 2 * d[26] * d[31] * d[33] * d[37] + d[20] * std::pow(d[33], 2) * d[37] + 2 * d[26] * d[27] * d[35] * d[37] - 2 * d[24] * d[31] * d[35] * d[37] - 2 * d[22] * d[33] * d[35] * d[37] + d[18] * std::pow(d[35], 2) * d[37] + 2 * d[24] * d[28] * d[33] * d[38] - 2 * d[25] * d[30] * d[33] * d[38] + d[19] * std::pow(d[33], 2) * d[38] + 2 * d[25] * d[27] * d[34] * d[38] - 2 * d[24] * d[30] * d[34] * d[38] - 2 * d[21] * d[33] * d[34] * d[38] + d[18] * std::pow(d[34], 2) * d[38] - 2 * d[25] * d[29] * d[33] * d[39] + 2 * d[26] * d[32] * d[33] * d[39] - 2 * d[24] * d[29] * d[34] * d[39] + 2 * d[26] * d[31] * d[34] * d[39] - 2 * d[20] * d[33] * d[34] * d[39] - 4 * d[26] * d[30] * d[35] * d[39] + 2 * d[25] * d[31] * d[35] * d[39] + 2 * d[24] * d[32] * d[35] * d[39] + 2 * d[23] * d[33] * d[35] * d[39] + 2 * d[22] * d[34] * d[35] * d[39] - 2 * d[21] * std::pow(d[35], 2) * d[39] - 2 * d[26] * d[28] * d[33] * d[40] + 2 * d[25] * d[32] * d[33] * d[40] + 2 * d[26] * d[30] * d[34] * d[40] - 4 * d[25] * d[31] * d[34] * d[40] + 2 * d[24] * d[32] * d[34] * d[40] + 2 * d[23] * d[33] * d[34] * d[40] - 2 * d[22] * std::pow(d[34], 2) * d[40] - 2 * d[24] * d[28] * d[35] * d[40] + 2 * d[25] * d[30] * d[35] * d[40] - 2 * d[19] * d[33] * d[35] * d[40] + 2 * d[21] * d[34] * d[35] * d[40] + 2 * d[26] * d[30] * d[33] * d[41] + 2 * d[25] * d[31] * d[33] * d[41] - 4 * d[24] * d[32] * d[33] * d[41] - 2 * d[23] * std::pow(d[33], 2) * d[41] - 2 * d[26] * d[27] * d[34] * d[41] + 2 * d[24] * d[31] * d[34] * d[41] + 2 * d[22] * d[33] * d[34] * d[41] - 2 * d[25] * d[27] * d[35] * d[41] + 2 * d[24] * d[30] * d[35] * d[41] + 2 * d[21] * d[33] * d[35] * d[41] - 2 * d[18] * d[34] * d[35] * d[41] + 2 * d[24] * d[28] * d[29] * d[42] - 2 * d[25] * d[29] * d[30] * d[42] - 2 * d[26] * d[28] * d[31] * d[42] + 2 * d[26] * d[30] * d[32] * d[42] + 2 * d[25] * d[31] * d[32] * d[42] - 2 * d[24] * std::pow(d[32], 2) * d[42] + 2 * d[20] * d[28] * d[33] * d[42] + 2 * d[19] * d[29] * d[33] * d[42] - 4 * d[23] * d[32] * d[33] * d[42] - 2 * d[21] * d[29] * d[34] * d[42] - 2 * d[20] * d[30] * d[34] * d[42] + 2 * d[23] * d[31] * d[34] * d[42] + 2 * d[22] * d[32] * d[34] * d[42] - 2 * d[22] * d[28] * d[35] * d[42] + 2 * d[23] * d[30] * d[35] * d[42] - 2 * d[19] * d[31] * d[35] * d[42] + 2 * d[21] * d[32] * d[35] * d[42] + 2 * d[25] * d[27] * d[29] * d[43] - 2 * d[24] * d[29] * d[30] * d[43] + 2 * d[26] * d[30] * d[31] * d[43] - 2 * d[25] * std::pow(d[31], 2) * d[43] - 2 * d[26] * d[27] * d[32] * d[43] + 2 * d[24] * d[31] * d[32] * d[43] - 2 * d[21] * d[29] * d[33] * d[43] - 2 * d[20] * d[30] * d[33] * d[43] + 2 * d[23] * d[31] * d[33] * d[43] + 2 * d[22] * d[32] * d[33] * d[43] + 2 * d[20] * d[27] * d[34] * d[43] + 2 * d[18] * d[29] * d[34] * d[43] - 4 * d[22] * d[31] * d[34] * d[43] - 2 * d[23] * d[27] * d[35] * d[43] + 2 * d[22] * d[30] * d[35] * d[43] + 2 * d[21] * d[31] * d[35] * d[43] - 2 * d[18] * d[32] * d[35] * d[43] + 2 * d[26] * d[27] * d[28] * d[44] - 2 * d[26] * std::pow(d[30], 2) * d[44] - 2 * d[24] * d[28] * d[31] * d[44] + 2 * d[25] * d[30] * d[31] * d[44] - 2 * d[25] * d[27] * d[32] * d[44] + 2 * d[24] * d[30] * d[32] * d[44] - 2 * d[22] * d[28] * d[33] * d[44] + 2 * d[23] * d[30] * d[33] * d[44] - 2 * d[19] * d[31] * d[33] * d[44] + 2 * d[21] * d[32] * d[33] * d[44] - 2 * d[23] * d[27] * d[34] * d[44] + 2 * d[22] * d[30] * d[34] * d[44] + 2 * d[21] * d[31] * d[34] * d[44] - 2 * d[18] * d[32] * d[34] * d[44] + 2 * d[19] * d[27] * d[35] * d[44] + 2 * d[18] * d[28] * d[35] * d[44] - 4 * d[21] * d[30] * d[35] * d[44];
    coeffs[129] = d[29] * std::pow(d[34], 2) * d[36] - 2 * d[32] * d[34] * d[35] * d[36] + d[28] * std::pow(d[35], 2) * d[36] + d[29] * std::pow(d[33], 2) * d[37] - 2 * d[31] * d[33] * d[35] * d[37] + d[27] * std::pow(d[35], 2) * d[37] + d[28] * std::pow(d[33], 2) * d[38] - 2 * d[30] * d[33] * d[34] * d[38] + d[27] * std::pow(d[34], 2) * d[38] - 2 * d[29] * d[33] * d[34] * d[39] + 2 * d[32] * d[33] * d[35] * d[39] + 2 * d[31] * d[34] * d[35] * d[39] - 2 * d[30] * std::pow(d[35], 2) * d[39] + 2 * d[32] * d[33] * d[34] * d[40] - 2 * d[31] * std::pow(d[34], 2) * d[40] - 2 * d[28] * d[33] * d[35] * d[40] + 2 * d[30] * d[34] * d[35] * d[40] - 2 * d[32] * std::pow(d[33], 2) * d[41] + 2 * d[31] * d[33] * d[34] * d[41] + 2 * d[30] * d[33] * d[35] * d[41] - 2 * d[27] * d[34] * d[35] * d[41] + 2 * d[28] * d[29] * d[33] * d[42] - 2 * std::pow(d[32], 2) * d[33] * d[42] - 2 * d[29] * d[30] * d[34] * d[42] + 2 * d[31] * d[32] * d[34] * d[42] - 2 * d[28] * d[31] * d[35] * d[42] + 2 * d[30] * d[32] * d[35] * d[42] - 2 * d[29] * d[30] * d[33] * d[43] + 2 * d[31] * d[32] * d[33] * d[43] + 2 * d[27] * d[29] * d[34] * d[43] - 2 * std::pow(d[31], 2) * d[34] * d[43] + 2 * d[30] * d[31] * d[35] * d[43] - 2 * d[27] * d[32] * d[35] * d[43] - 2 * d[28] * d[31] * d[33] * d[44] + 2 * d[30] * d[32] * d[33] * d[44] + 2 * d[30] * d[31] * d[34] * d[44] - 2 * d[27] * d[32] * d[34] * d[44] + 2 * d[27] * d[28] * d[35] * d[44] - 2 * std::pow(d[30], 2) * d[35] * d[44];
    coeffs[130] = std::pow(d[17], 2) * d[36] * d[37] + std::pow(d[16], 2) * d[36] * d[38] + std::pow(d[15], 2) * d[37] * d[38] - 2 * d[15] * d[16] * d[38] * d[39] - std::pow(d[17], 2) * std::pow(d[39], 2) - 2 * d[15] * d[17] * d[37] * d[40] + 2 * d[16] * d[17] * d[39] * d[40] - std::pow(d[16], 2) * std::pow(d[40], 2) - 2 * d[16] * d[17] * d[36] * d[41] + 2 * d[15] * d[17] * d[39] * d[41] + 2 * d[15] * d[16] * d[40] * d[41] - std::pow(d[15], 2) * std::pow(d[41], 2) + 2 * d[11] * d[15] * d[37] * d[42] - 2 * d[13] * d[17] * d[37] * d[42] + 2 * d[10] * d[15] * d[38] * d[42] - 2 * d[12] * d[16] * d[38] * d[42] - 2 * d[11] * d[16] * d[39] * d[42] + 2 * d[14] * d[17] * d[39] * d[42] + 2 * d[14] * d[16] * d[40] * d[42] - 2 * d[10] * d[17] * d[40] * d[42] - 4 * d[14] * d[15] * d[41] * d[42] + 2 * d[13] * d[16] * d[41] * d[42] + 2 * d[12] * d[17] * d[41] * d[42] + d[10] * d[11] * std::pow(d[42], 2) - std::pow(d[14], 2) * std::pow(d[42], 2) + 2 * d[11] * d[16] * d[36] * d[43] - 2 * d[14] * d[17] * d[36] * d[43] - 2 * d[12] * d[15] * d[38] * d[43] + 2 * d[9] * d[16] * d[38] * d[43] - 2 * d[11] * d[15] * d[39] * d[43] + 2 * d[13] * d[17] * d[39] * d[43] + 2 * d[14] * d[15] * d[40] * d[43] - 4 * d[13] * d[16] * d[40] * d[43] + 2 * d[12] * d[17] * d[40] * d[43] + 2 * d[13] * d[15] * d[41] * d[43] - 2 * d[9] * d[17] * d[41] * d[43] - 2 * d[11] * d[12] * d[42] * d[43] + 2 * d[13] * d[14] * d[42] * d[43] + d[9] * d[11] * std::pow(d[43], 2) - std::pow(d[13], 2) * std::pow(d[43], 2) - 2 * d[14] * d[16] * d[36] * d[44] + 2 * d[10] * d[17] * d[36] * d[44] - 2 * d[13] * d[15] * d[37] * d[44] + 2 * d[9] * d[17] * d[37] * d[44] + 2 * d[14] * d[15] * d[39] * d[44] + 2 * d[13] * d[16] * d[39] * d[44] - 4 * d[12] * d[17] * d[39] * d[44] - 2 * d[10] * d[15] * d[40] * d[44] + 2 * d[12] * d[16] * d[40] * d[44] + 2 * d[12] * d[15] * d[41] * d[44] - 2 * d[9] * d[16] * d[41] * d[44] - 2 * d[10] * d[13] * d[42] * d[44] + 2 * d[12] * d[14] * d[42] * d[44] + 2 * d[12] * d[13] * d[43] * d[44] - 2 * d[9] * d[14] * d[43] * d[44] + d[9] * d[10] * std::pow(d[44], 2) - std::pow(d[12], 2) * std::pow(d[44], 2);
    coeffs[131] = 2 * d[17] * d[26] * d[36] * d[37] + 2 * d[16] * d[25] * d[36] * d[38] + 2 * d[15] * d[24] * d[37] * d[38] - 2 * d[16] * d[24] * d[38] * d[39] - 2 * d[15] * d[25] * d[38] * d[39] - 2 * d[17] * d[26] * std::pow(d[39], 2) - 2 * d[17] * d[24] * d[37] * d[40] - 2 * d[15] * d[26] * d[37] * d[40] + 2 * d[17] * d[25] * d[39] * d[40] + 2 * d[16] * d[26] * d[39] * d[40] - 2 * d[16] * d[25] * std::pow(d[40], 2) - 2 * d[17] * d[25] * d[36] * d[41] - 2 * d[16] * d[26] * d[36] * d[41] + 2 * d[17] * d[24] * d[39] * d[41] + 2 * d[15] * d[26] * d[39] * d[41] + 2 * d[16] * d[24] * d[40] * d[41] + 2 * d[15] * d[25] * d[40] * d[41] - 2 * d[15] * d[24] * std::pow(d[41], 2) + 2 * d[15] * d[20] * d[37] * d[42] - 2 * d[17] * d[22] * d[37] * d[42] + 2 * d[11] * d[24] * d[37] * d[42] - 2 * d[13] * d[26] * d[37] * d[42] + 2 * d[15] * d[19] * d[38] * d[42] - 2 * d[16] * d[21] * d[38] * d[42] + 2 * d[10] * d[24] * d[38] * d[42] - 2 * d[12] * d[25] * d[38] * d[42] - 2 * d[16] * d[20] * d[39] * d[42] + 2 * d[17] * d[23] * d[39] * d[42] - 2 * d[11] * d[25] * d[39] * d[42] + 2 * d[14] * d[26] * d[39] * d[42] - 2 * d[17] * d[19] * d[40] * d[42] + 2 * d[16] * d[23] * d[40] * d[42] + 2 * d[14] * d[25] * d[40] * d[42] - 2 * d[10] * d[26] * d[40] * d[42] + 2 * d[17] * d[21] * d[41] * d[42] + 2 * d[16] * d[22] * d[41] * d[42] - 4 * d[15] * d[23] * d[41] * d[42] - 4 * d[14] * d[24] * d[41] * d[42] + 2 * d[13] * d[25] * d[41] * d[42] + 2 * d[12] * d[26] * d[41] * d[42] + d[11] * d[19] * std::pow(d[42], 2) + d[10] * d[20] * std::pow(d[42], 2) - 2 * d[14] * d[23] * std::pow(d[42], 2) + 2 * d[16] * d[20] * d[36] * d[43] - 2 * d[17] * d[23] * d[36] * d[43] + 2 * d[11] * d[25] * d[36] * d[43] - 2 * d[14] * d[26] * d[36] * d[43] + 2 * d[16] * d[18] * d[38] * d[43] - 2 * d[15] * d[21] * d[38] * d[43] - 2 * d[12] * d[24] * d[38] * d[43] + 2 * d[9] * d[25] * d[38] * d[43] - 2 * d[15] * d[20] * d[39] * d[43] + 2 * d[17] * d[22] * d[39] * d[43] - 2 * d[11] * d[24] * d[39] * d[43] + 2 * d[13] * d[26] * d[39] * d[43] + 2 * d[17] * d[21] * d[40] * d[43] - 4 * d[16] * d[22] * d[40] * d[43] + 2 * d[15] * d[23] * d[40] * d[43] + 2 * d[14] * d[24] * d[40] * d[43] - 4 * d[13] * d[25] * d[40] * d[43] + 2 * d[12] * d[26] * d[40] * d[43] - 2 * d[17] * d[18] * d[41] * d[43] + 2 * d[15] * d[22] * d[41] * d[43] + 2 * d[13] * d[24] * d[41] * d[43] - 2 * d[9] * d[26] * d[41] * d[43] - 2 * d[12] * d[20] * d[42] * d[43] - 2 * d[11] * d[21] * d[42] * d[43] + 2 * d[14] * d[22] * d[42] * d[43] + 2 * d[13] * d[23] * d[42] * d[43] + d[11] * d[18] * std::pow(d[43], 2) + d[9] * d[20] * std::pow(d[43], 2) - 2 * d[13] * d[22] * std::pow(d[43], 2) + 2 * d[17] * d[19] * d[36] * d[44] - 2 * d[16] * d[23] * d[36] * d[44] - 2 * d[14] * d[25] * d[36] * d[44] + 2 * d[10] * d[26] * d[36] * d[44] + 2 * d[17] * d[18] * d[37] * d[44] - 2 * d[15] * d[22] * d[37] * d[44] - 2 * d[13] * d[24] * d[37] * d[44] + 2 * d[9] * d[26] * d[37] * d[44] - 4 * d[17] * d[21] * d[39] * d[44] + 2 * d[16] * d[22] * d[39] * d[44] + 2 * d[15] * d[23] * d[39] * d[44] + 2 * d[14] * d[24] * d[39] * d[44] + 2 * d[13] * d[25] * d[39] * d[44] - 4 * d[12] * d[26] * d[39] * d[44] - 2 * d[15] * d[19] * d[40] * d[44] + 2 * d[16] * d[21] * d[40] * d[44] - 2 * d[10] * d[24] * d[40] * d[44] + 2 * d[12] * d[25] * d[40] * d[44] - 2 * d[16] * d[18] * d[41] * d[44] + 2 * d[15] * d[21] * d[41] * d[44] + 2 * d[12] * d[24] * d[41] * d[44] - 2 * d[9] * d[25] * d[41] * d[44] - 2 * d[13] * d[19] * d[42] * d[44] + 2 * d[14] * d[21] * d[42] * d[44] - 2 * d[10] * d[22] * d[42] * d[44] + 2 * d[12] * d[23] * d[42] * d[44] - 2 * d[14] * d[18] * d[43] * d[44] + 2 * d[13] * d[21] * d[43] * d[44] + 2 * d[12] * d[22] * d[43] * d[44] - 2 * d[9] * d[23] * d[43] * d[44] + d[10] * d[18] * std::pow(d[44], 2) + d[9] * d[19] * std::pow(d[44], 2) - 2 * d[12] * d[21] * std::pow(d[44], 2);
    coeffs[132] = std::pow(d[26], 2) * d[36] * d[37] + std::pow(d[25], 2) * d[36] * d[38] + std::pow(d[24], 2) * d[37] * d[38] - 2 * d[24] * d[25] * d[38] * d[39] - std::pow(d[26], 2) * std::pow(d[39], 2) - 2 * d[24] * d[26] * d[37] * d[40] + 2 * d[25] * d[26] * d[39] * d[40] - std::pow(d[25], 2) * std::pow(d[40], 2) - 2 * d[25] * d[26] * d[36] * d[41] + 2 * d[24] * d[26] * d[39] * d[41] + 2 * d[24] * d[25] * d[40] * d[41] - std::pow(d[24], 2) * std::pow(d[41], 2) + 2 * d[20] * d[24] * d[37] * d[42] - 2 * d[22] * d[26] * d[37] * d[42] + 2 * d[19] * d[24] * d[38] * d[42] - 2 * d[21] * d[25] * d[38] * d[42] - 2 * d[20] * d[25] * d[39] * d[42] + 2 * d[23] * d[26] * d[39] * d[42] + 2 * d[23] * d[25] * d[40] * d[42] - 2 * d[19] * d[26] * d[40] * d[42] - 4 * d[23] * d[24] * d[41] * d[42] + 2 * d[22] * d[25] * d[41] * d[42] + 2 * d[21] * d[26] * d[41] * d[42] + d[19] * d[20] * std::pow(d[42], 2) - std::pow(d[23], 2) * std::pow(d[42], 2) + 2 * d[20] * d[25] * d[36] * d[43] - 2 * d[23] * d[26] * d[36] * d[43] - 2 * d[21] * d[24] * d[38] * d[43] + 2 * d[18] * d[25] * d[38] * d[43] - 2 * d[20] * d[24] * d[39] * d[43] + 2 * d[22] * d[26] * d[39] * d[43] + 2 * d[23] * d[24] * d[40] * d[43] - 4 * d[22] * d[25] * d[40] * d[43] + 2 * d[21] * d[26] * d[40] * d[43] + 2 * d[22] * d[24] * d[41] * d[43] - 2 * d[18] * d[26] * d[41] * d[43] - 2 * d[20] * d[21] * d[42] * d[43] + 2 * d[22] * d[23] * d[42] * d[43] + d[18] * d[20] * std::pow(d[43], 2) - std::pow(d[22], 2) * std::pow(d[43], 2) - 2 * d[23] * d[25] * d[36] * d[44] + 2 * d[19] * d[26] * d[36] * d[44] - 2 * d[22] * d[24] * d[37] * d[44] + 2 * d[18] * d[26] * d[37] * d[44] + 2 * d[23] * d[24] * d[39] * d[44] + 2 * d[22] * d[25] * d[39] * d[44] - 4 * d[21] * d[26] * d[39] * d[44] - 2 * d[19] * d[24] * d[40] * d[44] + 2 * d[21] * d[25] * d[40] * d[44] + 2 * d[21] * d[24] * d[41] * d[44] - 2 * d[18] * d[25] * d[41] * d[44] - 2 * d[19] * d[22] * d[42] * d[44] + 2 * d[21] * d[23] * d[42] * d[44] + 2 * d[21] * d[22] * d[43] * d[44] - 2 * d[18] * d[23] * d[43] * d[44] + d[18] * d[19] * std::pow(d[44], 2) - std::pow(d[21], 2) * std::pow(d[44], 2);
    coeffs[133] = 2 * d[17] * d[35] * d[36] * d[37] + 2 * d[16] * d[34] * d[36] * d[38] + 2 * d[15] * d[33] * d[37] * d[38] - 2 * d[16] * d[33] * d[38] * d[39] - 2 * d[15] * d[34] * d[38] * d[39] - 2 * d[17] * d[35] * std::pow(d[39], 2) - 2 * d[17] * d[33] * d[37] * d[40] - 2 * d[15] * d[35] * d[37] * d[40] + 2 * d[17] * d[34] * d[39] * d[40] + 2 * d[16] * d[35] * d[39] * d[40] - 2 * d[16] * d[34] * std::pow(d[40], 2) - 2 * d[17] * d[34] * d[36] * d[41] - 2 * d[16] * d[35] * d[36] * d[41] + 2 * d[17] * d[33] * d[39] * d[41] + 2 * d[15] * d[35] * d[39] * d[41] + 2 * d[16] * d[33] * d[40] * d[41] + 2 * d[15] * d[34] * d[40] * d[41] - 2 * d[15] * d[33] * std::pow(d[41], 2) + 2 * d[15] * d[29] * d[37] * d[42] - 2 * d[17] * d[31] * d[37] * d[42] + 2 * d[11] * d[33] * d[37] * d[42] - 2 * d[13] * d[35] * d[37] * d[42] + 2 * d[15] * d[28] * d[38] * d[42] - 2 * d[16] * d[30] * d[38] * d[42] + 2 * d[10] * d[33] * d[38] * d[42] - 2 * d[12] * d[34] * d[38] * d[42] - 2 * d[16] * d[29] * d[39] * d[42] + 2 * d[17] * d[32] * d[39] * d[42] - 2 * d[11] * d[34] * d[39] * d[42] + 2 * d[14] * d[35] * d[39] * d[42] - 2 * d[17] * d[28] * d[40] * d[42] + 2 * d[16] * d[32] * d[40] * d[42] + 2 * d[14] * d[34] * d[40] * d[42] - 2 * d[10] * d[35] * d[40] * d[42] + 2 * d[17] * d[30] * d[41] * d[42] + 2 * d[16] * d[31] * d[41] * d[42] - 4 * d[15] * d[32] * d[41] * d[42] - 4 * d[14] * d[33] * d[41] * d[42] + 2 * d[13] * d[34] * d[41] * d[42] + 2 * d[12] * d[35] * d[41] * d[42] + d[11] * d[28] * std::pow(d[42], 2) + d[10] * d[29] * std::pow(d[42], 2) - 2 * d[14] * d[32] * std::pow(d[42], 2) + 2 * d[16] * d[29] * d[36] * d[43] - 2 * d[17] * d[32] * d[36] * d[43] + 2 * d[11] * d[34] * d[36] * d[43] - 2 * d[14] * d[35] * d[36] * d[43] + 2 * d[16] * d[27] * d[38] * d[43] - 2 * d[15] * d[30] * d[38] * d[43] - 2 * d[12] * d[33] * d[38] * d[43] + 2 * d[9] * d[34] * d[38] * d[43] - 2 * d[15] * d[29] * d[39] * d[43] + 2 * d[17] * d[31] * d[39] * d[43] - 2 * d[11] * d[33] * d[39] * d[43] + 2 * d[13] * d[35] * d[39] * d[43] + 2 * d[17] * d[30] * d[40] * d[43] - 4 * d[16] * d[31] * d[40] * d[43] + 2 * d[15] * d[32] * d[40] * d[43] + 2 * d[14] * d[33] * d[40] * d[43] - 4 * d[13] * d[34] * d[40] * d[43] + 2 * d[12] * d[35] * d[40] * d[43] - 2 * d[17] * d[27] * d[41] * d[43] + 2 * d[15] * d[31] * d[41] * d[43] + 2 * d[13] * d[33] * d[41] * d[43] - 2 * d[9] * d[35] * d[41] * d[43] - 2 * d[12] * d[29] * d[42] * d[43] - 2 * d[11] * d[30] * d[42] * d[43] + 2 * d[14] * d[31] * d[42] * d[43] + 2 * d[13] * d[32] * d[42] * d[43] + d[11] * d[27] * std::pow(d[43], 2) + d[9] * d[29] * std::pow(d[43], 2) - 2 * d[13] * d[31] * std::pow(d[43], 2) + 2 * d[17] * d[28] * d[36] * d[44] - 2 * d[16] * d[32] * d[36] * d[44] - 2 * d[14] * d[34] * d[36] * d[44] + 2 * d[10] * d[35] * d[36] * d[44] + 2 * d[17] * d[27] * d[37] * d[44] - 2 * d[15] * d[31] * d[37] * d[44] - 2 * d[13] * d[33] * d[37] * d[44] + 2 * d[9] * d[35] * d[37] * d[44] - 4 * d[17] * d[30] * d[39] * d[44] + 2 * d[16] * d[31] * d[39] * d[44] + 2 * d[15] * d[32] * d[39] * d[44] + 2 * d[14] * d[33] * d[39] * d[44] + 2 * d[13] * d[34] * d[39] * d[44] - 4 * d[12] * d[35] * d[39] * d[44] - 2 * d[15] * d[28] * d[40] * d[44] + 2 * d[16] * d[30] * d[40] * d[44] - 2 * d[10] * d[33] * d[40] * d[44] + 2 * d[12] * d[34] * d[40] * d[44] - 2 * d[16] * d[27] * d[41] * d[44] + 2 * d[15] * d[30] * d[41] * d[44] + 2 * d[12] * d[33] * d[41] * d[44] - 2 * d[9] * d[34] * d[41] * d[44] - 2 * d[13] * d[28] * d[42] * d[44] + 2 * d[14] * d[30] * d[42] * d[44] - 2 * d[10] * d[31] * d[42] * d[44] + 2 * d[12] * d[32] * d[42] * d[44] - 2 * d[14] * d[27] * d[43] * d[44] + 2 * d[13] * d[30] * d[43] * d[44] + 2 * d[12] * d[31] * d[43] * d[44] - 2 * d[9] * d[32] * d[43] * d[44] + d[10] * d[27] * std::pow(d[44], 2) + d[9] * d[28] * std::pow(d[44], 2) - 2 * d[12] * d[30] * std::pow(d[44], 2);
    coeffs[134] = 2 * d[26] * d[35] * d[36] * d[37] + 2 * d[25] * d[34] * d[36] * d[38] + 2 * d[24] * d[33] * d[37] * d[38] - 2 * d[25] * d[33] * d[38] * d[39] - 2 * d[24] * d[34] * d[38] * d[39] - 2 * d[26] * d[35] * std::pow(d[39], 2) - 2 * d[26] * d[33] * d[37] * d[40] - 2 * d[24] * d[35] * d[37] * d[40] + 2 * d[26] * d[34] * d[39] * d[40] + 2 * d[25] * d[35] * d[39] * d[40] - 2 * d[25] * d[34] * std::pow(d[40], 2) - 2 * d[26] * d[34] * d[36] * d[41] - 2 * d[25] * d[35] * d[36] * d[41] + 2 * d[26] * d[33] * d[39] * d[41] + 2 * d[24] * d[35] * d[39] * d[41] + 2 * d[25] * d[33] * d[40] * d[41] + 2 * d[24] * d[34] * d[40] * d[41] - 2 * d[24] * d[33] * std::pow(d[41], 2) + 2 * d[24] * d[29] * d[37] * d[42] - 2 * d[26] * d[31] * d[37] * d[42] + 2 * d[20] * d[33] * d[37] * d[42] - 2 * d[22] * d[35] * d[37] * d[42] + 2 * d[24] * d[28] * d[38] * d[42] - 2 * d[25] * d[30] * d[38] * d[42] + 2 * d[19] * d[33] * d[38] * d[42] - 2 * d[21] * d[34] * d[38] * d[42] - 2 * d[25] * d[29] * d[39] * d[42] + 2 * d[26] * d[32] * d[39] * d[42] - 2 * d[20] * d[34] * d[39] * d[42] + 2 * d[23] * d[35] * d[39] * d[42] - 2 * d[26] * d[28] * d[40] * d[42] + 2 * d[25] * d[32] * d[40] * d[42] + 2 * d[23] * d[34] * d[40] * d[42] - 2 * d[19] * d[35] * d[40] * d[42] + 2 * d[26] * d[30] * d[41] * d[42] + 2 * d[25] * d[31] * d[41] * d[42] - 4 * d[24] * d[32] * d[41] * d[42] - 4 * d[23] * d[33] * d[41] * d[42] + 2 * d[22] * d[34] * d[41] * d[42] + 2 * d[21] * d[35] * d[41] * d[42] + d[20] * d[28] * std::pow(d[42], 2) + d[19] * d[29] * std::pow(d[42], 2) - 2 * d[23] * d[32] * std::pow(d[42], 2) + 2 * d[25] * d[29] * d[36] * d[43] - 2 * d[26] * d[32] * d[36] * d[43] + 2 * d[20] * d[34] * d[36] * d[43] - 2 * d[23] * d[35] * d[36] * d[43] + 2 * d[25] * d[27] * d[38] * d[43] - 2 * d[24] * d[30] * d[38] * d[43] - 2 * d[21] * d[33] * d[38] * d[43] + 2 * d[18] * d[34] * d[38] * d[43] - 2 * d[24] * d[29] * d[39] * d[43] + 2 * d[26] * d[31] * d[39] * d[43] - 2 * d[20] * d[33] * d[39] * d[43] + 2 * d[22] * d[35] * d[39] * d[43] + 2 * d[26] * d[30] * d[40] * d[43] - 4 * d[25] * d[31] * d[40] * d[43] + 2 * d[24] * d[32] * d[40] * d[43] + 2 * d[23] * d[33] * d[40] * d[43] - 4 * d[22] * d[34] * d[40] * d[43] + 2 * d[21] * d[35] * d[40] * d[43] - 2 * d[26] * d[27] * d[41] * d[43] + 2 * d[24] * d[31] * d[41] * d[43] + 2 * d[22] * d[33] * d[41] * d[43] - 2 * d[18] * d[35] * d[41] * d[43] - 2 * d[21] * d[29] * d[42] * d[43] - 2 * d[20] * d[30] * d[42] * d[43] + 2 * d[23] * d[31] * d[42] * d[43] + 2 * d[22] * d[32] * d[42] * d[43] + d[20] * d[27] * std::pow(d[43], 2) + d[18] * d[29] * std::pow(d[43], 2) - 2 * d[22] * d[31] * std::pow(d[43], 2) + 2 * d[26] * d[28] * d[36] * d[44] - 2 * d[25] * d[32] * d[36] * d[44] - 2 * d[23] * d[34] * d[36] * d[44] + 2 * d[19] * d[35] * d[36] * d[44] + 2 * d[26] * d[27] * d[37] * d[44] - 2 * d[24] * d[31] * d[37] * d[44] - 2 * d[22] * d[33] * d[37] * d[44] + 2 * d[18] * d[35] * d[37] * d[44] - 4 * d[26] * d[30] * d[39] * d[44] + 2 * d[25] * d[31] * d[39] * d[44] + 2 * d[24] * d[32] * d[39] * d[44] + 2 * d[23] * d[33] * d[39] * d[44] + 2 * d[22] * d[34] * d[39] * d[44] - 4 * d[21] * d[35] * d[39] * d[44] - 2 * d[24] * d[28] * d[40] * d[44] + 2 * d[25] * d[30] * d[40] * d[44] - 2 * d[19] * d[33] * d[40] * d[44] + 2 * d[21] * d[34] * d[40] * d[44] - 2 * d[25] * d[27] * d[41] * d[44] + 2 * d[24] * d[30] * d[41] * d[44] + 2 * d[21] * d[33] * d[41] * d[44] - 2 * d[18] * d[34] * d[41] * d[44] - 2 * d[22] * d[28] * d[42] * d[44] + 2 * d[23] * d[30] * d[42] * d[44] - 2 * d[19] * d[31] * d[42] * d[44] + 2 * d[21] * d[32] * d[42] * d[44] - 2 * d[23] * d[27] * d[43] * d[44] + 2 * d[22] * d[30] * d[43] * d[44] + 2 * d[21] * d[31] * d[43] * d[44] - 2 * d[18] * d[32] * d[43] * d[44] + d[19] * d[27] * std::pow(d[44], 2) + d[18] * d[28] * std::pow(d[44], 2) - 2 * d[21] * d[30] * std::pow(d[44], 2);
    coeffs[135] = std::pow(d[35], 2) * d[36] * d[37] + std::pow(d[34], 2) * d[36] * d[38] + std::pow(d[33], 2) * d[37] * d[38] - 2 * d[33] * d[34] * d[38] * d[39] - std::pow(d[35], 2) * std::pow(d[39], 2) - 2 * d[33] * d[35] * d[37] * d[40] + 2 * d[34] * d[35] * d[39] * d[40] - std::pow(d[34], 2) * std::pow(d[40], 2) - 2 * d[34] * d[35] * d[36] * d[41] + 2 * d[33] * d[35] * d[39] * d[41] + 2 * d[33] * d[34] * d[40] * d[41] - std::pow(d[33], 2) * std::pow(d[41], 2) + 2 * d[29] * d[33] * d[37] * d[42] - 2 * d[31] * d[35] * d[37] * d[42] + 2 * d[28] * d[33] * d[38] * d[42] - 2 * d[30] * d[34] * d[38] * d[42] - 2 * d[29] * d[34] * d[39] * d[42] + 2 * d[32] * d[35] * d[39] * d[42] + 2 * d[32] * d[34] * d[40] * d[42] - 2 * d[28] * d[35] * d[40] * d[42] - 4 * d[32] * d[33] * d[41] * d[42] + 2 * d[31] * d[34] * d[41] * d[42] + 2 * d[30] * d[35] * d[41] * d[42] + d[28] * d[29] * std::pow(d[42], 2) - std::pow(d[32], 2) * std::pow(d[42], 2) + 2 * d[29] * d[34] * d[36] * d[43] - 2 * d[32] * d[35] * d[36] * d[43] - 2 * d[30] * d[33] * d[38] * d[43] + 2 * d[27] * d[34] * d[38] * d[43] - 2 * d[29] * d[33] * d[39] * d[43] + 2 * d[31] * d[35] * d[39] * d[43] + 2 * d[32] * d[33] * d[40] * d[43] - 4 * d[31] * d[34] * d[40] * d[43] + 2 * d[30] * d[35] * d[40] * d[43] + 2 * d[31] * d[33] * d[41] * d[43] - 2 * d[27] * d[35] * d[41] * d[43] - 2 * d[29] * d[30] * d[42] * d[43] + 2 * d[31] * d[32] * d[42] * d[43] + d[27] * d[29] * std::pow(d[43], 2) - std::pow(d[31], 2) * std::pow(d[43], 2) - 2 * d[32] * d[34] * d[36] * d[44] + 2 * d[28] * d[35] * d[36] * d[44] - 2 * d[31] * d[33] * d[37] * d[44] + 2 * d[27] * d[35] * d[37] * d[44] + 2 * d[32] * d[33] * d[39] * d[44] + 2 * d[31] * d[34] * d[39] * d[44] - 4 * d[30] * d[35] * d[39] * d[44] - 2 * d[28] * d[33] * d[40] * d[44] + 2 * d[30] * d[34] * d[40] * d[44] + 2 * d[30] * d[33] * d[41] * d[44] - 2 * d[27] * d[34] * d[41] * d[44] - 2 * d[28] * d[31] * d[42] * d[44] + 2 * d[30] * d[32] * d[42] * d[44] + 2 * d[30] * d[31] * d[43] * d[44] - 2 * d[27] * d[32] * d[43] * d[44] + d[27] * d[28] * std::pow(d[44], 2) - std::pow(d[30], 2) * std::pow(d[44], 2);
    coeffs[136] = 2 * d[15] * d[37] * d[38] * d[42] - 2 * d[16] * d[38] * d[39] * d[42] - 2 * d[17] * d[37] * d[40] * d[42] + 2 * d[17] * d[39] * d[41] * d[42] + 2 * d[16] * d[40] * d[41] * d[42] - 2 * d[15] * std::pow(d[41], 2) * d[42] + d[11] * d[37] * std::pow(d[42], 2) + d[10] * d[38] * std::pow(d[42], 2) - 2 * d[14] * d[41] * std::pow(d[42], 2) + 2 * d[16] * d[36] * d[38] * d[43] - 2 * d[15] * d[38] * d[39] * d[43] + 2 * d[17] * d[39] * d[40] * d[43] - 2 * d[16] * std::pow(d[40], 2) * d[43] - 2 * d[17] * d[36] * d[41] * d[43] + 2 * d[15] * d[40] * d[41] * d[43] - 2 * d[12] * d[38] * d[42] * d[43] - 2 * d[11] * d[39] * d[42] * d[43] + 2 * d[14] * d[40] * d[42] * d[43] + 2 * d[13] * d[41] * d[42] * d[43] + d[11] * d[36] * std::pow(d[43], 2) + d[9] * d[38] * std::pow(d[43], 2) - 2 * d[13] * d[40] * std::pow(d[43], 2) + 2 * d[17] * d[36] * d[37] * d[44] - 2 * d[17] * std::pow(d[39], 2) * d[44] - 2 * d[15] * d[37] * d[40] * d[44] + 2 * d[16] * d[39] * d[40] * d[44] - 2 * d[16] * d[36] * d[41] * d[44] + 2 * d[15] * d[39] * d[41] * d[44] - 2 * d[13] * d[37] * d[42] * d[44] + 2 * d[14] * d[39] * d[42] * d[44] - 2 * d[10] * d[40] * d[42] * d[44] + 2 * d[12] * d[41] * d[42] * d[44] - 2 * d[14] * d[36] * d[43] * d[44] + 2 * d[13] * d[39] * d[43] * d[44] + 2 * d[12] * d[40] * d[43] * d[44] - 2 * d[9] * d[41] * d[43] * d[44] + d[10] * d[36] * std::pow(d[44], 2) + d[9] * d[37] * std::pow(d[44], 2) - 2 * d[12] * d[39] * std::pow(d[44], 2);
    coeffs[137] = 2 * d[24] * d[37] * d[38] * d[42] - 2 * d[25] * d[38] * d[39] * d[42] - 2 * d[26] * d[37] * d[40] * d[42] + 2 * d[26] * d[39] * d[41] * d[42] + 2 * d[25] * d[40] * d[41] * d[42] - 2 * d[24] * std::pow(d[41], 2) * d[42] + d[20] * d[37] * std::pow(d[42], 2) + d[19] * d[38] * std::pow(d[42], 2) - 2 * d[23] * d[41] * std::pow(d[42], 2) + 2 * d[25] * d[36] * d[38] * d[43] - 2 * d[24] * d[38] * d[39] * d[43] + 2 * d[26] * d[39] * d[40] * d[43] - 2 * d[25] * std::pow(d[40], 2) * d[43] - 2 * d[26] * d[36] * d[41] * d[43] + 2 * d[24] * d[40] * d[41] * d[43] - 2 * d[21] * d[38] * d[42] * d[43] - 2 * d[20] * d[39] * d[42] * d[43] + 2 * d[23] * d[40] * d[42] * d[43] + 2 * d[22] * d[41] * d[42] * d[43] + d[20] * d[36] * std::pow(d[43], 2) + d[18] * d[38] * std::pow(d[43], 2) - 2 * d[22] * d[40] * std::pow(d[43], 2) + 2 * d[26] * d[36] * d[37] * d[44] - 2 * d[26] * std::pow(d[39], 2) * d[44] - 2 * d[24] * d[37] * d[40] * d[44] + 2 * d[25] * d[39] * d[40] * d[44] - 2 * d[25] * d[36] * d[41] * d[44] + 2 * d[24] * d[39] * d[41] * d[44] - 2 * d[22] * d[37] * d[42] * d[44] + 2 * d[23] * d[39] * d[42] * d[44] - 2 * d[19] * d[40] * d[42] * d[44] + 2 * d[21] * d[41] * d[42] * d[44] - 2 * d[23] * d[36] * d[43] * d[44] + 2 * d[22] * d[39] * d[43] * d[44] + 2 * d[21] * d[40] * d[43] * d[44] - 2 * d[18] * d[41] * d[43] * d[44] + d[19] * d[36] * std::pow(d[44], 2) + d[18] * d[37] * std::pow(d[44], 2) - 2 * d[21] * d[39] * std::pow(d[44], 2);
    coeffs[138] = 2 * d[33] * d[37] * d[38] * d[42] - 2 * d[34] * d[38] * d[39] * d[42] - 2 * d[35] * d[37] * d[40] * d[42] + 2 * d[35] * d[39] * d[41] * d[42] + 2 * d[34] * d[40] * d[41] * d[42] - 2 * d[33] * std::pow(d[41], 2) * d[42] + d[29] * d[37] * std::pow(d[42], 2) + d[28] * d[38] * std::pow(d[42], 2) - 2 * d[32] * d[41] * std::pow(d[42], 2) + 2 * d[34] * d[36] * d[38] * d[43] - 2 * d[33] * d[38] * d[39] * d[43] + 2 * d[35] * d[39] * d[40] * d[43] - 2 * d[34] * std::pow(d[40], 2) * d[43] - 2 * d[35] * d[36] * d[41] * d[43] + 2 * d[33] * d[40] * d[41] * d[43] - 2 * d[30] * d[38] * d[42] * d[43] - 2 * d[29] * d[39] * d[42] * d[43] + 2 * d[32] * d[40] * d[42] * d[43] + 2 * d[31] * d[41] * d[42] * d[43] + d[29] * d[36] * std::pow(d[43], 2) + d[27] * d[38] * std::pow(d[43], 2) - 2 * d[31] * d[40] * std::pow(d[43], 2) + 2 * d[35] * d[36] * d[37] * d[44] - 2 * d[35] * std::pow(d[39], 2) * d[44] - 2 * d[33] * d[37] * d[40] * d[44] + 2 * d[34] * d[39] * d[40] * d[44] - 2 * d[34] * d[36] * d[41] * d[44] + 2 * d[33] * d[39] * d[41] * d[44] - 2 * d[31] * d[37] * d[42] * d[44] + 2 * d[32] * d[39] * d[42] * d[44] - 2 * d[28] * d[40] * d[42] * d[44] + 2 * d[30] * d[41] * d[42] * d[44] - 2 * d[32] * d[36] * d[43] * d[44] + 2 * d[31] * d[39] * d[43] * d[44] + 2 * d[30] * d[40] * d[43] * d[44] - 2 * d[27] * d[41] * d[43] * d[44] + d[28] * d[36] * std::pow(d[44], 2) + d[27] * d[37] * std::pow(d[44], 2) - 2 * d[30] * d[39] * std::pow(d[44], 2);
    coeffs[139] = d[37] * d[38] * std::pow(d[42], 2) - std::pow(d[41], 2) * std::pow(d[42], 2) - 2 * d[38] * d[39] * d[42] * d[43] + 2 * d[40] * d[41] * d[42] * d[43] + d[36] * d[38] * std::pow(d[43], 2) - std::pow(d[40], 2) * std::pow(d[43], 2) - 2 * d[37] * d[40] * d[42] * d[44] + 2 * d[39] * d[41] * d[42] * d[44] + 2 * d[39] * d[40] * d[43] * d[44] - 2 * d[36] * d[41] * d[43] * d[44] + d[36] * d[37] * std::pow(d[44], 2) - std::pow(d[39], 2) * std::pow(d[44], 2);
    coeffs[140] = 2 * d[6] * d[10] * d[11] * d[15] - 2 * d[7] * d[11] * d[12] * d[15] - 2 * d[8] * d[10] * d[13] * d[15] + 2 * d[8] * d[12] * d[14] * d[15] + 2 * d[7] * d[13] * d[14] * d[15] - 2 * d[6] * std::pow(d[14], 2) * d[15] + d[2] * d[10] * std::pow(d[15], 2) + d[1] * d[11] * std::pow(d[15], 2) - 2 * d[5] * d[14] * std::pow(d[15], 2) + 2 * d[7] * d[9] * d[11] * d[16] - 2 * d[6] * d[11] * d[12] * d[16] + 2 * d[8] * d[12] * d[13] * d[16] - 2 * d[7] * std::pow(d[13], 2) * d[16] - 2 * d[8] * d[9] * d[14] * d[16] + 2 * d[6] * d[13] * d[14] * d[16] - 2 * d[3] * d[11] * d[15] * d[16] - 2 * d[2] * d[12] * d[15] * d[16] + 2 * d[5] * d[13] * d[15] * d[16] + 2 * d[4] * d[14] * d[15] * d[16] + d[2] * d[9] * std::pow(d[16], 2) + d[0] * d[11] * std::pow(d[16], 2) - 2 * d[4] * d[13] * std::pow(d[16], 2) + 2 * d[8] * d[9] * d[10] * d[17] - 2 * d[8] * std::pow(d[12], 2) * d[17] - 2 * d[6] * d[10] * d[13] * d[17] + 2 * d[7] * d[12] * d[13] * d[17] - 2 * d[7] * d[9] * d[14] * d[17] + 2 * d[6] * d[12] * d[14] * d[17] - 2 * d[4] * d[10] * d[15] * d[17] + 2 * d[5] * d[12] * d[15] * d[17] - 2 * d[1] * d[13] * d[15] * d[17] + 2 * d[3] * d[14] * d[15] * d[17] - 2 * d[5] * d[9] * d[16] * d[17] + 2 * d[4] * d[12] * d[16] * d[17] + 2 * d[3] * d[13] * d[16] * d[17] - 2 * d[0] * d[14] * d[16] * d[17] + d[1] * d[9] * std::pow(d[17], 2) + d[0] * d[10] * std::pow(d[17], 2) - 2 * d[3] * d[12] * std::pow(d[17], 2) - d[9] * d[10] * d[11] * d[57] + d[11] * std::pow(d[12], 2) * d[57] + d[10] * std::pow(d[13], 2) * d[57] - 2 * d[12] * d[13] * d[14] * d[57] + d[9] * std::pow(d[14], 2) * d[57];
    coeffs[141] = 2 * d[7] * d[11] * d[16] * d[18] - 2 * d[8] * d[14] * d[16] * d[18] + d[2] * std::pow(d[16], 2) * d[18] + 2 * d[8] * d[10] * d[17] * d[18] - 2 * d[7] * d[14] * d[17] * d[18] - 2 * d[5] * d[16] * d[17] * d[18] + d[1] * std::pow(d[17], 2) * d[18] + 2 * d[6] * d[11] * d[15] * d[19] - 2 * d[8] * d[13] * d[15] * d[19] + d[2] * std::pow(d[15], 2) * d[19] + 2 * d[8] * d[9] * d[17] * d[19] - 2 * d[6] * d[13] * d[17] * d[19] - 2 * d[4] * d[15] * d[17] * d[19] + d[0] * std::pow(d[17], 2) * d[19] + 2 * d[6] * d[10] * d[15] * d[20] - 2 * d[7] * d[12] * d[15] * d[20] + d[1] * std::pow(d[15], 2) * d[20] + 2 * d[7] * d[9] * d[16] * d[20] - 2 * d[6] * d[12] * d[16] * d[20] - 2 * d[3] * d[15] * d[16] * d[20] + d[0] * std::pow(d[16], 2) * d[20] - 2 * d[7] * d[11] * d[15] * d[21] + 2 * d[8] * d[14] * d[15] * d[21] - 2 * d[6] * d[11] * d[16] * d[21] + 2 * d[8] * d[13] * d[16] * d[21] - 2 * d[2] * d[15] * d[16] * d[21] - 4 * d[8] * d[12] * d[17] * d[21] + 2 * d[7] * d[13] * d[17] * d[21] + 2 * d[6] * d[14] * d[17] * d[21] + 2 * d[5] * d[15] * d[17] * d[21] + 2 * d[4] * d[16] * d[17] * d[21] - 2 * d[3] * std::pow(d[17], 2) * d[21] - 2 * d[8] * d[10] * d[15] * d[22] + 2 * d[7] * d[14] * d[15] * d[22] + 2 * d[8] * d[12] * d[16] * d[22] - 4 * d[7] * d[13] * d[16] * d[22] + 2 * d[6] * d[14] * d[16] * d[22] + 2 * d[5] * d[15] * d[16] * d[22] - 2 * d[4] * std::pow(d[16], 2) * d[22] - 2 * d[6] * d[10] * d[17] * d[22] + 2 * d[7] * d[12] * d[17] * d[22] - 2 * d[1] * d[15] * d[17] * d[22] + 2 * d[3] * d[16] * d[17] * d[22] + 2 * d[8] * d[12] * d[15] * d[23] + 2 * d[7] * d[13] * d[15] * d[23] - 4 * d[6] * d[14] * d[15] * d[23] - 2 * d[5] * std::pow(d[15], 2) * d[23] - 2 * d[8] * d[9] * d[16] * d[23] + 2 * d[6] * d[13] * d[16] * d[23] + 2 * d[4] * d[15] * d[16] * d[23] - 2 * d[7] * d[9] * d[17] * d[23] + 2 * d[6] * d[12] * d[17] * d[23] + 2 * d[3] * d[15] * d[17] * d[23] - 2 * d[0] * d[16] * d[17] * d[23] + 2 * d[6] * d[10] * d[11] * d[24] - 2 * d[7] * d[11] * d[12] * d[24] - 2 * d[8] * d[10] * d[13] * d[24] + 2 * d[8] * d[12] * d[14] * d[24] + 2 * d[7] * d[13] * d[14] * d[24] - 2 * d[6] * std::pow(d[14], 2) * d[24] + 2 * d[2] * d[10] * d[15] * d[24] + 2 * d[1] * d[11] * d[15] * d[24] - 4 * d[5] * d[14] * d[15] * d[24] - 2 * d[3] * d[11] * d[16] * d[24] - 2 * d[2] * d[12] * d[16] * d[24] + 2 * d[5] * d[13] * d[16] * d[24] + 2 * d[4] * d[14] * d[16] * d[24] - 2 * d[4] * d[10] * d[17] * d[24] + 2 * d[5] * d[12] * d[17] * d[24] - 2 * d[1] * d[13] * d[17] * d[24] + 2 * d[3] * d[14] * d[17] * d[24] + 2 * d[7] * d[9] * d[11] * d[25] - 2 * d[6] * d[11] * d[12] * d[25] + 2 * d[8] * d[12] * d[13] * d[25] - 2 * d[7] * std::pow(d[13], 2) * d[25] - 2 * d[8] * d[9] * d[14] * d[25] + 2 * d[6] * d[13] * d[14] * d[25] - 2 * d[3] * d[11] * d[15] * d[25] - 2 * d[2] * d[12] * d[15] * d[25] + 2 * d[5] * d[13] * d[15] * d[25] + 2 * d[4] * d[14] * d[15] * d[25] + 2 * d[2] * d[9] * d[16] * d[25] + 2 * d[0] * d[11] * d[16] * d[25] - 4 * d[4] * d[13] * d[16] * d[25] - 2 * d[5] * d[9] * d[17] * d[25] + 2 * d[4] * d[12] * d[17] * d[25] + 2 * d[3] * d[13] * d[17] * d[25] - 2 * d[0] * d[14] * d[17] * d[25] + 2 * d[8] * d[9] * d[10] * d[26] - 2 * d[8] * std::pow(d[12], 2) * d[26] - 2 * d[6] * d[10] * d[13] * d[26] + 2 * d[7] * d[12] * d[13] * d[26] - 2 * d[7] * d[9] * d[14] * d[26] + 2 * d[6] * d[12] * d[14] * d[26] - 2 * d[4] * d[10] * d[15] * d[26] + 2 * d[5] * d[12] * d[15] * d[26] - 2 * d[1] * d[13] * d[15] * d[26] + 2 * d[3] * d[14] * d[15] * d[26] - 2 * d[5] * d[9] * d[16] * d[26] + 2 * d[4] * d[12] * d[16] * d[26] + 2 * d[3] * d[13] * d[16] * d[26] - 2 * d[0] * d[14] * d[16] * d[26] + 2 * d[1] * d[9] * d[17] * d[26] + 2 * d[0] * d[10] * d[17] * d[26] - 4 * d[3] * d[12] * d[17] * d[26] - d[10] * d[11] * d[18] * d[57] + std::pow(d[14], 2) * d[18] * d[57] - d[9] * d[11] * d[19] * d[57] + std::pow(d[13], 2) * d[19] * d[57] - d[9] * d[10] * d[20] * d[57] + std::pow(d[12], 2) * d[20] * d[57] + 2 * d[11] * d[12] * d[21] * d[57] - 2 * d[13] * d[14] * d[21] * d[57] + 2 * d[10] * d[13] * d[22] * d[57] - 2 * d[12] * d[14] * d[22] * d[57] - 2 * d[12] * d[13] * d[23] * d[57] + 2 * d[9] * d[14] * d[23] * d[57];
    coeffs[142] = 2 * d[8] * d[17] * d[18] * d[19] + 2 * d[7] * d[16] * d[18] * d[20] + 2 * d[6] * d[15] * d[19] * d[20] - 2 * d[7] * d[15] * d[20] * d[21] - 2 * d[6] * d[16] * d[20] * d[21] - 2 * d[8] * d[17] * std::pow(d[21], 2) - 2 * d[8] * d[15] * d[19] * d[22] - 2 * d[6] * d[17] * d[19] * d[22] + 2 * d[8] * d[16] * d[21] * d[22] + 2 * d[7] * d[17] * d[21] * d[22] - 2 * d[7] * d[16] * std::pow(d[22], 2) - 2 * d[8] * d[16] * d[18] * d[23] - 2 * d[7] * d[17] * d[18] * d[23] + 2 * d[8] * d[15] * d[21] * d[23] + 2 * d[6] * d[17] * d[21] * d[23] + 2 * d[7] * d[15] * d[22] * d[23] + 2 * d[6] * d[16] * d[22] * d[23] - 2 * d[6] * d[15] * std::pow(d[23], 2) + 2 * d[6] * d[11] * d[19] * d[24] - 2 * d[8] * d[13] * d[19] * d[24] + 2 * d[2] * d[15] * d[19] * d[24] - 2 * d[4] * d[17] * d[19] * d[24] + 2 * d[6] * d[10] * d[20] * d[24] - 2 * d[7] * d[12] * d[20] * d[24] + 2 * d[1] * d[15] * d[20] * d[24] - 2 * d[3] * d[16] * d[20] * d[24] - 2 * d[7] * d[11] * d[21] * d[24] + 2 * d[8] * d[14] * d[21] * d[24] - 2 * d[2] * d[16] * d[21] * d[24] + 2 * d[5] * d[17] * d[21] * d[24] - 2 * d[8] * d[10] * d[22] * d[24] + 2 * d[7] * d[14] * d[22] * d[24] + 2 * d[5] * d[16] * d[22] * d[24] - 2 * d[1] * d[17] * d[22] * d[24] + 2 * d[8] * d[12] * d[23] * d[24] + 2 * d[7] * d[13] * d[23] * d[24] - 4 * d[6] * d[14] * d[23] * d[24] - 4 * d[5] * d[15] * d[23] * d[24] + 2 * d[4] * d[16] * d[23] * d[24] + 2 * d[3] * d[17] * d[23] * d[24] + d[2] * d[10] * std::pow(d[24], 2) + d[1] * d[11] * std::pow(d[24], 2) - 2 * d[5] * d[14] * std::pow(d[24], 2) + 2 * d[7] * d[11] * d[18] * d[25] - 2 * d[8] * d[14] * d[18] * d[25] + 2 * d[2] * d[16] * d[18] * d[25] - 2 * d[5] * d[17] * d[18] * d[25] + 2 * d[7] * d[9] * d[20] * d[25] - 2 * d[6] * d[12] * d[20] * d[25] - 2 * d[3] * d[15] * d[20] * d[25] + 2 * d[0] * d[16] * d[20] * d[25] - 2 * d[6] * d[11] * d[21] * d[25] + 2 * d[8] * d[13] * d[21] * d[25] - 2 * d[2] * d[15] * d[21] * d[25] + 2 * d[4] * d[17] * d[21] * d[25] + 2 * d[8] * d[12] * d[22] * d[25] - 4 * d[7] * d[13] * d[22] * d[25] + 2 * d[6] * d[14] * d[22] * d[25] + 2 * d[5] * d[15] * d[22] * d[25] - 4 * d[4] * d[16] * d[22] * d[25] + 2 * d[3] * d[17] * d[22] * d[25] - 2 * d[8] * d[9] * d[23] * d[25] + 2 * d[6] * d[13] * d[23] * d[25] + 2 * d[4] * d[15] * d[23] * d[25] - 2 * d[0] * d[17] * d[23] * d[25] - 2 * d[3] * d[11] * d[24] * d[25] - 2 * d[2] * d[12] * d[24] * d[25] + 2 * d[5] * d[13] * d[24] * d[25] + 2 * d[4] * d[14] * d[24] * d[25] + d[2] * d[9] * std::pow(d[25], 2) + d[0] * d[11] * std::pow(d[25], 2) - 2 * d[4] * d[13] * std::pow(d[25], 2) + 2 * d[8] * d[10] * d[18] * d[26] - 2 * d[7] * d[14] * d[18] * d[26] - 2 * d[5] * d[16] * d[18] * d[26] + 2 * d[1] * d[17] * d[18] * d[26] + 2 * d[8] * d[9] * d[19] * d[26] - 2 * d[6] * d[13] * d[19] * d[26] - 2 * d[4] * d[15] * d[19] * d[26] + 2 * d[0] * d[17] * d[19] * d[26] - 4 * d[8] * d[12] * d[21] * d[26] + 2 * d[7] * d[13] * d[21] * d[26] + 2 * d[6] * d[14] * d[21] * d[26] + 2 * d[5] * d[15] * d[21] * d[26] + 2 * d[4] * d[16] * d[21] * d[26] - 4 * d[3] * d[17] * d[21] * d[26] - 2 * d[6] * d[10] * d[22] * d[26] + 2 * d[7] * d[12] * d[22] * d[26] - 2 * d[1] * d[15] * d[22] * d[26] + 2 * d[3] * d[16] * d[22] * d[26] - 2 * d[7] * d[9] * d[23] * d[26] + 2 * d[6] * d[12] * d[23] * d[26] + 2 * d[3] * d[15] * d[23] * d[26] - 2 * d[0] * d[16] * d[23] * d[26] - 2 * d[4] * d[10] * d[24] * d[26] + 2 * d[5] * d[12] * d[24] * d[26] - 2 * d[1] * d[13] * d[24] * d[26] + 2 * d[3] * d[14] * d[24] * d[26] - 2 * d[5] * d[9] * d[25] * d[26] + 2 * d[4] * d[12] * d[25] * d[26] + 2 * d[3] * d[13] * d[25] * d[26] - 2 * d[0] * d[14] * d[25] * d[26] + d[1] * d[9] * std::pow(d[26], 2) + d[0] * d[10] * std::pow(d[26], 2) - 2 * d[3] * d[12] * std::pow(d[26], 2) - d[11] * d[18] * d[19] * d[57] - d[10] * d[18] * d[20] * d[57] - d[9] * d[19] * d[20] * d[57] + 2 * d[12] * d[20] * d[21] * d[57] + d[11] * std::pow(d[21], 2) * d[57] + 2 * d[13] * d[19] * d[22] * d[57] - 2 * d[14] * d[21] * d[22] * d[57] + d[10] * std::pow(d[22], 2) * d[57] + 2 * d[14] * d[18] * d[23] * d[57] - 2 * d[13] * d[21] * d[23] * d[57] - 2 * d[12] * d[22] * d[23] * d[57] + d[9] * std::pow(d[23], 2) * d[57];
    coeffs[143] = 2 * d[6] * d[19] * d[20] * d[24] - 2 * d[7] * d[20] * d[21] * d[24] - 2 * d[8] * d[19] * d[22] * d[24] + 2 * d[8] * d[21] * d[23] * d[24] + 2 * d[7] * d[22] * d[23] * d[24] - 2 * d[6] * std::pow(d[23], 2) * d[24] + d[2] * d[19] * std::pow(d[24], 2) + d[1] * d[20] * std::pow(d[24], 2) - 2 * d[5] * d[23] * std::pow(d[24], 2) + 2 * d[7] * d[18] * d[20] * d[25] - 2 * d[6] * d[20] * d[21] * d[25] + 2 * d[8] * d[21] * d[22] * d[25] - 2 * d[7] * std::pow(d[22], 2) * d[25] - 2 * d[8] * d[18] * d[23] * d[25] + 2 * d[6] * d[22] * d[23] * d[25] - 2 * d[3] * d[20] * d[24] * d[25] - 2 * d[2] * d[21] * d[24] * d[25] + 2 * d[5] * d[22] * d[24] * d[25] + 2 * d[4] * d[23] * d[24] * d[25] + d[2] * d[18] * std::pow(d[25], 2) + d[0] * d[20] * std::pow(d[25], 2) - 2 * d[4] * d[22] * std::pow(d[25], 2) + 2 * d[8] * d[18] * d[19] * d[26] - 2 * d[8] * std::pow(d[21], 2) * d[26] - 2 * d[6] * d[19] * d[22] * d[26] + 2 * d[7] * d[21] * d[22] * d[26] - 2 * d[7] * d[18] * d[23] * d[26] + 2 * d[6] * d[21] * d[23] * d[26] - 2 * d[4] * d[19] * d[24] * d[26] + 2 * d[5] * d[21] * d[24] * d[26] - 2 * d[1] * d[22] * d[24] * d[26] + 2 * d[3] * d[23] * d[24] * d[26] - 2 * d[5] * d[18] * d[25] * d[26] + 2 * d[4] * d[21] * d[25] * d[26] + 2 * d[3] * d[22] * d[25] * d[26] - 2 * d[0] * d[23] * d[25] * d[26] + d[1] * d[18] * std::pow(d[26], 2) + d[0] * d[19] * std::pow(d[26], 2) - 2 * d[3] * d[21] * std::pow(d[26], 2) - d[18] * d[19] * d[20] * d[57] + d[20] * std::pow(d[21], 2) * d[57] + d[19] * std::pow(d[22], 2) * d[57] - 2 * d[21] * d[22] * d[23] * d[57] + d[18] * std::pow(d[23], 2) * d[57];
    coeffs[144] = 2 * d[7] * d[11] * d[16] * d[27] - 2 * d[8] * d[14] * d[16] * d[27] + d[2] * std::pow(d[16], 2) * d[27] + 2 * d[8] * d[10] * d[17] * d[27] - 2 * d[7] * d[14] * d[17] * d[27] - 2 * d[5] * d[16] * d[17] * d[27] + d[1] * std::pow(d[17], 2) * d[27] + 2 * d[6] * d[11] * d[15] * d[28] - 2 * d[8] * d[13] * d[15] * d[28] + d[2] * std::pow(d[15], 2) * d[28] + 2 * d[8] * d[9] * d[17] * d[28] - 2 * d[6] * d[13] * d[17] * d[28] - 2 * d[4] * d[15] * d[17] * d[28] + d[0] * std::pow(d[17], 2) * d[28] + 2 * d[6] * d[10] * d[15] * d[29] - 2 * d[7] * d[12] * d[15] * d[29] + d[1] * std::pow(d[15], 2) * d[29] + 2 * d[7] * d[9] * d[16] * d[29] - 2 * d[6] * d[12] * d[16] * d[29] - 2 * d[3] * d[15] * d[16] * d[29] + d[0] * std::pow(d[16], 2) * d[29] - 2 * d[7] * d[11] * d[15] * d[30] + 2 * d[8] * d[14] * d[15] * d[30] - 2 * d[6] * d[11] * d[16] * d[30] + 2 * d[8] * d[13] * d[16] * d[30] - 2 * d[2] * d[15] * d[16] * d[30] - 4 * d[8] * d[12] * d[17] * d[30] + 2 * d[7] * d[13] * d[17] * d[30] + 2 * d[6] * d[14] * d[17] * d[30] + 2 * d[5] * d[15] * d[17] * d[30] + 2 * d[4] * d[16] * d[17] * d[30] - 2 * d[3] * std::pow(d[17], 2) * d[30] - 2 * d[8] * d[10] * d[15] * d[31] + 2 * d[7] * d[14] * d[15] * d[31] + 2 * d[8] * d[12] * d[16] * d[31] - 4 * d[7] * d[13] * d[16] * d[31] + 2 * d[6] * d[14] * d[16] * d[31] + 2 * d[5] * d[15] * d[16] * d[31] - 2 * d[4] * std::pow(d[16], 2) * d[31] - 2 * d[6] * d[10] * d[17] * d[31] + 2 * d[7] * d[12] * d[17] * d[31] - 2 * d[1] * d[15] * d[17] * d[31] + 2 * d[3] * d[16] * d[17] * d[31] + 2 * d[8] * d[12] * d[15] * d[32] + 2 * d[7] * d[13] * d[15] * d[32] - 4 * d[6] * d[14] * d[15] * d[32] - 2 * d[5] * std::pow(d[15], 2) * d[32] - 2 * d[8] * d[9] * d[16] * d[32] + 2 * d[6] * d[13] * d[16] * d[32] + 2 * d[4] * d[15] * d[16] * d[32] - 2 * d[7] * d[9] * d[17] * d[32] + 2 * d[6] * d[12] * d[17] * d[32] + 2 * d[3] * d[15] * d[17] * d[32] - 2 * d[0] * d[16] * d[17] * d[32] + 2 * d[6] * d[10] * d[11] * d[33] - 2 * d[7] * d[11] * d[12] * d[33] - 2 * d[8] * d[10] * d[13] * d[33] + 2 * d[8] * d[12] * d[14] * d[33] + 2 * d[7] * d[13] * d[14] * d[33] - 2 * d[6] * std::pow(d[14], 2) * d[33] + 2 * d[2] * d[10] * d[15] * d[33] + 2 * d[1] * d[11] * d[15] * d[33] - 4 * d[5] * d[14] * d[15] * d[33] - 2 * d[3] * d[11] * d[16] * d[33] - 2 * d[2] * d[12] * d[16] * d[33] + 2 * d[5] * d[13] * d[16] * d[33] + 2 * d[4] * d[14] * d[16] * d[33] - 2 * d[4] * d[10] * d[17] * d[33] + 2 * d[5] * d[12] * d[17] * d[33] - 2 * d[1] * d[13] * d[17] * d[33] + 2 * d[3] * d[14] * d[17] * d[33] + 2 * d[7] * d[9] * d[11] * d[34] - 2 * d[6] * d[11] * d[12] * d[34] + 2 * d[8] * d[12] * d[13] * d[34] - 2 * d[7] * std::pow(d[13], 2) * d[34] - 2 * d[8] * d[9] * d[14] * d[34] + 2 * d[6] * d[13] * d[14] * d[34] - 2 * d[3] * d[11] * d[15] * d[34] - 2 * d[2] * d[12] * d[15] * d[34] + 2 * d[5] * d[13] * d[15] * d[34] + 2 * d[4] * d[14] * d[15] * d[34] + 2 * d[2] * d[9] * d[16] * d[34] + 2 * d[0] * d[11] * d[16] * d[34] - 4 * d[4] * d[13] * d[16] * d[34] - 2 * d[5] * d[9] * d[17] * d[34] + 2 * d[4] * d[12] * d[17] * d[34] + 2 * d[3] * d[13] * d[17] * d[34] - 2 * d[0] * d[14] * d[17] * d[34] + 2 * d[8] * d[9] * d[10] * d[35] - 2 * d[8] * std::pow(d[12], 2) * d[35] - 2 * d[6] * d[10] * d[13] * d[35] + 2 * d[7] * d[12] * d[13] * d[35] - 2 * d[7] * d[9] * d[14] * d[35] + 2 * d[6] * d[12] * d[14] * d[35] - 2 * d[4] * d[10] * d[15] * d[35] + 2 * d[5] * d[12] * d[15] * d[35] - 2 * d[1] * d[13] * d[15] * d[35] + 2 * d[3] * d[14] * d[15] * d[35] - 2 * d[5] * d[9] * d[16] * d[35] + 2 * d[4] * d[12] * d[16] * d[35] + 2 * d[3] * d[13] * d[16] * d[35] - 2 * d[0] * d[14] * d[16] * d[35] + 2 * d[1] * d[9] * d[17] * d[35] + 2 * d[0] * d[10] * d[17] * d[35] - 4 * d[3] * d[12] * d[17] * d[35] - d[10] * d[11] * d[27] * d[57] + std::pow(d[14], 2) * d[27] * d[57] - d[9] * d[11] * d[28] * d[57] + std::pow(d[13], 2) * d[28] * d[57] - d[9] * d[10] * d[29] * d[57] + std::pow(d[12], 2) * d[29] * d[57] + 2 * d[11] * d[12] * d[30] * d[57] - 2 * d[13] * d[14] * d[30] * d[57] + 2 * d[10] * d[13] * d[31] * d[57] - 2 * d[12] * d[14] * d[31] * d[57] - 2 * d[12] * d[13] * d[32] * d[57] + 2 * d[9] * d[14] * d[32] * d[57];
    coeffs[145] = 2 * d[8] * d[17] * d[19] * d[27] + 2 * d[7] * d[16] * d[20] * d[27] - 2 * d[8] * d[16] * d[23] * d[27] - 2 * d[7] * d[17] * d[23] * d[27] + 2 * d[7] * d[11] * d[25] * d[27] - 2 * d[8] * d[14] * d[25] * d[27] + 2 * d[2] * d[16] * d[25] * d[27] - 2 * d[5] * d[17] * d[25] * d[27] + 2 * d[8] * d[10] * d[26] * d[27] - 2 * d[7] * d[14] * d[26] * d[27] - 2 * d[5] * d[16] * d[26] * d[27] + 2 * d[1] * d[17] * d[26] * d[27] + 2 * d[8] * d[17] * d[18] * d[28] + 2 * d[6] * d[15] * d[20] * d[28] - 2 * d[8] * d[15] * d[22] * d[28] - 2 * d[6] * d[17] * d[22] * d[28] + 2 * d[6] * d[11] * d[24] * d[28] - 2 * d[8] * d[13] * d[24] * d[28] + 2 * d[2] * d[15] * d[24] * d[28] - 2 * d[4] * d[17] * d[24] * d[28] + 2 * d[8] * d[9] * d[26] * d[28] - 2 * d[6] * d[13] * d[26] * d[28] - 2 * d[4] * d[15] * d[26] * d[28] + 2 * d[0] * d[17] * d[26] * d[28] + 2 * d[7] * d[16] * d[18] * d[29] + 2 * d[6] * d[15] * d[19] * d[29] - 2 * d[7] * d[15] * d[21] * d[29] - 2 * d[6] * d[16] * d[21] * d[29] + 2 * d[6] * d[10] * d[24] * d[29] - 2 * d[7] * d[12] * d[24] * d[29] + 2 * d[1] * d[15] * d[24] * d[29] - 2 * d[3] * d[16] * d[24] * d[29] + 2 * d[7] * d[9] * d[25] * d[29] - 2 * d[6] * d[12] * d[25] * d[29] - 2 * d[3] * d[15] * d[25] * d[29] + 2 * d[0] * d[16] * d[25] * d[29] - 2 * d[7] * d[15] * d[20] * d[30] - 2 * d[6] * d[16] * d[20] * d[30] - 4 * d[8] * d[17] * d[21] * d[30] + 2 * d[8] * d[16] * d[22] * d[30] + 2 * d[7] * d[17] * d[22] * d[30] + 2 * d[8] * d[15] * d[23] * d[30] + 2 * d[6] * d[17] * d[23] * d[30] - 2 * d[7] * d[11] * d[24] * d[30] + 2 * d[8] * d[14] * d[24] * d[30] - 2 * d[2] * d[16] * d[24] * d[30] + 2 * d[5] * d[17] * d[24] * d[30] - 2 * d[6] * d[11] * d[25] * d[30] + 2 * d[8] * d[13] * d[25] * d[30] - 2 * d[2] * d[15] * d[25] * d[30] + 2 * d[4] * d[17] * d[25] * d[30] - 4 * d[8] * d[12] * d[26] * d[30] + 2 * d[7] * d[13] * d[26] * d[30] + 2 * d[6] * d[14] * d[26] * d[30] + 2 * d[5] * d[15] * d[26] * d[30] + 2 * d[4] * d[16] * d[26] * d[30] - 4 * d[3] * d[17] * d[26] * d[30] - 2 * d[8] * d[15] * d[19] * d[31] - 2 * d[6] * d[17] * d[19] * d[31] + 2 * d[8] * d[16] * d[21] * d[31] + 2 * d[7] * d[17] * d[21] * d[31] - 4 * d[7] * d[16] * d[22] * d[31] + 2 * d[7] * d[15] * d[23] * d[31] + 2 * d[6] * d[16] * d[23] * d[31] - 2 * d[8] * d[10] * d[24] * d[31] + 2 * d[7] * d[14] * d[24] * d[31] + 2 * d[5] * d[16] * d[24] * d[31] - 2 * d[1] * d[17] * d[24] * d[31] + 2 * d[8] * d[12] * d[25] * d[31] - 4 * d[7] * d[13] * d[25] * d[31] + 2 * d[6] * d[14] * d[25] * d[31] + 2 * d[5] * d[15] * d[25] * d[31] - 4 * d[4] * d[16] * d[25] * d[31] + 2 * d[3] * d[17] * d[25] * d[31] - 2 * d[6] * d[10] * d[26] * d[31] + 2 * d[7] * d[12] * d[26] * d[31] - 2 * d[1] * d[15] * d[26] * d[31] + 2 * d[3] * d[16] * d[26] * d[31] - 2 * d[8] * d[16] * d[18] * d[32] - 2 * d[7] * d[17] * d[18] * d[32] + 2 * d[8] * d[15] * d[21] * d[32] + 2 * d[6] * d[17] * d[21] * d[32] + 2 * d[7] * d[15] * d[22] * d[32] + 2 * d[6] * d[16] * d[22] * d[32] - 4 * d[6] * d[15] * d[23] * d[32] + 2 * d[8] * d[12] * d[24] * d[32] + 2 * d[7] * d[13] * d[24] * d[32] - 4 * d[6] * d[14] * d[24] * d[32] - 4 * d[5] * d[15] * d[24] * d[32] + 2 * d[4] * d[16] * d[24] * d[32] + 2 * d[3] * d[17] * d[24] * d[32] - 2 * d[8] * d[9] * d[25] * d[32] + 2 * d[6] * d[13] * d[25] * d[32] + 2 * d[4] * d[15] * d[25] * d[32] - 2 * d[0] * d[17] * d[25] * d[32] - 2 * d[7] * d[9] * d[26] * d[32] + 2 * d[6] * d[12] * d[26] * d[32] + 2 * d[3] * d[15] * d[26] * d[32] - 2 * d[0] * d[16] * d[26] * d[32] + 2 * d[6] * d[11] * d[19] * d[33] - 2 * d[8] * d[13] * d[19] * d[33] + 2 * d[2] * d[15] * d[19] * d[33] - 2 * d[4] * d[17] * d[19] * d[33] + 2 * d[6] * d[10] * d[20] * d[33] - 2 * d[7] * d[12] * d[20] * d[33] + 2 * d[1] * d[15] * d[20] * d[33] - 2 * d[3] * d[16] * d[20] * d[33] - 2 * d[7] * d[11] * d[21] * d[33] + 2 * d[8] * d[14] * d[21] * d[33] - 2 * d[2] * d[16] * d[21] * d[33] + 2 * d[5] * d[17] * d[21] * d[33] - 2 * d[8] * d[10] * d[22] * d[33] + 2 * d[7] * d[14] * d[22] * d[33] + 2 * d[5] * d[16] * d[22] * d[33] - 2 * d[1] * d[17] * d[22] * d[33] + 2 * d[8] * d[12] * d[23] * d[33] + 2 * d[7] * d[13] * d[23] * d[33] - 4 * d[6] * d[14] * d[23] * d[33] - 4 * d[5] * d[15] * d[23] * d[33] + 2 * d[4] * d[16] * d[23] * d[33] + 2 * d[3] * d[17] * d[23] * d[33] + 2 * d[2] * d[10] * d[24] * d[33] + 2 * d[1] * d[11] * d[24] * d[33] - 4 * d[5] * d[14] * d[24] * d[33] - 2 * d[3] * d[11] * d[25] * d[33] - 2 * d[2] * d[12] * d[25] * d[33] + 2 * d[5] * d[13] * d[25] * d[33] + 2 * d[4] * d[14] * d[25] * d[33] - 2 * d[4] * d[10] * d[26] * d[33] + 2 * d[5] * d[12] * d[26] * d[33] - 2 * d[1] * d[13] * d[26] * d[33] + 2 * d[3] * d[14] * d[26] * d[33] + 2 * d[7] * d[11] * d[18] * d[34] - 2 * d[8] * d[14] * d[18] * d[34] + 2 * d[2] * d[16] * d[18] * d[34] - 2 * d[5] * d[17] * d[18] * d[34] + 2 * d[7] * d[9] * d[20] * d[34] - 2 * d[6] * d[12] * d[20] * d[34] - 2 * d[3] * d[15] * d[20] * d[34] + 2 * d[0] * d[16] * d[20] * d[34] - 2 * d[6] * d[11] * d[21] * d[34] + 2 * d[8] * d[13] * d[21] * d[34] - 2 * d[2] * d[15] * d[21] * d[34] + 2 * d[4] * d[17] * d[21] * d[34] + 2 * d[8] * d[12] * d[22] * d[34] - 4 * d[7] * d[13] * d[22] * d[34] + 2 * d[6] * d[14] * d[22] * d[34] + 2 * d[5] * d[15] * d[22] * d[34] - 4 * d[4] * d[16] * d[22] * d[34] + 2 * d[3] * d[17] * d[22] * d[34] - 2 * d[8] * d[9] * d[23] * d[34] + 2 * d[6] * d[13] * d[23] * d[34] + 2 * d[4] * d[15] * d[23] * d[34] - 2 * d[0] * d[17] * d[23] * d[34] - 2 * d[3] * d[11] * d[24] * d[34] - 2 * d[2] * d[12] * d[24] * d[34] + 2 * d[5] * d[13] * d[24] * d[34] + 2 * d[4] * d[14] * d[24] * d[34] + 2 * d[2] * d[9] * d[25] * d[34] + 2 * d[0] * d[11] * d[25] * d[34] - 4 * d[4] * d[13] * d[25] * d[34] - 2 * d[5] * d[9] * d[26] * d[34] + 2 * d[4] * d[12] * d[26] * d[34] + 2 * d[3] * d[13] * d[26] * d[34] - 2 * d[0] * d[14] * d[26] * d[34] + 2 * d[8] * d[10] * d[18] * d[35] - 2 * d[7] * d[14] * d[18] * d[35] - 2 * d[5] * d[16] * d[18] * d[35] + 2 * d[1] * d[17] * d[18] * d[35] + 2 * d[8] * d[9] * d[19] * d[35] - 2 * d[6] * d[13] * d[19] * d[35] - 2 * d[4] * d[15] * d[19] * d[35] + 2 * d[0] * d[17] * d[19] * d[35] - 4 * d[8] * d[12] * d[21] * d[35] + 2 * d[7] * d[13] * d[21] * d[35] + 2 * d[6] * d[14] * d[21] * d[35] + 2 * d[5] * d[15] * d[21] * d[35] + 2 * d[4] * d[16] * d[21] * d[35] - 4 * d[3] * d[17] * d[21] * d[35] - 2 * d[6] * d[10] * d[22] * d[35] + 2 * d[7] * d[12] * d[22] * d[35] - 2 * d[1] * d[15] * d[22] * d[35] + 2 * d[3] * d[16] * d[22] * d[35] - 2 * d[7] * d[9] * d[23] * d[35] + 2 * d[6] * d[12] * d[23] * d[35] + 2 * d[3] * d[15] * d[23] * d[35] - 2 * d[0] * d[16] * d[23] * d[35] - 2 * d[4] * d[10] * d[24] * d[35] + 2 * d[5] * d[12] * d[24] * d[35] - 2 * d[1] * d[13] * d[24] * d[35] + 2 * d[3] * d[14] * d[24] * d[35] - 2 * d[5] * d[9] * d[25] * d[35] + 2 * d[4] * d[12] * d[25] * d[35] + 2 * d[3] * d[13] * d[25] * d[35] - 2 * d[0] * d[14] * d[25] * d[35] + 2 * d[1] * d[9] * d[26] * d[35] + 2 * d[0] * d[10] * d[26] * d[35] - 4 * d[3] * d[12] * d[26] * d[35] - d[11] * d[19] * d[27] * d[57] - d[10] * d[20] * d[27] * d[57] + 2 * d[14] * d[23] * d[27] * d[57] - d[11] * d[18] * d[28] * d[57] - d[9] * d[20] * d[28] * d[57] + 2 * d[13] * d[22] * d[28] * d[57] - d[10] * d[18] * d[29] * d[57] - d[9] * d[19] * d[29] * d[57] + 2 * d[12] * d[21] * d[29] * d[57] + 2 * d[12] * d[20] * d[30] * d[57] + 2 * d[11] * d[21] * d[30] * d[57] - 2 * d[14] * d[22] * d[30] * d[57] - 2 * d[13] * d[23] * d[30] * d[57] + 2 * d[13] * d[19] * d[31] * d[57] - 2 * d[14] * d[21] * d[31] * d[57] + 2 * d[10] * d[22] * d[31] * d[57] - 2 * d[12] * d[23] * d[31] * d[57] + 2 * d[14] * d[18] * d[32] * d[57] - 2 * d[13] * d[21] * d[32] * d[57] - 2 * d[12] * d[22] * d[32] * d[57] + 2 * d[9] * d[23] * d[32] * d[57];
    coeffs[146] = 2 * d[7] * d[20] * d[25] * d[27] - 2 * d[8] * d[23] * d[25] * d[27] + d[2] * std::pow(d[25], 2) * d[27] + 2 * d[8] * d[19] * d[26] * d[27] - 2 * d[7] * d[23] * d[26] * d[27] - 2 * d[5] * d[25] * d[26] * d[27] + d[1] * std::pow(d[26], 2) * d[27] + 2 * d[6] * d[20] * d[24] * d[28] - 2 * d[8] * d[22] * d[24] * d[28] + d[2] * std::pow(d[24], 2) * d[28] + 2 * d[8] * d[18] * d[26] * d[28] - 2 * d[6] * d[22] * d[26] * d[28] - 2 * d[4] * d[24] * d[26] * d[28] + d[0] * std::pow(d[26], 2) * d[28] + 2 * d[6] * d[19] * d[24] * d[29] - 2 * d[7] * d[21] * d[24] * d[29] + d[1] * std::pow(d[24], 2) * d[29] + 2 * d[7] * d[18] * d[25] * d[29] - 2 * d[6] * d[21] * d[25] * d[29] - 2 * d[3] * d[24] * d[25] * d[29] + d[0] * std::pow(d[25], 2) * d[29] - 2 * d[7] * d[20] * d[24] * d[30] + 2 * d[8] * d[23] * d[24] * d[30] - 2 * d[6] * d[20] * d[25] * d[30] + 2 * d[8] * d[22] * d[25] * d[30] - 2 * d[2] * d[24] * d[25] * d[30] - 4 * d[8] * d[21] * d[26] * d[30] + 2 * d[7] * d[22] * d[26] * d[30] + 2 * d[6] * d[23] * d[26] * d[30] + 2 * d[5] * d[24] * d[26] * d[30] + 2 * d[4] * d[25] * d[26] * d[30] - 2 * d[3] * std::pow(d[26], 2) * d[30] - 2 * d[8] * d[19] * d[24] * d[31] + 2 * d[7] * d[23] * d[24] * d[31] + 2 * d[8] * d[21] * d[25] * d[31] - 4 * d[7] * d[22] * d[25] * d[31] + 2 * d[6] * d[23] * d[25] * d[31] + 2 * d[5] * d[24] * d[25] * d[31] - 2 * d[4] * std::pow(d[25], 2) * d[31] - 2 * d[6] * d[19] * d[26] * d[31] + 2 * d[7] * d[21] * d[26] * d[31] - 2 * d[1] * d[24] * d[26] * d[31] + 2 * d[3] * d[25] * d[26] * d[31] + 2 * d[8] * d[21] * d[24] * d[32] + 2 * d[7] * d[22] * d[24] * d[32] - 4 * d[6] * d[23] * d[24] * d[32] - 2 * d[5] * std::pow(d[24], 2) * d[32] - 2 * d[8] * d[18] * d[25] * d[32] + 2 * d[6] * d[22] * d[25] * d[32] + 2 * d[4] * d[24] * d[25] * d[32] - 2 * d[7] * d[18] * d[26] * d[32] + 2 * d[6] * d[21] * d[26] * d[32] + 2 * d[3] * d[24] * d[26] * d[32] - 2 * d[0] * d[25] * d[26] * d[32] + 2 * d[6] * d[19] * d[20] * d[33] - 2 * d[7] * d[20] * d[21] * d[33] - 2 * d[8] * d[19] * d[22] * d[33] + 2 * d[8] * d[21] * d[23] * d[33] + 2 * d[7] * d[22] * d[23] * d[33] - 2 * d[6] * std::pow(d[23], 2) * d[33] + 2 * d[2] * d[19] * d[24] * d[33] + 2 * d[1] * d[20] * d[24] * d[33] - 4 * d[5] * d[23] * d[24] * d[33] - 2 * d[3] * d[20] * d[25] * d[33] - 2 * d[2] * d[21] * d[25] * d[33] + 2 * d[5] * d[22] * d[25] * d[33] + 2 * d[4] * d[23] * d[25] * d[33] - 2 * d[4] * d[19] * d[26] * d[33] + 2 * d[5] * d[21] * d[26] * d[33] - 2 * d[1] * d[22] * d[26] * d[33] + 2 * d[3] * d[23] * d[26] * d[33] + 2 * d[7] * d[18] * d[20] * d[34] - 2 * d[6] * d[20] * d[21] * d[34] + 2 * d[8] * d[21] * d[22] * d[34] - 2 * d[7] * std::pow(d[22], 2) * d[34] - 2 * d[8] * d[18] * d[23] * d[34] + 2 * d[6] * d[22] * d[23] * d[34] - 2 * d[3] * d[20] * d[24] * d[34] - 2 * d[2] * d[21] * d[24] * d[34] + 2 * d[5] * d[22] * d[24] * d[34] + 2 * d[4] * d[23] * d[24] * d[34] + 2 * d[2] * d[18] * d[25] * d[34] + 2 * d[0] * d[20] * d[25] * d[34] - 4 * d[4] * d[22] * d[25] * d[34] - 2 * d[5] * d[18] * d[26] * d[34] + 2 * d[4] * d[21] * d[26] * d[34] + 2 * d[3] * d[22] * d[26] * d[34] - 2 * d[0] * d[23] * d[26] * d[34] + 2 * d[8] * d[18] * d[19] * d[35] - 2 * d[8] * std::pow(d[21], 2) * d[35] - 2 * d[6] * d[19] * d[22] * d[35] + 2 * d[7] * d[21] * d[22] * d[35] - 2 * d[7] * d[18] * d[23] * d[35] + 2 * d[6] * d[21] * d[23] * d[35] - 2 * d[4] * d[19] * d[24] * d[35] + 2 * d[5] * d[21] * d[24] * d[35] - 2 * d[1] * d[22] * d[24] * d[35] + 2 * d[3] * d[23] * d[24] * d[35] - 2 * d[5] * d[18] * d[25] * d[35] + 2 * d[4] * d[21] * d[25] * d[35] + 2 * d[3] * d[22] * d[25] * d[35] - 2 * d[0] * d[23] * d[25] * d[35] + 2 * d[1] * d[18] * d[26] * d[35] + 2 * d[0] * d[19] * d[26] * d[35] - 4 * d[3] * d[21] * d[26] * d[35] - d[19] * d[20] * d[27] * d[57] + std::pow(d[23], 2) * d[27] * d[57] - d[18] * d[20] * d[28] * d[57] + std::pow(d[22], 2) * d[28] * d[57] - d[18] * d[19] * d[29] * d[57] + std::pow(d[21], 2) * d[29] * d[57] + 2 * d[20] * d[21] * d[30] * d[57] - 2 * d[22] * d[23] * d[30] * d[57] + 2 * d[19] * d[22] * d[31] * d[57] - 2 * d[21] * d[23] * d[31] * d[57] - 2 * d[21] * d[22] * d[32] * d[57] + 2 * d[18] * d[23] * d[32] * d[57];
    coeffs[147] = 2 * d[8] * d[17] * d[27] * d[28] + 2 * d[7] * d[16] * d[27] * d[29] + 2 * d[6] * d[15] * d[28] * d[29] - 2 * d[7] * d[15] * d[29] * d[30] - 2 * d[6] * d[16] * d[29] * d[30] - 2 * d[8] * d[17] * std::pow(d[30], 2) - 2 * d[8] * d[15] * d[28] * d[31] - 2 * d[6] * d[17] * d[28] * d[31] + 2 * d[8] * d[16] * d[30] * d[31] + 2 * d[7] * d[17] * d[30] * d[31] - 2 * d[7] * d[16] * std::pow(d[31], 2) - 2 * d[8] * d[16] * d[27] * d[32] - 2 * d[7] * d[17] * d[27] * d[32] + 2 * d[8] * d[15] * d[30] * d[32] + 2 * d[6] * d[17] * d[30] * d[32] + 2 * d[7] * d[15] * d[31] * d[32] + 2 * d[6] * d[16] * d[31] * d[32] - 2 * d[6] * d[15] * std::pow(d[32], 2) + 2 * d[6] * d[11] * d[28] * d[33] - 2 * d[8] * d[13] * d[28] * d[33] + 2 * d[2] * d[15] * d[28] * d[33] - 2 * d[4] * d[17] * d[28] * d[33] + 2 * d[6] * d[10] * d[29] * d[33] - 2 * d[7] * d[12] * d[29] * d[33] + 2 * d[1] * d[15] * d[29] * d[33] - 2 * d[3] * d[16] * d[29] * d[33] - 2 * d[7] * d[11] * d[30] * d[33] + 2 * d[8] * d[14] * d[30] * d[33] - 2 * d[2] * d[16] * d[30] * d[33] + 2 * d[5] * d[17] * d[30] * d[33] - 2 * d[8] * d[10] * d[31] * d[33] + 2 * d[7] * d[14] * d[31] * d[33] + 2 * d[5] * d[16] * d[31] * d[33] - 2 * d[1] * d[17] * d[31] * d[33] + 2 * d[8] * d[12] * d[32] * d[33] + 2 * d[7] * d[13] * d[32] * d[33] - 4 * d[6] * d[14] * d[32] * d[33] - 4 * d[5] * d[15] * d[32] * d[33] + 2 * d[4] * d[16] * d[32] * d[33] + 2 * d[3] * d[17] * d[32] * d[33] + d[2] * d[10] * std::pow(d[33], 2) + d[1] * d[11] * std::pow(d[33], 2) - 2 * d[5] * d[14] * std::pow(d[33], 2) + 2 * d[7] * d[11] * d[27] * d[34] - 2 * d[8] * d[14] * d[27] * d[34] + 2 * d[2] * d[16] * d[27] * d[34] - 2 * d[5] * d[17] * d[27] * d[34] + 2 * d[7] * d[9] * d[29] * d[34] - 2 * d[6] * d[12] * d[29] * d[34] - 2 * d[3] * d[15] * d[29] * d[34] + 2 * d[0] * d[16] * d[29] * d[34] - 2 * d[6] * d[11] * d[30] * d[34] + 2 * d[8] * d[13] * d[30] * d[34] - 2 * d[2] * d[15] * d[30] * d[34] + 2 * d[4] * d[17] * d[30] * d[34] + 2 * d[8] * d[12] * d[31] * d[34] - 4 * d[7] * d[13] * d[31] * d[34] + 2 * d[6] * d[14] * d[31] * d[34] + 2 * d[5] * d[15] * d[31] * d[34] - 4 * d[4] * d[16] * d[31] * d[34] + 2 * d[3] * d[17] * d[31] * d[34] - 2 * d[8] * d[9] * d[32] * d[34] + 2 * d[6] * d[13] * d[32] * d[34] + 2 * d[4] * d[15] * d[32] * d[34] - 2 * d[0] * d[17] * d[32] * d[34] - 2 * d[3] * d[11] * d[33] * d[34] - 2 * d[2] * d[12] * d[33] * d[34] + 2 * d[5] * d[13] * d[33] * d[34] + 2 * d[4] * d[14] * d[33] * d[34] + d[2] * d[9] * std::pow(d[34], 2) + d[0] * d[11] * std::pow(d[34], 2) - 2 * d[4] * d[13] * std::pow(d[34], 2) + 2 * d[8] * d[10] * d[27] * d[35] - 2 * d[7] * d[14] * d[27] * d[35] - 2 * d[5] * d[16] * d[27] * d[35] + 2 * d[1] * d[17] * d[27] * d[35] + 2 * d[8] * d[9] * d[28] * d[35] - 2 * d[6] * d[13] * d[28] * d[35] - 2 * d[4] * d[15] * d[28] * d[35] + 2 * d[0] * d[17] * d[28] * d[35] - 4 * d[8] * d[12] * d[30] * d[35] + 2 * d[7] * d[13] * d[30] * d[35] + 2 * d[6] * d[14] * d[30] * d[35] + 2 * d[5] * d[15] * d[30] * d[35] + 2 * d[4] * d[16] * d[30] * d[35] - 4 * d[3] * d[17] * d[30] * d[35] - 2 * d[6] * d[10] * d[31] * d[35] + 2 * d[7] * d[12] * d[31] * d[35] - 2 * d[1] * d[15] * d[31] * d[35] + 2 * d[3] * d[16] * d[31] * d[35] - 2 * d[7] * d[9] * d[32] * d[35] + 2 * d[6] * d[12] * d[32] * d[35] + 2 * d[3] * d[15] * d[32] * d[35] - 2 * d[0] * d[16] * d[32] * d[35] - 2 * d[4] * d[10] * d[33] * d[35] + 2 * d[5] * d[12] * d[33] * d[35] - 2 * d[1] * d[13] * d[33] * d[35] + 2 * d[3] * d[14] * d[33] * d[35] - 2 * d[5] * d[9] * d[34] * d[35] + 2 * d[4] * d[12] * d[34] * d[35] + 2 * d[3] * d[13] * d[34] * d[35] - 2 * d[0] * d[14] * d[34] * d[35] + d[1] * d[9] * std::pow(d[35], 2) + d[0] * d[10] * std::pow(d[35], 2) - 2 * d[3] * d[12] * std::pow(d[35], 2) - d[11] * d[27] * d[28] * d[57] - d[10] * d[27] * d[29] * d[57] - d[9] * d[28] * d[29] * d[57] + 2 * d[12] * d[29] * d[30] * d[57] + d[11] * std::pow(d[30], 2) * d[57] + 2 * d[13] * d[28] * d[31] * d[57] - 2 * d[14] * d[30] * d[31] * d[57] + d[10] * std::pow(d[31], 2) * d[57] + 2 * d[14] * d[27] * d[32] * d[57] - 2 * d[13] * d[30] * d[32] * d[57] - 2 * d[12] * d[31] * d[32] * d[57] + d[9] * std::pow(d[32], 2) * d[57];
    coeffs[148] = 2 * d[8] * d[26] * d[27] * d[28] + 2 * d[7] * d[25] * d[27] * d[29] + 2 * d[6] * d[24] * d[28] * d[29] - 2 * d[7] * d[24] * d[29] * d[30] - 2 * d[6] * d[25] * d[29] * d[30] - 2 * d[8] * d[26] * std::pow(d[30], 2) - 2 * d[8] * d[24] * d[28] * d[31] - 2 * d[6] * d[26] * d[28] * d[31] + 2 * d[8] * d[25] * d[30] * d[31] + 2 * d[7] * d[26] * d[30] * d[31] - 2 * d[7] * d[25] * std::pow(d[31], 2) - 2 * d[8] * d[25] * d[27] * d[32] - 2 * d[7] * d[26] * d[27] * d[32] + 2 * d[8] * d[24] * d[30] * d[32] + 2 * d[6] * d[26] * d[30] * d[32] + 2 * d[7] * d[24] * d[31] * d[32] + 2 * d[6] * d[25] * d[31] * d[32] - 2 * d[6] * d[24] * std::pow(d[32], 2) + 2 * d[6] * d[20] * d[28] * d[33] - 2 * d[8] * d[22] * d[28] * d[33] + 2 * d[2] * d[24] * d[28] * d[33] - 2 * d[4] * d[26] * d[28] * d[33] + 2 * d[6] * d[19] * d[29] * d[33] - 2 * d[7] * d[21] * d[29] * d[33] + 2 * d[1] * d[24] * d[29] * d[33] - 2 * d[3] * d[25] * d[29] * d[33] - 2 * d[7] * d[20] * d[30] * d[33] + 2 * d[8] * d[23] * d[30] * d[33] - 2 * d[2] * d[25] * d[30] * d[33] + 2 * d[5] * d[26] * d[30] * d[33] - 2 * d[8] * d[19] * d[31] * d[33] + 2 * d[7] * d[23] * d[31] * d[33] + 2 * d[5] * d[25] * d[31] * d[33] - 2 * d[1] * d[26] * d[31] * d[33] + 2 * d[8] * d[21] * d[32] * d[33] + 2 * d[7] * d[22] * d[32] * d[33] - 4 * d[6] * d[23] * d[32] * d[33] - 4 * d[5] * d[24] * d[32] * d[33] + 2 * d[4] * d[25] * d[32] * d[33] + 2 * d[3] * d[26] * d[32] * d[33] + d[2] * d[19] * std::pow(d[33], 2) + d[1] * d[20] * std::pow(d[33], 2) - 2 * d[5] * d[23] * std::pow(d[33], 2) + 2 * d[7] * d[20] * d[27] * d[34] - 2 * d[8] * d[23] * d[27] * d[34] + 2 * d[2] * d[25] * d[27] * d[34] - 2 * d[5] * d[26] * d[27] * d[34] + 2 * d[7] * d[18] * d[29] * d[34] - 2 * d[6] * d[21] * d[29] * d[34] - 2 * d[3] * d[24] * d[29] * d[34] + 2 * d[0] * d[25] * d[29] * d[34] - 2 * d[6] * d[20] * d[30] * d[34] + 2 * d[8] * d[22] * d[30] * d[34] - 2 * d[2] * d[24] * d[30] * d[34] + 2 * d[4] * d[26] * d[30] * d[34] + 2 * d[8] * d[21] * d[31] * d[34] - 4 * d[7] * d[22] * d[31] * d[34] + 2 * d[6] * d[23] * d[31] * d[34] + 2 * d[5] * d[24] * d[31] * d[34] - 4 * d[4] * d[25] * d[31] * d[34] + 2 * d[3] * d[26] * d[31] * d[34] - 2 * d[8] * d[18] * d[32] * d[34] + 2 * d[6] * d[22] * d[32] * d[34] + 2 * d[4] * d[24] * d[32] * d[34] - 2 * d[0] * d[26] * d[32] * d[34] - 2 * d[3] * d[20] * d[33] * d[34] - 2 * d[2] * d[21] * d[33] * d[34] + 2 * d[5] * d[22] * d[33] * d[34] + 2 * d[4] * d[23] * d[33] * d[34] + d[2] * d[18] * std::pow(d[34], 2) + d[0] * d[20] * std::pow(d[34], 2) - 2 * d[4] * d[22] * std::pow(d[34], 2) + 2 * d[8] * d[19] * d[27] * d[35] - 2 * d[7] * d[23] * d[27] * d[35] - 2 * d[5] * d[25] * d[27] * d[35] + 2 * d[1] * d[26] * d[27] * d[35] + 2 * d[8] * d[18] * d[28] * d[35] - 2 * d[6] * d[22] * d[28] * d[35] - 2 * d[4] * d[24] * d[28] * d[35] + 2 * d[0] * d[26] * d[28] * d[35] - 4 * d[8] * d[21] * d[30] * d[35] + 2 * d[7] * d[22] * d[30] * d[35] + 2 * d[6] * d[23] * d[30] * d[35] + 2 * d[5] * d[24] * d[30] * d[35] + 2 * d[4] * d[25] * d[30] * d[35] - 4 * d[3] * d[26] * d[30] * d[35] - 2 * d[6] * d[19] * d[31] * d[35] + 2 * d[7] * d[21] * d[31] * d[35] - 2 * d[1] * d[24] * d[31] * d[35] + 2 * d[3] * d[25] * d[31] * d[35] - 2 * d[7] * d[18] * d[32] * d[35] + 2 * d[6] * d[21] * d[32] * d[35] + 2 * d[3] * d[24] * d[32] * d[35] - 2 * d[0] * d[25] * d[32] * d[35] - 2 * d[4] * d[19] * d[33] * d[35] + 2 * d[5] * d[21] * d[33] * d[35] - 2 * d[1] * d[22] * d[33] * d[35] + 2 * d[3] * d[23] * d[33] * d[35] - 2 * d[5] * d[18] * d[34] * d[35] + 2 * d[4] * d[21] * d[34] * d[35] + 2 * d[3] * d[22] * d[34] * d[35] - 2 * d[0] * d[23] * d[34] * d[35] + d[1] * d[18] * std::pow(d[35], 2) + d[0] * d[19] * std::pow(d[35], 2) - 2 * d[3] * d[21] * std::pow(d[35], 2) - d[20] * d[27] * d[28] * d[57] - d[19] * d[27] * d[29] * d[57] - d[18] * d[28] * d[29] * d[57] + 2 * d[21] * d[29] * d[30] * d[57] + d[20] * std::pow(d[30], 2) * d[57] + 2 * d[22] * d[28] * d[31] * d[57] - 2 * d[23] * d[30] * d[31] * d[57] + d[19] * std::pow(d[31], 2) * d[57] + 2 * d[23] * d[27] * d[32] * d[57] - 2 * d[22] * d[30] * d[32] * d[57] - 2 * d[21] * d[31] * d[32] * d[57] + d[18] * std::pow(d[32], 2) * d[57];
    coeffs[149] = 2 * d[6] * d[28] * d[29] * d[33] - 2 * d[7] * d[29] * d[30] * d[33] - 2 * d[8] * d[28] * d[31] * d[33] + 2 * d[8] * d[30] * d[32] * d[33] + 2 * d[7] * d[31] * d[32] * d[33] - 2 * d[6] * std::pow(d[32], 2) * d[33] + d[2] * d[28] * std::pow(d[33], 2) + d[1] * d[29] * std::pow(d[33], 2) - 2 * d[5] * d[32] * std::pow(d[33], 2) + 2 * d[7] * d[27] * d[29] * d[34] - 2 * d[6] * d[29] * d[30] * d[34] + 2 * d[8] * d[30] * d[31] * d[34] - 2 * d[7] * std::pow(d[31], 2) * d[34] - 2 * d[8] * d[27] * d[32] * d[34] + 2 * d[6] * d[31] * d[32] * d[34] - 2 * d[3] * d[29] * d[33] * d[34] - 2 * d[2] * d[30] * d[33] * d[34] + 2 * d[5] * d[31] * d[33] * d[34] + 2 * d[4] * d[32] * d[33] * d[34] + d[2] * d[27] * std::pow(d[34], 2) + d[0] * d[29] * std::pow(d[34], 2) - 2 * d[4] * d[31] * std::pow(d[34], 2) + 2 * d[8] * d[27] * d[28] * d[35] - 2 * d[8] * std::pow(d[30], 2) * d[35] - 2 * d[6] * d[28] * d[31] * d[35] + 2 * d[7] * d[30] * d[31] * d[35] - 2 * d[7] * d[27] * d[32] * d[35] + 2 * d[6] * d[30] * d[32] * d[35] - 2 * d[4] * d[28] * d[33] * d[35] + 2 * d[5] * d[30] * d[33] * d[35] - 2 * d[1] * d[31] * d[33] * d[35] + 2 * d[3] * d[32] * d[33] * d[35] - 2 * d[5] * d[27] * d[34] * d[35] + 2 * d[4] * d[30] * d[34] * d[35] + 2 * d[3] * d[31] * d[34] * d[35] - 2 * d[0] * d[32] * d[34] * d[35] + d[1] * d[27] * std::pow(d[35], 2) + d[0] * d[28] * std::pow(d[35], 2) - 2 * d[3] * d[30] * std::pow(d[35], 2) - d[27] * d[28] * d[29] * d[57] + d[29] * std::pow(d[30], 2) * d[57] + d[28] * std::pow(d[31], 2) * d[57] - 2 * d[30] * d[31] * d[32] * d[57] + d[27] * std::pow(d[32], 2) * d[57];
    coeffs[150] = 2 * d[7] * d[11] * d[16] * d[36] - 2 * d[8] * d[14] * d[16] * d[36] + d[2] * std::pow(d[16], 2) * d[36] + 2 * d[8] * d[10] * d[17] * d[36] - 2 * d[7] * d[14] * d[17] * d[36] - 2 * d[5] * d[16] * d[17] * d[36] + d[1] * std::pow(d[17], 2) * d[36] + 2 * d[6] * d[11] * d[15] * d[37] - 2 * d[8] * d[13] * d[15] * d[37] + d[2] * std::pow(d[15], 2) * d[37] + 2 * d[8] * d[9] * d[17] * d[37] - 2 * d[6] * d[13] * d[17] * d[37] - 2 * d[4] * d[15] * d[17] * d[37] + d[0] * std::pow(d[17], 2) * d[37] + 2 * d[6] * d[10] * d[15] * d[38] - 2 * d[7] * d[12] * d[15] * d[38] + d[1] * std::pow(d[15], 2) * d[38] + 2 * d[7] * d[9] * d[16] * d[38] - 2 * d[6] * d[12] * d[16] * d[38] - 2 * d[3] * d[15] * d[16] * d[38] + d[0] * std::pow(d[16], 2) * d[38] - 2 * d[7] * d[11] * d[15] * d[39] + 2 * d[8] * d[14] * d[15] * d[39] - 2 * d[6] * d[11] * d[16] * d[39] + 2 * d[8] * d[13] * d[16] * d[39] - 2 * d[2] * d[15] * d[16] * d[39] - 4 * d[8] * d[12] * d[17] * d[39] + 2 * d[7] * d[13] * d[17] * d[39] + 2 * d[6] * d[14] * d[17] * d[39] + 2 * d[5] * d[15] * d[17] * d[39] + 2 * d[4] * d[16] * d[17] * d[39] - 2 * d[3] * std::pow(d[17], 2) * d[39] - 2 * d[8] * d[10] * d[15] * d[40] + 2 * d[7] * d[14] * d[15] * d[40] + 2 * d[8] * d[12] * d[16] * d[40] - 4 * d[7] * d[13] * d[16] * d[40] + 2 * d[6] * d[14] * d[16] * d[40] + 2 * d[5] * d[15] * d[16] * d[40] - 2 * d[4] * std::pow(d[16], 2) * d[40] - 2 * d[6] * d[10] * d[17] * d[40] + 2 * d[7] * d[12] * d[17] * d[40] - 2 * d[1] * d[15] * d[17] * d[40] + 2 * d[3] * d[16] * d[17] * d[40] + 2 * d[8] * d[12] * d[15] * d[41] + 2 * d[7] * d[13] * d[15] * d[41] - 4 * d[6] * d[14] * d[15] * d[41] - 2 * d[5] * std::pow(d[15], 2) * d[41] - 2 * d[8] * d[9] * d[16] * d[41] + 2 * d[6] * d[13] * d[16] * d[41] + 2 * d[4] * d[15] * d[16] * d[41] - 2 * d[7] * d[9] * d[17] * d[41] + 2 * d[6] * d[12] * d[17] * d[41] + 2 * d[3] * d[15] * d[17] * d[41] - 2 * d[0] * d[16] * d[17] * d[41] + 2 * d[6] * d[10] * d[11] * d[42] - 2 * d[7] * d[11] * d[12] * d[42] - 2 * d[8] * d[10] * d[13] * d[42] + 2 * d[8] * d[12] * d[14] * d[42] + 2 * d[7] * d[13] * d[14] * d[42] - 2 * d[6] * std::pow(d[14], 2) * d[42] + 2 * d[2] * d[10] * d[15] * d[42] + 2 * d[1] * d[11] * d[15] * d[42] - 4 * d[5] * d[14] * d[15] * d[42] - 2 * d[3] * d[11] * d[16] * d[42] - 2 * d[2] * d[12] * d[16] * d[42] + 2 * d[5] * d[13] * d[16] * d[42] + 2 * d[4] * d[14] * d[16] * d[42] - 2 * d[4] * d[10] * d[17] * d[42] + 2 * d[5] * d[12] * d[17] * d[42] - 2 * d[1] * d[13] * d[17] * d[42] + 2 * d[3] * d[14] * d[17] * d[42] + 2 * d[7] * d[9] * d[11] * d[43] - 2 * d[6] * d[11] * d[12] * d[43] + 2 * d[8] * d[12] * d[13] * d[43] - 2 * d[7] * std::pow(d[13], 2) * d[43] - 2 * d[8] * d[9] * d[14] * d[43] + 2 * d[6] * d[13] * d[14] * d[43] - 2 * d[3] * d[11] * d[15] * d[43] - 2 * d[2] * d[12] * d[15] * d[43] + 2 * d[5] * d[13] * d[15] * d[43] + 2 * d[4] * d[14] * d[15] * d[43] + 2 * d[2] * d[9] * d[16] * d[43] + 2 * d[0] * d[11] * d[16] * d[43] - 4 * d[4] * d[13] * d[16] * d[43] - 2 * d[5] * d[9] * d[17] * d[43] + 2 * d[4] * d[12] * d[17] * d[43] + 2 * d[3] * d[13] * d[17] * d[43] - 2 * d[0] * d[14] * d[17] * d[43] + 2 * d[8] * d[9] * d[10] * d[44] - 2 * d[8] * std::pow(d[12], 2) * d[44] - 2 * d[6] * d[10] * d[13] * d[44] + 2 * d[7] * d[12] * d[13] * d[44] - 2 * d[7] * d[9] * d[14] * d[44] + 2 * d[6] * d[12] * d[14] * d[44] - 2 * d[4] * d[10] * d[15] * d[44] + 2 * d[5] * d[12] * d[15] * d[44] - 2 * d[1] * d[13] * d[15] * d[44] + 2 * d[3] * d[14] * d[15] * d[44] - 2 * d[5] * d[9] * d[16] * d[44] + 2 * d[4] * d[12] * d[16] * d[44] + 2 * d[3] * d[13] * d[16] * d[44] - 2 * d[0] * d[14] * d[16] * d[44] + 2 * d[1] * d[9] * d[17] * d[44] + 2 * d[0] * d[10] * d[17] * d[44] - 4 * d[3] * d[12] * d[17] * d[44] - d[10] * d[11] * d[36] * d[57] + std::pow(d[14], 2) * d[36] * d[57] - d[9] * d[11] * d[37] * d[57] + std::pow(d[13], 2) * d[37] * d[57] - d[9] * d[10] * d[38] * d[57] + std::pow(d[12], 2) * d[38] * d[57] + 2 * d[11] * d[12] * d[39] * d[57] - 2 * d[13] * d[14] * d[39] * d[57] + 2 * d[10] * d[13] * d[40] * d[57] - 2 * d[12] * d[14] * d[40] * d[57] - 2 * d[12] * d[13] * d[41] * d[57] + 2 * d[9] * d[14] * d[41] * d[57];
    coeffs[151] = 2 * d[8] * d[17] * d[19] * d[36] + 2 * d[7] * d[16] * d[20] * d[36] - 2 * d[8] * d[16] * d[23] * d[36] - 2 * d[7] * d[17] * d[23] * d[36] + 2 * d[7] * d[11] * d[25] * d[36] - 2 * d[8] * d[14] * d[25] * d[36] + 2 * d[2] * d[16] * d[25] * d[36] - 2 * d[5] * d[17] * d[25] * d[36] + 2 * d[8] * d[10] * d[26] * d[36] - 2 * d[7] * d[14] * d[26] * d[36] - 2 * d[5] * d[16] * d[26] * d[36] + 2 * d[1] * d[17] * d[26] * d[36] + 2 * d[8] * d[17] * d[18] * d[37] + 2 * d[6] * d[15] * d[20] * d[37] - 2 * d[8] * d[15] * d[22] * d[37] - 2 * d[6] * d[17] * d[22] * d[37] + 2 * d[6] * d[11] * d[24] * d[37] - 2 * d[8] * d[13] * d[24] * d[37] + 2 * d[2] * d[15] * d[24] * d[37] - 2 * d[4] * d[17] * d[24] * d[37] + 2 * d[8] * d[9] * d[26] * d[37] - 2 * d[6] * d[13] * d[26] * d[37] - 2 * d[4] * d[15] * d[26] * d[37] + 2 * d[0] * d[17] * d[26] * d[37] + 2 * d[7] * d[16] * d[18] * d[38] + 2 * d[6] * d[15] * d[19] * d[38] - 2 * d[7] * d[15] * d[21] * d[38] - 2 * d[6] * d[16] * d[21] * d[38] + 2 * d[6] * d[10] * d[24] * d[38] - 2 * d[7] * d[12] * d[24] * d[38] + 2 * d[1] * d[15] * d[24] * d[38] - 2 * d[3] * d[16] * d[24] * d[38] + 2 * d[7] * d[9] * d[25] * d[38] - 2 * d[6] * d[12] * d[25] * d[38] - 2 * d[3] * d[15] * d[25] * d[38] + 2 * d[0] * d[16] * d[25] * d[38] - 2 * d[7] * d[15] * d[20] * d[39] - 2 * d[6] * d[16] * d[20] * d[39] - 4 * d[8] * d[17] * d[21] * d[39] + 2 * d[8] * d[16] * d[22] * d[39] + 2 * d[7] * d[17] * d[22] * d[39] + 2 * d[8] * d[15] * d[23] * d[39] + 2 * d[6] * d[17] * d[23] * d[39] - 2 * d[7] * d[11] * d[24] * d[39] + 2 * d[8] * d[14] * d[24] * d[39] - 2 * d[2] * d[16] * d[24] * d[39] + 2 * d[5] * d[17] * d[24] * d[39] - 2 * d[6] * d[11] * d[25] * d[39] + 2 * d[8] * d[13] * d[25] * d[39] - 2 * d[2] * d[15] * d[25] * d[39] + 2 * d[4] * d[17] * d[25] * d[39] - 4 * d[8] * d[12] * d[26] * d[39] + 2 * d[7] * d[13] * d[26] * d[39] + 2 * d[6] * d[14] * d[26] * d[39] + 2 * d[5] * d[15] * d[26] * d[39] + 2 * d[4] * d[16] * d[26] * d[39] - 4 * d[3] * d[17] * d[26] * d[39] - 2 * d[8] * d[15] * d[19] * d[40] - 2 * d[6] * d[17] * d[19] * d[40] + 2 * d[8] * d[16] * d[21] * d[40] + 2 * d[7] * d[17] * d[21] * d[40] - 4 * d[7] * d[16] * d[22] * d[40] + 2 * d[7] * d[15] * d[23] * d[40] + 2 * d[6] * d[16] * d[23] * d[40] - 2 * d[8] * d[10] * d[24] * d[40] + 2 * d[7] * d[14] * d[24] * d[40] + 2 * d[5] * d[16] * d[24] * d[40] - 2 * d[1] * d[17] * d[24] * d[40] + 2 * d[8] * d[12] * d[25] * d[40] - 4 * d[7] * d[13] * d[25] * d[40] + 2 * d[6] * d[14] * d[25] * d[40] + 2 * d[5] * d[15] * d[25] * d[40] - 4 * d[4] * d[16] * d[25] * d[40] + 2 * d[3] * d[17] * d[25] * d[40] - 2 * d[6] * d[10] * d[26] * d[40] + 2 * d[7] * d[12] * d[26] * d[40] - 2 * d[1] * d[15] * d[26] * d[40] + 2 * d[3] * d[16] * d[26] * d[40] - 2 * d[8] * d[16] * d[18] * d[41] - 2 * d[7] * d[17] * d[18] * d[41] + 2 * d[8] * d[15] * d[21] * d[41] + 2 * d[6] * d[17] * d[21] * d[41] + 2 * d[7] * d[15] * d[22] * d[41] + 2 * d[6] * d[16] * d[22] * d[41] - 4 * d[6] * d[15] * d[23] * d[41] + 2 * d[8] * d[12] * d[24] * d[41] + 2 * d[7] * d[13] * d[24] * d[41] - 4 * d[6] * d[14] * d[24] * d[41] - 4 * d[5] * d[15] * d[24] * d[41] + 2 * d[4] * d[16] * d[24] * d[41] + 2 * d[3] * d[17] * d[24] * d[41] - 2 * d[8] * d[9] * d[25] * d[41] + 2 * d[6] * d[13] * d[25] * d[41] + 2 * d[4] * d[15] * d[25] * d[41] - 2 * d[0] * d[17] * d[25] * d[41] - 2 * d[7] * d[9] * d[26] * d[41] + 2 * d[6] * d[12] * d[26] * d[41] + 2 * d[3] * d[15] * d[26] * d[41] - 2 * d[0] * d[16] * d[26] * d[41] + 2 * d[6] * d[11] * d[19] * d[42] - 2 * d[8] * d[13] * d[19] * d[42] + 2 * d[2] * d[15] * d[19] * d[42] - 2 * d[4] * d[17] * d[19] * d[42] + 2 * d[6] * d[10] * d[20] * d[42] - 2 * d[7] * d[12] * d[20] * d[42] + 2 * d[1] * d[15] * d[20] * d[42] - 2 * d[3] * d[16] * d[20] * d[42] - 2 * d[7] * d[11] * d[21] * d[42] + 2 * d[8] * d[14] * d[21] * d[42] - 2 * d[2] * d[16] * d[21] * d[42] + 2 * d[5] * d[17] * d[21] * d[42] - 2 * d[8] * d[10] * d[22] * d[42] + 2 * d[7] * d[14] * d[22] * d[42] + 2 * d[5] * d[16] * d[22] * d[42] - 2 * d[1] * d[17] * d[22] * d[42] + 2 * d[8] * d[12] * d[23] * d[42] + 2 * d[7] * d[13] * d[23] * d[42] - 4 * d[6] * d[14] * d[23] * d[42] - 4 * d[5] * d[15] * d[23] * d[42] + 2 * d[4] * d[16] * d[23] * d[42] + 2 * d[3] * d[17] * d[23] * d[42] + 2 * d[2] * d[10] * d[24] * d[42] + 2 * d[1] * d[11] * d[24] * d[42] - 4 * d[5] * d[14] * d[24] * d[42] - 2 * d[3] * d[11] * d[25] * d[42] - 2 * d[2] * d[12] * d[25] * d[42] + 2 * d[5] * d[13] * d[25] * d[42] + 2 * d[4] * d[14] * d[25] * d[42] - 2 * d[4] * d[10] * d[26] * d[42] + 2 * d[5] * d[12] * d[26] * d[42] - 2 * d[1] * d[13] * d[26] * d[42] + 2 * d[3] * d[14] * d[26] * d[42] + 2 * d[7] * d[11] * d[18] * d[43] - 2 * d[8] * d[14] * d[18] * d[43] + 2 * d[2] * d[16] * d[18] * d[43] - 2 * d[5] * d[17] * d[18] * d[43] + 2 * d[7] * d[9] * d[20] * d[43] - 2 * d[6] * d[12] * d[20] * d[43] - 2 * d[3] * d[15] * d[20] * d[43] + 2 * d[0] * d[16] * d[20] * d[43] - 2 * d[6] * d[11] * d[21] * d[43] + 2 * d[8] * d[13] * d[21] * d[43] - 2 * d[2] * d[15] * d[21] * d[43] + 2 * d[4] * d[17] * d[21] * d[43] + 2 * d[8] * d[12] * d[22] * d[43] - 4 * d[7] * d[13] * d[22] * d[43] + 2 * d[6] * d[14] * d[22] * d[43] + 2 * d[5] * d[15] * d[22] * d[43] - 4 * d[4] * d[16] * d[22] * d[43] + 2 * d[3] * d[17] * d[22] * d[43] - 2 * d[8] * d[9] * d[23] * d[43] + 2 * d[6] * d[13] * d[23] * d[43] + 2 * d[4] * d[15] * d[23] * d[43] - 2 * d[0] * d[17] * d[23] * d[43] - 2 * d[3] * d[11] * d[24] * d[43] - 2 * d[2] * d[12] * d[24] * d[43] + 2 * d[5] * d[13] * d[24] * d[43] + 2 * d[4] * d[14] * d[24] * d[43] + 2 * d[2] * d[9] * d[25] * d[43] + 2 * d[0] * d[11] * d[25] * d[43] - 4 * d[4] * d[13] * d[25] * d[43] - 2 * d[5] * d[9] * d[26] * d[43] + 2 * d[4] * d[12] * d[26] * d[43] + 2 * d[3] * d[13] * d[26] * d[43] - 2 * d[0] * d[14] * d[26] * d[43] + 2 * d[8] * d[10] * d[18] * d[44] - 2 * d[7] * d[14] * d[18] * d[44] - 2 * d[5] * d[16] * d[18] * d[44] + 2 * d[1] * d[17] * d[18] * d[44] + 2 * d[8] * d[9] * d[19] * d[44] - 2 * d[6] * d[13] * d[19] * d[44] - 2 * d[4] * d[15] * d[19] * d[44] + 2 * d[0] * d[17] * d[19] * d[44] - 4 * d[8] * d[12] * d[21] * d[44] + 2 * d[7] * d[13] * d[21] * d[44] + 2 * d[6] * d[14] * d[21] * d[44] + 2 * d[5] * d[15] * d[21] * d[44] + 2 * d[4] * d[16] * d[21] * d[44] - 4 * d[3] * d[17] * d[21] * d[44] - 2 * d[6] * d[10] * d[22] * d[44] + 2 * d[7] * d[12] * d[22] * d[44] - 2 * d[1] * d[15] * d[22] * d[44] + 2 * d[3] * d[16] * d[22] * d[44] - 2 * d[7] * d[9] * d[23] * d[44] + 2 * d[6] * d[12] * d[23] * d[44] + 2 * d[3] * d[15] * d[23] * d[44] - 2 * d[0] * d[16] * d[23] * d[44] - 2 * d[4] * d[10] * d[24] * d[44] + 2 * d[5] * d[12] * d[24] * d[44] - 2 * d[1] * d[13] * d[24] * d[44] + 2 * d[3] * d[14] * d[24] * d[44] - 2 * d[5] * d[9] * d[25] * d[44] + 2 * d[4] * d[12] * d[25] * d[44] + 2 * d[3] * d[13] * d[25] * d[44] - 2 * d[0] * d[14] * d[25] * d[44] + 2 * d[1] * d[9] * d[26] * d[44] + 2 * d[0] * d[10] * d[26] * d[44] - 4 * d[3] * d[12] * d[26] * d[44] - d[11] * d[19] * d[36] * d[57] - d[10] * d[20] * d[36] * d[57] + 2 * d[14] * d[23] * d[36] * d[57] - d[11] * d[18] * d[37] * d[57] - d[9] * d[20] * d[37] * d[57] + 2 * d[13] * d[22] * d[37] * d[57] - d[10] * d[18] * d[38] * d[57] - d[9] * d[19] * d[38] * d[57] + 2 * d[12] * d[21] * d[38] * d[57] + 2 * d[12] * d[20] * d[39] * d[57] + 2 * d[11] * d[21] * d[39] * d[57] - 2 * d[14] * d[22] * d[39] * d[57] - 2 * d[13] * d[23] * d[39] * d[57] + 2 * d[13] * d[19] * d[40] * d[57] - 2 * d[14] * d[21] * d[40] * d[57] + 2 * d[10] * d[22] * d[40] * d[57] - 2 * d[12] * d[23] * d[40] * d[57] + 2 * d[14] * d[18] * d[41] * d[57] - 2 * d[13] * d[21] * d[41] * d[57] - 2 * d[12] * d[22] * d[41] * d[57] + 2 * d[9] * d[23] * d[41] * d[57];
    coeffs[152] = 2 * d[7] * d[20] * d[25] * d[36] - 2 * d[8] * d[23] * d[25] * d[36] + d[2] * std::pow(d[25], 2) * d[36] + 2 * d[8] * d[19] * d[26] * d[36] - 2 * d[7] * d[23] * d[26] * d[36] - 2 * d[5] * d[25] * d[26] * d[36] + d[1] * std::pow(d[26], 2) * d[36] + 2 * d[6] * d[20] * d[24] * d[37] - 2 * d[8] * d[22] * d[24] * d[37] + d[2] * std::pow(d[24], 2) * d[37] + 2 * d[8] * d[18] * d[26] * d[37] - 2 * d[6] * d[22] * d[26] * d[37] - 2 * d[4] * d[24] * d[26] * d[37] + d[0] * std::pow(d[26], 2) * d[37] + 2 * d[6] * d[19] * d[24] * d[38] - 2 * d[7] * d[21] * d[24] * d[38] + d[1] * std::pow(d[24], 2) * d[38] + 2 * d[7] * d[18] * d[25] * d[38] - 2 * d[6] * d[21] * d[25] * d[38] - 2 * d[3] * d[24] * d[25] * d[38] + d[0] * std::pow(d[25], 2) * d[38] - 2 * d[7] * d[20] * d[24] * d[39] + 2 * d[8] * d[23] * d[24] * d[39] - 2 * d[6] * d[20] * d[25] * d[39] + 2 * d[8] * d[22] * d[25] * d[39] - 2 * d[2] * d[24] * d[25] * d[39] - 4 * d[8] * d[21] * d[26] * d[39] + 2 * d[7] * d[22] * d[26] * d[39] + 2 * d[6] * d[23] * d[26] * d[39] + 2 * d[5] * d[24] * d[26] * d[39] + 2 * d[4] * d[25] * d[26] * d[39] - 2 * d[3] * std::pow(d[26], 2) * d[39] - 2 * d[8] * d[19] * d[24] * d[40] + 2 * d[7] * d[23] * d[24] * d[40] + 2 * d[8] * d[21] * d[25] * d[40] - 4 * d[7] * d[22] * d[25] * d[40] + 2 * d[6] * d[23] * d[25] * d[40] + 2 * d[5] * d[24] * d[25] * d[40] - 2 * d[4] * std::pow(d[25], 2) * d[40] - 2 * d[6] * d[19] * d[26] * d[40] + 2 * d[7] * d[21] * d[26] * d[40] - 2 * d[1] * d[24] * d[26] * d[40] + 2 * d[3] * d[25] * d[26] * d[40] + 2 * d[8] * d[21] * d[24] * d[41] + 2 * d[7] * d[22] * d[24] * d[41] - 4 * d[6] * d[23] * d[24] * d[41] - 2 * d[5] * std::pow(d[24], 2) * d[41] - 2 * d[8] * d[18] * d[25] * d[41] + 2 * d[6] * d[22] * d[25] * d[41] + 2 * d[4] * d[24] * d[25] * d[41] - 2 * d[7] * d[18] * d[26] * d[41] + 2 * d[6] * d[21] * d[26] * d[41] + 2 * d[3] * d[24] * d[26] * d[41] - 2 * d[0] * d[25] * d[26] * d[41] + 2 * d[6] * d[19] * d[20] * d[42] - 2 * d[7] * d[20] * d[21] * d[42] - 2 * d[8] * d[19] * d[22] * d[42] + 2 * d[8] * d[21] * d[23] * d[42] + 2 * d[7] * d[22] * d[23] * d[42] - 2 * d[6] * std::pow(d[23], 2) * d[42] + 2 * d[2] * d[19] * d[24] * d[42] + 2 * d[1] * d[20] * d[24] * d[42] - 4 * d[5] * d[23] * d[24] * d[42] - 2 * d[3] * d[20] * d[25] * d[42] - 2 * d[2] * d[21] * d[25] * d[42] + 2 * d[5] * d[22] * d[25] * d[42] + 2 * d[4] * d[23] * d[25] * d[42] - 2 * d[4] * d[19] * d[26] * d[42] + 2 * d[5] * d[21] * d[26] * d[42] - 2 * d[1] * d[22] * d[26] * d[42] + 2 * d[3] * d[23] * d[26] * d[42] + 2 * d[7] * d[18] * d[20] * d[43] - 2 * d[6] * d[20] * d[21] * d[43] + 2 * d[8] * d[21] * d[22] * d[43] - 2 * d[7] * std::pow(d[22], 2) * d[43] - 2 * d[8] * d[18] * d[23] * d[43] + 2 * d[6] * d[22] * d[23] * d[43] - 2 * d[3] * d[20] * d[24] * d[43] - 2 * d[2] * d[21] * d[24] * d[43] + 2 * d[5] * d[22] * d[24] * d[43] + 2 * d[4] * d[23] * d[24] * d[43] + 2 * d[2] * d[18] * d[25] * d[43] + 2 * d[0] * d[20] * d[25] * d[43] - 4 * d[4] * d[22] * d[25] * d[43] - 2 * d[5] * d[18] * d[26] * d[43] + 2 * d[4] * d[21] * d[26] * d[43] + 2 * d[3] * d[22] * d[26] * d[43] - 2 * d[0] * d[23] * d[26] * d[43] + 2 * d[8] * d[18] * d[19] * d[44] - 2 * d[8] * std::pow(d[21], 2) * d[44] - 2 * d[6] * d[19] * d[22] * d[44] + 2 * d[7] * d[21] * d[22] * d[44] - 2 * d[7] * d[18] * d[23] * d[44] + 2 * d[6] * d[21] * d[23] * d[44] - 2 * d[4] * d[19] * d[24] * d[44] + 2 * d[5] * d[21] * d[24] * d[44] - 2 * d[1] * d[22] * d[24] * d[44] + 2 * d[3] * d[23] * d[24] * d[44] - 2 * d[5] * d[18] * d[25] * d[44] + 2 * d[4] * d[21] * d[25] * d[44] + 2 * d[3] * d[22] * d[25] * d[44] - 2 * d[0] * d[23] * d[25] * d[44] + 2 * d[1] * d[18] * d[26] * d[44] + 2 * d[0] * d[19] * d[26] * d[44] - 4 * d[3] * d[21] * d[26] * d[44] - d[19] * d[20] * d[36] * d[57] + std::pow(d[23], 2) * d[36] * d[57] - d[18] * d[20] * d[37] * d[57] + std::pow(d[22], 2) * d[37] * d[57] - d[18] * d[19] * d[38] * d[57] + std::pow(d[21], 2) * d[38] * d[57] + 2 * d[20] * d[21] * d[39] * d[57] - 2 * d[22] * d[23] * d[39] * d[57] + 2 * d[19] * d[22] * d[40] * d[57] - 2 * d[21] * d[23] * d[40] * d[57] - 2 * d[21] * d[22] * d[41] * d[57] + 2 * d[18] * d[23] * d[41] * d[57];
    coeffs[153] = 2 * d[8] * d[17] * d[28] * d[36] + 2 * d[7] * d[16] * d[29] * d[36] - 2 * d[8] * d[16] * d[32] * d[36] - 2 * d[7] * d[17] * d[32] * d[36] + 2 * d[7] * d[11] * d[34] * d[36] - 2 * d[8] * d[14] * d[34] * d[36] + 2 * d[2] * d[16] * d[34] * d[36] - 2 * d[5] * d[17] * d[34] * d[36] + 2 * d[8] * d[10] * d[35] * d[36] - 2 * d[7] * d[14] * d[35] * d[36] - 2 * d[5] * d[16] * d[35] * d[36] + 2 * d[1] * d[17] * d[35] * d[36] + 2 * d[8] * d[17] * d[27] * d[37] + 2 * d[6] * d[15] * d[29] * d[37] - 2 * d[8] * d[15] * d[31] * d[37] - 2 * d[6] * d[17] * d[31] * d[37] + 2 * d[6] * d[11] * d[33] * d[37] - 2 * d[8] * d[13] * d[33] * d[37] + 2 * d[2] * d[15] * d[33] * d[37] - 2 * d[4] * d[17] * d[33] * d[37] + 2 * d[8] * d[9] * d[35] * d[37] - 2 * d[6] * d[13] * d[35] * d[37] - 2 * d[4] * d[15] * d[35] * d[37] + 2 * d[0] * d[17] * d[35] * d[37] + 2 * d[7] * d[16] * d[27] * d[38] + 2 * d[6] * d[15] * d[28] * d[38] - 2 * d[7] * d[15] * d[30] * d[38] - 2 * d[6] * d[16] * d[30] * d[38] + 2 * d[6] * d[10] * d[33] * d[38] - 2 * d[7] * d[12] * d[33] * d[38] + 2 * d[1] * d[15] * d[33] * d[38] - 2 * d[3] * d[16] * d[33] * d[38] + 2 * d[7] * d[9] * d[34] * d[38] - 2 * d[6] * d[12] * d[34] * d[38] - 2 * d[3] * d[15] * d[34] * d[38] + 2 * d[0] * d[16] * d[34] * d[38] - 2 * d[7] * d[15] * d[29] * d[39] - 2 * d[6] * d[16] * d[29] * d[39] - 4 * d[8] * d[17] * d[30] * d[39] + 2 * d[8] * d[16] * d[31] * d[39] + 2 * d[7] * d[17] * d[31] * d[39] + 2 * d[8] * d[15] * d[32] * d[39] + 2 * d[6] * d[17] * d[32] * d[39] - 2 * d[7] * d[11] * d[33] * d[39] + 2 * d[8] * d[14] * d[33] * d[39] - 2 * d[2] * d[16] * d[33] * d[39] + 2 * d[5] * d[17] * d[33] * d[39] - 2 * d[6] * d[11] * d[34] * d[39] + 2 * d[8] * d[13] * d[34] * d[39] - 2 * d[2] * d[15] * d[34] * d[39] + 2 * d[4] * d[17] * d[34] * d[39] - 4 * d[8] * d[12] * d[35] * d[39] + 2 * d[7] * d[13] * d[35] * d[39] + 2 * d[6] * d[14] * d[35] * d[39] + 2 * d[5] * d[15] * d[35] * d[39] + 2 * d[4] * d[16] * d[35] * d[39] - 4 * d[3] * d[17] * d[35] * d[39] - 2 * d[8] * d[15] * d[28] * d[40] - 2 * d[6] * d[17] * d[28] * d[40] + 2 * d[8] * d[16] * d[30] * d[40] + 2 * d[7] * d[17] * d[30] * d[40] - 4 * d[7] * d[16] * d[31] * d[40] + 2 * d[7] * d[15] * d[32] * d[40] + 2 * d[6] * d[16] * d[32] * d[40] - 2 * d[8] * d[10] * d[33] * d[40] + 2 * d[7] * d[14] * d[33] * d[40] + 2 * d[5] * d[16] * d[33] * d[40] - 2 * d[1] * d[17] * d[33] * d[40] + 2 * d[8] * d[12] * d[34] * d[40] - 4 * d[7] * d[13] * d[34] * d[40] + 2 * d[6] * d[14] * d[34] * d[40] + 2 * d[5] * d[15] * d[34] * d[40] - 4 * d[4] * d[16] * d[34] * d[40] + 2 * d[3] * d[17] * d[34] * d[40] - 2 * d[6] * d[10] * d[35] * d[40] + 2 * d[7] * d[12] * d[35] * d[40] - 2 * d[1] * d[15] * d[35] * d[40] + 2 * d[3] * d[16] * d[35] * d[40] - 2 * d[8] * d[16] * d[27] * d[41] - 2 * d[7] * d[17] * d[27] * d[41] + 2 * d[8] * d[15] * d[30] * d[41] + 2 * d[6] * d[17] * d[30] * d[41] + 2 * d[7] * d[15] * d[31] * d[41] + 2 * d[6] * d[16] * d[31] * d[41] - 4 * d[6] * d[15] * d[32] * d[41] + 2 * d[8] * d[12] * d[33] * d[41] + 2 * d[7] * d[13] * d[33] * d[41] - 4 * d[6] * d[14] * d[33] * d[41] - 4 * d[5] * d[15] * d[33] * d[41] + 2 * d[4] * d[16] * d[33] * d[41] + 2 * d[3] * d[17] * d[33] * d[41] - 2 * d[8] * d[9] * d[34] * d[41] + 2 * d[6] * d[13] * d[34] * d[41] + 2 * d[4] * d[15] * d[34] * d[41] - 2 * d[0] * d[17] * d[34] * d[41] - 2 * d[7] * d[9] * d[35] * d[41] + 2 * d[6] * d[12] * d[35] * d[41] + 2 * d[3] * d[15] * d[35] * d[41] - 2 * d[0] * d[16] * d[35] * d[41] + 2 * d[6] * d[11] * d[28] * d[42] - 2 * d[8] * d[13] * d[28] * d[42] + 2 * d[2] * d[15] * d[28] * d[42] - 2 * d[4] * d[17] * d[28] * d[42] + 2 * d[6] * d[10] * d[29] * d[42] - 2 * d[7] * d[12] * d[29] * d[42] + 2 * d[1] * d[15] * d[29] * d[42] - 2 * d[3] * d[16] * d[29] * d[42] - 2 * d[7] * d[11] * d[30] * d[42] + 2 * d[8] * d[14] * d[30] * d[42] - 2 * d[2] * d[16] * d[30] * d[42] + 2 * d[5] * d[17] * d[30] * d[42] - 2 * d[8] * d[10] * d[31] * d[42] + 2 * d[7] * d[14] * d[31] * d[42] + 2 * d[5] * d[16] * d[31] * d[42] - 2 * d[1] * d[17] * d[31] * d[42] + 2 * d[8] * d[12] * d[32] * d[42] + 2 * d[7] * d[13] * d[32] * d[42] - 4 * d[6] * d[14] * d[32] * d[42] - 4 * d[5] * d[15] * d[32] * d[42] + 2 * d[4] * d[16] * d[32] * d[42] + 2 * d[3] * d[17] * d[32] * d[42] + 2 * d[2] * d[10] * d[33] * d[42] + 2 * d[1] * d[11] * d[33] * d[42] - 4 * d[5] * d[14] * d[33] * d[42] - 2 * d[3] * d[11] * d[34] * d[42] - 2 * d[2] * d[12] * d[34] * d[42] + 2 * d[5] * d[13] * d[34] * d[42] + 2 * d[4] * d[14] * d[34] * d[42] - 2 * d[4] * d[10] * d[35] * d[42] + 2 * d[5] * d[12] * d[35] * d[42] - 2 * d[1] * d[13] * d[35] * d[42] + 2 * d[3] * d[14] * d[35] * d[42] + 2 * d[7] * d[11] * d[27] * d[43] - 2 * d[8] * d[14] * d[27] * d[43] + 2 * d[2] * d[16] * d[27] * d[43] - 2 * d[5] * d[17] * d[27] * d[43] + 2 * d[7] * d[9] * d[29] * d[43] - 2 * d[6] * d[12] * d[29] * d[43] - 2 * d[3] * d[15] * d[29] * d[43] + 2 * d[0] * d[16] * d[29] * d[43] - 2 * d[6] * d[11] * d[30] * d[43] + 2 * d[8] * d[13] * d[30] * d[43] - 2 * d[2] * d[15] * d[30] * d[43] + 2 * d[4] * d[17] * d[30] * d[43] + 2 * d[8] * d[12] * d[31] * d[43] - 4 * d[7] * d[13] * d[31] * d[43] + 2 * d[6] * d[14] * d[31] * d[43] + 2 * d[5] * d[15] * d[31] * d[43] - 4 * d[4] * d[16] * d[31] * d[43] + 2 * d[3] * d[17] * d[31] * d[43] - 2 * d[8] * d[9] * d[32] * d[43] + 2 * d[6] * d[13] * d[32] * d[43] + 2 * d[4] * d[15] * d[32] * d[43] - 2 * d[0] * d[17] * d[32] * d[43] - 2 * d[3] * d[11] * d[33] * d[43] - 2 * d[2] * d[12] * d[33] * d[43] + 2 * d[5] * d[13] * d[33] * d[43] + 2 * d[4] * d[14] * d[33] * d[43] + 2 * d[2] * d[9] * d[34] * d[43] + 2 * d[0] * d[11] * d[34] * d[43] - 4 * d[4] * d[13] * d[34] * d[43] - 2 * d[5] * d[9] * d[35] * d[43] + 2 * d[4] * d[12] * d[35] * d[43] + 2 * d[3] * d[13] * d[35] * d[43] - 2 * d[0] * d[14] * d[35] * d[43] + 2 * d[8] * d[10] * d[27] * d[44] - 2 * d[7] * d[14] * d[27] * d[44] - 2 * d[5] * d[16] * d[27] * d[44] + 2 * d[1] * d[17] * d[27] * d[44] + 2 * d[8] * d[9] * d[28] * d[44] - 2 * d[6] * d[13] * d[28] * d[44] - 2 * d[4] * d[15] * d[28] * d[44] + 2 * d[0] * d[17] * d[28] * d[44] - 4 * d[8] * d[12] * d[30] * d[44] + 2 * d[7] * d[13] * d[30] * d[44] + 2 * d[6] * d[14] * d[30] * d[44] + 2 * d[5] * d[15] * d[30] * d[44] + 2 * d[4] * d[16] * d[30] * d[44] - 4 * d[3] * d[17] * d[30] * d[44] - 2 * d[6] * d[10] * d[31] * d[44] + 2 * d[7] * d[12] * d[31] * d[44] - 2 * d[1] * d[15] * d[31] * d[44] + 2 * d[3] * d[16] * d[31] * d[44] - 2 * d[7] * d[9] * d[32] * d[44] + 2 * d[6] * d[12] * d[32] * d[44] + 2 * d[3] * d[15] * d[32] * d[44] - 2 * d[0] * d[16] * d[32] * d[44] - 2 * d[4] * d[10] * d[33] * d[44] + 2 * d[5] * d[12] * d[33] * d[44] - 2 * d[1] * d[13] * d[33] * d[44] + 2 * d[3] * d[14] * d[33] * d[44] - 2 * d[5] * d[9] * d[34] * d[44] + 2 * d[4] * d[12] * d[34] * d[44] + 2 * d[3] * d[13] * d[34] * d[44] - 2 * d[0] * d[14] * d[34] * d[44] + 2 * d[1] * d[9] * d[35] * d[44] + 2 * d[0] * d[10] * d[35] * d[44] - 4 * d[3] * d[12] * d[35] * d[44] - d[11] * d[28] * d[36] * d[57] - d[10] * d[29] * d[36] * d[57] + 2 * d[14] * d[32] * d[36] * d[57] - d[11] * d[27] * d[37] * d[57] - d[9] * d[29] * d[37] * d[57] + 2 * d[13] * d[31] * d[37] * d[57] - d[10] * d[27] * d[38] * d[57] - d[9] * d[28] * d[38] * d[57] + 2 * d[12] * d[30] * d[38] * d[57] + 2 * d[12] * d[29] * d[39] * d[57] + 2 * d[11] * d[30] * d[39] * d[57] - 2 * d[14] * d[31] * d[39] * d[57] - 2 * d[13] * d[32] * d[39] * d[57] + 2 * d[13] * d[28] * d[40] * d[57] - 2 * d[14] * d[30] * d[40] * d[57] + 2 * d[10] * d[31] * d[40] * d[57] - 2 * d[12] * d[32] * d[40] * d[57] + 2 * d[14] * d[27] * d[41] * d[57] - 2 * d[13] * d[30] * d[41] * d[57] - 2 * d[12] * d[31] * d[41] * d[57] + 2 * d[9] * d[32] * d[41] * d[57];
    coeffs[154] = 2 * d[8] * d[26] * d[28] * d[36] + 2 * d[7] * d[25] * d[29] * d[36] - 2 * d[8] * d[25] * d[32] * d[36] - 2 * d[7] * d[26] * d[32] * d[36] + 2 * d[7] * d[20] * d[34] * d[36] - 2 * d[8] * d[23] * d[34] * d[36] + 2 * d[2] * d[25] * d[34] * d[36] - 2 * d[5] * d[26] * d[34] * d[36] + 2 * d[8] * d[19] * d[35] * d[36] - 2 * d[7] * d[23] * d[35] * d[36] - 2 * d[5] * d[25] * d[35] * d[36] + 2 * d[1] * d[26] * d[35] * d[36] + 2 * d[8] * d[26] * d[27] * d[37] + 2 * d[6] * d[24] * d[29] * d[37] - 2 * d[8] * d[24] * d[31] * d[37] - 2 * d[6] * d[26] * d[31] * d[37] + 2 * d[6] * d[20] * d[33] * d[37] - 2 * d[8] * d[22] * d[33] * d[37] + 2 * d[2] * d[24] * d[33] * d[37] - 2 * d[4] * d[26] * d[33] * d[37] + 2 * d[8] * d[18] * d[35] * d[37] - 2 * d[6] * d[22] * d[35] * d[37] - 2 * d[4] * d[24] * d[35] * d[37] + 2 * d[0] * d[26] * d[35] * d[37] + 2 * d[7] * d[25] * d[27] * d[38] + 2 * d[6] * d[24] * d[28] * d[38] - 2 * d[7] * d[24] * d[30] * d[38] - 2 * d[6] * d[25] * d[30] * d[38] + 2 * d[6] * d[19] * d[33] * d[38] - 2 * d[7] * d[21] * d[33] * d[38] + 2 * d[1] * d[24] * d[33] * d[38] - 2 * d[3] * d[25] * d[33] * d[38] + 2 * d[7] * d[18] * d[34] * d[38] - 2 * d[6] * d[21] * d[34] * d[38] - 2 * d[3] * d[24] * d[34] * d[38] + 2 * d[0] * d[25] * d[34] * d[38] - 2 * d[7] * d[24] * d[29] * d[39] - 2 * d[6] * d[25] * d[29] * d[39] - 4 * d[8] * d[26] * d[30] * d[39] + 2 * d[8] * d[25] * d[31] * d[39] + 2 * d[7] * d[26] * d[31] * d[39] + 2 * d[8] * d[24] * d[32] * d[39] + 2 * d[6] * d[26] * d[32] * d[39] - 2 * d[7] * d[20] * d[33] * d[39] + 2 * d[8] * d[23] * d[33] * d[39] - 2 * d[2] * d[25] * d[33] * d[39] + 2 * d[5] * d[26] * d[33] * d[39] - 2 * d[6] * d[20] * d[34] * d[39] + 2 * d[8] * d[22] * d[34] * d[39] - 2 * d[2] * d[24] * d[34] * d[39] + 2 * d[4] * d[26] * d[34] * d[39] - 4 * d[8] * d[21] * d[35] * d[39] + 2 * d[7] * d[22] * d[35] * d[39] + 2 * d[6] * d[23] * d[35] * d[39] + 2 * d[5] * d[24] * d[35] * d[39] + 2 * d[4] * d[25] * d[35] * d[39] - 4 * d[3] * d[26] * d[35] * d[39] - 2 * d[8] * d[24] * d[28] * d[40] - 2 * d[6] * d[26] * d[28] * d[40] + 2 * d[8] * d[25] * d[30] * d[40] + 2 * d[7] * d[26] * d[30] * d[40] - 4 * d[7] * d[25] * d[31] * d[40] + 2 * d[7] * d[24] * d[32] * d[40] + 2 * d[6] * d[25] * d[32] * d[40] - 2 * d[8] * d[19] * d[33] * d[40] + 2 * d[7] * d[23] * d[33] * d[40] + 2 * d[5] * d[25] * d[33] * d[40] - 2 * d[1] * d[26] * d[33] * d[40] + 2 * d[8] * d[21] * d[34] * d[40] - 4 * d[7] * d[22] * d[34] * d[40] + 2 * d[6] * d[23] * d[34] * d[40] + 2 * d[5] * d[24] * d[34] * d[40] - 4 * d[4] * d[25] * d[34] * d[40] + 2 * d[3] * d[26] * d[34] * d[40] - 2 * d[6] * d[19] * d[35] * d[40] + 2 * d[7] * d[21] * d[35] * d[40] - 2 * d[1] * d[24] * d[35] * d[40] + 2 * d[3] * d[25] * d[35] * d[40] - 2 * d[8] * d[25] * d[27] * d[41] - 2 * d[7] * d[26] * d[27] * d[41] + 2 * d[8] * d[24] * d[30] * d[41] + 2 * d[6] * d[26] * d[30] * d[41] + 2 * d[7] * d[24] * d[31] * d[41] + 2 * d[6] * d[25] * d[31] * d[41] - 4 * d[6] * d[24] * d[32] * d[41] + 2 * d[8] * d[21] * d[33] * d[41] + 2 * d[7] * d[22] * d[33] * d[41] - 4 * d[6] * d[23] * d[33] * d[41] - 4 * d[5] * d[24] * d[33] * d[41] + 2 * d[4] * d[25] * d[33] * d[41] + 2 * d[3] * d[26] * d[33] * d[41] - 2 * d[8] * d[18] * d[34] * d[41] + 2 * d[6] * d[22] * d[34] * d[41] + 2 * d[4] * d[24] * d[34] * d[41] - 2 * d[0] * d[26] * d[34] * d[41] - 2 * d[7] * d[18] * d[35] * d[41] + 2 * d[6] * d[21] * d[35] * d[41] + 2 * d[3] * d[24] * d[35] * d[41] - 2 * d[0] * d[25] * d[35] * d[41] + 2 * d[6] * d[20] * d[28] * d[42] - 2 * d[8] * d[22] * d[28] * d[42] + 2 * d[2] * d[24] * d[28] * d[42] - 2 * d[4] * d[26] * d[28] * d[42] + 2 * d[6] * d[19] * d[29] * d[42] - 2 * d[7] * d[21] * d[29] * d[42] + 2 * d[1] * d[24] * d[29] * d[42] - 2 * d[3] * d[25] * d[29] * d[42] - 2 * d[7] * d[20] * d[30] * d[42] + 2 * d[8] * d[23] * d[30] * d[42] - 2 * d[2] * d[25] * d[30] * d[42] + 2 * d[5] * d[26] * d[30] * d[42] - 2 * d[8] * d[19] * d[31] * d[42] + 2 * d[7] * d[23] * d[31] * d[42] + 2 * d[5] * d[25] * d[31] * d[42] - 2 * d[1] * d[26] * d[31] * d[42] + 2 * d[8] * d[21] * d[32] * d[42] + 2 * d[7] * d[22] * d[32] * d[42] - 4 * d[6] * d[23] * d[32] * d[42] - 4 * d[5] * d[24] * d[32] * d[42] + 2 * d[4] * d[25] * d[32] * d[42] + 2 * d[3] * d[26] * d[32] * d[42] + 2 * d[2] * d[19] * d[33] * d[42] + 2 * d[1] * d[20] * d[33] * d[42] - 4 * d[5] * d[23] * d[33] * d[42] - 2 * d[3] * d[20] * d[34] * d[42] - 2 * d[2] * d[21] * d[34] * d[42] + 2 * d[5] * d[22] * d[34] * d[42] + 2 * d[4] * d[23] * d[34] * d[42] - 2 * d[4] * d[19] * d[35] * d[42] + 2 * d[5] * d[21] * d[35] * d[42] - 2 * d[1] * d[22] * d[35] * d[42] + 2 * d[3] * d[23] * d[35] * d[42] + 2 * d[7] * d[20] * d[27] * d[43] - 2 * d[8] * d[23] * d[27] * d[43] + 2 * d[2] * d[25] * d[27] * d[43] - 2 * d[5] * d[26] * d[27] * d[43] + 2 * d[7] * d[18] * d[29] * d[43] - 2 * d[6] * d[21] * d[29] * d[43] - 2 * d[3] * d[24] * d[29] * d[43] + 2 * d[0] * d[25] * d[29] * d[43] - 2 * d[6] * d[20] * d[30] * d[43] + 2 * d[8] * d[22] * d[30] * d[43] - 2 * d[2] * d[24] * d[30] * d[43] + 2 * d[4] * d[26] * d[30] * d[43] + 2 * d[8] * d[21] * d[31] * d[43] - 4 * d[7] * d[22] * d[31] * d[43] + 2 * d[6] * d[23] * d[31] * d[43] + 2 * d[5] * d[24] * d[31] * d[43] - 4 * d[4] * d[25] * d[31] * d[43] + 2 * d[3] * d[26] * d[31] * d[43] - 2 * d[8] * d[18] * d[32] * d[43] + 2 * d[6] * d[22] * d[32] * d[43] + 2 * d[4] * d[24] * d[32] * d[43] - 2 * d[0] * d[26] * d[32] * d[43] - 2 * d[3] * d[20] * d[33] * d[43] - 2 * d[2] * d[21] * d[33] * d[43] + 2 * d[5] * d[22] * d[33] * d[43] + 2 * d[4] * d[23] * d[33] * d[43] + 2 * d[2] * d[18] * d[34] * d[43] + 2 * d[0] * d[20] * d[34] * d[43] - 4 * d[4] * d[22] * d[34] * d[43] - 2 * d[5] * d[18] * d[35] * d[43] + 2 * d[4] * d[21] * d[35] * d[43] + 2 * d[3] * d[22] * d[35] * d[43] - 2 * d[0] * d[23] * d[35] * d[43] + 2 * d[8] * d[19] * d[27] * d[44] - 2 * d[7] * d[23] * d[27] * d[44] - 2 * d[5] * d[25] * d[27] * d[44] + 2 * d[1] * d[26] * d[27] * d[44] + 2 * d[8] * d[18] * d[28] * d[44] - 2 * d[6] * d[22] * d[28] * d[44] - 2 * d[4] * d[24] * d[28] * d[44] + 2 * d[0] * d[26] * d[28] * d[44] - 4 * d[8] * d[21] * d[30] * d[44] + 2 * d[7] * d[22] * d[30] * d[44] + 2 * d[6] * d[23] * d[30] * d[44] + 2 * d[5] * d[24] * d[30] * d[44] + 2 * d[4] * d[25] * d[30] * d[44] - 4 * d[3] * d[26] * d[30] * d[44] - 2 * d[6] * d[19] * d[31] * d[44] + 2 * d[7] * d[21] * d[31] * d[44] - 2 * d[1] * d[24] * d[31] * d[44] + 2 * d[3] * d[25] * d[31] * d[44] - 2 * d[7] * d[18] * d[32] * d[44] + 2 * d[6] * d[21] * d[32] * d[44] + 2 * d[3] * d[24] * d[32] * d[44] - 2 * d[0] * d[25] * d[32] * d[44] - 2 * d[4] * d[19] * d[33] * d[44] + 2 * d[5] * d[21] * d[33] * d[44] - 2 * d[1] * d[22] * d[33] * d[44] + 2 * d[3] * d[23] * d[33] * d[44] - 2 * d[5] * d[18] * d[34] * d[44] + 2 * d[4] * d[21] * d[34] * d[44] + 2 * d[3] * d[22] * d[34] * d[44] - 2 * d[0] * d[23] * d[34] * d[44] + 2 * d[1] * d[18] * d[35] * d[44] + 2 * d[0] * d[19] * d[35] * d[44] - 4 * d[3] * d[21] * d[35] * d[44] - d[20] * d[28] * d[36] * d[57] - d[19] * d[29] * d[36] * d[57] + 2 * d[23] * d[32] * d[36] * d[57] - d[20] * d[27] * d[37] * d[57] - d[18] * d[29] * d[37] * d[57] + 2 * d[22] * d[31] * d[37] * d[57] - d[19] * d[27] * d[38] * d[57] - d[18] * d[28] * d[38] * d[57] + 2 * d[21] * d[30] * d[38] * d[57] + 2 * d[21] * d[29] * d[39] * d[57] + 2 * d[20] * d[30] * d[39] * d[57] - 2 * d[23] * d[31] * d[39] * d[57] - 2 * d[22] * d[32] * d[39] * d[57] + 2 * d[22] * d[28] * d[40] * d[57] - 2 * d[23] * d[30] * d[40] * d[57] + 2 * d[19] * d[31] * d[40] * d[57] - 2 * d[21] * d[32] * d[40] * d[57] + 2 * d[23] * d[27] * d[41] * d[57] - 2 * d[22] * d[30] * d[41] * d[57] - 2 * d[21] * d[31] * d[41] * d[57] + 2 * d[18] * d[32] * d[41] * d[57];
    coeffs[155] = 2 * d[7] * d[29] * d[34] * d[36] - 2 * d[8] * d[32] * d[34] * d[36] + d[2] * std::pow(d[34], 2) * d[36] + 2 * d[8] * d[28] * d[35] * d[36] - 2 * d[7] * d[32] * d[35] * d[36] - 2 * d[5] * d[34] * d[35] * d[36] + d[1] * std::pow(d[35], 2) * d[36] + 2 * d[6] * d[29] * d[33] * d[37] - 2 * d[8] * d[31] * d[33] * d[37] + d[2] * std::pow(d[33], 2) * d[37] + 2 * d[8] * d[27] * d[35] * d[37] - 2 * d[6] * d[31] * d[35] * d[37] - 2 * d[4] * d[33] * d[35] * d[37] + d[0] * std::pow(d[35], 2) * d[37] + 2 * d[6] * d[28] * d[33] * d[38] - 2 * d[7] * d[30] * d[33] * d[38] + d[1] * std::pow(d[33], 2) * d[38] + 2 * d[7] * d[27] * d[34] * d[38] - 2 * d[6] * d[30] * d[34] * d[38] - 2 * d[3] * d[33] * d[34] * d[38] + d[0] * std::pow(d[34], 2) * d[38] - 2 * d[7] * d[29] * d[33] * d[39] + 2 * d[8] * d[32] * d[33] * d[39] - 2 * d[6] * d[29] * d[34] * d[39] + 2 * d[8] * d[31] * d[34] * d[39] - 2 * d[2] * d[33] * d[34] * d[39] - 4 * d[8] * d[30] * d[35] * d[39] + 2 * d[7] * d[31] * d[35] * d[39] + 2 * d[6] * d[32] * d[35] * d[39] + 2 * d[5] * d[33] * d[35] * d[39] + 2 * d[4] * d[34] * d[35] * d[39] - 2 * d[3] * std::pow(d[35], 2) * d[39] - 2 * d[8] * d[28] * d[33] * d[40] + 2 * d[7] * d[32] * d[33] * d[40] + 2 * d[8] * d[30] * d[34] * d[40] - 4 * d[7] * d[31] * d[34] * d[40] + 2 * d[6] * d[32] * d[34] * d[40] + 2 * d[5] * d[33] * d[34] * d[40] - 2 * d[4] * std::pow(d[34], 2) * d[40] - 2 * d[6] * d[28] * d[35] * d[40] + 2 * d[7] * d[30] * d[35] * d[40] - 2 * d[1] * d[33] * d[35] * d[40] + 2 * d[3] * d[34] * d[35] * d[40] + 2 * d[8] * d[30] * d[33] * d[41] + 2 * d[7] * d[31] * d[33] * d[41] - 4 * d[6] * d[32] * d[33] * d[41] - 2 * d[5] * std::pow(d[33], 2) * d[41] - 2 * d[8] * d[27] * d[34] * d[41] + 2 * d[6] * d[31] * d[34] * d[41] + 2 * d[4] * d[33] * d[34] * d[41] - 2 * d[7] * d[27] * d[35] * d[41] + 2 * d[6] * d[30] * d[35] * d[41] + 2 * d[3] * d[33] * d[35] * d[41] - 2 * d[0] * d[34] * d[35] * d[41] + 2 * d[6] * d[28] * d[29] * d[42] - 2 * d[7] * d[29] * d[30] * d[42] - 2 * d[8] * d[28] * d[31] * d[42] + 2 * d[8] * d[30] * d[32] * d[42] + 2 * d[7] * d[31] * d[32] * d[42] - 2 * d[6] * std::pow(d[32], 2) * d[42] + 2 * d[2] * d[28] * d[33] * d[42] + 2 * d[1] * d[29] * d[33] * d[42] - 4 * d[5] * d[32] * d[33] * d[42] - 2 * d[3] * d[29] * d[34] * d[42] - 2 * d[2] * d[30] * d[34] * d[42] + 2 * d[5] * d[31] * d[34] * d[42] + 2 * d[4] * d[32] * d[34] * d[42] - 2 * d[4] * d[28] * d[35] * d[42] + 2 * d[5] * d[30] * d[35] * d[42] - 2 * d[1] * d[31] * d[35] * d[42] + 2 * d[3] * d[32] * d[35] * d[42] + 2 * d[7] * d[27] * d[29] * d[43] - 2 * d[6] * d[29] * d[30] * d[43] + 2 * d[8] * d[30] * d[31] * d[43] - 2 * d[7] * std::pow(d[31], 2) * d[43] - 2 * d[8] * d[27] * d[32] * d[43] + 2 * d[6] * d[31] * d[32] * d[43] - 2 * d[3] * d[29] * d[33] * d[43] - 2 * d[2] * d[30] * d[33] * d[43] + 2 * d[5] * d[31] * d[33] * d[43] + 2 * d[4] * d[32] * d[33] * d[43] + 2 * d[2] * d[27] * d[34] * d[43] + 2 * d[0] * d[29] * d[34] * d[43] - 4 * d[4] * d[31] * d[34] * d[43] - 2 * d[5] * d[27] * d[35] * d[43] + 2 * d[4] * d[30] * d[35] * d[43] + 2 * d[3] * d[31] * d[35] * d[43] - 2 * d[0] * d[32] * d[35] * d[43] + 2 * d[8] * d[27] * d[28] * d[44] - 2 * d[8] * std::pow(d[30], 2) * d[44] - 2 * d[6] * d[28] * d[31] * d[44] + 2 * d[7] * d[30] * d[31] * d[44] - 2 * d[7] * d[27] * d[32] * d[44] + 2 * d[6] * d[30] * d[32] * d[44] - 2 * d[4] * d[28] * d[33] * d[44] + 2 * d[5] * d[30] * d[33] * d[44] - 2 * d[1] * d[31] * d[33] * d[44] + 2 * d[3] * d[32] * d[33] * d[44] - 2 * d[5] * d[27] * d[34] * d[44] + 2 * d[4] * d[30] * d[34] * d[44] + 2 * d[3] * d[31] * d[34] * d[44] - 2 * d[0] * d[32] * d[34] * d[44] + 2 * d[1] * d[27] * d[35] * d[44] + 2 * d[0] * d[28] * d[35] * d[44] - 4 * d[3] * d[30] * d[35] * d[44] - d[28] * d[29] * d[36] * d[57] + std::pow(d[32], 2) * d[36] * d[57] - d[27] * d[29] * d[37] * d[57] + std::pow(d[31], 2) * d[37] * d[57] - d[27] * d[28] * d[38] * d[57] + std::pow(d[30], 2) * d[38] * d[57] + 2 * d[29] * d[30] * d[39] * d[57] - 2 * d[31] * d[32] * d[39] * d[57] + 2 * d[28] * d[31] * d[40] * d[57] - 2 * d[30] * d[32] * d[40] * d[57] - 2 * d[30] * d[31] * d[41] * d[57] + 2 * d[27] * d[32] * d[41] * d[57];
    coeffs[156] = 2 * d[8] * d[17] * d[36] * d[37] + 2 * d[7] * d[16] * d[36] * d[38] + 2 * d[6] * d[15] * d[37] * d[38] - 2 * d[7] * d[15] * d[38] * d[39] - 2 * d[6] * d[16] * d[38] * d[39] - 2 * d[8] * d[17] * std::pow(d[39], 2) - 2 * d[8] * d[15] * d[37] * d[40] - 2 * d[6] * d[17] * d[37] * d[40] + 2 * d[8] * d[16] * d[39] * d[40] + 2 * d[7] * d[17] * d[39] * d[40] - 2 * d[7] * d[16] * std::pow(d[40], 2) - 2 * d[8] * d[16] * d[36] * d[41] - 2 * d[7] * d[17] * d[36] * d[41] + 2 * d[8] * d[15] * d[39] * d[41] + 2 * d[6] * d[17] * d[39] * d[41] + 2 * d[7] * d[15] * d[40] * d[41] + 2 * d[6] * d[16] * d[40] * d[41] - 2 * d[6] * d[15] * std::pow(d[41], 2) + 2 * d[6] * d[11] * d[37] * d[42] - 2 * d[8] * d[13] * d[37] * d[42] + 2 * d[2] * d[15] * d[37] * d[42] - 2 * d[4] * d[17] * d[37] * d[42] + 2 * d[6] * d[10] * d[38] * d[42] - 2 * d[7] * d[12] * d[38] * d[42] + 2 * d[1] * d[15] * d[38] * d[42] - 2 * d[3] * d[16] * d[38] * d[42] - 2 * d[7] * d[11] * d[39] * d[42] + 2 * d[8] * d[14] * d[39] * d[42] - 2 * d[2] * d[16] * d[39] * d[42] + 2 * d[5] * d[17] * d[39] * d[42] - 2 * d[8] * d[10] * d[40] * d[42] + 2 * d[7] * d[14] * d[40] * d[42] + 2 * d[5] * d[16] * d[40] * d[42] - 2 * d[1] * d[17] * d[40] * d[42] + 2 * d[8] * d[12] * d[41] * d[42] + 2 * d[7] * d[13] * d[41] * d[42] - 4 * d[6] * d[14] * d[41] * d[42] - 4 * d[5] * d[15] * d[41] * d[42] + 2 * d[4] * d[16] * d[41] * d[42] + 2 * d[3] * d[17] * d[41] * d[42] + d[2] * d[10] * std::pow(d[42], 2) + d[1] * d[11] * std::pow(d[42], 2) - 2 * d[5] * d[14] * std::pow(d[42], 2) + 2 * d[7] * d[11] * d[36] * d[43] - 2 * d[8] * d[14] * d[36] * d[43] + 2 * d[2] * d[16] * d[36] * d[43] - 2 * d[5] * d[17] * d[36] * d[43] + 2 * d[7] * d[9] * d[38] * d[43] - 2 * d[6] * d[12] * d[38] * d[43] - 2 * d[3] * d[15] * d[38] * d[43] + 2 * d[0] * d[16] * d[38] * d[43] - 2 * d[6] * d[11] * d[39] * d[43] + 2 * d[8] * d[13] * d[39] * d[43] - 2 * d[2] * d[15] * d[39] * d[43] + 2 * d[4] * d[17] * d[39] * d[43] + 2 * d[8] * d[12] * d[40] * d[43] - 4 * d[7] * d[13] * d[40] * d[43] + 2 * d[6] * d[14] * d[40] * d[43] + 2 * d[5] * d[15] * d[40] * d[43] - 4 * d[4] * d[16] * d[40] * d[43] + 2 * d[3] * d[17] * d[40] * d[43] - 2 * d[8] * d[9] * d[41] * d[43] + 2 * d[6] * d[13] * d[41] * d[43] + 2 * d[4] * d[15] * d[41] * d[43] - 2 * d[0] * d[17] * d[41] * d[43] - 2 * d[3] * d[11] * d[42] * d[43] - 2 * d[2] * d[12] * d[42] * d[43] + 2 * d[5] * d[13] * d[42] * d[43] + 2 * d[4] * d[14] * d[42] * d[43] + d[2] * d[9] * std::pow(d[43], 2) + d[0] * d[11] * std::pow(d[43], 2) - 2 * d[4] * d[13] * std::pow(d[43], 2) + 2 * d[8] * d[10] * d[36] * d[44] - 2 * d[7] * d[14] * d[36] * d[44] - 2 * d[5] * d[16] * d[36] * d[44] + 2 * d[1] * d[17] * d[36] * d[44] + 2 * d[8] * d[9] * d[37] * d[44] - 2 * d[6] * d[13] * d[37] * d[44] - 2 * d[4] * d[15] * d[37] * d[44] + 2 * d[0] * d[17] * d[37] * d[44] - 4 * d[8] * d[12] * d[39] * d[44] + 2 * d[7] * d[13] * d[39] * d[44] + 2 * d[6] * d[14] * d[39] * d[44] + 2 * d[5] * d[15] * d[39] * d[44] + 2 * d[4] * d[16] * d[39] * d[44] - 4 * d[3] * d[17] * d[39] * d[44] - 2 * d[6] * d[10] * d[40] * d[44] + 2 * d[7] * d[12] * d[40] * d[44] - 2 * d[1] * d[15] * d[40] * d[44] + 2 * d[3] * d[16] * d[40] * d[44] - 2 * d[7] * d[9] * d[41] * d[44] + 2 * d[6] * d[12] * d[41] * d[44] + 2 * d[3] * d[15] * d[41] * d[44] - 2 * d[0] * d[16] * d[41] * d[44] - 2 * d[4] * d[10] * d[42] * d[44] + 2 * d[5] * d[12] * d[42] * d[44] - 2 * d[1] * d[13] * d[42] * d[44] + 2 * d[3] * d[14] * d[42] * d[44] - 2 * d[5] * d[9] * d[43] * d[44] + 2 * d[4] * d[12] * d[43] * d[44] + 2 * d[3] * d[13] * d[43] * d[44] - 2 * d[0] * d[14] * d[43] * d[44] + d[1] * d[9] * std::pow(d[44], 2) + d[0] * d[10] * std::pow(d[44], 2) - 2 * d[3] * d[12] * std::pow(d[44], 2) - d[11] * d[36] * d[37] * d[57] - d[10] * d[36] * d[38] * d[57] - d[9] * d[37] * d[38] * d[57] + 2 * d[12] * d[38] * d[39] * d[57] + d[11] * std::pow(d[39], 2) * d[57] + 2 * d[13] * d[37] * d[40] * d[57] - 2 * d[14] * d[39] * d[40] * d[57] + d[10] * std::pow(d[40], 2) * d[57] + 2 * d[14] * d[36] * d[41] * d[57] - 2 * d[13] * d[39] * d[41] * d[57] - 2 * d[12] * d[40] * d[41] * d[57] + d[9] * std::pow(d[41], 2) * d[57];
    coeffs[157] = 2 * d[8] * d[26] * d[36] * d[37] + 2 * d[7] * d[25] * d[36] * d[38] + 2 * d[6] * d[24] * d[37] * d[38] - 2 * d[7] * d[24] * d[38] * d[39] - 2 * d[6] * d[25] * d[38] * d[39] - 2 * d[8] * d[26] * std::pow(d[39], 2) - 2 * d[8] * d[24] * d[37] * d[40] - 2 * d[6] * d[26] * d[37] * d[40] + 2 * d[8] * d[25] * d[39] * d[40] + 2 * d[7] * d[26] * d[39] * d[40] - 2 * d[7] * d[25] * std::pow(d[40], 2) - 2 * d[8] * d[25] * d[36] * d[41] - 2 * d[7] * d[26] * d[36] * d[41] + 2 * d[8] * d[24] * d[39] * d[41] + 2 * d[6] * d[26] * d[39] * d[41] + 2 * d[7] * d[24] * d[40] * d[41] + 2 * d[6] * d[25] * d[40] * d[41] - 2 * d[6] * d[24] * std::pow(d[41], 2) + 2 * d[6] * d[20] * d[37] * d[42] - 2 * d[8] * d[22] * d[37] * d[42] + 2 * d[2] * d[24] * d[37] * d[42] - 2 * d[4] * d[26] * d[37] * d[42] + 2 * d[6] * d[19] * d[38] * d[42] - 2 * d[7] * d[21] * d[38] * d[42] + 2 * d[1] * d[24] * d[38] * d[42] - 2 * d[3] * d[25] * d[38] * d[42] - 2 * d[7] * d[20] * d[39] * d[42] + 2 * d[8] * d[23] * d[39] * d[42] - 2 * d[2] * d[25] * d[39] * d[42] + 2 * d[5] * d[26] * d[39] * d[42] - 2 * d[8] * d[19] * d[40] * d[42] + 2 * d[7] * d[23] * d[40] * d[42] + 2 * d[5] * d[25] * d[40] * d[42] - 2 * d[1] * d[26] * d[40] * d[42] + 2 * d[8] * d[21] * d[41] * d[42] + 2 * d[7] * d[22] * d[41] * d[42] - 4 * d[6] * d[23] * d[41] * d[42] - 4 * d[5] * d[24] * d[41] * d[42] + 2 * d[4] * d[25] * d[41] * d[42] + 2 * d[3] * d[26] * d[41] * d[42] + d[2] * d[19] * std::pow(d[42], 2) + d[1] * d[20] * std::pow(d[42], 2) - 2 * d[5] * d[23] * std::pow(d[42], 2) + 2 * d[7] * d[20] * d[36] * d[43] - 2 * d[8] * d[23] * d[36] * d[43] + 2 * d[2] * d[25] * d[36] * d[43] - 2 * d[5] * d[26] * d[36] * d[43] + 2 * d[7] * d[18] * d[38] * d[43] - 2 * d[6] * d[21] * d[38] * d[43] - 2 * d[3] * d[24] * d[38] * d[43] + 2 * d[0] * d[25] * d[38] * d[43] - 2 * d[6] * d[20] * d[39] * d[43] + 2 * d[8] * d[22] * d[39] * d[43] - 2 * d[2] * d[24] * d[39] * d[43] + 2 * d[4] * d[26] * d[39] * d[43] + 2 * d[8] * d[21] * d[40] * d[43] - 4 * d[7] * d[22] * d[40] * d[43] + 2 * d[6] * d[23] * d[40] * d[43] + 2 * d[5] * d[24] * d[40] * d[43] - 4 * d[4] * d[25] * d[40] * d[43] + 2 * d[3] * d[26] * d[40] * d[43] - 2 * d[8] * d[18] * d[41] * d[43] + 2 * d[6] * d[22] * d[41] * d[43] + 2 * d[4] * d[24] * d[41] * d[43] - 2 * d[0] * d[26] * d[41] * d[43] - 2 * d[3] * d[20] * d[42] * d[43] - 2 * d[2] * d[21] * d[42] * d[43] + 2 * d[5] * d[22] * d[42] * d[43] + 2 * d[4] * d[23] * d[42] * d[43] + d[2] * d[18] * std::pow(d[43], 2) + d[0] * d[20] * std::pow(d[43], 2) - 2 * d[4] * d[22] * std::pow(d[43], 2) + 2 * d[8] * d[19] * d[36] * d[44] - 2 * d[7] * d[23] * d[36] * d[44] - 2 * d[5] * d[25] * d[36] * d[44] + 2 * d[1] * d[26] * d[36] * d[44] + 2 * d[8] * d[18] * d[37] * d[44] - 2 * d[6] * d[22] * d[37] * d[44] - 2 * d[4] * d[24] * d[37] * d[44] + 2 * d[0] * d[26] * d[37] * d[44] - 4 * d[8] * d[21] * d[39] * d[44] + 2 * d[7] * d[22] * d[39] * d[44] + 2 * d[6] * d[23] * d[39] * d[44] + 2 * d[5] * d[24] * d[39] * d[44] + 2 * d[4] * d[25] * d[39] * d[44] - 4 * d[3] * d[26] * d[39] * d[44] - 2 * d[6] * d[19] * d[40] * d[44] + 2 * d[7] * d[21] * d[40] * d[44] - 2 * d[1] * d[24] * d[40] * d[44] + 2 * d[3] * d[25] * d[40] * d[44] - 2 * d[7] * d[18] * d[41] * d[44] + 2 * d[6] * d[21] * d[41] * d[44] + 2 * d[3] * d[24] * d[41] * d[44] - 2 * d[0] * d[25] * d[41] * d[44] - 2 * d[4] * d[19] * d[42] * d[44] + 2 * d[5] * d[21] * d[42] * d[44] - 2 * d[1] * d[22] * d[42] * d[44] + 2 * d[3] * d[23] * d[42] * d[44] - 2 * d[5] * d[18] * d[43] * d[44] + 2 * d[4] * d[21] * d[43] * d[44] + 2 * d[3] * d[22] * d[43] * d[44] - 2 * d[0] * d[23] * d[43] * d[44] + d[1] * d[18] * std::pow(d[44], 2) + d[0] * d[19] * std::pow(d[44], 2) - 2 * d[3] * d[21] * std::pow(d[44], 2) - d[20] * d[36] * d[37] * d[57] - d[19] * d[36] * d[38] * d[57] - d[18] * d[37] * d[38] * d[57] + 2 * d[21] * d[38] * d[39] * d[57] + d[20] * std::pow(d[39], 2) * d[57] + 2 * d[22] * d[37] * d[40] * d[57] - 2 * d[23] * d[39] * d[40] * d[57] + d[19] * std::pow(d[40], 2) * d[57] + 2 * d[23] * d[36] * d[41] * d[57] - 2 * d[22] * d[39] * d[41] * d[57] - 2 * d[21] * d[40] * d[41] * d[57] + d[18] * std::pow(d[41], 2) * d[57];
    coeffs[158] = 2 * d[8] * d[35] * d[36] * d[37] + 2 * d[7] * d[34] * d[36] * d[38] + 2 * d[6] * d[33] * d[37] * d[38] - 2 * d[7] * d[33] * d[38] * d[39] - 2 * d[6] * d[34] * d[38] * d[39] - 2 * d[8] * d[35] * std::pow(d[39], 2) - 2 * d[8] * d[33] * d[37] * d[40] - 2 * d[6] * d[35] * d[37] * d[40] + 2 * d[8] * d[34] * d[39] * d[40] + 2 * d[7] * d[35] * d[39] * d[40] - 2 * d[7] * d[34] * std::pow(d[40], 2) - 2 * d[8] * d[34] * d[36] * d[41] - 2 * d[7] * d[35] * d[36] * d[41] + 2 * d[8] * d[33] * d[39] * d[41] + 2 * d[6] * d[35] * d[39] * d[41] + 2 * d[7] * d[33] * d[40] * d[41] + 2 * d[6] * d[34] * d[40] * d[41] - 2 * d[6] * d[33] * std::pow(d[41], 2) + 2 * d[6] * d[29] * d[37] * d[42] - 2 * d[8] * d[31] * d[37] * d[42] + 2 * d[2] * d[33] * d[37] * d[42] - 2 * d[4] * d[35] * d[37] * d[42] + 2 * d[6] * d[28] * d[38] * d[42] - 2 * d[7] * d[30] * d[38] * d[42] + 2 * d[1] * d[33] * d[38] * d[42] - 2 * d[3] * d[34] * d[38] * d[42] - 2 * d[7] * d[29] * d[39] * d[42] + 2 * d[8] * d[32] * d[39] * d[42] - 2 * d[2] * d[34] * d[39] * d[42] + 2 * d[5] * d[35] * d[39] * d[42] - 2 * d[8] * d[28] * d[40] * d[42] + 2 * d[7] * d[32] * d[40] * d[42] + 2 * d[5] * d[34] * d[40] * d[42] - 2 * d[1] * d[35] * d[40] * d[42] + 2 * d[8] * d[30] * d[41] * d[42] + 2 * d[7] * d[31] * d[41] * d[42] - 4 * d[6] * d[32] * d[41] * d[42] - 4 * d[5] * d[33] * d[41] * d[42] + 2 * d[4] * d[34] * d[41] * d[42] + 2 * d[3] * d[35] * d[41] * d[42] + d[2] * d[28] * std::pow(d[42], 2) + d[1] * d[29] * std::pow(d[42], 2) - 2 * d[5] * d[32] * std::pow(d[42], 2) + 2 * d[7] * d[29] * d[36] * d[43] - 2 * d[8] * d[32] * d[36] * d[43] + 2 * d[2] * d[34] * d[36] * d[43] - 2 * d[5] * d[35] * d[36] * d[43] + 2 * d[7] * d[27] * d[38] * d[43] - 2 * d[6] * d[30] * d[38] * d[43] - 2 * d[3] * d[33] * d[38] * d[43] + 2 * d[0] * d[34] * d[38] * d[43] - 2 * d[6] * d[29] * d[39] * d[43] + 2 * d[8] * d[31] * d[39] * d[43] - 2 * d[2] * d[33] * d[39] * d[43] + 2 * d[4] * d[35] * d[39] * d[43] + 2 * d[8] * d[30] * d[40] * d[43] - 4 * d[7] * d[31] * d[40] * d[43] + 2 * d[6] * d[32] * d[40] * d[43] + 2 * d[5] * d[33] * d[40] * d[43] - 4 * d[4] * d[34] * d[40] * d[43] + 2 * d[3] * d[35] * d[40] * d[43] - 2 * d[8] * d[27] * d[41] * d[43] + 2 * d[6] * d[31] * d[41] * d[43] + 2 * d[4] * d[33] * d[41] * d[43] - 2 * d[0] * d[35] * d[41] * d[43] - 2 * d[3] * d[29] * d[42] * d[43] - 2 * d[2] * d[30] * d[42] * d[43] + 2 * d[5] * d[31] * d[42] * d[43] + 2 * d[4] * d[32] * d[42] * d[43] + d[2] * d[27] * std::pow(d[43], 2) + d[0] * d[29] * std::pow(d[43], 2) - 2 * d[4] * d[31] * std::pow(d[43], 2) + 2 * d[8] * d[28] * d[36] * d[44] - 2 * d[7] * d[32] * d[36] * d[44] - 2 * d[5] * d[34] * d[36] * d[44] + 2 * d[1] * d[35] * d[36] * d[44] + 2 * d[8] * d[27] * d[37] * d[44] - 2 * d[6] * d[31] * d[37] * d[44] - 2 * d[4] * d[33] * d[37] * d[44] + 2 * d[0] * d[35] * d[37] * d[44] - 4 * d[8] * d[30] * d[39] * d[44] + 2 * d[7] * d[31] * d[39] * d[44] + 2 * d[6] * d[32] * d[39] * d[44] + 2 * d[5] * d[33] * d[39] * d[44] + 2 * d[4] * d[34] * d[39] * d[44] - 4 * d[3] * d[35] * d[39] * d[44] - 2 * d[6] * d[28] * d[40] * d[44] + 2 * d[7] * d[30] * d[40] * d[44] - 2 * d[1] * d[33] * d[40] * d[44] + 2 * d[3] * d[34] * d[40] * d[44] - 2 * d[7] * d[27] * d[41] * d[44] + 2 * d[6] * d[30] * d[41] * d[44] + 2 * d[3] * d[33] * d[41] * d[44] - 2 * d[0] * d[34] * d[41] * d[44] - 2 * d[4] * d[28] * d[42] * d[44] + 2 * d[5] * d[30] * d[42] * d[44] - 2 * d[1] * d[31] * d[42] * d[44] + 2 * d[3] * d[32] * d[42] * d[44] - 2 * d[5] * d[27] * d[43] * d[44] + 2 * d[4] * d[30] * d[43] * d[44] + 2 * d[3] * d[31] * d[43] * d[44] - 2 * d[0] * d[32] * d[43] * d[44] + d[1] * d[27] * std::pow(d[44], 2) + d[0] * d[28] * std::pow(d[44], 2) - 2 * d[3] * d[30] * std::pow(d[44], 2) - d[29] * d[36] * d[37] * d[57] - d[28] * d[36] * d[38] * d[57] - d[27] * d[37] * d[38] * d[57] + 2 * d[30] * d[38] * d[39] * d[57] + d[29] * std::pow(d[39], 2) * d[57] + 2 * d[31] * d[37] * d[40] * d[57] - 2 * d[32] * d[39] * d[40] * d[57] + d[28] * std::pow(d[40], 2) * d[57] + 2 * d[32] * d[36] * d[41] * d[57] - 2 * d[31] * d[39] * d[41] * d[57] - 2 * d[30] * d[40] * d[41] * d[57] + d[27] * std::pow(d[41], 2) * d[57];
    coeffs[159] = 2 * d[6] * d[37] * d[38] * d[42] - 2 * d[7] * d[38] * d[39] * d[42] - 2 * d[8] * d[37] * d[40] * d[42] + 2 * d[8] * d[39] * d[41] * d[42] + 2 * d[7] * d[40] * d[41] * d[42] - 2 * d[6] * std::pow(d[41], 2) * d[42] + d[2] * d[37] * std::pow(d[42], 2) + d[1] * d[38] * std::pow(d[42], 2) - 2 * d[5] * d[41] * std::pow(d[42], 2) + 2 * d[7] * d[36] * d[38] * d[43] - 2 * d[6] * d[38] * d[39] * d[43] + 2 * d[8] * d[39] * d[40] * d[43] - 2 * d[7] * std::pow(d[40], 2) * d[43] - 2 * d[8] * d[36] * d[41] * d[43] + 2 * d[6] * d[40] * d[41] * d[43] - 2 * d[3] * d[38] * d[42] * d[43] - 2 * d[2] * d[39] * d[42] * d[43] + 2 * d[5] * d[40] * d[42] * d[43] + 2 * d[4] * d[41] * d[42] * d[43] + d[2] * d[36] * std::pow(d[43], 2) + d[0] * d[38] * std::pow(d[43], 2) - 2 * d[4] * d[40] * std::pow(d[43], 2) + 2 * d[8] * d[36] * d[37] * d[44] - 2 * d[8] * std::pow(d[39], 2) * d[44] - 2 * d[6] * d[37] * d[40] * d[44] + 2 * d[7] * d[39] * d[40] * d[44] - 2 * d[7] * d[36] * d[41] * d[44] + 2 * d[6] * d[39] * d[41] * d[44] - 2 * d[4] * d[37] * d[42] * d[44] + 2 * d[5] * d[39] * d[42] * d[44] - 2 * d[1] * d[40] * d[42] * d[44] + 2 * d[3] * d[41] * d[42] * d[44] - 2 * d[5] * d[36] * d[43] * d[44] + 2 * d[4] * d[39] * d[43] * d[44] + 2 * d[3] * d[40] * d[43] * d[44] - 2 * d[0] * d[41] * d[43] * d[44] + d[1] * d[36] * std::pow(d[44], 2) + d[0] * d[37] * std::pow(d[44], 2) - 2 * d[3] * d[39] * std::pow(d[44], 2) - d[36] * d[37] * d[38] * d[57] + d[38] * std::pow(d[39], 2) * d[57] + d[37] * std::pow(d[40], 2) * d[57] - 2 * d[39] * d[40] * d[41] * d[57] + d[36] * std::pow(d[41], 2) * d[57];
    coeffs[160] = std::pow(d[8], 2) * d[9] * d[10] + std::pow(d[7], 2) * d[9] * d[11] + std::pow(d[6], 2) * d[10] * d[11] - 2 * d[6] * d[7] * d[11] * d[12] - std::pow(d[8], 2) * std::pow(d[12], 2) - 2 * d[6] * d[8] * d[10] * d[13] + 2 * d[7] * d[8] * d[12] * d[13] - std::pow(d[7], 2) * std::pow(d[13], 2) - 2 * d[7] * d[8] * d[9] * d[14] + 2 * d[6] * d[8] * d[12] * d[14] + 2 * d[6] * d[7] * d[13] * d[14] - std::pow(d[6], 2) * std::pow(d[14], 2) + 2 * d[2] * d[6] * d[10] * d[15] - 2 * d[4] * d[8] * d[10] * d[15] + 2 * d[1] * d[6] * d[11] * d[15] - 2 * d[3] * d[7] * d[11] * d[15] - 2 * d[2] * d[7] * d[12] * d[15] + 2 * d[5] * d[8] * d[12] * d[15] + 2 * d[5] * d[7] * d[13] * d[15] - 2 * d[1] * d[8] * d[13] * d[15] - 4 * d[5] * d[6] * d[14] * d[15] + 2 * d[4] * d[7] * d[14] * d[15] + 2 * d[3] * d[8] * d[14] * d[15] + d[1] * d[2] * std::pow(d[15], 2) - std::pow(d[5], 2) * std::pow(d[15], 2) + 2 * d[2] * d[7] * d[9] * d[16] - 2 * d[5] * d[8] * d[9] * d[16] - 2 * d[3] * d[6] * d[11] * d[16] + 2 * d[0] * d[7] * d[11] * d[16] - 2 * d[2] * d[6] * d[12] * d[16] + 2 * d[4] * d[8] * d[12] * d[16] + 2 * d[5] * d[6] * d[13] * d[16] - 4 * d[4] * d[7] * d[13] * d[16] + 2 * d[3] * d[8] * d[13] * d[16] + 2 * d[4] * d[6] * d[14] * d[16] - 2 * d[0] * d[8] * d[14] * d[16] - 2 * d[2] * d[3] * d[15] * d[16] + 2 * d[4] * d[5] * d[15] * d[16] + d[0] * d[2] * std::pow(d[16], 2) - std::pow(d[4], 2) * std::pow(d[16], 2) - 2 * d[5] * d[7] * d[9] * d[17] + 2 * d[1] * d[8] * d[9] * d[17] - 2 * d[4] * d[6] * d[10] * d[17] + 2 * d[0] * d[8] * d[10] * d[17] + 2 * d[5] * d[6] * d[12] * d[17] + 2 * d[4] * d[7] * d[12] * d[17] - 4 * d[3] * d[8] * d[12] * d[17] - 2 * d[1] * d[6] * d[13] * d[17] + 2 * d[3] * d[7] * d[13] * d[17] + 2 * d[3] * d[6] * d[14] * d[17] - 2 * d[0] * d[7] * d[14] * d[17] - 2 * d[1] * d[4] * d[15] * d[17] + 2 * d[3] * d[5] * d[15] * d[17] + 2 * d[3] * d[4] * d[16] * d[17] - 2 * d[0] * d[5] * d[16] * d[17] + d[0] * d[1] * std::pow(d[17], 2) - std::pow(d[3], 2) * std::pow(d[17], 2) - d[2] * d[9] * d[10] * d[57] - d[1] * d[9] * d[11] * d[57] - d[0] * d[10] * d[11] * d[57] + 2 * d[3] * d[11] * d[12] * d[57] + d[2] * std::pow(d[12], 2) * d[57] + 2 * d[4] * d[10] * d[13] * d[57] - 2 * d[5] * d[12] * d[13] * d[57] + d[1] * std::pow(d[13], 2) * d[57] + 2 * d[5] * d[9] * d[14] * d[57] - 2 * d[4] * d[12] * d[14] * d[57] - 2 * d[3] * d[13] * d[14] * d[57] + d[0] * std::pow(d[14], 2) * d[57];
    coeffs[161] = std::pow(d[8], 2) * d[10] * d[18] + std::pow(d[7], 2) * d[11] * d[18] - 2 * d[7] * d[8] * d[14] * d[18] + 2 * d[2] * d[7] * d[16] * d[18] - 2 * d[5] * d[8] * d[16] * d[18] - 2 * d[5] * d[7] * d[17] * d[18] + 2 * d[1] * d[8] * d[17] * d[18] + std::pow(d[8], 2) * d[9] * d[19] + std::pow(d[6], 2) * d[11] * d[19] - 2 * d[6] * d[8] * d[13] * d[19] + 2 * d[2] * d[6] * d[15] * d[19] - 2 * d[4] * d[8] * d[15] * d[19] - 2 * d[4] * d[6] * d[17] * d[19] + 2 * d[0] * d[8] * d[17] * d[19] + std::pow(d[7], 2) * d[9] * d[20] + std::pow(d[6], 2) * d[10] * d[20] - 2 * d[6] * d[7] * d[12] * d[20] + 2 * d[1] * d[6] * d[15] * d[20] - 2 * d[3] * d[7] * d[15] * d[20] - 2 * d[3] * d[6] * d[16] * d[20] + 2 * d[0] * d[7] * d[16] * d[20] - 2 * d[6] * d[7] * d[11] * d[21] - 2 * std::pow(d[8], 2) * d[12] * d[21] + 2 * d[7] * d[8] * d[13] * d[21] + 2 * d[6] * d[8] * d[14] * d[21] - 2 * d[2] * d[7] * d[15] * d[21] + 2 * d[5] * d[8] * d[15] * d[21] - 2 * d[2] * d[6] * d[16] * d[21] + 2 * d[4] * d[8] * d[16] * d[21] + 2 * d[5] * d[6] * d[17] * d[21] + 2 * d[4] * d[7] * d[17] * d[21] - 4 * d[3] * d[8] * d[17] * d[21] - 2 * d[6] * d[8] * d[10] * d[22] + 2 * d[7] * d[8] * d[12] * d[22] - 2 * std::pow(d[7], 2) * d[13] * d[22] + 2 * d[6] * d[7] * d[14] * d[22] + 2 * d[5] * d[7] * d[15] * d[22] - 2 * d[1] * d[8] * d[15] * d[22] + 2 * d[5] * d[6] * d[16] * d[22] - 4 * d[4] * d[7] * d[16] * d[22] + 2 * d[3] * d[8] * d[16] * d[22] - 2 * d[1] * d[6] * d[17] * d[22] + 2 * d[3] * d[7] * d[17] * d[22] - 2 * d[7] * d[8] * d[9] * d[23] + 2 * d[6] * d[8] * d[12] * d[23] + 2 * d[6] * d[7] * d[13] * d[23] - 2 * std::pow(d[6], 2) * d[14] * d[23] - 4 * d[5] * d[6] * d[15] * d[23] + 2 * d[4] * d[7] * d[15] * d[23] + 2 * d[3] * d[8] * d[15] * d[23] + 2 * d[4] * d[6] * d[16] * d[23] - 2 * d[0] * d[8] * d[16] * d[23] + 2 * d[3] * d[6] * d[17] * d[23] - 2 * d[0] * d[7] * d[17] * d[23] + 2 * d[2] * d[6] * d[10] * d[24] - 2 * d[4] * d[8] * d[10] * d[24] + 2 * d[1] * d[6] * d[11] * d[24] - 2 * d[3] * d[7] * d[11] * d[24] - 2 * d[2] * d[7] * d[12] * d[24] + 2 * d[5] * d[8] * d[12] * d[24] + 2 * d[5] * d[7] * d[13] * d[24] - 2 * d[1] * d[8] * d[13] * d[24] - 4 * d[5] * d[6] * d[14] * d[24] + 2 * d[4] * d[7] * d[14] * d[24] + 2 * d[3] * d[8] * d[14] * d[24] + 2 * d[1] * d[2] * d[15] * d[24] - 2 * std::pow(d[5], 2) * d[15] * d[24] - 2 * d[2] * d[3] * d[16] * d[24] + 2 * d[4] * d[5] * d[16] * d[24] - 2 * d[1] * d[4] * d[17] * d[24] + 2 * d[3] * d[5] * d[17] * d[24] + 2 * d[2] * d[7] * d[9] * d[25] - 2 * d[5] * d[8] * d[9] * d[25] - 2 * d[3] * d[6] * d[11] * d[25] + 2 * d[0] * d[7] * d[11] * d[25] - 2 * d[2] * d[6] * d[12] * d[25] + 2 * d[4] * d[8] * d[12] * d[25] + 2 * d[5] * d[6] * d[13] * d[25] - 4 * d[4] * d[7] * d[13] * d[25] + 2 * d[3] * d[8] * d[13] * d[25] + 2 * d[4] * d[6] * d[14] * d[25] - 2 * d[0] * d[8] * d[14] * d[25] - 2 * d[2] * d[3] * d[15] * d[25] + 2 * d[4] * d[5] * d[15] * d[25] + 2 * d[0] * d[2] * d[16] * d[25] - 2 * std::pow(d[4], 2) * d[16] * d[25] + 2 * d[3] * d[4] * d[17] * d[25] - 2 * d[0] * d[5] * d[17] * d[25] - 2 * d[5] * d[7] * d[9] * d[26] + 2 * d[1] * d[8] * d[9] * d[26] - 2 * d[4] * d[6] * d[10] * d[26] + 2 * d[0] * d[8] * d[10] * d[26] + 2 * d[5] * d[6] * d[12] * d[26] + 2 * d[4] * d[7] * d[12] * d[26] - 4 * d[3] * d[8] * d[12] * d[26] - 2 * d[1] * d[6] * d[13] * d[26] + 2 * d[3] * d[7] * d[13] * d[26] + 2 * d[3] * d[6] * d[14] * d[26] - 2 * d[0] * d[7] * d[14] * d[26] - 2 * d[1] * d[4] * d[15] * d[26] + 2 * d[3] * d[5] * d[15] * d[26] + 2 * d[3] * d[4] * d[16] * d[26] - 2 * d[0] * d[5] * d[16] * d[26] + 2 * d[0] * d[1] * d[17] * d[26] - 2 * std::pow(d[3], 2) * d[17] * d[26] - d[2] * d[10] * d[18] * d[57] - d[1] * d[11] * d[18] * d[57] + 2 * d[5] * d[14] * d[18] * d[57] - d[2] * d[9] * d[19] * d[57] - d[0] * d[11] * d[19] * d[57] + 2 * d[4] * d[13] * d[19] * d[57] - d[1] * d[9] * d[20] * d[57] - d[0] * d[10] * d[20] * d[57] + 2 * d[3] * d[12] * d[20] * d[57] + 2 * d[3] * d[11] * d[21] * d[57] + 2 * d[2] * d[12] * d[21] * d[57] - 2 * d[5] * d[13] * d[21] * d[57] - 2 * d[4] * d[14] * d[21] * d[57] + 2 * d[4] * d[10] * d[22] * d[57] - 2 * d[5] * d[12] * d[22] * d[57] + 2 * d[1] * d[13] * d[22] * d[57] - 2 * d[3] * d[14] * d[22] * d[57] + 2 * d[5] * d[9] * d[23] * d[57] - 2 * d[4] * d[12] * d[23] * d[57] - 2 * d[3] * d[13] * d[23] * d[57] + 2 * d[0] * d[14] * d[23] * d[57];
    coeffs[162] = std::pow(d[8], 2) * d[18] * d[19] + std::pow(d[7], 2) * d[18] * d[20] + std::pow(d[6], 2) * d[19] * d[20] - 2 * d[6] * d[7] * d[20] * d[21] - std::pow(d[8], 2) * std::pow(d[21], 2) - 2 * d[6] * d[8] * d[19] * d[22] + 2 * d[7] * d[8] * d[21] * d[22] - std::pow(d[7], 2) * std::pow(d[22], 2) - 2 * d[7] * d[8] * d[18] * d[23] + 2 * d[6] * d[8] * d[21] * d[23] + 2 * d[6] * d[7] * d[22] * d[23] - std::pow(d[6], 2) * std::pow(d[23], 2) + 2 * d[2] * d[6] * d[19] * d[24] - 2 * d[4] * d[8] * d[19] * d[24] + 2 * d[1] * d[6] * d[20] * d[24] - 2 * d[3] * d[7] * d[20] * d[24] - 2 * d[2] * d[7] * d[21] * d[24] + 2 * d[5] * d[8] * d[21] * d[24] + 2 * d[5] * d[7] * d[22] * d[24] - 2 * d[1] * d[8] * d[22] * d[24] - 4 * d[5] * d[6] * d[23] * d[24] + 2 * d[4] * d[7] * d[23] * d[24] + 2 * d[3] * d[8] * d[23] * d[24] + d[1] * d[2] * std::pow(d[24], 2) - std::pow(d[5], 2) * std::pow(d[24], 2) + 2 * d[2] * d[7] * d[18] * d[25] - 2 * d[5] * d[8] * d[18] * d[25] - 2 * d[3] * d[6] * d[20] * d[25] + 2 * d[0] * d[7] * d[20] * d[25] - 2 * d[2] * d[6] * d[21] * d[25] + 2 * d[4] * d[8] * d[21] * d[25] + 2 * d[5] * d[6] * d[22] * d[25] - 4 * d[4] * d[7] * d[22] * d[25] + 2 * d[3] * d[8] * d[22] * d[25] + 2 * d[4] * d[6] * d[23] * d[25] - 2 * d[0] * d[8] * d[23] * d[25] - 2 * d[2] * d[3] * d[24] * d[25] + 2 * d[4] * d[5] * d[24] * d[25] + d[0] * d[2] * std::pow(d[25], 2) - std::pow(d[4], 2) * std::pow(d[25], 2) - 2 * d[5] * d[7] * d[18] * d[26] + 2 * d[1] * d[8] * d[18] * d[26] - 2 * d[4] * d[6] * d[19] * d[26] + 2 * d[0] * d[8] * d[19] * d[26] + 2 * d[5] * d[6] * d[21] * d[26] + 2 * d[4] * d[7] * d[21] * d[26] - 4 * d[3] * d[8] * d[21] * d[26] - 2 * d[1] * d[6] * d[22] * d[26] + 2 * d[3] * d[7] * d[22] * d[26] + 2 * d[3] * d[6] * d[23] * d[26] - 2 * d[0] * d[7] * d[23] * d[26] - 2 * d[1] * d[4] * d[24] * d[26] + 2 * d[3] * d[5] * d[24] * d[26] + 2 * d[3] * d[4] * d[25] * d[26] - 2 * d[0] * d[5] * d[25] * d[26] + d[0] * d[1] * std::pow(d[26], 2) - std::pow(d[3], 2) * std::pow(d[26], 2) - d[2] * d[18] * d[19] * d[57] - d[1] * d[18] * d[20] * d[57] - d[0] * d[19] * d[20] * d[57] + 2 * d[3] * d[20] * d[21] * d[57] + d[2] * std::pow(d[21], 2) * d[57] + 2 * d[4] * d[19] * d[22] * d[57] - 2 * d[5] * d[21] * d[22] * d[57] + d[1] * std::pow(d[22], 2) * d[57] + 2 * d[5] * d[18] * d[23] * d[57] - 2 * d[4] * d[21] * d[23] * d[57] - 2 * d[3] * d[22] * d[23] * d[57] + d[0] * std::pow(d[23], 2) * d[57];
    coeffs[163] = std::pow(d[8], 2) * d[10] * d[27] + std::pow(d[7], 2) * d[11] * d[27] - 2 * d[7] * d[8] * d[14] * d[27] + 2 * d[2] * d[7] * d[16] * d[27] - 2 * d[5] * d[8] * d[16] * d[27] - 2 * d[5] * d[7] * d[17] * d[27] + 2 * d[1] * d[8] * d[17] * d[27] + std::pow(d[8], 2) * d[9] * d[28] + std::pow(d[6], 2) * d[11] * d[28] - 2 * d[6] * d[8] * d[13] * d[28] + 2 * d[2] * d[6] * d[15] * d[28] - 2 * d[4] * d[8] * d[15] * d[28] - 2 * d[4] * d[6] * d[17] * d[28] + 2 * d[0] * d[8] * d[17] * d[28] + std::pow(d[7], 2) * d[9] * d[29] + std::pow(d[6], 2) * d[10] * d[29] - 2 * d[6] * d[7] * d[12] * d[29] + 2 * d[1] * d[6] * d[15] * d[29] - 2 * d[3] * d[7] * d[15] * d[29] - 2 * d[3] * d[6] * d[16] * d[29] + 2 * d[0] * d[7] * d[16] * d[29] - 2 * d[6] * d[7] * d[11] * d[30] - 2 * std::pow(d[8], 2) * d[12] * d[30] + 2 * d[7] * d[8] * d[13] * d[30] + 2 * d[6] * d[8] * d[14] * d[30] - 2 * d[2] * d[7] * d[15] * d[30] + 2 * d[5] * d[8] * d[15] * d[30] - 2 * d[2] * d[6] * d[16] * d[30] + 2 * d[4] * d[8] * d[16] * d[30] + 2 * d[5] * d[6] * d[17] * d[30] + 2 * d[4] * d[7] * d[17] * d[30] - 4 * d[3] * d[8] * d[17] * d[30] - 2 * d[6] * d[8] * d[10] * d[31] + 2 * d[7] * d[8] * d[12] * d[31] - 2 * std::pow(d[7], 2) * d[13] * d[31] + 2 * d[6] * d[7] * d[14] * d[31] + 2 * d[5] * d[7] * d[15] * d[31] - 2 * d[1] * d[8] * d[15] * d[31] + 2 * d[5] * d[6] * d[16] * d[31] - 4 * d[4] * d[7] * d[16] * d[31] + 2 * d[3] * d[8] * d[16] * d[31] - 2 * d[1] * d[6] * d[17] * d[31] + 2 * d[3] * d[7] * d[17] * d[31] - 2 * d[7] * d[8] * d[9] * d[32] + 2 * d[6] * d[8] * d[12] * d[32] + 2 * d[6] * d[7] * d[13] * d[32] - 2 * std::pow(d[6], 2) * d[14] * d[32] - 4 * d[5] * d[6] * d[15] * d[32] + 2 * d[4] * d[7] * d[15] * d[32] + 2 * d[3] * d[8] * d[15] * d[32] + 2 * d[4] * d[6] * d[16] * d[32] - 2 * d[0] * d[8] * d[16] * d[32] + 2 * d[3] * d[6] * d[17] * d[32] - 2 * d[0] * d[7] * d[17] * d[32] + 2 * d[2] * d[6] * d[10] * d[33] - 2 * d[4] * d[8] * d[10] * d[33] + 2 * d[1] * d[6] * d[11] * d[33] - 2 * d[3] * d[7] * d[11] * d[33] - 2 * d[2] * d[7] * d[12] * d[33] + 2 * d[5] * d[8] * d[12] * d[33] + 2 * d[5] * d[7] * d[13] * d[33] - 2 * d[1] * d[8] * d[13] * d[33] - 4 * d[5] * d[6] * d[14] * d[33] + 2 * d[4] * d[7] * d[14] * d[33] + 2 * d[3] * d[8] * d[14] * d[33] + 2 * d[1] * d[2] * d[15] * d[33] - 2 * std::pow(d[5], 2) * d[15] * d[33] - 2 * d[2] * d[3] * d[16] * d[33] + 2 * d[4] * d[5] * d[16] * d[33] - 2 * d[1] * d[4] * d[17] * d[33] + 2 * d[3] * d[5] * d[17] * d[33] + 2 * d[2] * d[7] * d[9] * d[34] - 2 * d[5] * d[8] * d[9] * d[34] - 2 * d[3] * d[6] * d[11] * d[34] + 2 * d[0] * d[7] * d[11] * d[34] - 2 * d[2] * d[6] * d[12] * d[34] + 2 * d[4] * d[8] * d[12] * d[34] + 2 * d[5] * d[6] * d[13] * d[34] - 4 * d[4] * d[7] * d[13] * d[34] + 2 * d[3] * d[8] * d[13] * d[34] + 2 * d[4] * d[6] * d[14] * d[34] - 2 * d[0] * d[8] * d[14] * d[34] - 2 * d[2] * d[3] * d[15] * d[34] + 2 * d[4] * d[5] * d[15] * d[34] + 2 * d[0] * d[2] * d[16] * d[34] - 2 * std::pow(d[4], 2) * d[16] * d[34] + 2 * d[3] * d[4] * d[17] * d[34] - 2 * d[0] * d[5] * d[17] * d[34] - 2 * d[5] * d[7] * d[9] * d[35] + 2 * d[1] * d[8] * d[9] * d[35] - 2 * d[4] * d[6] * d[10] * d[35] + 2 * d[0] * d[8] * d[10] * d[35] + 2 * d[5] * d[6] * d[12] * d[35] + 2 * d[4] * d[7] * d[12] * d[35] - 4 * d[3] * d[8] * d[12] * d[35] - 2 * d[1] * d[6] * d[13] * d[35] + 2 * d[3] * d[7] * d[13] * d[35] + 2 * d[3] * d[6] * d[14] * d[35] - 2 * d[0] * d[7] * d[14] * d[35] - 2 * d[1] * d[4] * d[15] * d[35] + 2 * d[3] * d[5] * d[15] * d[35] + 2 * d[3] * d[4] * d[16] * d[35] - 2 * d[0] * d[5] * d[16] * d[35] + 2 * d[0] * d[1] * d[17] * d[35] - 2 * std::pow(d[3], 2) * d[17] * d[35] - d[2] * d[10] * d[27] * d[57] - d[1] * d[11] * d[27] * d[57] + 2 * d[5] * d[14] * d[27] * d[57] - d[2] * d[9] * d[28] * d[57] - d[0] * d[11] * d[28] * d[57] + 2 * d[4] * d[13] * d[28] * d[57] - d[1] * d[9] * d[29] * d[57] - d[0] * d[10] * d[29] * d[57] + 2 * d[3] * d[12] * d[29] * d[57] + 2 * d[3] * d[11] * d[30] * d[57] + 2 * d[2] * d[12] * d[30] * d[57] - 2 * d[5] * d[13] * d[30] * d[57] - 2 * d[4] * d[14] * d[30] * d[57] + 2 * d[4] * d[10] * d[31] * d[57] - 2 * d[5] * d[12] * d[31] * d[57] + 2 * d[1] * d[13] * d[31] * d[57] - 2 * d[3] * d[14] * d[31] * d[57] + 2 * d[5] * d[9] * d[32] * d[57] - 2 * d[4] * d[12] * d[32] * d[57] - 2 * d[3] * d[13] * d[32] * d[57] + 2 * d[0] * d[14] * d[32] * d[57];
    coeffs[164] = std::pow(d[8], 2) * d[19] * d[27] + std::pow(d[7], 2) * d[20] * d[27] - 2 * d[7] * d[8] * d[23] * d[27] + 2 * d[2] * d[7] * d[25] * d[27] - 2 * d[5] * d[8] * d[25] * d[27] - 2 * d[5] * d[7] * d[26] * d[27] + 2 * d[1] * d[8] * d[26] * d[27] + std::pow(d[8], 2) * d[18] * d[28] + std::pow(d[6], 2) * d[20] * d[28] - 2 * d[6] * d[8] * d[22] * d[28] + 2 * d[2] * d[6] * d[24] * d[28] - 2 * d[4] * d[8] * d[24] * d[28] - 2 * d[4] * d[6] * d[26] * d[28] + 2 * d[0] * d[8] * d[26] * d[28] + std::pow(d[7], 2) * d[18] * d[29] + std::pow(d[6], 2) * d[19] * d[29] - 2 * d[6] * d[7] * d[21] * d[29] + 2 * d[1] * d[6] * d[24] * d[29] - 2 * d[3] * d[7] * d[24] * d[29] - 2 * d[3] * d[6] * d[25] * d[29] + 2 * d[0] * d[7] * d[25] * d[29] - 2 * d[6] * d[7] * d[20] * d[30] - 2 * std::pow(d[8], 2) * d[21] * d[30] + 2 * d[7] * d[8] * d[22] * d[30] + 2 * d[6] * d[8] * d[23] * d[30] - 2 * d[2] * d[7] * d[24] * d[30] + 2 * d[5] * d[8] * d[24] * d[30] - 2 * d[2] * d[6] * d[25] * d[30] + 2 * d[4] * d[8] * d[25] * d[30] + 2 * d[5] * d[6] * d[26] * d[30] + 2 * d[4] * d[7] * d[26] * d[30] - 4 * d[3] * d[8] * d[26] * d[30] - 2 * d[6] * d[8] * d[19] * d[31] + 2 * d[7] * d[8] * d[21] * d[31] - 2 * std::pow(d[7], 2) * d[22] * d[31] + 2 * d[6] * d[7] * d[23] * d[31] + 2 * d[5] * d[7] * d[24] * d[31] - 2 * d[1] * d[8] * d[24] * d[31] + 2 * d[5] * d[6] * d[25] * d[31] - 4 * d[4] * d[7] * d[25] * d[31] + 2 * d[3] * d[8] * d[25] * d[31] - 2 * d[1] * d[6] * d[26] * d[31] + 2 * d[3] * d[7] * d[26] * d[31] - 2 * d[7] * d[8] * d[18] * d[32] + 2 * d[6] * d[8] * d[21] * d[32] + 2 * d[6] * d[7] * d[22] * d[32] - 2 * std::pow(d[6], 2) * d[23] * d[32] - 4 * d[5] * d[6] * d[24] * d[32] + 2 * d[4] * d[7] * d[24] * d[32] + 2 * d[3] * d[8] * d[24] * d[32] + 2 * d[4] * d[6] * d[25] * d[32] - 2 * d[0] * d[8] * d[25] * d[32] + 2 * d[3] * d[6] * d[26] * d[32] - 2 * d[0] * d[7] * d[26] * d[32] + 2 * d[2] * d[6] * d[19] * d[33] - 2 * d[4] * d[8] * d[19] * d[33] + 2 * d[1] * d[6] * d[20] * d[33] - 2 * d[3] * d[7] * d[20] * d[33] - 2 * d[2] * d[7] * d[21] * d[33] + 2 * d[5] * d[8] * d[21] * d[33] + 2 * d[5] * d[7] * d[22] * d[33] - 2 * d[1] * d[8] * d[22] * d[33] - 4 * d[5] * d[6] * d[23] * d[33] + 2 * d[4] * d[7] * d[23] * d[33] + 2 * d[3] * d[8] * d[23] * d[33] + 2 * d[1] * d[2] * d[24] * d[33] - 2 * std::pow(d[5], 2) * d[24] * d[33] - 2 * d[2] * d[3] * d[25] * d[33] + 2 * d[4] * d[5] * d[25] * d[33] - 2 * d[1] * d[4] * d[26] * d[33] + 2 * d[3] * d[5] * d[26] * d[33] + 2 * d[2] * d[7] * d[18] * d[34] - 2 * d[5] * d[8] * d[18] * d[34] - 2 * d[3] * d[6] * d[20] * d[34] + 2 * d[0] * d[7] * d[20] * d[34] - 2 * d[2] * d[6] * d[21] * d[34] + 2 * d[4] * d[8] * d[21] * d[34] + 2 * d[5] * d[6] * d[22] * d[34] - 4 * d[4] * d[7] * d[22] * d[34] + 2 * d[3] * d[8] * d[22] * d[34] + 2 * d[4] * d[6] * d[23] * d[34] - 2 * d[0] * d[8] * d[23] * d[34] - 2 * d[2] * d[3] * d[24] * d[34] + 2 * d[4] * d[5] * d[24] * d[34] + 2 * d[0] * d[2] * d[25] * d[34] - 2 * std::pow(d[4], 2) * d[25] * d[34] + 2 * d[3] * d[4] * d[26] * d[34] - 2 * d[0] * d[5] * d[26] * d[34] - 2 * d[5] * d[7] * d[18] * d[35] + 2 * d[1] * d[8] * d[18] * d[35] - 2 * d[4] * d[6] * d[19] * d[35] + 2 * d[0] * d[8] * d[19] * d[35] + 2 * d[5] * d[6] * d[21] * d[35] + 2 * d[4] * d[7] * d[21] * d[35] - 4 * d[3] * d[8] * d[21] * d[35] - 2 * d[1] * d[6] * d[22] * d[35] + 2 * d[3] * d[7] * d[22] * d[35] + 2 * d[3] * d[6] * d[23] * d[35] - 2 * d[0] * d[7] * d[23] * d[35] - 2 * d[1] * d[4] * d[24] * d[35] + 2 * d[3] * d[5] * d[24] * d[35] + 2 * d[3] * d[4] * d[25] * d[35] - 2 * d[0] * d[5] * d[25] * d[35] + 2 * d[0] * d[1] * d[26] * d[35] - 2 * std::pow(d[3], 2) * d[26] * d[35] - d[2] * d[19] * d[27] * d[57] - d[1] * d[20] * d[27] * d[57] + 2 * d[5] * d[23] * d[27] * d[57] - d[2] * d[18] * d[28] * d[57] - d[0] * d[20] * d[28] * d[57] + 2 * d[4] * d[22] * d[28] * d[57] - d[1] * d[18] * d[29] * d[57] - d[0] * d[19] * d[29] * d[57] + 2 * d[3] * d[21] * d[29] * d[57] + 2 * d[3] * d[20] * d[30] * d[57] + 2 * d[2] * d[21] * d[30] * d[57] - 2 * d[5] * d[22] * d[30] * d[57] - 2 * d[4] * d[23] * d[30] * d[57] + 2 * d[4] * d[19] * d[31] * d[57] - 2 * d[5] * d[21] * d[31] * d[57] + 2 * d[1] * d[22] * d[31] * d[57] - 2 * d[3] * d[23] * d[31] * d[57] + 2 * d[5] * d[18] * d[32] * d[57] - 2 * d[4] * d[21] * d[32] * d[57] - 2 * d[3] * d[22] * d[32] * d[57] + 2 * d[0] * d[23] * d[32] * d[57];
    coeffs[165] = std::pow(d[8], 2) * d[27] * d[28] + std::pow(d[7], 2) * d[27] * d[29] + std::pow(d[6], 2) * d[28] * d[29] - 2 * d[6] * d[7] * d[29] * d[30] - std::pow(d[8], 2) * std::pow(d[30], 2) - 2 * d[6] * d[8] * d[28] * d[31] + 2 * d[7] * d[8] * d[30] * d[31] - std::pow(d[7], 2) * std::pow(d[31], 2) - 2 * d[7] * d[8] * d[27] * d[32] + 2 * d[6] * d[8] * d[30] * d[32] + 2 * d[6] * d[7] * d[31] * d[32] - std::pow(d[6], 2) * std::pow(d[32], 2) + 2 * d[2] * d[6] * d[28] * d[33] - 2 * d[4] * d[8] * d[28] * d[33] + 2 * d[1] * d[6] * d[29] * d[33] - 2 * d[3] * d[7] * d[29] * d[33] - 2 * d[2] * d[7] * d[30] * d[33] + 2 * d[5] * d[8] * d[30] * d[33] + 2 * d[5] * d[7] * d[31] * d[33] - 2 * d[1] * d[8] * d[31] * d[33] - 4 * d[5] * d[6] * d[32] * d[33] + 2 * d[4] * d[7] * d[32] * d[33] + 2 * d[3] * d[8] * d[32] * d[33] + d[1] * d[2] * std::pow(d[33], 2) - std::pow(d[5], 2) * std::pow(d[33], 2) + 2 * d[2] * d[7] * d[27] * d[34] - 2 * d[5] * d[8] * d[27] * d[34] - 2 * d[3] * d[6] * d[29] * d[34] + 2 * d[0] * d[7] * d[29] * d[34] - 2 * d[2] * d[6] * d[30] * d[34] + 2 * d[4] * d[8] * d[30] * d[34] + 2 * d[5] * d[6] * d[31] * d[34] - 4 * d[4] * d[7] * d[31] * d[34] + 2 * d[3] * d[8] * d[31] * d[34] + 2 * d[4] * d[6] * d[32] * d[34] - 2 * d[0] * d[8] * d[32] * d[34] - 2 * d[2] * d[3] * d[33] * d[34] + 2 * d[4] * d[5] * d[33] * d[34] + d[0] * d[2] * std::pow(d[34], 2) - std::pow(d[4], 2) * std::pow(d[34], 2) - 2 * d[5] * d[7] * d[27] * d[35] + 2 * d[1] * d[8] * d[27] * d[35] - 2 * d[4] * d[6] * d[28] * d[35] + 2 * d[0] * d[8] * d[28] * d[35] + 2 * d[5] * d[6] * d[30] * d[35] + 2 * d[4] * d[7] * d[30] * d[35] - 4 * d[3] * d[8] * d[30] * d[35] - 2 * d[1] * d[6] * d[31] * d[35] + 2 * d[3] * d[7] * d[31] * d[35] + 2 * d[3] * d[6] * d[32] * d[35] - 2 * d[0] * d[7] * d[32] * d[35] - 2 * d[1] * d[4] * d[33] * d[35] + 2 * d[3] * d[5] * d[33] * d[35] + 2 * d[3] * d[4] * d[34] * d[35] - 2 * d[0] * d[5] * d[34] * d[35] + d[0] * d[1] * std::pow(d[35], 2) - std::pow(d[3], 2) * std::pow(d[35], 2) - d[2] * d[27] * d[28] * d[57] - d[1] * d[27] * d[29] * d[57] - d[0] * d[28] * d[29] * d[57] + 2 * d[3] * d[29] * d[30] * d[57] + d[2] * std::pow(d[30], 2) * d[57] + 2 * d[4] * d[28] * d[31] * d[57] - 2 * d[5] * d[30] * d[31] * d[57] + d[1] * std::pow(d[31], 2) * d[57] + 2 * d[5] * d[27] * d[32] * d[57] - 2 * d[4] * d[30] * d[32] * d[57] - 2 * d[3] * d[31] * d[32] * d[57] + d[0] * std::pow(d[32], 2) * d[57];
    coeffs[166] = std::pow(d[8], 2) * d[10] * d[36] + std::pow(d[7], 2) * d[11] * d[36] - 2 * d[7] * d[8] * d[14] * d[36] + 2 * d[2] * d[7] * d[16] * d[36] - 2 * d[5] * d[8] * d[16] * d[36] - 2 * d[5] * d[7] * d[17] * d[36] + 2 * d[1] * d[8] * d[17] * d[36] + std::pow(d[8], 2) * d[9] * d[37] + std::pow(d[6], 2) * d[11] * d[37] - 2 * d[6] * d[8] * d[13] * d[37] + 2 * d[2] * d[6] * d[15] * d[37] - 2 * d[4] * d[8] * d[15] * d[37] - 2 * d[4] * d[6] * d[17] * d[37] + 2 * d[0] * d[8] * d[17] * d[37] + std::pow(d[7], 2) * d[9] * d[38] + std::pow(d[6], 2) * d[10] * d[38] - 2 * d[6] * d[7] * d[12] * d[38] + 2 * d[1] * d[6] * d[15] * d[38] - 2 * d[3] * d[7] * d[15] * d[38] - 2 * d[3] * d[6] * d[16] * d[38] + 2 * d[0] * d[7] * d[16] * d[38] - 2 * d[6] * d[7] * d[11] * d[39] - 2 * std::pow(d[8], 2) * d[12] * d[39] + 2 * d[7] * d[8] * d[13] * d[39] + 2 * d[6] * d[8] * d[14] * d[39] - 2 * d[2] * d[7] * d[15] * d[39] + 2 * d[5] * d[8] * d[15] * d[39] - 2 * d[2] * d[6] * d[16] * d[39] + 2 * d[4] * d[8] * d[16] * d[39] + 2 * d[5] * d[6] * d[17] * d[39] + 2 * d[4] * d[7] * d[17] * d[39] - 4 * d[3] * d[8] * d[17] * d[39] - 2 * d[6] * d[8] * d[10] * d[40] + 2 * d[7] * d[8] * d[12] * d[40] - 2 * std::pow(d[7], 2) * d[13] * d[40] + 2 * d[6] * d[7] * d[14] * d[40] + 2 * d[5] * d[7] * d[15] * d[40] - 2 * d[1] * d[8] * d[15] * d[40] + 2 * d[5] * d[6] * d[16] * d[40] - 4 * d[4] * d[7] * d[16] * d[40] + 2 * d[3] * d[8] * d[16] * d[40] - 2 * d[1] * d[6] * d[17] * d[40] + 2 * d[3] * d[7] * d[17] * d[40] - 2 * d[7] * d[8] * d[9] * d[41] + 2 * d[6] * d[8] * d[12] * d[41] + 2 * d[6] * d[7] * d[13] * d[41] - 2 * std::pow(d[6], 2) * d[14] * d[41] - 4 * d[5] * d[6] * d[15] * d[41] + 2 * d[4] * d[7] * d[15] * d[41] + 2 * d[3] * d[8] * d[15] * d[41] + 2 * d[4] * d[6] * d[16] * d[41] - 2 * d[0] * d[8] * d[16] * d[41] + 2 * d[3] * d[6] * d[17] * d[41] - 2 * d[0] * d[7] * d[17] * d[41] + 2 * d[2] * d[6] * d[10] * d[42] - 2 * d[4] * d[8] * d[10] * d[42] + 2 * d[1] * d[6] * d[11] * d[42] - 2 * d[3] * d[7] * d[11] * d[42] - 2 * d[2] * d[7] * d[12] * d[42] + 2 * d[5] * d[8] * d[12] * d[42] + 2 * d[5] * d[7] * d[13] * d[42] - 2 * d[1] * d[8] * d[13] * d[42] - 4 * d[5] * d[6] * d[14] * d[42] + 2 * d[4] * d[7] * d[14] * d[42] + 2 * d[3] * d[8] * d[14] * d[42] + 2 * d[1] * d[2] * d[15] * d[42] - 2 * std::pow(d[5], 2) * d[15] * d[42] - 2 * d[2] * d[3] * d[16] * d[42] + 2 * d[4] * d[5] * d[16] * d[42] - 2 * d[1] * d[4] * d[17] * d[42] + 2 * d[3] * d[5] * d[17] * d[42] + 2 * d[2] * d[7] * d[9] * d[43] - 2 * d[5] * d[8] * d[9] * d[43] - 2 * d[3] * d[6] * d[11] * d[43] + 2 * d[0] * d[7] * d[11] * d[43] - 2 * d[2] * d[6] * d[12] * d[43] + 2 * d[4] * d[8] * d[12] * d[43] + 2 * d[5] * d[6] * d[13] * d[43] - 4 * d[4] * d[7] * d[13] * d[43] + 2 * d[3] * d[8] * d[13] * d[43] + 2 * d[4] * d[6] * d[14] * d[43] - 2 * d[0] * d[8] * d[14] * d[43] - 2 * d[2] * d[3] * d[15] * d[43] + 2 * d[4] * d[5] * d[15] * d[43] + 2 * d[0] * d[2] * d[16] * d[43] - 2 * std::pow(d[4], 2) * d[16] * d[43] + 2 * d[3] * d[4] * d[17] * d[43] - 2 * d[0] * d[5] * d[17] * d[43] - 2 * d[5] * d[7] * d[9] * d[44] + 2 * d[1] * d[8] * d[9] * d[44] - 2 * d[4] * d[6] * d[10] * d[44] + 2 * d[0] * d[8] * d[10] * d[44] + 2 * d[5] * d[6] * d[12] * d[44] + 2 * d[4] * d[7] * d[12] * d[44] - 4 * d[3] * d[8] * d[12] * d[44] - 2 * d[1] * d[6] * d[13] * d[44] + 2 * d[3] * d[7] * d[13] * d[44] + 2 * d[3] * d[6] * d[14] * d[44] - 2 * d[0] * d[7] * d[14] * d[44] - 2 * d[1] * d[4] * d[15] * d[44] + 2 * d[3] * d[5] * d[15] * d[44] + 2 * d[3] * d[4] * d[16] * d[44] - 2 * d[0] * d[5] * d[16] * d[44] + 2 * d[0] * d[1] * d[17] * d[44] - 2 * std::pow(d[3], 2) * d[17] * d[44] - d[2] * d[10] * d[36] * d[57] - d[1] * d[11] * d[36] * d[57] + 2 * d[5] * d[14] * d[36] * d[57] - d[2] * d[9] * d[37] * d[57] - d[0] * d[11] * d[37] * d[57] + 2 * d[4] * d[13] * d[37] * d[57] - d[1] * d[9] * d[38] * d[57] - d[0] * d[10] * d[38] * d[57] + 2 * d[3] * d[12] * d[38] * d[57] + 2 * d[3] * d[11] * d[39] * d[57] + 2 * d[2] * d[12] * d[39] * d[57] - 2 * d[5] * d[13] * d[39] * d[57] - 2 * d[4] * d[14] * d[39] * d[57] + 2 * d[4] * d[10] * d[40] * d[57] - 2 * d[5] * d[12] * d[40] * d[57] + 2 * d[1] * d[13] * d[40] * d[57] - 2 * d[3] * d[14] * d[40] * d[57] + 2 * d[5] * d[9] * d[41] * d[57] - 2 * d[4] * d[12] * d[41] * d[57] - 2 * d[3] * d[13] * d[41] * d[57] + 2 * d[0] * d[14] * d[41] * d[57];
    coeffs[167] = std::pow(d[8], 2) * d[19] * d[36] + std::pow(d[7], 2) * d[20] * d[36] - 2 * d[7] * d[8] * d[23] * d[36] + 2 * d[2] * d[7] * d[25] * d[36] - 2 * d[5] * d[8] * d[25] * d[36] - 2 * d[5] * d[7] * d[26] * d[36] + 2 * d[1] * d[8] * d[26] * d[36] + std::pow(d[8], 2) * d[18] * d[37] + std::pow(d[6], 2) * d[20] * d[37] - 2 * d[6] * d[8] * d[22] * d[37] + 2 * d[2] * d[6] * d[24] * d[37] - 2 * d[4] * d[8] * d[24] * d[37] - 2 * d[4] * d[6] * d[26] * d[37] + 2 * d[0] * d[8] * d[26] * d[37] + std::pow(d[7], 2) * d[18] * d[38] + std::pow(d[6], 2) * d[19] * d[38] - 2 * d[6] * d[7] * d[21] * d[38] + 2 * d[1] * d[6] * d[24] * d[38] - 2 * d[3] * d[7] * d[24] * d[38] - 2 * d[3] * d[6] * d[25] * d[38] + 2 * d[0] * d[7] * d[25] * d[38] - 2 * d[6] * d[7] * d[20] * d[39] - 2 * std::pow(d[8], 2) * d[21] * d[39] + 2 * d[7] * d[8] * d[22] * d[39] + 2 * d[6] * d[8] * d[23] * d[39] - 2 * d[2] * d[7] * d[24] * d[39] + 2 * d[5] * d[8] * d[24] * d[39] - 2 * d[2] * d[6] * d[25] * d[39] + 2 * d[4] * d[8] * d[25] * d[39] + 2 * d[5] * d[6] * d[26] * d[39] + 2 * d[4] * d[7] * d[26] * d[39] - 4 * d[3] * d[8] * d[26] * d[39] - 2 * d[6] * d[8] * d[19] * d[40] + 2 * d[7] * d[8] * d[21] * d[40] - 2 * std::pow(d[7], 2) * d[22] * d[40] + 2 * d[6] * d[7] * d[23] * d[40] + 2 * d[5] * d[7] * d[24] * d[40] - 2 * d[1] * d[8] * d[24] * d[40] + 2 * d[5] * d[6] * d[25] * d[40] - 4 * d[4] * d[7] * d[25] * d[40] + 2 * d[3] * d[8] * d[25] * d[40] - 2 * d[1] * d[6] * d[26] * d[40] + 2 * d[3] * d[7] * d[26] * d[40] - 2 * d[7] * d[8] * d[18] * d[41] + 2 * d[6] * d[8] * d[21] * d[41] + 2 * d[6] * d[7] * d[22] * d[41] - 2 * std::pow(d[6], 2) * d[23] * d[41] - 4 * d[5] * d[6] * d[24] * d[41] + 2 * d[4] * d[7] * d[24] * d[41] + 2 * d[3] * d[8] * d[24] * d[41] + 2 * d[4] * d[6] * d[25] * d[41] - 2 * d[0] * d[8] * d[25] * d[41] + 2 * d[3] * d[6] * d[26] * d[41] - 2 * d[0] * d[7] * d[26] * d[41] + 2 * d[2] * d[6] * d[19] * d[42] - 2 * d[4] * d[8] * d[19] * d[42] + 2 * d[1] * d[6] * d[20] * d[42] - 2 * d[3] * d[7] * d[20] * d[42] - 2 * d[2] * d[7] * d[21] * d[42] + 2 * d[5] * d[8] * d[21] * d[42] + 2 * d[5] * d[7] * d[22] * d[42] - 2 * d[1] * d[8] * d[22] * d[42] - 4 * d[5] * d[6] * d[23] * d[42] + 2 * d[4] * d[7] * d[23] * d[42] + 2 * d[3] * d[8] * d[23] * d[42] + 2 * d[1] * d[2] * d[24] * d[42] - 2 * std::pow(d[5], 2) * d[24] * d[42] - 2 * d[2] * d[3] * d[25] * d[42] + 2 * d[4] * d[5] * d[25] * d[42] - 2 * d[1] * d[4] * d[26] * d[42] + 2 * d[3] * d[5] * d[26] * d[42] + 2 * d[2] * d[7] * d[18] * d[43] - 2 * d[5] * d[8] * d[18] * d[43] - 2 * d[3] * d[6] * d[20] * d[43] + 2 * d[0] * d[7] * d[20] * d[43] - 2 * d[2] * d[6] * d[21] * d[43] + 2 * d[4] * d[8] * d[21] * d[43] + 2 * d[5] * d[6] * d[22] * d[43] - 4 * d[4] * d[7] * d[22] * d[43] + 2 * d[3] * d[8] * d[22] * d[43] + 2 * d[4] * d[6] * d[23] * d[43] - 2 * d[0] * d[8] * d[23] * d[43] - 2 * d[2] * d[3] * d[24] * d[43] + 2 * d[4] * d[5] * d[24] * d[43] + 2 * d[0] * d[2] * d[25] * d[43] - 2 * std::pow(d[4], 2) * d[25] * d[43] + 2 * d[3] * d[4] * d[26] * d[43] - 2 * d[0] * d[5] * d[26] * d[43] - 2 * d[5] * d[7] * d[18] * d[44] + 2 * d[1] * d[8] * d[18] * d[44] - 2 * d[4] * d[6] * d[19] * d[44] + 2 * d[0] * d[8] * d[19] * d[44] + 2 * d[5] * d[6] * d[21] * d[44] + 2 * d[4] * d[7] * d[21] * d[44] - 4 * d[3] * d[8] * d[21] * d[44] - 2 * d[1] * d[6] * d[22] * d[44] + 2 * d[3] * d[7] * d[22] * d[44] + 2 * d[3] * d[6] * d[23] * d[44] - 2 * d[0] * d[7] * d[23] * d[44] - 2 * d[1] * d[4] * d[24] * d[44] + 2 * d[3] * d[5] * d[24] * d[44] + 2 * d[3] * d[4] * d[25] * d[44] - 2 * d[0] * d[5] * d[25] * d[44] + 2 * d[0] * d[1] * d[26] * d[44] - 2 * std::pow(d[3], 2) * d[26] * d[44] - d[2] * d[19] * d[36] * d[57] - d[1] * d[20] * d[36] * d[57] + 2 * d[5] * d[23] * d[36] * d[57] - d[2] * d[18] * d[37] * d[57] - d[0] * d[20] * d[37] * d[57] + 2 * d[4] * d[22] * d[37] * d[57] - d[1] * d[18] * d[38] * d[57] - d[0] * d[19] * d[38] * d[57] + 2 * d[3] * d[21] * d[38] * d[57] + 2 * d[3] * d[20] * d[39] * d[57] + 2 * d[2] * d[21] * d[39] * d[57] - 2 * d[5] * d[22] * d[39] * d[57] - 2 * d[4] * d[23] * d[39] * d[57] + 2 * d[4] * d[19] * d[40] * d[57] - 2 * d[5] * d[21] * d[40] * d[57] + 2 * d[1] * d[22] * d[40] * d[57] - 2 * d[3] * d[23] * d[40] * d[57] + 2 * d[5] * d[18] * d[41] * d[57] - 2 * d[4] * d[21] * d[41] * d[57] - 2 * d[3] * d[22] * d[41] * d[57] + 2 * d[0] * d[23] * d[41] * d[57];
    coeffs[168] = std::pow(d[8], 2) * d[28] * d[36] + std::pow(d[7], 2) * d[29] * d[36] - 2 * d[7] * d[8] * d[32] * d[36] + 2 * d[2] * d[7] * d[34] * d[36] - 2 * d[5] * d[8] * d[34] * d[36] - 2 * d[5] * d[7] * d[35] * d[36] + 2 * d[1] * d[8] * d[35] * d[36] + std::pow(d[8], 2) * d[27] * d[37] + std::pow(d[6], 2) * d[29] * d[37] - 2 * d[6] * d[8] * d[31] * d[37] + 2 * d[2] * d[6] * d[33] * d[37] - 2 * d[4] * d[8] * d[33] * d[37] - 2 * d[4] * d[6] * d[35] * d[37] + 2 * d[0] * d[8] * d[35] * d[37] + std::pow(d[7], 2) * d[27] * d[38] + std::pow(d[6], 2) * d[28] * d[38] - 2 * d[6] * d[7] * d[30] * d[38] + 2 * d[1] * d[6] * d[33] * d[38] - 2 * d[3] * d[7] * d[33] * d[38] - 2 * d[3] * d[6] * d[34] * d[38] + 2 * d[0] * d[7] * d[34] * d[38] - 2 * d[6] * d[7] * d[29] * d[39] - 2 * std::pow(d[8], 2) * d[30] * d[39] + 2 * d[7] * d[8] * d[31] * d[39] + 2 * d[6] * d[8] * d[32] * d[39] - 2 * d[2] * d[7] * d[33] * d[39] + 2 * d[5] * d[8] * d[33] * d[39] - 2 * d[2] * d[6] * d[34] * d[39] + 2 * d[4] * d[8] * d[34] * d[39] + 2 * d[5] * d[6] * d[35] * d[39] + 2 * d[4] * d[7] * d[35] * d[39] - 4 * d[3] * d[8] * d[35] * d[39] - 2 * d[6] * d[8] * d[28] * d[40] + 2 * d[7] * d[8] * d[30] * d[40] - 2 * std::pow(d[7], 2) * d[31] * d[40] + 2 * d[6] * d[7] * d[32] * d[40] + 2 * d[5] * d[7] * d[33] * d[40] - 2 * d[1] * d[8] * d[33] * d[40] + 2 * d[5] * d[6] * d[34] * d[40] - 4 * d[4] * d[7] * d[34] * d[40] + 2 * d[3] * d[8] * d[34] * d[40] - 2 * d[1] * d[6] * d[35] * d[40] + 2 * d[3] * d[7] * d[35] * d[40] - 2 * d[7] * d[8] * d[27] * d[41] + 2 * d[6] * d[8] * d[30] * d[41] + 2 * d[6] * d[7] * d[31] * d[41] - 2 * std::pow(d[6], 2) * d[32] * d[41] - 4 * d[5] * d[6] * d[33] * d[41] + 2 * d[4] * d[7] * d[33] * d[41] + 2 * d[3] * d[8] * d[33] * d[41] + 2 * d[4] * d[6] * d[34] * d[41] - 2 * d[0] * d[8] * d[34] * d[41] + 2 * d[3] * d[6] * d[35] * d[41] - 2 * d[0] * d[7] * d[35] * d[41] + 2 * d[2] * d[6] * d[28] * d[42] - 2 * d[4] * d[8] * d[28] * d[42] + 2 * d[1] * d[6] * d[29] * d[42] - 2 * d[3] * d[7] * d[29] * d[42] - 2 * d[2] * d[7] * d[30] * d[42] + 2 * d[5] * d[8] * d[30] * d[42] + 2 * d[5] * d[7] * d[31] * d[42] - 2 * d[1] * d[8] * d[31] * d[42] - 4 * d[5] * d[6] * d[32] * d[42] + 2 * d[4] * d[7] * d[32] * d[42] + 2 * d[3] * d[8] * d[32] * d[42] + 2 * d[1] * d[2] * d[33] * d[42] - 2 * std::pow(d[5], 2) * d[33] * d[42] - 2 * d[2] * d[3] * d[34] * d[42] + 2 * d[4] * d[5] * d[34] * d[42] - 2 * d[1] * d[4] * d[35] * d[42] + 2 * d[3] * d[5] * d[35] * d[42] + 2 * d[2] * d[7] * d[27] * d[43] - 2 * d[5] * d[8] * d[27] * d[43] - 2 * d[3] * d[6] * d[29] * d[43] + 2 * d[0] * d[7] * d[29] * d[43] - 2 * d[2] * d[6] * d[30] * d[43] + 2 * d[4] * d[8] * d[30] * d[43] + 2 * d[5] * d[6] * d[31] * d[43] - 4 * d[4] * d[7] * d[31] * d[43] + 2 * d[3] * d[8] * d[31] * d[43] + 2 * d[4] * d[6] * d[32] * d[43] - 2 * d[0] * d[8] * d[32] * d[43] - 2 * d[2] * d[3] * d[33] * d[43] + 2 * d[4] * d[5] * d[33] * d[43] + 2 * d[0] * d[2] * d[34] * d[43] - 2 * std::pow(d[4], 2) * d[34] * d[43] + 2 * d[3] * d[4] * d[35] * d[43] - 2 * d[0] * d[5] * d[35] * d[43] - 2 * d[5] * d[7] * d[27] * d[44] + 2 * d[1] * d[8] * d[27] * d[44] - 2 * d[4] * d[6] * d[28] * d[44] + 2 * d[0] * d[8] * d[28] * d[44] + 2 * d[5] * d[6] * d[30] * d[44] + 2 * d[4] * d[7] * d[30] * d[44] - 4 * d[3] * d[8] * d[30] * d[44] - 2 * d[1] * d[6] * d[31] * d[44] + 2 * d[3] * d[7] * d[31] * d[44] + 2 * d[3] * d[6] * d[32] * d[44] - 2 * d[0] * d[7] * d[32] * d[44] - 2 * d[1] * d[4] * d[33] * d[44] + 2 * d[3] * d[5] * d[33] * d[44] + 2 * d[3] * d[4] * d[34] * d[44] - 2 * d[0] * d[5] * d[34] * d[44] + 2 * d[0] * d[1] * d[35] * d[44] - 2 * std::pow(d[3], 2) * d[35] * d[44] - d[2] * d[28] * d[36] * d[57] - d[1] * d[29] * d[36] * d[57] + 2 * d[5] * d[32] * d[36] * d[57] - d[2] * d[27] * d[37] * d[57] - d[0] * d[29] * d[37] * d[57] + 2 * d[4] * d[31] * d[37] * d[57] - d[1] * d[27] * d[38] * d[57] - d[0] * d[28] * d[38] * d[57] + 2 * d[3] * d[30] * d[38] * d[57] + 2 * d[3] * d[29] * d[39] * d[57] + 2 * d[2] * d[30] * d[39] * d[57] - 2 * d[5] * d[31] * d[39] * d[57] - 2 * d[4] * d[32] * d[39] * d[57] + 2 * d[4] * d[28] * d[40] * d[57] - 2 * d[5] * d[30] * d[40] * d[57] + 2 * d[1] * d[31] * d[40] * d[57] - 2 * d[3] * d[32] * d[40] * d[57] + 2 * d[5] * d[27] * d[41] * d[57] - 2 * d[4] * d[30] * d[41] * d[57] - 2 * d[3] * d[31] * d[41] * d[57] + 2 * d[0] * d[32] * d[41] * d[57];
    coeffs[169] = std::pow(d[8], 2) * d[36] * d[37] + std::pow(d[7], 2) * d[36] * d[38] + std::pow(d[6], 2) * d[37] * d[38] - 2 * d[6] * d[7] * d[38] * d[39] - std::pow(d[8], 2) * std::pow(d[39], 2) - 2 * d[6] * d[8] * d[37] * d[40] + 2 * d[7] * d[8] * d[39] * d[40] - std::pow(d[7], 2) * std::pow(d[40], 2) - 2 * d[7] * d[8] * d[36] * d[41] + 2 * d[6] * d[8] * d[39] * d[41] + 2 * d[6] * d[7] * d[40] * d[41] - std::pow(d[6], 2) * std::pow(d[41], 2) + 2 * d[2] * d[6] * d[37] * d[42] - 2 * d[4] * d[8] * d[37] * d[42] + 2 * d[1] * d[6] * d[38] * d[42] - 2 * d[3] * d[7] * d[38] * d[42] - 2 * d[2] * d[7] * d[39] * d[42] + 2 * d[5] * d[8] * d[39] * d[42] + 2 * d[5] * d[7] * d[40] * d[42] - 2 * d[1] * d[8] * d[40] * d[42] - 4 * d[5] * d[6] * d[41] * d[42] + 2 * d[4] * d[7] * d[41] * d[42] + 2 * d[3] * d[8] * d[41] * d[42] + d[1] * d[2] * std::pow(d[42], 2) - std::pow(d[5], 2) * std::pow(d[42], 2) + 2 * d[2] * d[7] * d[36] * d[43] - 2 * d[5] * d[8] * d[36] * d[43] - 2 * d[3] * d[6] * d[38] * d[43] + 2 * d[0] * d[7] * d[38] * d[43] - 2 * d[2] * d[6] * d[39] * d[43] + 2 * d[4] * d[8] * d[39] * d[43] + 2 * d[5] * d[6] * d[40] * d[43] - 4 * d[4] * d[7] * d[40] * d[43] + 2 * d[3] * d[8] * d[40] * d[43] + 2 * d[4] * d[6] * d[41] * d[43] - 2 * d[0] * d[8] * d[41] * d[43] - 2 * d[2] * d[3] * d[42] * d[43] + 2 * d[4] * d[5] * d[42] * d[43] + d[0] * d[2] * std::pow(d[43], 2) - std::pow(d[4], 2) * std::pow(d[43], 2) - 2 * d[5] * d[7] * d[36] * d[44] + 2 * d[1] * d[8] * d[36] * d[44] - 2 * d[4] * d[6] * d[37] * d[44] + 2 * d[0] * d[8] * d[37] * d[44] + 2 * d[5] * d[6] * d[39] * d[44] + 2 * d[4] * d[7] * d[39] * d[44] - 4 * d[3] * d[8] * d[39] * d[44] - 2 * d[1] * d[6] * d[40] * d[44] + 2 * d[3] * d[7] * d[40] * d[44] + 2 * d[3] * d[6] * d[41] * d[44] - 2 * d[0] * d[7] * d[41] * d[44] - 2 * d[1] * d[4] * d[42] * d[44] + 2 * d[3] * d[5] * d[42] * d[44] + 2 * d[3] * d[4] * d[43] * d[44] - 2 * d[0] * d[5] * d[43] * d[44] + d[0] * d[1] * std::pow(d[44], 2) - std::pow(d[3], 2) * std::pow(d[44], 2) - d[2] * d[36] * d[37] * d[57] - d[1] * d[36] * d[38] * d[57] - d[0] * d[37] * d[38] * d[57] + 2 * d[3] * d[38] * d[39] * d[57] + d[2] * std::pow(d[39], 2) * d[57] + 2 * d[4] * d[37] * d[40] * d[57] - 2 * d[5] * d[39] * d[40] * d[57] + d[1] * std::pow(d[40], 2) * d[57] + 2 * d[5] * d[36] * d[41] * d[57] - 2 * d[4] * d[39] * d[41] * d[57] - 2 * d[3] * d[40] * d[41] * d[57] + d[0] * std::pow(d[41], 2) * d[57];
    coeffs[170] = d[2] * std::pow(d[7], 2) * d[9] - 2 * d[5] * d[7] * d[8] * d[9] + d[1] * std::pow(d[8], 2) * d[9] + d[2] * std::pow(d[6], 2) * d[10] - 2 * d[4] * d[6] * d[8] * d[10] + d[0] * std::pow(d[8], 2) * d[10] + d[1] * std::pow(d[6], 2) * d[11] - 2 * d[3] * d[6] * d[7] * d[11] + d[0] * std::pow(d[7], 2) * d[11] - 2 * d[2] * d[6] * d[7] * d[12] + 2 * d[5] * d[6] * d[8] * d[12] + 2 * d[4] * d[7] * d[8] * d[12] - 2 * d[3] * std::pow(d[8], 2) * d[12] + 2 * d[5] * d[6] * d[7] * d[13] - 2 * d[4] * std::pow(d[7], 2) * d[13] - 2 * d[1] * d[6] * d[8] * d[13] + 2 * d[3] * d[7] * d[8] * d[13] - 2 * d[5] * std::pow(d[6], 2) * d[14] + 2 * d[4] * d[6] * d[7] * d[14] + 2 * d[3] * d[6] * d[8] * d[14] - 2 * d[0] * d[7] * d[8] * d[14] + 2 * d[1] * d[2] * d[6] * d[15] - 2 * std::pow(d[5], 2) * d[6] * d[15] - 2 * d[2] * d[3] * d[7] * d[15] + 2 * d[4] * d[5] * d[7] * d[15] - 2 * d[1] * d[4] * d[8] * d[15] + 2 * d[3] * d[5] * d[8] * d[15] - 2 * d[2] * d[3] * d[6] * d[16] + 2 * d[4] * d[5] * d[6] * d[16] + 2 * d[0] * d[2] * d[7] * d[16] - 2 * std::pow(d[4], 2) * d[7] * d[16] + 2 * d[3] * d[4] * d[8] * d[16] - 2 * d[0] * d[5] * d[8] * d[16] - 2 * d[1] * d[4] * d[6] * d[17] + 2 * d[3] * d[5] * d[6] * d[17] + 2 * d[3] * d[4] * d[7] * d[17] - 2 * d[0] * d[5] * d[7] * d[17] + 2 * d[0] * d[1] * d[8] * d[17] - 2 * std::pow(d[3], 2) * d[8] * d[17] - d[1] * d[2] * d[9] * d[57] + std::pow(d[5], 2) * d[9] * d[57] - d[0] * d[2] * d[10] * d[57] + std::pow(d[4], 2) * d[10] * d[57] - d[0] * d[1] * d[11] * d[57] + std::pow(d[3], 2) * d[11] * d[57] + 2 * d[2] * d[3] * d[12] * d[57] - 2 * d[4] * d[5] * d[12] * d[57] + 2 * d[1] * d[4] * d[13] * d[57] - 2 * d[3] * d[5] * d[13] * d[57] - 2 * d[3] * d[4] * d[14] * d[57] + 2 * d[0] * d[5] * d[14] * d[57];
    coeffs[171] = d[2] * std::pow(d[7], 2) * d[18] - 2 * d[5] * d[7] * d[8] * d[18] + d[1] * std::pow(d[8], 2) * d[18] + d[2] * std::pow(d[6], 2) * d[19] - 2 * d[4] * d[6] * d[8] * d[19] + d[0] * std::pow(d[8], 2) * d[19] + d[1] * std::pow(d[6], 2) * d[20] - 2 * d[3] * d[6] * d[7] * d[20] + d[0] * std::pow(d[7], 2) * d[20] - 2 * d[2] * d[6] * d[7] * d[21] + 2 * d[5] * d[6] * d[8] * d[21] + 2 * d[4] * d[7] * d[8] * d[21] - 2 * d[3] * std::pow(d[8], 2) * d[21] + 2 * d[5] * d[6] * d[7] * d[22] - 2 * d[4] * std::pow(d[7], 2) * d[22] - 2 * d[1] * d[6] * d[8] * d[22] + 2 * d[3] * d[7] * d[8] * d[22] - 2 * d[5] * std::pow(d[6], 2) * d[23] + 2 * d[4] * d[6] * d[7] * d[23] + 2 * d[3] * d[6] * d[8] * d[23] - 2 * d[0] * d[7] * d[8] * d[23] + 2 * d[1] * d[2] * d[6] * d[24] - 2 * std::pow(d[5], 2) * d[6] * d[24] - 2 * d[2] * d[3] * d[7] * d[24] + 2 * d[4] * d[5] * d[7] * d[24] - 2 * d[1] * d[4] * d[8] * d[24] + 2 * d[3] * d[5] * d[8] * d[24] - 2 * d[2] * d[3] * d[6] * d[25] + 2 * d[4] * d[5] * d[6] * d[25] + 2 * d[0] * d[2] * d[7] * d[25] - 2 * std::pow(d[4], 2) * d[7] * d[25] + 2 * d[3] * d[4] * d[8] * d[25] - 2 * d[0] * d[5] * d[8] * d[25] - 2 * d[1] * d[4] * d[6] * d[26] + 2 * d[3] * d[5] * d[6] * d[26] + 2 * d[3] * d[4] * d[7] * d[26] - 2 * d[0] * d[5] * d[7] * d[26] + 2 * d[0] * d[1] * d[8] * d[26] - 2 * std::pow(d[3], 2) * d[8] * d[26] - d[1] * d[2] * d[18] * d[57] + std::pow(d[5], 2) * d[18] * d[57] - d[0] * d[2] * d[19] * d[57] + std::pow(d[4], 2) * d[19] * d[57] - d[0] * d[1] * d[20] * d[57] + std::pow(d[3], 2) * d[20] * d[57] + 2 * d[2] * d[3] * d[21] * d[57] - 2 * d[4] * d[5] * d[21] * d[57] + 2 * d[1] * d[4] * d[22] * d[57] - 2 * d[3] * d[5] * d[22] * d[57] - 2 * d[3] * d[4] * d[23] * d[57] + 2 * d[0] * d[5] * d[23] * d[57];
    coeffs[172] = d[2] * std::pow(d[7], 2) * d[27] - 2 * d[5] * d[7] * d[8] * d[27] + d[1] * std::pow(d[8], 2) * d[27] + d[2] * std::pow(d[6], 2) * d[28] - 2 * d[4] * d[6] * d[8] * d[28] + d[0] * std::pow(d[8], 2) * d[28] + d[1] * std::pow(d[6], 2) * d[29] - 2 * d[3] * d[6] * d[7] * d[29] + d[0] * std::pow(d[7], 2) * d[29] - 2 * d[2] * d[6] * d[7] * d[30] + 2 * d[5] * d[6] * d[8] * d[30] + 2 * d[4] * d[7] * d[8] * d[30] - 2 * d[3] * std::pow(d[8], 2) * d[30] + 2 * d[5] * d[6] * d[7] * d[31] - 2 * d[4] * std::pow(d[7], 2) * d[31] - 2 * d[1] * d[6] * d[8] * d[31] + 2 * d[3] * d[7] * d[8] * d[31] - 2 * d[5] * std::pow(d[6], 2) * d[32] + 2 * d[4] * d[6] * d[7] * d[32] + 2 * d[3] * d[6] * d[8] * d[32] - 2 * d[0] * d[7] * d[8] * d[32] + 2 * d[1] * d[2] * d[6] * d[33] - 2 * std::pow(d[5], 2) * d[6] * d[33] - 2 * d[2] * d[3] * d[7] * d[33] + 2 * d[4] * d[5] * d[7] * d[33] - 2 * d[1] * d[4] * d[8] * d[33] + 2 * d[3] * d[5] * d[8] * d[33] - 2 * d[2] * d[3] * d[6] * d[34] + 2 * d[4] * d[5] * d[6] * d[34] + 2 * d[0] * d[2] * d[7] * d[34] - 2 * std::pow(d[4], 2) * d[7] * d[34] + 2 * d[3] * d[4] * d[8] * d[34] - 2 * d[0] * d[5] * d[8] * d[34] - 2 * d[1] * d[4] * d[6] * d[35] + 2 * d[3] * d[5] * d[6] * d[35] + 2 * d[3] * d[4] * d[7] * d[35] - 2 * d[0] * d[5] * d[7] * d[35] + 2 * d[0] * d[1] * d[8] * d[35] - 2 * std::pow(d[3], 2) * d[8] * d[35] - d[1] * d[2] * d[27] * d[57] + std::pow(d[5], 2) * d[27] * d[57] - d[0] * d[2] * d[28] * d[57] + std::pow(d[4], 2) * d[28] * d[57] - d[0] * d[1] * d[29] * d[57] + std::pow(d[3], 2) * d[29] * d[57] + 2 * d[2] * d[3] * d[30] * d[57] - 2 * d[4] * d[5] * d[30] * d[57] + 2 * d[1] * d[4] * d[31] * d[57] - 2 * d[3] * d[5] * d[31] * d[57] - 2 * d[3] * d[4] * d[32] * d[57] + 2 * d[0] * d[5] * d[32] * d[57];
    coeffs[173] = d[2] * std::pow(d[7], 2) * d[36] - 2 * d[5] * d[7] * d[8] * d[36] + d[1] * std::pow(d[8], 2) * d[36] + d[2] * std::pow(d[6], 2) * d[37] - 2 * d[4] * d[6] * d[8] * d[37] + d[0] * std::pow(d[8], 2) * d[37] + d[1] * std::pow(d[6], 2) * d[38] - 2 * d[3] * d[6] * d[7] * d[38] + d[0] * std::pow(d[7], 2) * d[38] - 2 * d[2] * d[6] * d[7] * d[39] + 2 * d[5] * d[6] * d[8] * d[39] + 2 * d[4] * d[7] * d[8] * d[39] - 2 * d[3] * std::pow(d[8], 2) * d[39] + 2 * d[5] * d[6] * d[7] * d[40] - 2 * d[4] * std::pow(d[7], 2) * d[40] - 2 * d[1] * d[6] * d[8] * d[40] + 2 * d[3] * d[7] * d[8] * d[40] - 2 * d[5] * std::pow(d[6], 2) * d[41] + 2 * d[4] * d[6] * d[7] * d[41] + 2 * d[3] * d[6] * d[8] * d[41] - 2 * d[0] * d[7] * d[8] * d[41] + 2 * d[1] * d[2] * d[6] * d[42] - 2 * std::pow(d[5], 2) * d[6] * d[42] - 2 * d[2] * d[3] * d[7] * d[42] + 2 * d[4] * d[5] * d[7] * d[42] - 2 * d[1] * d[4] * d[8] * d[42] + 2 * d[3] * d[5] * d[8] * d[42] - 2 * d[2] * d[3] * d[6] * d[43] + 2 * d[4] * d[5] * d[6] * d[43] + 2 * d[0] * d[2] * d[7] * d[43] - 2 * std::pow(d[4], 2) * d[7] * d[43] + 2 * d[3] * d[4] * d[8] * d[43] - 2 * d[0] * d[5] * d[8] * d[43] - 2 * d[1] * d[4] * d[6] * d[44] + 2 * d[3] * d[5] * d[6] * d[44] + 2 * d[3] * d[4] * d[7] * d[44] - 2 * d[0] * d[5] * d[7] * d[44] + 2 * d[0] * d[1] * d[8] * d[44] - 2 * std::pow(d[3], 2) * d[8] * d[44] - d[1] * d[2] * d[36] * d[57] + std::pow(d[5], 2) * d[36] * d[57] - d[0] * d[2] * d[37] * d[57] + std::pow(d[4], 2) * d[37] * d[57] - d[0] * d[1] * d[38] * d[57] + std::pow(d[3], 2) * d[38] * d[57] + 2 * d[2] * d[3] * d[39] * d[57] - 2 * d[4] * d[5] * d[39] * d[57] + 2 * d[1] * d[4] * d[40] * d[57] - 2 * d[3] * d[5] * d[40] * d[57] - 2 * d[3] * d[4] * d[41] * d[57] + 2 * d[0] * d[5] * d[41] * d[57];
    coeffs[174] = d[1] * d[2] * std::pow(d[6], 2) - std::pow(d[5], 2) * std::pow(d[6], 2) - 2 * d[2] * d[3] * d[6] * d[7] + 2 * d[4] * d[5] * d[6] * d[7] + d[0] * d[2] * std::pow(d[7], 2) - std::pow(d[4], 2) * std::pow(d[7], 2) - 2 * d[1] * d[4] * d[6] * d[8] + 2 * d[3] * d[5] * d[6] * d[8] + 2 * d[3] * d[4] * d[7] * d[8] - 2 * d[0] * d[5] * d[7] * d[8] + d[0] * d[1] * std::pow(d[8], 2) - std::pow(d[3], 2) * std::pow(d[8], 2) - d[0] * d[1] * d[2] * d[57] + d[2] * std::pow(d[3], 2) * d[57] + d[1] * std::pow(d[4], 2) * d[57] - 2 * d[3] * d[4] * d[5] * d[57] + d[0] * std::pow(d[5], 2) * d[57];
    coeffs[175] = d[9] * d[10] * d[11] - d[11] * std::pow(d[12], 2) - d[10] * std::pow(d[13], 2) + 2 * d[12] * d[13] * d[14] - d[9] * std::pow(d[14], 2);
    coeffs[176] = d[10] * d[11] * d[18] - std::pow(d[14], 2) * d[18] + d[9] * d[11] * d[19] - std::pow(d[13], 2) * d[19] + d[9] * d[10] * d[20] - std::pow(d[12], 2) * d[20] - 2 * d[11] * d[12] * d[21] + 2 * d[13] * d[14] * d[21] - 2 * d[10] * d[13] * d[22] + 2 * d[12] * d[14] * d[22] + 2 * d[12] * d[13] * d[23] - 2 * d[9] * d[14] * d[23];
    coeffs[177] = d[11] * d[18] * d[19] + d[10] * d[18] * d[20] + d[9] * d[19] * d[20] - 2 * d[12] * d[20] * d[21] - d[11] * std::pow(d[21], 2) - 2 * d[13] * d[19] * d[22] + 2 * d[14] * d[21] * d[22] - d[10] * std::pow(d[22], 2) - 2 * d[14] * d[18] * d[23] + 2 * d[13] * d[21] * d[23] + 2 * d[12] * d[22] * d[23] - d[9] * std::pow(d[23], 2);
    coeffs[178] = d[18] * d[19] * d[20] - d[20] * std::pow(d[21], 2) - d[19] * std::pow(d[22], 2) + 2 * d[21] * d[22] * d[23] - d[18] * std::pow(d[23], 2);
    coeffs[179] = d[10] * d[11] * d[27] - std::pow(d[14], 2) * d[27] + d[9] * d[11] * d[28] - std::pow(d[13], 2) * d[28] + d[9] * d[10] * d[29] - std::pow(d[12], 2) * d[29] - 2 * d[11] * d[12] * d[30] + 2 * d[13] * d[14] * d[30] - 2 * d[10] * d[13] * d[31] + 2 * d[12] * d[14] * d[31] + 2 * d[12] * d[13] * d[32] - 2 * d[9] * d[14] * d[32];
    coeffs[180] = d[11] * d[19] * d[27] + d[10] * d[20] * d[27] - 2 * d[14] * d[23] * d[27] + d[11] * d[18] * d[28] + d[9] * d[20] * d[28] - 2 * d[13] * d[22] * d[28] + d[10] * d[18] * d[29] + d[9] * d[19] * d[29] - 2 * d[12] * d[21] * d[29] - 2 * d[12] * d[20] * d[30] - 2 * d[11] * d[21] * d[30] + 2 * d[14] * d[22] * d[30] + 2 * d[13] * d[23] * d[30] - 2 * d[13] * d[19] * d[31] + 2 * d[14] * d[21] * d[31] - 2 * d[10] * d[22] * d[31] + 2 * d[12] * d[23] * d[31] - 2 * d[14] * d[18] * d[32] + 2 * d[13] * d[21] * d[32] + 2 * d[12] * d[22] * d[32] - 2 * d[9] * d[23] * d[32];
    coeffs[181] = d[19] * d[20] * d[27] - std::pow(d[23], 2) * d[27] + d[18] * d[20] * d[28] - std::pow(d[22], 2) * d[28] + d[18] * d[19] * d[29] - std::pow(d[21], 2) * d[29] - 2 * d[20] * d[21] * d[30] + 2 * d[22] * d[23] * d[30] - 2 * d[19] * d[22] * d[31] + 2 * d[21] * d[23] * d[31] + 2 * d[21] * d[22] * d[32] - 2 * d[18] * d[23] * d[32];
    coeffs[182] = d[11] * d[27] * d[28] + d[10] * d[27] * d[29] + d[9] * d[28] * d[29] - 2 * d[12] * d[29] * d[30] - d[11] * std::pow(d[30], 2) - 2 * d[13] * d[28] * d[31] + 2 * d[14] * d[30] * d[31] - d[10] * std::pow(d[31], 2) - 2 * d[14] * d[27] * d[32] + 2 * d[13] * d[30] * d[32] + 2 * d[12] * d[31] * d[32] - d[9] * std::pow(d[32], 2);
    coeffs[183] = d[20] * d[27] * d[28] + d[19] * d[27] * d[29] + d[18] * d[28] * d[29] - 2 * d[21] * d[29] * d[30] - d[20] * std::pow(d[30], 2) - 2 * d[22] * d[28] * d[31] + 2 * d[23] * d[30] * d[31] - d[19] * std::pow(d[31], 2) - 2 * d[23] * d[27] * d[32] + 2 * d[22] * d[30] * d[32] + 2 * d[21] * d[31] * d[32] - d[18] * std::pow(d[32], 2);
    coeffs[184] = d[27] * d[28] * d[29] - d[29] * std::pow(d[30], 2) - d[28] * std::pow(d[31], 2) + 2 * d[30] * d[31] * d[32] - d[27] * std::pow(d[32], 2);
    coeffs[185] = d[10] * d[11] * d[36] - std::pow(d[14], 2) * d[36] + d[9] * d[11] * d[37] - std::pow(d[13], 2) * d[37] + d[9] * d[10] * d[38] - std::pow(d[12], 2) * d[38] - 2 * d[11] * d[12] * d[39] + 2 * d[13] * d[14] * d[39] - 2 * d[10] * d[13] * d[40] + 2 * d[12] * d[14] * d[40] + 2 * d[12] * d[13] * d[41] - 2 * d[9] * d[14] * d[41];
    coeffs[186] = d[11] * d[19] * d[36] + d[10] * d[20] * d[36] - 2 * d[14] * d[23] * d[36] + d[11] * d[18] * d[37] + d[9] * d[20] * d[37] - 2 * d[13] * d[22] * d[37] + d[10] * d[18] * d[38] + d[9] * d[19] * d[38] - 2 * d[12] * d[21] * d[38] - 2 * d[12] * d[20] * d[39] - 2 * d[11] * d[21] * d[39] + 2 * d[14] * d[22] * d[39] + 2 * d[13] * d[23] * d[39] - 2 * d[13] * d[19] * d[40] + 2 * d[14] * d[21] * d[40] - 2 * d[10] * d[22] * d[40] + 2 * d[12] * d[23] * d[40] - 2 * d[14] * d[18] * d[41] + 2 * d[13] * d[21] * d[41] + 2 * d[12] * d[22] * d[41] - 2 * d[9] * d[23] * d[41];
    coeffs[187] = d[19] * d[20] * d[36] - std::pow(d[23], 2) * d[36] + d[18] * d[20] * d[37] - std::pow(d[22], 2) * d[37] + d[18] * d[19] * d[38] - std::pow(d[21], 2) * d[38] - 2 * d[20] * d[21] * d[39] + 2 * d[22] * d[23] * d[39] - 2 * d[19] * d[22] * d[40] + 2 * d[21] * d[23] * d[40] + 2 * d[21] * d[22] * d[41] - 2 * d[18] * d[23] * d[41];
    coeffs[188] = d[11] * d[28] * d[36] + d[10] * d[29] * d[36] - 2 * d[14] * d[32] * d[36] + d[11] * d[27] * d[37] + d[9] * d[29] * d[37] - 2 * d[13] * d[31] * d[37] + d[10] * d[27] * d[38] + d[9] * d[28] * d[38] - 2 * d[12] * d[30] * d[38] - 2 * d[12] * d[29] * d[39] - 2 * d[11] * d[30] * d[39] + 2 * d[14] * d[31] * d[39] + 2 * d[13] * d[32] * d[39] - 2 * d[13] * d[28] * d[40] + 2 * d[14] * d[30] * d[40] - 2 * d[10] * d[31] * d[40] + 2 * d[12] * d[32] * d[40] - 2 * d[14] * d[27] * d[41] + 2 * d[13] * d[30] * d[41] + 2 * d[12] * d[31] * d[41] - 2 * d[9] * d[32] * d[41];
    coeffs[189] = d[20] * d[28] * d[36] + d[19] * d[29] * d[36] - 2 * d[23] * d[32] * d[36] + d[20] * d[27] * d[37] + d[18] * d[29] * d[37] - 2 * d[22] * d[31] * d[37] + d[19] * d[27] * d[38] + d[18] * d[28] * d[38] - 2 * d[21] * d[30] * d[38] - 2 * d[21] * d[29] * d[39] - 2 * d[20] * d[30] * d[39] + 2 * d[23] * d[31] * d[39] + 2 * d[22] * d[32] * d[39] - 2 * d[22] * d[28] * d[40] + 2 * d[23] * d[30] * d[40] - 2 * d[19] * d[31] * d[40] + 2 * d[21] * d[32] * d[40] - 2 * d[23] * d[27] * d[41] + 2 * d[22] * d[30] * d[41] + 2 * d[21] * d[31] * d[41] - 2 * d[18] * d[32] * d[41];
    coeffs[190] = d[28] * d[29] * d[36] - std::pow(d[32], 2) * d[36] + d[27] * d[29] * d[37] - std::pow(d[31], 2) * d[37] + d[27] * d[28] * d[38] - std::pow(d[30], 2) * d[38] - 2 * d[29] * d[30] * d[39] + 2 * d[31] * d[32] * d[39] - 2 * d[28] * d[31] * d[40] + 2 * d[30] * d[32] * d[40] + 2 * d[30] * d[31] * d[41] - 2 * d[27] * d[32] * d[41];
    coeffs[191] = d[11] * d[36] * d[37] + d[10] * d[36] * d[38] + d[9] * d[37] * d[38] - 2 * d[12] * d[38] * d[39] - d[11] * std::pow(d[39], 2) - 2 * d[13] * d[37] * d[40] + 2 * d[14] * d[39] * d[40] - d[10] * std::pow(d[40], 2) - 2 * d[14] * d[36] * d[41] + 2 * d[13] * d[39] * d[41] + 2 * d[12] * d[40] * d[41] - d[9] * std::pow(d[41], 2);
    coeffs[192] = d[20] * d[36] * d[37] + d[19] * d[36] * d[38] + d[18] * d[37] * d[38] - 2 * d[21] * d[38] * d[39] - d[20] * std::pow(d[39], 2) - 2 * d[22] * d[37] * d[40] + 2 * d[23] * d[39] * d[40] - d[19] * std::pow(d[40], 2) - 2 * d[23] * d[36] * d[41] + 2 * d[22] * d[39] * d[41] + 2 * d[21] * d[40] * d[41] - d[18] * std::pow(d[41], 2);
    coeffs[193] = d[29] * d[36] * d[37] + d[28] * d[36] * d[38] + d[27] * d[37] * d[38] - 2 * d[30] * d[38] * d[39] - d[29] * std::pow(d[39], 2) - 2 * d[31] * d[37] * d[40] + 2 * d[32] * d[39] * d[40] - d[28] * std::pow(d[40], 2) - 2 * d[32] * d[36] * d[41] + 2 * d[31] * d[39] * d[41] + 2 * d[30] * d[40] * d[41] - d[27] * std::pow(d[41], 2);
    coeffs[194] = d[36] * d[37] * d[38] - d[38] * std::pow(d[39], 2) - d[37] * std::pow(d[40], 2) + 2 * d[39] * d[40] * d[41] - d[36] * std::pow(d[41], 2);
    coeffs[195] = d[2] * d[9] * d[10] + d[1] * d[9] * d[11] + d[0] * d[10] * d[11] - 2 * d[3] * d[11] * d[12] - d[2] * std::pow(d[12], 2) - 2 * d[4] * d[10] * d[13] + 2 * d[5] * d[12] * d[13] - d[1] * std::pow(d[13], 2) - 2 * d[5] * d[9] * d[14] + 2 * d[4] * d[12] * d[14] + 2 * d[3] * d[13] * d[14] - d[0] * std::pow(d[14], 2);
    coeffs[196] = d[2] * d[10] * d[18] + d[1] * d[11] * d[18] - 2 * d[5] * d[14] * d[18] + d[2] * d[9] * d[19] + d[0] * d[11] * d[19] - 2 * d[4] * d[13] * d[19] + d[1] * d[9] * d[20] + d[0] * d[10] * d[20] - 2 * d[3] * d[12] * d[20] - 2 * d[3] * d[11] * d[21] - 2 * d[2] * d[12] * d[21] + 2 * d[5] * d[13] * d[21] + 2 * d[4] * d[14] * d[21] - 2 * d[4] * d[10] * d[22] + 2 * d[5] * d[12] * d[22] - 2 * d[1] * d[13] * d[22] + 2 * d[3] * d[14] * d[22] - 2 * d[5] * d[9] * d[23] + 2 * d[4] * d[12] * d[23] + 2 * d[3] * d[13] * d[23] - 2 * d[0] * d[14] * d[23];
    coeffs[197] = d[2] * d[18] * d[19] + d[1] * d[18] * d[20] + d[0] * d[19] * d[20] - 2 * d[3] * d[20] * d[21] - d[2] * std::pow(d[21], 2) - 2 * d[4] * d[19] * d[22] + 2 * d[5] * d[21] * d[22] - d[1] * std::pow(d[22], 2) - 2 * d[5] * d[18] * d[23] + 2 * d[4] * d[21] * d[23] + 2 * d[3] * d[22] * d[23] - d[0] * std::pow(d[23], 2);
    coeffs[198] = d[2] * d[10] * d[27] + d[1] * d[11] * d[27] - 2 * d[5] * d[14] * d[27] + d[2] * d[9] * d[28] + d[0] * d[11] * d[28] - 2 * d[4] * d[13] * d[28] + d[1] * d[9] * d[29] + d[0] * d[10] * d[29] - 2 * d[3] * d[12] * d[29] - 2 * d[3] * d[11] * d[30] - 2 * d[2] * d[12] * d[30] + 2 * d[5] * d[13] * d[30] + 2 * d[4] * d[14] * d[30] - 2 * d[4] * d[10] * d[31] + 2 * d[5] * d[12] * d[31] - 2 * d[1] * d[13] * d[31] + 2 * d[3] * d[14] * d[31] - 2 * d[5] * d[9] * d[32] + 2 * d[4] * d[12] * d[32] + 2 * d[3] * d[13] * d[32] - 2 * d[0] * d[14] * d[32];
    coeffs[199] = d[2] * d[19] * d[27] + d[1] * d[20] * d[27] - 2 * d[5] * d[23] * d[27] + d[2] * d[18] * d[28] + d[0] * d[20] * d[28] - 2 * d[4] * d[22] * d[28] + d[1] * d[18] * d[29] + d[0] * d[19] * d[29] - 2 * d[3] * d[21] * d[29] - 2 * d[3] * d[20] * d[30] - 2 * d[2] * d[21] * d[30] + 2 * d[5] * d[22] * d[30] + 2 * d[4] * d[23] * d[30] - 2 * d[4] * d[19] * d[31] + 2 * d[5] * d[21] * d[31] - 2 * d[1] * d[22] * d[31] + 2 * d[3] * d[23] * d[31] - 2 * d[5] * d[18] * d[32] + 2 * d[4] * d[21] * d[32] + 2 * d[3] * d[22] * d[32] - 2 * d[0] * d[23] * d[32];
    coeffs[200] = d[2] * d[27] * d[28] + d[1] * d[27] * d[29] + d[0] * d[28] * d[29] - 2 * d[3] * d[29] * d[30] - d[2] * std::pow(d[30], 2) - 2 * d[4] * d[28] * d[31] + 2 * d[5] * d[30] * d[31] - d[1] * std::pow(d[31], 2) - 2 * d[5] * d[27] * d[32] + 2 * d[4] * d[30] * d[32] + 2 * d[3] * d[31] * d[32] - d[0] * std::pow(d[32], 2);
    coeffs[201] = d[2] * d[10] * d[36] + d[1] * d[11] * d[36] - 2 * d[5] * d[14] * d[36] + d[2] * d[9] * d[37] + d[0] * d[11] * d[37] - 2 * d[4] * d[13] * d[37] + d[1] * d[9] * d[38] + d[0] * d[10] * d[38] - 2 * d[3] * d[12] * d[38] - 2 * d[3] * d[11] * d[39] - 2 * d[2] * d[12] * d[39] + 2 * d[5] * d[13] * d[39] + 2 * d[4] * d[14] * d[39] - 2 * d[4] * d[10] * d[40] + 2 * d[5] * d[12] * d[40] - 2 * d[1] * d[13] * d[40] + 2 * d[3] * d[14] * d[40] - 2 * d[5] * d[9] * d[41] + 2 * d[4] * d[12] * d[41] + 2 * d[3] * d[13] * d[41] - 2 * d[0] * d[14] * d[41];
    coeffs[202] = d[2] * d[19] * d[36] + d[1] * d[20] * d[36] - 2 * d[5] * d[23] * d[36] + d[2] * d[18] * d[37] + d[0] * d[20] * d[37] - 2 * d[4] * d[22] * d[37] + d[1] * d[18] * d[38] + d[0] * d[19] * d[38] - 2 * d[3] * d[21] * d[38] - 2 * d[3] * d[20] * d[39] - 2 * d[2] * d[21] * d[39] + 2 * d[5] * d[22] * d[39] + 2 * d[4] * d[23] * d[39] - 2 * d[4] * d[19] * d[40] + 2 * d[5] * d[21] * d[40] - 2 * d[1] * d[22] * d[40] + 2 * d[3] * d[23] * d[40] - 2 * d[5] * d[18] * d[41] + 2 * d[4] * d[21] * d[41] + 2 * d[3] * d[22] * d[41] - 2 * d[0] * d[23] * d[41];
    coeffs[203] = d[2] * d[28] * d[36] + d[1] * d[29] * d[36] - 2 * d[5] * d[32] * d[36] + d[2] * d[27] * d[37] + d[0] * d[29] * d[37] - 2 * d[4] * d[31] * d[37] + d[1] * d[27] * d[38] + d[0] * d[28] * d[38] - 2 * d[3] * d[30] * d[38] - 2 * d[3] * d[29] * d[39] - 2 * d[2] * d[30] * d[39] + 2 * d[5] * d[31] * d[39] + 2 * d[4] * d[32] * d[39] - 2 * d[4] * d[28] * d[40] + 2 * d[5] * d[30] * d[40] - 2 * d[1] * d[31] * d[40] + 2 * d[3] * d[32] * d[40] - 2 * d[5] * d[27] * d[41] + 2 * d[4] * d[30] * d[41] + 2 * d[3] * d[31] * d[41] - 2 * d[0] * d[32] * d[41];
    coeffs[204] = d[2] * d[36] * d[37] + d[1] * d[36] * d[38] + d[0] * d[37] * d[38] - 2 * d[3] * d[38] * d[39] - d[2] * std::pow(d[39], 2) - 2 * d[4] * d[37] * d[40] + 2 * d[5] * d[39] * d[40] - d[1] * std::pow(d[40], 2) - 2 * d[5] * d[36] * d[41] + 2 * d[4] * d[39] * d[41] + 2 * d[3] * d[40] * d[41] - d[0] * std::pow(d[41], 2);
    coeffs[205] = d[1] * d[2] * d[9] - std::pow(d[5], 2) * d[9] + d[0] * d[2] * d[10] - std::pow(d[4], 2) * d[10] + d[0] * d[1] * d[11] - std::pow(d[3], 2) * d[11] - 2 * d[2] * d[3] * d[12] + 2 * d[4] * d[5] * d[12] - 2 * d[1] * d[4] * d[13] + 2 * d[3] * d[5] * d[13] + 2 * d[3] * d[4] * d[14] - 2 * d[0] * d[5] * d[14];
    coeffs[206] = d[1] * d[2] * d[18] - std::pow(d[5], 2) * d[18] + d[0] * d[2] * d[19] - std::pow(d[4], 2) * d[19] + d[0] * d[1] * d[20] - std::pow(d[3], 2) * d[20] - 2 * d[2] * d[3] * d[21] + 2 * d[4] * d[5] * d[21] - 2 * d[1] * d[4] * d[22] + 2 * d[3] * d[5] * d[22] + 2 * d[3] * d[4] * d[23] - 2 * d[0] * d[5] * d[23];
    coeffs[207] = d[1] * d[2] * d[27] - std::pow(d[5], 2) * d[27] + d[0] * d[2] * d[28] - std::pow(d[4], 2) * d[28] + d[0] * d[1] * d[29] - std::pow(d[3], 2) * d[29] - 2 * d[2] * d[3] * d[30] + 2 * d[4] * d[5] * d[30] - 2 * d[1] * d[4] * d[31] + 2 * d[3] * d[5] * d[31] + 2 * d[3] * d[4] * d[32] - 2 * d[0] * d[5] * d[32];
    coeffs[208] = d[1] * d[2] * d[36] - std::pow(d[5], 2) * d[36] + d[0] * d[2] * d[37] - std::pow(d[4], 2) * d[37] + d[0] * d[1] * d[38] - std::pow(d[3], 2) * d[38] - 2 * d[2] * d[3] * d[39] + 2 * d[4] * d[5] * d[39] - 2 * d[1] * d[4] * d[40] + 2 * d[3] * d[5] * d[40] + 2 * d[3] * d[4] * d[41] - 2 * d[0] * d[5] * d[41];
    coeffs[209] = -1;
    coeffs[210] = d[0] * d[1] * d[2] - d[2] * std::pow(d[3], 2) - d[1] * std::pow(d[4], 2) + 2 * d[3] * d[4] * d[5] - d[0] * std::pow(d[5], 2);

    // Setup elimination template
    static const int coeffs0_ind[] = {0, 35, 70, 105, 1, 0, 35, 36, 70, 71, 106, 2, 1, 36, 37, 71, 72, 107, 3, 2, 37, 38, 72, 73, 108, 3, 38, 73, 109, 0, 105, 1, 0, 35, 105, 106, 2, 1, 0, 35, 36, 70, 105, 106, 107, 4, 39, 3, 2, 1, 0, 35, 36, 37, 70, 71, 74, 106, 110, 107, 108, 5, 4, 39, 40, 74, 3, 2, 1, 36, 37, 38, 71, 72, 75, 107, 111, 108, 109, 6, 5, 40, 41, 75, 3, 2, 37, 38, 72, 73, 76, 108, 112, 109, 6, 41, 76, 3, 38, 73, 109, 113, 4, 0, 35, 70, 105, 110, 5, 4, 39, 1, 0, 35, 36, 70, 71, 105, 106, 110, 111, 6, 5, 4, 39, 40, 2, 1, 0, 35, 36, 37, 70, 71, 74, 72, 106, 110, 107, 111, 112, 7, 42, 6, 5, 4, 39, 40, 41, 3, 2, 1, 36, 37, 38, 71, 74, 72, 75, 77, 73, 107, 111, 114, 108, 112, 113, 8, 7, 42, 43, 77, 6, 5, 40, 41, 3, 2, 37, 38, 72, 75, 73, 76, 78, 108, 112, 115, 109, 113, 8, 43, 78, 6, 41, 3, 38, 73, 76, 109, 113, 116, 7, 4, 39, 0, 35, 70, 74, 105, 110, 114, 8, 7, 42, 5, 4, 39, 40, 1, 0, 35, 36, 70, 71, 74, 75, 106, 110, 111, 114, 115, 8, 7, 42, 43, 6, 5, 4, 39, 40, 41, 2, 1, 36, 37, 71, 74, 72, 75, 77, 76, 107, 111, 114, 112, 115, 116, 9, 44, 8, 7, 42, 43, 6, 5, 40, 41, 3, 2, 37, 38, 72, 75, 77, 73, 76, 78, 79, 108, 112, 115, 117, 113, 116, 9, 44, 79, 8, 43, 6, 41, 3, 38, 73, 76, 78, 109, 113, 116, 118, 9, 7, 42, 4, 39, 0, 35, 70, 74, 77, 110, 114, 117, 9, 44, 8, 7, 42, 43, 5, 4, 39, 40, 74, 1, 36, 71, 75, 77, 78, 111, 114, 115, 117, 118, 9, 44, 8, 7, 42, 43, 6, 5, 40, 41, 75, 2, 37, 72, 77, 76, 78, 79, 112, 115, 117, 116, 118, 9, 44, 8, 43, 6, 41, 76, 3, 38, 73, 78, 79, 113, 116, 118, 119, 0, 105, 1, 0, 35, 105, 106, 2, 1, 0, 35, 36, 70, 105, 106, 107, 10, 45, 3, 2, 1, 0, 35, 36, 37, 80, 70, 71, 106, 120, 107, 108, 11, 10, 45, 46, 80, 3, 2, 1, 36, 37, 38, 81, 71, 72, 107, 121, 108, 109, 12, 11, 46, 47, 81, 3, 2, 37, 38, 82, 72, 73, 108, 122, 109, 12, 47, 82, 3, 38, 73, 109, 123, 10, 4, 0, 35, 70, 105, 110, 120, 11, 10, 45, 5, 4, 39, 1, 0, 35, 36, 70, 71, 105, 106, 110, 120, 111, 121, 12, 11, 10, 45, 46, 6, 5, 4, 39, 40, 2, 1, 0, 35, 36, 37, 70, 80, 71, 74, 72, 106, 110, 120, 107, 111, 121, 112, 122, 13, 48, 12, 11, 10, 45, 46, 47, 6, 5, 4, 39, 40, 41, 3, 2, 1, 36, 37, 38, 71, 80, 81, 83, 74, 72, 75, 73, 107, 111, 121, 124, 108, 112, 122, 113, 123, 14, 13, 48, 49, 83, 12, 11, 46, 47, 6, 5, 40, 41, 3, 2, 37, 38, 72, 81, 82, 84, 75, 73, 76, 108, 112, 122, 125, 109, 113, 123, 14, 49, 84, 12, 47, 6, 41, 3, 38, 73, 82, 76, 109, 113, 123, 126, 13, 10, 45, 7, 4, 39, 0, 35, 80, 70, 74, 105, 110, 120, 114, 124, 14, 13, 48, 11, 10, 45, 46, 8, 7, 42, 5, 4, 39, 40, 1, 35, 36, 0, 70, 80, 81, 71, 74, 75, 106, 110, 120, 111, 121, 114, 124, 115, 125, 14, 13, 48, 49, 12, 11, 10, 45, 46, 47, 80, 8, 7, 42, 43, 6, 5, 4, 39, 40, 41, 2, 36, 37, 1, 71, 74, 81, 83, 82, 72, 75, 77, 76, 107, 111, 121, 114, 124, 112, 122, 115, 125, 116, 126, 15, 50, 14, 13, 48, 49, 12, 11, 46, 47, 81, 8, 7, 42, 43, 6, 5, 40, 41, 3, 37, 38, 2, 72, 75, 83, 82, 84, 85, 77, 73, 76, 78, 108, 112, 122, 115, 125, 127, 113, 123, 116, 126, 15, 50, 85, 14, 49, 12, 47, 82, 8, 43, 6, 41, 38, 3, 73, 76, 84, 78, 109, 113, 123, 116, 126, 128, 15, 13, 48, 10, 45, 9, 7, 42, 4, 39, 35, 0, 70, 80, 83, 74, 77, 110, 120, 114, 124, 117, 127, 15, 50, 14, 13, 48, 49, 11, 10, 45, 46, 80, 9, 44, 8, 7, 42, 43, 5, 39, 40, 4, 74, 36, 1, 71, 81, 83, 84, 75, 77, 78, 111, 121, 114, 124, 115, 125, 117, 127, 118, 128, 15, 50, 14, 13, 48, 49, 12, 11, 46, 47, 81, 83, 9, 44, 8, 7, 42, 43, 6, 40, 41, 5, 75, 37, 2, 72, 77, 82, 84, 85, 76, 78, 79, 112, 122, 115, 125, 117, 127, 116, 126, 118, 128, 15, 50, 14, 49, 12, 47, 82, 84, 9, 44, 8, 43, 41, 6, 76, 38, 3, 73, 78, 85, 79, 113, 123, 116, 126, 118, 128, 129, 10, 0, 35, 70, 105, 120, 11, 10, 45, 1, 0, 35, 36, 70, 71, 105, 106, 120, 121, 12, 11, 10, 45, 46, 2, 1, 35, 36, 37, 0, 70, 80, 71, 72, 106, 120, 107, 121, 122, 16, 51, 12, 11, 10, 45, 46, 47, 3, 2, 36, 37, 38, 1, 71, 86, 80, 81, 72, 73, 107, 121, 130, 108, 122, 123, 17, 16, 51, 52, 86, 12, 11, 46, 47, 3, 37, 38, 2, 72, 87, 81, 82, 73, 108, 122, 131, 109, 123, 17, 52, 87, 12, 47, 38, 3, 73, 82, 109, 123, 132, 16, 13, 10, 45, 4, 39, 0, 35, 80, 70, 74, 105, 110, 120, 124, 130, 17, 16, 51, 14, 13, 48, 11, 10, 45, 46, 5, 4, 39, 40, 1, 0, 35, 36, 70, 80, 81, 71, 74, 75, 106, 110, 120, 111, 121, 124, 130, 125, 131, 17, 16, 51, 52, 14, 13, 48, 49, 12, 11, 10, 45, 46, 47, 80, 6, 5, 39, 40, 41, 4, 2, 1, 36, 37, 71, 74, 86, 81, 83, 82, 72, 75, 76, 107, 111, 121, 124, 130, 112, 122, 125, 131, 126, 132, 18, 53, 17, 16, 51, 52, 14, 13, 48, 49, 12, 11, 46, 47, 81, 6, 40, 41, 5, 3, 2, 37, 38, 72, 75, 86, 87, 88, 83, 82, 84, 73, 76, 108, 112, 122, 125, 131, 133, 113, 123, 126, 132, 18, 53, 88, 17, 52, 14, 49, 12, 47, 82, 41, 6, 3, 38, 73, 76, 87, 84, 109, 113, 123, 126, 132, 134, 18, 16, 51, 15, 13, 48, 10, 45, 7, 42, 4, 39, 35, 0, 70, 86, 80, 83, 120, 74, 77, 110, 114, 124, 130, 127, 133, 18, 53, 17, 16, 51, 52, 15, 50, 14, 13, 48, 49, 11, 45, 46, 10, 80, 8, 7, 42, 43, 5, 4, 39, 40, 74, 36, 1, 71, 86, 87, 81, 83, 84, 121, 75, 77, 78, 111, 114, 124, 130, 115, 125, 131, 127, 133, 128, 134, 18, 53, 17, 16, 51, 52, 86, 15, 50, 14, 13, 48, 49, 12, 46, 47, 11, 81, 83, 8, 42, 43, 7, 6, 5, 40, 41, 75, 37, 2, 72, 77, 87, 88, 82, 84, 85, 122, 76, 78, 112, 115, 125, 131, 127, 133, 116, 126, 132, 128, 134, 18, 53, 17, 52, 87, 15, 50, 14, 49, 47, 12, 82, 84, 43, 8, 6, 41, 76, 38, 3, 73, 78, 88, 85, 123, 113, 116, 126, 132, 128, 134, 135, 16, 10, 45, 0, 35, 70, 105, 80, 120, 130, 17, 16, 51, 11, 10, 45, 46, 1, 35, 36, 0, 70, 71, 106, 80, 81, 120, 121, 130, 131, 17, 16, 51, 52, 12, 11, 45, 46, 47, 10, 80, 2, 36, 37, 1, 71, 72, 107, 86, 81, 82, 121, 130, 122, 131, 132, 19, 54, 17, 16, 51, 52, 12, 46, 47, 11, 81, 3, 37, 38, 2, 72, 73, 108, 89, 86, 87, 82, 122, 131, 136, 123, 132, 19, 54, 89, 17, 52, 47, 12, 82, 38, 3, 73, 109, 87, 123, 132, 137, 19, 18, 16, 51, 13, 48, 10, 45, 4, 39, 0, 35, 70, 74, 110, 86, 80, 83, 120, 124, 130, 133, 136, 19, 54, 18, 53, 17, 16, 51, 52, 14, 13, 48, 49, 11, 10, 45, 46, 80, 5, 39, 40, 4, 74, 1, 36, 71, 75, 111, 86, 87, 81, 83, 84, 121, 124, 130, 125, 131, 133, 136, 134, 137, 19, 54, 18, 53, 17, 16, 51, 52, 86, 14, 48, 49, 13, 12, 11, 46, 47, 81, 83, 6, 40, 41, 5, 75, 2, 37, 72, 76, 112, 89, 87, 88, 82, 84, 122, 125, 131, 133, 136, 126, 132, 134, 137, 19, 54, 18, 53, 17, 52, 87, 49, 14, 12, 47, 82, 84, 41, 6, 76, 3, 38, 73, 113, 89, 88, 123, 126, 132, 134, 137, 138, 19, 16, 51, 10, 45, 80, 0, 35, 70, 120, 86, 130, 136, 175, 19, 54, 17, 16, 51, 52, 11, 45, 46, 10, 80, 81, 1, 36, 71, 121, 86, 87, 130, 131, 136, 137, 176, 19, 54, 17, 51, 52, 16, 86, 12, 46, 47, 11, 81, 82, 2, 37, 72, 122, 89, 87, 131, 136, 132, 137, 177, 19, 54, 52, 17, 87, 47, 12, 82, 3, 38, 73, 123, 89, 132, 137, 139, 178, 0, 35, 70, 105, 1, 35, 36, 0, 70, 71, 106, 2, 36, 37, 1, 71, 72, 107, 3, 37, 38, 2, 72, 73, 108, 38, 3, 73, 109, 0, 105, 1, 0, 35, 105, 106, 2, 1, 0, 35, 36, 70, 105, 106, 107, 4, 39, 3, 2, 1, 0, 35, 36, 37, 70, 71, 74, 106, 110, 107, 108, 5, 39, 40, 4, 74, 3, 2, 1, 36, 37, 38, 71, 72, 75, 107, 111, 108, 109, 6, 40, 41, 5, 75, 3, 2, 37, 38, 72, 73, 76, 108, 112, 109, 41, 6, 76, 3, 38, 73, 109, 113, 4, 0, 35, 70, 105, 110, 5, 4, 39, 1, 0, 35, 36, 70, 71, 105, 106, 110, 111, 6, 5, 4, 39, 40, 2, 1, 35, 36, 0, 37, 70, 71, 74, 72, 106, 110, 107, 111, 112, 7, 42, 6, 5, 4, 39, 40, 41, 3, 2, 36, 37, 1, 38, 71, 74, 72, 75, 77, 73, 107, 111, 114, 108, 112, 113, 8, 42, 43, 7, 77, 6, 5, 40, 41, 3, 37, 38, 2, 72, 75, 73, 76, 78, 108, 112, 115, 109, 113, 43, 8, 78, 6, 41, 38, 3, 73, 76, 109, 113, 116, 7, 4, 39, 35, 0, 70, 74, 105, 110, 114, 8, 7, 42, 5, 4, 39, 40, 36, 0, 35, 70, 1, 71, 74, 75, 106, 110, 111, 114, 115, 8, 7, 42, 43, 6, 5, 39, 40, 4, 41, 37, 1, 36, 71, 74, 2, 72, 75, 77, 76, 107, 111, 114, 112, 115, 116, 9, 44, 8, 7, 42, 43, 6, 40, 41, 5, 38, 2, 37, 72, 75, 77, 3, 73, 76, 78, 79, 108, 112, 115, 117, 113, 116, 44, 9, 79, 8, 43, 41, 6, 3, 38, 73, 76, 78, 109, 113, 116, 118, 9, 7, 42, 39, 35, 0, 70, 4, 74, 77, 110, 114, 117, 9, 44, 8, 7, 42, 43, 40, 4, 39, 74, 36, 1, 71, 5, 75, 77, 78, 111, 114, 115, 117, 118, 9, 44, 8, 42, 43, 7, 41, 5, 40, 75, 77, 37, 2, 72, 6, 76, 78, 79, 112, 115, 117, 116, 118, 9, 44, 43, 8, 6, 41, 76, 78, 38, 3, 73, 79, 113, 116, 118, 119, 0, 105, 1, 0, 35, 105, 106, 2, 1, 0, 35, 36, 70, 105, 106, 107, 20, 55, 10, 45, 3, 2, 1, 0, 35, 36, 37, 90, 70, 140, 80, 71, 106, 120, 107, 108, 21, 20, 55, 56, 90, 11, 45, 46, 10, 80, 3, 2, 1, 36, 37, 38, 91, 71, 141, 81, 72, 107, 121, 108, 109, 22, 21, 56, 57, 91, 12, 46, 47, 11, 81, 3, 2, 37, 38, 92, 72, 142, 82, 73, 108, 122, 109, 22, 57, 92, 47, 12, 82, 3, 38, 73, 143, 109, 123, 20, 10, 4, 0, 35, 140, 70, 105, 110, 120, 21, 20, 55, 11, 10, 45, 5, 4, 39, 1, 35, 0, 36, 140, 141, 70, 71, 105, 106, 110, 120, 111, 121, 22, 21, 20, 55, 56, 12, 11, 10, 45, 46, 6, 5, 4, 39, 40, 2, 36, 35, 0, 1, 37, 70, 90, 140, 141, 142, 80, 71, 74, 72, 106, 110, 120, 107, 111, 121, 112, 122, 23, 58, 22, 21, 20, 55, 56, 57, 13, 48, 12, 11, 10, 45, 46, 47, 80, 6, 5, 4, 39, 40, 41, 3, 37, 36, 1, 2, 38, 71, 90, 91, 93, 74, 141, 144, 142, 143, 81, 83, 72, 75, 73, 107, 111, 121, 124, 108, 112, 122, 113, 123, 24, 23, 58, 59, 93, 22, 21, 56, 57, 14, 48, 49, 13, 83, 12, 11, 46, 47, 81, 6, 5, 40, 41, 38, 37, 2, 3, 72, 91, 92, 94, 75, 142, 145, 143, 82, 84, 73, 76, 108, 112, 122, 125, 109, 113, 123, 24, 59, 94, 22, 57, 49, 14, 84, 12, 47, 82, 6, 41, 38, 3, 73, 92, 76, 143, 146, 109, 113, 123, 126, 23, 20, 55, 13, 10, 45, 7, 4, 39, 0, 35, 90, 140, 144, 80, 70, 74, 105, 110, 120, 114, 124, 24, 23, 58, 21, 20, 55, 56, 14, 13, 48, 11, 10, 45, 46, 8, 7, 42, 5, 39, 4, 40, 1, 35, 36, 0, 70, 90, 91, 140, 141, 144, 145, 80, 81, 71, 74, 75, 106, 110, 120, 111, 121, 114, 124, 115, 125, 24, 23, 58, 59, 22, 21, 20, 55, 56, 57, 90, 14, 13, 48, 49, 12, 11, 45, 46, 10, 47, 80, 8, 7, 42, 43, 6, 40, 39, 4, 5, 41, 2, 36, 37, 1, 71, 74, 91, 93, 92, 141, 144, 142, 145, 146, 81, 83, 82, 72, 75, 77, 76, 107, 111, 121, 114, 124, 112, 122, 115, 125, 116, 126, 25, 60, 24, 23, 58, 59, 22, 21, 56, 57, 91, 15, 50, 14, 13, 48, 49, 12, 46, 47, 11, 81, 83, 8, 7, 42, 43, 41, 40, 5, 6, 3, 37, 38, 2, 72, 75, 93, 92, 94, 95, 77, 142, 145, 147, 143, 146, 82, 84, 85, 73, 76, 78, 108, 112, 122, 115, 125, 127, 113, 123, 116, 126, 25, 60, 95, 24, 59, 22, 57, 92, 50, 15, 85, 14, 49, 47, 12, 82, 84, 8, 43, 41, 6, 38, 3, 73, 76, 94, 78, 143, 146, 148, 109, 113, 123, 116, 126, 128, 25, 23, 58, 20, 55, 15, 13, 48, 45, 9, 7, 42, 4, 39, 35, 0, 70, 90, 93, 140, 144, 147, 10, 80, 83, 74, 77, 110, 120, 114, 124, 117, 127, 25, 60, 24, 23, 58, 59, 21, 20, 55, 56, 90, 15, 50, 14, 13, 48, 49, 46, 10, 45, 80, 9, 44, 8, 42, 7, 43, 5, 39, 40, 4, 74, 36, 1, 71, 91, 93, 94, 141, 144, 145, 147, 148, 11, 81, 83, 84, 75, 77, 78, 111, 121, 114, 124, 115, 125, 117, 127, 118, 128, 25, 60, 24, 23, 58, 59, 22, 21, 56, 57, 91, 93, 15, 50, 14, 48, 49, 13, 47, 11, 46, 81, 83, 9, 44, 43, 42, 7, 8, 6, 40, 41, 5, 75, 37, 2, 72, 77, 92, 94, 95, 142, 145, 147, 146, 148, 12, 82, 84, 85, 76, 78, 79, 112, 122, 115, 125, 117, 127, 116, 126, 118, 128, 25, 60, 24, 59, 22, 57, 92, 94, 15, 50, 49, 14, 12, 47, 82, 84, 85, 9, 44, 43, 8, 41, 6, 76, 38, 3, 73, 78, 95, 143, 79, 146, 148, 149, 113, 123, 116, 126, 118, 128, 129, 25, 60, 23, 58, 20, 55, 90, 15, 50, 48, 45, 10, 80, 9, 44, 7, 42, 39, 4, 74, 93, 95, 144, 147, 149, 13, 83, 85, 77, 79, 114, 124, 117, 127, 119, 129, 25, 60, 24, 23, 58, 59, 93, 21, 56, 91, 15, 50, 49, 13, 48, 83, 46, 11, 81, 44, 9, 8, 42, 43, 7, 77, 40, 5, 75, 94, 95, 145, 147, 148, 149, 14, 84, 85, 78, 79, 115, 125, 117, 127, 118, 128, 119, 129, 25, 60, 24, 59, 94, 22, 57, 92, 95, 50, 15, 14, 49, 84, 85, 47, 12, 82, 44, 9, 43, 8, 78, 41, 6, 76, 79, 146, 148, 149, 116, 126, 118, 128, 119, 129, 25, 60, 23, 58, 93, 50, 48, 13, 83, 9, 44, 42, 7, 77, 95, 147, 149, 15, 85, 79, 117, 127, 119, 129, 25, 60, 95, 24, 59, 94, 15, 50, 85, 49, 14, 84, 44, 9, 79, 43, 8, 78, 148, 149, 118, 128, 119, 129, 25, 60, 95, 50, 15, 85, 44, 9, 79, 149, 119, 129, 20, 10, 0, 35, 140, 70, 105, 120, 21, 20, 55, 11, 10, 45, 1, 0, 35, 36, 140, 141, 70, 71, 105, 106, 120, 121, 22, 21, 20, 55, 56, 12, 11, 10, 45, 46, 2, 1, 35, 0, 36, 37, 70, 90, 140, 141, 142, 80, 71, 72, 106, 120, 107, 121, 122, 26, 61, 22, 21, 20, 55, 56, 57, 16, 51, 12, 11, 10, 45, 46, 47, 96, 3, 2, 36, 1, 37, 38, 71, 90, 91, 80, 141, 150, 142, 143, 86, 81, 72, 73, 107, 121, 130, 108, 122, 123, 27, 26, 61, 62, 96, 22, 21, 56, 57, 17, 51, 52, 16, 86, 12, 11, 46, 47, 97, 3, 37, 2, 38, 72, 91, 92, 81, 142, 151, 143, 87, 82, 73, 108, 122, 131, 109, 123, 27, 62, 97, 22, 57, 52, 17, 87, 12, 47, 38, 3, 73, 92, 82, 143, 152, 109, 123, 132, 26, 23, 20, 55, 16, 13, 10, 45, 4, 39, 35, 0, 90, 140, 144, 150, 70, 80, 74, 105, 110, 120, 124, 130, 27, 26, 61, 24, 23, 58, 21, 20, 55, 56, 17, 16, 51, 14, 13, 48, 11, 45, 10, 46, 5, 4, 39, 40, 36, 35, 0, 1, 70, 90, 91, 140, 141, 144, 150, 145, 151, 71, 80, 81, 74, 75, 106, 110, 120, 111, 121, 124, 130, 125, 131, 27, 26, 61, 62, 24, 23, 58, 59, 22, 21, 20, 55, 56, 57, 90, 17, 16, 51, 52, 14, 13, 48, 49, 12, 46, 45, 10, 11, 47, 80, 96, 6, 5, 39, 4, 40, 41, 37, 36, 1, 2, 71, 74, 91, 93, 92, 141, 144, 150, 142, 145, 151, 146, 152, 86, 72, 81, 83, 82, 75, 76, 107, 111, 121, 124, 130, 112, 122, 125, 131, 126, 132, 28, 63, 27, 26, 61, 62, 24, 23, 58, 59, 22, 21, 56, 57, 91, 18, 53, 17, 16, 51, 52, 86, 14, 13, 48, 49, 47, 46, 11, 12, 81, 96, 97, 98, 6, 40, 5, 41, 38, 37, 2, 3, 72, 75, 93, 92, 94, 83, 142, 145, 151, 153, 143, 146, 152, 87, 88, 73, 82, 84, 76, 108, 112, 122, 125, 131, 133, 113, 123, 126, 132, 28, 63, 98, 27, 62, 24, 59, 22, 57, 92, 53, 18, 88, 17, 52, 87, 14, 49, 47, 12, 82, 97, 41, 6, 38, 3, 73, 76, 94, 84, 143, 146, 152, 154, 109, 113, 123, 126, 132, 134, 28, 26, 61, 25, 23, 58, 20, 55, 18, 16, 51, 15, 13, 48, 10, 45, 96, 7, 42, 39, 4, 35, 0, 70, 90, 93, 140, 144, 150, 147, 153, 86, 74, 80, 83, 120, 77, 110, 114, 124, 130, 127, 133, 175, 28, 63, 27, 26, 61, 62, 25, 60, 24, 23, 58, 59, 21, 55, 56, 20, 90, 18, 53, 17, 16, 51, 52, 15, 50, 14, 48, 13, 49, 11, 45, 46, 10, 80, 96, 97, 8, 7, 42, 43, 40, 39, 4, 5, 74, 36, 1, 71, 91, 93, 94, 141, 144, 150, 145, 151, 147, 153, 148, 154, 86, 87, 75, 81, 83, 84, 121, 77, 78, 111, 114, 124, 130, 115, 125, 131, 127, 133, 128, 134, 176, 28, 63, 27, 26, 61, 62, 96, 25, 60, 24, 23, 58, 59, 22, 56, 57, 21, 91, 93, 18, 53, 17, 51, 52, 16, 86, 15, 50, 49, 48, 13, 14, 12, 46, 47, 11, 81, 83, 97, 98, 8, 42, 7, 43, 41, 40, 5, 6, 75, 37, 2, 72, 77, 92, 94, 95, 142, 145, 151, 147, 153, 146, 152, 148, 154, 87, 88, 76, 82, 84, 85, 122, 78, 112, 115, 125, 131, 127, 133, 116, 126, 132, 128, 134, 177, 28, 63, 27, 62, 97, 25, 60, 24, 59, 57, 22, 92, 94, 18, 53, 52, 17, 87, 88, 15, 50, 49, 14, 47, 12, 82, 84, 98, 43, 8, 41, 6, 76, 38, 3, 73, 78, 95, 143, 85, 146, 152, 148, 154, 155, 123, 113, 116, 126, 132, 128, 134, 135, 178, 28, 63, 26, 61, 25, 60, 23, 58, 55, 20, 90, 18, 53, 51, 15, 50, 13, 48, 45, 10, 80, 96, 98, 9, 44, 42, 7, 39, 4, 74, 93, 95, 144, 150, 147, 153, 149, 155, 16, 86, 88, 77, 83, 85, 124, 79, 114, 130, 117, 127, 133, 129, 135, 179, 28, 63, 27, 26, 61, 62, 96, 25, 60, 24, 58, 59, 23, 93, 56, 21, 91, 18, 53, 52, 16, 51, 86, 50, 15, 14, 48, 49, 13, 83, 46, 11, 81, 97, 98, 9, 44, 43, 42, 7, 8, 77, 40, 5, 75, 94, 95, 145, 151, 147, 153, 148, 154, 149, 155, 17, 87, 88, 78, 84, 85, 125, 79, 115, 131, 117, 127, 133, 118, 128, 134, 129, 135, 180, 28, 63, 27, 62, 97, 98, 25, 60, 59, 24, 94, 57, 22, 92, 95, 53, 18, 17, 52, 87, 88, 50, 15, 49, 14, 84, 47, 12, 82, 85, 44, 9, 43, 8, 78, 41, 6, 76, 79, 146, 152, 148, 154, 149, 155, 126, 116, 132, 118, 128, 134, 129, 135, 181, 28, 63, 26, 61, 96, 25, 60, 58, 23, 93, 53, 51, 16, 86, 15, 50, 48, 13, 83, 98, 44, 9, 42, 7, 77, 95, 147, 153, 149, 155, 18, 88, 79, 85, 127, 117, 133, 119, 129, 135, 182, 28, 63, 98, 27, 62, 97, 60, 25, 95, 59, 24, 94, 18, 53, 88, 52, 17, 87, 50, 15, 85, 49, 14, 84, 44, 9, 79, 43, 8, 78, 148, 154, 149, 155, 128, 118, 134, 119, 129, 135, 183, 28, 63, 98, 60, 25, 95, 53, 18, 88, 50, 15, 85, 44, 9, 79, 149, 155, 129, 119, 135, 184, 26, 20, 55, 16, 10, 45, 35, 0, 70, 90, 105, 140, 150, 80, 120, 130, 175, 27, 26, 61, 21, 20, 55, 56, 17, 16, 51, 11, 10, 45, 46, 36, 35, 1, 70, 0, 71, 90, 91, 140, 106, 141, 150, 151, 80, 81, 120, 121, 130, 131, 175, 176, 27, 26, 61, 62, 22, 21, 55, 56, 57, 20, 90, 17, 16, 51, 52, 12, 11, 45, 10, 46, 47, 80, 96, 37, 36, 2, 71, 1, 72, 91, 92, 141, 107, 150, 142, 151, 152, 86, 81, 82, 121, 130, 122, 131, 132, 176, 177, 29, 64, 27, 26, 61, 62, 22, 56, 57, 21, 91, 19, 54, 17, 16, 51, 52, 99, 12, 46, 11, 47, 81, 96, 97, 38, 37, 3, 72, 2, 73, 92, 142, 86, 108, 151, 156, 143, 152, 89, 87, 82, 122, 131, 136, 123, 132, 177, 178, 29, 64, 99, 27, 62, 57, 22, 92, 54, 19, 89, 17, 52, 47, 12, 82, 97, 38, 73, 3, 143, 87, 109, 152, 157, 123, 132, 137, 178, 29, 28, 26, 61, 23, 58, 20, 55, 19, 18, 16, 51, 13, 48, 45, 10, 96, 39, 4, 0, 70, 35, 74, 90, 93, 140, 110, 144, 150, 153, 156, 80, 86, 83, 120, 124, 130, 133, 136, 175, 179, 29, 64, 28, 63, 27, 26, 61, 62, 24, 23, 58, 59, 21, 20, 55, 56, 90, 19, 54, 18, 53, 17, 51, 16, 52, 14, 13, 48, 49, 46, 45, 10, 11, 80, 96, 97, 40, 39, 5, 74, 4, 1, 71, 36, 75, 91, 93, 94, 141, 144, 111, 150, 145, 151, 153, 156, 154, 157, 81, 86, 87, 83, 84, 121, 124, 130, 125, 131, 133, 136, 134, 137, 176, 179, 180, 29, 64, 28, 63, 27, 26, 61, 62, 96, 24, 58, 59, 23, 22, 21, 56, 57, 91, 93, 19, 54, 18, 53, 52, 51, 16, 17, 86, 99, 14, 48, 13, 49, 47, 46, 11, 12, 81, 83, 97, 98, 41, 40, 6, 75, 5, 2, 72, 37, 76, 92, 94, 142, 145, 112, 151, 153, 156, 146, 152, 154, 157, 89, 82, 87, 88, 84, 122, 125, 131, 133, 136, 126, 132, 134, 137, 177, 180, 181, 29, 64, 28, 63, 27, 62, 97, 59, 24, 22, 57, 92, 94, 19, 54, 89, 18, 53, 52, 17, 87, 99, 49, 14, 47, 12, 82, 84, 98, 41, 76, 6, 3, 73, 38, 143, 146, 88, 113, 152, 154, 157, 158, 123, 126, 132, 134, 137, 138, 178, 181, 29, 64, 28, 63, 26, 61, 25, 60, 23, 58, 55, 20, 90, 19, 54, 18, 53, 16, 51, 99, 15, 50, 48, 13, 45, 10, 80, 96, 98, 150, 42, 7, 4, 74, 39, 77, 93, 95, 144, 114, 147, 153, 156, 155, 158, 89, 83, 86, 88, 130, 85, 124, 127, 133, 136, 135, 138, 179, 185, 182, 29, 64, 28, 63, 27, 61, 62, 26, 96, 25, 60, 24, 23, 58, 59, 93, 56, 21, 91, 19, 54, 53, 18, 17, 51, 52, 16, 86, 99, 15, 50, 49, 48, 13, 14, 83, 46, 11, 81, 97, 98, 151, 43, 42, 8, 77, 7, 5, 75, 40, 78, 94, 95, 145, 147, 115, 153, 156, 148, 154, 157, 155, 158, 89, 84, 87, 88, 131, 85, 125, 127, 133, 136, 128, 134, 137, 135, 138, 180, 186, 182, 183, 29, 64, 99, 28, 63, 62, 27, 97, 98, 60, 25, 24, 59, 94, 57, 22, 92, 95, 54, 19, 89, 53, 18, 52, 17, 87, 88, 50, 15, 49, 14, 84, 47, 12, 82, 85, 152, 43, 78, 8, 6, 76, 41, 146, 148, 116, 154, 157, 155, 158, 132, 126, 128, 134, 137, 135, 138, 181, 187, 183, 29, 64, 28, 63, 61, 26, 96, 25, 60, 58, 23, 93, 54, 18, 53, 51, 16, 86, 99, 50, 15, 48, 13, 83, 98, 153, 44, 9, 7, 77, 42, 79, 95, 147, 156, 117, 149, 155, 158, 19, 89, 85, 88, 133, 127, 136, 129, 135, 138, 182, 188, 184, 29, 64, 99, 63, 28, 98, 62, 27, 97, 25, 60, 95, 59, 24, 94, 19, 54, 89, 53, 18, 88, 52, 17, 87, 50, 15, 85, 49, 14, 84, 154, 44, 79, 9, 8, 78, 43, 148, 157, 149, 118, 155, 158, 134, 128, 137, 129, 135, 138, 183, 189, 184, 29, 64, 99, 63, 28, 98, 60, 25, 95, 54, 19, 89, 53, 18, 88, 50, 15, 85, 155, 9, 79, 44, 149, 158, 119, 135, 129, 138, 184, 190, 29, 26, 61, 20, 55, 90, 140, 19, 16, 51, 45, 10, 80, 96, 35, 70, 120, 150, 156, 0, 86, 130, 136, 175, 185, 29, 64, 27, 26, 61, 62, 21, 55, 56, 20, 90, 91, 141, 19, 54, 17, 16, 51, 52, 46, 45, 11, 80, 10, 81, 96, 97, 150, 36, 71, 121, 151, 156, 157, 86, 1, 87, 130, 131, 136, 137, 176, 185, 186, 29, 64, 27, 61, 62, 26, 96, 22, 56, 57, 21, 91, 92, 142, 19, 54, 17, 51, 16, 52, 86, 99, 47, 46, 12, 81, 11, 82, 97, 151, 37, 72, 122, 156, 152, 157, 89, 87, 2, 131, 136, 132, 137, 177, 186, 187, 29, 64, 62, 27, 97, 57, 22, 92, 143, 19, 54, 52, 17, 87, 99, 47, 82, 12, 152, 38, 73, 89, 123, 157, 159, 3, 132, 137, 139, 178, 187, 29, 64, 28, 63, 26, 61, 23, 58, 20, 55, 90, 93, 144, 19, 54, 18, 53, 51, 16, 99, 48, 13, 10, 80, 45, 83, 96, 98, 150, 39, 74, 124, 153, 156, 158, 159, 86, 89, 4, 88, 130, 133, 136, 138, 139, 179, 185, 188, 29, 64, 28, 63, 27, 26, 61, 62, 96, 24, 58, 59, 23, 93, 21, 56, 91, 94, 145, 54, 19, 18, 53, 52, 51, 16, 17, 86, 99, 49, 48, 14, 83, 13, 11, 81, 46, 84, 97, 98, 151, 153, 40, 75, 125, 156, 154, 157, 158, 159, 87, 89, 88, 5, 131, 133, 136, 134, 137, 138, 139, 180, 186, 188, 189, 29, 64, 99, 63, 28, 27, 62, 97, 98, 59, 24, 94, 22, 57, 92, 146, 54, 19, 89, 53, 18, 52, 17, 87, 88, 49, 84, 14, 12, 82, 47, 152, 154, 41, 76, 126, 157, 158, 159, 6, 132, 134, 137, 138, 139, 181, 187, 189, 29, 64, 28, 63, 61, 26, 96, 25, 60, 23, 58, 93, 95, 147, 19, 54, 53, 18, 51, 16, 86, 99, 156, 50, 15, 13, 83, 48, 85, 98, 153, 42, 77, 127, 155, 158, 159, 88, 89, 136, 7, 133, 135, 138, 139, 182, 188, 191, 190, 64, 29, 99, 28, 63, 98, 62, 27, 97, 60, 25, 95, 24, 59, 94, 148, 54, 19, 89, 53, 18, 88, 52, 17, 87, 157, 50, 85, 15, 14, 84, 49, 154, 155, 43, 78, 128, 158, 159, 137, 8, 134, 135, 138, 139, 183, 189, 192, 190, 64, 29, 99, 63, 28, 98, 25, 60, 95, 149, 54, 19, 89, 53, 18, 88, 158, 15, 85, 50, 155, 159, 44, 79, 129, 138, 9, 135, 139, 184, 190, 193, 29, 64, 26, 61, 96, 20, 55, 90, 150, 19, 54, 51, 16, 86, 99, 45, 80, 130, 156, 159, 10, 89, 136, 139, 185, 195, 191, 29, 64, 27, 61, 62, 26, 96, 97, 21, 56, 91, 151, 19, 54, 52, 51, 17, 86, 16, 87, 99, 156, 46, 81, 131, 157, 159, 89, 11, 136, 137, 139, 186, 196, 191, 192, 64, 29, 99, 62, 27, 97, 22, 57, 92, 152, 54, 19, 89, 52, 87, 17, 157, 47, 82, 132, 159, 12, 137, 139, 187, 197, 192, 29, 64, 28, 63, 26, 61, 96, 98, 23, 58, 93, 153, 54, 19, 53, 18, 16, 86, 51, 88, 99, 156, 48, 83, 133, 158, 159, 89, 13, 136, 138, 139, 188, 198, 191, 193, 29, 64, 99, 63, 28, 98, 27, 62, 97, 24, 59, 94, 154, 54, 19, 89, 53, 88, 18, 17, 87, 52, 157, 158, 49, 84, 134, 159, 14, 137, 138, 139, 189, 199, 192, 193, 64, 29, 99, 28, 63, 98, 25, 60, 95, 155, 54, 19, 89, 159, 18, 88, 53, 158, 50, 85, 135, 139, 15, 138, 190, 200, 193, 194, 35, 0, 70, 105, 36, 35, 0, 1, 70, 71, 106, 37, 36, 1, 2, 71, 72, 107, 38, 37, 2, 3, 72, 73, 108, 38, 3, 73, 109, 0, 105, 1, 35, 0, 105, 106, 2, 36, 35, 1, 0, 70, 105, 106, 107, 39, 4, 3, 37, 36, 35, 0, 2, 1, 70, 71, 74, 106, 110, 107, 108, 40, 39, 4, 5, 74, 38, 37, 36, 1, 3, 2, 71, 72, 75, 107, 111, 108, 109, 41, 40, 5, 6, 75, 38, 37, 2, 3, 72, 73, 76, 108, 112, 109, 41, 6, 76, 38, 3, 73, 109, 113, 4, 0, 35, 70, 105, 110, 5, 39, 4, 1, 35, 0, 36, 70, 71, 105, 106, 110, 111, 6, 40, 39, 5, 4, 2, 36, 0, 1, 37, 70, 71, 74, 72, 106, 110, 107, 111, 112, 35, 42, 7, 41, 40, 39, 4, 6, 5, 3, 37, 1, 2, 38, 71, 74, 72, 75, 77, 73, 107, 111, 114, 108, 112, 113, 36, 43, 42, 7, 8, 77, 41, 40, 5, 6, 38, 2, 3, 72, 75, 73, 76, 78, 108, 112, 115, 109, 113, 37, 43, 8, 78, 41, 6, 3, 73, 76, 109, 113, 116, 38, 7, 4, 39, 35, 0, 70, 74, 105, 110, 114, 8, 42, 7, 5, 39, 4, 40, 36, 0, 70, 1, 71, 74, 75, 35, 106, 110, 111, 114, 115, 43, 42, 8, 7, 6, 40, 4, 5, 41, 74, 37, 1, 71, 2, 72, 75, 77, 76, 36, 107, 111, 114, 112, 115, 116, 39, 44, 9, 43, 42, 7, 8, 41, 5, 6, 75, 38, 2, 72, 3, 77, 73, 76, 78, 79, 37, 108, 112, 115, 117, 113, 116, 40, 44, 9, 79, 43, 8, 6, 76, 3, 73, 78, 38, 109, 113, 116, 118, 41, 9, 7, 42, 39, 4, 35, 70, 0, 74, 77, 110, 114, 117, 44, 9, 8, 42, 7, 43, 40, 4, 74, 5, 36, 71, 1, 75, 77, 78, 39, 111, 114, 115, 117, 118, 44, 9, 43, 7, 8, 77, 41, 5, 75, 6, 37, 72, 2, 76, 78, 79, 40, 112, 115, 117, 116, 118, 42, 44, 9, 8, 78, 6, 76, 79, 38, 73, 3, 41, 113, 116, 118, 119, 43, 0, 105, 1, 35, 0, 105, 106, 2, 36, 35, 1, 0, 70, 105, 106, 107, 20, 55, 45, 10, 3, 37, 36, 0, 2, 35, 70, 1, 90, 71, 80, 140, 106, 120, 107, 108, 175, 21, 55, 56, 20, 90, 46, 45, 10, 11, 80, 38, 37, 1, 3, 36, 71, 2, 91, 72, 81, 141, 107, 121, 108, 109, 176, 22, 56, 57, 21, 91, 47, 46, 11, 12, 81, 38, 2, 37, 72, 3, 92, 73, 82, 142, 108, 122, 109, 177, 57, 22, 92, 47, 12, 82, 3, 38, 73, 143, 109, 123, 178, 20, 10, 4, 0, 35, 140, 70, 105, 110, 120, 175, 21, 20, 55, 11, 45, 10, 5, 39, 4, 1, 35, 0, 36, 70, 140, 141, 71, 105, 106, 110, 120, 111, 121, 176, 175, 22, 21, 20, 55, 56, 12, 46, 45, 11, 10, 6, 40, 39, 5, 2, 36, 0, 1, 37, 70, 4, 71, 90, 74, 80, 140, 141, 142, 72, 106, 110, 120, 107, 111, 35, 121, 112, 122, 175, 177, 176, 23, 58, 22, 21, 20, 55, 56, 57, 90, 48, 13, 47, 46, 45, 10, 12, 11, 80, 41, 40, 4, 6, 39, 74, 3, 37, 1, 2, 38, 71, 5, 72, 91, 93, 75, 81, 83, 141, 144, 142, 143, 73, 107, 111, 121, 124, 108, 112, 36, 122, 113, 123, 176, 179, 178, 177, 24, 58, 59, 23, 93, 22, 21, 56, 57, 91, 49, 48, 13, 14, 83, 47, 46, 11, 12, 81, 41, 5, 40, 75, 38, 2, 3, 72, 6, 73, 92, 94, 76, 82, 84, 142, 145, 143, 108, 112, 122, 125, 109, 113, 37, 123, 177, 180, 178, 59, 24, 94, 22, 57, 92, 49, 14, 84, 47, 12, 82, 6, 41, 76, 3, 73, 143, 146, 109, 113, 123, 126, 38, 178, 181, 23, 20, 55, 13, 10, 45, 7, 4, 39, 35, 0, 70, 90, 140, 144, 74, 80, 105, 110, 120, 114, 124, 179, 175, 24, 23, 58, 21, 20, 55, 56, 14, 48, 13, 11, 45, 10, 46, 8, 42, 7, 5, 39, 4, 40, 36, 70, 35, 1, 71, 74, 90, 91, 80, 140, 141, 144, 145, 75, 81, 106, 110, 120, 111, 121, 114, 124, 115, 0, 125, 175, 180, 179, 176, 24, 23, 58, 59, 22, 21, 55, 56, 20, 57, 90, 49, 48, 14, 13, 12, 46, 10, 11, 47, 80, 43, 42, 8, 6, 40, 4, 5, 41, 74, 37, 71, 36, 7, 2, 72, 75, 91, 93, 92, 81, 77, 83, 141, 144, 142, 145, 146, 76, 82, 107, 111, 121, 114, 124, 112, 122, 115, 39, 125, 116, 1, 126, 45, 176, 179, 181, 180, 177, 25, 60, 24, 23, 58, 59, 22, 56, 57, 21, 91, 93, 50, 15, 49, 48, 13, 14, 47, 11, 12, 81, 83, 43, 7, 42, 77, 41, 5, 6, 75, 38, 72, 37, 8, 3, 73, 76, 92, 94, 95, 82, 78, 84, 85, 142, 145, 147, 143, 146, 108, 112, 122, 115, 125, 127, 113, 123, 116, 40, 126, 2, 46, 177, 180, 182, 181, 178, 60, 25, 95, 24, 59, 57, 22, 92, 94, 50, 15, 85, 49, 14, 12, 82, 84, 8, 43, 78, 6, 76, 73, 38, 143, 146, 148, 109, 113, 123, 116, 126, 128, 41, 3, 47, 178, 181, 183, 25, 23, 58, 55, 15, 13, 48, 45, 10, 80, 9, 7, 42, 39, 4, 70, 20, 74, 0, 90, 93, 35, 140, 144, 147, 77, 83, 120, 110, 114, 124, 117, 127, 175, 182, 179, 25, 60, 24, 23, 58, 59, 56, 20, 55, 90, 50, 15, 14, 48, 13, 49, 46, 10, 80, 11, 81, 44, 9, 8, 42, 7, 43, 40, 74, 39, 5, 71, 21, 75, 1, 91, 77, 93, 94, 83, 36, 141, 144, 145, 147, 148, 78, 84, 45, 121, 111, 114, 124, 115, 125, 117, 127, 118, 4, 128, 176, 179, 183, 182, 180, 25, 60, 24, 58, 59, 23, 57, 21, 56, 91, 93, 50, 15, 49, 13, 14, 83, 47, 11, 81, 12, 82, 44, 43, 7, 8, 77, 41, 75, 40, 9, 6, 72, 22, 76, 2, 92, 78, 94, 95, 84, 79, 37, 85, 142, 145, 147, 146, 148, 46, 122, 112, 115, 125, 117, 127, 116, 126, 118, 42, 128, 5, 48, 177, 180, 182, 183, 181, 25, 60, 59, 24, 22, 57, 92, 94, 95, 50, 15, 14, 84, 12, 82, 85, 9, 44, 79, 8, 78, 76, 41, 73, 3, 38, 143, 146, 148, 149, 47, 123, 113, 116, 126, 118, 128, 129, 43, 6, 49, 178, 181, 183, 184, 25, 60, 58, 55, 20, 90, 15, 50, 48, 13, 45, 80, 10, 83, 9, 44, 42, 7, 74, 23, 77, 4, 93, 95, 39, 144, 147, 149, 79, 85, 124, 114, 117, 127, 119, 129, 179, 184, 182, 25, 60, 59, 23, 58, 93, 56, 21, 91, 50, 15, 49, 13, 83, 14, 46, 81, 11, 84, 44, 9, 43, 77, 42, 8, 75, 24, 78, 5, 94, 79, 95, 85, 40, 145, 147, 148, 149, 48, 125, 115, 117, 127, 118, 128, 119, 129, 7, 180, 182, 184, 183, 60, 25, 24, 59, 94, 95, 57, 22, 92, 15, 85, 14, 84, 47, 82, 12, 9, 79, 78, 43, 76, 6, 41, 146, 148, 149, 49, 126, 116, 118, 128, 119, 129, 44, 8, 50, 181, 183, 184, 60, 58, 23, 93, 50, 15, 48, 83, 13, 85, 44, 9, 77, 25, 79, 7, 95, 42, 147, 149, 127, 117, 119, 129, 182, 184, 25, 60, 95, 59, 24, 94, 15, 85, 49, 84, 14, 79, 44, 78, 8, 43, 148, 149, 50, 128, 118, 119, 129, 9, 183, 184, 60, 25, 95, 50, 85, 15, 79, 9, 44, 149, 129, 119, 184, 20, 10, 70, 140, 35, 0, 105, 120, 175, 21, 20, 55, 11, 45, 10, 71, 35, 0, 70, 140, 141, 36, 1, 105, 106, 120, 121, 176, 175, 22, 21, 20, 55, 56, 12, 46, 45, 11, 10, 72, 36, 70, 1, 71, 80, 90, 140, 141, 142, 37, 0, 2, 106, 120, 35, 107, 121, 122, 175, 177, 176, 30, 65, 26, 61, 22, 21, 20, 55, 56, 57, 100, 90, 160, 51, 16, 47, 46, 10, 12, 45, 80, 11, 96, 73, 37, 71, 2, 72, 81, 91, 86, 141, 150, 142, 143, 38, 1, 3, 107, 121, 130, 36, 108, 122, 123, 176, 185, 178, 177, 31, 30, 65, 66, 100, 27, 61, 62, 26, 96, 22, 21, 56, 57, 101, 91, 161, 52, 51, 16, 17, 86, 47, 11, 46, 81, 12, 97, 38, 72, 3, 73, 82, 92, 87, 142, 151, 143, 2, 108, 122, 131, 37, 109, 123, 177, 186, 178, 31, 66, 101, 62, 27, 97, 22, 57, 92, 162, 52, 17, 87, 12, 47, 82, 73, 143, 152, 3, 109, 123, 132, 38, 178, 187, 30, 26, 23, 20, 55, 160, 16, 13, 10, 45, 74, 35, 70, 90, 140, 144, 150, 80, 39, 105, 4, 0, 110, 120, 124, 130, 185, 179, 175, 31, 30, 65, 27, 26, 61, 24, 23, 58, 21, 55, 20, 56, 160, 161, 17, 51, 16, 14, 48, 13, 11, 45, 10, 46, 80, 75, 39, 4, 74, 36, 0, 70, 71, 90, 91, 140, 141, 144, 150, 145, 151, 35, 81, 40, 106, 120, 5, 110, 1, 111, 121, 124, 130, 125, 131, 175, 186, 180, 185, 179, 176, 31, 30, 65, 66, 27, 26, 61, 62, 24, 23, 58, 59, 22, 56, 55, 20, 21, 57, 90, 100, 160, 161, 162, 52, 51, 17, 16, 49, 48, 14, 12, 46, 10, 11, 47, 80, 13, 81, 96, 76, 40, 74, 5, 75, 37, 1, 71, 72, 91, 83, 93, 92, 86, 141, 144, 150, 142, 145, 151, 146, 152, 36, 82, 41, 107, 121, 4, 6, 111, 2, 124, 130, 39, 112, 122, 125, 45, 131, 126, 132, 176, 179, 185, 187, 181, 186, 180, 177, 32, 67, 31, 30, 65, 66, 28, 63, 27, 26, 61, 62, 96, 24, 23, 58, 59, 57, 56, 21, 22, 91, 100, 101, 102, 93, 161, 163, 162, 53, 18, 52, 51, 16, 17, 86, 49, 13, 48, 83, 47, 11, 12, 81, 14, 82, 97, 98, 41, 75, 6, 76, 38, 2, 72, 73, 92, 84, 94, 87, 88, 142, 145, 151, 153, 143, 146, 152, 37, 108, 122, 5, 112, 3, 125, 131, 133, 40, 113, 123, 126, 46, 132, 177, 180, 186, 188, 187, 181, 178, 32, 67, 102, 31, 66, 63, 28, 98, 27, 62, 97, 24, 59, 57, 22, 92, 101, 94, 162, 164, 53, 18, 88, 52, 17, 87, 14, 49, 84, 12, 82, 76, 3, 73, 143, 146, 152, 154, 38, 109, 123, 6, 113, 126, 132, 134, 41, 47, 178, 181, 187, 189, 32, 30, 65, 28, 26, 61, 25, 23, 58, 20, 55, 100, 160, 163, 18, 16, 51, 15, 13, 48, 45, 10, 80, 96, 77, 39, 74, 90, 70, 0, 35, 93, 140, 144, 150, 147, 153, 83, 86, 42, 110, 120, 7, 4, 114, 124, 130, 127, 133, 175, 188, 182, 185, 179, 32, 67, 31, 30, 65, 66, 28, 63, 27, 26, 61, 62, 25, 60, 24, 58, 23, 59, 21, 55, 56, 20, 90, 100, 101, 160, 161, 163, 164, 53, 18, 17, 51, 16, 52, 50, 15, 14, 48, 13, 49, 46, 80, 45, 11, 81, 83, 96, 97, 78, 42, 7, 77, 40, 4, 74, 75, 91, 71, 1, 36, 93, 86, 94, 141, 144, 150, 145, 151, 147, 153, 148, 154, 39, 84, 87, 43, 111, 121, 124, 130, 8, 114, 5, 115, 125, 131, 127, 133, 128, 10, 134, 176, 179, 185, 189, 183, 188, 182, 186, 180, 32, 67, 31, 30, 65, 66, 100, 28, 63, 27, 61, 62, 26, 96, 25, 60, 59, 58, 23, 24, 22, 56, 57, 21, 91, 93, 101, 102, 161, 163, 162, 164, 53, 18, 52, 16, 17, 86, 50, 49, 13, 14, 83, 47, 81, 46, 15, 12, 82, 84, 97, 98, 43, 77, 8, 78, 41, 5, 75, 76, 92, 72, 2, 37, 94, 87, 85, 95, 142, 88, 145, 151, 147, 153, 146, 152, 148, 154, 40, 112, 122, 125, 131, 7, 115, 6, 127, 133, 42, 116, 126, 132, 128, 48, 134, 11, 51, 177, 180, 186, 182, 188, 189, 183, 187, 181, 32, 67, 31, 66, 101, 28, 63, 62, 27, 97, 98, 25, 60, 59, 24, 57, 22, 92, 94, 102, 95, 162, 164, 165, 53, 18, 17, 87, 88, 15, 50, 85, 14, 84, 82, 47, 78, 6, 76, 73, 3, 38, 143, 146, 152, 148, 154, 155, 41, 113, 123, 126, 132, 8, 116, 128, 134, 135, 43, 49, 12, 52, 178, 181, 187, 183, 189, 190, 32, 67, 30, 65, 28, 63, 61, 25, 60, 23, 58, 55, 20, 90, 100, 102, 160, 163, 165, 18, 53, 51, 16, 86, 15, 50, 48, 13, 80, 26, 83, 10, 96, 98, 79, 42, 77, 93, 74, 4, 39, 45, 95, 144, 150, 147, 153, 149, 155, 85, 88, 130, 44, 114, 124, 9, 7, 117, 127, 133, 129, 135, 179, 185, 190, 184, 188, 182, 32, 67, 31, 30, 65, 66, 100, 28, 63, 62, 26, 61, 96, 60, 25, 24, 58, 59, 23, 93, 56, 21, 91, 101, 102, 161, 163, 164, 165, 53, 18, 52, 16, 86, 17, 87, 50, 15, 49, 83, 48, 14, 81, 27, 84, 11, 97, 85, 98, 44, 9, 79, 43, 7, 77, 78, 94, 75, 5, 40, 95, 88, 46, 145, 151, 147, 153, 148, 154, 149, 155, 42, 51, 131, 115, 125, 127, 133, 117, 8, 118, 128, 134, 129, 135, 13, 180, 186, 182, 188, 190, 184, 189, 183, 32, 67, 31, 66, 101, 102, 63, 28, 27, 62, 97, 98, 60, 25, 59, 24, 94, 57, 22, 92, 95, 162, 164, 165, 18, 88, 17, 87, 15, 85, 84, 49, 82, 12, 79, 8, 78, 76, 6, 41, 47, 146, 152, 148, 154, 149, 155, 43, 52, 132, 116, 126, 128, 134, 9, 118, 129, 135, 44, 50, 14, 53, 181, 187, 183, 189, 184, 190, 32, 67, 30, 65, 100, 63, 61, 26, 96, 25, 60, 58, 23, 93, 102, 163, 165, 53, 18, 51, 86, 16, 88, 50, 15, 83, 28, 85, 13, 98, 44, 79, 95, 77, 7, 42, 48, 147, 153, 149, 155, 133, 117, 127, 9, 119, 129, 135, 182, 188, 190, 184, 32, 67, 102, 31, 66, 101, 28, 63, 98, 62, 27, 97, 60, 25, 95, 59, 24, 94, 164, 165, 18, 88, 52, 87, 17, 85, 50, 84, 14, 9, 79, 78, 8, 43, 49, 148, 154, 149, 155, 44, 53, 134, 118, 128, 129, 135, 119, 15, 183, 189, 184, 190, 32, 67, 102, 63, 28, 98, 60, 25, 95, 165, 53, 88, 18, 85, 15, 79, 9, 44, 50, 149, 155, 135, 119, 129, 184, 190, 30, 26, 20, 55, 160, 16, 80, 35, 0, 70, 90, 105, 140, 150, 45, 10, 120, 130, 185, 175, 31, 30, 65, 27, 26, 61, 21, 20, 55, 56, 160, 161, 17, 51, 16, 81, 45, 10, 80, 36, 35, 70, 1, 71, 0, 90, 91, 140, 106, 141, 150, 151, 46, 11, 120, 121, 130, 131, 175, 186, 185, 176, 31, 30, 65, 66, 27, 26, 61, 62, 22, 21, 55, 20, 56, 57, 90, 100, 160, 161, 162, 52, 51, 17, 16, 82, 46, 80, 11, 81, 86, 96, 37, 36, 71, 2, 72, 1, 91, 92, 141, 107, 150, 142, 151, 152, 47, 10, 12, 121, 130, 45, 122, 131, 132, 176, 185, 187, 186, 177, 33, 68, 31, 30, 65, 66, 29, 64, 27, 26, 61, 62, 103, 22, 56, 21, 57, 91, 100, 101, 96, 161, 166, 162, 54, 19, 52, 16, 51, 86, 17, 99, 47, 81, 12, 82, 87, 97, 38, 37, 72, 3, 73, 2, 92, 142, 89, 108, 151, 156, 143, 152, 11, 122, 131, 136, 46, 123, 132, 177, 186, 191, 187, 178, 33, 68, 103, 31, 66, 64, 29, 99, 27, 62, 57, 22, 92, 101, 97, 162, 167, 54, 19, 89, 17, 52, 87, 82, 38, 73, 3, 143, 109, 152, 157, 12, 123, 132, 137, 47, 178, 187, 192, 33, 32, 30, 65, 29, 28, 26, 61, 23, 58, 55, 20, 100, 160, 163, 166, 19, 18, 16, 51, 83, 90, 45, 80, 96, 39, 4, 74, 70, 0, 93, 140, 110, 144, 150, 153, 156, 35, 86, 48, 120, 13, 10, 124, 130, 133, 136, 175, 191, 188, 185, 179, 33, 68, 32, 67, 31, 30, 65, 66, 29, 64, 28, 63, 27, 61, 26, 62, 24, 23, 58, 59, 56, 55, 20, 21, 90, 100, 101, 160, 161, 163, 166, 164, 167, 54, 19, 53, 18, 17, 51, 16, 52, 86, 84, 48, 91, 13, 83, 46, 10, 80, 81, 96, 97, 40, 39, 74, 5, 75, 71, 4, 1, 93, 94, 141, 144, 111, 150, 145, 151, 153, 156, 154, 157, 36, 45, 87, 49, 121, 130, 14, 124, 11, 125, 131, 133, 136, 134, 137, 176, 179, 185, 192, 189, 191, 188, 186, 180, 33, 68, 32, 67, 31, 30, 65, 66, 100, 29, 64, 28, 63, 62, 61, 26, 27, 96, 103, 24, 58, 23, 59, 57, 56, 21, 22, 91, 93, 101, 102, 161, 163, 166, 162, 164, 167, 54, 19, 53, 52, 16, 17, 86, 18, 87, 99, 49, 83, 92, 14, 84, 47, 11, 81, 82, 97, 88, 98, 41, 40, 75, 6, 76, 72, 5, 2, 94, 89, 142, 145, 112, 151, 153, 156, 146, 152, 154, 157, 37, 46, 122, 131, 13, 125, 12, 133, 136, 48, 126, 132, 134, 51, 137, 177, 180, 186, 188, 191, 192, 189, 187, 181, 33, 68, 32, 67, 31, 66, 101, 29, 64, 99, 28, 63, 62, 27, 97, 103, 59, 24, 57, 22, 92, 94, 102, 98, 162, 164, 167, 168, 54, 19, 89, 18, 53, 88, 17, 87, 84, 12, 82, 41, 76, 73, 6, 3, 143, 146, 113, 152, 154, 157, 158, 38, 47, 123, 132, 14, 126, 134, 137, 138, 49, 52, 178, 181, 187, 189, 192, 193, 33, 68, 32, 67, 30, 65, 29, 64, 28, 63, 26, 61, 103, 25, 60, 58, 23, 55, 20, 90, 100, 102, 160, 163, 166, 165, 168, 19, 54, 18, 53, 51, 16, 86, 99, 85, 93, 48, 83, 96, 80, 10, 45, 98, 150, 42, 7, 77, 74, 4, 95, 144, 114, 147, 153, 156, 155, 158, 39, 88, 89, 50, 124, 130, 15, 13, 127, 133, 136, 135, 138, 179, 185, 195, 193, 190, 191, 188, 182, 33, 68, 32, 67, 31, 65, 66, 30, 100, 29, 64, 63, 28, 27, 61, 62, 26, 96, 103, 25, 60, 59, 58, 23, 24, 93, 56, 21, 91, 101, 102, 161, 163, 166, 164, 167, 165, 168, 54, 19, 53, 18, 52, 86, 51, 17, 87, 88, 99, 50, 94, 15, 85, 49, 13, 83, 84, 97, 81, 11, 46, 98, 89, 151, 43, 42, 77, 8, 78, 75, 7, 5, 95, 145, 147, 115, 153, 156, 148, 154, 157, 155, 158, 40, 48, 125, 131, 133, 136, 127, 14, 128, 134, 137, 135, 138, 16, 180, 186, 196, 182, 188, 191, 193, 190, 192, 189, 183, 33, 68, 103, 32, 67, 66, 31, 101, 102, 64, 29, 99, 63, 28, 62, 27, 97, 98, 60, 25, 59, 24, 94, 57, 22, 92, 95, 162, 164, 167, 165, 168, 19, 89, 18, 88, 87, 52, 85, 14, 84, 82, 12, 47, 152, 43, 78, 76, 8, 6, 146, 148, 116, 154, 157, 155, 158, 41, 49, 126, 132, 134, 137, 15, 128, 135, 138, 50, 53, 17, 54, 181, 187, 197, 183, 189, 192, 190, 193, 33, 68, 32, 67, 65, 30, 100, 64, 28, 63, 61, 26, 96, 103, 60, 25, 58, 23, 93, 102, 163, 166, 165, 168, 54, 19, 89, 53, 18, 86, 29, 88, 16, 99, 95, 50, 85, 98, 83, 13, 48, 51, 153, 44, 9, 79, 77, 7, 147, 156, 117, 149, 155, 158, 42, 136, 127, 133, 15, 129, 135, 138, 182, 188, 198, 191, 193, 190, 184, 33, 68, 103, 67, 32, 102, 66, 31, 101, 29, 64, 99, 63, 28, 98, 62, 27, 97, 60, 25, 95, 59, 24, 94, 164, 167, 165, 168, 19, 89, 88, 53, 87, 17, 15, 85, 84, 14, 49, 52, 154, 44, 79, 78, 9, 8, 148, 157, 149, 118, 155, 158, 43, 50, 54, 137, 128, 134, 135, 138, 129, 18, 183, 189, 199, 192, 184, 190, 193, 33, 68, 103, 67, 32, 102, 64, 29, 99, 63, 28, 98, 60, 25, 95, 165, 168, 54, 89, 19, 88, 18, 85, 15, 50, 53, 155, 79, 9, 149, 158, 119, 44, 138, 129, 135, 184, 190, 200, 193, 33, 30, 65, 29, 26, 61, 55, 20, 90, 100, 140, 160, 166, 19, 86, 45, 10, 80, 96, 35, 0, 120, 150, 156, 51, 70, 16, 130, 136, 175, 191, 195, 185, 33, 68, 31, 30, 65, 66, 29, 64, 27, 26, 61, 62, 56, 55, 21, 90, 20, 91, 100, 101, 160, 141, 161, 166, 167, 54, 19, 87, 51, 16, 86, 46, 45, 80, 11, 81, 10, 96, 97, 150, 36, 1, 121, 151, 156, 157, 52, 71, 17, 130, 131, 136, 137, 176, 185, 195, 192, 191, 196, 186, 33, 68, 31, 65, 66, 30, 100, 29, 64, 27, 61, 26, 62, 96, 103, 57, 56, 22, 91, 21, 92, 101, 161, 142, 166, 162, 167, 54, 19, 52, 86, 17, 87, 89, 99, 47, 46, 81, 12, 82, 11, 97, 151, 37, 2, 122, 156, 152, 157, 72, 16, 131, 136, 51, 132, 137, 177, 186, 196, 191, 192, 197, 187, 33, 68, 66, 31, 101, 29, 64, 62, 27, 97, 103, 57, 92, 22, 162, 99, 143, 167, 169, 19, 54, 89, 87, 47, 82, 12, 152, 38, 3, 123, 157, 159, 73, 17, 132, 137, 139, 52, 178, 187, 197, 192, 194, 33, 68, 32, 67, 30, 65, 29, 64, 28, 63, 61, 26, 103, 58, 23, 20, 90, 55, 93, 100, 102, 160, 144, 163, 166, 168, 169, 19, 54, 88, 96, 51, 86, 99, 48, 13, 83, 80, 10, 98, 150, 39, 4, 124, 153, 156, 158, 159, 45, 89, 53, 130, 74, 18, 16, 133, 136, 138, 139, 179, 185, 195, 194, 193, 191, 198, 188, 33, 68, 32, 67, 31, 30, 65, 66, 100, 64, 29, 28, 63, 62, 61, 26, 27, 96, 103, 59, 58, 24, 93, 23, 21, 91, 56, 94, 101, 102, 161, 163, 145, 166, 164, 167, 168, 169, 54, 19, 89, 53, 97, 18, 88, 52, 16, 86, 87, 99, 49, 48, 83, 14, 84, 81, 13, 11, 98, 151, 153, 40, 5, 125, 156, 154, 157, 158, 159, 46, 51, 131, 75, 136, 133, 17, 134, 137, 138, 139, 180, 186, 196, 188, 198, 191, 194, 193, 192, 199, 189, 33, 68, 103, 67, 32, 31, 66, 101, 102, 64, 29, 99, 63, 28, 62, 27, 97, 98, 59, 94, 24, 22, 92, 57, 162, 164, 146, 167, 168, 169, 19, 89, 88, 17, 87, 49, 84, 82, 14, 12, 152, 154, 41, 6, 126, 157, 158, 159, 47, 52, 132, 76, 137, 18, 134, 138, 139, 53, 54, 181, 187, 197, 189, 199, 192, 193, 194, 33, 68, 32, 67, 65, 30, 100, 29, 64, 63, 28, 61, 26, 96, 103, 166, 60, 25, 23, 93, 58, 95, 102, 163, 147, 165, 168, 169, 54, 19, 89, 98, 53, 88, 99, 86, 16, 51, 156, 50, 15, 85, 83, 13, 153, 42, 7, 127, 155, 158, 159, 48, 133, 136, 77, 18, 135, 138, 139, 182, 188, 198, 191, 201, 194, 193, 200, 190, 68, 33, 103, 32, 67, 102, 66, 31, 101, 64, 29, 99, 63, 28, 98, 62, 27, 97, 167, 60, 95, 25, 24, 94, 59, 164, 165, 148, 168, 169, 89, 54, 18, 88, 87, 17, 52, 157, 50, 85, 84, 15, 14, 154, 155, 43, 8, 128, 158, 159, 49, 53, 134, 137, 78, 138, 139, 135, 19, 183, 189, 199, 192, 202, 190, 200, 193, 194, 68, 33, 103, 67, 32, 102, 64, 29, 99, 63, 28, 98, 168, 25, 95, 60, 165, 169, 149, 89, 19, 88, 18, 53, 54, 158, 85, 15, 155, 159, 44, 9, 129, 50, 139, 135, 138, 79, 184, 190, 200, 193, 203, 194, 33, 68, 30, 65, 100, 160, 29, 64, 61, 26, 96, 103, 55, 90, 150, 166, 169, 89, 51, 16, 86, 20, 99, 45, 10, 130, 156, 159, 54, 80, 19, 136, 139, 185, 195, 194, 201, 191, 33, 68, 31, 65, 66, 30, 100, 101, 161, 29, 64, 62, 61, 27, 96, 26, 97, 103, 166, 56, 91, 151, 167, 169, 54, 19, 89, 52, 51, 86, 17, 87, 16, 99, 21, 156, 46, 11, 131, 157, 159, 81, 136, 137, 139, 186, 196, 191, 201, 194, 202, 192, 68, 33, 103, 66, 31, 101, 162, 64, 29, 99, 62, 97, 27, 167, 57, 92, 152, 169, 89, 52, 87, 17, 22, 157, 47, 12, 132, 159, 82, 19, 137, 139, 54, 187, 197, 192, 202, 194, 33, 68, 32, 67, 30, 65, 100, 102, 163, 64, 29, 63, 28, 26, 96, 61, 98, 103, 166, 58, 93, 153, 168, 169, 99, 54, 89, 53, 18, 88, 86, 16, 23, 156, 48, 13, 133, 158, 159, 51, 136, 83, 19, 138, 139, 188, 198, 191, 201, 194, 203, 193, 33, 68, 103, 67, 32, 102, 31, 66, 101, 164, 64, 29, 99, 63, 98, 28, 27, 97, 62, 167, 168, 59, 94, 154, 169, 19, 89, 53, 88, 87, 18, 17, 24, 157, 158, 49, 14, 134, 159, 52, 54, 137, 84, 139, 138, 189, 199, 192, 202, 193, 203, 194, 68, 33, 103, 32, 67, 102, 165, 64, 29, 99, 169, 28, 98, 63, 168, 60, 95, 155, 89, 19, 54, 159, 88, 18, 25, 158, 50, 15, 135, 53, 138, 139, 85, 190, 200, 193, 203, 194, 204, 0, 105, 1, 0, 35, 105, 106, 2, 1, 35, 36, 0, 70, 105, 106, 107, 55, 20, 90, 3, 2, 36, 70, 37, 0, 1, 71, 35, 140, 106, 107, 108, 175, 56, 55, 20, 21, 90, 91, 3, 37, 71, 38, 1, 2, 72, 36, 141, 107, 108, 109, 176, 57, 56, 21, 22, 91, 92, 38, 72, 2, 3, 73, 37, 142, 108, 109, 177, 57, 22, 92, 73, 3, 38, 143, 109, 178, 20, 4, 35, 0, 70, 140, 105, 110, 175, 21, 55, 20, 5, 4, 39, 36, 35, 70, 0, 1, 71, 140, 141, 105, 106, 110, 111, 175, 176, 22, 56, 55, 21, 20, 90, 6, 5, 39, 40, 4, 37, 36, 70, 0, 71, 1, 74, 2, 72, 140, 141, 142, 106, 110, 107, 35, 111, 112, 175, 176, 177, 58, 23, 57, 56, 55, 20, 22, 21, 90, 91, 93, 6, 40, 74, 41, 4, 5, 38, 37, 71, 1, 72, 2, 75, 3, 73, 39, 141, 144, 142, 143, 107, 111, 108, 36, 112, 113, 176, 179, 177, 178, 59, 58, 23, 24, 93, 57, 56, 21, 22, 91, 92, 94, 41, 75, 5, 6, 38, 72, 2, 73, 3, 76, 40, 142, 145, 143, 108, 112, 109, 37, 113, 177, 180, 178, 59, 24, 94, 57, 22, 92, 76, 6, 73, 3, 41, 143, 146, 109, 113, 38, 178, 181, 23, 20, 55, 7, 39, 35, 70, 4, 74, 90, 0, 105, 140, 144, 110, 114, 175, 179, 24, 58, 23, 21, 55, 20, 56, 90, 8, 7, 42, 40, 39, 74, 4, 36, 70, 71, 5, 75, 91, 1, 140, 106, 141, 144, 145, 35, 110, 111, 0, 114, 115, 175, 179, 176, 180, 59, 58, 24, 23, 22, 56, 20, 21, 57, 90, 91, 93, 8, 42, 43, 7, 41, 40, 74, 4, 75, 5, 37, 71, 72, 77, 6, 76, 92, 2, 141, 107, 144, 142, 145, 146, 55, 36, 111, 114, 112, 1, 39, 115, 116, 176, 179, 180, 177, 181, 60, 25, 59, 58, 23, 24, 57, 21, 22, 91, 93, 92, 94, 95, 43, 77, 7, 8, 41, 75, 5, 76, 6, 38, 72, 73, 78, 3, 42, 142, 108, 145, 147, 143, 146, 56, 37, 112, 115, 113, 2, 40, 116, 177, 180, 182, 181, 178, 60, 25, 95, 59, 24, 22, 92, 94, 78, 8, 76, 6, 73, 43, 143, 109, 146, 148, 57, 38, 113, 116, 3, 41, 178, 181, 183, 25, 23, 58, 55, 20, 90, 9, 42, 39, 74, 7, 35, 0, 77, 93, 4, 140, 110, 70, 144, 147, 114, 117, 175, 179, 182, 60, 25, 24, 58, 23, 59, 56, 20, 90, 21, 91, 93, 9, 44, 43, 42, 77, 7, 40, 74, 75, 8, 36, 1, 78, 94, 55, 5, 141, 144, 111, 71, 145, 147, 148, 39, 114, 115, 4, 117, 118, 176, 179, 182, 180, 183, 60, 25, 59, 23, 24, 93, 57, 21, 91, 22, 92, 94, 95, 44, 9, 43, 77, 7, 78, 8, 41, 75, 76, 79, 37, 2, 56, 6, 142, 145, 112, 147, 72, 146, 148, 58, 40, 115, 117, 116, 5, 42, 118, 177, 180, 182, 183, 181, 60, 25, 24, 94, 22, 92, 95, 79, 9, 78, 8, 76, 38, 3, 57, 143, 44, 146, 113, 148, 73, 149, 59, 41, 116, 118, 6, 43, 178, 181, 183, 184, 25, 60, 58, 23, 55, 90, 20, 93, 44, 42, 77, 9, 39, 4, 79, 95, 7, 144, 114, 74, 147, 149, 117, 119, 179, 182, 184, 60, 25, 59, 23, 93, 24, 56, 91, 21, 94, 95, 44, 79, 9, 43, 77, 78, 40, 5, 58, 8, 145, 147, 115, 75, 148, 149, 42, 117, 118, 7, 119, 180, 182, 184, 183, 25, 95, 24, 94, 57, 92, 22, 79, 9, 78, 41, 6, 59, 146, 148, 116, 149, 76, 60, 43, 118, 119, 8, 44, 181, 183, 184, 60, 25, 58, 93, 23, 95, 44, 79, 42, 7, 9, 147, 117, 77, 149, 119, 182, 184, 25, 95, 59, 94, 24, 79, 43, 8, 60, 148, 149, 118, 78, 44, 119, 9, 183, 184, 60, 95, 25, 44, 9, 149, 119, 79, 184, 20, 10, 35, 70, 140, 0, 105, 120, 175, 21, 55, 20, 11, 10, 45, 36, 70, 35, 71, 105, 140, 141, 1, 106, 120, 121, 0, 175, 176, 22, 56, 55, 21, 20, 90, 12, 11, 45, 46, 10, 80, 37, 71, 0, 36, 72, 70, 140, 106, 141, 142, 2, 120, 35, 107, 121, 122, 1, 175, 176, 177, 30, 65, 61, 26, 57, 56, 20, 22, 55, 90, 21, 100, 91, 96, 160, 12, 46, 80, 47, 10, 11, 81, 38, 72, 1, 37, 73, 71, 45, 141, 107, 150, 142, 143, 3, 121, 36, 108, 122, 123, 2, 176, 185, 195, 177, 178, 31, 65, 66, 30, 100, 62, 61, 26, 27, 96, 57, 21, 56, 91, 22, 101, 92, 97, 161, 47, 81, 11, 12, 82, 73, 2, 38, 72, 46, 142, 108, 151, 143, 122, 37, 109, 123, 3, 177, 186, 196, 178, 66, 31, 101, 62, 27, 97, 22, 57, 92, 162, 82, 12, 3, 73, 47, 143, 109, 152, 123, 38, 178, 187, 197, 30, 26, 23, 20, 55, 160, 13, 45, 10, 80, 90, 39, 74, 0, 70, 35, 105, 140, 144, 150, 4, 120, 110, 124, 195, 175, 179, 185, 31, 30, 65, 27, 61, 26, 24, 58, 23, 21, 55, 20, 56, 90, 160, 161, 14, 13, 48, 46, 45, 80, 10, 11, 81, 91, 40, 74, 39, 75, 1, 71, 35, 36, 106, 140, 110, 141, 144, 150, 145, 151, 0, 120, 5, 121, 111, 124, 70, 125, 4, 175, 196, 195, 179, 176, 185, 180, 186, 31, 30, 65, 66, 62, 61, 27, 26, 59, 58, 24, 22, 56, 20, 21, 57, 90, 23, 91, 100, 93, 96, 160, 161, 162, 14, 48, 49, 13, 47, 46, 80, 10, 81, 11, 83, 12, 82, 92, 41, 75, 4, 40, 76, 74, 2, 72, 36, 37, 107, 141, 144, 150, 111, 142, 145, 55, 151, 146, 152, 1, 121, 6, 124, 122, 39, 112, 45, 125, 71, 126, 5, 176, 179, 185, 195, 197, 196, 180, 177, 186, 181, 187, 32, 67, 31, 30, 65, 66, 100, 63, 28, 62, 61, 26, 27, 96, 59, 23, 58, 93, 57, 21, 22, 91, 24, 92, 101, 102, 94, 97, 98, 161, 163, 162, 49, 83, 13, 14, 47, 81, 11, 82, 12, 84, 76, 5, 41, 75, 3, 73, 37, 38, 108, 48, 142, 145, 151, 112, 153, 143, 146, 56, 152, 2, 122, 125, 123, 40, 113, 46, 126, 72, 6, 177, 180, 186, 196, 188, 198, 197, 181, 178, 187, 67, 32, 102, 31, 66, 101, 63, 28, 98, 62, 27, 97, 24, 59, 94, 22, 92, 162, 164, 84, 14, 82, 12, 6, 76, 38, 109, 49, 143, 146, 152, 113, 154, 57, 3, 123, 126, 41, 47, 73, 178, 181, 187, 197, 189, 199, 32, 30, 65, 28, 26, 61, 25, 23, 58, 55, 20, 90, 100, 160, 163, 15, 48, 45, 80, 13, 83, 93, 96, 10, 42, 77, 4, 74, 39, 70, 0, 35, 110, 140, 120, 144, 150, 147, 153, 7, 124, 114, 127, 175, 198, 195, 179, 182, 185, 188, 32, 67, 31, 30, 65, 66, 63, 28, 27, 61, 26, 62, 60, 25, 24, 58, 23, 59, 56, 90, 55, 21, 91, 93, 100, 101, 96, 160, 161, 163, 164, 15, 50, 49, 48, 83, 13, 46, 80, 81, 14, 84, 94, 97, 11, 43, 77, 42, 78, 5, 75, 39, 40, 71, 1, 36, 111, 141, 144, 150, 121, 114, 145, 151, 147, 153, 148, 20, 154, 4, 45, 124, 8, 125, 115, 10, 127, 74, 128, 7, 176, 179, 185, 195, 199, 198, 196, 182, 180, 188, 183, 186, 189, 32, 67, 31, 65, 66, 30, 100, 63, 28, 62, 26, 27, 96, 60, 59, 23, 24, 93, 57, 91, 56, 25, 22, 92, 94, 101, 102, 97, 95, 98, 161, 163, 162, 164, 50, 15, 49, 83, 13, 84, 14, 47, 81, 82, 85, 12, 78, 7, 43, 77, 6, 76, 40, 41, 72, 2, 37, 112, 142, 145, 151, 122, 147, 153, 115, 146, 152, 148, 58, 154, 21, 61, 5, 46, 125, 127, 126, 42, 116, 11, 48, 128, 75, 8, 177, 180, 186, 196, 182, 188, 198, 199, 197, 183, 181, 189, 187, 32, 67, 66, 31, 101, 102, 63, 28, 27, 97, 98, 25, 60, 95, 24, 94, 92, 57, 162, 164, 165, 85, 15, 84, 14, 82, 8, 78, 41, 73, 3, 38, 113, 50, 143, 146, 152, 123, 148, 154, 116, 155, 59, 22, 62, 6, 47, 126, 128, 43, 12, 49, 76, 178, 181, 187, 197, 183, 189, 199, 190, 200, 32, 67, 65, 28, 63, 61, 26, 96, 25, 60, 58, 23, 90, 30, 93, 20, 100, 102, 55, 160, 163, 165, 50, 48, 83, 15, 45, 10, 85, 95, 98, 13, 150, 44, 79, 7, 77, 42, 74, 4, 39, 114, 144, 124, 80, 147, 153, 149, 155, 9, 127, 117, 129, 179, 185, 195, 200, 198, 182, 184, 188, 190, 32, 67, 66, 30, 65, 100, 63, 28, 62, 26, 96, 27, 97, 60, 25, 59, 93, 58, 24, 91, 31, 94, 21, 101, 95, 102, 98, 56, 161, 163, 164, 165, 50, 85, 15, 49, 83, 84, 46, 11, 61, 14, 151, 79, 44, 8, 78, 42, 43, 75, 5, 40, 115, 145, 147, 153, 125, 81, 117, 148, 154, 149, 155, 23, 7, 48, 127, 128, 118, 13, 129, 77, 9, 180, 186, 196, 182, 188, 198, 200, 199, 184, 183, 190, 189, 67, 32, 31, 66, 101, 102, 28, 98, 27, 97, 25, 95, 94, 59, 92, 22, 57, 162, 164, 165, 85, 15, 84, 47, 12, 62, 152, 9, 79, 43, 76, 6, 41, 116, 146, 148, 154, 126, 149, 155, 82, 118, 60, 24, 63, 8, 49, 128, 129, 44, 14, 50, 78, 181, 187, 197, 183, 189, 199, 184, 190, 200, 67, 65, 30, 100, 63, 28, 61, 96, 26, 98, 60, 25, 93, 32, 95, 23, 102, 58, 163, 165, 50, 85, 48, 13, 15, 153, 9, 79, 44, 77, 7, 42, 117, 147, 127, 83, 149, 155, 129, 119, 182, 188, 198, 200, 184, 190, 32, 67, 102, 66, 31, 101, 28, 98, 62, 97, 27, 95, 60, 94, 24, 59, 164, 165, 85, 49, 14, 63, 154, 44, 78, 8, 43, 118, 148, 149, 155, 128, 84, 119, 25, 9, 50, 129, 15, 79, 183, 189, 199, 184, 190, 200, 67, 32, 102, 63, 98, 28, 95, 25, 60, 165, 50, 15, 155, 79, 9, 44, 119, 149, 129, 85, 184, 190, 200, 30, 26, 90, 160, 16, 45, 80, 55, 70, 0, 105, 35, 20, 140, 150, 10, 120, 130, 175, 195, 185, 31, 30, 65, 27, 61, 26, 91, 55, 20, 90, 160, 161, 17, 16, 51, 46, 80, 45, 81, 56, 71, 35, 1, 106, 36, 0, 21, 140, 120, 141, 150, 151, 11, 70, 121, 130, 131, 10, 175, 176, 196, 195, 185, 186, 31, 30, 65, 66, 62, 61, 27, 26, 92, 56, 90, 21, 91, 96, 100, 160, 161, 162, 17, 51, 52, 16, 86, 47, 81, 10, 46, 82, 80, 57, 72, 36, 2, 107, 37, 1, 20, 22, 141, 150, 121, 55, 142, 151, 152, 12, 130, 71, 45, 122, 131, 132, 11, 176, 185, 195, 177, 197, 196, 186, 187, 34, 69, 33, 68, 31, 30, 65, 66, 104, 100, 170, 64, 29, 62, 26, 61, 96, 27, 103, 57, 91, 22, 92, 97, 101, 99, 161, 166, 162, 52, 86, 16, 17, 87, 82, 11, 47, 81, 51, 73, 37, 3, 108, 38, 2, 21, 142, 151, 122, 156, 56, 143, 152, 131, 72, 46, 123, 132, 12, 177, 186, 196, 191, 201, 178, 197, 187, 34, 69, 104, 68, 33, 103, 31, 66, 101, 171, 64, 29, 99, 27, 62, 97, 92, 162, 167, 87, 17, 12, 82, 52, 38, 109, 3, 22, 143, 152, 123, 157, 57, 132, 73, 47, 178, 187, 197, 192, 202, 34, 33, 32, 30, 65, 170, 29, 28, 26, 61, 93, 55, 90, 100, 160, 163, 166, 18, 51, 16, 86, 96, 48, 83, 10, 80, 45, 58, 120, 140, 74, 4, 110, 39, 0, 70, 23, 20, 144, 150, 153, 156, 13, 130, 124, 35, 133, 175, 179, 201, 198, 195, 185, 188, 191, 34, 69, 33, 68, 32, 67, 31, 65, 30, 66, 170, 171, 64, 29, 63, 28, 27, 61, 26, 62, 96, 94, 58, 23, 93, 56, 20, 90, 91, 100, 101, 160, 161, 163, 166, 164, 167, 18, 53, 52, 51, 86, 16, 17, 55, 87, 97, 49, 83, 48, 84, 11, 81, 45, 46, 59, 121, 141, 150, 75, 39, 5, 111, 40, 1, 71, 4, 24, 144, 21, 124, 145, 151, 153, 156, 154, 157, 10, 130, 14, 74, 131, 125, 133, 80, 36, 134, 13, 176, 179, 185, 195, 180, 202, 199, 201, 198, 196, 188, 186, 191, 189, 192, 34, 69, 33, 68, 32, 67, 66, 65, 30, 31, 100, 104, 170, 171, 64, 29, 63, 62, 26, 27, 96, 28, 97, 103, 59, 93, 24, 94, 57, 21, 91, 92, 101, 98, 102, 99, 161, 163, 166, 162, 164, 167, 53, 18, 52, 86, 16, 87, 17, 88, 56, 84, 13, 49, 83, 12, 82, 46, 47, 122, 142, 151, 76, 40, 6, 112, 41, 2, 72, 5, 23, 145, 22, 153, 156, 125, 58, 146, 152, 154, 61, 157, 11, 131, 133, 75, 132, 48, 126, 51, 134, 81, 37, 14, 177, 180, 186, 196, 188, 198, 191, 201, 181, 202, 199, 197, 189, 187, 192, 34, 69, 33, 68, 103, 32, 67, 66, 31, 101, 104, 102, 171, 172, 64, 29, 99, 28, 63, 98, 27, 97, 94, 22, 92, 162, 164, 167, 168, 88, 18, 87, 17, 57, 14, 84, 47, 123, 143, 53, 152, 41, 113, 3, 73, 6, 24, 146, 154, 157, 126, 158, 59, 62, 12, 132, 134, 76, 49, 52, 82, 38, 178, 181, 187, 197, 189, 199, 192, 202, 193, 203, 34, 69, 33, 68, 32, 67, 30, 65, 104, 170, 172, 29, 64, 28, 63, 61, 26, 96, 103, 95, 58, 93, 100, 90, 20, 55, 102, 160, 163, 166, 165, 168, 53, 51, 86, 18, 88, 98, 99, 16, 50, 85, 13, 83, 48, 60, 80, 10, 45, 124, 144, 150, 77, 7, 114, 42, 4, 74, 130, 25, 23, 147, 153, 156, 155, 158, 15, 133, 127, 39, 135, 179, 185, 195, 182, 203, 200, 201, 198, 188, 190, 191, 193, 34, 69, 33, 68, 67, 32, 31, 65, 66, 30, 100, 104, 170, 171, 172, 64, 29, 63, 28, 62, 96, 61, 27, 97, 98, 103, 60, 25, 95, 59, 23, 93, 94, 101, 91, 21, 56, 102, 99, 161, 163, 166, 164, 167, 165, 168, 53, 88, 18, 52, 86, 87, 58, 17, 85, 50, 14, 84, 48, 49, 81, 11, 46, 125, 145, 151, 153, 156, 78, 42, 8, 115, 43, 5, 75, 131, 7, 147, 24, 127, 148, 154, 157, 155, 158, 26, 13, 51, 133, 77, 134, 128, 16, 135, 83, 40, 15, 180, 186, 196, 182, 188, 198, 191, 201, 183, 203, 200, 202, 199, 190, 189, 193, 192, 34, 69, 104, 68, 33, 103, 67, 32, 66, 31, 101, 102, 171, 172, 29, 99, 28, 98, 97, 62, 95, 24, 94, 92, 22, 57, 162, 164, 167, 165, 168, 88, 18, 87, 59, 15, 85, 49, 82, 12, 47, 126, 146, 152, 154, 157, 43, 116, 6, 76, 132, 8, 25, 148, 155, 158, 128, 60, 63, 27, 64, 14, 52, 134, 135, 78, 50, 17, 53, 84, 41, 181, 187, 197, 183, 189, 199, 192, 202, 190, 200, 193, 203, 34, 69, 68, 32, 67, 65, 30, 100, 104, 170, 172, 64, 29, 99, 63, 28, 96, 33, 98, 26, 103, 60, 95, 102, 93, 23, 58, 61, 163, 166, 165, 168, 53, 88, 51, 16, 18, 156, 15, 85, 50, 83, 13, 48, 127, 147, 153, 79, 9, 117, 44, 7, 77, 133, 25, 86, 149, 155, 158, 135, 129, 42, 182, 188, 198, 191, 201, 184, 203, 200, 190, 193, 34, 69, 104, 33, 68, 103, 67, 32, 102, 66, 31, 101, 171, 172, 29, 99, 98, 63, 97, 27, 25, 95, 94, 24, 59, 62, 164, 167, 165, 168, 88, 52, 17, 60, 64, 157, 50, 84, 14, 49, 128, 148, 154, 155, 158, 44, 118, 8, 78, 134, 9, 149, 87, 129, 28, 15, 53, 135, 79, 18, 85, 43, 183, 189, 199, 192, 202, 184, 190, 200, 193, 203, 34, 69, 104, 68, 33, 103, 67, 32, 102, 172, 64, 99, 29, 98, 28, 95, 25, 60, 63, 165, 168, 53, 18, 158, 85, 15, 50, 129, 149, 155, 119, 9, 79, 135, 88, 44, 184, 190, 200, 193, 203, 34, 33, 30, 65, 170, 29, 96, 55, 20, 90, 100, 140, 160, 166, 19, 51, 86, 61, 80, 10, 120, 45, 26, 70, 0, 150, 156, 16, 130, 35, 136, 175, 185, 201, 191, 195, 34, 69, 33, 68, 31, 30, 65, 66, 170, 171, 64, 29, 97, 61, 26, 96, 56, 55, 90, 21, 91, 20, 100, 101, 160, 141, 161, 166, 167, 19, 54, 52, 86, 51, 87, 62, 81, 45, 11, 121, 46, 10, 27, 150, 71, 1, 130, 151, 156, 157, 17, 80, 131, 36, 136, 137, 16, 176, 185, 195, 186, 202, 201, 191, 192, 196, 34, 69, 33, 68, 31, 65, 30, 66, 100, 104, 170, 171, 64, 29, 62, 96, 27, 97, 99, 103, 57, 56, 91, 22, 92, 21, 101, 161, 142, 166, 162, 167, 54, 19, 89, 87, 16, 52, 86, 82, 46, 12, 122, 47, 11, 26, 151, 156, 72, 2, 131, 61, 152, 157, 136, 81, 51, 132, 37, 137, 17, 177, 186, 196, 191, 201, 187, 202, 192, 197, 34, 69, 33, 68, 66, 31, 101, 104, 103, 171, 173, 29, 64, 99, 97, 57, 92, 22, 162, 143, 167, 169, 89, 19, 17, 87, 54, 47, 123, 12, 27, 152, 157, 73, 3, 132, 159, 62, 137, 82, 52, 38, 178, 187, 197, 192, 202, 194, 204, 34, 69, 33, 68, 32, 67, 65, 30, 104, 170, 172, 173, 29, 64, 98, 100, 61, 96, 103, 58, 23, 93, 90, 20, 102, 160, 144, 163, 166, 168, 169, 54, 19, 55, 89, 99, 53, 88, 16, 86, 51, 63, 130, 150, 83, 13, 124, 48, 10, 80, 28, 26, 74, 4, 153, 156, 158, 159, 18, 136, 133, 39, 45, 138, 179, 185, 195, 188, 204, 203, 201, 191, 193, 194, 198, 34, 69, 68, 33, 32, 67, 66, 65, 30, 31, 100, 104, 170, 171, 172, 173, 64, 29, 99, 63, 101, 28, 98, 62, 26, 96, 97, 103, 59, 58, 93, 24, 94, 91, 23, 21, 102, 161, 163, 145, 166, 164, 167, 168, 169, 54, 89, 19, 56, 61, 88, 53, 17, 87, 51, 52, 131, 151, 156, 84, 48, 14, 125, 49, 11, 81, 13, 153, 27, 75, 5, 133, 154, 157, 158, 159, 16, 136, 83, 137, 134, 40, 138, 86, 46, 18, 180, 186, 196, 188, 198, 191, 201, 189, 204, 203, 202, 193, 192, 194, 199, 34, 69, 104, 68, 33, 103, 67, 32, 66, 31, 101, 102, 171, 172, 173, 29, 99, 98, 27, 97, 59, 94, 92, 24, 22, 162, 164, 146, 167, 168, 169, 89, 19, 57, 62, 18, 88, 52, 132, 152, 157, 49, 126, 12, 82, 14, 28, 154, 158, 159, 76, 6, 134, 63, 64, 17, 137, 138, 84, 53, 41, 54, 87, 47, 181, 187, 197, 189, 199, 192, 202, 193, 203, 194, 204, 34, 69, 33, 68, 67, 32, 65, 30, 100, 104, 170, 172, 173, 64, 29, 99, 102, 63, 98, 103, 96, 26, 61, 166, 60, 25, 95, 93, 23, 163, 147, 165, 168, 169, 54, 89, 58, 19, 18, 88, 53, 86, 16, 51, 133, 153, 156, 85, 15, 127, 50, 13, 83, 136, 28, 77, 7, 155, 158, 159, 138, 135, 42, 48, 182, 188, 198, 191, 201, 205, 190, 204, 203, 193, 194, 200, 69, 34, 104, 68, 33, 103, 67, 32, 102, 66, 31, 101, 171, 172, 173, 99, 64, 28, 98, 97, 27, 62, 167, 60, 95, 94, 25, 24, 164, 165, 148, 168, 169, 89, 59, 63, 53, 87, 17, 52, 134, 154, 157, 158, 159, 50, 128, 14, 84, 137, 15, 155, 78, 8, 135, 29, 18, 54, 138, 85, 43, 19, 88, 49, 183, 189, 199, 192, 202, 206, 190, 200, 193, 203, 194, 204, 69, 34, 104, 68, 33, 103, 67, 32, 102, 172, 173, 99, 29, 98, 28, 63, 64, 168, 95, 25, 165, 169, 149, 54, 19, 60, 159, 88, 18, 53, 135, 155, 158, 129, 15, 85, 138, 79, 9, 89, 44, 50, 184, 190, 200, 193, 203, 207, 194, 204, 34, 69, 33, 68, 65, 30, 100, 104, 160, 170, 173, 99, 61, 26, 96, 103, 55, 20, 150, 166, 169, 54, 89, 64, 90, 86, 16, 130, 51, 29, 80, 10, 156, 159, 19, 136, 45, 139, 185, 195, 191, 204, 205, 194, 201, 34, 69, 33, 68, 66, 65, 31, 100, 30, 101, 104, 170, 161, 171, 173, 64, 29, 99, 62, 61, 96, 27, 97, 26, 103, 166, 56, 21, 151, 167, 169, 89, 54, 91, 87, 51, 17, 131, 52, 16, 156, 81, 11, 136, 157, 159, 86, 137, 46, 139, 19, 186, 196, 191, 201, 205, 192, 204, 206, 194, 202, 69, 34, 104, 68, 33, 103, 66, 101, 31, 171, 162, 173, 99, 62, 97, 27, 167, 57, 22, 152, 169, 19, 89, 92, 52, 132, 17, 29, 157, 159, 82, 12, 137, 64, 139, 87, 54, 47, 187, 197, 192, 202, 206, 194, 204, 34, 69, 68, 33, 67, 32, 30, 100, 65, 102, 104, 170, 163, 172, 173, 103, 64, 99, 63, 28, 98, 96, 26, 166, 58, 23, 153, 168, 169, 61, 19, 89, 54, 136, 156, 93, 88, 18, 133, 53, 16, 86, 29, 83, 13, 158, 159, 139, 138, 48, 51, 188, 198, 191, 201, 205, 193, 204, 207, 194, 203, 34, 69, 104, 68, 33, 103, 67, 102, 32, 31, 101, 66, 171, 172, 164, 173, 29, 99, 63, 98, 97, 28, 27, 167, 168, 59, 24, 154, 169, 62, 64, 54, 137, 157, 94, 159, 53, 134, 17, 87, 18, 158, 84, 14, 138, 19, 139, 88, 49, 89, 52, 189, 199, 192, 202, 206, 193, 203, 207, 194, 204, 69, 34, 104, 68, 33, 103, 173, 32, 102, 67, 172, 165, 99, 29, 64, 169, 98, 28, 168, 60, 25, 155, 63, 89, 19, 54, 138, 158, 159, 95, 135, 18, 88, 139, 85, 15, 50, 53, 190, 200, 193, 203, 207, 194, 204, 208, 20, 0, 70, 105, 140, 35, 175, 21, 20, 55, 1, 35, 105, 70, 71, 106, 140, 141, 36, 0, 175, 176, 22, 21, 55, 56, 20, 90, 2, 36, 0, 106, 70, 71, 140, 35, 72, 107, 141, 142, 37, 1, 175, 176, 177, 65, 30, 100, 22, 56, 90, 57, 20, 21, 91, 55, 160, 3, 37, 1, 107, 71, 72, 141, 36, 73, 108, 142, 143, 38, 2, 176, 195, 177, 178, 66, 65, 30, 31, 100, 101, 57, 91, 21, 22, 92, 56, 161, 38, 2, 108, 72, 73, 142, 37, 109, 143, 3, 177, 196, 178, 66, 31, 101, 92, 22, 57, 162, 3, 109, 73, 143, 38, 178, 197, 30, 23, 55, 20, 90, 160, 4, 105, 0, 74, 110, 140, 35, 144, 70, 39, 175, 179, 195, 31, 65, 30, 24, 23, 58, 56, 55, 90, 20, 21, 91, 160, 161, 5, 39, 110, 106, 1, 0, 140, 74, 35, 75, 111, 141, 70, 144, 36, 145, 71, 40, 4, 175, 179, 195, 176, 180, 196, 66, 65, 31, 30, 100, 24, 58, 59, 23, 57, 56, 90, 20, 91, 21, 93, 22, 92, 160, 161, 162, 6, 40, 4, 111, 74, 107, 2, 1, 141, 75, 144, 39, 36, 76, 112, 142, 71, 55, 145, 37, 146, 72, 41, 5, 176, 179, 195, 180, 196, 177, 181, 197, 67, 32, 66, 65, 30, 31, 100, 101, 102, 59, 93, 23, 24, 57, 91, 21, 92, 22, 94, 58, 161, 163, 162, 41, 5, 112, 75, 108, 3, 2, 142, 76, 145, 40, 37, 113, 143, 72, 56, 146, 38, 73, 6, 177, 180, 196, 198, 181, 197, 178, 67, 32, 102, 66, 31, 101, 94, 24, 92, 22, 59, 162, 164, 6, 113, 76, 109, 3, 143, 146, 41, 38, 73, 57, 178, 181, 197, 199, 32, 30, 65, 25, 58, 55, 90, 23, 93, 100, 20, 140, 160, 163, 7, 110, 4, 70, 77, 114, 144, 35, 39, 147, 74, 42, 0, 175, 179, 182, 195, 198, 67, 32, 31, 65, 30, 66, 100, 25, 60, 59, 58, 93, 23, 56, 90, 91, 24, 94, 101, 21, 160, 141, 161, 163, 164, 8, 42, 114, 111, 5, 4, 55, 144, 71, 77, 39, 78, 115, 145, 36, 20, 74, 147, 40, 148, 75, 43, 7, 1, 176, 179, 195, 182, 198, 180, 183, 196, 199, 67, 32, 66, 30, 31, 100, 101, 102, 60, 25, 59, 93, 23, 94, 24, 57, 91, 92, 95, 22, 161, 142, 163, 162, 164, 65, 43, 7, 115, 77, 112, 6, 5, 56, 145, 72, 78, 147, 42, 40, 116, 146, 37, 21, 75, 58, 148, 41, 76, 8, 2, 177, 180, 196, 182, 198, 183, 199, 181, 197, 67, 32, 31, 101, 102, 95, 25, 94, 24, 92, 60, 162, 143, 164, 165, 66, 8, 116, 78, 113, 6, 57, 146, 73, 148, 43, 41, 38, 22, 76, 59, 3, 178, 181, 197, 183, 199, 200, 32, 67, 65, 30, 100, 60, 58, 93, 25, 55, 20, 95, 102, 23, 160, 144, 90, 163, 165, 9, 114, 7, 74, 79, 117, 147, 39, 42, 149, 77, 44, 4, 179, 195, 182, 184, 198, 200, 67, 32, 66, 30, 100, 31, 101, 102, 60, 95, 25, 59, 93, 94, 56, 21, 65, 24, 161, 163, 145, 91, 164, 165, 44, 117, 115, 8, 7, 58, 147, 75, 79, 42, 118, 148, 40, 23, 77, 149, 43, 78, 9, 5, 180, 196, 182, 198, 184, 200, 183, 199, 32, 102, 31, 101, 95, 25, 94, 57, 22, 66, 162, 164, 146, 165, 92, 67, 9, 118, 79, 116, 8, 59, 148, 76, 149, 44, 43, 41, 24, 78, 60, 6, 181, 197, 183, 199, 184, 200, 67, 32, 65, 100, 30, 102, 60, 95, 58, 23, 25, 163, 147, 93, 165, 117, 9, 77, 119, 149, 42, 44, 79, 7, 182, 198, 184, 200, 32, 102, 66, 101, 31, 95, 59, 24, 67, 164, 165, 148, 94, 119, 118, 9, 60, 149, 78, 44, 43, 25, 79, 8, 183, 199, 184, 200, 67, 102, 32, 60, 25, 165, 149, 95, 119, 79, 44, 9, 184, 200, 30, 26, 55, 90, 160, 10, 20, 80, 120, 70, 105, 0, 140, 35, 150, 45, 175, 185, 195, 31, 65, 30, 27, 26, 61, 56, 90, 55, 91, 140, 160, 161, 11, 45, 120, 80, 21, 81, 121, 71, 70, 106, 1, 141, 0, 36, 150, 151, 20, 46, 10, 35, 175, 176, 185, 195, 186, 196, 66, 65, 31, 30, 100, 27, 61, 62, 26, 96, 57, 91, 20, 56, 92, 90, 160, 141, 161, 162, 12, 46, 10, 121, 80, 81, 22, 150, 45, 82, 122, 72, 71, 107, 55, 2, 142, 1, 37, 151, 152, 21, 47, 11, 36, 176, 185, 195, 177, 186, 196, 187, 197, 34, 69, 68, 33, 66, 30, 65, 100, 31, 104, 101, 103, 170, 62, 96, 26, 27, 97, 92, 21, 57, 91, 61, 161, 142, 166, 162, 47, 11, 122, 81, 82, 151, 46, 123, 73, 72, 108, 56, 3, 143, 2, 38, 152, 22, 12, 37, 177, 186, 196, 201, 205, 178, 187, 197, 69, 34, 104, 68, 33, 103, 31, 66, 101, 171, 97, 27, 22, 92, 62, 162, 143, 167, 12, 123, 82, 152, 47, 73, 109, 57, 3, 38, 178, 187, 197, 202, 206, 34, 33, 32, 30, 65, 170, 28, 61, 26, 96, 100, 58, 93, 20, 90, 55, 140, 160, 163, 166, 13, 120, 10, 23, 83, 124, 150, 74, 110, 4, 35, 144, 39, 70, 45, 153, 80, 0, 48, 175, 179, 205, 195, 185, 188, 198, 201, 34, 69, 68, 33, 67, 32, 31, 65, 30, 66, 100, 170, 171, 28, 63, 62, 61, 96, 26, 27, 97, 101, 59, 93, 58, 94, 21, 91, 55, 56, 141, 160, 144, 161, 163, 166, 164, 167, 14, 48, 124, 20, 121, 11, 10, 150, 83, 24, 45, 84, 125, 151, 75, 74, 111, 5, 36, 145, 4, 40, 71, 80, 153, 46, 90, 154, 23, 81, 1, 49, 13, 39, 176, 179, 185, 195, 180, 206, 205, 188, 198, 196, 201, 186, 189, 199, 202, 34, 69, 68, 33, 67, 66, 30, 31, 100, 32, 101, 104, 102, 103, 170, 171, 63, 28, 62, 96, 26, 97, 27, 98, 94, 23, 59, 93, 22, 92, 56, 57, 142, 161, 163, 166, 145, 162, 164, 65, 167, 49, 13, 125, 83, 21, 122, 12, 11, 151, 84, 153, 48, 46, 126, 152, 76, 75, 112, 58, 6, 37, 146, 5, 41, 72, 81, 61, 154, 47, 91, 24, 82, 2, 14, 40, 177, 180, 186, 196, 188, 198, 201, 205, 181, 206, 189, 199, 197, 202, 187, 34, 69, 104, 68, 33, 103, 32, 67, 102, 31, 101, 171, 172, 98, 28, 97, 27, 24, 94, 57, 143, 63, 162, 164, 167, 146, 168, 66, 14, 126, 84, 22, 123, 12, 152, 154, 49, 47, 76, 113, 59, 38, 6, 73, 82, 62, 92, 3, 41, 178, 181, 187, 197, 189, 199, 202, 206, 203, 207, 34, 69, 33, 68, 32, 67, 65, 30, 100, 104, 170, 172, 63, 61, 96, 28, 98, 102, 103, 26, 60, 95, 23, 93, 58, 90, 20, 55, 144, 160, 150, 163, 166, 165, 168, 15, 124, 13, 80, 25, 85, 127, 153, 77, 114, 7, 39, 147, 42, 45, 74, 48, 155, 83, 4, 50, 10, 179, 185, 195, 182, 207, 205, 198, 188, 190, 200, 201, 203, 34, 69, 68, 33, 67, 32, 66, 100, 65, 31, 101, 102, 104, 103, 170, 171, 172, 63, 98, 28, 62, 96, 97, 27, 95, 60, 24, 94, 58, 59, 91, 21, 56, 145, 161, 163, 166, 151, 147, 164, 167, 165, 168, 30, 50, 127, 23, 125, 14, 13, 61, 153, 81, 85, 48, 128, 154, 78, 77, 115, 8, 40, 148, 7, 43, 46, 75, 26, 83, 155, 49, 93, 25, 84, 5, 15, 11, 42, 180, 186, 196, 182, 188, 198, 201, 205, 183, 207, 206, 190, 200, 199, 203, 189, 202, 69, 34, 104, 33, 103, 32, 102, 101, 66, 171, 172, 98, 28, 97, 25, 95, 59, 92, 22, 57, 146, 162, 164, 167, 152, 165, 168, 148, 67, 31, 68, 15, 128, 85, 24, 126, 14, 62, 154, 82, 155, 50, 49, 78, 116, 60, 41, 8, 47, 76, 27, 84, 63, 94, 6, 12, 43, 181, 187, 197, 183, 189, 199, 202, 206, 190, 200, 203, 207, 69, 68, 33, 103, 67, 32, 100, 34, 102, 30, 104, 65, 170, 172, 63, 98, 61, 26, 28, 166, 25, 95, 60, 93, 23, 58, 147, 163, 153, 96, 165, 168, 127, 15, 83, 129, 155, 79, 117, 9, 42, 149, 44, 48, 77, 50, 85, 7, 13, 182, 188, 198, 201, 205, 184, 207, 200, 190, 203, 34, 69, 104, 33, 103, 102, 67, 101, 31, 66, 171, 172, 98, 62, 27, 68, 167, 60, 94, 24, 59, 148, 164, 165, 168, 154, 97, 149, 32, 129, 25, 128, 15, 63, 155, 84, 50, 79, 118, 43, 9, 49, 78, 28, 85, 95, 8, 14, 44, 183, 189, 199, 202, 206, 184, 190, 200, 203, 207, 69, 34, 104, 68, 103, 33, 102, 32, 67, 172, 63, 28, 168, 95, 25, 60, 149, 165, 155, 98, 129, 85, 119, 44, 50, 79, 9, 15, 184, 190, 200, 203, 207, 34, 33, 100, 170, 29, 61, 96, 65, 90, 20, 140, 55, 30, 160, 166, 16, 26, 86, 130, 80, 120, 10, 150, 45, 0, 70, 35, 156, 51, 175, 185, 195, 205, 191, 201, 34, 69, 68, 33, 101, 65, 30, 100, 170, 171, 29, 64, 62, 96, 61, 97, 66, 91, 55, 21, 141, 56, 20, 31, 160, 150, 161, 166, 167, 17, 51, 130, 86, 27, 90, 87, 131, 81, 80, 121, 11, 151, 10, 46, 1, 71, 36, 156, 157, 26, 52, 16, 45, 176, 185, 195, 186, 196, 206, 205, 191, 201, 192, 202, 34, 69, 68, 33, 66, 100, 31, 101, 103, 104, 170, 171, 64, 29, 99, 97, 26, 62, 96, 92, 56, 22, 142, 57, 21, 30, 161, 166, 151, 65, 162, 167, 52, 16, 131, 86, 87, 156, 51, 91, 132, 82, 81, 122, 61, 12, 152, 11, 47, 2, 72, 37, 157, 27, 17, 46, 177, 186, 196, 191, 201, 205, 187, 197, 206, 192, 202, 34, 69, 104, 174, 33, 68, 103, 101, 171, 173, 99, 29, 27, 97, 64, 57, 143, 22, 31, 162, 167, 152, 169, 66, 17, 132, 87, 157, 52, 92, 82, 123, 62, 12, 3, 73, 38, 47, 178, 187, 197, 192, 202, 206, 204, 208, 34, 69, 174, 33, 68, 102, 65, 100, 104, 170, 172, 173, 64, 29, 99, 103, 63, 98, 26, 96, 61, 67, 150, 160, 93, 23, 144, 58, 20, 90, 32, 30, 163, 166, 168, 169, 18, 130, 16, 28, 88, 133, 156, 83, 124, 13, 45, 153, 48, 80, 4, 74, 39, 51, 55, 158, 195, 86, 10, 53, 179, 185, 188, 198, 208, 207, 205, 201, 191, 193, 203, 204, 69, 34, 174, 68, 33, 103, 67, 32, 102, 66, 30, 100, 101, 104, 170, 171, 172, 173, 64, 99, 29, 65, 98, 63, 27, 97, 61, 62, 151, 161, 166, 94, 58, 24, 145, 59, 21, 91, 23, 163, 31, 153, 164, 167, 168, 169, 53, 133, 26, 131, 17, 16, 156, 88, 51, 93, 134, 157, 84, 83, 125, 14, 46, 154, 13, 49, 81, 86, 5, 75, 40, 158, 52, 96, 56, 28, 196, 87, 11, 18, 48, 180, 186, 188, 198, 191, 201, 205, 189, 199, 208, 207, 206, 193, 203, 202, 204, 192, 69, 34, 104, 174, 33, 103, 102, 31, 101, 171, 172, 173, 99, 29, 66, 28, 98, 62, 152, 162, 167, 59, 146, 22, 92, 24, 32, 164, 168, 169, 154, 67, 68, 18, 134, 88, 27, 132, 17, 157, 158, 53, 52, 94, 84, 126, 63, 47, 14, 82, 87, 64, 6, 76, 41, 97, 57, 197, 12, 49, 181, 187, 189, 199, 192, 202, 206, 193, 203, 207, 204, 208, 34, 69, 174, 68, 33, 103, 67, 102, 104, 100, 30, 65, 170, 172, 173, 64, 99, 29, 28, 98, 63, 96, 26, 61, 153, 163, 166, 95, 25, 147, 60, 23, 93, 156, 32, 165, 168, 169, 133, 18, 86, 135, 158, 85, 127, 15, 48, 155, 50, 51, 83, 7, 77, 42, 53, 58, 198, 88, 13, 16, 182, 188, 191, 201, 205, 190, 200, 208, 207, 203, 193, 204, 69, 34, 104, 174, 103, 68, 32, 102, 101, 31, 66, 171, 172, 173, 99, 67, 63, 97, 27, 62, 154, 164, 167, 168, 169, 60, 148, 24, 94, 157, 25, 165, 155, 33, 135, 28, 134, 18, 64, 158, 87, 53, 95, 85, 128, 49, 15, 52, 84, 29, 88, 8, 78, 43, 98, 59, 199, 14, 17, 50, 183, 189, 192, 202, 206, 190, 200, 193, 203, 207, 204, 208, 69, 34, 104, 174, 103, 33, 102, 32, 67, 68, 172, 173, 64, 29, 169, 98, 28, 63, 155, 165, 168, 149, 25, 95, 158, 99, 135, 88, 129, 50, 53, 85, 9, 79, 44, 60, 200, 15, 18, 184, 190, 193, 203, 207, 204, 208, 34, 69, 174, 103, 65, 30, 100, 104, 160, 170, 173, 64, 99, 68, 96, 26, 150, 61, 33, 90, 20, 166, 169, 19, 29, 89, 136, 86, 130, 16, 156, 55, 51, 10, 80, 45, 159, 195, 54, 185, 191, 201, 208, 194, 204, 205, 34, 69, 174, 68, 33, 103, 66, 65, 100, 31, 101, 30, 104, 170, 161, 171, 173, 99, 64, 97, 61, 27, 151, 62, 26, 166, 91, 21, 156, 167, 169, 54, 136, 89, 96, 137, 87, 86, 131, 17, 157, 16, 56, 52, 11, 81, 46, 159, 29, 196, 19, 51, 186, 191, 201, 205, 192, 202, 208, 194, 204, 206, 69, 34, 104, 174, 103, 66, 101, 31, 171, 162, 173, 29, 99, 62, 152, 27, 33, 167, 169, 92, 22, 157, 68, 19, 137, 89, 159, 54, 97, 87, 132, 64, 17, 57, 12, 82, 47, 197, 52, 187, 192, 202, 206, 194, 204, 208, 69, 34, 174, 104, 68, 103, 67, 32, 102, 100, 30, 170, 163, 172, 173, 65, 29, 99, 64, 156, 166, 98, 28, 153, 63, 26, 96, 33, 93, 23, 168, 169, 136, 19, 138, 159, 88, 133, 18, 51, 158, 58, 53, 86, 13, 83, 48, 54, 61, 198, 201, 205, 89, 16, 188, 191, 193, 203, 208, 204, 194, 207, 69, 34, 104, 174, 33, 103, 67, 102, 101, 32, 31, 171, 172, 164, 173, 66, 68, 64, 157, 167, 169, 63, 154, 27, 97, 28, 168, 94, 24, 158, 138, 29, 137, 19, 159, 54, 98, 88, 134, 52, 18, 59, 87, 89, 14, 84, 49, 99, 62, 199, 202, 206, 17, 53, 189, 192, 193, 203, 207, 194, 204, 208, 69, 34, 104, 174, 103, 33, 68, 173, 102, 32, 172, 165, 67, 99, 29, 64, 158, 168, 169, 155, 28, 98, 159, 95, 25, 138, 89, 135, 53, 60, 54, 88, 15, 85, 50, 63, 200, 203, 207, 18, 19, 190, 193, 194, 204, 208, 210, 30, 20, 90, 140, 160, 105, 70, 55, 0, 35, 175, 195, 31, 30, 65, 21, 55, 140, 90, 91, 141, 160, 161, 0, 106, 71, 56, 35, 20, 1, 70, 36, 175, 176, 195, 196, 31, 65, 66, 30, 100, 22, 56, 20, 141, 90, 91, 160, 55, 92, 142, 161, 162, 1, 107, 72, 57, 36, 21, 2, 71, 37, 176, 195, 177, 196, 197, 69, 34, 104, 66, 100, 30, 31, 101, 65, 170, 57, 21, 142, 91, 92, 161, 56, 143, 162, 2, 108, 73, 37, 22, 3, 72, 38, 177, 196, 205, 178, 197, 69, 34, 104, 101, 31, 66, 171, 22, 143, 92, 162, 57, 3, 109, 38, 73, 178, 197, 206, 34, 32, 65, 30, 100, 170, 23, 140, 20, 93, 144, 160, 55, 163, 90, 110, 74, 0, 70, 35, 58, 4, 39, 175, 179, 195, 198, 205, 69, 34, 32, 67, 66, 65, 100, 30, 31, 101, 170, 171, 24, 58, 144, 141, 21, 20, 160, 93, 55, 94, 145, 161, 90, 163, 56, 164, 91, 4, 111, 75, 1, 71, 36, 59, 39, 23, 5, 74, 40, 179, 176, 195, 180, 198, 205, 196, 199, 206, 69, 34, 104, 67, 32, 66, 100, 30, 101, 31, 102, 170, 171, 59, 23, 145, 93, 142, 22, 21, 161, 94, 163, 58, 56, 146, 162, 91, 65, 164, 57, 92, 5, 112, 76, 2, 72, 37, 40, 24, 6, 75, 41, 180, 177, 196, 198, 205, 181, 199, 206, 197, 69, 34, 104, 102, 32, 101, 31, 67, 171, 172, 24, 146, 94, 143, 22, 162, 164, 59, 57, 92, 66, 6, 113, 3, 73, 38, 41, 76, 181, 178, 197, 199, 206, 207, 34, 69, 67, 65, 100, 32, 102, 104, 30, 160, 170, 172, 25, 144, 23, 90, 95, 147, 163, 55, 58, 165, 93, 114, 77, 4, 74, 39, 60, 7, 20, 195, 42, 179, 182, 198, 200, 205, 207, 69, 34, 104, 67, 102, 32, 66, 100, 101, 31, 170, 161, 171, 172, 60, 147, 145, 24, 23, 65, 163, 91, 95, 58, 148, 164, 56, 30, 93, 165, 59, 94, 7, 115, 78, 5, 75, 40, 42, 25, 8, 21, 77, 196, 43, 182, 180, 198, 205, 183, 200, 207, 199, 206, 34, 104, 102, 32, 101, 171, 162, 172, 69, 25, 148, 95, 146, 24, 66, 164, 92, 165, 60, 59, 57, 31, 94, 67, 8, 116, 6, 76, 41, 43, 22, 78, 197, 183, 181, 199, 206, 200, 207, 69, 34, 104, 67, 102, 65, 30, 32, 170, 163, 100, 172, 147, 25, 93, 149, 165, 58, 60, 95, 117, 79, 7, 77, 42, 9, 23, 198, 205, 44, 182, 184, 200, 207, 34, 104, 102, 66, 31, 69, 171, 172, 164, 101, 149, 148, 25, 67, 165, 94, 60, 59, 32, 95, 9, 118, 8, 78, 43, 44, 24, 79, 199, 206, 184, 183, 200, 207, 69, 104, 34, 67, 32, 172, 165, 102, 149, 95, 60, 119, 9, 79, 44, 25, 200, 207, 184, 34, 33, 65, 100, 170, 26, 30, 96, 150, 90, 140, 20, 160, 55, 166, 120, 80, 61, 10, 175, 0, 70, 35, 45, 185, 195, 201, 205, 69, 34, 33, 68, 66, 100, 65, 101, 160, 170, 171, 27, 61, 150, 96, 31, 97, 151, 91, 90, 141, 21, 161, 20, 56, 166, 167, 30, 10, 121, 81, 62, 45, 26, 11, 55, 80, 176, 1, 71, 36, 195, 46, 185, 186, 196, 201, 205, 202, 206, 69, 34, 104, 68, 33, 103, 101, 30, 66, 100, 170, 161, 171, 62, 26, 151, 96, 97, 166, 61, 152, 92, 91, 142, 65, 22, 162, 21, 57, 167, 31, 11, 122, 82, 46, 27, 12, 56, 81, 177, 2, 72, 37, 196, 47, 186, 201, 205, 187, 197, 202, 206, 34, 69, 104, 174, 103, 33, 31, 101, 68, 171, 162, 173, 27, 152, 97, 167, 62, 92, 143, 66, 22, 12, 123, 47, 57, 82, 178, 3, 73, 38, 197, 187, 202, 206, 208, 210, 34, 69, 174, 68, 33, 103, 104, 67, 102, 30, 100, 65, 160, 170, 172, 173, 28, 150, 26, 32, 98, 153, 166, 93, 144, 23, 55, 163, 58, 90, 61, 168, 96, 20, 124, 83, 10, 80, 45, 63, 13, 179, 4, 74, 39, 195, 48, 185, 188, 198, 210, 205, 201, 203, 207, 208, 69, 34, 104, 174, 68, 103, 33, 102, 67, 31, 101, 65, 66, 161, 170, 163, 171, 172, 173, 63, 153, 30, 151, 27, 26, 166, 98, 61, 154, 167, 94, 93, 145, 24, 56, 164, 23, 59, 91, 96, 168, 62, 100, 32, 97, 13, 21, 125, 84, 11, 81, 46, 48, 28, 14, 58, 83, 180, 5, 75, 40, 196, 198, 49, 188, 186, 201, 205, 189, 199, 210, 203, 207, 206, 208, 202, 34, 104, 174, 103, 33, 32, 102, 66, 162, 171, 172, 173, 164, 69, 28, 154, 98, 31, 152, 27, 167, 168, 63, 62, 94, 146, 67, 57, 24, 92, 97, 68, 101, 14, 22, 126, 12, 82, 47, 49, 59, 84, 181, 6, 76, 41, 197, 199, 189, 187, 202, 206, 203, 207, 208, 210, 69, 34, 104, 174, 68, 103, 33, 32, 102, 67, 100, 30, 65, 163, 170, 166, 172, 173, 153, 28, 96, 155, 168, 95, 147, 25, 58, 165, 60, 61, 93, 63, 98, 23, 127, 85, 13, 83, 48, 15, 26, 182, 7, 77, 42, 198, 201, 205, 50, 188, 190, 200, 210, 207, 203, 208, 104, 69, 174, 103, 67, 101, 31, 66, 164, 171, 172, 173, 167, 165, 34, 155, 32, 154, 28, 68, 168, 97, 63, 95, 148, 59, 25, 62, 94, 33, 98, 102, 15, 24, 128, 14, 84, 49, 50, 27, 60, 85, 183, 8, 78, 43, 199, 202, 206, 200, 190, 189, 203, 207, 208, 210, 104, 34, 69, 174, 68, 33, 173, 102, 32, 67, 165, 172, 168, 103, 155, 98, 149, 60, 63, 95, 25, 129, 15, 85, 50, 28, 184, 9, 79, 44, 200, 203, 207, 208, 210, 190, 104, 174, 68, 103, 69, 100, 30, 160, 65, 34, 170, 173, 29, 33, 99, 156, 96, 150, 26, 166, 61, 20, 90, 55, 169, 130, 86, 64, 16, 185, 195, 10, 80, 45, 51, 191, 201, 205, 210, 204, 208, 69, 34, 104, 174, 103, 68, 101, 65, 31, 161, 66, 30, 170, 166, 171, 173, 64, 156, 99, 100, 157, 97, 96, 151, 27, 167, 26, 62, 21, 91, 56, 169, 33, 16, 131, 87, 51, 29, 17, 61, 86, 186, 196, 11, 81, 46, 201, 205, 52, 191, 192, 202, 206, 210, 204, 208, 104, 174, 33, 103, 66, 162, 31, 34, 171, 173, 167, 69, 29, 157, 99, 169, 64, 101, 97, 152, 68, 27, 22, 92, 57, 17, 132, 52, 62, 87, 187, 197, 12, 82, 47, 202, 206, 192, 204, 208, 210, 69, 104, 174, 33, 103, 68, 166, 170, 102, 32, 163, 67, 30, 100, 34, 172, 173, 156, 29, 158, 169, 98, 153, 28, 61, 168, 63, 96, 23, 93, 58, 64, 65, 205, 99, 26, 133, 88, 16, 86, 51, 18, 188, 198, 13, 83, 48, 201, 53, 191, 193, 203, 207, 210, 208, 204, 34, 104, 174, 69, 68, 167, 171, 173, 67, 164, 31, 101, 32, 172, 168, 158, 33, 157, 29, 169, 64, 102, 98, 154, 62, 28, 97, 99, 24, 94, 59, 103, 66, 206, 18, 27, 134, 17, 87, 52, 53, 63, 88, 189, 199, 14, 84, 49, 202, 203, 207, 193, 192, 204, 208, 210, 104, 34, 69, 174, 103, 33, 68, 168, 172, 173, 165, 32, 102, 169, 158, 99, 155, 63, 64, 98, 25, 95, 60, 67, 207, 28, 135, 18, 88, 53, 29, 190, 200, 15, 85, 50, 203, 204, 208, 210, 193, 34, 30, 100, 160, 170, 140, 90, 65, 20, 55, 35, 175, 70, 0, 195, 205, 34, 69, 31, 65, 160, 100, 101, 161, 170, 171, 20, 141, 91, 66, 55, 30, 21, 90, 56, 36, 195, 176, 71, 1, 196, 205, 206, 69, 34, 104, 66, 30, 161, 100, 101, 170, 65, 162, 171, 21, 142, 92, 56, 31, 22, 91, 57, 37, 196, 177, 72, 2, 205, 197, 206, 104, 34, 69, 174, 31, 162, 101, 171, 66, 22, 143, 57, 92, 38, 197, 178, 73, 3, 206, 210, 69, 34, 104, 174, 32, 160, 30, 102, 163, 170, 65, 172, 100, 144, 93, 20, 90, 55, 67, 23, 58, 39, 179, 195, 74, 4, 198, 205, 207, 210, 69, 104, 34, 174, 67, 163, 161, 31, 30, 170, 102, 65, 164, 171, 100, 172, 66, 101, 23, 145, 94, 21, 91, 56, 58, 32, 24, 93, 59, 40, 198, 180, 196, 75, 5, 205, 199, 207, 210, 206, 104, 34, 174, 32, 164, 102, 162, 31, 171, 172, 67, 66, 101, 69, 24, 146, 22, 92, 57, 59, 94, 41, 199, 181, 197, 76, 6, 206, 207, 210, 69, 104, 34, 170, 174, 163, 32, 100, 165, 172, 65, 67, 102, 147, 95, 23, 93, 58, 25, 30, 205, 60, 42, 182, 198, 77, 7, 200, 207, 210, 104, 174, 171, 165, 164, 32, 69, 172, 101, 67, 66, 34, 102, 25, 148, 24, 94, 59, 60, 31, 95, 206, 43, 200, 183, 199, 78, 8, 207, 210, 69, 34, 174, 172, 104, 165, 102, 67, 149, 25, 95, 60, 32, 207, 210, 44, 184, 200, 79, 9, 69, 104, 174, 33, 34, 103, 166, 100, 160, 30, 170, 65, 173, 150, 96, 68, 26, 195, 20, 90, 55, 61, 45, 185, 80, 10, 201, 205, 208, 210, 104, 69, 170, 174, 68, 166, 103, 167, 101, 100, 161, 31, 171, 30, 66, 173, 34, 26, 151, 97, 61, 33, 27, 65, 96, 196, 21, 91, 56, 205, 62, 46, 201, 186, 81, 11, 202, 206, 208, 210, 34, 104, 174, 171, 33, 167, 103, 173, 68, 101, 162, 69, 31, 27, 152, 62, 66, 97, 197, 22, 92, 57, 206, 47, 202, 187, 82, 12, 208, 210, 34, 104, 69, 170, 174, 166, 33, 168, 173, 102, 163, 32, 65, 172, 67, 100, 68, 103, 30, 153, 98, 26, 96, 61, 28, 198, 23, 93, 58, 205, 63, 48, 188, 201, 83, 13, 203, 207, 210, 208, 69, 171, 174, 172, 168, 34, 167, 33, 173, 68, 102, 164, 66, 32, 101, 103, 104, 28, 31, 154, 27, 97, 62, 63, 67, 98, 199, 24, 94, 59, 206, 207, 49, 203, 189, 202, 84, 14, 208, 210, 104, 34, 69, 172, 174, 173, 168, 103, 165, 67, 68, 102, 32, 155, 28, 98, 63, 33, 200, 25, 95, 60, 207, 208, 210, 50, 190, 203, 85, 15, 34, 104, 170, 174, 160, 100, 69, 30, 65, 55, 195, 90, 20, 205, 210, 69, 170, 104, 171, 174, 30, 161, 101, 65, 34, 31, 100, 66, 56, 205, 196, 91, 21, 206, 210, 34, 171, 104, 174, 69, 31, 162, 66, 101, 57, 206, 197, 92, 22, 210, 170, 34, 172, 174, 69, 104, 163, 102, 30, 100, 65, 32, 67, 58, 198, 205, 93, 23, 207, 210, 172, 171, 34, 174, 69, 104, 32, 164, 31, 101, 66, 67, 102, 59, 207, 199, 206, 94, 24, 210, 174, 172, 104, 69, 165, 32, 102, 67, 34, 210, 60, 200, 207, 95, 25, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209};
    static const int coeffs1_ind[] = {209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209, 209};

    static const int C0_ind[] = {0, 3, 130, 176, 493, 494, 495, 496, 497, 623, 669, 986, 987, 988, 989, 990, 1116, 1162, 1479, 1480, 1481, 1482, 1483, 1609, 1655, 1973, 1974, 1976, 2148, 2470, 2648, 2963, 2964, 2969, 3139, 3141, 3456, 3457, 3458, 3461, 3462, 3580, 3626, 3632, 3634, 3944, 3947, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 4070, 4073, 4074, 4119, 4120, 4125, 4127, 4437, 4438, 4439, 4440, 4441, 4443, 4444, 4445, 4446, 4447, 4448, 4563, 4566, 4567, 4612, 4613, 4618, 4620, 4930, 4931, 4932, 4933, 4934, 4937, 4938, 4939, 4940, 5056, 5059, 5060, 5105, 5106, 5111, 5424, 5425, 5427, 5431, 5432, 5549, 5598, 5599, 5921, 5928, 5933, 6047, 6095, 6099, 6414, 6415, 6420, 6421, 6422, 6425, 6426, 6537, 6540, 6582, 6588, 6590, 6592, 6907, 6908, 6909, 6912, 6913, 6914, 6915, 6916, 6917, 6918, 6919, 6928, 7030, 7031, 7033, 7075, 7077, 7081, 7083, 7085, 7395, 7398, 7401, 7402, 7403, 7404, 7405, 7406, 7407, 7408, 7409, 7410, 7411, 7412, 7421, 7521, 7523, 7524, 7525, 7526, 7568, 7570, 7571, 7574, 7576, 7578, 7888, 7889, 7890, 7891, 7892, 7895, 7896, 7897, 7898, 7901, 7902, 7903, 7904, 7914, 8014, 8016, 8017, 8018, 8061, 8063, 8064, 8067, 8069, 8382, 8383, 8385, 8389, 8390, 8395, 8396, 8407, 8507, 8554, 8556, 8557, 8879, 8886, 8891, 8892, 8895, 9001, 9005, 9040, 9053, 9057, 9372, 9373, 9378, 9379, 9380, 9383, 9384, 9385, 9386, 9387, 9388, 9389, 9494, 9495, 9498, 9533, 9540, 9546, 9548, 9550, 9866, 9867, 9870, 9871, 9872, 9873, 9874, 9875, 9876, 9877, 9878, 9879, 9880, 9881, 9882, 9886, 9987, 9988, 9989, 9991, 10026, 10033, 10035, 10039, 10041, 10043, 10353, 10356, 10360, 10361, 10362, 10363, 10366, 10367, 10368, 10369, 10371, 10372, 10373, 10374, 10375, 10379, 10479, 10480, 10481, 10482, 10483, 10519, 10526, 10528, 10529, 10532, 10534, 10847, 10848, 10850, 10854, 10855, 10860, 10861, 10865, 10866, 10868, 10872, 10972, 11012, 11019, 11021, 11022, 11344, 11351, 11356, 11357, 11360, 11362, 11363, 11364, 11466, 11470, 11505, 11518, 11522, 11838, 11843, 11844, 11845, 11848, 11849, 11850, 11851, 11852, 11853, 11854, 11855, 11856, 11857, 11959, 11960, 11963, 11998, 12005, 12011, 12013, 12015, 12332, 12335, 12338, 12339, 12340, 12341, 12343, 12344, 12345, 12346, 12347, 12348, 12349, 12350, 12351, 12452, 12453, 12454, 12491, 12498, 12500, 12504, 12506, 12826, 12827, 12832, 12833, 12837, 12838, 12840, 12841, 12842, 12843, 12844, 12944, 12984, 12991, 12993, 12994, 13338, 13493, 13831, 13832, 13837, 13984, 13986, 14324, 14325, 14326, 14329, 14330, 14447, 14471, 14477, 14479, 14790, 14793, 14817, 14818, 14819, 14820, 14821, 14822, 14823, 14920, 14937, 14940, 14964, 14966, 14970, 14972, 15283, 15284, 15285, 15286, 15287, 15311, 15312, 15313, 15314, 15315, 15316, 15413, 15430, 15433, 15457, 15459, 15463, 15465, 15776, 15777, 15778, 15779, 15780, 15805, 15806, 15807, 15808, 15906, 15923, 15926, 15950, 15952, 15956, 16270, 16271, 16273, 16299, 16300, 16416, 16443, 16445, 16767, 16789, 16796, 16801, 16913, 16940, 16944, 16945, 17260, 17261, 17266, 17282, 17283, 17288, 17289, 17290, 17293, 17294, 17404, 17406, 17427, 17433, 17435, 17436, 17437, 17438, 17753, 17754, 17755, 17758, 17759, 17775, 17776, 17777, 17780, 17781, 17782, 17783, 17784, 17785, 17786, 17787, 17796, 17877, 17897, 17898, 17899, 17920, 17922, 17923, 17926, 17928, 17929, 17930, 17931, 18241, 18244, 18247, 18248, 18249, 18250, 18251, 18252, 18269, 18270, 18271, 18272, 18273, 18274, 18275, 18276, 18277, 18278, 18279, 18280, 18289, 18367, 18370, 18371, 18388, 18390, 18391, 18392, 18413, 18415, 18416, 18417, 18419, 18421, 18422, 18423, 18424, 18734, 18735, 18736, 18737, 18738, 18741, 18742, 18743, 18744, 18763, 18764, 18765, 18766, 18769, 18770, 18771, 18772, 18782, 18860, 18863, 18864, 18881, 18883, 18884, 18906, 18908, 18909, 18910, 18912, 18914, 18915, 19228, 19229, 19231, 19235, 19236, 19257, 19258, 19263, 19264, 19275, 19353, 19374, 19399, 19401, 19402, 19403, 19725, 19732, 19737, 19747, 19754, 19759, 19760, 19762, 19851, 19868, 19871, 19872, 19898, 19899, 19902, 19903, 20218, 20219, 20224, 20225, 20226, 20229, 20230, 20240, 20241, 20246, 20247, 20248, 20251, 20252, 20253, 20254, 20255, 20256, 20257, 20341, 20344, 20361, 20362, 20364, 20365, 20385, 20386, 20391, 20392, 20393, 20394, 20395, 20396, 20712, 20713, 20716, 20717, 20718, 20719, 20720, 20721, 20722, 20723, 20732, 20734, 20735, 20738, 20739, 20740, 20741, 20742, 20743, 20744, 20745, 20746, 20747, 20748, 20749, 20750, 20754, 20834, 20835, 20837, 20854, 20855, 20856, 20857, 20858, 20878, 20879, 20880, 20881, 20884, 20885, 20886, 20887, 20888, 20889, 21199, 21202, 21206, 21207, 21208, 21209, 21212, 21213, 21214, 21215, 21225, 21228, 21229, 21230, 21231, 21234, 21235, 21236, 21237, 21239, 21240, 21241, 21242, 21243, 21247, 21325, 21327, 21328, 21329, 21346, 21347, 21348, 21349, 21351, 21371, 21372, 21373, 21374, 21375, 21377, 21378, 21379, 21380, 21693, 21694, 21696, 21700, 21701, 21706, 21707, 21718, 21722, 21723, 21728, 21729, 21733, 21735, 21736, 21740, 21818, 21839, 21844, 21864, 21865, 21866, 21867, 21868, 22190, 22197, 22202, 22203, 22206, 22212, 22219, 22224, 22225, 22227, 22230, 22231, 22232, 22312, 22316, 22333, 22336, 22337, 22351, 22363, 22364, 22367, 22368, 22684, 22689, 22690, 22691, 22694, 22695, 22696, 22697, 22698, 22699, 22700, 22706, 22711, 22712, 22713, 22716, 22717, 22718, 22719, 22720, 22721, 22722, 22723, 22724, 22725, 22805, 22806, 22809, 22826, 22827, 22829, 22830, 22844, 22850, 22851, 22856, 22857, 22858, 22859, 22860, 22861, 23178, 23181, 23184, 23185, 23186, 23187, 23189, 23190, 23191, 23192, 23193, 23197, 23200, 23203, 23206, 23207, 23208, 23209, 23211, 23212, 23213, 23214, 23215, 23216, 23217, 23218, 23219, 23298, 23299, 23300, 23319, 23320, 23321, 23323, 23337, 23343, 23344, 23345, 23346, 23349, 23350, 23351, 23352, 23672, 23673, 23678, 23679, 23683, 23684, 23686, 23690, 23694, 23695, 23700, 23701, 23705, 23707, 23708, 23709, 23710, 23711, 23712, 23790, 23811, 23816, 23830, 23836, 23837, 23838, 23839, 23840, 24184, 24206, 24210, 24321, 24334, 24339, 24677, 24678, 24683, 24699, 24700, 24702, 24703, 24813, 24814, 24817, 24827, 24830, 24832, 25170, 25171, 25172, 25175, 25176, 25192, 25193, 25194, 25195, 25196, 25197, 25206, 25293, 25306, 25307, 25310, 25317, 25320, 25323, 25325, 25636, 25639, 25664, 25665, 25666, 25667, 25668, 25669, 25685, 25686, 25687, 25688, 25689, 25690, 25699, 25766, 25783, 25786, 25799, 25800, 25803, 25810, 25812, 25813, 25816, 25818, 26129, 26130, 26131, 26132, 26133, 26158, 26159, 26160, 26161, 26179, 26180, 26181, 26183, 26192, 26259, 26276, 26279, 26292, 26296, 26303, 26305, 26306, 26309, 26623, 26624, 26626, 26652, 26653, 26673, 26676, 26685, 26769, 26789, 26796, 26798, 27120, 27142, 27149, 27154, 27164, 27168, 27170, 27173, 27266, 27277, 27279, 27280, 27292, 27293, 27297, 27298, 27613, 27614, 27619, 27635, 27636, 27641, 27642, 27643, 27646, 27647, 27657, 27658, 27660, 27661, 27663, 27664, 27665, 27666, 27667, 27757, 27759, 27770, 27771, 27772, 27773, 27775, 27780, 27785, 27786, 27788, 27789, 27790, 27791, 28107, 28108, 28111, 28112, 28129, 28130, 28133, 28134, 28135, 28136, 28137, 28138, 28139, 28140, 28149, 28150, 28151, 28152, 28153, 28154, 28155, 28156, 28157, 28158, 28159, 28160, 28164, 28230, 28250, 28251, 28252, 28263, 28264, 28265, 28266, 28268, 28273, 28275, 28276, 28278, 28279, 28281, 28282, 28283, 28284, 28594, 28597, 28601, 28602, 28603, 28604, 28623, 28624, 28625, 28626, 28629, 28630, 28631, 28632, 28642, 28644, 28645, 28646, 28648, 28649, 28650, 28651, 28652, 28653, 28657, 28720, 28723, 28724, 28741, 28743, 28744, 28756, 28757, 28759, 28761, 28766, 28768, 28769, 28770, 28771, 28772, 28774, 28775, 29088, 29089, 29091, 29095, 29096, 29117, 29118, 29123, 29124, 29135, 29138, 29141, 29143, 29144, 29146, 29150, 29213, 29234, 29252, 29254, 29259, 29261, 29262, 29263, 29585, 29592, 29597, 29607, 29614, 29619, 29620, 29622, 29629, 29633, 29635, 29638, 29640, 29641, 29642, 29711, 29728, 29731, 29732, 29742, 29744, 29745, 29757, 29758, 29759, 29762, 29763, 30079, 30084, 30085, 30086, 30089, 30090, 30101, 30106, 30107, 30108, 30111, 30112, 30113, 30114, 30115, 30116, 30117, 30122, 30123, 30125, 30126, 30128, 30129, 30130, 30131, 30132, 30133, 30134, 30135, 30201, 30204, 30221, 30222, 30224, 30225, 30235, 30236, 30237, 30238, 30240, 30245, 30246, 30250, 30251, 30252, 30253, 30254, 30255, 30256, 30573, 30576, 30579, 30580, 30581, 30582, 30592, 30595, 30598, 30601, 30602, 30603, 30604, 30606, 30607, 30608, 30609, 30610, 30614, 30616, 30617, 30618, 30620, 30621, 30622, 30623, 30624, 30625, 30626, 30627, 30628, 30629, 30694, 30695, 30714, 30715, 30716, 30718, 30728, 30729, 30731, 30733, 30738, 30739, 30740, 30741, 30743, 30744, 30745, 30746, 30747, 31067, 31068, 31073, 31074, 31085, 31089, 31090, 31095, 31096, 31100, 31102, 31103, 31107, 31110, 31113, 31115, 31116, 31118, 31119, 31120, 31121, 31122, 31185, 31206, 31211, 31224, 31226, 31231, 31232, 31233, 31234, 31235, 31579, 31601, 31605, 31616, 31618, 31624, 31628, 31716, 31729, 31734, 32072, 32073, 32078, 32094, 32095, 32097, 32098, 32109, 32110, 32111, 32112, 32113, 32117, 32121, 32208, 32209, 32212, 32222, 32225, 32227, 32566, 32567, 32570, 32571, 32587, 32588, 32589, 32590, 32591, 32592, 32601, 32602, 32603, 32604, 32605, 32606, 32610, 32614, 32688, 32701, 32702, 32705, 32712, 32715, 32718, 32720, 33031, 33034, 33060, 33061, 33062, 33063, 33081, 33082, 33083, 33085, 33094, 33095, 33096, 33097, 33098, 33099, 33103, 33107, 33161, 33178, 33181, 33194, 33198, 33205, 33207, 33208, 33211, 33525, 33526, 33528, 33554, 33555, 33575, 33578, 33587, 33589, 33591, 33592, 33600, 33671, 33691, 33698, 33700, 34022, 34044, 34051, 34056, 34066, 34070, 34072, 34075, 34081, 34083, 34086, 34087, 34088, 34089, 34093, 34168, 34179, 34181, 34182, 34194, 34195, 34199, 34200, 34516, 34521, 34538, 34543, 34544, 34545, 34548, 34549, 34559, 34560, 34562, 34563, 34565, 34566, 34567, 34568, 34569, 34574, 34575, 34576, 34577, 34578, 34579, 34580, 34581, 34582, 34586, 34659, 34661, 34672, 34673, 34674, 34675, 34677, 34682, 34687, 34688, 34690, 34691, 34692, 34693, 35010, 35013, 35032, 35035, 35038, 35039, 35040, 35041, 35051, 35053, 35054, 35055, 35057, 35058, 35059, 35060, 35061, 35062, 35066, 35067, 35068, 35069, 35070, 35071, 35072, 35073, 35074, 35075, 35079, 35132, 35152, 35153, 35165, 35166, 35168, 35170, 35175, 35177, 35178, 35180, 35181, 35183, 35184, 35504, 35505, 35526, 35527, 35532, 35533, 35544, 35547, 35550, 35552, 35553, 35555, 35559, 35561, 35563, 35564, 35565, 35566, 35567, 35572, 35622, 35643, 35661, 35663, 35668, 35670, 35671, 35672, 36016, 36038, 36042, 36053, 36055, 36061, 36062, 36063, 36064, 36065, 36153, 36166, 36171, 36408, 36510, 36515, 36531, 36532, 36534, 36535, 36546, 36547, 36548, 36549, 36550, 36554, 36555, 36556, 36557, 36558, 36645, 36646, 36649, 36659, 36662, 36664, 36901, 37004, 37007, 37025, 37026, 37027, 37029, 37038, 37039, 37040, 37041, 37042, 37043, 37047, 37048, 37049, 37050, 37051, 37125, 37138, 37142, 37149, 37152, 37155, 37394, 37498, 37499, 37519, 37522, 37531, 37533, 37535, 37536, 37541, 37542, 37543, 37544, 37615, 37635, 37642, 37644, 37887, 38038, 38040, 38198, 38244, 38531, 38532, 38533, 38534, 38535, 38691, 38737, 39024, 39025, 39026, 39027, 39028, 39184, 39230, 39517, 39518, 39519, 39520, 39521, 39677, 39723, 40011, 40013, 40014, 40216, 40508, 40716, 41001, 41002, 41007, 41207, 41209, 41494, 41495, 41496, 41499, 41500, 41648, 41694, 41700, 41702, 41982, 41984, 41987, 41988, 41989, 41990, 41991, 41992, 41993, 42008, 42141, 42142, 42187, 42188, 42193, 42195, 42475, 42476, 42477, 42478, 42479, 42481, 42482, 42483, 42484, 42485, 42486, 42501, 42634, 42635, 42680, 42681, 42686, 42688, 42968, 42969, 42970, 42971, 42972, 42975, 42976, 42977, 42978, 42994, 43127, 43128, 43173, 43174, 43179, 43462, 43464, 43465, 43469, 43470, 43487, 43666, 43667, 43959, 43966, 43971, 44115, 44163, 44167, 44452, 44453, 44458, 44459, 44460, 44462, 44464, 44605, 44608, 44650, 44656, 44658, 44660, 44945, 44946, 44947, 44950, 44951, 44952, 44953, 44954, 44955, 44956, 44957, 44962, 45098, 45099, 45101, 45143, 45145, 45149, 45151, 45153, 45433, 45435, 45439, 45440, 45441, 45442, 45443, 45444, 45445, 45446, 45447, 45448, 45449, 45450, 45455, 45459, 45591, 45592, 45593, 45594, 45636, 45638, 45639, 45642, 45644, 45646, 45926, 45927, 45928, 45929, 45930, 45933, 45934, 45935, 45936, 45939, 45940, 45941, 45942, 45948, 45952, 46084, 46085, 46086, 46129, 46131, 46132, 46135, 46137, 46420, 46422, 46423, 46427, 46428, 46433, 46435, 46441, 46445, 46622, 46624, 46625, 46917, 46924, 46929, 46930, 47065, 47068, 47073, 47108, 47121, 47125, 47410, 47411, 47416, 47417, 47418, 47420, 47422, 47423, 47424, 47425, 47426, 47558, 47561, 47563, 47566, 47601, 47608, 47614, 47616, 47618, 47904, 47905, 47908, 47909, 47910, 47911, 47912, 47913, 47914, 47915, 47916, 47917, 47918, 47919, 47920, 48051, 48054, 48056, 48057, 48059, 48094, 48101, 48103, 48107, 48109, 48111, 48391, 48393, 48398, 48399, 48400, 48401, 48404, 48405, 48406, 48407, 48409, 48410, 48411, 48412, 48413, 48417, 48544, 48547, 48549, 48550, 48551, 48587, 48594, 48596, 48597, 48600, 48602, 48885, 48887, 48888, 48892, 48893, 48898, 48900, 48903, 48904, 48905, 48906, 48910, 49080, 49087, 49089, 49090, 49382, 49389, 49394, 49395, 49400, 49401, 49402, 49530, 49533, 49538, 49573, 49586, 49590, 49876, 49881, 49882, 49883, 49885, 49887, 49888, 49889, 49890, 49891, 49893, 49894, 49895, 50023, 50026, 50028, 50031, 50066, 50073, 50079, 50081, 50083, 50370, 50373, 50376, 50377, 50378, 50379, 50381, 50382, 50383, 50384, 50385, 50386, 50387, 50388, 50516, 50519, 50521, 50522, 50559, 50566, 50568, 50572, 50574, 50864, 50865, 50870, 50872, 50875, 50876, 50877, 50878, 50879, 50880, 50881, 50882, 51052, 51059, 51061, 51062, 51376, 51561, 51869, 51870, 51875, 52052, 52054, 52362, 52363, 52364, 52367, 52368, 52514, 52539, 52545, 52547, 52751, 52754, 52828, 52830, 52855, 52856, 52857, 52858, 52859, 52860, 52861, 52881, 52921, 52927, 52988, 53007, 53032, 53034, 53038, 53040, 53244, 53245, 53246, 53247, 53248, 53321, 53322, 53323, 53324, 53325, 53349, 53350, 53351, 53352, 53353, 53354, 53374, 53414, 53420, 53481, 53500, 53525, 53527, 53531, 53533, 53737, 53738, 53739, 53740, 53741, 53814, 53815, 53816, 53817, 53818, 53843, 53844, 53845, 53846, 53867, 53907, 53913, 53974, 53993, 54018, 54020, 54024, 54231, 54232, 54234, 54308, 54310, 54311, 54337, 54338, 54400, 54406, 54511, 54513, 54728, 54805, 54827, 54834, 54839, 54906, 54981, 55008, 55012, 55013, 55221, 55222, 55227, 55298, 55299, 55304, 55320, 55321, 55326, 55327, 55328, 55331, 55332, 55397, 55399, 55469, 55474, 55495, 55501, 55503, 55504, 55505, 55506, 55714, 55715, 55716, 55719, 55720, 55791, 55792, 55793, 55796, 55797, 55813, 55814, 55815, 55818, 55819, 55820, 55821, 55822, 55823, 55824, 55825, 55834, 55838, 55884, 55890, 55892, 55945, 55962, 55965, 55967, 55988, 55990, 55991, 55994, 55996, 55997, 55998, 55999, 56202, 56205, 56208, 56209, 56210, 56211, 56212, 56213, 56279, 56281, 56285, 56286, 56287, 56288, 56289, 56290, 56305, 56307, 56308, 56309, 56310, 56311, 56312, 56313, 56314, 56315, 56316, 56317, 56318, 56327, 56328, 56331, 56332, 56372, 56377, 56378, 56383, 56385, 56438, 56439, 56455, 56458, 56460, 56481, 56483, 56484, 56485, 56487, 56489, 56490, 56491, 56492, 56695, 56696, 56697, 56698, 56699, 56702, 56703, 56704, 56705, 56772, 56773, 56774, 56775, 56776, 56779, 56780, 56781, 56782, 56798, 56801, 56802, 56803, 56804, 56807, 56808, 56809, 56810, 56820, 56821, 56824, 56825, 56865, 56870, 56871, 56876, 56931, 56932, 56948, 56951, 56974, 56976, 56977, 56978, 56980, 56982, 56983, 57189, 57190, 57192, 57196, 57197, 57266, 57268, 57269, 57273, 57274, 57291, 57295, 57296, 57301, 57302, 57313, 57314, 57358, 57363, 57364, 57467, 57469, 57470, 57471, 57686, 57693, 57698, 57763, 57770, 57775, 57785, 57792, 57797, 57798, 57800, 57812, 57860, 57864, 57919, 57930, 57939, 57940, 57966, 57967, 57970, 57971, 58179, 58180, 58185, 58186, 58187, 58190, 58191, 58256, 58257, 58262, 58263, 58264, 58266, 58268, 58278, 58279, 58284, 58285, 58286, 58289, 58290, 58291, 58292, 58293, 58294, 58295, 58302, 58305, 58347, 58353, 58355, 58357, 58409, 58412, 58423, 58427, 58432, 58433, 58453, 58454, 58459, 58460, 58461, 58462, 58463, 58464, 58673, 58674, 58677, 58678, 58679, 58680, 58681, 58682, 58683, 58684, 58693, 58750, 58751, 58754, 58755, 58756, 58757, 58758, 58759, 58760, 58761, 58766, 58772, 58773, 58776, 58777, 58778, 58779, 58780, 58781, 58782, 58783, 58784, 58785, 58786, 58787, 58788, 58792, 58795, 58796, 58798, 58840, 58842, 58846, 58848, 58850, 58902, 58903, 58905, 58916, 58920, 58923, 58925, 58926, 58946, 58947, 58948, 58949, 58952, 58953, 58954, 58955, 58956, 58957, 59160, 59163, 59167, 59168, 59169, 59170, 59173, 59174, 59175, 59176, 59186, 59237, 59239, 59244, 59245, 59246, 59247, 59250, 59251, 59252, 59253, 59259, 59263, 59266, 59267, 59268, 59269, 59272, 59273, 59274, 59275, 59277, 59278, 59279, 59280, 59281, 59285, 59286, 59288, 59289, 59290, 59330, 59333, 59335, 59336, 59339, 59341, 59395, 59396, 59397, 59409, 59413, 59416, 59419, 59439, 59440, 59441, 59442, 59443, 59445, 59446, 59447, 59448, 59654, 59655, 59657, 59661, 59662, 59667, 59668, 59679, 59731, 59733, 59734, 59738, 59739, 59744, 59746, 59752, 59756, 59760, 59761, 59766, 59767, 59771, 59773, 59774, 59778, 59779, 59823, 59826, 59828, 59829, 59912, 59932, 59933, 59934, 59935, 59936, 60151, 60158, 60163, 60164, 60167, 60228, 60235, 60240, 60241, 60250, 60257, 60262, 60263, 60265, 60268, 60269, 60270, 60273, 60277, 60312, 60325, 60329, 60376, 60379, 60384, 60395, 60404, 60405, 60419, 60431, 60432, 60435, 60436, 60645, 60650, 60651, 60652, 60655, 60656, 60657, 60658, 60659, 60660, 60661, 60722, 60727, 60728, 60729, 60731, 60733, 60734, 60735, 60736, 60737, 60744, 60749, 60750, 60751, 60754, 60755, 60756, 60757, 60758, 60759, 60760, 60761, 60762, 60763, 60766, 60767, 60770, 60805, 60812, 60818, 60820, 60822, 60869, 60872, 60874, 60877, 60888, 60892, 60897, 60898, 60912, 60918, 60919, 60924, 60925, 60926, 60927, 60928, 60929, 61139, 61142, 61145, 61146, 61147, 61148, 61150, 61151, 61152, 61153, 61154, 61158, 61216, 61219, 61222, 61223, 61224, 61225, 61227, 61228, 61229, 61230, 61231, 61238, 61241, 61244, 61245, 61246, 61247, 61249, 61250, 61251, 61252, 61253, 61254, 61255, 61256, 61257, 61259, 61260, 61261, 61298, 61305, 61307, 61311, 61313, 61362, 61365, 61367, 61368, 61381, 61385, 61388, 61391, 61405, 61411, 61412, 61413, 61414, 61417, 61418, 61419, 61420, 61633, 61634, 61639, 61640, 61644, 61645, 61647, 61651, 61710, 61711, 61716, 61718, 61721, 61722, 61723, 61724, 61728, 61732, 61733, 61738, 61739, 61743, 61745, 61746, 61747, 61748, 61749, 61750, 61751, 61791, 61795, 61798, 61800, 61801, 61884, 61898, 61904, 61905, 61906, 61907, 61908, 62130, 62135, 62136, 62139, 62141, 62142, 62143, 62207, 62212, 62213, 62218, 62219, 62220, 62229, 62234, 62235, 62237, 62240, 62241, 62242, 62245, 62249, 62284, 62297, 62301, 62348, 62351, 62356, 62367, 62376, 62377, 62391, 62403, 62404, 62407, 62408, 62624, 62627, 62629, 62630, 62631, 62632, 62633, 62634, 62635, 62636, 62701, 62703, 62706, 62707, 62708, 62709, 62711, 62712, 62713, 62723, 62726, 62728, 62729, 62730, 62731, 62732, 62733, 62734, 62735, 62738, 62739, 62777, 62784, 62790, 62792, 62841, 62844, 62846, 62860, 62864, 62870, 62884, 62890, 62891, 62896, 62897, 62898, 62899, 63118, 63119, 63123, 63124, 63126, 63127, 63128, 63129, 63130, 63195, 63197, 63200, 63201, 63202, 63203, 63204, 63205, 63206, 63217, 63218, 63222, 63224, 63225, 63226, 63227, 63228, 63229, 63270, 63277, 63279, 63363, 63377, 63383, 63384, 63385, 63386, 63615, 63618, 63620, 63621, 63622, 63692, 63697, 63698, 63699, 63714, 63716, 63719, 63720, 63721, 63724, 63763, 63776, 63827, 63830, 63846, 63856, 63870, 63882, 63883, 64109, 64110, 64112, 64113, 64114, 64115, 64186, 64187, 64188, 64190, 64191, 64192, 64208, 64210, 64211, 64212, 64213, 64214, 64256, 64263, 64349, 64363, 64369, 64370, 64606, 64607, 64608, 64683, 64684, 64685, 64705, 64706, 64707, 64749, 64842, 64856, 65103, 65180, 65208, 65213, 65258, 65347, 65360, 65365, 65596, 65597, 65602, 65673, 65674, 65679, 65701, 65702, 65705, 65706, 65749, 65751, 65837, 65840, 65843, 65853, 65856, 65858, 66089, 66090, 66091, 66094, 66095, 66166, 66167, 66168, 66171, 66172, 66194, 66195, 66196, 66197, 66198, 66199, 66208, 66212, 66236, 66242, 66244, 66318, 66330, 66333, 66336, 66343, 66346, 66349, 66351, 66555, 66558, 66583, 66584, 66585, 66586, 66587, 66588, 66632, 66634, 66660, 66661, 66662, 66663, 66664, 66665, 66685, 66687, 66688, 66689, 66690, 66691, 66692, 66701, 66702, 66705, 66725, 66729, 66731, 66735, 66737, 66792, 66811, 66823, 66826, 66829, 66836, 66838, 66839, 66842, 66844, 67048, 67049, 67050, 67051, 67052, 67077, 67078, 67079, 67080, 67125, 67126, 67127, 67128, 67129, 67154, 67155, 67156, 67157, 67178, 67181, 67182, 67183, 67184, 67194, 67195, 67198, 67218, 67222, 67224, 67228, 67285, 67304, 67316, 67322, 67329, 67331, 67332, 67335, 67542, 67543, 67545, 67571, 67572, 67619, 67621, 67622, 67648, 67649, 67675, 67676, 67687, 67688, 67711, 67715, 67717, 67815, 67822, 67824, 68039, 68061, 68068, 68073, 68116, 68138, 68145, 68150, 68166, 68171, 68172, 68175, 68185, 68212, 68216, 68217, 68276, 68292, 68305, 68306, 68318, 68319, 68323, 68324, 68532, 68533, 68538, 68554, 68555, 68560, 68561, 68562, 68565, 68566, 68609, 68610, 68615, 68631, 68632, 68637, 68638, 68639, 68642, 68643, 68659, 68660, 68663, 68664, 68665, 68666, 68667, 68668, 68669, 68676, 68678, 68699, 68705, 68707, 68708, 68709, 68710, 68769, 68780, 68785, 68795, 68798, 68799, 68801, 68806, 68811, 68812, 68814, 68815, 68816, 68817, 69026, 69027, 69030, 69031, 69048, 69049, 69052, 69053, 69054, 69055, 69056, 69057, 69058, 69059, 69068, 69103, 69104, 69107, 69108, 69125, 69126, 69129, 69130, 69131, 69132, 69133, 69134, 69135, 69136, 69145, 69149, 69152, 69153, 69154, 69155, 69156, 69157, 69158, 69159, 69160, 69161, 69162, 69166, 69169, 69170, 69171, 69192, 69194, 69195, 69198, 69200, 69201, 69202, 69203, 69256, 69262, 69273, 69276, 69278, 69288, 69291, 69292, 69294, 69299, 69301, 69302, 69304, 69305, 69307, 69308, 69309, 69310, 69513, 69516, 69520, 69521, 69522, 69523, 69542, 69543, 69544, 69545, 69548, 69549, 69550, 69551, 69561, 69590, 69592, 69597, 69598, 69599, 69600, 69616, 69619, 69620, 69621, 69622, 69625, 69626, 69627, 69628, 69638, 69639, 69642, 69643, 69646, 69647, 69648, 69649, 69651, 69652, 69653, 69654, 69655, 69659, 69660, 69662, 69663, 69683, 69685, 69687, 69688, 69689, 69691, 69693, 69694, 69749, 69750, 69755, 69766, 69769, 69781, 69785, 69787, 69792, 69794, 69795, 69796, 69797, 69798, 69800, 69801, 70007, 70008, 70010, 70014, 70015, 70036, 70037, 70042, 70043, 70054, 70084, 70086, 70087, 70091, 70092, 70109, 70113, 70114, 70119, 70120, 70131, 70132, 70140, 70141, 70145, 70146, 70148, 70152, 70153, 70176, 70178, 70180, 70181, 70182, 70278, 70280, 70285, 70287, 70288, 70289, 70504, 70511, 70516, 70526, 70533, 70538, 70539, 70541, 70581, 70588, 70593, 70603, 70610, 70615, 70616, 70618, 70630, 70631, 70636, 70637, 70640, 70642, 70643, 70644, 70647, 70650, 70651, 70677, 70678, 70681, 70682, 70737, 70741, 70748, 70757, 70758, 70770, 70771, 70783, 70784, 70785, 70788, 70789, 70946, 70998, 71003, 71004, 71005, 71008, 71009, 71020, 71025, 71026, 71027, 71030, 71031, 71032, 71033, 71034, 71035, 71036, 71075, 71080, 71081, 71082, 71084, 71086, 71097, 71102, 71103, 71104, 71107, 71108, 71109, 71110, 71111, 71112, 71113, 71120, 71123, 71124, 71125, 71128, 71129, 71130, 71131, 71132, 71133, 71134, 71135, 71136, 71137, 71140, 71141, 71143, 71144, 71164, 71165, 71170, 71171, 71172, 71173, 71174, 71175, 71227, 71230, 71234, 71241, 71245, 71250, 71251, 71260, 71263, 71264, 71266, 71271, 71272, 71276, 71277, 71278, 71279, 71280, 71281, 71282, 71439, 71492, 71495, 71498, 71499, 71500, 71501, 71511, 71514, 71517, 71520, 71521, 71522, 71523, 71525, 71526, 71527, 71528, 71529, 71533, 71569, 71572, 71575, 71576, 71577, 71578, 71584, 71591, 71594, 71597, 71598, 71599, 71600, 71602, 71603, 71604, 71605, 71606, 71610, 71613, 71614, 71618, 71619, 71620, 71621, 71623, 71624, 71625, 71626, 71627, 71628, 71629, 71630, 71631, 71633, 71634, 71635, 71637, 71657, 71658, 71659, 71660, 71663, 71664, 71665, 71666, 71720, 71721, 71727, 71734, 71738, 71741, 71744, 71753, 71757, 71759, 71764, 71765, 71766, 71767, 71769, 71770, 71771, 71772, 71773, 71932, 71986, 71987, 71992, 71993, 72004, 72008, 72009, 72014, 72015, 72019, 72021, 72022, 72026, 72063, 72064, 72069, 72071, 72077, 72081, 72085, 72086, 72091, 72092, 72096, 72098, 72099, 72103, 72104, 72112, 72113, 72117, 72118, 72120, 72121, 72122, 72123, 72124, 72125, 72130, 72148, 72150, 72151, 72152, 72153, 72154, 72237, 72250, 72252, 72257, 72258, 72259, 72260, 72261, 72425, 72483, 72488, 72489, 72492, 72505, 72510, 72511, 72513, 72516, 72517, 72518, 72560, 72565, 72566, 72582, 72587, 72588, 72590, 72593, 72594, 72595, 72598, 72602, 72603, 72608, 72609, 72612, 72614, 72615, 72616, 72619, 72622, 72623, 72637, 72649, 72650, 72653, 72654, 72701, 72704, 72709, 72713, 72720, 72729, 72730, 72742, 72743, 72744, 72755, 72756, 72757, 72760, 72761, 72918, 72977, 72980, 72982, 72983, 72984, 72985, 72986, 72999, 73002, 73004, 73005, 73006, 73007, 73008, 73009, 73010, 73011, 73054, 73056, 73059, 73060, 73061, 73062, 73076, 73079, 73081, 73082, 73083, 73084, 73085, 73086, 73087, 73088, 73091, 73092, 73097, 73100, 73102, 73103, 73104, 73105, 73106, 73107, 73108, 73109, 73112, 73113, 73116, 73130, 73136, 73137, 73142, 73143, 73144, 73145, 73194, 73197, 73199, 73206, 73213, 73217, 73223, 73232, 73236, 73237, 73238, 73243, 73244, 73248, 73249, 73250, 73251, 73252, 73411, 73471, 73472, 73476, 73477, 73479, 73483, 73493, 73494, 73498, 73500, 73501, 73502, 73503, 73504, 73505, 73548, 73550, 73553, 73554, 73555, 73556, 73570, 73571, 73575, 73577, 73578, 73579, 73580, 73581, 73582, 73591, 73592, 73596, 73597, 73599, 73600, 73601, 73602, 73603, 73609, 73623, 73629, 73630, 73631, 73632, 73716, 73729, 73730, 73731, 73736, 73737, 73738, 73739, 73904, 73968, 73971, 73973, 73974, 73975, 73990, 73992, 73995, 73996, 73997, 74045, 74050, 74051, 74052, 74067, 74069, 74072, 74073, 74074, 74077, 74088, 74091, 74093, 74094, 74095, 74098, 74102, 74116, 74128, 74129, 74180, 74183, 74192, 74199, 74209, 74222, 74223, 74234, 74235, 74236, 74397, 74462, 74463, 74465, 74466, 74467, 74468, 74484, 74486, 74487, 74488, 74489, 74490, 74539, 74540, 74541, 74543, 74544, 74545, 74561, 74563, 74564, 74565, 74566, 74567, 74582, 74583, 74585, 74586, 74587, 74588, 74595, 74609, 74615, 74616, 74702, 74715, 74716, 74717, 74722, 74723, 74890, 74959, 74960, 74961, 74981, 74982, 74983, 75036, 75037, 75038, 75058, 75059, 75060, 75079, 75080, 75081, 75088, 75102, 75195, 75208, 75209, 75383, 75456, 75478, 75482, 75533, 75561, 75566, 75582, 75584, 75590, 75593, 75600, 75606, 75611, 75700, 75713, 75718, 75911, 75949, 75950, 75955, 75971, 75972, 75974, 75975, 76026, 76027, 76032, 76054, 76055, 76058, 76059, 76075, 76076, 76077, 76078, 76079, 76083, 76085, 76086, 76089, 76093, 76099, 76102, 76104, 76190, 76193, 76196, 76206, 76209, 76211, 76375, 76404, 76443, 76444, 76447, 76448, 76464, 76465, 76466, 76467, 76468, 76469, 76478, 76520, 76521, 76524, 76525, 76547, 76548, 76549, 76550, 76551, 76552, 76561, 76565, 76568, 76569, 76570, 76571, 76572, 76576, 76578, 76579, 76582, 76586, 76589, 76592, 76595, 76597, 76671, 76683, 76686, 76689, 76696, 76699, 76702, 76704, 76868, 76897, 76908, 76911, 76937, 76938, 76939, 76940, 76958, 76959, 76960, 76962, 76971, 76985, 76987, 77014, 77015, 77016, 77017, 77038, 77041, 77042, 77043, 77044, 77054, 77055, 77058, 77061, 77062, 77063, 77064, 77065, 77069, 77071, 77075, 77078, 77079, 77082, 77084, 77085, 77088, 77145, 77164, 77176, 77182, 77189, 77191, 77192, 77195, 77361, 77390, 77402, 77403, 77405, 77431, 77432, 77452, 77455, 77464, 77479, 77481, 77482, 77508, 77509, 77535, 77536, 77547, 77548, 77555, 77557, 77558, 77568, 77571, 77572, 77575, 77577, 77675, 77682, 77684, 77854, 77899, 77921, 77928, 77933, 77943, 77947, 77949, 77952, 77976, 77998, 78005, 78010, 78026, 78031, 78032, 78035, 78045, 78047, 78049, 78052, 78053, 78054, 78055, 78056, 78058, 78059, 78065, 78071, 78072, 78076, 78077, 78136, 78152, 78165, 78166, 78178, 78179, 78183, 78184, 78316, 78376, 78393, 78398, 78415, 78420, 78421, 78422, 78425, 78426, 78436, 78437, 78439, 78440, 78442, 78443, 78444, 78445, 78446, 78470, 78475, 78492, 78497, 78498, 78499, 78502, 78503, 78519, 78520, 78523, 78524, 78525, 78526, 78527, 78528, 78529, 78536, 78538, 78540, 78541, 78542, 78543, 78544, 78545, 78546, 78547, 78548, 78549, 78550, 78551, 78552, 78554, 78558, 78559, 78564, 78565, 78567, 78568, 78569, 78570, 78629, 78640, 78645, 78655, 78658, 78659, 78661, 78666, 78671, 78672, 78674, 78675, 78676, 78677, 78809, 78840, 78869, 78887, 78890, 78909, 78912, 78915, 78916, 78917, 78918, 78928, 78930, 78931, 78932, 78934, 78935, 78936, 78937, 78938, 78939, 78943, 78964, 78967, 78986, 78989, 78992, 78993, 78994, 78995, 79005, 79009, 79013, 79014, 79015, 79016, 79018, 79019, 79020, 79021, 79022, 79026, 79029, 79030, 79033, 79034, 79035, 79036, 79037, 79038, 79039, 79040, 79041, 79042, 79043, 79045, 79047, 79051, 79052, 79054, 79055, 79057, 79058, 79060, 79061, 79116, 79122, 79133, 79136, 79148, 79152, 79154, 79159, 79161, 79162, 79164, 79165, 79167, 79168, 79302, 79333, 79362, 79381, 79382, 79403, 79404, 79409, 79410, 79421, 79424, 79427, 79429, 79430, 79432, 79436, 79458, 79459, 79476, 79480, 79481, 79486, 79487, 79498, 79499, 79507, 79508, 79512, 79513, 79515, 79519, 79520, 79527, 79529, 79530, 79531, 79532, 79533, 79538, 79540, 79543, 79544, 79545, 79547, 79548, 79549, 79645, 79647, 79652, 79654, 79655, 79656, 79795, 79826, 79878, 79883, 79900, 79905, 79906, 79908, 79915, 79919, 79921, 79924, 79926, 79927, 79928, 79955, 79960, 79977, 79982, 79983, 79985, 79997, 79998, 80003, 80004, 80007, 80009, 80010, 80011, 80014, 80017, 80018, 80019, 80021, 80024, 80025, 80026, 80027, 80028, 80030, 80031, 80037, 80043, 80044, 80045, 80048, 80049, 80104, 80108, 80115, 80124, 80125, 80137, 80138, 80150, 80151, 80152, 80155, 80156, 80288, 80313, 80348, 80372, 80375, 80394, 80397, 80399, 80400, 80401, 80402, 80403, 80409, 80411, 80414, 80415, 80416, 80417, 80418, 80419, 80420, 80421, 80449, 80451, 80471, 80474, 80476, 80477, 80478, 80479, 80480, 80487, 80492, 80495, 80497, 80498, 80499, 80500, 80501, 80502, 80503, 80504, 80507, 80508, 80511, 80512, 80513, 80514, 80515, 80516, 80517, 80518, 80519, 80520, 80521, 80522, 80524, 80526, 80530, 80531, 80532, 80536, 80537, 80538, 80539, 80540, 80594, 80601, 80608, 80612, 80618, 80627, 80631, 80633, 80638, 80639, 80643, 80644, 80645, 80646, 80647, 80781, 80806, 80812, 80841, 80866, 80867, 80878, 80888, 80889, 80893, 80895, 80896, 80900, 80903, 80906, 80908, 80909, 80911, 80912, 80913, 80914, 80915, 80943, 80945, 80951, 80965, 80966, 80970, 80972, 80973, 80977, 80986, 80987, 80991, 80992, 80994, 80995, 80996, 80997, 80998, 81004, 81006, 81008, 81009, 81010, 81011, 81012, 81017, 81019, 81023, 81024, 81025, 81026, 81027, 81111, 81124, 81126, 81131, 81132, 81133, 81134, 81274, 81299, 81305, 81363, 81366, 81385, 81387, 81390, 81391, 81392, 81400, 81403, 81405, 81406, 81407, 81440, 81462, 81464, 81467, 81468, 81469, 81472, 81483, 81486, 81488, 81489, 81490, 81493, 81497, 81498, 81500, 81503, 81504, 81505, 81506, 81507, 81510, 81511, 81516, 81522, 81523, 81524, 81575, 81578, 81587, 81594, 81604, 81617, 81618, 81629, 81630, 81631, 81767, 81792, 81827, 81857, 81858, 81860, 81879, 81881, 81882, 81883, 81884, 81885, 81894, 81895, 81897, 81898, 81899, 81900, 81934, 81935, 81936, 81956, 81958, 81959, 81960, 81961, 81962, 81977, 81978, 81980, 81981, 81982, 81983, 81990, 81992, 81994, 81995, 81996, 81997, 81998, 82003, 82004, 82005, 82009, 82010, 82011, 82097, 82110, 82111, 82112, 82117, 82118, 82260, 82285, 82291, 82354, 82355, 82356, 82376, 82377, 82378, 82391, 82392, 82393, 82431, 82432, 82433, 82453, 82454, 82455, 82474, 82475, 82476, 82483, 82489, 82490, 82491, 82496, 82497, 82502, 82590, 82603, 82604, 82753, 82778, 82851, 82873, 82877, 82888, 82890, 82896, 82900, 82928, 82956, 82961, 82977, 82979, 82985, 82988, 82992, 82993, 82995, 83001, 83006, 83094, 83095, 83108, 83113, 83242, 83306, 83345, 83350, 83366, 83367, 83369, 83370, 83381, 83382, 83383, 83384, 83385, 83389, 83393, 83422, 83427, 83449, 83450, 83453, 83454, 83470, 83471, 83472, 83473, 83474, 83478, 83480, 83481, 83484, 83485, 83486, 83488, 83494, 83497, 83499, 83585, 83587, 83588, 83591, 83601, 83604, 83606, 83735, 83770, 83799, 83839, 83842, 83860, 83861, 83862, 83864, 83873, 83874, 83875, 83876, 83877, 83878, 83882, 83886, 83916, 83919, 83943, 83944, 83945, 83946, 83956, 83960, 83963, 83964, 83965, 83966, 83967, 83971, 83973, 83977, 83978, 83979, 83981, 83984, 83987, 83990, 84066, 84078, 84080, 84084, 84091, 84094, 84097, 84228, 84263, 84292, 84333, 84334, 84354, 84357, 84366, 84368, 84370, 84371, 84379, 84410, 84411, 84437, 84438, 84449, 84450, 84457, 84459, 84460, 84470, 84471, 84472, 84473, 84474, 84477, 84479, 84573, 84577, 84584, 84586, 84721, 84756, 84830, 84835, 84845, 84849, 84851, 84854, 84860, 84862, 84865, 84866, 84867, 84868, 84872, 84907, 84912, 84928, 84933, 84934, 84937, 84947, 84949, 84951, 84954, 84955, 84956, 84957, 84958, 84960, 84961, 84964, 84965, 84967, 84973, 84974, 84978, 84979, 85038, 85054, 85066, 85067, 85068, 85080, 85081, 85085, 85086, 85214, 85218, 85278, 85324, 85327, 85339, 85341, 85344, 85345, 85346, 85347, 85348, 85353, 85354, 85355, 85356, 85357, 85358, 85359, 85360, 85361, 85365, 85401, 85404, 85422, 85425, 85427, 85428, 85429, 85430, 85431, 85438, 85442, 85443, 85444, 85445, 85446, 85447, 85448, 85449, 85450, 85451, 85452, 85454, 85456, 85457, 85458, 85460, 85461, 85466, 85467, 85469, 85470, 85531, 85542, 85557, 85559, 85561, 85563, 85568, 85573, 85574, 85576, 85577, 85707, 85711, 85742, 85771, 85818, 85819, 85830, 85833, 85836, 85838, 85839, 85841, 85845, 85847, 85849, 85850, 85851, 85852, 85853, 85858, 85895, 85896, 85907, 85916, 85917, 85921, 85922, 85924, 85928, 85936, 85938, 85939, 85940, 85941, 85942, 85947, 85949, 85950, 85951, 85953, 85954, 85956, 85957, 86052, 86054, 86056, 86061, 86063, 86064, 86200, 86204, 86235, 86315, 86317, 86330, 86333, 86335, 86336, 86337, 86339, 86341, 86344, 86345, 86346, 86347, 86351, 86392, 86394, 86413, 86416, 86418, 86419, 86420, 86423, 86427, 86428, 86430, 86433, 86434, 86435, 86436, 86437, 86440, 86443, 86444, 86446, 86452, 86453, 86454, 86517, 86524, 86534, 86545, 86547, 86559, 86560, 86561, 86693, 86697, 86722, 86757, 86809, 86811, 86812, 86824, 86825, 86827, 86828, 86829, 86830, 86833, 86835, 86836, 86837, 86838, 86839, 86844, 86886, 86888, 86889, 86907, 86908, 86910, 86911, 86912, 86913, 86920, 86922, 86924, 86925, 86926, 86927, 86928, 86933, 86935, 86936, 86937, 86939, 86940, 86941, 87027, 87038, 87040, 87042, 87047, 87048, 87186, 87190, 87215, 87221, 87306, 87307, 87308, 87321, 87322, 87323, 87330, 87331, 87332, 87337, 87383, 87384, 87385, 87404, 87405, 87406, 87413, 87419, 87420, 87421, 87426, 87427, 87429, 87430, 87432, 87520, 87531, 87533, 87534, 87679, 87683, 87708, 87803, 87807, 87818, 87820, 87826, 87827, 87828, 87829, 87830, 87886, 87891, 87907, 87909, 87915, 87918, 87922, 87923, 87925, 87931, 87936, 88024, 88025, 88038, 88043, 88172, 88173, 88236, 88297, 88299, 88311, 88312, 88313, 88314, 88315, 88319, 88320, 88321, 88322, 88323, 88380, 88383, 88400, 88401, 88402, 88403, 88404, 88408, 88410, 88414, 88415, 88416, 88418, 88424, 88427, 88515, 88517, 88521, 88531, 88534, 88665, 88666, 88700, 88729, 88791, 88794, 88803, 88805, 88807, 88808, 88813, 88814, 88815, 88816, 88874, 88875, 88886, 88894, 88896, 88897, 88907, 88908, 88909, 88911, 88914, 89010, 89014, 89021, 89158, 89159, 89193, 89288, 89291, 89297, 89299, 89302, 89303, 89304, 89305, 89306, 89307, 89308, 89309, 89371, 89374, 89386, 89388, 89391, 89392, 89393, 89394, 89395, 89398, 89401, 89402, 89404, 89410, 89411, 89475, 89503, 89505, 89517, 89518, 89651, 89652, 89655, 89715, 89782, 89783, 89785, 89791, 89793, 89794, 89795, 89796, 89797, 89799, 89800, 89801, 89802, 89865, 89866, 89868, 89880, 89882, 89883, 89884, 89885, 89886, 89891, 89893, 89894, 89895, 89897, 89898, 89996, 89998, 90000, 90005, 90144, 90145, 90148, 90179, 90279, 90280, 90281, 90288, 90289, 90290, 90292, 90293, 90294, 90295, 90362, 90363, 90364, 90371, 90377, 90378, 90379, 90384, 90387, 90388, 90390, 90478, 90489, 90491, 90637, 90638, 90641, 90666, 90896, 90899, 90989, 91071, 91389, 91390, 91391, 91392, 91393, 91482, 91564, 91882, 91883, 91884, 91885, 91886, 91975, 92057, 92375, 92376, 92377, 92378, 92379, 92468, 92550, 92869, 92870, 92872, 93043, 93366, 93546, 93859, 93860, 93864, 94036, 94039, 94352, 94353, 94354, 94357, 94358, 94432, 94517, 94529, 94532, 94840, 94843, 94845, 94846, 94847, 94848, 94849, 94850, 94851, 94862, 94925, 94933, 95010, 95015, 95022, 95025, 95333, 95334, 95335, 95336, 95337, 95339, 95340, 95341, 95342, 95343, 95344, 95355, 95418, 95426, 95503, 95508, 95515, 95518, 95826, 95827, 95828, 95829, 95830, 95833, 95834, 95835, 95837, 95848, 95911, 95919, 95996, 96001, 96008, 96320, 96321, 96323, 96327, 96328, 96341, 96489, 96494, 96817, 96824, 96828, 96943, 96991, 96997, 97310, 97311, 97315, 97317, 97318, 97320, 97321, 97375, 97436, 97460, 97484, 97487, 97490, 97803, 97804, 97805, 97808, 97809, 97810, 97811, 97812, 97813, 97814, 97815, 97868, 97883, 97929, 97953, 97968, 97977, 97980, 97983, 97984, 98291, 98294, 98297, 98298, 98299, 98300, 98301, 98302, 98303, 98304, 98305, 98306, 98307, 98308, 98313, 98361, 98376, 98384, 98422, 98446, 98461, 98466, 98470, 98473, 98476, 98477, 98784, 98785, 98786, 98787, 98788, 98791, 98792, 98793, 98795, 98797, 98798, 98799, 98801, 98806, 98854, 98869, 98877, 98939, 98954, 98959, 98963, 98966, 98970, 99278, 99279, 99281, 99285, 99286, 99291, 99294, 99299, 99432, 99447, 99452, 99463, 99775, 99782, 99786, 99788, 99791, 99796, 99901, 99904, 99949, 99955, 100268, 100269, 100273, 100275, 100276, 100278, 100279, 100281, 100282, 100283, 100284, 100289, 100333, 100394, 100395, 100397, 100418, 100442, 100445, 100448, 100762, 100763, 100766, 100767, 100768, 100769, 100770, 100771, 100772, 100773, 100774, 100775, 100776, 100777, 100782, 100826, 100841, 100887, 100888, 100890, 100911, 100926, 100935, 100938, 100941, 100942, 101249, 101252, 101256, 101257, 101258, 101260, 101262, 101263, 101264, 101266, 101267, 101268, 101269, 101270, 101271, 101275, 101319, 101334, 101342, 101381, 101383, 101404, 101419, 101424, 101428, 101431, 101435, 101743, 101744, 101746, 101750, 101751, 101756, 101759, 101761, 101762, 101764, 101874, 101876, 101897, 101912, 101917, 101928, 102240, 102247, 102251, 102253, 102256, 102258, 102259, 102260, 102261, 102366, 102369, 102414, 102420, 102734, 102738, 102740, 102741, 102743, 102744, 102746, 102747, 102748, 102749, 102751, 102752, 102753, 102754, 102798, 102859, 102860, 102862, 102883, 102907, 102910, 102913, 103228, 103232, 103234, 103235, 103236, 103238, 103239, 103240, 103241, 103242, 103244, 103245, 103246, 103247, 103291, 103306, 103353, 103355, 103376, 103391, 103400, 103403, 103407, 103722, 103723, 103728, 103731, 103733, 103734, 103736, 103737, 103738, 103739, 103846, 103848, 103869, 103884, 103889, 103900, 104234, 104390, 104727, 104728, 104731, 104880, 104883, 105220, 105221, 105222, 105224, 105236, 105264, 105362, 105373, 105376, 105579, 105581, 105686, 105689, 105713, 105714, 105715, 105716, 105717, 105718, 105719, 105729, 105739, 105757, 105779, 105785, 105855, 105861, 105866, 105869, 105974, 106072, 106073, 106074, 106075, 106076, 106179, 106180, 106181, 106182, 106183, 106207, 106208, 106209, 106210, 106211, 106212, 106222, 106232, 106250, 106272, 106278, 106348, 106354, 106359, 106362, 106467, 106565, 106566, 106567, 106568, 106569, 106672, 106673, 106674, 106675, 106676, 106701, 106702, 106704, 106705, 106715, 106725, 106743, 106765, 106771, 106841, 106847, 106852, 106960, 107059, 107061, 107062, 107166, 107167, 107169, 107195, 107197, 107198, 107264, 107334, 107340, 107453, 107556, 107663, 107685, 107692, 107696, 107764, 107788, 107836, 107841, 107843, 107950, 108049, 108050, 108055, 108156, 108157, 108161, 108178, 108179, 108182, 108185, 108186, 108188, 108189, 108201, 108255, 108257, 108281, 108305, 108329, 108331, 108333, 108334, 108336, 108443, 108445, 108542, 108543, 108544, 108547, 108548, 108649, 108650, 108651, 108654, 108655, 108671, 108672, 108673, 108675, 108678, 108679, 108680, 108681, 108682, 108683, 108687, 108694, 108696, 108715, 108729, 108742, 108748, 108750, 108774, 108798, 108813, 108814, 108822, 108824, 108825, 108826, 108827, 108829, 108930, 108936, 108938, 109030, 109032, 109036, 109037, 109038, 109039, 109040, 109041, 109056, 109137, 109140, 109143, 109144, 109145, 109146, 109147, 109148, 109159, 109165, 109166, 109167, 109168, 109169, 109170, 109171, 109172, 109173, 109174, 109175, 109176, 109180, 109187, 109189, 109190, 109208, 109222, 109230, 109235, 109236, 109241, 109243, 109267, 109291, 109306, 109307, 109312, 109315, 109317, 109318, 109319, 109320, 109322, 109423, 109425, 109429, 109431, 109523, 109524, 109525, 109526, 109527, 109530, 109531, 109532, 109533, 109549, 109630, 109631, 109632, 109633, 109634, 109637, 109638, 109639, 109641, 109652, 109659, 109660, 109662, 109663, 109665, 109666, 109667, 109669, 109673, 109680, 109682, 109683, 109701, 109715, 109723, 109728, 109729, 109734, 109784, 109799, 109800, 109805, 109808, 109810, 109811, 109812, 109916, 109918, 109924, 110017, 110019, 110020, 110024, 110025, 110042, 110124, 110125, 110127, 110131, 110132, 110145, 110153, 110155, 110156, 110159, 110162, 110221, 110222, 110277, 110292, 110293, 110298, 110304, 110409, 110411, 110514, 110521, 110526, 110621, 110628, 110632, 110643, 110650, 110654, 110656, 110660, 110663, 110670, 110718, 110722, 110746, 110747, 110768, 110794, 110795, 110799, 110801, 110908, 110912, 111007, 111008, 111013, 111014, 111015, 111017, 111019, 111114, 111115, 111119, 111121, 111122, 111124, 111125, 111136, 111137, 111140, 111143, 111144, 111146, 111147, 111149, 111150, 111151, 111153, 111156, 111159, 111160, 111163, 111179, 111205, 111211, 111213, 111215, 111239, 111240, 111261, 111263, 111264, 111287, 111288, 111289, 111291, 111292, 111293, 111294, 111390, 111401, 111403, 111405, 111501, 111502, 111505, 111506, 111507, 111508, 111509, 111510, 111511, 111512, 111517, 111608, 111609, 111612, 111613, 111614, 111615, 111616, 111617, 111618, 111619, 111630, 111631, 111633, 111636, 111637, 111638, 111639, 111640, 111641, 111642, 111643, 111644, 111645, 111646, 111649, 111652, 111653, 111654, 111656, 111672, 111673, 111687, 111698, 111700, 111704, 111706, 111708, 111732, 111733, 111754, 111756, 111757, 111771, 111772, 111780, 111781, 111782, 111783, 111784, 111785, 111786, 111787, 111788, 111883, 111888, 111894, 111896, 111898, 111988, 111990, 111995, 111996, 111997, 111998, 112001, 112002, 112003, 112004, 112010, 112014, 112095, 112098, 112102, 112103, 112104, 112106, 112108, 112109, 112110, 112112, 112117, 112124, 112125, 112127, 112128, 112130, 112131, 112132, 112134, 112135, 112136, 112137, 112138, 112139, 112142, 112145, 112146, 112147, 112148, 112165, 112166, 112180, 112188, 112191, 112193, 112194, 112197, 112199, 112247, 112249, 112250, 112264, 112265, 112270, 112273, 112274, 112275, 112276, 112277, 112279, 112281, 112376, 112381, 112383, 112389, 112391, 112482, 112484, 112485, 112489, 112490, 112495, 112497, 112503, 112507, 112589, 112590, 112592, 112596, 112597, 112602, 112605, 112610, 112618, 112620, 112621, 112624, 112627, 112629, 112630, 112684, 112686, 112687, 112740, 112742, 112743, 112757, 112758, 112763, 112769, 112772, 112774, 112869, 112874, 112876, 112979, 112986, 112991, 112992, 113086, 113093, 113097, 113099, 113102, 113107, 113108, 113115, 113119, 113121, 113125, 113126, 113127, 113128, 113129, 113130, 113135, 113154, 113170, 113183, 113187, 113211, 113212, 113215, 113233, 113259, 113260, 113264, 113266, 113346, 113373, 113377, 113473, 113478, 113479, 113480, 113482, 113484, 113485, 113486, 113487, 113488, 113580, 113584, 113586, 113587, 113589, 113590, 113592, 113593, 113594, 113595, 113600, 113602, 113605, 113608, 113609, 113611, 113612, 113614, 113615, 113616, 113618, 113619, 113620, 113621, 113622, 113623, 113624, 113625, 113628, 113644, 113647, 113663, 113670, 113676, 113678, 113680, 113704, 113705, 113706, 113708, 113726, 113728, 113729, 113752, 113753, 113754, 113756, 113757, 113758, 113759, 113839, 113855, 113866, 113868, 113870, 113967, 113970, 113973, 113974, 113975, 113976, 113978, 113979, 113980, 113981, 113982, 114074, 114078, 114080, 114081, 114082, 114084, 114085, 114086, 114087, 114088, 114093, 114096, 114102, 114103, 114104, 114106, 114107, 114108, 114109, 114110, 114111, 114112, 114113, 114114, 114115, 114116, 114117, 114118, 114119, 114137, 114138, 114140, 114152, 114156, 114163, 114165, 114169, 114171, 114199, 114201, 114219, 114221, 114222, 114236, 114237, 114245, 114246, 114247, 114248, 114249, 114251, 114253, 114332, 114348, 114353, 114361, 114363, 114461, 114462, 114467, 114469, 114472, 114473, 114474, 114475, 114479, 114568, 114569, 114574, 114577, 114579, 114580, 114582, 114590, 114592, 114593, 114596, 114599, 114601, 114602, 114605, 114608, 114633, 114649, 114656, 114658, 114659, 114692, 114694, 114712, 114714, 114715, 114729, 114730, 114735, 114741, 114744, 114746, 114825, 114841, 114846, 114848, 114958, 114963, 114964, 114969, 114970, 114971, 115065, 115069, 115071, 115074, 115076, 115077, 115078, 115079, 115087, 115091, 115093, 115097, 115098, 115099, 115100, 115101, 115102, 115107, 115126, 115142, 115155, 115159, 115183, 115184, 115187, 115205, 115231, 115232, 115236, 115238, 115318, 115345, 115349, 115452, 115454, 115457, 115458, 115459, 115460, 115462, 115463, 115464, 115559, 115561, 115564, 115565, 115566, 115567, 115569, 115570, 115571, 115572, 115581, 115583, 115586, 115587, 115588, 115590, 115591, 115592, 115593, 115594, 115595, 115596, 115597, 115616, 115619, 115635, 115642, 115648, 115650, 115678, 115680, 115698, 115700, 115701, 115724, 115725, 115726, 115728, 115730, 115811, 115827, 115840, 115842, 115946, 115948, 115951, 115952, 115953, 115954, 115955, 115956, 115957, 116053, 116056, 116058, 116059, 116062, 116063, 116064, 116075, 116078, 116080, 116081, 116084, 116087, 116112, 116128, 116135, 116137, 116171, 116173, 116191, 116193, 116194, 116208, 116209, 116220, 116223, 116225, 116304, 116320, 116325, 116443, 116448, 116449, 116450, 116550, 116553, 116555, 116556, 116557, 116558, 116572, 116576, 116577, 116578, 116579, 116580, 116581, 116605, 116621, 116634, 116666, 116684, 116710, 116711, 116797, 116828, 116937, 116938, 116939, 116941, 116942, 116943, 117044, 117045, 117048, 117049, 117050, 117066, 117067, 117070, 117073, 117098, 117114, 117121, 117157, 117159, 117177, 117179, 117180, 117209, 117290, 117306, 117434, 117435, 117436, 117541, 117542, 117543, 117563, 117566, 117591, 117607, 117652, 117670, 117783, 117931, 118038, 118066, 118116, 118156, 118177, 118188, 118194, 118304, 118424, 118425, 118430, 118531, 118532, 118535, 118559, 118560, 118563, 118564, 118607, 118609, 118649, 118670, 118671, 118681, 118684, 118687, 118797, 118799, 118917, 118918, 118919, 118922, 118923, 119024, 119025, 119026, 119028, 119040, 119052, 119053, 119054, 119056, 119057, 119068, 119069, 119094, 119100, 119102, 119142, 119162, 119163, 119164, 119166, 119173, 119174, 119177, 119180, 119281, 119290, 119292, 119306, 119309, 119383, 119385, 119411, 119412, 119413, 119414, 119415, 119416, 119436, 119476, 119482, 119490, 119493, 119518, 119519, 119520, 119521, 119522, 119523, 119533, 119543, 119545, 119546, 119547, 119549, 119550, 119561, 119562, 119583, 119587, 119589, 119593, 119595, 119635, 119655, 119656, 119657, 119659, 119665, 119666, 119667, 119670, 119673, 119774, 119778, 119783, 119785, 119799, 119800, 119801, 119802, 119803, 119876, 119877, 119878, 119879, 119880, 119905, 119906, 119907, 119908, 119929, 119969, 119975, 119983, 119984, 119985, 119986, 119987, 120012, 120013, 120015, 120016, 120026, 120036, 120039, 120040, 120042, 120043, 120054, 120055, 120076, 120080, 120082, 120086, 120148, 120150, 120152, 120158, 120159, 120160, 120163, 120267, 120271, 120278, 120293, 120294, 120296, 120370, 120372, 120373, 120399, 120400, 120462, 120468, 120477, 120478, 120480, 120506, 120508, 120509, 120533, 120573, 120575, 120641, 120643, 120645, 120651, 120652, 120760, 120764, 120790, 120867, 120889, 120896, 120901, 120968, 120974, 120996, 121003, 121007, 121024, 121030, 121033, 121043, 121070, 121074, 121075, 121099, 121114, 121119, 121135, 121137, 121146, 121147, 121152, 121154, 121261, 121262, 121266, 121283, 121284, 121289, 121360, 121361, 121366, 121382, 121383, 121388, 121389, 121390, 121393, 121394, 121459, 121461, 121467, 121468, 121472, 121489, 121490, 121493, 121496, 121497, 121499, 121500, 121512, 121517, 121518, 121521, 121522, 121523, 121524, 121525, 121526, 121531, 121536, 121557, 121563, 121565, 121566, 121567, 121568, 121590, 121592, 121607, 121612, 121616, 121628, 121629, 121630, 121639, 121640, 121642, 121644, 121645, 121647, 121741, 121754, 121755, 121756, 121757, 121759, 121777, 121778, 121781, 121782, 121854, 121855, 121858, 121859, 121876, 121877, 121880, 121881, 121882, 121883, 121884, 121885, 121886, 121887, 121896, 121900, 121946, 121952, 121954, 121961, 121962, 121965, 121966, 121983, 121984, 121986, 121989, 121990, 121991, 121992, 121993, 121994, 121998, 122005, 122007, 122010, 122011, 122012, 122014, 122015, 122016, 122017, 122018, 122019, 122024, 122026, 122027, 122029, 122040, 122050, 122052, 122053, 122056, 122058, 122059, 122060, 122061, 122083, 122085, 122100, 122105, 122109, 122120, 122121, 122122, 122123, 122124, 122125, 122131, 122132, 122133, 122135, 122136, 122137, 122138, 122140, 122234, 122239, 122241, 122247, 122248, 122249, 122250, 122252, 122264, 122267, 122271, 122272, 122273, 122274, 122341, 122343, 122348, 122349, 122350, 122351, 122367, 122370, 122371, 122372, 122373, 122376, 122377, 122378, 122379, 122389, 122390, 122393, 122394, 122434, 122439, 122440, 122445, 122448, 122451, 122455, 122456, 122457, 122459, 122470, 122477, 122478, 122480, 122481, 122483, 122484, 122485, 122487, 122491, 122498, 122500, 122501, 122504, 122505, 122507, 122508, 122509, 122510, 122511, 122512, 122517, 122519, 122520, 122533, 122541, 122543, 122545, 122546, 122547, 122549, 122551, 122552, 122576, 122598, 122602, 122613, 122615, 122616, 122617, 122618, 122623, 122624, 122625, 122626, 122628, 122629, 122630, 122727, 122732, 122734, 122736, 122742, 122743, 122745, 122758, 122759, 122761, 122765, 122766, 122835, 122837, 122838, 122842, 122843, 122860, 122864, 122865, 122870, 122871, 122882, 122883, 122927, 122932, 122933, 122942, 122943, 122945, 122949, 122950, 122963, 122971, 122973, 122974, 122977, 122980, 122998, 123003, 123004, 123036, 123038, 123039, 123040, 123069, 123091, 123095, 123106, 123108, 123110, 123111, 123116, 123117, 123122, 123220, 123225, 123227, 123229, 123255, 123262, 123267, 123332, 123339, 123344, 123354, 123361, 123366, 123367, 123369, 123381, 123429, 123433, 123439, 123446, 123450, 123461, 123468, 123472, 123474, 123478, 123481, 123488, 123489, 123495, 123498, 123499, 123500, 123501, 123502, 123508, 123509, 123535, 123536, 123539, 123540, 123564, 123565, 123579, 123584, 123586, 123600, 123602, 123611, 123612, 123613, 123617, 123619, 123696, 123726, 123727, 123730, 123731, 123749, 123754, 123755, 123756, 123759, 123760, 123826, 123831, 123832, 123833, 123835, 123837, 123848, 123853, 123854, 123855, 123858, 123859, 123860, 123861, 123862, 123863, 123864, 123871, 123874, 123916, 123922, 123924, 123926, 123933, 123937, 123939, 123940, 123942, 123943, 123955, 123958, 123961, 123962, 123964, 123965, 123967, 123968, 123969, 123971, 123974, 123977, 123978, 123981, 123982, 123983, 123986, 123987, 123988, 123989, 123990, 123991, 123992, 123993, 123994, 123995, 123996, 123997, 124001, 124002, 124022, 124023, 124028, 124029, 124030, 124031, 124032, 124033, 124055, 124057, 124058, 124072, 124077, 124079, 124081, 124082, 124093, 124094, 124095, 124104, 124105, 124106, 124107, 124109, 124110, 124111, 124112, 124189, 124206, 124208, 124219, 124220, 124221, 124222, 124223, 124224, 124243, 124246, 124249, 124250, 124251, 124252, 124262, 124320, 124323, 124326, 124327, 124328, 124329, 124335, 124342, 124345, 124348, 124349, 124350, 124351, 124353, 124354, 124355, 124356, 124357, 124361, 124364, 124365, 124409, 124411, 124415, 124417, 124427, 124431, 124433, 124434, 124435, 124437, 124449, 124455, 124456, 124457, 124459, 124460, 124461, 124462, 124463, 124464, 124467, 124470, 124471, 124472, 124476, 124477, 124479, 124480, 124481, 124482, 124483, 124484, 124485, 124486, 124487, 124488, 124489, 124490, 124491, 124492, 124495, 124505, 124515, 124516, 124517, 124518, 124521, 124522, 124523, 124524, 124548, 124570, 124572, 124574, 124575, 124585, 124587, 124588, 124589, 124590, 124596, 124597, 124598, 124599, 124600, 124601, 124602, 124604, 124606, 124682, 124699, 124701, 124704, 124706, 124714, 124715, 124716, 124717, 124737, 124738, 124743, 124744, 124755, 124814, 124815, 124820, 124822, 124828, 124832, 124836, 124837, 124842, 124843, 124847, 124849, 124850, 124854, 124855, 124899, 124902, 124904, 124905, 124921, 124922, 124927, 124930, 124935, 124943, 124945, 124946, 124949, 124952, 124954, 124955, 124970, 124975, 124976, 124979, 124980, 124981, 124988, 125008, 125009, 125010, 125011, 125012, 125041, 125063, 125065, 125067, 125068, 125078, 125080, 125082, 125083, 125088, 125089, 125094, 125097, 125099, 125175, 125192, 125194, 125197, 125199, 125201, 125234, 125239, 125240, 125243, 125311, 125316, 125317, 125333, 125338, 125339, 125341, 125344, 125345, 125346, 125349, 125353, 125388, 125401, 125405, 125418, 125422, 125424, 125427, 125432, 125440, 125444, 125446, 125450, 125451, 125452, 125453, 125454, 125455, 125460, 125461, 125467, 125470, 125471, 125472, 125473, 125474, 125479, 125480, 125481, 125495, 125507, 125508, 125511, 125512, 125536, 125537, 125540, 125551, 125556, 125558, 125572, 125574, 125583, 125584, 125585, 125589, 125591, 125668, 125671, 125698, 125699, 125702, 125703, 125728, 125731, 125733, 125734, 125735, 125736, 125737, 125805, 125807, 125810, 125811, 125812, 125813, 125827, 125830, 125832, 125833, 125834, 125835, 125836, 125837, 125838, 125839, 125842, 125843, 125881, 125888, 125894, 125896, 125912, 125914, 125917, 125918, 125919, 125920, 125925, 125934, 125936, 125939, 125940, 125941, 125943, 125944, 125945, 125946, 125947, 125948, 125949, 125950, 125955, 125958, 125959, 125960, 125961, 125962, 125963, 125964, 125965, 125966, 125967, 125968, 125969, 125972, 125974, 125988, 125994, 125995, 126000, 126001, 126002, 126003, 126027, 126031, 126033, 126049, 126051, 126053, 126054, 126066, 126067, 126076, 126077, 126078, 126079, 126081, 126083, 126161, 126164, 126178, 126180, 126193, 126194, 126195, 126196, 126222, 126223, 126227, 126228, 126230, 126234, 126299, 126301, 126304, 126305, 126306, 126307, 126321, 126322, 126326, 126328, 126329, 126330, 126331, 126332, 126333, 126374, 126381, 126383, 126406, 126409, 126411, 126412, 126428, 126431, 126433, 126434, 126437, 126440, 126449, 126454, 126455, 126458, 126459, 126460, 126465, 126467, 126481, 126487, 126488, 126489, 126490, 126520, 126524, 126526, 126542, 126544, 126546, 126547, 126557, 126559, 126561, 126562, 126568, 126573, 126576, 126578, 126654, 126657, 126671, 126673, 126676, 126678, 126719, 126722, 126724, 126725, 126726, 126796, 126801, 126802, 126803, 126818, 126820, 126823, 126824, 126825, 126828, 126867, 126880, 126903, 126906, 126908, 126909, 126910, 126911, 126925, 126929, 126930, 126931, 126932, 126933, 126934, 126946, 126949, 126950, 126951, 126952, 126953, 126958, 126960, 126974, 126986, 126987, 127019, 127035, 127037, 127053, 127062, 127063, 127064, 127147, 127150, 127181, 127182, 127213, 127214, 127216, 127217, 127218, 127219, 127290, 127291, 127292, 127294, 127295, 127296, 127312, 127314, 127315, 127316, 127317, 127318, 127360, 127367, 127397, 127398, 127401, 127402, 127403, 127419, 127420, 127423, 127426, 127440, 127441, 127444, 127445, 127446, 127451, 127453, 127467, 127473, 127474, 127506, 127510, 127512, 127528, 127530, 127532, 127533, 127545, 127562, 127640, 127643, 127657, 127659, 127710, 127711, 127712, 127787, 127788, 127789, 127809, 127810, 127811, 127853, 127894, 127895, 127896, 127916, 127919, 127937, 127938, 127939, 127944, 127946, 127960, 128005, 128021, 128023, 128133, 128136, 128207, 128284, 128312, 128317, 128362, 128391, 128419, 128440, 128443, 128444, 128451, 128458, 128464, 128469, 128509, 128530, 128541, 128547, 128657, 128672, 128700, 128701, 128706, 128777, 128778, 128783, 128805, 128806, 128809, 128810, 128853, 128855, 128884, 128885, 128888, 128912, 128913, 128916, 128917, 128933, 128934, 128935, 128936, 128937, 128939, 128941, 128944, 128947, 128951, 128957, 128960, 128962, 129002, 129023, 129024, 129034, 129037, 129040, 129125, 129150, 129152, 129165, 129194, 129195, 129198, 129199, 129271, 129272, 129275, 129276, 129298, 129299, 129300, 129301, 129302, 129303, 129312, 129316, 129340, 129346, 129348, 129378, 129379, 129381, 129393, 129405, 129406, 129407, 129409, 129410, 129421, 129422, 129426, 129427, 129428, 129429, 129430, 129432, 129434, 129437, 129440, 129444, 129447, 129450, 129453, 129455, 129495, 129515, 129516, 129517, 129519, 129526, 129527, 129530, 129533, 129618, 129634, 129643, 129645, 129658, 129659, 129662, 129688, 129689, 129690, 129691, 129736, 129738, 129765, 129766, 129767, 129768, 129789, 129792, 129793, 129794, 129795, 129805, 129806, 129809, 129829, 129833, 129835, 129839, 129843, 129846, 129872, 129873, 129875, 129876, 129886, 129896, 129899, 129900, 129902, 129903, 129914, 129915, 129919, 129920, 129921, 129922, 129923, 129925, 129927, 129933, 129936, 129937, 129940, 129942, 129943, 129946, 130008, 130010, 130012, 130018, 130019, 130020, 130023, 130111, 130127, 130131, 130138, 130151, 130153, 130154, 130156, 130182, 130183, 130230, 130232, 130233, 130259, 130260, 130286, 130287, 130298, 130299, 130322, 130326, 130328, 130337, 130338, 130340, 130366, 130368, 130369, 130393, 130413, 130414, 130418, 130426, 130430, 130433, 130435, 130501, 130503, 130505, 130511, 130512, 130604, 130620, 130624, 130650, 130672, 130679, 130684, 130727, 130749, 130756, 130761, 130777, 130782, 130783, 130786, 130796, 130823, 130827, 130828, 130834, 130856, 130863, 130867, 130884, 130887, 130890, 130893, 130903, 130905, 130908, 130909, 130910, 130912, 130916, 130917, 130923, 130929, 130930, 130934, 130935, 130956, 130959, 130974, 130979, 130995, 130997, 131006, 131007, 131012, 131014, 131066, 131121, 131122, 131126, 131137, 131144, 131149, 131166, 131171, 131172, 131173, 131176, 131177, 131221, 131226, 131243, 131248, 131249, 131250, 131253, 131254, 131270, 131271, 131274, 131275, 131276, 131277, 131278, 131279, 131280, 131287, 131289, 131310, 131316, 131318, 131319, 131320, 131321, 131328, 131332, 131350, 131353, 131356, 131357, 131359, 131360, 131372, 131377, 131378, 131380, 131381, 131382, 131383, 131384, 131385, 131386, 131391, 131396, 131398, 131399, 131400, 131401, 131402, 131403, 131404, 131405, 131406, 131409, 131410, 131412, 131416, 131417, 131422, 131423, 131425, 131426, 131427, 131428, 131449, 131450, 131452, 131467, 131472, 131476, 131488, 131489, 131490, 131499, 131500, 131502, 131504, 131505, 131507, 131559, 131590, 131601, 131614, 131615, 131616, 131617, 131619, 131630, 131638, 131641, 131660, 131663, 131666, 131667, 131668, 131669, 131679, 131715, 131718, 131737, 131740, 131743, 131744, 131745, 131746, 131756, 131760, 131764, 131765, 131766, 131767, 131769, 131770, 131771, 131772, 131773, 131777, 131780, 131781, 131803, 131805, 131806, 131809, 131811, 131812, 131822, 131826, 131844, 131850, 131851, 131852, 131854, 131858, 131865, 131867, 131871, 131872, 131873, 131874, 131875, 131876, 131877, 131878, 131879, 131884, 131886, 131887, 131891, 131892, 131893, 131894, 131895, 131896, 131897, 131898, 131899, 131900, 131903, 131905, 131909, 131910, 131912, 131913, 131915, 131916, 131918, 131919, 131942, 131943, 131965, 131969, 131980, 131982, 131983, 131984, 131985, 131991, 131992, 131993, 131995, 131996, 131997, 132052, 132083, 132094, 132099, 132101, 132109, 132110, 132112, 132123, 132132, 132133, 132154, 132155, 132160, 132161, 132172, 132209, 132210, 132227, 132231, 132232, 132237, 132238, 132249, 132250, 132258, 132259, 132263, 132264, 132266, 132270, 132271, 132294, 132296, 132298, 132299, 132300, 132316, 132317, 132330, 132338, 132340, 132341, 132344, 132347, 132365, 132370, 132371, 132385, 132386, 132389, 132390, 132391, 132396, 132398, 132402, 132403, 132405, 132406, 132407, 132435, 132436, 132458, 132462, 132473, 132475, 132477, 132478, 132483, 132484, 132489, 132545, 132576, 132587, 132592, 132594, 132596, 132629, 132634, 132651, 132656, 132657, 132659, 132706, 132711, 132728, 132733, 132734, 132736, 132748, 132749, 132754, 132755, 132758, 132760, 132761, 132762, 132765, 132768, 132769, 132795, 132796, 132799, 132800, 132813, 132817, 132835, 132839, 132841, 132845, 132848, 132855, 132856, 132859, 132862, 132865, 132866, 132867, 132868, 132869, 132875, 132876, 132877, 132880, 132881, 132882, 132884, 132888, 132889, 132895, 132901, 132902, 132903, 132906, 132907, 132928, 132931, 132932, 132946, 132951, 132953, 132967, 132969, 132978, 132979, 132980, 132984, 132986, 133038, 133063, 133064, 133093, 133094, 133097, 133098, 133109, 133123, 133126, 133145, 133148, 133150, 133151, 133152, 133153, 133154, 133200, 133202, 133222, 133225, 133227, 133228, 133229, 133230, 133231, 133238, 133243, 133246, 133248, 133249, 133250, 133251, 133252, 133253, 133254, 133255, 133258, 133259, 133262, 133282, 133283, 133288, 133289, 133290, 133291, 133307, 133309, 133329, 133331, 133334, 133335, 133336, 133338, 133341, 133344, 133345, 133350, 133352, 133353, 133354, 133355, 133356, 133357, 133358, 133359, 133360, 133361, 133362, 133363, 133364, 133369, 133370, 133371, 133372, 133373, 133374, 133375, 133376, 133377, 133378, 133382, 133384, 133388, 133389, 133390, 133394, 133395, 133396, 133397, 133398, 133421, 133422, 133444, 133446, 133448, 133449, 133461, 133462, 133471, 133472, 133473, 133474, 133476, 133478, 133531, 133556, 133557, 133562, 133573, 133575, 133588, 133589, 133590, 133591, 133602, 133617, 133618, 133629, 133639, 133640, 133644, 133646, 133647, 133651, 133694, 133696, 133702, 133716, 133717, 133721, 133723, 133724, 133728, 133737, 133738, 133742, 133743, 133745, 133746, 133747, 133748, 133749, 133755, 133775, 133776, 133777, 133778, 133801, 133804, 133823, 133826, 133828, 133829, 133844, 133849, 133850, 133853, 133854, 133855, 133862, 133864, 133865, 133868, 133869, 133870, 133875, 133877, 133881, 133882, 133883, 133884, 133885, 133914, 133915, 133937, 133939, 133941, 133942, 133952, 133954, 133956, 133957, 133963, 133968, 133971, 133973, 134024, 134049, 134050, 134055, 134066, 134068, 134071, 134073, 134114, 134117, 134136, 134138, 134141, 134142, 134143, 134191, 134213, 134215, 134218, 134219, 134220, 134223, 134234, 134237, 134239, 134240, 134241, 134244, 134248, 134262, 134274, 134275, 134298, 134301, 134306, 134320, 134324, 134325, 134326, 134327, 134328, 134329, 134338, 134341, 134344, 134345, 134346, 134347, 134348, 134353, 134355, 134356, 134359, 134360, 134361, 134363, 134368, 134369, 134374, 134380, 134381, 134382, 134407, 134414, 134430, 134432, 134448, 134457, 134458, 134459, 134517, 134542, 134543, 134545, 134576, 134577, 134588, 134608, 134609, 134611, 134630, 134632, 134633, 134634, 134635, 134636, 134685, 134686, 134687, 134707, 134709, 134710, 134711, 134712, 134713, 134728, 134729, 134731, 134732, 134733, 134734, 134741, 134755, 134761, 134762, 134792, 134793, 134814, 134815, 134818, 134821, 134835, 134836, 134839, 134840, 134841, 134846, 134848, 134850, 134851, 134854, 134855, 134856, 134861, 134862, 134863, 134867, 134868, 134869, 134900, 134901, 134905, 134907, 134923, 134925, 134927, 134928, 134940, 134957, 135010, 135035, 135036, 135038, 135041, 135052, 135054, 135105, 135106, 135107, 135127, 135128, 135129, 135182, 135183, 135184, 135204, 135205, 135206, 135225, 135226, 135227, 135234, 135248, 135289, 135290, 135291, 135311, 135314, 135332, 135333, 135334, 135339, 135341, 135347, 135349, 135354, 135355, 135360, 135393, 135400, 135416, 135418, 135503, 135528, 135529, 135531, 135602, 135624, 135628, 135679, 135707, 135712, 135728, 135730, 135736, 135739, 135746, 135752, 135757, 135786, 135814, 135835, 135838, 135839, 135846, 135850, 135851, 135853, 135859, 135864, 135904, 135912, 135925, 135936, 135942, 135992, 136052, 136057, 136067, 136096, 136101, 136117, 136118, 136120, 136121, 136173, 136178, 136200, 136201, 136204, 136205, 136221, 136222, 136223, 136224, 136225, 136229, 136231, 136232, 136235, 136239, 136245, 136248, 136250, 136280, 136283, 136307, 136308, 136311, 136312, 136328, 136329, 136330, 136331, 136332, 136334, 136336, 136339, 136342, 136343, 136344, 136346, 136352, 136355, 136357, 136397, 136405, 136418, 136419, 136429, 136432, 136435, 136485, 136520, 136521, 136545, 136547, 136550, 136560, 136590, 136593, 136611, 136612, 136613, 136615, 136624, 136667, 136670, 136694, 136695, 136696, 136697, 136707, 136711, 136714, 136715, 136716, 136717, 136718, 136722, 136724, 136728, 136732, 136735, 136738, 136741, 136774, 136788, 136801, 136802, 136804, 136805, 136816, 136817, 136821, 136822, 136823, 136824, 136825, 136827, 136829, 136835, 136836, 136837, 136839, 136842, 136845, 136848, 136898, 136910, 136912, 136914, 136921, 136922, 136925, 136978, 137013, 137014, 137029, 137040, 137043, 137053, 137084, 137085, 137105, 137108, 137117, 137161, 137162, 137188, 137189, 137200, 137201, 137208, 137210, 137211, 137221, 137224, 137225, 137228, 137230, 137268, 137270, 137271, 137295, 137315, 137316, 137320, 137328, 137329, 137330, 137332, 137335, 137337, 137391, 137403, 137405, 137407, 137413, 137414, 137471, 137506, 137507, 137522, 137526, 137581, 137586, 137596, 137600, 137602, 137605, 137658, 137663, 137679, 137684, 137685, 137688, 137698, 137700, 137702, 137705, 137706, 137707, 137708, 137709, 137711, 137712, 137718, 137724, 137725, 137729, 137730, 137765, 137769, 137786, 137789, 137792, 137795, 137805, 137807, 137810, 137811, 137812, 137814, 137818, 137819, 137822, 137823, 137825, 137831, 137832, 137836, 137837, 137858, 137861, 137876, 137881, 137884, 137897, 137899, 137908, 137909, 137914, 137916, 137964, 137968, 137969, 138023, 138024, 138028, 138029, 138039, 138075, 138078, 138090, 138092, 138095, 138096, 138097, 138098, 138099, 138152, 138155, 138173, 138176, 138178, 138179, 138180, 138181, 138182, 138189, 138193, 138194, 138195, 138196, 138197, 138198, 138199, 138200, 138201, 138202, 138203, 138205, 138207, 138211, 138212, 138217, 138218, 138220, 138221, 138259, 138261, 138274, 138280, 138282, 138283, 138284, 138285, 138286, 138287, 138288, 138293, 138300, 138301, 138302, 138303, 138304, 138305, 138306, 138307, 138308, 138312, 138314, 138315, 138316, 138318, 138319, 138324, 138325, 138327, 138328, 138351, 138352, 138374, 138377, 138378, 138391, 138392, 138401, 138402, 138404, 138406, 138457, 138461, 138462, 138492, 138493, 138503, 138518, 138519, 138521, 138522, 138532, 138569, 138570, 138581, 138584, 138587, 138589, 138590, 138592, 138596, 138646, 138647, 138658, 138667, 138668, 138672, 138673, 138675, 138679, 138687, 138689, 138690, 138691, 138692, 138693, 138698, 138700, 138704, 138705, 138707, 138708, 138753, 138756, 138774, 138779, 138780, 138794, 138795, 138798, 138799, 138800, 138805, 138807, 138808, 138809, 138811, 138812, 138814, 138815, 138844, 138845, 138867, 138870, 138871, 138882, 138884, 138886, 138887, 138893, 138898, 138950, 138954, 138955, 138985, 138986, 138996, 139001, 139003, 139066, 139068, 139081, 139084, 139086, 139087, 139088, 139143, 139145, 139164, 139167, 139169, 139170, 139171, 139174, 139178, 139179, 139181, 139184, 139185, 139186, 139187, 139188, 139191, 139197, 139203, 139204, 139205, 139250, 139254, 139257, 139268, 139271, 139274, 139275, 139276, 139277, 139278, 139285, 139286, 139289, 139290, 139291, 139293, 139298, 139301, 139302, 139304, 139310, 139311, 139312, 139337, 139360, 139362, 139363, 139378, 139387, 139388, 139389, 139443, 139447, 139448, 139472, 139473, 139506, 139507, 139508, 139518, 139560, 139562, 139563, 139575, 139576, 139578, 139579, 139580, 139581, 139637, 139639, 139640, 139658, 139659, 139661, 139662, 139663, 139664, 139671, 139673, 139675, 139676, 139677, 139678, 139679, 139684, 139686, 139690, 139691, 139692, 139744, 139745, 139765, 139766, 139769, 139770, 139771, 139778, 139780, 139781, 139784, 139785, 139786, 139791, 139793, 139794, 139795, 139797, 139798, 139799, 139830, 139831, 139853, 139855, 139856, 139857, 139858, 139870, 139887, 139936, 139940, 139941, 139965, 139966, 139971, 139972, 139982, 139984, 140057, 140058, 140059, 140072, 140073, 140074, 140134, 140135, 140136, 140155, 140156, 140157, 140164, 140170, 140171, 140172, 140177, 140178, 140183, 140241, 140244, 140262, 140263, 140264, 140269, 140271, 140277, 140279, 140284, 140285, 140287, 140288, 140290, 140323, 140330, 140346, 140348, 140349, 140429, 140433, 140434, 140458, 140459, 140461, 140554, 140558, 140569, 140571, 140577, 140581, 140637, 140642, 140658, 140660, 140666, 140669, 140673, 140674, 140676, 140682, 140687, 140744, 140765, 140768, 140769, 140775, 140776, 140780, 140781, 140783, 140789, 140794, 140834, 140842, 140855, 140866, 140872, 140922, 140923, 140982, 140987, 140997, 141048, 141050, 141062, 141063, 141064, 141065, 141066, 141070, 141074, 141131, 141134, 141151, 141152, 141153, 141154, 141155, 141159, 141161, 141165, 141166, 141167, 141169, 141175, 141178, 141238, 141241, 141242, 141258, 141259, 141260, 141261, 141262, 141264, 141266, 141268, 141272, 141273, 141274, 141276, 141282, 141285, 141335, 141349, 141359, 141362, 141415, 141416, 141450, 141451, 141477, 141480, 141490, 141542, 141545, 141554, 141556, 141558, 141559, 141567, 141625, 141626, 141637, 141645, 141647, 141648, 141658, 141659, 141660, 141662, 141665, 141732, 141752, 141753, 141757, 141761, 141765, 141766, 141767, 141769, 141772, 141828, 141840, 141842, 141844, 141851, 141908, 141909, 141943, 141944, 141959, 142039, 142042, 142048, 142050, 142053, 142054, 142055, 142056, 142060, 142122, 142125, 142137, 142139, 142142, 142143, 142144, 142145, 142146, 142149, 142152, 142153, 142155, 142161, 142162, 142226, 142229, 142232, 142244, 142247, 142248, 142249, 142251, 142254, 142256, 142259, 142260, 142262, 142268, 142269, 142295, 142318, 142321, 142336, 142345, 142346, 142401, 142402, 142405, 142406, 142465, 142466, 142476, 142533, 142534, 142536, 142542, 142544, 142545, 142546, 142547, 142548, 142553, 142616, 142617, 142619, 142631, 142633, 142634, 142635, 142636, 142637, 142642, 142644, 142645, 142646, 142648, 142649, 142723, 142724, 142738, 142739, 142742, 142743, 142744, 142747, 142749, 142751, 142752, 142753, 142755, 142756, 142788, 142789, 142811, 142814, 142815, 142828, 142894, 142895, 142898, 142899, 142929, 142930, 142940, 143030, 143031, 143032, 143039, 143040, 143041, 143046, 143113, 143114, 143115, 143122, 143128, 143129, 143130, 143135, 143138, 143139, 143141, 143220, 143221, 143222, 143229, 143235, 143237, 143240, 143242, 143245, 143246, 143248, 143281, 143304, 143306, 143307, 143387, 143388, 143391, 143392, 143416, 143417, 143754, 143877, 144247, 144248, 144251, 144366, 144370, 144740, 144741, 144742, 144744, 144746, 144756, 144834, 144859, 144863, 145126, 145129, 145219, 145233, 145234, 145235, 145236, 145237, 145238, 145239, 145249, 145277, 145301, 145327, 145352, 145356, 145413, 145619, 145620, 145621, 145622, 145623, 145712, 145727, 145728, 145729, 145730, 145731, 145732, 145742, 145770, 145794, 145820, 145845, 145849, 145906, 146112, 146113, 146114, 146115, 146116, 146205, 146221, 146222, 146224, 146225, 146235, 146263, 146287, 146313, 146338, 146399, 146606, 146607, 146609, 146715, 146717, 146756, 146780, 146806, 146892, 147103, 147205, 147212, 147222, 147227, 147283, 147305, 147328, 147405, 147596, 147597, 147601, 147698, 147699, 147702, 147705, 147706, 147709, 147710, 147715, 147720, 147773, 147776, 147788, 147798, 147817, 147821, 147893, 147898, 148089, 148090, 148091, 148094, 148095, 148169, 148191, 148192, 148193, 148195, 148197, 148198, 148199, 148200, 148201, 148202, 148203, 148207, 148208, 148213, 148254, 148266, 148269, 148281, 148285, 148291, 148306, 148310, 148314, 148369, 148386, 148391, 148577, 148580, 148583, 148584, 148585, 148586, 148587, 148588, 148599, 148662, 148670, 148685, 148686, 148687, 148688, 148689, 148690, 148691, 148692, 148693, 148694, 148695, 148696, 148700, 148701, 148706, 148728, 148747, 148752, 148759, 148762, 148774, 148778, 148784, 148799, 148803, 148807, 148862, 148864, 148879, 148884, 149070, 149071, 149072, 149073, 149074, 149077, 149078, 149079, 149081, 149092, 149155, 149163, 149179, 149180, 149182, 149183, 149185, 149186, 149187, 149188, 149189, 149193, 149221, 149240, 149245, 149252, 149267, 149271, 149277, 149292, 149296, 149355, 149357, 149372, 149564, 149565, 149567, 149571, 149572, 149585, 149673, 149675, 149679, 149680, 149714, 149733, 149738, 149760, 149764, 149785, 149848, 149850, 150061, 150068, 150072, 150163, 150170, 150176, 150178, 150180, 150185, 150187, 150189, 150219, 150235, 150241, 150263, 150286, 150362, 150363, 150554, 150555, 150559, 150561, 150562, 150564, 150565, 150619, 150656, 150657, 150660, 150663, 150664, 150667, 150668, 150669, 150670, 150671, 150673, 150678, 150680, 150682, 150704, 150712, 150728, 150731, 150734, 150745, 150746, 150756, 150769, 150775, 150779, 150829, 150851, 150855, 150856, 151048, 151049, 151052, 151053, 151054, 151055, 151056, 151057, 151058, 151059, 151112, 151127, 151150, 151151, 151153, 151155, 151156, 151157, 151158, 151159, 151160, 151161, 151162, 151163, 151164, 151165, 151166, 151171, 151173, 151175, 151197, 151205, 151212, 151221, 151224, 151227, 151228, 151238, 151239, 151243, 151249, 151262, 151264, 151268, 151272, 151322, 151327, 151344, 151348, 151349, 151535, 151538, 151542, 151543, 151544, 151546, 151548, 151549, 151550, 151552, 151557, 151605, 151620, 151628, 151644, 151645, 151647, 151648, 151650, 151651, 151652, 151653, 151654, 151655, 151656, 151657, 151658, 151668, 151686, 151690, 151698, 151705, 151710, 151714, 151717, 151721, 151731, 151732, 151736, 151742, 151755, 151757, 151761, 151815, 151820, 151822, 151837, 151841, 152029, 152030, 152032, 152036, 152037, 152042, 152045, 152050, 152138, 152140, 152144, 152145, 152149, 152179, 152183, 152191, 152198, 152203, 152214, 152224, 152225, 152229, 152248, 152250, 152308, 152313, 152315, 152526, 152533, 152537, 152539, 152542, 152547, 152628, 152635, 152641, 152643, 152645, 152646, 152647, 152650, 152652, 152654, 152655, 152684, 152694, 152700, 152706, 152728, 152751, 152785, 152827, 152828, 153020, 153024, 153026, 153027, 153029, 153030, 153032, 153033, 153034, 153035, 153040, 153084, 153122, 153125, 153128, 153129, 153132, 153133, 153134, 153135, 153136, 153138, 153139, 153140, 153143, 153145, 153146, 153147, 153148, 153169, 153177, 153187, 153193, 153196, 153199, 153210, 153211, 153221, 153234, 153240, 153244, 153278, 153294, 153316, 153320, 153321, 153514, 153518, 153520, 153521, 153522, 153524, 153525, 153526, 153527, 153528, 153533, 153577, 153592, 153616, 153620, 153622, 153623, 153624, 153625, 153626, 153627, 153628, 153629, 153630, 153632, 153633, 153639, 153640, 153641, 153662, 153670, 153677, 153680, 153686, 153689, 153693, 153703, 153704, 153708, 153714, 153727, 153729, 153733, 153771, 153787, 153792, 153809, 153813, 154008, 154009, 154014, 154017, 154019, 154020, 154022, 154110, 154112, 154116, 154117, 154121, 154125, 154126, 154132, 154134, 154151, 154155, 154163, 154170, 154173, 154175, 154186, 154196, 154197, 154201, 154220, 154222, 154264, 154280, 154285, 154287, 154505, 154509, 154511, 154514, 154516, 154517, 154518, 154519, 154607, 154613, 154615, 154617, 154618, 154619, 154622, 154624, 154626, 154627, 154656, 154666, 154672, 154678, 154700, 154723, 154757, 154799, 154800, 154999, 155001, 155004, 155005, 155006, 155007, 155009, 155010, 155011, 155012, 155056, 155101, 155104, 155105, 155106, 155107, 155108, 155111, 155112, 155118, 155119, 155120, 155141, 155149, 155159, 155165, 155168, 155182, 155183, 155193, 155206, 155212, 155250, 155266, 155288, 155292, 155493, 155496, 155498, 155499, 155502, 155503, 155504, 155595, 155596, 155600, 155604, 155605, 155611, 155613, 155634, 155642, 155649, 155652, 155665, 155675, 155676, 155680, 155699, 155701, 155743, 155759, 155764, 155990, 155993, 155995, 155996, 155997, 155998, 156092, 156094, 156097, 156098, 156105, 156106, 156135, 156145, 156151, 156179, 156236, 156278, 156484, 156485, 156488, 156489, 156490, 156586, 156590, 156591, 156597, 156599, 156620, 156628, 156638, 156661, 156662, 156685, 156729, 156745, 156981, 156982, 156983, 157083, 157084, 157092, 157121, 157131, 157222, 157478, 157558, 157586, 157590, 157634, 157651, 157665, 157681, 157756, 157971, 157972, 157975, 158051, 158052, 158055, 158079, 158080, 158082, 158083, 158118, 158124, 158127, 158144, 158158, 158170, 158174, 158175, 158244, 158249, 158464, 158465, 158466, 158468, 158480, 158508, 158544, 158545, 158546, 158548, 158550, 158560, 158572, 158573, 158574, 158575, 158576, 158577, 158606, 158611, 158617, 158620, 158637, 158638, 158648, 158651, 158663, 158667, 158668, 158720, 158737, 158742, 158823, 158825, 158930, 158933, 158958, 158959, 158960, 158961, 158962, 158963, 158973, 158983, 159001, 159023, 159029, 159038, 159039, 159040, 159041, 159042, 159043, 159053, 159065, 159066, 159067, 159068, 159069, 159070, 159081, 159099, 159104, 159105, 159110, 159113, 159130, 159131, 159141, 159144, 159156, 159160, 159161, 159213, 159217, 159218, 159230, 159235, 159316, 159317, 159318, 159319, 159320, 159423, 159424, 159425, 159426, 159427, 159452, 159453, 159455, 159456, 159466, 159476, 159494, 159516, 159522, 159532, 159533, 159535, 159536, 159546, 159559, 159560, 159561, 159563, 159574, 159592, 159597, 159598, 159603, 159624, 159634, 159637, 159649, 159654, 159706, 159710, 159711, 159723, 159810, 159812, 159813, 159917, 159918, 159920, 159946, 159948, 159949, 160015, 160026, 160028, 160053, 160056, 160067, 160085, 160090, 160091, 160117, 160127, 160199, 160203, 160204, 160307, 160414, 160436, 160443, 160447, 160515, 160516, 160523, 160533, 160538, 160539, 160544, 160548, 160550, 160551, 160553, 160558, 160587, 160592, 160594, 160609, 160616, 160623, 160639, 160701, 160710, 160714, 160716, 160800, 160801, 160806, 160907, 160908, 160912, 160929, 160930, 160933, 160936, 160937, 160939, 160940, 160952, 161006, 161008, 161009, 161010, 161013, 161016, 161017, 161020, 161021, 161026, 161031, 161032, 161037, 161038, 161040, 161041, 161043, 161044, 161045, 161046, 161051, 161056, 161076, 161080, 161082, 161084, 161085, 161087, 161094, 161099, 161102, 161109, 161116, 161128, 161130, 161132, 161133, 161180, 161194, 161196, 161202, 161203, 161204, 161207, 161209, 161294, 161295, 161298, 161299, 161401, 161402, 161405, 161406, 161423, 161424, 161426, 161429, 161430, 161431, 161432, 161433, 161434, 161438, 161445, 161447, 161466, 161480, 161493, 161499, 161501, 161503, 161504, 161506, 161508, 161509, 161510, 161511, 161512, 161513, 161514, 161518, 161519, 161524, 161525, 161530, 161531, 161532, 161533, 161534, 161535, 161536, 161537, 161538, 161539, 161544, 161549, 161564, 161565, 161569, 161573, 161575, 161576, 161577, 161578, 161580, 161587, 161592, 161595, 161596, 161602, 161606, 161609, 161617, 161621, 161623, 161625, 161626, 161673, 161678, 161680, 161681, 161687, 161689, 161695, 161696, 161697, 161700, 161702, 161781, 161783, 161788, 161789, 161790, 161791, 161807, 161888, 161891, 161895, 161896, 161897, 161899, 161910, 161917, 161918, 161920, 161921, 161923, 161924, 161925, 161927, 161931, 161938, 161940, 161941, 161959, 161973, 161981, 161986, 161987, 161992, 161997, 161998, 162000, 162001, 162003, 162004, 162005, 162006, 162007, 162011, 162024, 162025, 162026, 162028, 162029, 162030, 162031, 162032, 162037, 162039, 162042, 162057, 162058, 162062, 162063, 162066, 162068, 162069, 162070, 162080, 162085, 162089, 162095, 162099, 162102, 162110, 162114, 162116, 162119, 162166, 162171, 162173, 162174, 162175, 162176, 162182, 162188, 162189, 162190, 162275, 162277, 162278, 162282, 162283, 162300, 162382, 162383, 162385, 162389, 162390, 162403, 162411, 162413, 162414, 162417, 162420, 162479, 162480, 162491, 162493, 162497, 162498, 162518, 162521, 162524, 162530, 162532, 162535, 162550, 162551, 162555, 162556, 162562, 162573, 162578, 162582, 162592, 162603, 162609, 162659, 162664, 162666, 162667, 162668, 162669, 162772, 162779, 162784, 162879, 162886, 162890, 162901, 162908, 162912, 162914, 162918, 162921, 162928, 162976, 162980, 162981, 162988, 162994, 162996, 162998, 163003, 163004, 163005, 163007, 163009, 163013, 163015, 163016, 163018, 163020, 163021, 163022, 163023, 163026, 163037, 163052, 163053, 163057, 163059, 163074, 163081, 163088, 163104, 163135, 163166, 163170, 163175, 163179, 163180, 163181, 163266, 163271, 163272, 163273, 163275, 163277, 163373, 163377, 163379, 163380, 163382, 163383, 163395, 163398, 163401, 163402, 163404, 163405, 163407, 163408, 163409, 163411, 163414, 163417, 163418, 163421, 163437, 163463, 163469, 163471, 163473, 163475, 163478, 163481, 163482, 163485, 163486, 163487, 163488, 163489, 163491, 163496, 163497, 163498, 163500, 163502, 163503, 163505, 163506, 163508, 163509, 163510, 163511, 163513, 163514, 163515, 163516, 163519, 163521, 163522, 163530, 163541, 163545, 163546, 163547, 163549, 163550, 163551, 163552, 163559, 163563, 163564, 163567, 163574, 163581, 163587, 163593, 163595, 163597, 163598, 163628, 163645, 163647, 163648, 163659, 163661, 163663, 163667, 163668, 163669, 163672, 163673, 163674, 163760, 163763, 163766, 163767, 163768, 163769, 163775, 163867, 163871, 163873, 163874, 163875, 163877, 163889, 163895, 163896, 163897, 163899, 163900, 163901, 163902, 163903, 163904, 163907, 163910, 163911, 163912, 163930, 163931, 163945, 163956, 163958, 163962, 163964, 163969, 163973, 163975, 163976, 163977, 163978, 163979, 163980, 163981, 163982, 163983, 163993, 163996, 163997, 163998, 164000, 164001, 164002, 164003, 164004, 164006, 164007, 164008, 164009, 164012, 164014, 164015, 164023, 164029, 164030, 164034, 164038, 164039, 164040, 164041, 164042, 164044, 164046, 164052, 164056, 164057, 164061, 164067, 164071, 164074, 164080, 164082, 164086, 164088, 164091, 164121, 164138, 164140, 164141, 164143, 164145, 164146, 164154, 164156, 164160, 164161, 164162, 164166, 164254, 164255, 164260, 164262, 164268, 164272, 164361, 164362, 164367, 164370, 164375, 164383, 164385, 164386, 164389, 164392, 164394, 164395, 164449, 164451, 164452, 164463, 164465, 164469, 164470, 164474, 164490, 164493, 164496, 164499, 164500, 164501, 164502, 164504, 164505, 164507, 164508, 164516, 164522, 164523, 164527, 164528, 164534, 164537, 164539, 164545, 164549, 164550, 164554, 164564, 164573, 164575, 164581, 164614, 164631, 164633, 164634, 164636, 164638, 164639, 164640, 164641, 164751, 164756, 164757, 164858, 164862, 164864, 164867, 164872, 164880, 164884, 164886, 164890, 164891, 164892, 164893, 164894, 164895, 164900, 164919, 164935, 164948, 164952, 164960, 164966, 164968, 164970, 164971, 164972, 164975, 164976, 164977, 164979, 164980, 164981, 164985, 164987, 164988, 164990, 164992, 164993, 164994, 164995, 164998, 165009, 165019, 165024, 165025, 165029, 165031, 165046, 165053, 165060, 165076, 165107, 165110, 165111, 165138, 165142, 165147, 165151, 165152, 165153, 165245, 165247, 165250, 165251, 165252, 165253, 165352, 165354, 165357, 165358, 165359, 165360, 165365, 165374, 165376, 165379, 165380, 165381, 165383, 165384, 165385, 165386, 165387, 165388, 165389, 165390, 165409, 165412, 165428, 165435, 165441, 165443, 165454, 165457, 165458, 165459, 165460, 165461, 165464, 165465, 165471, 165472, 165473, 165475, 165477, 165480, 165481, 165482, 165483, 165485, 165486, 165487, 165488, 165491, 165493, 165494, 165502, 165512, 165513, 165517, 165518, 165519, 165521, 165523, 165531, 165535, 165536, 165546, 165553, 165559, 165565, 165567, 165570, 165600, 165603, 165604, 165617, 165619, 165620, 165633, 165635, 165639, 165640, 165641, 165645, 165739, 165741, 165744, 165745, 165746, 165747, 165846, 165849, 165851, 165852, 165868, 165871, 165873, 165874, 165877, 165880, 165905, 165921, 165928, 165930, 165948, 165949, 165953, 165957, 165958, 165964, 165966, 165969, 165972, 165975, 165978, 165979, 165980, 165981, 165984, 165986, 165987, 165995, 166001, 166002, 166005, 166006, 166013, 166016, 166018, 166024, 166028, 166029, 166033, 166043, 166052, 166054, 166060, 166093, 166096, 166097, 166110, 166112, 166113, 166115, 166117, 166118, 166236, 166241, 166242, 166243, 166343, 166346, 166348, 166349, 166350, 166351, 166365, 166369, 166370, 166371, 166372, 166373, 166374, 166398, 166414, 166427, 166445, 166447, 166450, 166451, 166458, 166459, 166466, 166467, 166469, 166471, 166472, 166473, 166474, 166477, 166488, 166498, 166503, 166504, 166532, 166539, 166586, 166589, 166590, 166621, 166626, 166631, 166730, 166731, 166732, 166734, 166735, 166736, 166837, 166838, 166841, 166842, 166843, 166859, 166860, 166863, 166866, 166891, 166907, 166914, 166939, 166943, 166944, 166950, 166952, 166961, 166964, 166965, 166966, 166967, 166970, 166972, 166973, 166981, 166991, 166992, 167002, 167010, 167014, 167015, 167038, 167046, 167079, 167082, 167083, 167096, 167098, 167099, 167227, 167228, 167229, 167334, 167335, 167336, 167356, 167359, 167384, 167400, 167436, 167437, 167445, 167457, 167458, 167459, 167460, 167463, 167474, 167484, 167572, 167575, 167576, 167724, 167831, 167859, 167909, 167911, 167939, 167943, 167949, 167960, 167962, 167963, 167964, 167970, 167981, 167987, 168004, 168018, 168034, 168095, 168097, 168109, 168217, 168218, 168223, 168324, 168325, 168328, 168352, 168353, 168356, 168357, 168400, 168402, 168404, 168405, 168408, 168432, 168433, 168435, 168436, 168442, 168453, 168454, 168455, 168456, 168457, 168461, 168463, 168464, 168471, 168474, 168477, 168480, 168497, 168501, 168511, 168523, 168527, 168528, 168564, 168588, 168590, 168592, 168597, 168602, 168711, 168712, 168715, 168716, 168818, 168819, 168821, 168833, 168845, 168846, 168847, 168849, 168850, 168861, 168862, 168887, 168893, 168895, 168898, 168899, 168901, 168903, 168913, 168925, 168926, 168927, 168928, 168929, 168930, 168935, 168946, 168947, 168948, 168949, 168950, 168954, 168955, 168956, 168957, 168959, 168964, 168966, 168967, 168970, 168973, 168990, 168991, 168994, 169001, 169004, 169016, 169020, 169021, 169057, 169073, 169074, 169081, 169083, 169085, 169090, 169095, 169099, 169102, 169176, 169178, 169205, 169206, 169207, 169208, 169229, 169269, 169275, 169283, 169286, 169312, 169313, 169315, 169316, 169326, 169336, 169339, 169340, 169342, 169343, 169354, 169355, 169376, 169380, 169382, 169386, 169392, 169393, 169395, 169396, 169406, 169419, 169420, 169421, 169423, 169434, 169439, 169440, 169441, 169442, 169443, 169447, 169448, 169450, 169452, 169457, 169458, 169459, 169460, 169463, 169484, 169487, 169494, 169497, 169509, 169514, 169550, 169566, 169567, 169570, 169571, 169574, 169578, 169583, 169593, 169594, 169596, 169670, 169672, 169673, 169699, 169700, 169762, 169768, 169777, 169778, 169780, 169806, 169808, 169809, 169833, 169873, 169875, 169886, 169888, 169913, 169916, 169927, 169933, 169935, 169940, 169941, 169943, 169945, 169950, 169951, 169952, 169977, 169980, 169987, 170043, 170059, 170060, 170063, 170064, 170090, 170167, 170189, 170196, 170201, 170268, 170274, 170296, 170303, 170307, 170324, 170330, 170333, 170343, 170370, 170374, 170375, 170376, 170383, 170393, 170398, 170399, 170404, 170408, 170410, 170411, 170413, 170414, 170418, 170419, 170425, 170427, 170428, 170429, 170430, 170431, 170435, 170437, 170446, 170447, 170452, 170454, 170469, 170476, 170483, 170498, 170499, 170505, 170560, 170561, 170562, 170566, 170570, 170574, 170576, 170584, 170589, 170661, 170666, 170683, 170688, 170689, 170690, 170693, 170694, 170759, 170761, 170768, 170772, 170790, 170793, 170796, 170797, 170799, 170800, 170812, 170817, 170818, 170821, 170822, 170823, 170824, 170825, 170826, 170831, 170836, 170857, 170863, 170865, 170866, 170867, 170868, 170870, 170873, 170876, 170877, 170880, 170881, 170886, 170890, 170891, 170892, 170897, 170898, 170900, 170901, 170903, 170904, 170905, 170906, 170907, 170911, 170912, 170916, 170918, 170919, 170920, 170921, 170922, 170923, 170924, 170926, 170928, 170929, 170930, 170936, 170939, 170940, 170942, 170944, 170945, 170947, 170954, 170959, 170962, 170966, 170969, 170976, 170988, 170990, 170991, 170992, 170993, 170998, 171029, 171040, 171041, 171053, 171054, 171055, 171056, 171057, 171059, 171062, 171063, 171064, 171067, 171069, 171078, 171081, 171155, 171158, 171177, 171180, 171183, 171184, 171185, 171186, 171196, 171200, 171246, 171252, 171262, 171266, 171284, 171290, 171291, 171292, 171294, 171298, 171305, 171307, 171311, 171312, 171314, 171315, 171316, 171317, 171318, 171319, 171324, 171326, 171327, 171340, 171350, 171352, 171353, 171356, 171358, 171359, 171364, 171368, 171370, 171371, 171372, 171373, 171374, 171378, 171383, 171391, 171392, 171393, 171395, 171396, 171397, 171398, 171399, 171404, 171405, 171409, 171411, 171412, 171413, 171414, 171415, 171416, 171417, 171419, 171420, 171422, 171423, 171424, 171425, 171429, 171431, 171432, 171433, 171435, 171436, 171437, 171447, 171452, 171456, 171459, 171462, 171466, 171469, 171477, 171481, 171483, 171484, 171486, 171491, 171522, 171533, 171534, 171538, 171539, 171540, 171541, 171546, 171549, 171550, 171552, 171555, 171556, 171557, 171572, 171573, 171649, 171650, 171667, 171671, 171672, 171677, 171678, 171689, 171690, 171734, 171739, 171740, 171756, 171757, 171770, 171778, 171780, 171781, 171784, 171787, 171805, 171810, 171811, 171843, 171845, 171846, 171847, 171858, 171860, 171864, 171865, 171876, 171885, 171888, 171891, 171897, 171898, 171899, 171902, 171905, 171907, 171909, 171910, 171912, 171913, 171915, 171917, 171918, 171922, 171923, 171924, 171929, 171940, 171945, 171949, 171952, 171959, 171970, 171976, 171977, 171984, 172015, 172026, 172027, 172031, 172032, 172033, 172034, 172035, 172036, 172069, 172074, 172146, 172151, 172168, 172173, 172174, 172176, 172188, 172236, 172240, 172253, 172257, 172275, 172279, 172281, 172285, 172288, 172295, 172296, 172302, 172305, 172306, 172307, 172308, 172309, 172315, 172316, 172342, 172343, 172346, 172347, 172355, 172361, 172363, 172365, 172370, 172371, 172372, 172374, 172376, 172380, 172382, 172383, 172385, 172386, 172387, 172388, 172389, 172390, 172391, 172393, 172397, 172399, 172400, 172401, 172402, 172403, 172404, 172407, 172409, 172418, 172419, 172420, 172424, 172426, 172441, 172448, 172455, 172470, 172471, 172477, 172502, 172503, 172532, 172533, 172534, 172537, 172538, 172542, 172546, 172547, 172548, 172563, 172566, 172640, 172642, 172662, 172665, 172667, 172668, 172669, 172670, 172671, 172678, 172723, 172729, 172731, 172747, 172749, 172769, 172771, 172774, 172775, 172776, 172778, 172781, 172784, 172785, 172790, 172793, 172794, 172795, 172796, 172797, 172798, 172799, 172800, 172801, 172802, 172803, 172804, 172809, 172829, 172830, 172835, 172836, 172837, 172838, 172849, 172852, 172853, 172854, 172855, 172856, 172862, 172867, 172870, 172872, 172875, 172876, 172877, 172878, 172880, 172881, 172882, 172883, 172884, 172886, 172888, 172889, 172890, 172891, 172892, 172893, 172894, 172895, 172896, 172897, 172898, 172901, 172902, 172908, 172911, 172912, 172913, 172914, 172916, 172918, 172926, 172930, 172931, 172938, 172941, 172948, 172954, 172960, 172962, 172963, 172965, 172970, 172995, 172996, 173001, 173012, 173013, 173014, 173015, 173025, 173028, 173029, 173030, 173031, 173034, 173035, 173036, 173040, 173057, 173058, 173069, 173134, 173136, 173142, 173156, 173157, 173161, 173163, 173164, 173168, 173216, 173218, 173241, 173244, 173263, 173266, 173268, 173269, 173284, 173289, 173290, 173293, 173294, 173295, 173302, 173322, 173323, 173324, 173325, 173343, 173344, 173348, 173355, 173364, 173367, 173370, 173373, 173374, 173375, 173376, 173377, 173379, 173381, 173382, 173384, 173386, 173388, 173389, 173390, 173391, 173392, 173394, 173396, 173397, 173401, 173403, 173408, 173411, 173413, 173419, 173423, 173424, 173428, 173431, 173438, 173447, 173449, 173455, 173456, 173463, 173488, 173489, 173494, 173505, 173506, 173507, 173508, 173510, 173511, 173512, 173513, 173554, 173557, 173631, 173653, 173655, 173658, 173659, 173660, 173663, 173702, 173715, 173738, 173741, 173746, 173760, 173764, 173765, 173766, 173767, 173768, 173769, 173781, 173784, 173785, 173786, 173787, 173788, 173793, 173795, 173809, 173821, 173822, 173840, 173842, 173845, 173846, 173853, 173854, 173861, 173862, 173864, 173866, 173867, 173868, 173869, 173870, 173872, 173876, 173878, 173879, 173880, 173881, 173882, 173883, 173888, 173893, 173897, 173898, 173899, 173927, 173934, 173949, 173956, 173981, 173982, 173984, 173985, 174011, 174016, 174017, 174021, 174026, 174048, 174049, 174051, 174125, 174126, 174127, 174147, 174149, 174150, 174151, 174152, 174153, 174195, 174202, 174232, 174233, 174254, 174255, 174258, 174261, 174275, 174276, 174279, 174280, 174281, 174286, 174288, 174302, 174308, 174309, 174334, 174338, 174339, 174341, 174345, 174347, 174356, 174359, 174360, 174361, 174362, 174363, 174365, 174367, 174368, 174370, 174372, 174374, 174375, 174376, 174377, 174380, 174386, 174387, 174397, 174405, 174409, 174410, 174417, 174433, 174441, 174442, 174449, 174474, 174475, 174477, 174478, 174480, 174491, 174492, 174493, 174494, 174545, 174546, 174547, 174622, 174623, 174624, 174644, 174645, 174646, 174688, 174729, 174730, 174731, 174751, 174754, 174772, 174773, 174774, 174779, 174781, 174795, 174831, 174832, 174840, 174852, 174853, 174854, 174855, 174856, 174858, 174865, 174867, 174868, 174869, 174879, 174935, 174942, 174967, 174968, 174970, 174971, 175042, 175119, 175147, 175152, 175197, 175226, 175254, 175275, 175278, 175279, 175286, 175293, 175299, 175304, 175306, 175334, 175338, 175344, 175355, 175357, 175358, 175359, 175365, 175370, 175371, 175376, 175382, 175399, 175413, 175415, 175429, 175431, 175490, 175492, 175504, 175507, 175536, 175541, 175613, 175618, 175640, 175641, 175644, 175645, 175688, 175690, 175720, 175723, 175747, 175748, 175751, 175752, 175768, 175769, 175770, 175771, 175772, 175774, 175776, 175779, 175782, 175786, 175792, 175795, 175797, 175800, 175803, 175827, 175828, 175830, 175831, 175837, 175848, 175849, 175850, 175851, 175852, 175856, 175858, 175859, 175863, 175864, 175866, 175869, 175872, 175875, 175892, 175896, 175906, 175908, 175918, 175922, 175923, 175924, 175959, 175960, 175983, 175985, 175987, 175992, 175997, 176000, 176030, 176033, 176107, 176110, 176134, 176135, 176136, 176137, 176147, 176151, 176175, 176181, 176214, 176228, 176241, 176242, 176244, 176245, 176256, 176257, 176261, 176262, 176263, 176264, 176265, 176267, 176269, 176275, 176279, 176282, 176285, 176288, 176294, 176298, 176308, 176321, 176322, 176323, 176325, 176341, 176342, 176343, 176344, 176345, 176349, 176350, 176352, 176354, 176356, 176357, 176359, 176361, 176362, 176365, 176386, 176389, 176396, 176399, 176401, 176411, 176416, 176417, 176452, 176453, 176468, 176469, 176476, 176480, 176485, 176493, 176524, 176525, 176601, 176602, 176628, 176629, 176640, 176641, 176664, 176668, 176670, 176708, 176710, 176711, 176735, 176755, 176756, 176760, 176768, 176772, 176775, 176777, 176788, 176790, 176815, 176818, 176829, 176835, 176837, 176842, 176843, 176845, 176847, 176849, 176850, 176852, 176853, 176854, 176879, 176882, 176889, 176894, 176910, 176945, 176946, 176961, 176962, 176965, 176966, 177021, 177026, 177098, 177103, 177119, 177124, 177125, 177128, 177138, 177165, 177169, 177170, 177205, 177209, 177226, 177229, 177232, 177235, 177245, 177247, 177250, 177251, 177252, 177254, 177258, 177259, 177265, 177271, 177272, 177276, 177277, 177285, 177295, 177298, 177300, 177301, 177306, 177310, 177312, 177313, 177315, 177316, 177320, 177321, 177327, 177329, 177330, 177331, 177332, 177333, 177337, 177339, 177342, 177343, 177348, 177349, 177354, 177356, 177371, 177378, 177385, 177387, 177400, 177401, 177403, 177407, 177408, 177462, 177463, 177464, 177468, 177472, 177476, 177478, 177479, 177515, 177518, 177592, 177595, 177613, 177616, 177618, 177619, 177620, 177621, 177622, 177629, 177652, 177658, 177660, 177661, 177699, 177701, 177714, 177720, 177722, 177723, 177724, 177725, 177726, 177727, 177728, 177733, 177740, 177741, 177742, 177743, 177744, 177745, 177746, 177747, 177748, 177752, 177754, 177758, 177759, 177764, 177765, 177767, 177768, 177779, 177782, 177783, 177791, 177792, 177800, 177802, 177805, 177806, 177807, 177808, 177813, 177814, 177818, 177820, 177821, 177822, 177823, 177824, 177825, 177826, 177828, 177831, 177832, 177835, 177836, 177838, 177841, 177842, 177844, 177846, 177856, 177861, 177868, 177871, 177878, 177880, 177890, 177892, 177893, 177895, 177896, 177900, 177901, 177931, 177932, 177942, 177943, 177955, 177958, 177959, 177961, 177964, 177965, 177966, 177972, 178009, 178010, 178021, 178086, 178087, 178098, 178107, 178108, 178112, 178113, 178115, 178119, 178145, 178147, 178148, 178193, 178196, 178214, 178219, 178220, 178234, 178235, 178238, 178239, 178240, 178245, 178247, 178251, 178252, 178254, 178255, 178273, 178274, 178284, 178285, 178294, 178297, 178300, 178306, 178307, 178311, 178314, 178316, 178318, 178319, 178321, 178322, 178324, 178326, 178327, 178328, 178329, 178331, 178333, 178338, 178349, 178354, 178358, 178361, 178368, 178373, 178379, 178385, 178386, 178389, 178393, 178394, 178424, 178425, 178435, 178436, 178440, 178441, 178442, 178443, 178506, 178508, 178583, 178585, 178604, 178607, 178609, 178610, 178611, 178614, 178618, 178644, 178645, 178690, 178694, 178697, 178708, 178711, 178714, 178715, 178716, 178717, 178718, 178725, 178726, 178729, 178730, 178731, 178733, 178738, 178744, 178750, 178751, 178752, 178770, 178772, 178777, 178783, 178791, 178792, 178794, 178796, 178797, 178798, 178799, 178800, 178802, 178806, 178808, 178809, 178810, 178811, 178812, 178813, 178818, 178821, 178822, 178827, 178828, 178829, 178857, 178864, 178866, 178879, 178882, 178886, 178887, 178911, 178912, 178913, 178941, 178946, 178947, 178951, 178956, 178958, 179000, 179002, 179003, 179077, 179079, 179080, 179098, 179099, 179101, 179102, 179103, 179104, 179111, 179131, 179132, 179184, 179185, 179205, 179206, 179209, 179210, 179211, 179218, 179220, 179221, 179224, 179225, 179226, 179231, 179233, 179237, 179238, 179239, 179264, 179270, 179271, 179286, 179289, 179290, 179291, 179292, 179293, 179295, 179297, 179298, 179300, 179302, 179304, 179305, 179306, 179307, 179310, 179314, 179315, 179317, 179327, 179335, 179339, 179340, 179347, 179359, 179363, 179371, 179372, 179375, 179379, 179380, 179404, 179405, 179406, 179410, 179411, 179421, 179422, 179423, 179424, 179497, 179498, 179499, 179574, 179575, 179576, 179595, 179596, 179597, 179604, 179618, 179681, 179684, 179702, 179703, 179704, 179709, 179711, 179717, 179719, 179724, 179725, 179730, 179761, 179762, 179763, 179770, 179782, 179783, 179784, 179785, 179786, 179788, 179795, 179797, 179798, 179799, 179807, 179808, 179809, 179852, 179865, 179868, 179872, 179873, 179897, 179898, 179899, 179900, 179901, 179994, 179998, 180077, 180082, 180098, 180100, 180106, 180109, 180116, 180122, 180127, 180184, 180205, 180208, 180209, 180216, 180220, 180221, 180223, 180229, 180234, 180264, 180268, 180274, 180282, 180285, 180287, 180288, 180289, 180295, 180300, 180301, 180306, 180312, 180329, 180343, 180345, 180359, 180361, 180362, 180420, 180422, 180427, 180434, 180437, 180488, 180490, 180571, 180574, 180591, 180592, 180593, 180594, 180595, 180599, 180601, 180605, 180609, 180615, 180618, 180678, 180681, 180682, 180698, 180699, 180700, 180701, 180702, 180704, 180706, 180712, 180713, 180714, 180716, 180722, 180725, 180758, 180760, 180775, 180778, 180779, 180780, 180781, 180782, 180786, 180789, 180793, 180794, 180796, 180799, 180802, 180826, 180836, 180838, 180848, 180853, 180854, 180855, 180889, 180890, 180891, 180913, 180917, 180920, 180922, 180930, 180982, 180985, 180994, 181065, 181066, 181077, 181085, 181087, 181088, 181098, 181102, 181105, 181172, 181192, 181193, 181197, 181205, 181206, 181207, 181209, 181212, 181252, 181255, 181268, 181272, 181274, 181279, 181280, 181282, 181284, 181286, 181287, 181289, 181291, 181316, 181319, 181326, 181331, 181347, 181348, 181382, 181383, 181384, 181398, 181399, 181479, 181482, 181562, 181565, 181577, 181579, 181582, 181583, 181584, 181585, 181586, 181589, 181595, 181601, 181602, 181666, 181669, 181672, 181684, 181687, 181688, 181689, 181691, 181696, 181699, 181700, 181702, 181708, 181709, 181735, 181749, 181750, 181752, 181757, 181758, 181761, 181764, 181766, 181767, 181768, 181769, 181770, 181776, 181779, 181780, 181785, 181786, 181815, 181822, 181824, 181837, 181840, 181841, 181844, 181845, 181846, 181899, 181905, 181906, 181909, 181916, 181973, 181974, 181976, 182056, 182057, 182059, 182071, 182073, 182074, 182075, 182076, 182077, 182082, 182084, 182088, 182089, 182163, 182164, 182178, 182179, 182182, 182183, 182184, 182189, 182191, 182192, 182193, 182195, 182196, 182228, 182229, 182244, 182250, 182251, 182254, 182255, 182258, 182260, 182262, 182263, 182265, 182268, 182272, 182273, 182275, 182293, 182298, 182305, 182317, 182329, 182330, 182333, 182334, 182337, 182338, 182339, 182368, 182369, 182370, 182379, 182380, 182470, 182471, 182472, 182553, 182554, 182555, 182562, 182568, 182569, 182570, 182575, 182581, 182660, 182661, 182662, 182669, 182675, 182677, 182682, 182685, 182686, 182688, 182721, 182740, 182741, 182742, 182743, 182744, 182746, 182747, 182753, 182755, 182756, 182757, 182765, 182766, 182810, 182823, 182826, 182827, 182830, 182831, 182832, 182855, 182856, 182857, 183194, 183274, 183292, 183293, 183317, 183334, 183391, 183687, 183688, 183691, 183767, 183768, 183770, 183779, 183785, 183786, 183806, 183810, 183827, 183829, 183879, 183884, 184180, 184181, 184182, 184184, 184186, 184196, 184260, 184261, 184262, 184263, 184264, 184272, 184274, 184275, 184278, 184279, 184299, 184303, 184320, 184322, 184355, 184372, 184377, 184566, 184569, 184659, 184674, 184675, 184676, 184677, 184678, 184679, 184689, 184717, 184741, 184753, 184754, 184755, 184756, 184757, 184765, 184767, 184768, 184771, 184772, 184792, 184796, 184813, 184815, 184848, 184853, 184865, 184870, 185059, 185060, 185061, 185062, 185063, 185152, 185168, 185169, 185171, 185172, 185182, 185210, 185234, 185247, 185248, 185249, 185250, 185258, 185260, 185261, 185265, 185285, 185308, 185341, 185346, 185358, 185553, 185554, 185556, 185662, 185664, 185703, 185727, 185741, 185742, 185743, 185753, 185754, 185834, 185839, 186050, 186152, 186159, 186169, 186174, 186230, 186232, 186238, 186239, 186250, 186251, 186252, 186272, 186275, 186284, 186292, 186348, 186349, 186352, 186543, 186544, 186548, 186645, 186646, 186649, 186652, 186653, 186656, 186657, 186662, 186667, 186720, 186723, 186725, 186726, 186728, 186731, 186732, 186733, 186735, 186737, 186741, 186743, 186744, 186745, 186759, 186764, 186765, 186768, 186777, 186785, 186787, 186815, 186837, 186840, 186841, 186842, 186845, 187037, 187038, 187041, 187042, 187116, 187139, 187140, 187142, 187144, 187145, 187146, 187147, 187148, 187149, 187150, 187154, 187155, 187160, 187201, 187213, 187216, 187218, 187219, 187220, 187221, 187222, 187224, 187225, 187226, 187228, 187230, 187232, 187233, 187234, 187236, 187237, 187238, 187252, 187253, 187257, 187258, 187261, 187270, 187278, 187280, 187308, 187313, 187316, 187330, 187333, 187334, 187335, 187338, 187524, 187527, 187531, 187532, 187533, 187535, 187546, 187609, 187617, 187633, 187634, 187636, 187637, 187639, 187640, 187641, 187642, 187643, 187647, 187675, 187694, 187699, 187706, 187712, 187713, 187714, 187715, 187717, 187718, 187719, 187721, 187723, 187725, 187726, 187727, 187730, 187731, 187745, 187746, 187750, 187751, 187763, 187773, 187801, 187806, 187809, 187811, 187823, 187826, 187827, 188018, 188019, 188021, 188025, 188026, 188039, 188127, 188129, 188133, 188134, 188168, 188187, 188192, 188206, 188207, 188208, 188210, 188212, 188214, 188218, 188219, 188220, 188238, 188239, 188294, 188299, 188302, 188304, 188515, 188522, 188526, 188617, 188624, 188630, 188632, 188634, 188639, 188641, 188643, 188673, 188689, 188695, 188697, 188703, 188704, 188708, 188715, 188716, 188717, 188728, 188737, 188740, 188749, 188757, 188761, 188770, 188813, 188814, 188816, 188817, 189009, 189013, 189015, 189016, 189018, 189019, 189073, 189111, 189114, 189117, 189118, 189121, 189122, 189123, 189124, 189125, 189127, 189132, 189134, 189136, 189158, 189166, 189182, 189185, 189188, 189190, 189191, 189193, 189196, 189197, 189198, 189199, 189200, 189201, 189202, 189206, 189208, 189209, 189210, 189221, 189223, 189224, 189229, 189230, 189233, 189242, 189250, 189252, 189254, 189263, 189280, 189283, 189302, 189305, 189306, 189307, 189309, 189310, 189503, 189507, 189509, 189510, 189511, 189513, 189566, 189581, 189605, 189609, 189611, 189612, 189613, 189614, 189615, 189616, 189617, 189618, 189619, 189629, 189651, 189659, 189666, 189675, 189678, 189682, 189684, 189685, 189686, 189687, 189689, 189690, 189691, 189692, 189693, 189694, 189695, 189697, 189698, 189699, 189702, 189703, 189714, 189716, 189717, 189718, 189722, 189723, 189735, 189745, 189747, 189756, 189773, 189776, 189778, 189781, 189795, 189798, 189799, 189802, 189997, 189998, 190003, 190006, 190011, 190099, 190101, 190105, 190106, 190110, 190140, 190144, 190152, 190159, 190164, 190175, 190178, 190179, 190180, 190182, 190184, 190185, 190186, 190187, 190190, 190191, 190192, 190207, 190209, 190210, 190211, 190240, 190249, 190266, 190269, 190271, 190274, 190276, 190494, 190498, 190500, 190503, 190508, 190596, 190602, 190604, 190606, 190607, 190608, 190611, 190613, 190615, 190616, 190645, 190655, 190661, 190667, 190669, 190675, 190676, 190680, 190687, 190688, 190689, 190700, 190709, 190712, 190721, 190729, 190733, 190742, 190746, 190785, 190786, 190788, 190789, 190988, 190990, 190993, 190994, 190995, 190996, 191001, 191045, 191090, 191093, 191094, 191095, 191096, 191097, 191100, 191101, 191107, 191108, 191109, 191130, 191138, 191148, 191154, 191157, 191163, 191165, 191168, 191169, 191170, 191171, 191172, 191173, 191174, 191178, 191181, 191182, 191193, 191195, 191196, 191201, 191202, 191214, 191224, 191226, 191235, 191239, 191252, 191255, 191274, 191277, 191278, 191281, 191482, 191485, 191487, 191488, 191584, 191585, 191589, 191593, 191594, 191600, 191602, 191623, 191631, 191638, 191641, 191654, 191657, 191658, 191659, 191661, 191663, 191664, 191665, 191666, 191669, 191670, 191671, 191686, 191688, 191689, 191690, 191719, 191728, 191732, 191745, 191748, 191750, 191753, 191979, 191982, 191984, 191985, 191986, 191987, 192081, 192083, 192086, 192087, 192094, 192095, 192124, 192134, 192140, 192154, 192155, 192159, 192167, 192168, 192179, 192188, 192200, 192212, 192221, 192225, 192264, 192267, 192473, 192474, 192477, 192478, 192479, 192575, 192579, 192580, 192586, 192588, 192609, 192617, 192627, 192644, 192647, 192649, 192650, 192651, 192652, 192657, 192672, 192674, 192675, 192705, 192714, 192718, 192731, 192734, 192970, 192971, 192972, 193072, 193073, 193081, 193110, 193120, 193140, 193145, 193165, 193198, 193207, 193211, 193467, 193547, 193575, 193579, 193623, 193627, 193640, 193645, 193646, 193648, 193650, 193652, 193654, 193657, 193670, 193687, 193730, 193744, 193745, 193960, 193961, 193964, 194040, 194041, 194044, 194068, 194069, 194071, 194072, 194107, 194113, 194116, 194120, 194121, 194123, 194132, 194133, 194138, 194139, 194141, 194142, 194143, 194145, 194147, 194148, 194150, 194159, 194163, 194164, 194180, 194182, 194185, 194199, 194223, 194232, 194233, 194237, 194238, 194454, 194455, 194457, 194469, 194497, 194534, 194535, 194537, 194539, 194549, 194561, 194562, 194563, 194564, 194565, 194566, 194595, 194600, 194606, 194609, 194613, 194614, 194615, 194616, 194617, 194625, 194626, 194627, 194628, 194631, 194632, 194634, 194635, 194636, 194637, 194638, 194640, 194641, 194643, 194652, 194656, 194657, 194673, 194675, 194678, 194692, 194708, 194709, 194716, 194725, 194726, 194730, 194731, 194812, 194814, 194919, 194922, 194948, 194949, 194951, 194952, 194962, 194972, 194990, 195012, 195018, 195028, 195029, 195031, 195032, 195042, 195055, 195056, 195057, 195059, 195070, 195088, 195093, 195094, 195099, 195107, 195108, 195109, 195110, 195118, 195120, 195121, 195125, 195127, 195128, 195129, 195130, 195131, 195133, 195134, 195136, 195145, 195150, 195168, 195171, 195185, 195201, 195202, 195206, 195207, 195209, 195218, 195219, 195306, 195308, 195309, 195413, 195414, 195416, 195442, 195444, 195445, 195511, 195522, 195524, 195549, 195552, 195563, 195581, 195586, 195587, 195601, 195602, 195603, 195613, 195614, 195621, 195622, 195623, 195627, 195664, 195678, 195694, 195695, 195699, 195700, 195803, 195910, 195932, 195939, 195943, 196011, 196012, 196019, 196029, 196034, 196035, 196040, 196044, 196046, 196047, 196049, 196054, 196083, 196088, 196090, 196092, 196098, 196099, 196105, 196110, 196111, 196112, 196113, 196115, 196117, 196118, 196119, 196122, 196124, 196132, 196135, 196144, 196146, 196152, 196164, 196195, 196197, 196206, 196208, 196209, 196210, 196212, 196297, 196302, 196404, 196408, 196426, 196429, 196432, 196433, 196435, 196436, 196448, 196502, 196504, 196506, 196509, 196512, 196513, 196516, 196517, 196522, 196527, 196528, 196533, 196534, 196536, 196537, 196539, 196540, 196541, 196542, 196547, 196552, 196572, 196576, 196578, 196580, 196581, 196583, 196585, 196586, 196588, 196590, 196591, 196592, 196593, 196595, 196597, 196598, 196601, 196603, 196604, 196605, 196606, 196607, 196608, 196610, 196611, 196612, 196613, 196615, 196617, 196619, 196624, 196625, 196626, 196628, 196629, 196637, 196639, 196645, 196647, 196650, 196657, 196664, 196675, 196676, 196688, 196690, 196692, 196697, 196698, 196699, 196700, 196701, 196702, 196703, 196705, 196791, 196794, 196898, 196902, 196920, 196926, 196927, 196928, 196930, 196934, 196941, 196943, 196962, 196976, 196989, 196995, 197000, 197004, 197006, 197007, 197008, 197009, 197010, 197014, 197027, 197028, 197029, 197031, 197032, 197033, 197034, 197035, 197040, 197045, 197060, 197061, 197065, 197069, 197071, 197072, 197073, 197079, 197080, 197081, 197082, 197083, 197084, 197085, 197086, 197088, 197090, 197092, 197093, 197094, 197097, 197098, 197099, 197100, 197101, 197102, 197103, 197104, 197105, 197106, 197108, 197110, 197112, 197113, 197117, 197118, 197119, 197122, 197130, 197132, 197140, 197143, 197150, 197157, 197168, 197169, 197173, 197174, 197176, 197177, 197181, 197185, 197190, 197191, 197192, 197193, 197194, 197285, 197286, 197303, 197392, 197393, 197406, 197414, 197416, 197417, 197420, 197423, 197482, 197483, 197494, 197496, 197500, 197501, 197521, 197524, 197527, 197533, 197535, 197538, 197553, 197554, 197558, 197559, 197565, 197573, 197574, 197575, 197576, 197577, 197579, 197581, 197585, 197586, 197587, 197593, 197594, 197595, 197597, 197599, 197603, 197605, 197606, 197612, 197625, 197636, 197643, 197650, 197661, 197662, 197666, 197667, 197669, 197670, 197671, 197672, 197782, 197787, 197889, 197893, 197911, 197915, 197917, 197921, 197924, 197931, 197979, 197983, 197991, 197997, 197999, 198001, 198006, 198007, 198008, 198010, 198012, 198016, 198018, 198019, 198021, 198023, 198024, 198025, 198026, 198029, 198040, 198055, 198056, 198060, 198062, 198064, 198070, 198071, 198075, 198077, 198082, 198083, 198084, 198085, 198087, 198089, 198090, 198091, 198094, 198095, 198096, 198104, 198107, 198116, 198118, 198124, 198128, 198136, 198137, 198138, 198167, 198169, 198173, 198178, 198180, 198181, 198182, 198183, 198184, 198276, 198278, 198383, 198385, 198405, 198407, 198410, 198411, 198412, 198414, 198417, 198420, 198421, 198440, 198466, 198472, 198474, 198485, 198488, 198489, 198490, 198491, 198492, 198503, 198506, 198508, 198511, 198512, 198513, 198514, 198516, 198517, 198518, 198519, 198522, 198524, 198525, 198533, 198544, 198548, 198549, 198550, 198552, 198554, 198558, 198560, 198562, 198563, 198564, 198565, 198566, 198567, 198568, 198569, 198573, 198576, 198577, 198578, 198579, 198580, 198582, 198583, 198584, 198585, 198587, 198588, 198589, 198590, 198591, 198596, 198597, 198598, 198601, 198609, 198611, 198619, 198621, 198622, 198629, 198630, 198631, 198636, 198647, 198648, 198650, 198651, 198660, 198664, 198666, 198669, 198670, 198671, 198672, 198673, 198676, 198770, 198772, 198778, 198877, 198880, 198899, 198902, 198904, 198905, 198959, 198961, 198979, 198980, 198984, 199000, 199003, 199006, 199009, 199010, 199011, 199012, 199015, 199017, 199018, 199026, 199032, 199033, 199037, 199044, 199047, 199049, 199052, 199053, 199054, 199055, 199056, 199058, 199059, 199060, 199061, 199064, 199065, 199066, 199072, 199073, 199074, 199076, 199078, 199081, 199082, 199083, 199084, 199085, 199091, 199104, 199114, 199115, 199122, 199123, 199124, 199129, 199140, 199141, 199143, 199144, 199145, 199146, 199148, 199149, 199267, 199374, 199377, 199382, 199396, 199400, 199401, 199402, 199403, 199404, 199405, 199429, 199445, 199458, 199476, 199478, 199481, 199482, 199489, 199490, 199497, 199498, 199500, 199502, 199503, 199504, 199505, 199508, 199519, 199529, 199534, 199535, 199549, 199550, 199554, 199562, 199563, 199564, 199566, 199568, 199569, 199570, 199573, 199574, 199575, 199583, 199595, 199597, 199607, 199615, 199616, 199617, 199620, 199621, 199646, 199652, 199657, 199659, 199662, 199761, 199762, 199763, 199868, 199869, 199890, 199891, 199894, 199897, 199922, 199938, 199945, 199970, 199974, 199975, 199981, 199983, 199992, 199995, 199996, 199997, 199998, 200001, 200003, 200004, 200012, 200022, 200023, 200033, 200039, 200041, 200042, 200044, 200045, 200046, 200047, 200052, 200058, 200059, 200062, 200064, 200067, 200068, 200069, 200070, 200077, 200090, 200100, 200101, 200108, 200109, 200110, 200113, 200114, 200115, 200126, 200127, 200129, 200130, 200258, 200259, 200260, 200365, 200366, 200367, 200387, 200390, 200415, 200431, 200467, 200468, 200476, 200488, 200489, 200490, 200491, 200494, 200505, 200515, 200535, 200540, 200552, 200555, 200560, 200561, 200583, 200593, 200601, 200602, 200603, 200606, 200607, 200755, 200862, 200890, 200940, 200942, 200970, 200974, 200980, 200991, 200993, 200994, 200995, 201001, 201012, 201018, 201022, 201035, 201040, 201041, 201043, 201045, 201047, 201049, 201052, 201058, 201059, 201060, 201065, 201082, 201090, 201125, 201126, 201128, 201139, 201140, 201249, 201254, 201356, 201359, 201383, 201384, 201387, 201388, 201431, 201433, 201436, 201439, 201463, 201464, 201466, 201467, 201473, 201484, 201485, 201486, 201487, 201488, 201492, 201494, 201495, 201502, 201505, 201508, 201511, 201515, 201516, 201518, 201527, 201528, 201532, 201533, 201534, 201536, 201537, 201538, 201540, 201542, 201543, 201545, 201551, 201552, 201553, 201554, 201558, 201559, 201575, 201577, 201580, 201583, 201594, 201595, 201618, 201619, 201621, 201623, 201627, 201628, 201632, 201633, 201743, 201746, 201850, 201864, 201877, 201878, 201880, 201881, 201892, 201893, 201918, 201924, 201930, 201934, 201944, 201957, 201958, 201959, 201961, 201977, 201978, 201979, 201980, 201981, 201985, 201986, 201988, 201990, 201995, 201997, 201998, 202001, 202009, 202010, 202011, 202012, 202020, 202022, 202023, 202025, 202027, 202029, 202030, 202031, 202032, 202033, 202035, 202036, 202038, 202044, 202045, 202046, 202047, 202052, 202070, 202073, 202076, 202087, 202088, 202103, 202104, 202105, 202111, 202112, 202116, 202120, 202121, 202237, 202238, 202300, 202306, 202344, 202346, 202347, 202371, 202411, 202413, 202424, 202426, 202451, 202454, 202465, 202471, 202473, 202478, 202479, 202481, 202483, 202488, 202489, 202490, 202503, 202504, 202505, 202515, 202516, 202518, 202523, 202524, 202525, 202529, 202537, 202538, 202539, 202566, 202569, 202580, 202581, 202596, 202597, 202598, 202601, 202602, 202734, 202739, 202806, 202841, 202845, 202862, 202868, 202871, 202881, 202908, 202912, 202913, 202921, 202931, 202936, 202937, 202942, 202946, 202948, 202949, 202951, 202952, 202956, 202957, 202963, 202965, 202966, 202967, 202968, 202969, 202973, 202975, 202984, 202985, 202990, 202992, 202994, 203000, 203001, 203007, 203012, 203013, 203014, 203015, 203017, 203019, 203020, 203021, 203024, 203026, 203030, 203031, 203032, 203034, 203036, 203037, 203043, 203046, 203048, 203054, 203062, 203066, 203097, 203098, 203099, 203100, 203104, 203108, 203110, 203111, 203112, 203114, 203228, 203231, 203297, 203335, 203337, 203350, 203356, 203359, 203360, 203361, 203362, 203363, 203364, 203369, 203395, 203401, 203403, 203404, 203415, 203418, 203419, 203428, 203436, 203438, 203441, 203442, 203443, 203444, 203449, 203450, 203454, 203456, 203457, 203458, 203459, 203460, 203461, 203462, 203464, 203467, 203468, 203474, 203477, 203478, 203480, 203482, 203488, 203490, 203492, 203493, 203494, 203495, 203497, 203499, 203503, 203504, 203506, 203507, 203508, 203509, 203510, 203512, 203513, 203514, 203515, 203517, 203519, 203521, 203523, 203524, 203525, 203526, 203527, 203528, 203529, 203531, 203536, 203539, 203541, 203549, 203552, 203555, 203559, 203566, 203567, 203577, 203578, 203579, 203590, 203591, 203594, 203595, 203597, 203599, 203600, 203601, 203602, 203603, 203722, 203723, 203734, 203784, 203829, 203832, 203850, 203855, 203856, 203888, 203890, 203891, 203909, 203910, 203921, 203930, 203933, 203936, 203942, 203943, 203947, 203950, 203952, 203954, 203955, 203957, 203958, 203960, 203962, 203963, 203967, 203969, 203974, 203982, 203983, 203984, 203985, 203986, 203988, 203990, 203994, 203995, 203996, 203997, 204002, 204003, 204004, 204006, 204008, 204012, 204014, 204015, 204016, 204017, 204018, 204021, 204022, 204029, 204034, 204045, 204048, 204052, 204059, 204060, 204070, 204071, 204072, 204075, 204076, 204077, 204078, 204079, 204219, 204221, 204281, 204326, 204330, 204333, 204347, 204350, 204351, 204352, 204353, 204354, 204361, 204387, 204388, 204406, 204408, 204419, 204427, 204428, 204430, 204432, 204433, 204434, 204435, 204436, 204438, 204442, 204444, 204445, 204446, 204447, 204448, 204449, 204454, 204463, 204464, 204465, 204479, 204480, 204484, 204492, 204493, 204494, 204496, 204498, 204499, 204500, 204503, 204504, 204505, 204509, 204510, 204511, 204513, 204515, 204522, 204525, 204527, 204537, 204541, 204545, 204546, 204547, 204548, 204576, 204577, 204582, 204583, 204587, 204589, 204592, 204713, 204715, 204716, 204768, 204820, 204821, 204841, 204842, 204845, 204846, 204847, 204854, 204874, 204875, 204900, 204907, 204922, 204925, 204926, 204927, 204928, 204929, 204931, 204933, 204934, 204936, 204938, 204940, 204941, 204942, 204943, 204946, 204953, 204963, 204969, 204971, 204972, 204974, 204975, 204976, 204977, 204982, 204983, 204988, 204989, 204992, 204994, 204997, 204998, 204999, 205000, 205002, 205003, 205004, 205007, 205008, 205015, 205020, 205030, 205031, 205034, 205038, 205039, 205040, 205041, 205045, 205046, 205056, 205057, 205058, 205059, 205060, 205210, 205211, 205212, 205254, 205317, 205320, 205338, 205339, 205340, 205345, 205347, 205361, 205397, 205398, 205406, 205418, 205419, 205420, 205421, 205422, 205424, 205431, 205433, 205434, 205435, 205445, 205465, 205470, 205482, 205485, 205490, 205491, 205495, 205496, 205497, 205501, 205508, 205513, 205523, 205527, 205531, 205532, 205533, 205534, 205536, 205537, 205713, 205718, 205763, 205820, 205841, 205844, 205845, 205852, 205859, 205865, 205870, 205900, 205904, 205910, 205921, 205923, 205924, 205925, 205931, 205936, 205937, 205942, 205948, 205952, 205965, 205970, 205971, 205973, 205975, 205977, 205979, 205981, 205982, 205988, 205989, 205990, 205995, 205997, 206012, 206020, 206055, 206056, 206058, 206069, 206070, 206073, 206207, 206210, 206254, 206314, 206317, 206318, 206334, 206335, 206336, 206337, 206338, 206340, 206342, 206348, 206352, 206358, 206361, 206394, 206396, 206414, 206415, 206416, 206417, 206418, 206422, 206425, 206429, 206430, 206432, 206435, 206438, 206446, 206448, 206457, 206462, 206464, 206466, 206467, 206468, 206470, 206472, 206473, 206474, 206475, 206481, 206482, 206483, 206484, 206489, 206490, 206507, 206510, 206513, 206524, 206525, 206526, 206548, 206549, 206553, 206557, 206558, 206566, 206701, 206702, 206713, 206741, 206808, 206828, 206829, 206833, 206841, 206845, 206848, 206888, 206891, 206908, 206910, 206915, 206916, 206918, 206920, 206922, 206923, 206925, 206927, 206940, 206941, 206942, 206952, 206953, 206955, 206960, 206961, 206962, 206966, 206967, 206974, 206975, 206976, 206983, 207003, 207006, 207017, 207018, 207019, 207033, 207034, 207035, 207198, 207201, 207238, 207302, 207305, 207308, 207320, 207323, 207324, 207325, 207327, 207332, 207338, 207344, 207345, 207371, 207385, 207386, 207388, 207393, 207394, 207400, 207402, 207403, 207404, 207405, 207406, 207412, 207415, 207416, 207421, 207422, 207437, 207438, 207450, 207451, 207452, 207454, 207456, 207457, 207458, 207460, 207461, 207463, 207467, 207468, 207469, 207471, 207473, 207476, 207480, 207481, 207483, 207485, 207499, 207503, 207534, 207535, 207541, 207545, 207547, 207552, 207692, 207693, 207695, 207725, 207799, 207800, 207814, 207815, 207818, 207819, 207820, 207825, 207827, 207831, 207832, 207864, 207865, 207880, 207886, 207887, 207891, 207894, 207896, 207898, 207899, 207901, 207904, 207908, 207909, 207911, 207927, 207929, 207930, 207932, 207934, 207940, 207941, 207946, 207947, 207950, 207952, 207953, 207956, 207958, 207960, 207961, 207962, 207965, 207966, 207969, 207973, 207974, 207978, 207989, 207992, 207996, 208003, 208004, 208005, 208014, 208015, 208016, 208189, 208190, 208191, 208198, 208296, 208297, 208298, 208305, 208311, 208313, 208318, 208324, 208357, 208376, 208377, 208378, 208379, 208380, 208382, 208389, 208391, 208392, 208393, 208401, 208402, 208423, 208428, 208440, 208443, 208446, 208448, 208449, 208453, 208454, 208455, 208459, 208462, 208466, 208467, 208471, 208481, 208485, 208489, 208490, 208491, 208492, 208493, 208830, 208910, 208928, 208929, 208953, 208965, 208966, 208970, 208973, 208993, 209012, 209027, 209323, 209324, 209327, 209403, 209404, 209406, 209415, 209421, 209422, 209442, 209446, 209456, 209458, 209459, 209463, 209464, 209465, 209466, 209469, 209486, 209488, 209505, 209515, 209520, 209817, 209818, 209820, 209822, 209832, 209896, 209897, 209898, 209899, 209900, 209908, 209910, 209911, 209914, 209915, 209935, 209939, 209949, 209951, 209952, 209956, 209957, 209958, 209959, 209962, 209979, 209981, 209991, 209998, 210008, 210013, 210202, 210205, 210295, 210311, 210312, 210314, 210315, 210325, 210353, 210377, 210390, 210391, 210392, 210393, 210401, 210403, 210404, 210408, 210428, 210442, 210444, 210445, 210450, 210451, 210452, 210455, 210472, 210474, 210484, 210489, 210491, 210501, 210696, 210697, 210699, 210805, 210807, 210846, 210870, 210884, 210885, 210886, 210896, 210897, 210935, 210937, 210943, 210948, 210967, 210977, 210982, 211193, 211295, 211302, 211312, 211317, 211373, 211375, 211381, 211382, 211393, 211394, 211395, 211415, 211418, 211427, 211430, 211431, 211432, 211433, 211434, 211435, 211438, 211458, 211462, 211477, 211491, 211492, 211495, 211687, 211691, 211789, 211792, 211795, 211796, 211799, 211800, 211805, 211810, 211863, 211866, 211868, 211869, 211871, 211874, 211875, 211876, 211878, 211880, 211884, 211886, 211887, 211888, 211902, 211907, 211908, 211911, 211920, 211921, 211923, 211924, 211925, 211926, 211927, 211928, 211929, 211930, 211931, 211934, 211951, 211953, 211955, 211958, 211970, 211980, 211983, 211984, 211985, 211988, 212181, 212185, 212259, 212283, 212287, 212289, 212290, 212291, 212292, 212293, 212297, 212344, 212356, 212362, 212363, 212364, 212365, 212367, 212368, 212369, 212371, 212373, 212375, 212376, 212377, 212380, 212381, 212395, 212396, 212400, 212401, 212413, 212414, 212416, 212417, 212418, 212419, 212420, 212422, 212423, 212424, 212427, 212444, 212446, 212448, 212451, 212456, 212459, 212463, 212473, 212476, 212477, 212675, 212676, 212689, 212777, 212779, 212783, 212784, 212818, 212837, 212842, 212856, 212857, 212858, 212860, 212862, 212864, 212868, 212869, 212870, 212888, 212889, 212907, 212909, 212911, 212912, 212913, 212915, 212920, 212939, 212941, 212944, 212949, 212952, 212954, 213172, 213176, 213274, 213280, 213282, 213284, 213289, 213291, 213293, 213323, 213339, 213345, 213347, 213353, 213354, 213358, 213365, 213366, 213367, 213378, 213387, 213390, 213399, 213402, 213403, 213404, 213405, 213406, 213407, 213410, 213411, 213420, 213430, 213434, 213449, 213463, 213464, 213466, 213467, 213666, 213668, 213723, 213768, 213771, 213772, 213773, 213774, 213775, 213786, 213808, 213816, 213832, 213835, 213841, 213843, 213846, 213847, 213848, 213849, 213850, 213851, 213852, 213856, 213859, 213860, 213871, 213873, 213874, 213879, 213880, 213892, 213893, 213895, 213896, 213897, 213898, 213899, 213901, 213902, 213903, 213904, 213906, 213913, 213923, 213925, 213927, 213930, 213933, 213942, 213952, 213955, 213956, 213959, 214160, 214163, 214262, 214263, 214267, 214301, 214309, 214316, 214332, 214335, 214336, 214337, 214339, 214341, 214342, 214343, 214344, 214347, 214348, 214349, 214364, 214366, 214367, 214368, 214386, 214388, 214390, 214391, 214392, 214394, 214397, 214399, 214406, 214418, 214420, 214423, 214426, 214428, 214431, 214657, 214660, 214665, 214759, 214761, 214764, 214765, 214772, 214773, 214802, 214812, 214818, 214832, 214833, 214837, 214845, 214846, 214857, 214866, 214878, 214881, 214882, 214883, 214884, 214885, 214889, 214890, 214899, 214903, 214909, 214913, 214928, 214942, 214945, 215151, 215152, 215253, 215257, 215258, 215264, 215266, 215287, 215295, 215305, 215322, 215325, 215327, 215328, 215329, 215330, 215335, 215350, 215352, 215353, 215372, 215374, 215376, 215377, 215378, 215380, 215383, 215385, 215392, 215396, 215404, 215406, 215409, 215412, 215648, 215649, 215650, 215750, 215751, 215759, 215788, 215798, 215818, 215823, 215843, 215867, 215869, 215870, 215871, 215876, 215885, 215889, 215899, 216145, 216225, 216253, 216257, 216301, 216305, 216318, 216323, 216324, 216326, 216328, 216330, 216332, 216335, 216348, 216360, 216361, 216365, 216368, 216372, 216374, 216375, 216376, 216388, 216407, 216408, 216422, 216423, 216639, 216642, 216719, 216722, 216746, 216747, 216749, 216750, 216785, 216791, 216794, 216798, 216799, 216801, 216810, 216811, 216816, 216817, 216819, 216820, 216821, 216823, 216825, 216826, 216828, 216837, 216841, 216842, 216851, 216853, 216854, 216858, 216859, 216860, 216861, 216863, 216864, 216865, 216867, 216868, 216869, 216877, 216881, 216883, 216900, 216901, 216910, 216911, 216915, 216916, 217133, 217147, 217175, 217213, 217217, 217227, 217240, 217241, 217242, 217244, 217273, 217278, 217284, 217292, 217293, 217294, 217295, 217303, 217305, 217306, 217310, 217312, 217313, 217314, 217315, 217316, 217318, 217319, 217321, 217330, 217335, 217344, 217346, 217347, 217352, 217353, 217354, 217356, 217357, 217358, 217360, 217361, 217362, 217370, 217374, 217376, 217386, 217387, 217393, 217394, 217403, 217404, 217627, 217629, 217630, 217696, 217707, 217709, 217734, 217737, 217748, 217766, 217771, 217772, 217786, 217787, 217788, 217798, 217799, 217806, 217807, 217808, 217812, 217837, 217839, 217845, 217849, 217850, 217851, 217853, 217854, 217855, 217863, 217869, 217879, 217880, 217884, 217885, 218124, 218128, 218196, 218204, 218214, 218219, 218220, 218225, 218229, 218231, 218232, 218234, 218239, 218268, 218273, 218275, 218277, 218283, 218284, 218290, 218295, 218296, 218297, 218298, 218300, 218302, 218303, 218304, 218307, 218309, 218317, 218320, 218329, 218331, 218332, 218333, 218334, 218335, 218336, 218337, 218340, 218344, 218346, 218347, 218348, 218349, 218360, 218364, 218379, 218380, 218382, 218391, 218393, 218394, 218395, 218397, 218618, 218620, 218633, 218687, 218698, 218701, 218702, 218719, 218721, 218724, 218725, 218726, 218727, 218732, 218737, 218757, 218761, 218763, 218765, 218771, 218773, 218775, 218776, 218777, 218778, 218780, 218782, 218786, 218789, 218790, 218791, 218792, 218793, 218795, 218796, 218797, 218798, 218800, 218802, 218804, 218809, 218810, 218811, 218814, 218822, 218823, 218824, 218825, 218826, 218827, 218828, 218829, 218831, 218832, 218833, 218835, 218836, 218837, 218839, 218840, 218841, 218842, 218849, 218853, 218855, 218857, 218860, 218861, 218872, 218873, 218877, 218882, 218883, 218884, 218885, 218886, 219112, 219115, 219174, 219192, 219193, 219213, 219216, 219219, 219225, 219230, 219245, 219246, 219250, 219257, 219265, 219266, 219267, 219268, 219269, 219271, 219273, 219277, 219278, 219279, 219285, 219286, 219287, 219289, 219291, 219295, 219297, 219298, 219304, 219316, 219317, 219318, 219320, 219321, 219322, 219324, 219328, 219329, 219330, 219332, 219333, 219334, 219335, 219342, 219348, 219350, 219353, 219354, 219358, 219359, 219361, 219362, 219609, 219613, 219616, 219671, 219689, 219691, 219702, 219710, 219711, 219713, 219715, 219716, 219717, 219718, 219721, 219732, 219747, 219748, 219762, 219763, 219767, 219775, 219776, 219777, 219779, 219781, 219782, 219783, 219786, 219787, 219788, 219796, 219808, 219810, 219811, 219812, 219813, 219814, 219815, 219819, 219820, 219823, 219825, 219826, 219827, 219828, 219829, 219830, 219839, 219843, 219858, 219859, 219865, 219870, 219872, 219875, 220103, 220104, 220158, 220183, 220205, 220208, 220209, 220210, 220211, 220214, 220216, 220217, 220225, 220236, 220246, 220252, 220254, 220255, 220257, 220258, 220259, 220260, 220265, 220271, 220272, 220275, 220277, 220280, 220281, 220282, 220283, 220290, 220302, 220303, 220304, 220306, 220307, 220308, 220310, 220313, 220314, 220315, 220316, 220318, 220319, 220320, 220321, 220322, 220323, 220328, 220334, 220336, 220339, 220340, 220342, 220343, 220600, 220603, 220628, 220644, 220680, 220681, 220689, 220701, 220702, 220703, 220704, 220707, 220718, 220728, 220748, 220753, 220765, 220768, 220773, 220774, 220796, 220797, 220799, 220800, 220801, 220806, 220809, 220811, 220812, 220813, 220814, 220815, 220816, 220819, 220820, 220829, 221103, 221153, 221183, 221187, 221193, 221204, 221206, 221207, 221208, 221214, 221225, 221231, 221235, 221248, 221253, 221254, 221256, 221258, 221260, 221262, 221265, 221271, 221272, 221273, 221278, 221290, 221291, 221295, 221298, 221302, 221303, 221304, 221305, 221306, 221318, 221337, 221338, 221339, 221341, 221352, 221353, 221597, 221600, 221601, 221644, 221677, 221679, 221697, 221698, 221699, 221700, 221701, 221705, 221708, 221715, 221718, 221721, 221729, 221731, 221740, 221745, 221747, 221749, 221750, 221751, 221753, 221755, 221756, 221758, 221764, 221765, 221766, 221767, 221772, 221781, 221783, 221784, 221789, 221790, 221791, 221793, 221794, 221795, 221796, 221797, 221798, 221799, 221807, 221808, 221811, 221813, 221830, 221831, 221832, 221836, 221840, 221841, 222091, 222131, 222171, 222174, 222191, 222193, 222198, 222199, 222201, 222203, 222208, 222210, 222223, 222224, 222225, 222235, 222236, 222238, 222243, 222244, 222245, 222249, 222257, 222258, 222259, 222274, 222276, 222282, 222286, 222287, 222288, 222289, 222290, 222291, 222292, 222300, 222301, 222306, 222316, 222317, 222318, 222588, 222591, 222628, 222668, 222669, 222671, 222676, 222677, 222683, 222685, 222686, 222687, 222688, 222689, 222695, 222704, 222705, 222720, 222721, 222733, 222734, 222735, 222737, 222739, 222740, 222741, 222744, 222746, 222750, 222751, 222752, 222754, 222756, 222763, 222766, 222768, 222769, 222770, 222771, 222772, 222773, 222777, 222781, 222782, 222783, 222784, 222785, 222786, 222797, 222801, 222816, 222817, 222818, 222824, 222828, 222830, 223082, 223083, 223115, 223148, 223163, 223169, 223170, 223174, 223177, 223179, 223181, 223182, 223184, 223187, 223194, 223210, 223212, 223213, 223215, 223217, 223223, 223224, 223229, 223230, 223233, 223235, 223239, 223241, 223243, 223244, 223245, 223248, 223249, 223256, 223260, 223261, 223262, 223264, 223265, 223266, 223268, 223272, 223273, 223274, 223275, 223276, 223277, 223278, 223279, 223286, 223287, 223292, 223294, 223297, 223298, 223299, 223579, 223580, 223581, 223588, 223659, 223660, 223661, 223662, 223663, 223665, 223672, 223674, 223675, 223676, 223706, 223711, 223723, 223726, 223731, 223732, 223736, 223737, 223738, 223742, 223749, 223754, 223755, 223757, 223758, 223759, 223764, 223767, 223768, 223769, 223770, 223771, 223772, 223773, 223774, 223775, 223787, 224113, 224193, 224211, 224212, 224236, 224248, 224249, 224253, 224256, 224276, 224277, 224279, 224281, 224282, 224295, 224310, 224607, 224610, 224686, 224687, 224689, 224698, 224704, 224705, 224725, 224729, 224739, 224741, 224742, 224746, 224747, 224748, 224749, 224752, 224769, 224770, 224771, 224772, 224774, 224775, 224788, 224798, 224803, 225101, 225105, 225115, 225180, 225181, 225182, 225183, 225191, 225193, 225194, 225198, 225218, 225232, 225234, 225235, 225240, 225241, 225242, 225245, 225262, 225263, 225264, 225265, 225267, 225268, 225274, 225281, 225291, 225595, 225597, 225636, 225660, 225674, 225675, 225676, 225686, 225687, 225725, 225727, 225733, 225738, 225756, 225757, 225758, 225760, 225761, 225767, 225772, 226092, 226102, 226107, 226163, 226165, 226171, 226172, 226183, 226184, 226185, 226205, 226208, 226217, 226220, 226221, 226222, 226223, 226224, 226225, 226228, 226248, 226249, 226251, 226252, 226253, 226254, 226267, 226281, 226282, 226285, 226586, 226589, 226590, 226653, 226659, 226661, 226664, 226665, 226666, 226668, 226670, 226674, 226677, 226678, 226692, 226697, 226698, 226710, 226711, 226713, 226714, 226715, 226716, 226717, 226719, 226720, 226721, 226724, 226741, 226742, 226743, 226744, 226745, 226746, 226747, 226748, 226760, 226770, 226773, 226774, 227080, 227081, 227134, 227153, 227154, 227155, 227157, 227159, 227161, 227165, 227166, 227167, 227185, 227186, 227204, 227206, 227208, 227209, 227210, 227212, 227217, 227235, 227236, 227237, 227238, 227239, 227240, 227241, 227246, 227249, 227577, 227579, 227590, 227620, 227636, 227650, 227651, 227655, 227663, 227664, 227675, 227684, 227696, 227699, 227700, 227701, 227702, 227703, 227707, 227708, 227717, 227727, 227728, 227730, 227731, 227732, 227733, 227746, 227760, 227763, 228071, 228105, 228113, 228140, 228143, 228145, 228146, 228147, 228148, 228153, 228168, 228170, 228171, 228190, 228192, 228194, 228195, 228196, 228198, 228201, 228203, 228210, 228221, 228222, 228223, 228224, 228225, 228226, 228227, 228230, 228568, 228569, 228577, 228606, 228616, 228636, 228641, 228661, 228685, 228687, 228688, 228689, 228694, 228703, 228707, 228714, 228716, 228717, 228718, 228719, 229071, 229075, 229119, 229123, 229136, 229141, 229142, 229144, 229146, 229148, 229150, 229153, 229166, 229178, 229179, 229183, 229186, 229190, 229192, 229193, 229194, 229206, 229207, 229209, 229211, 229212, 229225, 229226, 229240, 229241, 229565, 229567, 229603, 229609, 229617, 229619, 229628, 229635, 229637, 229638, 229639, 229641, 229643, 229644, 229646, 229655, 229660, 229669, 229671, 229672, 229677, 229678, 229679, 229681, 229682, 229683, 229685, 229686, 229687, 229695, 229699, 229700, 229701, 229702, 229704, 229705, 229718, 229719, 229728, 229729, 230059, 230062, 230091, 230096, 230111, 230112, 230113, 230123, 230124, 230131, 230132, 230133, 230137, 230162, 230164, 230170, 230174, 230175, 230176, 230178, 230179, 230180, 230188, 230193, 230194, 230195, 230197, 230198, 230204, 230205, 230556, 230557, 230559, 230564, 230593, 230608, 230609, 230621, 230622, 230623, 230625, 230627, 230628, 230629, 230632, 230634, 230642, 230654, 230656, 230657, 230658, 230659, 230660, 230661, 230665, 230669, 230671, 230672, 230673, 230674, 230685, 230686, 230688, 230689, 230690, 230691, 230704, 230705, 230716, 230718, 231051, 231057, 231062, 231082, 231098, 231100, 231101, 231103, 231105, 231111, 231117, 231118, 231121, 231123, 231127, 231129, 231136, 231148, 231149, 231150, 231152, 231153, 231154, 231156, 231160, 231161, 231162, 231164, 231165, 231166, 231167, 231174, 231179, 231180, 231181, 231182, 231183, 231184, 231185, 231186, 231547, 231548, 231549, 231550, 231553, 231564, 231594, 231599, 231611, 231614, 231619, 231620, 231642, 231643, 231645, 231646, 231647, 231652, 231655, 231657, 231658, 231659, 231660, 231661, 231662, 231672, 231674, 231675, 231676, 231677, 232081, 232099, 232100, 232124, 232136, 232137, 232141, 232144, 232164, 232165, 232167, 232169, 232170, 232183, 232198, 232575, 232577, 232586, 232593, 232613, 232627, 232629, 232630, 232635, 232636, 232637, 232640, 232657, 232658, 232659, 232660, 232662, 232663, 232676, 232686, 233069, 233070, 233071, 233081, 233082, 233120, 233122, 233128, 233133, 233151, 233152, 233153, 233155, 233156, 233162, 233566, 233567, 233579, 233580, 233600, 233612, 233615, 233616, 233617, 233618, 233619, 233623, 233643, 233644, 233646, 233647, 233648, 233649, 233662, 233676, 234056, 234059, 234061, 234063, 234069, 234087, 234106, 234108, 234110, 234111, 234112, 234114, 234119, 234137, 234138, 234139, 234140, 234141, 234142, 234143, 234522, 234552, 234557, 234577, 234601, 234603, 234604, 234605, 234610, 234619, 234630, 234632, 234633, 234634, 234635, 235144, 235638, 236132, 236626, 237120, 237614, 238108, 238591, 239082, 239573, 240063, 240554, 241037, 241526, 242017, 242485, 242975};
    static const int C1_ind[] = {457, 966, 1474, 1970, 2461, 2948, 3444, 3935, 4431, 4927, 5415, 5897, 6391, 6901, 7358, 7861, 8359, 8850, 9341, 9828, 10324, 10815, 11296, 11790, 12284, 12783, 13262, 13759, 14249, 14743, 15233, 15703, 16197, 16707, 17201, 17671, 18165, 18659};

    MatrixXd C0 = MatrixXd::Zero(493, 493);
    MatrixXd C1 = MatrixXd::Zero(493, 38);
    for (int i = 0; i < 17877; i++)
    {
        C0(C0_ind[i]) = coeffs(coeffs0_ind[i]);
    }
    for (int i = 0; i < 38; i++)
    {
        C1(C1_ind[i]) = coeffs(coeffs1_ind[i]);
    }

    MatrixXd C12 = C0.partialPivLu().solve(C1);

    // Setup action matrix
    Matrix<double, 55, 38> RR;
    RR << -C12.bottomRows(17), Matrix<double, 38, 38>::Identity(38, 38);

    static const int AM_ind[] = {50, 28, 21, 0, 1, 24, 2, 3, 27, 4, 5, 29, 30, 6, 39, 35, 7, 8, 9, 38, 10, 11, 40, 41, 12, 47, 45, 13, 46, 14, 48, 49, 15, 51, 52, 53, 54, 16};
    Matrix<double, 38, 38> AM;
    for (int i = 0; i < 38; i++)
    {
        AM.row(i) = RR.row(AM_ind[i]);
    }

    Matrix<std::complex<double>, 5, 38> sols;
    sols.setZero();

    // Solve eigenvalue problem
    EigenSolver<Matrix<double, 38, 38>> es(AM);
    ArrayXcd D = es.eigenvalues();
    ArrayXXcd V = es.eigenvectors();

    V = (V / V.row(0).array().replicate(38, 1)).eval();

    sols.row(0) = V.row(1).array();
    sols.row(1) = V.row(14).array();
    sols.row(2) = V.row(25).array();
    sols.row(3) = D.transpose().array();

    return sols;
}
// Action =  x4
// Quotient ring basis (V) = x5^-1,x1*x5^-1,x1^2*x5^-1,x1^2*x3*x5^-1,x1^2*x4*x5^-1,x1*x2*x5^-1,x1*x2*x3*x5^-1,x1*x2*x4*x5^-1,x1*x3*x5^-1,x1*x3^2*x5^-1,x1*x3*x4*x5^-1,x1*x4*x5^-1,x1*x4^2*x5^-1,x1*x4^3*x5^-1,x2*x5^-1,x2^2*x5^-1,x2^3*x5^-1,x2^2*x3*x5^-1,x2^2*x4*x5^-1,x2*x3*x5^-1,x2*x3^2*x5^-1,x2*x3*x4*x5^-1,x2*x4*x5^-1,x2*x4^2*x5^-1,x2*x4^3*x5^-1,x3*x5^-1,x3^2*x5^-1,x3^3*x5^-1,x3^2*x4*x5^-1,x3^2*x4^2*x5^-1,x3*x4*x5^-1,x3*x4^2*x5^-1,x3*x4^3*x5^-1,x4*x5^-1,x4^2*x5^-1,x4^3*x5^-1,x4^4*x5^-1,x4^5*x5^-1,
// Available monomials (RR*V) = x1^2*x3*x4*x5^-1,x1^2*x4^2*x5^-1,x1*x2*x3*x4*x5^-1,x1*x2*x4^2*x5^-1,x1*x3^2*x4*x5^-1,x1*x3*x4^2*x5^-1,x1*x4^4*x5^-1,x2^3*x4*x5^-1,x2^2*x3*x4*x5^-1,x2^2*x4^2*x5^-1,x2*x3^2*x4*x5^-1,x2*x3*x4^2*x5^-1,x2*x4^4*x5^-1,x3^3*x4*x5^-1,x3^2*x4^3*x5^-1,x3*x4^4*x5^-1,x4^6*x5^-1,x5^-1,x1*x5^-1,x1^2*x5^-1,x1^2*x3*x5^-1,x1^2*x4*x5^-1,x1*x2*x5^-1,x1*x2*x3*x5^-1,x1*x2*x4*x5^-1,x1*x3*x5^-1,x1*x3^2*x5^-1,x1*x3*x4*x5^-1,x1*x4*x5^-1,x1*x4^2*x5^-1,x1*x4^3*x5^-1,x2*x5^-1,x2^2*x5^-1,x2^3*x5^-1,x2^2*x3*x5^-1,x2^2*x4*x5^-1,x2*x3*x5^-1,x2*x3^2*x5^-1,x2*x3*x4*x5^-1,x2*x4*x5^-1,x2*x4^2*x5^-1,x2*x4^3*x5^-1,x3*x5^-1,x3^2*x5^-1,x3^3*x5^-1,x3^2*x4*x5^-1,x3^2*x4^2*x5^-1,x3*x4*x5^-1,x3*x4^2*x5^-1,x3*x4^3*x5^-1,x4*x5^-1,x4^2*x5^-1,x4^3*x5^-1,x4^4*x5^-1,x4^5*x5^-1,

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
    if (nrhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_531:nrhs", "One input required.");
    }
    if (nlhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_531:nlhs", "One output required.");
    }
    if (!mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]))
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_531:notDouble", "Input data must be type double.");
    }
    if (mxGetNumberOfElements(prhs[0]) % 58 != 0)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_531:incorrectSize", "Input size must be multiple of 58.");
    }
    int n_instances = mxGetNumberOfElements(prhs[0]) / 58;
    double *input = mxGetPr(prhs[0]);
    plhs[0] = mxCreateDoubleMatrix(5, 38 * n_instances, mxCOMPLEX);
    double *zr = mxGetPr(plhs[0]);
    double *zi = mxGetPi(plhs[0]);
    for (int k = 0; k < n_instances; k++)
    {
        const VectorXd data = Map<const VectorXd>(input + k * 58, 58);
        MatrixXcd sols = solver_toa_upgrade_531(data);
        Index offset = k * sols.size();
        for (Index i = 0; i < sols.size(); i++)
        {
            zr[i + offset] = sols(i).real();
            zi[i + offset] = sols(i).imag();
        }
    }
}
