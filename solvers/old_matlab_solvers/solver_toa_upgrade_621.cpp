#include <Eigen/Dense>
#include "mex.h"

using namespace Eigen;

MatrixXcd solver_toa_upgrade_621(const VectorXd &data)
{
    // Compute coefficients
    const double *d = data.data();
    VectorXd coeffs(75);
    coeffs[0] = 2 * d[10] * d[11] * d[15] * d[36] - 2 * std::pow(d[14], 2) * d[15] * d[36] - 2 * d[11] * d[12] * d[16] * d[36] + 2 * d[13] * d[14] * d[16] * d[36] - 2 * d[10] * d[13] * d[17] * d[36] + 2 * d[12] * d[14] * d[17] * d[36] - 2 * d[11] * d[12] * d[15] * d[37] + 2 * d[13] * d[14] * d[15] * d[37] + 2 * d[9] * d[11] * d[16] * d[37] - 2 * std::pow(d[13], 2) * d[16] * d[37] + 2 * d[12] * d[13] * d[17] * d[37] - 2 * d[9] * d[14] * d[17] * d[37] - 2 * d[10] * d[13] * d[15] * d[38] + 2 * d[12] * d[14] * d[15] * d[38] + 2 * d[12] * d[13] * d[16] * d[38] - 2 * d[9] * d[14] * d[16] * d[38] + 2 * d[9] * d[10] * d[17] * d[38] - 2 * std::pow(d[12], 2) * d[17] * d[38] - d[9] * d[10] * d[11] * d[42] + d[11] * std::pow(d[12], 2) * d[42] + d[10] * std::pow(d[13], 2) * d[42] - 2 * d[12] * d[13] * d[14] * d[42] + d[9] * std::pow(d[14], 2) * d[42];
    coeffs[1] = 2 * d[11] * d[15] * d[19] * d[36] - 2 * d[13] * d[17] * d[19] * d[36] + 2 * d[10] * d[15] * d[20] * d[36] - 2 * d[12] * d[16] * d[20] * d[36] - 2 * d[11] * d[16] * d[21] * d[36] + 2 * d[14] * d[17] * d[21] * d[36] + 2 * d[14] * d[16] * d[22] * d[36] - 2 * d[10] * d[17] * d[22] * d[36] - 4 * d[14] * d[15] * d[23] * d[36] + 2 * d[13] * d[16] * d[23] * d[36] + 2 * d[12] * d[17] * d[23] * d[36] + 2 * d[10] * d[11] * d[24] * d[36] - 2 * std::pow(d[14], 2) * d[24] * d[36] - 2 * d[11] * d[12] * d[25] * d[36] + 2 * d[13] * d[14] * d[25] * d[36] - 2 * d[10] * d[13] * d[26] * d[36] + 2 * d[12] * d[14] * d[26] * d[36] + 2 * d[11] * d[16] * d[18] * d[37] - 2 * d[14] * d[17] * d[18] * d[37] - 2 * d[12] * d[15] * d[20] * d[37] + 2 * d[9] * d[16] * d[20] * d[37] - 2 * d[11] * d[15] * d[21] * d[37] + 2 * d[13] * d[17] * d[21] * d[37] + 2 * d[14] * d[15] * d[22] * d[37] - 4 * d[13] * d[16] * d[22] * d[37] + 2 * d[12] * d[17] * d[22] * d[37] + 2 * d[13] * d[15] * d[23] * d[37] - 2 * d[9] * d[17] * d[23] * d[37] - 2 * d[11] * d[12] * d[24] * d[37] + 2 * d[13] * d[14] * d[24] * d[37] + 2 * d[9] * d[11] * d[25] * d[37] - 2 * std::pow(d[13], 2) * d[25] * d[37] + 2 * d[12] * d[13] * d[26] * d[37] - 2 * d[9] * d[14] * d[26] * d[37] - 2 * d[14] * d[16] * d[18] * d[38] + 2 * d[10] * d[17] * d[18] * d[38] - 2 * d[13] * d[15] * d[19] * d[38] + 2 * d[9] * d[17] * d[19] * d[38] + 2 * d[14] * d[15] * d[21] * d[38] + 2 * d[13] * d[16] * d[21] * d[38] - 4 * d[12] * d[17] * d[21] * d[38] - 2 * d[10] * d[15] * d[22] * d[38] + 2 * d[12] * d[16] * d[22] * d[38] + 2 * d[12] * d[15] * d[23] * d[38] - 2 * d[9] * d[16] * d[23] * d[38] - 2 * d[10] * d[13] * d[24] * d[38] + 2 * d[12] * d[14] * d[24] * d[38] + 2 * d[12] * d[13] * d[25] * d[38] - 2 * d[9] * d[14] * d[25] * d[38] + 2 * d[9] * d[10] * d[26] * d[38] - 2 * std::pow(d[12], 2) * d[26] * d[38] - d[10] * d[11] * d[18] * d[42] + std::pow(d[14], 2) * d[18] * d[42] - d[9] * d[11] * d[19] * d[42] + std::pow(d[13], 2) * d[19] * d[42] - d[9] * d[10] * d[20] * d[42] + std::pow(d[12], 2) * d[20] * d[42] + 2 * d[11] * d[12] * d[21] * d[42] - 2 * d[13] * d[14] * d[21] * d[42] + 2 * d[10] * d[13] * d[22] * d[42] - 2 * d[12] * d[14] * d[22] * d[42] - 2 * d[12] * d[13] * d[23] * d[42] + 2 * d[9] * d[14] * d[23] * d[42];
    coeffs[2] = 2 * d[15] * d[19] * d[20] * d[36] - 2 * d[16] * d[20] * d[21] * d[36] - 2 * d[17] * d[19] * d[22] * d[36] + 2 * d[17] * d[21] * d[23] * d[36] + 2 * d[16] * d[22] * d[23] * d[36] - 2 * d[15] * std::pow(d[23], 2) * d[36] + 2 * d[11] * d[19] * d[24] * d[36] + 2 * d[10] * d[20] * d[24] * d[36] - 4 * d[14] * d[23] * d[24] * d[36] - 2 * d[12] * d[20] * d[25] * d[36] - 2 * d[11] * d[21] * d[25] * d[36] + 2 * d[14] * d[22] * d[25] * d[36] + 2 * d[13] * d[23] * d[25] * d[36] - 2 * d[13] * d[19] * d[26] * d[36] + 2 * d[14] * d[21] * d[26] * d[36] - 2 * d[10] * d[22] * d[26] * d[36] + 2 * d[12] * d[23] * d[26] * d[36] + 2 * d[16] * d[18] * d[20] * d[37] - 2 * d[15] * d[20] * d[21] * d[37] + 2 * d[17] * d[21] * d[22] * d[37] - 2 * d[16] * std::pow(d[22], 2) * d[37] - 2 * d[17] * d[18] * d[23] * d[37] + 2 * d[15] * d[22] * d[23] * d[37] - 2 * d[12] * d[20] * d[24] * d[37] - 2 * d[11] * d[21] * d[24] * d[37] + 2 * d[14] * d[22] * d[24] * d[37] + 2 * d[13] * d[23] * d[24] * d[37] + 2 * d[11] * d[18] * d[25] * d[37] + 2 * d[9] * d[20] * d[25] * d[37] - 4 * d[13] * d[22] * d[25] * d[37] - 2 * d[14] * d[18] * d[26] * d[37] + 2 * d[13] * d[21] * d[26] * d[37] + 2 * d[12] * d[22] * d[26] * d[37] - 2 * d[9] * d[23] * d[26] * d[37] + 2 * d[17] * d[18] * d[19] * d[38] - 2 * d[17] * std::pow(d[21], 2) * d[38] - 2 * d[15] * d[19] * d[22] * d[38] + 2 * d[16] * d[21] * d[22] * d[38] - 2 * d[16] * d[18] * d[23] * d[38] + 2 * d[15] * d[21] * d[23] * d[38] - 2 * d[13] * d[19] * d[24] * d[38] + 2 * d[14] * d[21] * d[24] * d[38] - 2 * d[10] * d[22] * d[24] * d[38] + 2 * d[12] * d[23] * d[24] * d[38] - 2 * d[14] * d[18] * d[25] * d[38] + 2 * d[13] * d[21] * d[25] * d[38] + 2 * d[12] * d[22] * d[25] * d[38] - 2 * d[9] * d[23] * d[25] * d[38] + 2 * d[10] * d[18] * d[26] * d[38] + 2 * d[9] * d[19] * d[26] * d[38] - 4 * d[12] * d[21] * d[26] * d[38] - d[11] * d[18] * d[19] * d[42] - d[10] * d[18] * d[20] * d[42] - d[9] * d[19] * d[20] * d[42] + 2 * d[12] * d[20] * d[21] * d[42] + d[11] * std::pow(d[21], 2) * d[42] + 2 * d[13] * d[19] * d[22] * d[42] - 2 * d[14] * d[21] * d[22] * d[42] + d[10] * std::pow(d[22], 2) * d[42] + 2 * d[14] * d[18] * d[23] * d[42] - 2 * d[13] * d[21] * d[23] * d[42] - 2 * d[12] * d[22] * d[23] * d[42] + d[9] * std::pow(d[23], 2) * d[42];
    coeffs[3] = 2 * d[19] * d[20] * d[24] * d[36] - 2 * std::pow(d[23], 2) * d[24] * d[36] - 2 * d[20] * d[21] * d[25] * d[36] + 2 * d[22] * d[23] * d[25] * d[36] - 2 * d[19] * d[22] * d[26] * d[36] + 2 * d[21] * d[23] * d[26] * d[36] - 2 * d[20] * d[21] * d[24] * d[37] + 2 * d[22] * d[23] * d[24] * d[37] + 2 * d[18] * d[20] * d[25] * d[37] - 2 * std::pow(d[22], 2) * d[25] * d[37] + 2 * d[21] * d[22] * d[26] * d[37] - 2 * d[18] * d[23] * d[26] * d[37] - 2 * d[19] * d[22] * d[24] * d[38] + 2 * d[21] * d[23] * d[24] * d[38] + 2 * d[21] * d[22] * d[25] * d[38] - 2 * d[18] * d[23] * d[25] * d[38] + 2 * d[18] * d[19] * d[26] * d[38] - 2 * std::pow(d[21], 2) * d[26] * d[38] - d[18] * d[19] * d[20] * d[42] + d[20] * std::pow(d[21], 2) * d[42] + d[19] * std::pow(d[22], 2) * d[42] - 2 * d[21] * d[22] * d[23] * d[42] + d[18] * std::pow(d[23], 2) * d[42];
    coeffs[4] = 2 * d[11] * d[15] * d[28] * d[36] - 2 * d[13] * d[17] * d[28] * d[36] + 2 * d[10] * d[15] * d[29] * d[36] - 2 * d[12] * d[16] * d[29] * d[36] - 2 * d[11] * d[16] * d[30] * d[36] + 2 * d[14] * d[17] * d[30] * d[36] + 2 * d[14] * d[16] * d[31] * d[36] - 2 * d[10] * d[17] * d[31] * d[36] - 4 * d[14] * d[15] * d[32] * d[36] + 2 * d[13] * d[16] * d[32] * d[36] + 2 * d[12] * d[17] * d[32] * d[36] + 2 * d[10] * d[11] * d[33] * d[36] - 2 * std::pow(d[14], 2) * d[33] * d[36] - 2 * d[11] * d[12] * d[34] * d[36] + 2 * d[13] * d[14] * d[34] * d[36] - 2 * d[10] * d[13] * d[35] * d[36] + 2 * d[12] * d[14] * d[35] * d[36] + 2 * d[11] * d[16] * d[27] * d[37] - 2 * d[14] * d[17] * d[27] * d[37] - 2 * d[12] * d[15] * d[29] * d[37] + 2 * d[9] * d[16] * d[29] * d[37] - 2 * d[11] * d[15] * d[30] * d[37] + 2 * d[13] * d[17] * d[30] * d[37] + 2 * d[14] * d[15] * d[31] * d[37] - 4 * d[13] * d[16] * d[31] * d[37] + 2 * d[12] * d[17] * d[31] * d[37] + 2 * d[13] * d[15] * d[32] * d[37] - 2 * d[9] * d[17] * d[32] * d[37] - 2 * d[11] * d[12] * d[33] * d[37] + 2 * d[13] * d[14] * d[33] * d[37] + 2 * d[9] * d[11] * d[34] * d[37] - 2 * std::pow(d[13], 2) * d[34] * d[37] + 2 * d[12] * d[13] * d[35] * d[37] - 2 * d[9] * d[14] * d[35] * d[37] - 2 * d[14] * d[16] * d[27] * d[38] + 2 * d[10] * d[17] * d[27] * d[38] - 2 * d[13] * d[15] * d[28] * d[38] + 2 * d[9] * d[17] * d[28] * d[38] + 2 * d[14] * d[15] * d[30] * d[38] + 2 * d[13] * d[16] * d[30] * d[38] - 4 * d[12] * d[17] * d[30] * d[38] - 2 * d[10] * d[15] * d[31] * d[38] + 2 * d[12] * d[16] * d[31] * d[38] + 2 * d[12] * d[15] * d[32] * d[38] - 2 * d[9] * d[16] * d[32] * d[38] - 2 * d[10] * d[13] * d[33] * d[38] + 2 * d[12] * d[14] * d[33] * d[38] + 2 * d[12] * d[13] * d[34] * d[38] - 2 * d[9] * d[14] * d[34] * d[38] + 2 * d[9] * d[10] * d[35] * d[38] - 2 * std::pow(d[12], 2) * d[35] * d[38] - d[10] * d[11] * d[27] * d[42] + std::pow(d[14], 2) * d[27] * d[42] - d[9] * d[11] * d[28] * d[42] + std::pow(d[13], 2) * d[28] * d[42] - d[9] * d[10] * d[29] * d[42] + std::pow(d[12], 2) * d[29] * d[42] + 2 * d[11] * d[12] * d[30] * d[42] - 2 * d[13] * d[14] * d[30] * d[42] + 2 * d[10] * d[13] * d[31] * d[42] - 2 * d[12] * d[14] * d[31] * d[42] - 2 * d[12] * d[13] * d[32] * d[42] + 2 * d[9] * d[14] * d[32] * d[42];
    coeffs[5] = 2 * d[15] * d[20] * d[28] * d[36] - 2 * d[17] * d[22] * d[28] * d[36] + 2 * d[11] * d[24] * d[28] * d[36] - 2 * d[13] * d[26] * d[28] * d[36] + 2 * d[15] * d[19] * d[29] * d[36] - 2 * d[16] * d[21] * d[29] * d[36] + 2 * d[10] * d[24] * d[29] * d[36] - 2 * d[12] * d[25] * d[29] * d[36] - 2 * d[16] * d[20] * d[30] * d[36] + 2 * d[17] * d[23] * d[30] * d[36] - 2 * d[11] * d[25] * d[30] * d[36] + 2 * d[14] * d[26] * d[30] * d[36] - 2 * d[17] * d[19] * d[31] * d[36] + 2 * d[16] * d[23] * d[31] * d[36] + 2 * d[14] * d[25] * d[31] * d[36] - 2 * d[10] * d[26] * d[31] * d[36] + 2 * d[17] * d[21] * d[32] * d[36] + 2 * d[16] * d[22] * d[32] * d[36] - 4 * d[15] * d[23] * d[32] * d[36] - 4 * d[14] * d[24] * d[32] * d[36] + 2 * d[13] * d[25] * d[32] * d[36] + 2 * d[12] * d[26] * d[32] * d[36] + 2 * d[11] * d[19] * d[33] * d[36] + 2 * d[10] * d[20] * d[33] * d[36] - 4 * d[14] * d[23] * d[33] * d[36] - 2 * d[12] * d[20] * d[34] * d[36] - 2 * d[11] * d[21] * d[34] * d[36] + 2 * d[14] * d[22] * d[34] * d[36] + 2 * d[13] * d[23] * d[34] * d[36] - 2 * d[13] * d[19] * d[35] * d[36] + 2 * d[14] * d[21] * d[35] * d[36] - 2 * d[10] * d[22] * d[35] * d[36] + 2 * d[12] * d[23] * d[35] * d[36] + 2 * d[16] * d[20] * d[27] * d[37] - 2 * d[17] * d[23] * d[27] * d[37] + 2 * d[11] * d[25] * d[27] * d[37] - 2 * d[14] * d[26] * d[27] * d[37] + 2 * d[16] * d[18] * d[29] * d[37] - 2 * d[15] * d[21] * d[29] * d[37] - 2 * d[12] * d[24] * d[29] * d[37] + 2 * d[9] * d[25] * d[29] * d[37] - 2 * d[15] * d[20] * d[30] * d[37] + 2 * d[17] * d[22] * d[30] * d[37] - 2 * d[11] * d[24] * d[30] * d[37] + 2 * d[13] * d[26] * d[30] * d[37] + 2 * d[17] * d[21] * d[31] * d[37] - 4 * d[16] * d[22] * d[31] * d[37] + 2 * d[15] * d[23] * d[31] * d[37] + 2 * d[14] * d[24] * d[31] * d[37] - 4 * d[13] * d[25] * d[31] * d[37] + 2 * d[12] * d[26] * d[31] * d[37] - 2 * d[17] * d[18] * d[32] * d[37] + 2 * d[15] * d[22] * d[32] * d[37] + 2 * d[13] * d[24] * d[32] * d[37] - 2 * d[9] * d[26] * d[32] * d[37] - 2 * d[12] * d[20] * d[33] * d[37] - 2 * d[11] * d[21] * d[33] * d[37] + 2 * d[14] * d[22] * d[33] * d[37] + 2 * d[13] * d[23] * d[33] * d[37] + 2 * d[11] * d[18] * d[34] * d[37] + 2 * d[9] * d[20] * d[34] * d[37] - 4 * d[13] * d[22] * d[34] * d[37] - 2 * d[14] * d[18] * d[35] * d[37] + 2 * d[13] * d[21] * d[35] * d[37] + 2 * d[12] * d[22] * d[35] * d[37] - 2 * d[9] * d[23] * d[35] * d[37] + 2 * d[17] * d[19] * d[27] * d[38] - 2 * d[16] * d[23] * d[27] * d[38] - 2 * d[14] * d[25] * d[27] * d[38] + 2 * d[10] * d[26] * d[27] * d[38] + 2 * d[17] * d[18] * d[28] * d[38] - 2 * d[15] * d[22] * d[28] * d[38] - 2 * d[13] * d[24] * d[28] * d[38] + 2 * d[9] * d[26] * d[28] * d[38] - 4 * d[17] * d[21] * d[30] * d[38] + 2 * d[16] * d[22] * d[30] * d[38] + 2 * d[15] * d[23] * d[30] * d[38] + 2 * d[14] * d[24] * d[30] * d[38] + 2 * d[13] * d[25] * d[30] * d[38] - 4 * d[12] * d[26] * d[30] * d[38] - 2 * d[15] * d[19] * d[31] * d[38] + 2 * d[16] * d[21] * d[31] * d[38] - 2 * d[10] * d[24] * d[31] * d[38] + 2 * d[12] * d[25] * d[31] * d[38] - 2 * d[16] * d[18] * d[32] * d[38] + 2 * d[15] * d[21] * d[32] * d[38] + 2 * d[12] * d[24] * d[32] * d[38] - 2 * d[9] * d[25] * d[32] * d[38] - 2 * d[13] * d[19] * d[33] * d[38] + 2 * d[14] * d[21] * d[33] * d[38] - 2 * d[10] * d[22] * d[33] * d[38] + 2 * d[12] * d[23] * d[33] * d[38] - 2 * d[14] * d[18] * d[34] * d[38] + 2 * d[13] * d[21] * d[34] * d[38] + 2 * d[12] * d[22] * d[34] * d[38] - 2 * d[9] * d[23] * d[34] * d[38] + 2 * d[10] * d[18] * d[35] * d[38] + 2 * d[9] * d[19] * d[35] * d[38] - 4 * d[12] * d[21] * d[35] * d[38] - d[11] * d[19] * d[27] * d[42] - d[10] * d[20] * d[27] * d[42] + 2 * d[14] * d[23] * d[27] * d[42] - d[11] * d[18] * d[28] * d[42] - d[9] * d[20] * d[28] * d[42] + 2 * d[13] * d[22] * d[28] * d[42] - d[10] * d[18] * d[29] * d[42] - d[9] * d[19] * d[29] * d[42] + 2 * d[12] * d[21] * d[29] * d[42] + 2 * d[12] * d[20] * d[30] * d[42] + 2 * d[11] * d[21] * d[30] * d[42] - 2 * d[14] * d[22] * d[30] * d[42] - 2 * d[13] * d[23] * d[30] * d[42] + 2 * d[13] * d[19] * d[31] * d[42] - 2 * d[14] * d[21] * d[31] * d[42] + 2 * d[10] * d[22] * d[31] * d[42] - 2 * d[12] * d[23] * d[31] * d[42] + 2 * d[14] * d[18] * d[32] * d[42] - 2 * d[13] * d[21] * d[32] * d[42] - 2 * d[12] * d[22] * d[32] * d[42] + 2 * d[9] * d[23] * d[32] * d[42];
    coeffs[6] = 2 * d[20] * d[24] * d[28] * d[36] - 2 * d[22] * d[26] * d[28] * d[36] + 2 * d[19] * d[24] * d[29] * d[36] - 2 * d[21] * d[25] * d[29] * d[36] - 2 * d[20] * d[25] * d[30] * d[36] + 2 * d[23] * d[26] * d[30] * d[36] + 2 * d[23] * d[25] * d[31] * d[36] - 2 * d[19] * d[26] * d[31] * d[36] - 4 * d[23] * d[24] * d[32] * d[36] + 2 * d[22] * d[25] * d[32] * d[36] + 2 * d[21] * d[26] * d[32] * d[36] + 2 * d[19] * d[20] * d[33] * d[36] - 2 * std::pow(d[23], 2) * d[33] * d[36] - 2 * d[20] * d[21] * d[34] * d[36] + 2 * d[22] * d[23] * d[34] * d[36] - 2 * d[19] * d[22] * d[35] * d[36] + 2 * d[21] * d[23] * d[35] * d[36] + 2 * d[20] * d[25] * d[27] * d[37] - 2 * d[23] * d[26] * d[27] * d[37] - 2 * d[21] * d[24] * d[29] * d[37] + 2 * d[18] * d[25] * d[29] * d[37] - 2 * d[20] * d[24] * d[30] * d[37] + 2 * d[22] * d[26] * d[30] * d[37] + 2 * d[23] * d[24] * d[31] * d[37] - 4 * d[22] * d[25] * d[31] * d[37] + 2 * d[21] * d[26] * d[31] * d[37] + 2 * d[22] * d[24] * d[32] * d[37] - 2 * d[18] * d[26] * d[32] * d[37] - 2 * d[20] * d[21] * d[33] * d[37] + 2 * d[22] * d[23] * d[33] * d[37] + 2 * d[18] * d[20] * d[34] * d[37] - 2 * std::pow(d[22], 2) * d[34] * d[37] + 2 * d[21] * d[22] * d[35] * d[37] - 2 * d[18] * d[23] * d[35] * d[37] - 2 * d[23] * d[25] * d[27] * d[38] + 2 * d[19] * d[26] * d[27] * d[38] - 2 * d[22] * d[24] * d[28] * d[38] + 2 * d[18] * d[26] * d[28] * d[38] + 2 * d[23] * d[24] * d[30] * d[38] + 2 * d[22] * d[25] * d[30] * d[38] - 4 * d[21] * d[26] * d[30] * d[38] - 2 * d[19] * d[24] * d[31] * d[38] + 2 * d[21] * d[25] * d[31] * d[38] + 2 * d[21] * d[24] * d[32] * d[38] - 2 * d[18] * d[25] * d[32] * d[38] - 2 * d[19] * d[22] * d[33] * d[38] + 2 * d[21] * d[23] * d[33] * d[38] + 2 * d[21] * d[22] * d[34] * d[38] - 2 * d[18] * d[23] * d[34] * d[38] + 2 * d[18] * d[19] * d[35] * d[38] - 2 * std::pow(d[21], 2) * d[35] * d[38] - d[19] * d[20] * d[27] * d[42] + std::pow(d[23], 2) * d[27] * d[42] - d[18] * d[20] * d[28] * d[42] + std::pow(d[22], 2) * d[28] * d[42] - d[18] * d[19] * d[29] * d[42] + std::pow(d[21], 2) * d[29] * d[42] + 2 * d[20] * d[21] * d[30] * d[42] - 2 * d[22] * d[23] * d[30] * d[42] + 2 * d[19] * d[22] * d[31] * d[42] - 2 * d[21] * d[23] * d[31] * d[42] - 2 * d[21] * d[22] * d[32] * d[42] + 2 * d[18] * d[23] * d[32] * d[42];
    coeffs[7] = 2 * d[15] * d[28] * d[29] * d[36] - 2 * d[16] * d[29] * d[30] * d[36] - 2 * d[17] * d[28] * d[31] * d[36] + 2 * d[17] * d[30] * d[32] * d[36] + 2 * d[16] * d[31] * d[32] * d[36] - 2 * d[15] * std::pow(d[32], 2) * d[36] + 2 * d[11] * d[28] * d[33] * d[36] + 2 * d[10] * d[29] * d[33] * d[36] - 4 * d[14] * d[32] * d[33] * d[36] - 2 * d[12] * d[29] * d[34] * d[36] - 2 * d[11] * d[30] * d[34] * d[36] + 2 * d[14] * d[31] * d[34] * d[36] + 2 * d[13] * d[32] * d[34] * d[36] - 2 * d[13] * d[28] * d[35] * d[36] + 2 * d[14] * d[30] * d[35] * d[36] - 2 * d[10] * d[31] * d[35] * d[36] + 2 * d[12] * d[32] * d[35] * d[36] + 2 * d[16] * d[27] * d[29] * d[37] - 2 * d[15] * d[29] * d[30] * d[37] + 2 * d[17] * d[30] * d[31] * d[37] - 2 * d[16] * std::pow(d[31], 2) * d[37] - 2 * d[17] * d[27] * d[32] * d[37] + 2 * d[15] * d[31] * d[32] * d[37] - 2 * d[12] * d[29] * d[33] * d[37] - 2 * d[11] * d[30] * d[33] * d[37] + 2 * d[14] * d[31] * d[33] * d[37] + 2 * d[13] * d[32] * d[33] * d[37] + 2 * d[11] * d[27] * d[34] * d[37] + 2 * d[9] * d[29] * d[34] * d[37] - 4 * d[13] * d[31] * d[34] * d[37] - 2 * d[14] * d[27] * d[35] * d[37] + 2 * d[13] * d[30] * d[35] * d[37] + 2 * d[12] * d[31] * d[35] * d[37] - 2 * d[9] * d[32] * d[35] * d[37] + 2 * d[17] * d[27] * d[28] * d[38] - 2 * d[17] * std::pow(d[30], 2) * d[38] - 2 * d[15] * d[28] * d[31] * d[38] + 2 * d[16] * d[30] * d[31] * d[38] - 2 * d[16] * d[27] * d[32] * d[38] + 2 * d[15] * d[30] * d[32] * d[38] - 2 * d[13] * d[28] * d[33] * d[38] + 2 * d[14] * d[30] * d[33] * d[38] - 2 * d[10] * d[31] * d[33] * d[38] + 2 * d[12] * d[32] * d[33] * d[38] - 2 * d[14] * d[27] * d[34] * d[38] + 2 * d[13] * d[30] * d[34] * d[38] + 2 * d[12] * d[31] * d[34] * d[38] - 2 * d[9] * d[32] * d[34] * d[38] + 2 * d[10] * d[27] * d[35] * d[38] + 2 * d[9] * d[28] * d[35] * d[38] - 4 * d[12] * d[30] * d[35] * d[38] - d[11] * d[27] * d[28] * d[42] - d[10] * d[27] * d[29] * d[42] - d[9] * d[28] * d[29] * d[42] + 2 * d[12] * d[29] * d[30] * d[42] + d[11] * std::pow(d[30], 2) * d[42] + 2 * d[13] * d[28] * d[31] * d[42] - 2 * d[14] * d[30] * d[31] * d[42] + d[10] * std::pow(d[31], 2) * d[42] + 2 * d[14] * d[27] * d[32] * d[42] - 2 * d[13] * d[30] * d[32] * d[42] - 2 * d[12] * d[31] * d[32] * d[42] + d[9] * std::pow(d[32], 2) * d[42];
    coeffs[8] = 2 * d[24] * d[28] * d[29] * d[36] - 2 * d[25] * d[29] * d[30] * d[36] - 2 * d[26] * d[28] * d[31] * d[36] + 2 * d[26] * d[30] * d[32] * d[36] + 2 * d[25] * d[31] * d[32] * d[36] - 2 * d[24] * std::pow(d[32], 2) * d[36] + 2 * d[20] * d[28] * d[33] * d[36] + 2 * d[19] * d[29] * d[33] * d[36] - 4 * d[23] * d[32] * d[33] * d[36] - 2 * d[21] * d[29] * d[34] * d[36] - 2 * d[20] * d[30] * d[34] * d[36] + 2 * d[23] * d[31] * d[34] * d[36] + 2 * d[22] * d[32] * d[34] * d[36] - 2 * d[22] * d[28] * d[35] * d[36] + 2 * d[23] * d[30] * d[35] * d[36] - 2 * d[19] * d[31] * d[35] * d[36] + 2 * d[21] * d[32] * d[35] * d[36] + 2 * d[25] * d[27] * d[29] * d[37] - 2 * d[24] * d[29] * d[30] * d[37] + 2 * d[26] * d[30] * d[31] * d[37] - 2 * d[25] * std::pow(d[31], 2) * d[37] - 2 * d[26] * d[27] * d[32] * d[37] + 2 * d[24] * d[31] * d[32] * d[37] - 2 * d[21] * d[29] * d[33] * d[37] - 2 * d[20] * d[30] * d[33] * d[37] + 2 * d[23] * d[31] * d[33] * d[37] + 2 * d[22] * d[32] * d[33] * d[37] + 2 * d[20] * d[27] * d[34] * d[37] + 2 * d[18] * d[29] * d[34] * d[37] - 4 * d[22] * d[31] * d[34] * d[37] - 2 * d[23] * d[27] * d[35] * d[37] + 2 * d[22] * d[30] * d[35] * d[37] + 2 * d[21] * d[31] * d[35] * d[37] - 2 * d[18] * d[32] * d[35] * d[37] + 2 * d[26] * d[27] * d[28] * d[38] - 2 * d[26] * std::pow(d[30], 2) * d[38] - 2 * d[24] * d[28] * d[31] * d[38] + 2 * d[25] * d[30] * d[31] * d[38] - 2 * d[25] * d[27] * d[32] * d[38] + 2 * d[24] * d[30] * d[32] * d[38] - 2 * d[22] * d[28] * d[33] * d[38] + 2 * d[23] * d[30] * d[33] * d[38] - 2 * d[19] * d[31] * d[33] * d[38] + 2 * d[21] * d[32] * d[33] * d[38] - 2 * d[23] * d[27] * d[34] * d[38] + 2 * d[22] * d[30] * d[34] * d[38] + 2 * d[21] * d[31] * d[34] * d[38] - 2 * d[18] * d[32] * d[34] * d[38] + 2 * d[19] * d[27] * d[35] * d[38] + 2 * d[18] * d[28] * d[35] * d[38] - 4 * d[21] * d[30] * d[35] * d[38] - d[20] * d[27] * d[28] * d[42] - d[19] * d[27] * d[29] * d[42] - d[18] * d[28] * d[29] * d[42] + 2 * d[21] * d[29] * d[30] * d[42] + d[20] * std::pow(d[30], 2) * d[42] + 2 * d[22] * d[28] * d[31] * d[42] - 2 * d[23] * d[30] * d[31] * d[42] + d[19] * std::pow(d[31], 2) * d[42] + 2 * d[23] * d[27] * d[32] * d[42] - 2 * d[22] * d[30] * d[32] * d[42] - 2 * d[21] * d[31] * d[32] * d[42] + d[18] * std::pow(d[32], 2) * d[42];
    coeffs[9] = 2 * d[28] * d[29] * d[33] * d[36] - 2 * std::pow(d[32], 2) * d[33] * d[36] - 2 * d[29] * d[30] * d[34] * d[36] + 2 * d[31] * d[32] * d[34] * d[36] - 2 * d[28] * d[31] * d[35] * d[36] + 2 * d[30] * d[32] * d[35] * d[36] - 2 * d[29] * d[30] * d[33] * d[37] + 2 * d[31] * d[32] * d[33] * d[37] + 2 * d[27] * d[29] * d[34] * d[37] - 2 * std::pow(d[31], 2) * d[34] * d[37] + 2 * d[30] * d[31] * d[35] * d[37] - 2 * d[27] * d[32] * d[35] * d[37] - 2 * d[28] * d[31] * d[33] * d[38] + 2 * d[30] * d[32] * d[33] * d[38] + 2 * d[30] * d[31] * d[34] * d[38] - 2 * d[27] * d[32] * d[34] * d[38] + 2 * d[27] * d[28] * d[35] * d[38] - 2 * std::pow(d[30], 2) * d[35] * d[38] - d[27] * d[28] * d[29] * d[42] + d[29] * std::pow(d[30], 2) * d[42] + d[28] * std::pow(d[31], 2) * d[42] - 2 * d[30] * d[31] * d[32] * d[42] + d[27] * std::pow(d[32], 2) * d[42];
    coeffs[10] = 2 * d[6] * d[10] * d[11] * d[36] - 2 * d[7] * d[11] * d[12] * d[36] - 2 * d[8] * d[10] * d[13] * d[36] + 2 * d[8] * d[12] * d[14] * d[36] + 2 * d[7] * d[13] * d[14] * d[36] - 2 * d[6] * std::pow(d[14], 2) * d[36] + 2 * d[2] * d[10] * d[15] * d[36] + 2 * d[1] * d[11] * d[15] * d[36] - 4 * d[5] * d[14] * d[15] * d[36] - 2 * d[3] * d[11] * d[16] * d[36] - 2 * d[2] * d[12] * d[16] * d[36] + 2 * d[5] * d[13] * d[16] * d[36] + 2 * d[4] * d[14] * d[16] * d[36] - 2 * d[4] * d[10] * d[17] * d[36] + 2 * d[5] * d[12] * d[17] * d[36] - 2 * d[1] * d[13] * d[17] * d[36] + 2 * d[3] * d[14] * d[17] * d[36] + d[10] * d[11] * std::pow(d[36], 2) - std::pow(d[14], 2) * std::pow(d[36], 2) + 2 * d[7] * d[9] * d[11] * d[37] - 2 * d[6] * d[11] * d[12] * d[37] + 2 * d[8] * d[12] * d[13] * d[37] - 2 * d[7] * std::pow(d[13], 2) * d[37] - 2 * d[8] * d[9] * d[14] * d[37] + 2 * d[6] * d[13] * d[14] * d[37] - 2 * d[3] * d[11] * d[15] * d[37] - 2 * d[2] * d[12] * d[15] * d[37] + 2 * d[5] * d[13] * d[15] * d[37] + 2 * d[4] * d[14] * d[15] * d[37] + 2 * d[2] * d[9] * d[16] * d[37] + 2 * d[0] * d[11] * d[16] * d[37] - 4 * d[4] * d[13] * d[16] * d[37] - 2 * d[5] * d[9] * d[17] * d[37] + 2 * d[4] * d[12] * d[17] * d[37] + 2 * d[3] * d[13] * d[17] * d[37] - 2 * d[0] * d[14] * d[17] * d[37] - 2 * d[11] * d[12] * d[36] * d[37] + 2 * d[13] * d[14] * d[36] * d[37] + d[9] * d[11] * std::pow(d[37], 2) - std::pow(d[13], 2) * std::pow(d[37], 2) + 2 * d[8] * d[9] * d[10] * d[38] - 2 * d[8] * std::pow(d[12], 2) * d[38] - 2 * d[6] * d[10] * d[13] * d[38] + 2 * d[7] * d[12] * d[13] * d[38] - 2 * d[7] * d[9] * d[14] * d[38] + 2 * d[6] * d[12] * d[14] * d[38] - 2 * d[4] * d[10] * d[15] * d[38] + 2 * d[5] * d[12] * d[15] * d[38] - 2 * d[1] * d[13] * d[15] * d[38] + 2 * d[3] * d[14] * d[15] * d[38] - 2 * d[5] * d[9] * d[16] * d[38] + 2 * d[4] * d[12] * d[16] * d[38] + 2 * d[3] * d[13] * d[16] * d[38] - 2 * d[0] * d[14] * d[16] * d[38] + 2 * d[1] * d[9] * d[17] * d[38] + 2 * d[0] * d[10] * d[17] * d[38] - 4 * d[3] * d[12] * d[17] * d[38] - 2 * d[10] * d[13] * d[36] * d[38] + 2 * d[12] * d[14] * d[36] * d[38] + 2 * d[12] * d[13] * d[37] * d[38] - 2 * d[9] * d[14] * d[37] * d[38] + d[9] * d[10] * std::pow(d[38], 2) - std::pow(d[12], 2) * std::pow(d[38], 2) - d[2] * d[9] * d[10] * d[42] - d[1] * d[9] * d[11] * d[42] - d[0] * d[10] * d[11] * d[42] + 2 * d[3] * d[11] * d[12] * d[42] + d[2] * std::pow(d[12], 2) * d[42] + 2 * d[4] * d[10] * d[13] * d[42] - 2 * d[5] * d[12] * d[13] * d[42] + d[1] * std::pow(d[13], 2) * d[42] + 2 * d[5] * d[9] * d[14] * d[42] - 2 * d[4] * d[12] * d[14] * d[42] - 2 * d[3] * d[13] * d[14] * d[42] + d[0] * std::pow(d[14], 2) * d[42];
    coeffs[11] = 2 * d[6] * d[11] * d[19] * d[36] - 2 * d[8] * d[13] * d[19] * d[36] + 2 * d[2] * d[15] * d[19] * d[36] - 2 * d[4] * d[17] * d[19] * d[36] + 2 * d[6] * d[10] * d[20] * d[36] - 2 * d[7] * d[12] * d[20] * d[36] + 2 * d[1] * d[15] * d[20] * d[36] - 2 * d[3] * d[16] * d[20] * d[36] - 2 * d[7] * d[11] * d[21] * d[36] + 2 * d[8] * d[14] * d[21] * d[36] - 2 * d[2] * d[16] * d[21] * d[36] + 2 * d[5] * d[17] * d[21] * d[36] - 2 * d[8] * d[10] * d[22] * d[36] + 2 * d[7] * d[14] * d[22] * d[36] + 2 * d[5] * d[16] * d[22] * d[36] - 2 * d[1] * d[17] * d[22] * d[36] + 2 * d[8] * d[12] * d[23] * d[36] + 2 * d[7] * d[13] * d[23] * d[36] - 4 * d[6] * d[14] * d[23] * d[36] - 4 * d[5] * d[15] * d[23] * d[36] + 2 * d[4] * d[16] * d[23] * d[36] + 2 * d[3] * d[17] * d[23] * d[36] + 2 * d[2] * d[10] * d[24] * d[36] + 2 * d[1] * d[11] * d[24] * d[36] - 4 * d[5] * d[14] * d[24] * d[36] - 2 * d[3] * d[11] * d[25] * d[36] - 2 * d[2] * d[12] * d[25] * d[36] + 2 * d[5] * d[13] * d[25] * d[36] + 2 * d[4] * d[14] * d[25] * d[36] - 2 * d[4] * d[10] * d[26] * d[36] + 2 * d[5] * d[12] * d[26] * d[36] - 2 * d[1] * d[13] * d[26] * d[36] + 2 * d[3] * d[14] * d[26] * d[36] + d[11] * d[19] * std::pow(d[36], 2) + d[10] * d[20] * std::pow(d[36], 2) - 2 * d[14] * d[23] * std::pow(d[36], 2) + 2 * d[7] * d[11] * d[18] * d[37] - 2 * d[8] * d[14] * d[18] * d[37] + 2 * d[2] * d[16] * d[18] * d[37] - 2 * d[5] * d[17] * d[18] * d[37] + 2 * d[7] * d[9] * d[20] * d[37] - 2 * d[6] * d[12] * d[20] * d[37] - 2 * d[3] * d[15] * d[20] * d[37] + 2 * d[0] * d[16] * d[20] * d[37] - 2 * d[6] * d[11] * d[21] * d[37] + 2 * d[8] * d[13] * d[21] * d[37] - 2 * d[2] * d[15] * d[21] * d[37] + 2 * d[4] * d[17] * d[21] * d[37] + 2 * d[8] * d[12] * d[22] * d[37] - 4 * d[7] * d[13] * d[22] * d[37] + 2 * d[6] * d[14] * d[22] * d[37] + 2 * d[5] * d[15] * d[22] * d[37] - 4 * d[4] * d[16] * d[22] * d[37] + 2 * d[3] * d[17] * d[22] * d[37] - 2 * d[8] * d[9] * d[23] * d[37] + 2 * d[6] * d[13] * d[23] * d[37] + 2 * d[4] * d[15] * d[23] * d[37] - 2 * d[0] * d[17] * d[23] * d[37] - 2 * d[3] * d[11] * d[24] * d[37] - 2 * d[2] * d[12] * d[24] * d[37] + 2 * d[5] * d[13] * d[24] * d[37] + 2 * d[4] * d[14] * d[24] * d[37] + 2 * d[2] * d[9] * d[25] * d[37] + 2 * d[0] * d[11] * d[25] * d[37] - 4 * d[4] * d[13] * d[25] * d[37] - 2 * d[5] * d[9] * d[26] * d[37] + 2 * d[4] * d[12] * d[26] * d[37] + 2 * d[3] * d[13] * d[26] * d[37] - 2 * d[0] * d[14] * d[26] * d[37] - 2 * d[12] * d[20] * d[36] * d[37] - 2 * d[11] * d[21] * d[36] * d[37] + 2 * d[14] * d[22] * d[36] * d[37] + 2 * d[13] * d[23] * d[36] * d[37] + d[11] * d[18] * std::pow(d[37], 2) + d[9] * d[20] * std::pow(d[37], 2) - 2 * d[13] * d[22] * std::pow(d[37], 2) + 2 * d[8] * d[10] * d[18] * d[38] - 2 * d[7] * d[14] * d[18] * d[38] - 2 * d[5] * d[16] * d[18] * d[38] + 2 * d[1] * d[17] * d[18] * d[38] + 2 * d[8] * d[9] * d[19] * d[38] - 2 * d[6] * d[13] * d[19] * d[38] - 2 * d[4] * d[15] * d[19] * d[38] + 2 * d[0] * d[17] * d[19] * d[38] - 4 * d[8] * d[12] * d[21] * d[38] + 2 * d[7] * d[13] * d[21] * d[38] + 2 * d[6] * d[14] * d[21] * d[38] + 2 * d[5] * d[15] * d[21] * d[38] + 2 * d[4] * d[16] * d[21] * d[38] - 4 * d[3] * d[17] * d[21] * d[38] - 2 * d[6] * d[10] * d[22] * d[38] + 2 * d[7] * d[12] * d[22] * d[38] - 2 * d[1] * d[15] * d[22] * d[38] + 2 * d[3] * d[16] * d[22] * d[38] - 2 * d[7] * d[9] * d[23] * d[38] + 2 * d[6] * d[12] * d[23] * d[38] + 2 * d[3] * d[15] * d[23] * d[38] - 2 * d[0] * d[16] * d[23] * d[38] - 2 * d[4] * d[10] * d[24] * d[38] + 2 * d[5] * d[12] * d[24] * d[38] - 2 * d[1] * d[13] * d[24] * d[38] + 2 * d[3] * d[14] * d[24] * d[38] - 2 * d[5] * d[9] * d[25] * d[38] + 2 * d[4] * d[12] * d[25] * d[38] + 2 * d[3] * d[13] * d[25] * d[38] - 2 * d[0] * d[14] * d[25] * d[38] + 2 * d[1] * d[9] * d[26] * d[38] + 2 * d[0] * d[10] * d[26] * d[38] - 4 * d[3] * d[12] * d[26] * d[38] - 2 * d[13] * d[19] * d[36] * d[38] + 2 * d[14] * d[21] * d[36] * d[38] - 2 * d[10] * d[22] * d[36] * d[38] + 2 * d[12] * d[23] * d[36] * d[38] - 2 * d[14] * d[18] * d[37] * d[38] + 2 * d[13] * d[21] * d[37] * d[38] + 2 * d[12] * d[22] * d[37] * d[38] - 2 * d[9] * d[23] * d[37] * d[38] + d[10] * d[18] * std::pow(d[38], 2) + d[9] * d[19] * std::pow(d[38], 2) - 2 * d[12] * d[21] * std::pow(d[38], 2) - d[2] * d[10] * d[18] * d[42] - d[1] * d[11] * d[18] * d[42] + 2 * d[5] * d[14] * d[18] * d[42] - d[2] * d[9] * d[19] * d[42] - d[0] * d[11] * d[19] * d[42] + 2 * d[4] * d[13] * d[19] * d[42] - d[1] * d[9] * d[20] * d[42] - d[0] * d[10] * d[20] * d[42] + 2 * d[3] * d[12] * d[20] * d[42] + 2 * d[3] * d[11] * d[21] * d[42] + 2 * d[2] * d[12] * d[21] * d[42] - 2 * d[5] * d[13] * d[21] * d[42] - 2 * d[4] * d[14] * d[21] * d[42] + 2 * d[4] * d[10] * d[22] * d[42] - 2 * d[5] * d[12] * d[22] * d[42] + 2 * d[1] * d[13] * d[22] * d[42] - 2 * d[3] * d[14] * d[22] * d[42] + 2 * d[5] * d[9] * d[23] * d[42] - 2 * d[4] * d[12] * d[23] * d[42] - 2 * d[3] * d[13] * d[23] * d[42] + 2 * d[0] * d[14] * d[23] * d[42];
    coeffs[12] = 2 * d[6] * d[19] * d[20] * d[36] - 2 * d[7] * d[20] * d[21] * d[36] - 2 * d[8] * d[19] * d[22] * d[36] + 2 * d[8] * d[21] * d[23] * d[36] + 2 * d[7] * d[22] * d[23] * d[36] - 2 * d[6] * std::pow(d[23], 2) * d[36] + 2 * d[2] * d[19] * d[24] * d[36] + 2 * d[1] * d[20] * d[24] * d[36] - 4 * d[5] * d[23] * d[24] * d[36] - 2 * d[3] * d[20] * d[25] * d[36] - 2 * d[2] * d[21] * d[25] * d[36] + 2 * d[5] * d[22] * d[25] * d[36] + 2 * d[4] * d[23] * d[25] * d[36] - 2 * d[4] * d[19] * d[26] * d[36] + 2 * d[5] * d[21] * d[26] * d[36] - 2 * d[1] * d[22] * d[26] * d[36] + 2 * d[3] * d[23] * d[26] * d[36] + d[19] * d[20] * std::pow(d[36], 2) - std::pow(d[23], 2) * std::pow(d[36], 2) + 2 * d[7] * d[18] * d[20] * d[37] - 2 * d[6] * d[20] * d[21] * d[37] + 2 * d[8] * d[21] * d[22] * d[37] - 2 * d[7] * std::pow(d[22], 2) * d[37] - 2 * d[8] * d[18] * d[23] * d[37] + 2 * d[6] * d[22] * d[23] * d[37] - 2 * d[3] * d[20] * d[24] * d[37] - 2 * d[2] * d[21] * d[24] * d[37] + 2 * d[5] * d[22] * d[24] * d[37] + 2 * d[4] * d[23] * d[24] * d[37] + 2 * d[2] * d[18] * d[25] * d[37] + 2 * d[0] * d[20] * d[25] * d[37] - 4 * d[4] * d[22] * d[25] * d[37] - 2 * d[5] * d[18] * d[26] * d[37] + 2 * d[4] * d[21] * d[26] * d[37] + 2 * d[3] * d[22] * d[26] * d[37] - 2 * d[0] * d[23] * d[26] * d[37] - 2 * d[20] * d[21] * d[36] * d[37] + 2 * d[22] * d[23] * d[36] * d[37] + d[18] * d[20] * std::pow(d[37], 2) - std::pow(d[22], 2) * std::pow(d[37], 2) + 2 * d[8] * d[18] * d[19] * d[38] - 2 * d[8] * std::pow(d[21], 2) * d[38] - 2 * d[6] * d[19] * d[22] * d[38] + 2 * d[7] * d[21] * d[22] * d[38] - 2 * d[7] * d[18] * d[23] * d[38] + 2 * d[6] * d[21] * d[23] * d[38] - 2 * d[4] * d[19] * d[24] * d[38] + 2 * d[5] * d[21] * d[24] * d[38] - 2 * d[1] * d[22] * d[24] * d[38] + 2 * d[3] * d[23] * d[24] * d[38] - 2 * d[5] * d[18] * d[25] * d[38] + 2 * d[4] * d[21] * d[25] * d[38] + 2 * d[3] * d[22] * d[25] * d[38] - 2 * d[0] * d[23] * d[25] * d[38] + 2 * d[1] * d[18] * d[26] * d[38] + 2 * d[0] * d[19] * d[26] * d[38] - 4 * d[3] * d[21] * d[26] * d[38] - 2 * d[19] * d[22] * d[36] * d[38] + 2 * d[21] * d[23] * d[36] * d[38] + 2 * d[21] * d[22] * d[37] * d[38] - 2 * d[18] * d[23] * d[37] * d[38] + d[18] * d[19] * std::pow(d[38], 2) - std::pow(d[21], 2) * std::pow(d[38], 2) - d[2] * d[18] * d[19] * d[42] - d[1] * d[18] * d[20] * d[42] - d[0] * d[19] * d[20] * d[42] + 2 * d[3] * d[20] * d[21] * d[42] + d[2] * std::pow(d[21], 2) * d[42] + 2 * d[4] * d[19] * d[22] * d[42] - 2 * d[5] * d[21] * d[22] * d[42] + d[1] * std::pow(d[22], 2) * d[42] + 2 * d[5] * d[18] * d[23] * d[42] - 2 * d[4] * d[21] * d[23] * d[42] - 2 * d[3] * d[22] * d[23] * d[42] + d[0] * std::pow(d[23], 2) * d[42];
    coeffs[13] = 2 * d[6] * d[11] * d[28] * d[36] - 2 * d[8] * d[13] * d[28] * d[36] + 2 * d[2] * d[15] * d[28] * d[36] - 2 * d[4] * d[17] * d[28] * d[36] + 2 * d[6] * d[10] * d[29] * d[36] - 2 * d[7] * d[12] * d[29] * d[36] + 2 * d[1] * d[15] * d[29] * d[36] - 2 * d[3] * d[16] * d[29] * d[36] - 2 * d[7] * d[11] * d[30] * d[36] + 2 * d[8] * d[14] * d[30] * d[36] - 2 * d[2] * d[16] * d[30] * d[36] + 2 * d[5] * d[17] * d[30] * d[36] - 2 * d[8] * d[10] * d[31] * d[36] + 2 * d[7] * d[14] * d[31] * d[36] + 2 * d[5] * d[16] * d[31] * d[36] - 2 * d[1] * d[17] * d[31] * d[36] + 2 * d[8] * d[12] * d[32] * d[36] + 2 * d[7] * d[13] * d[32] * d[36] - 4 * d[6] * d[14] * d[32] * d[36] - 4 * d[5] * d[15] * d[32] * d[36] + 2 * d[4] * d[16] * d[32] * d[36] + 2 * d[3] * d[17] * d[32] * d[36] + 2 * d[2] * d[10] * d[33] * d[36] + 2 * d[1] * d[11] * d[33] * d[36] - 4 * d[5] * d[14] * d[33] * d[36] - 2 * d[3] * d[11] * d[34] * d[36] - 2 * d[2] * d[12] * d[34] * d[36] + 2 * d[5] * d[13] * d[34] * d[36] + 2 * d[4] * d[14] * d[34] * d[36] - 2 * d[4] * d[10] * d[35] * d[36] + 2 * d[5] * d[12] * d[35] * d[36] - 2 * d[1] * d[13] * d[35] * d[36] + 2 * d[3] * d[14] * d[35] * d[36] + d[11] * d[28] * std::pow(d[36], 2) + d[10] * d[29] * std::pow(d[36], 2) - 2 * d[14] * d[32] * std::pow(d[36], 2) + 2 * d[7] * d[11] * d[27] * d[37] - 2 * d[8] * d[14] * d[27] * d[37] + 2 * d[2] * d[16] * d[27] * d[37] - 2 * d[5] * d[17] * d[27] * d[37] + 2 * d[7] * d[9] * d[29] * d[37] - 2 * d[6] * d[12] * d[29] * d[37] - 2 * d[3] * d[15] * d[29] * d[37] + 2 * d[0] * d[16] * d[29] * d[37] - 2 * d[6] * d[11] * d[30] * d[37] + 2 * d[8] * d[13] * d[30] * d[37] - 2 * d[2] * d[15] * d[30] * d[37] + 2 * d[4] * d[17] * d[30] * d[37] + 2 * d[8] * d[12] * d[31] * d[37] - 4 * d[7] * d[13] * d[31] * d[37] + 2 * d[6] * d[14] * d[31] * d[37] + 2 * d[5] * d[15] * d[31] * d[37] - 4 * d[4] * d[16] * d[31] * d[37] + 2 * d[3] * d[17] * d[31] * d[37] - 2 * d[8] * d[9] * d[32] * d[37] + 2 * d[6] * d[13] * d[32] * d[37] + 2 * d[4] * d[15] * d[32] * d[37] - 2 * d[0] * d[17] * d[32] * d[37] - 2 * d[3] * d[11] * d[33] * d[37] - 2 * d[2] * d[12] * d[33] * d[37] + 2 * d[5] * d[13] * d[33] * d[37] + 2 * d[4] * d[14] * d[33] * d[37] + 2 * d[2] * d[9] * d[34] * d[37] + 2 * d[0] * d[11] * d[34] * d[37] - 4 * d[4] * d[13] * d[34] * d[37] - 2 * d[5] * d[9] * d[35] * d[37] + 2 * d[4] * d[12] * d[35] * d[37] + 2 * d[3] * d[13] * d[35] * d[37] - 2 * d[0] * d[14] * d[35] * d[37] - 2 * d[12] * d[29] * d[36] * d[37] - 2 * d[11] * d[30] * d[36] * d[37] + 2 * d[14] * d[31] * d[36] * d[37] + 2 * d[13] * d[32] * d[36] * d[37] + d[11] * d[27] * std::pow(d[37], 2) + d[9] * d[29] * std::pow(d[37], 2) - 2 * d[13] * d[31] * std::pow(d[37], 2) + 2 * d[8] * d[10] * d[27] * d[38] - 2 * d[7] * d[14] * d[27] * d[38] - 2 * d[5] * d[16] * d[27] * d[38] + 2 * d[1] * d[17] * d[27] * d[38] + 2 * d[8] * d[9] * d[28] * d[38] - 2 * d[6] * d[13] * d[28] * d[38] - 2 * d[4] * d[15] * d[28] * d[38] + 2 * d[0] * d[17] * d[28] * d[38] - 4 * d[8] * d[12] * d[30] * d[38] + 2 * d[7] * d[13] * d[30] * d[38] + 2 * d[6] * d[14] * d[30] * d[38] + 2 * d[5] * d[15] * d[30] * d[38] + 2 * d[4] * d[16] * d[30] * d[38] - 4 * d[3] * d[17] * d[30] * d[38] - 2 * d[6] * d[10] * d[31] * d[38] + 2 * d[7] * d[12] * d[31] * d[38] - 2 * d[1] * d[15] * d[31] * d[38] + 2 * d[3] * d[16] * d[31] * d[38] - 2 * d[7] * d[9] * d[32] * d[38] + 2 * d[6] * d[12] * d[32] * d[38] + 2 * d[3] * d[15] * d[32] * d[38] - 2 * d[0] * d[16] * d[32] * d[38] - 2 * d[4] * d[10] * d[33] * d[38] + 2 * d[5] * d[12] * d[33] * d[38] - 2 * d[1] * d[13] * d[33] * d[38] + 2 * d[3] * d[14] * d[33] * d[38] - 2 * d[5] * d[9] * d[34] * d[38] + 2 * d[4] * d[12] * d[34] * d[38] + 2 * d[3] * d[13] * d[34] * d[38] - 2 * d[0] * d[14] * d[34] * d[38] + 2 * d[1] * d[9] * d[35] * d[38] + 2 * d[0] * d[10] * d[35] * d[38] - 4 * d[3] * d[12] * d[35] * d[38] - 2 * d[13] * d[28] * d[36] * d[38] + 2 * d[14] * d[30] * d[36] * d[38] - 2 * d[10] * d[31] * d[36] * d[38] + 2 * d[12] * d[32] * d[36] * d[38] - 2 * d[14] * d[27] * d[37] * d[38] + 2 * d[13] * d[30] * d[37] * d[38] + 2 * d[12] * d[31] * d[37] * d[38] - 2 * d[9] * d[32] * d[37] * d[38] + d[10] * d[27] * std::pow(d[38], 2) + d[9] * d[28] * std::pow(d[38], 2) - 2 * d[12] * d[30] * std::pow(d[38], 2) - d[2] * d[10] * d[27] * d[42] - d[1] * d[11] * d[27] * d[42] + 2 * d[5] * d[14] * d[27] * d[42] - d[2] * d[9] * d[28] * d[42] - d[0] * d[11] * d[28] * d[42] + 2 * d[4] * d[13] * d[28] * d[42] - d[1] * d[9] * d[29] * d[42] - d[0] * d[10] * d[29] * d[42] + 2 * d[3] * d[12] * d[29] * d[42] + 2 * d[3] * d[11] * d[30] * d[42] + 2 * d[2] * d[12] * d[30] * d[42] - 2 * d[5] * d[13] * d[30] * d[42] - 2 * d[4] * d[14] * d[30] * d[42] + 2 * d[4] * d[10] * d[31] * d[42] - 2 * d[5] * d[12] * d[31] * d[42] + 2 * d[1] * d[13] * d[31] * d[42] - 2 * d[3] * d[14] * d[31] * d[42] + 2 * d[5] * d[9] * d[32] * d[42] - 2 * d[4] * d[12] * d[32] * d[42] - 2 * d[3] * d[13] * d[32] * d[42] + 2 * d[0] * d[14] * d[32] * d[42];
    coeffs[14] = 2 * d[6] * d[20] * d[28] * d[36] - 2 * d[8] * d[22] * d[28] * d[36] + 2 * d[2] * d[24] * d[28] * d[36] - 2 * d[4] * d[26] * d[28] * d[36] + 2 * d[6] * d[19] * d[29] * d[36] - 2 * d[7] * d[21] * d[29] * d[36] + 2 * d[1] * d[24] * d[29] * d[36] - 2 * d[3] * d[25] * d[29] * d[36] - 2 * d[7] * d[20] * d[30] * d[36] + 2 * d[8] * d[23] * d[30] * d[36] - 2 * d[2] * d[25] * d[30] * d[36] + 2 * d[5] * d[26] * d[30] * d[36] - 2 * d[8] * d[19] * d[31] * d[36] + 2 * d[7] * d[23] * d[31] * d[36] + 2 * d[5] * d[25] * d[31] * d[36] - 2 * d[1] * d[26] * d[31] * d[36] + 2 * d[8] * d[21] * d[32] * d[36] + 2 * d[7] * d[22] * d[32] * d[36] - 4 * d[6] * d[23] * d[32] * d[36] - 4 * d[5] * d[24] * d[32] * d[36] + 2 * d[4] * d[25] * d[32] * d[36] + 2 * d[3] * d[26] * d[32] * d[36] + 2 * d[2] * d[19] * d[33] * d[36] + 2 * d[1] * d[20] * d[33] * d[36] - 4 * d[5] * d[23] * d[33] * d[36] - 2 * d[3] * d[20] * d[34] * d[36] - 2 * d[2] * d[21] * d[34] * d[36] + 2 * d[5] * d[22] * d[34] * d[36] + 2 * d[4] * d[23] * d[34] * d[36] - 2 * d[4] * d[19] * d[35] * d[36] + 2 * d[5] * d[21] * d[35] * d[36] - 2 * d[1] * d[22] * d[35] * d[36] + 2 * d[3] * d[23] * d[35] * d[36] + d[20] * d[28] * std::pow(d[36], 2) + d[19] * d[29] * std::pow(d[36], 2) - 2 * d[23] * d[32] * std::pow(d[36], 2) + 2 * d[7] * d[20] * d[27] * d[37] - 2 * d[8] * d[23] * d[27] * d[37] + 2 * d[2] * d[25] * d[27] * d[37] - 2 * d[5] * d[26] * d[27] * d[37] + 2 * d[7] * d[18] * d[29] * d[37] - 2 * d[6] * d[21] * d[29] * d[37] - 2 * d[3] * d[24] * d[29] * d[37] + 2 * d[0] * d[25] * d[29] * d[37] - 2 * d[6] * d[20] * d[30] * d[37] + 2 * d[8] * d[22] * d[30] * d[37] - 2 * d[2] * d[24] * d[30] * d[37] + 2 * d[4] * d[26] * d[30] * d[37] + 2 * d[8] * d[21] * d[31] * d[37] - 4 * d[7] * d[22] * d[31] * d[37] + 2 * d[6] * d[23] * d[31] * d[37] + 2 * d[5] * d[24] * d[31] * d[37] - 4 * d[4] * d[25] * d[31] * d[37] + 2 * d[3] * d[26] * d[31] * d[37] - 2 * d[8] * d[18] * d[32] * d[37] + 2 * d[6] * d[22] * d[32] * d[37] + 2 * d[4] * d[24] * d[32] * d[37] - 2 * d[0] * d[26] * d[32] * d[37] - 2 * d[3] * d[20] * d[33] * d[37] - 2 * d[2] * d[21] * d[33] * d[37] + 2 * d[5] * d[22] * d[33] * d[37] + 2 * d[4] * d[23] * d[33] * d[37] + 2 * d[2] * d[18] * d[34] * d[37] + 2 * d[0] * d[20] * d[34] * d[37] - 4 * d[4] * d[22] * d[34] * d[37] - 2 * d[5] * d[18] * d[35] * d[37] + 2 * d[4] * d[21] * d[35] * d[37] + 2 * d[3] * d[22] * d[35] * d[37] - 2 * d[0] * d[23] * d[35] * d[37] - 2 * d[21] * d[29] * d[36] * d[37] - 2 * d[20] * d[30] * d[36] * d[37] + 2 * d[23] * d[31] * d[36] * d[37] + 2 * d[22] * d[32] * d[36] * d[37] + d[20] * d[27] * std::pow(d[37], 2) + d[18] * d[29] * std::pow(d[37], 2) - 2 * d[22] * d[31] * std::pow(d[37], 2) + 2 * d[8] * d[19] * d[27] * d[38] - 2 * d[7] * d[23] * d[27] * d[38] - 2 * d[5] * d[25] * d[27] * d[38] + 2 * d[1] * d[26] * d[27] * d[38] + 2 * d[8] * d[18] * d[28] * d[38] - 2 * d[6] * d[22] * d[28] * d[38] - 2 * d[4] * d[24] * d[28] * d[38] + 2 * d[0] * d[26] * d[28] * d[38] - 4 * d[8] * d[21] * d[30] * d[38] + 2 * d[7] * d[22] * d[30] * d[38] + 2 * d[6] * d[23] * d[30] * d[38] + 2 * d[5] * d[24] * d[30] * d[38] + 2 * d[4] * d[25] * d[30] * d[38] - 4 * d[3] * d[26] * d[30] * d[38] - 2 * d[6] * d[19] * d[31] * d[38] + 2 * d[7] * d[21] * d[31] * d[38] - 2 * d[1] * d[24] * d[31] * d[38] + 2 * d[3] * d[25] * d[31] * d[38] - 2 * d[7] * d[18] * d[32] * d[38] + 2 * d[6] * d[21] * d[32] * d[38] + 2 * d[3] * d[24] * d[32] * d[38] - 2 * d[0] * d[25] * d[32] * d[38] - 2 * d[4] * d[19] * d[33] * d[38] + 2 * d[5] * d[21] * d[33] * d[38] - 2 * d[1] * d[22] * d[33] * d[38] + 2 * d[3] * d[23] * d[33] * d[38] - 2 * d[5] * d[18] * d[34] * d[38] + 2 * d[4] * d[21] * d[34] * d[38] + 2 * d[3] * d[22] * d[34] * d[38] - 2 * d[0] * d[23] * d[34] * d[38] + 2 * d[1] * d[18] * d[35] * d[38] + 2 * d[0] * d[19] * d[35] * d[38] - 4 * d[3] * d[21] * d[35] * d[38] - 2 * d[22] * d[28] * d[36] * d[38] + 2 * d[23] * d[30] * d[36] * d[38] - 2 * d[19] * d[31] * d[36] * d[38] + 2 * d[21] * d[32] * d[36] * d[38] - 2 * d[23] * d[27] * d[37] * d[38] + 2 * d[22] * d[30] * d[37] * d[38] + 2 * d[21] * d[31] * d[37] * d[38] - 2 * d[18] * d[32] * d[37] * d[38] + d[19] * d[27] * std::pow(d[38], 2) + d[18] * d[28] * std::pow(d[38], 2) - 2 * d[21] * d[30] * std::pow(d[38], 2) - d[2] * d[19] * d[27] * d[42] - d[1] * d[20] * d[27] * d[42] + 2 * d[5] * d[23] * d[27] * d[42] - d[2] * d[18] * d[28] * d[42] - d[0] * d[20] * d[28] * d[42] + 2 * d[4] * d[22] * d[28] * d[42] - d[1] * d[18] * d[29] * d[42] - d[0] * d[19] * d[29] * d[42] + 2 * d[3] * d[21] * d[29] * d[42] + 2 * d[3] * d[20] * d[30] * d[42] + 2 * d[2] * d[21] * d[30] * d[42] - 2 * d[5] * d[22] * d[30] * d[42] - 2 * d[4] * d[23] * d[30] * d[42] + 2 * d[4] * d[19] * d[31] * d[42] - 2 * d[5] * d[21] * d[31] * d[42] + 2 * d[1] * d[22] * d[31] * d[42] - 2 * d[3] * d[23] * d[31] * d[42] + 2 * d[5] * d[18] * d[32] * d[42] - 2 * d[4] * d[21] * d[32] * d[42] - 2 * d[3] * d[22] * d[32] * d[42] + 2 * d[0] * d[23] * d[32] * d[42];
    coeffs[15] = 2 * d[6] * d[28] * d[29] * d[36] - 2 * d[7] * d[29] * d[30] * d[36] - 2 * d[8] * d[28] * d[31] * d[36] + 2 * d[8] * d[30] * d[32] * d[36] + 2 * d[7] * d[31] * d[32] * d[36] - 2 * d[6] * std::pow(d[32], 2) * d[36] + 2 * d[2] * d[28] * d[33] * d[36] + 2 * d[1] * d[29] * d[33] * d[36] - 4 * d[5] * d[32] * d[33] * d[36] - 2 * d[3] * d[29] * d[34] * d[36] - 2 * d[2] * d[30] * d[34] * d[36] + 2 * d[5] * d[31] * d[34] * d[36] + 2 * d[4] * d[32] * d[34] * d[36] - 2 * d[4] * d[28] * d[35] * d[36] + 2 * d[5] * d[30] * d[35] * d[36] - 2 * d[1] * d[31] * d[35] * d[36] + 2 * d[3] * d[32] * d[35] * d[36] + d[28] * d[29] * std::pow(d[36], 2) - std::pow(d[32], 2) * std::pow(d[36], 2) + 2 * d[7] * d[27] * d[29] * d[37] - 2 * d[6] * d[29] * d[30] * d[37] + 2 * d[8] * d[30] * d[31] * d[37] - 2 * d[7] * std::pow(d[31], 2) * d[37] - 2 * d[8] * d[27] * d[32] * d[37] + 2 * d[6] * d[31] * d[32] * d[37] - 2 * d[3] * d[29] * d[33] * d[37] - 2 * d[2] * d[30] * d[33] * d[37] + 2 * d[5] * d[31] * d[33] * d[37] + 2 * d[4] * d[32] * d[33] * d[37] + 2 * d[2] * d[27] * d[34] * d[37] + 2 * d[0] * d[29] * d[34] * d[37] - 4 * d[4] * d[31] * d[34] * d[37] - 2 * d[5] * d[27] * d[35] * d[37] + 2 * d[4] * d[30] * d[35] * d[37] + 2 * d[3] * d[31] * d[35] * d[37] - 2 * d[0] * d[32] * d[35] * d[37] - 2 * d[29] * d[30] * d[36] * d[37] + 2 * d[31] * d[32] * d[36] * d[37] + d[27] * d[29] * std::pow(d[37], 2) - std::pow(d[31], 2) * std::pow(d[37], 2) + 2 * d[8] * d[27] * d[28] * d[38] - 2 * d[8] * std::pow(d[30], 2) * d[38] - 2 * d[6] * d[28] * d[31] * d[38] + 2 * d[7] * d[30] * d[31] * d[38] - 2 * d[7] * d[27] * d[32] * d[38] + 2 * d[6] * d[30] * d[32] * d[38] - 2 * d[4] * d[28] * d[33] * d[38] + 2 * d[5] * d[30] * d[33] * d[38] - 2 * d[1] * d[31] * d[33] * d[38] + 2 * d[3] * d[32] * d[33] * d[38] - 2 * d[5] * d[27] * d[34] * d[38] + 2 * d[4] * d[30] * d[34] * d[38] + 2 * d[3] * d[31] * d[34] * d[38] - 2 * d[0] * d[32] * d[34] * d[38] + 2 * d[1] * d[27] * d[35] * d[38] + 2 * d[0] * d[28] * d[35] * d[38] - 4 * d[3] * d[30] * d[35] * d[38] - 2 * d[28] * d[31] * d[36] * d[38] + 2 * d[30] * d[32] * d[36] * d[38] + 2 * d[30] * d[31] * d[37] * d[38] - 2 * d[27] * d[32] * d[37] * d[38] + d[27] * d[28] * std::pow(d[38], 2) - std::pow(d[30], 2) * std::pow(d[38], 2) - d[2] * d[27] * d[28] * d[42] - d[1] * d[27] * d[29] * d[42] - d[0] * d[28] * d[29] * d[42] + 2 * d[3] * d[29] * d[30] * d[42] + d[2] * std::pow(d[30], 2) * d[42] + 2 * d[4] * d[28] * d[31] * d[42] - 2 * d[5] * d[30] * d[31] * d[42] + d[1] * std::pow(d[31], 2) * d[42] + 2 * d[5] * d[27] * d[32] * d[42] - 2 * d[4] * d[30] * d[32] * d[42] - 2 * d[3] * d[31] * d[32] * d[42] + d[0] * std::pow(d[32], 2) * d[42];
    coeffs[16] = 2 * d[2] * d[6] * d[10] * d[36] - 2 * d[4] * d[8] * d[10] * d[36] + 2 * d[1] * d[6] * d[11] * d[36] - 2 * d[3] * d[7] * d[11] * d[36] - 2 * d[2] * d[7] * d[12] * d[36] + 2 * d[5] * d[8] * d[12] * d[36] + 2 * d[5] * d[7] * d[13] * d[36] - 2 * d[1] * d[8] * d[13] * d[36] - 4 * d[5] * d[6] * d[14] * d[36] + 2 * d[4] * d[7] * d[14] * d[36] + 2 * d[3] * d[8] * d[14] * d[36] + 2 * d[1] * d[2] * d[15] * d[36] - 2 * std::pow(d[5], 2) * d[15] * d[36] - 2 * d[2] * d[3] * d[16] * d[36] + 2 * d[4] * d[5] * d[16] * d[36] - 2 * d[1] * d[4] * d[17] * d[36] + 2 * d[3] * d[5] * d[17] * d[36] + d[2] * d[10] * std::pow(d[36], 2) + d[1] * d[11] * std::pow(d[36], 2) - 2 * d[5] * d[14] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[9] * d[37] - 2 * d[5] * d[8] * d[9] * d[37] - 2 * d[3] * d[6] * d[11] * d[37] + 2 * d[0] * d[7] * d[11] * d[37] - 2 * d[2] * d[6] * d[12] * d[37] + 2 * d[4] * d[8] * d[12] * d[37] + 2 * d[5] * d[6] * d[13] * d[37] - 4 * d[4] * d[7] * d[13] * d[37] + 2 * d[3] * d[8] * d[13] * d[37] + 2 * d[4] * d[6] * d[14] * d[37] - 2 * d[0] * d[8] * d[14] * d[37] - 2 * d[2] * d[3] * d[15] * d[37] + 2 * d[4] * d[5] * d[15] * d[37] + 2 * d[0] * d[2] * d[16] * d[37] - 2 * std::pow(d[4], 2) * d[16] * d[37] + 2 * d[3] * d[4] * d[17] * d[37] - 2 * d[0] * d[5] * d[17] * d[37] - 2 * d[3] * d[11] * d[36] * d[37] - 2 * d[2] * d[12] * d[36] * d[37] + 2 * d[5] * d[13] * d[36] * d[37] + 2 * d[4] * d[14] * d[36] * d[37] + d[2] * d[9] * std::pow(d[37], 2) + d[0] * d[11] * std::pow(d[37], 2) - 2 * d[4] * d[13] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[9] * d[38] + 2 * d[1] * d[8] * d[9] * d[38] - 2 * d[4] * d[6] * d[10] * d[38] + 2 * d[0] * d[8] * d[10] * d[38] + 2 * d[5] * d[6] * d[12] * d[38] + 2 * d[4] * d[7] * d[12] * d[38] - 4 * d[3] * d[8] * d[12] * d[38] - 2 * d[1] * d[6] * d[13] * d[38] + 2 * d[3] * d[7] * d[13] * d[38] + 2 * d[3] * d[6] * d[14] * d[38] - 2 * d[0] * d[7] * d[14] * d[38] - 2 * d[1] * d[4] * d[15] * d[38] + 2 * d[3] * d[5] * d[15] * d[38] + 2 * d[3] * d[4] * d[16] * d[38] - 2 * d[0] * d[5] * d[16] * d[38] + 2 * d[0] * d[1] * d[17] * d[38] - 2 * std::pow(d[3], 2) * d[17] * d[38] - 2 * d[4] * d[10] * d[36] * d[38] + 2 * d[5] * d[12] * d[36] * d[38] - 2 * d[1] * d[13] * d[36] * d[38] + 2 * d[3] * d[14] * d[36] * d[38] - 2 * d[5] * d[9] * d[37] * d[38] + 2 * d[4] * d[12] * d[37] * d[38] + 2 * d[3] * d[13] * d[37] * d[38] - 2 * d[0] * d[14] * d[37] * d[38] + d[1] * d[9] * std::pow(d[38], 2) + d[0] * d[10] * std::pow(d[38], 2) - 2 * d[3] * d[12] * std::pow(d[38], 2) - d[1] * d[2] * d[9] * d[42] + std::pow(d[5], 2) * d[9] * d[42] - d[0] * d[2] * d[10] * d[42] + std::pow(d[4], 2) * d[10] * d[42] - d[0] * d[1] * d[11] * d[42] + std::pow(d[3], 2) * d[11] * d[42] + 2 * d[2] * d[3] * d[12] * d[42] - 2 * d[4] * d[5] * d[12] * d[42] + 2 * d[1] * d[4] * d[13] * d[42] - 2 * d[3] * d[5] * d[13] * d[42] - 2 * d[3] * d[4] * d[14] * d[42] + 2 * d[0] * d[5] * d[14] * d[42];
    coeffs[17] = 2 * d[2] * d[6] * d[19] * d[36] - 2 * d[4] * d[8] * d[19] * d[36] + 2 * d[1] * d[6] * d[20] * d[36] - 2 * d[3] * d[7] * d[20] * d[36] - 2 * d[2] * d[7] * d[21] * d[36] + 2 * d[5] * d[8] * d[21] * d[36] + 2 * d[5] * d[7] * d[22] * d[36] - 2 * d[1] * d[8] * d[22] * d[36] - 4 * d[5] * d[6] * d[23] * d[36] + 2 * d[4] * d[7] * d[23] * d[36] + 2 * d[3] * d[8] * d[23] * d[36] + 2 * d[1] * d[2] * d[24] * d[36] - 2 * std::pow(d[5], 2) * d[24] * d[36] - 2 * d[2] * d[3] * d[25] * d[36] + 2 * d[4] * d[5] * d[25] * d[36] - 2 * d[1] * d[4] * d[26] * d[36] + 2 * d[3] * d[5] * d[26] * d[36] + d[2] * d[19] * std::pow(d[36], 2) + d[1] * d[20] * std::pow(d[36], 2) - 2 * d[5] * d[23] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[18] * d[37] - 2 * d[5] * d[8] * d[18] * d[37] - 2 * d[3] * d[6] * d[20] * d[37] + 2 * d[0] * d[7] * d[20] * d[37] - 2 * d[2] * d[6] * d[21] * d[37] + 2 * d[4] * d[8] * d[21] * d[37] + 2 * d[5] * d[6] * d[22] * d[37] - 4 * d[4] * d[7] * d[22] * d[37] + 2 * d[3] * d[8] * d[22] * d[37] + 2 * d[4] * d[6] * d[23] * d[37] - 2 * d[0] * d[8] * d[23] * d[37] - 2 * d[2] * d[3] * d[24] * d[37] + 2 * d[4] * d[5] * d[24] * d[37] + 2 * d[0] * d[2] * d[25] * d[37] - 2 * std::pow(d[4], 2) * d[25] * d[37] + 2 * d[3] * d[4] * d[26] * d[37] - 2 * d[0] * d[5] * d[26] * d[37] - 2 * d[3] * d[20] * d[36] * d[37] - 2 * d[2] * d[21] * d[36] * d[37] + 2 * d[5] * d[22] * d[36] * d[37] + 2 * d[4] * d[23] * d[36] * d[37] + d[2] * d[18] * std::pow(d[37], 2) + d[0] * d[20] * std::pow(d[37], 2) - 2 * d[4] * d[22] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[18] * d[38] + 2 * d[1] * d[8] * d[18] * d[38] - 2 * d[4] * d[6] * d[19] * d[38] + 2 * d[0] * d[8] * d[19] * d[38] + 2 * d[5] * d[6] * d[21] * d[38] + 2 * d[4] * d[7] * d[21] * d[38] - 4 * d[3] * d[8] * d[21] * d[38] - 2 * d[1] * d[6] * d[22] * d[38] + 2 * d[3] * d[7] * d[22] * d[38] + 2 * d[3] * d[6] * d[23] * d[38] - 2 * d[0] * d[7] * d[23] * d[38] - 2 * d[1] * d[4] * d[24] * d[38] + 2 * d[3] * d[5] * d[24] * d[38] + 2 * d[3] * d[4] * d[25] * d[38] - 2 * d[0] * d[5] * d[25] * d[38] + 2 * d[0] * d[1] * d[26] * d[38] - 2 * std::pow(d[3], 2) * d[26] * d[38] - 2 * d[4] * d[19] * d[36] * d[38] + 2 * d[5] * d[21] * d[36] * d[38] - 2 * d[1] * d[22] * d[36] * d[38] + 2 * d[3] * d[23] * d[36] * d[38] - 2 * d[5] * d[18] * d[37] * d[38] + 2 * d[4] * d[21] * d[37] * d[38] + 2 * d[3] * d[22] * d[37] * d[38] - 2 * d[0] * d[23] * d[37] * d[38] + d[1] * d[18] * std::pow(d[38], 2) + d[0] * d[19] * std::pow(d[38], 2) - 2 * d[3] * d[21] * std::pow(d[38], 2) - d[1] * d[2] * d[18] * d[42] + std::pow(d[5], 2) * d[18] * d[42] - d[0] * d[2] * d[19] * d[42] + std::pow(d[4], 2) * d[19] * d[42] - d[0] * d[1] * d[20] * d[42] + std::pow(d[3], 2) * d[20] * d[42] + 2 * d[2] * d[3] * d[21] * d[42] - 2 * d[4] * d[5] * d[21] * d[42] + 2 * d[1] * d[4] * d[22] * d[42] - 2 * d[3] * d[5] * d[22] * d[42] - 2 * d[3] * d[4] * d[23] * d[42] + 2 * d[0] * d[5] * d[23] * d[42];
    coeffs[18] = 2 * d[2] * d[6] * d[28] * d[36] - 2 * d[4] * d[8] * d[28] * d[36] + 2 * d[1] * d[6] * d[29] * d[36] - 2 * d[3] * d[7] * d[29] * d[36] - 2 * d[2] * d[7] * d[30] * d[36] + 2 * d[5] * d[8] * d[30] * d[36] + 2 * d[5] * d[7] * d[31] * d[36] - 2 * d[1] * d[8] * d[31] * d[36] - 4 * d[5] * d[6] * d[32] * d[36] + 2 * d[4] * d[7] * d[32] * d[36] + 2 * d[3] * d[8] * d[32] * d[36] + 2 * d[1] * d[2] * d[33] * d[36] - 2 * std::pow(d[5], 2) * d[33] * d[36] - 2 * d[2] * d[3] * d[34] * d[36] + 2 * d[4] * d[5] * d[34] * d[36] - 2 * d[1] * d[4] * d[35] * d[36] + 2 * d[3] * d[5] * d[35] * d[36] + d[2] * d[28] * std::pow(d[36], 2) + d[1] * d[29] * std::pow(d[36], 2) - 2 * d[5] * d[32] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[27] * d[37] - 2 * d[5] * d[8] * d[27] * d[37] - 2 * d[3] * d[6] * d[29] * d[37] + 2 * d[0] * d[7] * d[29] * d[37] - 2 * d[2] * d[6] * d[30] * d[37] + 2 * d[4] * d[8] * d[30] * d[37] + 2 * d[5] * d[6] * d[31] * d[37] - 4 * d[4] * d[7] * d[31] * d[37] + 2 * d[3] * d[8] * d[31] * d[37] + 2 * d[4] * d[6] * d[32] * d[37] - 2 * d[0] * d[8] * d[32] * d[37] - 2 * d[2] * d[3] * d[33] * d[37] + 2 * d[4] * d[5] * d[33] * d[37] + 2 * d[0] * d[2] * d[34] * d[37] - 2 * std::pow(d[4], 2) * d[34] * d[37] + 2 * d[3] * d[4] * d[35] * d[37] - 2 * d[0] * d[5] * d[35] * d[37] - 2 * d[3] * d[29] * d[36] * d[37] - 2 * d[2] * d[30] * d[36] * d[37] + 2 * d[5] * d[31] * d[36] * d[37] + 2 * d[4] * d[32] * d[36] * d[37] + d[2] * d[27] * std::pow(d[37], 2) + d[0] * d[29] * std::pow(d[37], 2) - 2 * d[4] * d[31] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[27] * d[38] + 2 * d[1] * d[8] * d[27] * d[38] - 2 * d[4] * d[6] * d[28] * d[38] + 2 * d[0] * d[8] * d[28] * d[38] + 2 * d[5] * d[6] * d[30] * d[38] + 2 * d[4] * d[7] * d[30] * d[38] - 4 * d[3] * d[8] * d[30] * d[38] - 2 * d[1] * d[6] * d[31] * d[38] + 2 * d[3] * d[7] * d[31] * d[38] + 2 * d[3] * d[6] * d[32] * d[38] - 2 * d[0] * d[7] * d[32] * d[38] - 2 * d[1] * d[4] * d[33] * d[38] + 2 * d[3] * d[5] * d[33] * d[38] + 2 * d[3] * d[4] * d[34] * d[38] - 2 * d[0] * d[5] * d[34] * d[38] + 2 * d[0] * d[1] * d[35] * d[38] - 2 * std::pow(d[3], 2) * d[35] * d[38] - 2 * d[4] * d[28] * d[36] * d[38] + 2 * d[5] * d[30] * d[36] * d[38] - 2 * d[1] * d[31] * d[36] * d[38] + 2 * d[3] * d[32] * d[36] * d[38] - 2 * d[5] * d[27] * d[37] * d[38] + 2 * d[4] * d[30] * d[37] * d[38] + 2 * d[3] * d[31] * d[37] * d[38] - 2 * d[0] * d[32] * d[37] * d[38] + d[1] * d[27] * std::pow(d[38], 2) + d[0] * d[28] * std::pow(d[38], 2) - 2 * d[3] * d[30] * std::pow(d[38], 2) - d[1] * d[2] * d[27] * d[42] + std::pow(d[5], 2) * d[27] * d[42] - d[0] * d[2] * d[28] * d[42] + std::pow(d[4], 2) * d[28] * d[42] - d[0] * d[1] * d[29] * d[42] + std::pow(d[3], 2) * d[29] * d[42] + 2 * d[2] * d[3] * d[30] * d[42] - 2 * d[4] * d[5] * d[30] * d[42] + 2 * d[1] * d[4] * d[31] * d[42] - 2 * d[3] * d[5] * d[31] * d[42] - 2 * d[3] * d[4] * d[32] * d[42] + 2 * d[0] * d[5] * d[32] * d[42];
    coeffs[19] = 2 * d[1] * d[2] * d[6] * d[36] - 2 * std::pow(d[5], 2) * d[6] * d[36] - 2 * d[2] * d[3] * d[7] * d[36] + 2 * d[4] * d[5] * d[7] * d[36] - 2 * d[1] * d[4] * d[8] * d[36] + 2 * d[3] * d[5] * d[8] * d[36] + d[1] * d[2] * std::pow(d[36], 2) - std::pow(d[5], 2) * std::pow(d[36], 2) - 2 * d[2] * d[3] * d[6] * d[37] + 2 * d[4] * d[5] * d[6] * d[37] + 2 * d[0] * d[2] * d[7] * d[37] - 2 * std::pow(d[4], 2) * d[7] * d[37] + 2 * d[3] * d[4] * d[8] * d[37] - 2 * d[0] * d[5] * d[8] * d[37] - 2 * d[2] * d[3] * d[36] * d[37] + 2 * d[4] * d[5] * d[36] * d[37] + d[0] * d[2] * std::pow(d[37], 2) - std::pow(d[4], 2) * std::pow(d[37], 2) - 2 * d[1] * d[4] * d[6] * d[38] + 2 * d[3] * d[5] * d[6] * d[38] + 2 * d[3] * d[4] * d[7] * d[38] - 2 * d[0] * d[5] * d[7] * d[38] + 2 * d[0] * d[1] * d[8] * d[38] - 2 * std::pow(d[3], 2) * d[8] * d[38] - 2 * d[1] * d[4] * d[36] * d[38] + 2 * d[3] * d[5] * d[36] * d[38] + 2 * d[3] * d[4] * d[37] * d[38] - 2 * d[0] * d[5] * d[37] * d[38] + d[0] * d[1] * std::pow(d[38], 2) - std::pow(d[3], 2) * std::pow(d[38], 2) - d[0] * d[1] * d[2] * d[42] + d[2] * std::pow(d[3], 2) * d[42] + d[1] * std::pow(d[4], 2) * d[42] - 2 * d[3] * d[4] * d[5] * d[42] + d[0] * std::pow(d[5], 2) * d[42];
    coeffs[20] = 2 * d[10] * d[11] * d[15] * d[39] - 2 * std::pow(d[14], 2) * d[15] * d[39] - 2 * d[11] * d[12] * d[16] * d[39] + 2 * d[13] * d[14] * d[16] * d[39] - 2 * d[10] * d[13] * d[17] * d[39] + 2 * d[12] * d[14] * d[17] * d[39] - 2 * d[11] * d[12] * d[15] * d[40] + 2 * d[13] * d[14] * d[15] * d[40] + 2 * d[9] * d[11] * d[16] * d[40] - 2 * std::pow(d[13], 2) * d[16] * d[40] + 2 * d[12] * d[13] * d[17] * d[40] - 2 * d[9] * d[14] * d[17] * d[40] - 2 * d[10] * d[13] * d[15] * d[41] + 2 * d[12] * d[14] * d[15] * d[41] + 2 * d[12] * d[13] * d[16] * d[41] - 2 * d[9] * d[14] * d[16] * d[41] + 2 * d[9] * d[10] * d[17] * d[41] - 2 * std::pow(d[12], 2) * d[17] * d[41] - d[9] * d[10] * d[11] * d[43] + d[11] * std::pow(d[12], 2) * d[43] + d[10] * std::pow(d[13], 2) * d[43] - 2 * d[12] * d[13] * d[14] * d[43] + d[9] * std::pow(d[14], 2) * d[43];
    coeffs[21] = 2 * d[11] * d[15] * d[19] * d[39] - 2 * d[13] * d[17] * d[19] * d[39] + 2 * d[10] * d[15] * d[20] * d[39] - 2 * d[12] * d[16] * d[20] * d[39] - 2 * d[11] * d[16] * d[21] * d[39] + 2 * d[14] * d[17] * d[21] * d[39] + 2 * d[14] * d[16] * d[22] * d[39] - 2 * d[10] * d[17] * d[22] * d[39] - 4 * d[14] * d[15] * d[23] * d[39] + 2 * d[13] * d[16] * d[23] * d[39] + 2 * d[12] * d[17] * d[23] * d[39] + 2 * d[10] * d[11] * d[24] * d[39] - 2 * std::pow(d[14], 2) * d[24] * d[39] - 2 * d[11] * d[12] * d[25] * d[39] + 2 * d[13] * d[14] * d[25] * d[39] - 2 * d[10] * d[13] * d[26] * d[39] + 2 * d[12] * d[14] * d[26] * d[39] + 2 * d[11] * d[16] * d[18] * d[40] - 2 * d[14] * d[17] * d[18] * d[40] - 2 * d[12] * d[15] * d[20] * d[40] + 2 * d[9] * d[16] * d[20] * d[40] - 2 * d[11] * d[15] * d[21] * d[40] + 2 * d[13] * d[17] * d[21] * d[40] + 2 * d[14] * d[15] * d[22] * d[40] - 4 * d[13] * d[16] * d[22] * d[40] + 2 * d[12] * d[17] * d[22] * d[40] + 2 * d[13] * d[15] * d[23] * d[40] - 2 * d[9] * d[17] * d[23] * d[40] - 2 * d[11] * d[12] * d[24] * d[40] + 2 * d[13] * d[14] * d[24] * d[40] + 2 * d[9] * d[11] * d[25] * d[40] - 2 * std::pow(d[13], 2) * d[25] * d[40] + 2 * d[12] * d[13] * d[26] * d[40] - 2 * d[9] * d[14] * d[26] * d[40] - 2 * d[14] * d[16] * d[18] * d[41] + 2 * d[10] * d[17] * d[18] * d[41] - 2 * d[13] * d[15] * d[19] * d[41] + 2 * d[9] * d[17] * d[19] * d[41] + 2 * d[14] * d[15] * d[21] * d[41] + 2 * d[13] * d[16] * d[21] * d[41] - 4 * d[12] * d[17] * d[21] * d[41] - 2 * d[10] * d[15] * d[22] * d[41] + 2 * d[12] * d[16] * d[22] * d[41] + 2 * d[12] * d[15] * d[23] * d[41] - 2 * d[9] * d[16] * d[23] * d[41] - 2 * d[10] * d[13] * d[24] * d[41] + 2 * d[12] * d[14] * d[24] * d[41] + 2 * d[12] * d[13] * d[25] * d[41] - 2 * d[9] * d[14] * d[25] * d[41] + 2 * d[9] * d[10] * d[26] * d[41] - 2 * std::pow(d[12], 2) * d[26] * d[41] - d[10] * d[11] * d[18] * d[43] + std::pow(d[14], 2) * d[18] * d[43] - d[9] * d[11] * d[19] * d[43] + std::pow(d[13], 2) * d[19] * d[43] - d[9] * d[10] * d[20] * d[43] + std::pow(d[12], 2) * d[20] * d[43] + 2 * d[11] * d[12] * d[21] * d[43] - 2 * d[13] * d[14] * d[21] * d[43] + 2 * d[10] * d[13] * d[22] * d[43] - 2 * d[12] * d[14] * d[22] * d[43] - 2 * d[12] * d[13] * d[23] * d[43] + 2 * d[9] * d[14] * d[23] * d[43];
    coeffs[22] = 2 * d[15] * d[19] * d[20] * d[39] - 2 * d[16] * d[20] * d[21] * d[39] - 2 * d[17] * d[19] * d[22] * d[39] + 2 * d[17] * d[21] * d[23] * d[39] + 2 * d[16] * d[22] * d[23] * d[39] - 2 * d[15] * std::pow(d[23], 2) * d[39] + 2 * d[11] * d[19] * d[24] * d[39] + 2 * d[10] * d[20] * d[24] * d[39] - 4 * d[14] * d[23] * d[24] * d[39] - 2 * d[12] * d[20] * d[25] * d[39] - 2 * d[11] * d[21] * d[25] * d[39] + 2 * d[14] * d[22] * d[25] * d[39] + 2 * d[13] * d[23] * d[25] * d[39] - 2 * d[13] * d[19] * d[26] * d[39] + 2 * d[14] * d[21] * d[26] * d[39] - 2 * d[10] * d[22] * d[26] * d[39] + 2 * d[12] * d[23] * d[26] * d[39] + 2 * d[16] * d[18] * d[20] * d[40] - 2 * d[15] * d[20] * d[21] * d[40] + 2 * d[17] * d[21] * d[22] * d[40] - 2 * d[16] * std::pow(d[22], 2) * d[40] - 2 * d[17] * d[18] * d[23] * d[40] + 2 * d[15] * d[22] * d[23] * d[40] - 2 * d[12] * d[20] * d[24] * d[40] - 2 * d[11] * d[21] * d[24] * d[40] + 2 * d[14] * d[22] * d[24] * d[40] + 2 * d[13] * d[23] * d[24] * d[40] + 2 * d[11] * d[18] * d[25] * d[40] + 2 * d[9] * d[20] * d[25] * d[40] - 4 * d[13] * d[22] * d[25] * d[40] - 2 * d[14] * d[18] * d[26] * d[40] + 2 * d[13] * d[21] * d[26] * d[40] + 2 * d[12] * d[22] * d[26] * d[40] - 2 * d[9] * d[23] * d[26] * d[40] + 2 * d[17] * d[18] * d[19] * d[41] - 2 * d[17] * std::pow(d[21], 2) * d[41] - 2 * d[15] * d[19] * d[22] * d[41] + 2 * d[16] * d[21] * d[22] * d[41] - 2 * d[16] * d[18] * d[23] * d[41] + 2 * d[15] * d[21] * d[23] * d[41] - 2 * d[13] * d[19] * d[24] * d[41] + 2 * d[14] * d[21] * d[24] * d[41] - 2 * d[10] * d[22] * d[24] * d[41] + 2 * d[12] * d[23] * d[24] * d[41] - 2 * d[14] * d[18] * d[25] * d[41] + 2 * d[13] * d[21] * d[25] * d[41] + 2 * d[12] * d[22] * d[25] * d[41] - 2 * d[9] * d[23] * d[25] * d[41] + 2 * d[10] * d[18] * d[26] * d[41] + 2 * d[9] * d[19] * d[26] * d[41] - 4 * d[12] * d[21] * d[26] * d[41] - d[11] * d[18] * d[19] * d[43] - d[10] * d[18] * d[20] * d[43] - d[9] * d[19] * d[20] * d[43] + 2 * d[12] * d[20] * d[21] * d[43] + d[11] * std::pow(d[21], 2) * d[43] + 2 * d[13] * d[19] * d[22] * d[43] - 2 * d[14] * d[21] * d[22] * d[43] + d[10] * std::pow(d[22], 2) * d[43] + 2 * d[14] * d[18] * d[23] * d[43] - 2 * d[13] * d[21] * d[23] * d[43] - 2 * d[12] * d[22] * d[23] * d[43] + d[9] * std::pow(d[23], 2) * d[43];
    coeffs[23] = 2 * d[19] * d[20] * d[24] * d[39] - 2 * std::pow(d[23], 2) * d[24] * d[39] - 2 * d[20] * d[21] * d[25] * d[39] + 2 * d[22] * d[23] * d[25] * d[39] - 2 * d[19] * d[22] * d[26] * d[39] + 2 * d[21] * d[23] * d[26] * d[39] - 2 * d[20] * d[21] * d[24] * d[40] + 2 * d[22] * d[23] * d[24] * d[40] + 2 * d[18] * d[20] * d[25] * d[40] - 2 * std::pow(d[22], 2) * d[25] * d[40] + 2 * d[21] * d[22] * d[26] * d[40] - 2 * d[18] * d[23] * d[26] * d[40] - 2 * d[19] * d[22] * d[24] * d[41] + 2 * d[21] * d[23] * d[24] * d[41] + 2 * d[21] * d[22] * d[25] * d[41] - 2 * d[18] * d[23] * d[25] * d[41] + 2 * d[18] * d[19] * d[26] * d[41] - 2 * std::pow(d[21], 2) * d[26] * d[41] - d[18] * d[19] * d[20] * d[43] + d[20] * std::pow(d[21], 2) * d[43] + d[19] * std::pow(d[22], 2) * d[43] - 2 * d[21] * d[22] * d[23] * d[43] + d[18] * std::pow(d[23], 2) * d[43];
    coeffs[24] = 2 * d[11] * d[15] * d[28] * d[39] - 2 * d[13] * d[17] * d[28] * d[39] + 2 * d[10] * d[15] * d[29] * d[39] - 2 * d[12] * d[16] * d[29] * d[39] - 2 * d[11] * d[16] * d[30] * d[39] + 2 * d[14] * d[17] * d[30] * d[39] + 2 * d[14] * d[16] * d[31] * d[39] - 2 * d[10] * d[17] * d[31] * d[39] - 4 * d[14] * d[15] * d[32] * d[39] + 2 * d[13] * d[16] * d[32] * d[39] + 2 * d[12] * d[17] * d[32] * d[39] + 2 * d[10] * d[11] * d[33] * d[39] - 2 * std::pow(d[14], 2) * d[33] * d[39] - 2 * d[11] * d[12] * d[34] * d[39] + 2 * d[13] * d[14] * d[34] * d[39] - 2 * d[10] * d[13] * d[35] * d[39] + 2 * d[12] * d[14] * d[35] * d[39] + 2 * d[11] * d[16] * d[27] * d[40] - 2 * d[14] * d[17] * d[27] * d[40] - 2 * d[12] * d[15] * d[29] * d[40] + 2 * d[9] * d[16] * d[29] * d[40] - 2 * d[11] * d[15] * d[30] * d[40] + 2 * d[13] * d[17] * d[30] * d[40] + 2 * d[14] * d[15] * d[31] * d[40] - 4 * d[13] * d[16] * d[31] * d[40] + 2 * d[12] * d[17] * d[31] * d[40] + 2 * d[13] * d[15] * d[32] * d[40] - 2 * d[9] * d[17] * d[32] * d[40] - 2 * d[11] * d[12] * d[33] * d[40] + 2 * d[13] * d[14] * d[33] * d[40] + 2 * d[9] * d[11] * d[34] * d[40] - 2 * std::pow(d[13], 2) * d[34] * d[40] + 2 * d[12] * d[13] * d[35] * d[40] - 2 * d[9] * d[14] * d[35] * d[40] - 2 * d[14] * d[16] * d[27] * d[41] + 2 * d[10] * d[17] * d[27] * d[41] - 2 * d[13] * d[15] * d[28] * d[41] + 2 * d[9] * d[17] * d[28] * d[41] + 2 * d[14] * d[15] * d[30] * d[41] + 2 * d[13] * d[16] * d[30] * d[41] - 4 * d[12] * d[17] * d[30] * d[41] - 2 * d[10] * d[15] * d[31] * d[41] + 2 * d[12] * d[16] * d[31] * d[41] + 2 * d[12] * d[15] * d[32] * d[41] - 2 * d[9] * d[16] * d[32] * d[41] - 2 * d[10] * d[13] * d[33] * d[41] + 2 * d[12] * d[14] * d[33] * d[41] + 2 * d[12] * d[13] * d[34] * d[41] - 2 * d[9] * d[14] * d[34] * d[41] + 2 * d[9] * d[10] * d[35] * d[41] - 2 * std::pow(d[12], 2) * d[35] * d[41] - d[10] * d[11] * d[27] * d[43] + std::pow(d[14], 2) * d[27] * d[43] - d[9] * d[11] * d[28] * d[43] + std::pow(d[13], 2) * d[28] * d[43] - d[9] * d[10] * d[29] * d[43] + std::pow(d[12], 2) * d[29] * d[43] + 2 * d[11] * d[12] * d[30] * d[43] - 2 * d[13] * d[14] * d[30] * d[43] + 2 * d[10] * d[13] * d[31] * d[43] - 2 * d[12] * d[14] * d[31] * d[43] - 2 * d[12] * d[13] * d[32] * d[43] + 2 * d[9] * d[14] * d[32] * d[43];
    coeffs[25] = 2 * d[15] * d[20] * d[28] * d[39] - 2 * d[17] * d[22] * d[28] * d[39] + 2 * d[11] * d[24] * d[28] * d[39] - 2 * d[13] * d[26] * d[28] * d[39] + 2 * d[15] * d[19] * d[29] * d[39] - 2 * d[16] * d[21] * d[29] * d[39] + 2 * d[10] * d[24] * d[29] * d[39] - 2 * d[12] * d[25] * d[29] * d[39] - 2 * d[16] * d[20] * d[30] * d[39] + 2 * d[17] * d[23] * d[30] * d[39] - 2 * d[11] * d[25] * d[30] * d[39] + 2 * d[14] * d[26] * d[30] * d[39] - 2 * d[17] * d[19] * d[31] * d[39] + 2 * d[16] * d[23] * d[31] * d[39] + 2 * d[14] * d[25] * d[31] * d[39] - 2 * d[10] * d[26] * d[31] * d[39] + 2 * d[17] * d[21] * d[32] * d[39] + 2 * d[16] * d[22] * d[32] * d[39] - 4 * d[15] * d[23] * d[32] * d[39] - 4 * d[14] * d[24] * d[32] * d[39] + 2 * d[13] * d[25] * d[32] * d[39] + 2 * d[12] * d[26] * d[32] * d[39] + 2 * d[11] * d[19] * d[33] * d[39] + 2 * d[10] * d[20] * d[33] * d[39] - 4 * d[14] * d[23] * d[33] * d[39] - 2 * d[12] * d[20] * d[34] * d[39] - 2 * d[11] * d[21] * d[34] * d[39] + 2 * d[14] * d[22] * d[34] * d[39] + 2 * d[13] * d[23] * d[34] * d[39] - 2 * d[13] * d[19] * d[35] * d[39] + 2 * d[14] * d[21] * d[35] * d[39] - 2 * d[10] * d[22] * d[35] * d[39] + 2 * d[12] * d[23] * d[35] * d[39] + 2 * d[16] * d[20] * d[27] * d[40] - 2 * d[17] * d[23] * d[27] * d[40] + 2 * d[11] * d[25] * d[27] * d[40] - 2 * d[14] * d[26] * d[27] * d[40] + 2 * d[16] * d[18] * d[29] * d[40] - 2 * d[15] * d[21] * d[29] * d[40] - 2 * d[12] * d[24] * d[29] * d[40] + 2 * d[9] * d[25] * d[29] * d[40] - 2 * d[15] * d[20] * d[30] * d[40] + 2 * d[17] * d[22] * d[30] * d[40] - 2 * d[11] * d[24] * d[30] * d[40] + 2 * d[13] * d[26] * d[30] * d[40] + 2 * d[17] * d[21] * d[31] * d[40] - 4 * d[16] * d[22] * d[31] * d[40] + 2 * d[15] * d[23] * d[31] * d[40] + 2 * d[14] * d[24] * d[31] * d[40] - 4 * d[13] * d[25] * d[31] * d[40] + 2 * d[12] * d[26] * d[31] * d[40] - 2 * d[17] * d[18] * d[32] * d[40] + 2 * d[15] * d[22] * d[32] * d[40] + 2 * d[13] * d[24] * d[32] * d[40] - 2 * d[9] * d[26] * d[32] * d[40] - 2 * d[12] * d[20] * d[33] * d[40] - 2 * d[11] * d[21] * d[33] * d[40] + 2 * d[14] * d[22] * d[33] * d[40] + 2 * d[13] * d[23] * d[33] * d[40] + 2 * d[11] * d[18] * d[34] * d[40] + 2 * d[9] * d[20] * d[34] * d[40] - 4 * d[13] * d[22] * d[34] * d[40] - 2 * d[14] * d[18] * d[35] * d[40] + 2 * d[13] * d[21] * d[35] * d[40] + 2 * d[12] * d[22] * d[35] * d[40] - 2 * d[9] * d[23] * d[35] * d[40] + 2 * d[17] * d[19] * d[27] * d[41] - 2 * d[16] * d[23] * d[27] * d[41] - 2 * d[14] * d[25] * d[27] * d[41] + 2 * d[10] * d[26] * d[27] * d[41] + 2 * d[17] * d[18] * d[28] * d[41] - 2 * d[15] * d[22] * d[28] * d[41] - 2 * d[13] * d[24] * d[28] * d[41] + 2 * d[9] * d[26] * d[28] * d[41] - 4 * d[17] * d[21] * d[30] * d[41] + 2 * d[16] * d[22] * d[30] * d[41] + 2 * d[15] * d[23] * d[30] * d[41] + 2 * d[14] * d[24] * d[30] * d[41] + 2 * d[13] * d[25] * d[30] * d[41] - 4 * d[12] * d[26] * d[30] * d[41] - 2 * d[15] * d[19] * d[31] * d[41] + 2 * d[16] * d[21] * d[31] * d[41] - 2 * d[10] * d[24] * d[31] * d[41] + 2 * d[12] * d[25] * d[31] * d[41] - 2 * d[16] * d[18] * d[32] * d[41] + 2 * d[15] * d[21] * d[32] * d[41] + 2 * d[12] * d[24] * d[32] * d[41] - 2 * d[9] * d[25] * d[32] * d[41] - 2 * d[13] * d[19] * d[33] * d[41] + 2 * d[14] * d[21] * d[33] * d[41] - 2 * d[10] * d[22] * d[33] * d[41] + 2 * d[12] * d[23] * d[33] * d[41] - 2 * d[14] * d[18] * d[34] * d[41] + 2 * d[13] * d[21] * d[34] * d[41] + 2 * d[12] * d[22] * d[34] * d[41] - 2 * d[9] * d[23] * d[34] * d[41] + 2 * d[10] * d[18] * d[35] * d[41] + 2 * d[9] * d[19] * d[35] * d[41] - 4 * d[12] * d[21] * d[35] * d[41] - d[11] * d[19] * d[27] * d[43] - d[10] * d[20] * d[27] * d[43] + 2 * d[14] * d[23] * d[27] * d[43] - d[11] * d[18] * d[28] * d[43] - d[9] * d[20] * d[28] * d[43] + 2 * d[13] * d[22] * d[28] * d[43] - d[10] * d[18] * d[29] * d[43] - d[9] * d[19] * d[29] * d[43] + 2 * d[12] * d[21] * d[29] * d[43] + 2 * d[12] * d[20] * d[30] * d[43] + 2 * d[11] * d[21] * d[30] * d[43] - 2 * d[14] * d[22] * d[30] * d[43] - 2 * d[13] * d[23] * d[30] * d[43] + 2 * d[13] * d[19] * d[31] * d[43] - 2 * d[14] * d[21] * d[31] * d[43] + 2 * d[10] * d[22] * d[31] * d[43] - 2 * d[12] * d[23] * d[31] * d[43] + 2 * d[14] * d[18] * d[32] * d[43] - 2 * d[13] * d[21] * d[32] * d[43] - 2 * d[12] * d[22] * d[32] * d[43] + 2 * d[9] * d[23] * d[32] * d[43];
    coeffs[26] = 2 * d[20] * d[24] * d[28] * d[39] - 2 * d[22] * d[26] * d[28] * d[39] + 2 * d[19] * d[24] * d[29] * d[39] - 2 * d[21] * d[25] * d[29] * d[39] - 2 * d[20] * d[25] * d[30] * d[39] + 2 * d[23] * d[26] * d[30] * d[39] + 2 * d[23] * d[25] * d[31] * d[39] - 2 * d[19] * d[26] * d[31] * d[39] - 4 * d[23] * d[24] * d[32] * d[39] + 2 * d[22] * d[25] * d[32] * d[39] + 2 * d[21] * d[26] * d[32] * d[39] + 2 * d[19] * d[20] * d[33] * d[39] - 2 * std::pow(d[23], 2) * d[33] * d[39] - 2 * d[20] * d[21] * d[34] * d[39] + 2 * d[22] * d[23] * d[34] * d[39] - 2 * d[19] * d[22] * d[35] * d[39] + 2 * d[21] * d[23] * d[35] * d[39] + 2 * d[20] * d[25] * d[27] * d[40] - 2 * d[23] * d[26] * d[27] * d[40] - 2 * d[21] * d[24] * d[29] * d[40] + 2 * d[18] * d[25] * d[29] * d[40] - 2 * d[20] * d[24] * d[30] * d[40] + 2 * d[22] * d[26] * d[30] * d[40] + 2 * d[23] * d[24] * d[31] * d[40] - 4 * d[22] * d[25] * d[31] * d[40] + 2 * d[21] * d[26] * d[31] * d[40] + 2 * d[22] * d[24] * d[32] * d[40] - 2 * d[18] * d[26] * d[32] * d[40] - 2 * d[20] * d[21] * d[33] * d[40] + 2 * d[22] * d[23] * d[33] * d[40] + 2 * d[18] * d[20] * d[34] * d[40] - 2 * std::pow(d[22], 2) * d[34] * d[40] + 2 * d[21] * d[22] * d[35] * d[40] - 2 * d[18] * d[23] * d[35] * d[40] - 2 * d[23] * d[25] * d[27] * d[41] + 2 * d[19] * d[26] * d[27] * d[41] - 2 * d[22] * d[24] * d[28] * d[41] + 2 * d[18] * d[26] * d[28] * d[41] + 2 * d[23] * d[24] * d[30] * d[41] + 2 * d[22] * d[25] * d[30] * d[41] - 4 * d[21] * d[26] * d[30] * d[41] - 2 * d[19] * d[24] * d[31] * d[41] + 2 * d[21] * d[25] * d[31] * d[41] + 2 * d[21] * d[24] * d[32] * d[41] - 2 * d[18] * d[25] * d[32] * d[41] - 2 * d[19] * d[22] * d[33] * d[41] + 2 * d[21] * d[23] * d[33] * d[41] + 2 * d[21] * d[22] * d[34] * d[41] - 2 * d[18] * d[23] * d[34] * d[41] + 2 * d[18] * d[19] * d[35] * d[41] - 2 * std::pow(d[21], 2) * d[35] * d[41] - d[19] * d[20] * d[27] * d[43] + std::pow(d[23], 2) * d[27] * d[43] - d[18] * d[20] * d[28] * d[43] + std::pow(d[22], 2) * d[28] * d[43] - d[18] * d[19] * d[29] * d[43] + std::pow(d[21], 2) * d[29] * d[43] + 2 * d[20] * d[21] * d[30] * d[43] - 2 * d[22] * d[23] * d[30] * d[43] + 2 * d[19] * d[22] * d[31] * d[43] - 2 * d[21] * d[23] * d[31] * d[43] - 2 * d[21] * d[22] * d[32] * d[43] + 2 * d[18] * d[23] * d[32] * d[43];
    coeffs[27] = 2 * d[15] * d[28] * d[29] * d[39] - 2 * d[16] * d[29] * d[30] * d[39] - 2 * d[17] * d[28] * d[31] * d[39] + 2 * d[17] * d[30] * d[32] * d[39] + 2 * d[16] * d[31] * d[32] * d[39] - 2 * d[15] * std::pow(d[32], 2) * d[39] + 2 * d[11] * d[28] * d[33] * d[39] + 2 * d[10] * d[29] * d[33] * d[39] - 4 * d[14] * d[32] * d[33] * d[39] - 2 * d[12] * d[29] * d[34] * d[39] - 2 * d[11] * d[30] * d[34] * d[39] + 2 * d[14] * d[31] * d[34] * d[39] + 2 * d[13] * d[32] * d[34] * d[39] - 2 * d[13] * d[28] * d[35] * d[39] + 2 * d[14] * d[30] * d[35] * d[39] - 2 * d[10] * d[31] * d[35] * d[39] + 2 * d[12] * d[32] * d[35] * d[39] + 2 * d[16] * d[27] * d[29] * d[40] - 2 * d[15] * d[29] * d[30] * d[40] + 2 * d[17] * d[30] * d[31] * d[40] - 2 * d[16] * std::pow(d[31], 2) * d[40] - 2 * d[17] * d[27] * d[32] * d[40] + 2 * d[15] * d[31] * d[32] * d[40] - 2 * d[12] * d[29] * d[33] * d[40] - 2 * d[11] * d[30] * d[33] * d[40] + 2 * d[14] * d[31] * d[33] * d[40] + 2 * d[13] * d[32] * d[33] * d[40] + 2 * d[11] * d[27] * d[34] * d[40] + 2 * d[9] * d[29] * d[34] * d[40] - 4 * d[13] * d[31] * d[34] * d[40] - 2 * d[14] * d[27] * d[35] * d[40] + 2 * d[13] * d[30] * d[35] * d[40] + 2 * d[12] * d[31] * d[35] * d[40] - 2 * d[9] * d[32] * d[35] * d[40] + 2 * d[17] * d[27] * d[28] * d[41] - 2 * d[17] * std::pow(d[30], 2) * d[41] - 2 * d[15] * d[28] * d[31] * d[41] + 2 * d[16] * d[30] * d[31] * d[41] - 2 * d[16] * d[27] * d[32] * d[41] + 2 * d[15] * d[30] * d[32] * d[41] - 2 * d[13] * d[28] * d[33] * d[41] + 2 * d[14] * d[30] * d[33] * d[41] - 2 * d[10] * d[31] * d[33] * d[41] + 2 * d[12] * d[32] * d[33] * d[41] - 2 * d[14] * d[27] * d[34] * d[41] + 2 * d[13] * d[30] * d[34] * d[41] + 2 * d[12] * d[31] * d[34] * d[41] - 2 * d[9] * d[32] * d[34] * d[41] + 2 * d[10] * d[27] * d[35] * d[41] + 2 * d[9] * d[28] * d[35] * d[41] - 4 * d[12] * d[30] * d[35] * d[41] - d[11] * d[27] * d[28] * d[43] - d[10] * d[27] * d[29] * d[43] - d[9] * d[28] * d[29] * d[43] + 2 * d[12] * d[29] * d[30] * d[43] + d[11] * std::pow(d[30], 2) * d[43] + 2 * d[13] * d[28] * d[31] * d[43] - 2 * d[14] * d[30] * d[31] * d[43] + d[10] * std::pow(d[31], 2) * d[43] + 2 * d[14] * d[27] * d[32] * d[43] - 2 * d[13] * d[30] * d[32] * d[43] - 2 * d[12] * d[31] * d[32] * d[43] + d[9] * std::pow(d[32], 2) * d[43];
    coeffs[28] = 2 * d[24] * d[28] * d[29] * d[39] - 2 * d[25] * d[29] * d[30] * d[39] - 2 * d[26] * d[28] * d[31] * d[39] + 2 * d[26] * d[30] * d[32] * d[39] + 2 * d[25] * d[31] * d[32] * d[39] - 2 * d[24] * std::pow(d[32], 2) * d[39] + 2 * d[20] * d[28] * d[33] * d[39] + 2 * d[19] * d[29] * d[33] * d[39] - 4 * d[23] * d[32] * d[33] * d[39] - 2 * d[21] * d[29] * d[34] * d[39] - 2 * d[20] * d[30] * d[34] * d[39] + 2 * d[23] * d[31] * d[34] * d[39] + 2 * d[22] * d[32] * d[34] * d[39] - 2 * d[22] * d[28] * d[35] * d[39] + 2 * d[23] * d[30] * d[35] * d[39] - 2 * d[19] * d[31] * d[35] * d[39] + 2 * d[21] * d[32] * d[35] * d[39] + 2 * d[25] * d[27] * d[29] * d[40] - 2 * d[24] * d[29] * d[30] * d[40] + 2 * d[26] * d[30] * d[31] * d[40] - 2 * d[25] * std::pow(d[31], 2) * d[40] - 2 * d[26] * d[27] * d[32] * d[40] + 2 * d[24] * d[31] * d[32] * d[40] - 2 * d[21] * d[29] * d[33] * d[40] - 2 * d[20] * d[30] * d[33] * d[40] + 2 * d[23] * d[31] * d[33] * d[40] + 2 * d[22] * d[32] * d[33] * d[40] + 2 * d[20] * d[27] * d[34] * d[40] + 2 * d[18] * d[29] * d[34] * d[40] - 4 * d[22] * d[31] * d[34] * d[40] - 2 * d[23] * d[27] * d[35] * d[40] + 2 * d[22] * d[30] * d[35] * d[40] + 2 * d[21] * d[31] * d[35] * d[40] - 2 * d[18] * d[32] * d[35] * d[40] + 2 * d[26] * d[27] * d[28] * d[41] - 2 * d[26] * std::pow(d[30], 2) * d[41] - 2 * d[24] * d[28] * d[31] * d[41] + 2 * d[25] * d[30] * d[31] * d[41] - 2 * d[25] * d[27] * d[32] * d[41] + 2 * d[24] * d[30] * d[32] * d[41] - 2 * d[22] * d[28] * d[33] * d[41] + 2 * d[23] * d[30] * d[33] * d[41] - 2 * d[19] * d[31] * d[33] * d[41] + 2 * d[21] * d[32] * d[33] * d[41] - 2 * d[23] * d[27] * d[34] * d[41] + 2 * d[22] * d[30] * d[34] * d[41] + 2 * d[21] * d[31] * d[34] * d[41] - 2 * d[18] * d[32] * d[34] * d[41] + 2 * d[19] * d[27] * d[35] * d[41] + 2 * d[18] * d[28] * d[35] * d[41] - 4 * d[21] * d[30] * d[35] * d[41] - d[20] * d[27] * d[28] * d[43] - d[19] * d[27] * d[29] * d[43] - d[18] * d[28] * d[29] * d[43] + 2 * d[21] * d[29] * d[30] * d[43] + d[20] * std::pow(d[30], 2) * d[43] + 2 * d[22] * d[28] * d[31] * d[43] - 2 * d[23] * d[30] * d[31] * d[43] + d[19] * std::pow(d[31], 2) * d[43] + 2 * d[23] * d[27] * d[32] * d[43] - 2 * d[22] * d[30] * d[32] * d[43] - 2 * d[21] * d[31] * d[32] * d[43] + d[18] * std::pow(d[32], 2) * d[43];
    coeffs[29] = 2 * d[28] * d[29] * d[33] * d[39] - 2 * std::pow(d[32], 2) * d[33] * d[39] - 2 * d[29] * d[30] * d[34] * d[39] + 2 * d[31] * d[32] * d[34] * d[39] - 2 * d[28] * d[31] * d[35] * d[39] + 2 * d[30] * d[32] * d[35] * d[39] - 2 * d[29] * d[30] * d[33] * d[40] + 2 * d[31] * d[32] * d[33] * d[40] + 2 * d[27] * d[29] * d[34] * d[40] - 2 * std::pow(d[31], 2) * d[34] * d[40] + 2 * d[30] * d[31] * d[35] * d[40] - 2 * d[27] * d[32] * d[35] * d[40] - 2 * d[28] * d[31] * d[33] * d[41] + 2 * d[30] * d[32] * d[33] * d[41] + 2 * d[30] * d[31] * d[34] * d[41] - 2 * d[27] * d[32] * d[34] * d[41] + 2 * d[27] * d[28] * d[35] * d[41] - 2 * std::pow(d[30], 2) * d[35] * d[41] - d[27] * d[28] * d[29] * d[43] + d[29] * std::pow(d[30], 2) * d[43] + d[28] * std::pow(d[31], 2) * d[43] - 2 * d[30] * d[31] * d[32] * d[43] + d[27] * std::pow(d[32], 2) * d[43];
    coeffs[30] = 2 * d[6] * d[10] * d[11] * d[39] - 2 * d[7] * d[11] * d[12] * d[39] - 2 * d[8] * d[10] * d[13] * d[39] + 2 * d[8] * d[12] * d[14] * d[39] + 2 * d[7] * d[13] * d[14] * d[39] - 2 * d[6] * std::pow(d[14], 2) * d[39] + 2 * d[2] * d[10] * d[15] * d[39] + 2 * d[1] * d[11] * d[15] * d[39] - 4 * d[5] * d[14] * d[15] * d[39] - 2 * d[3] * d[11] * d[16] * d[39] - 2 * d[2] * d[12] * d[16] * d[39] + 2 * d[5] * d[13] * d[16] * d[39] + 2 * d[4] * d[14] * d[16] * d[39] - 2 * d[4] * d[10] * d[17] * d[39] + 2 * d[5] * d[12] * d[17] * d[39] - 2 * d[1] * d[13] * d[17] * d[39] + 2 * d[3] * d[14] * d[17] * d[39] + d[10] * d[11] * std::pow(d[39], 2) - std::pow(d[14], 2) * std::pow(d[39], 2) + 2 * d[7] * d[9] * d[11] * d[40] - 2 * d[6] * d[11] * d[12] * d[40] + 2 * d[8] * d[12] * d[13] * d[40] - 2 * d[7] * std::pow(d[13], 2) * d[40] - 2 * d[8] * d[9] * d[14] * d[40] + 2 * d[6] * d[13] * d[14] * d[40] - 2 * d[3] * d[11] * d[15] * d[40] - 2 * d[2] * d[12] * d[15] * d[40] + 2 * d[5] * d[13] * d[15] * d[40] + 2 * d[4] * d[14] * d[15] * d[40] + 2 * d[2] * d[9] * d[16] * d[40] + 2 * d[0] * d[11] * d[16] * d[40] - 4 * d[4] * d[13] * d[16] * d[40] - 2 * d[5] * d[9] * d[17] * d[40] + 2 * d[4] * d[12] * d[17] * d[40] + 2 * d[3] * d[13] * d[17] * d[40] - 2 * d[0] * d[14] * d[17] * d[40] - 2 * d[11] * d[12] * d[39] * d[40] + 2 * d[13] * d[14] * d[39] * d[40] + d[9] * d[11] * std::pow(d[40], 2) - std::pow(d[13], 2) * std::pow(d[40], 2) + 2 * d[8] * d[9] * d[10] * d[41] - 2 * d[8] * std::pow(d[12], 2) * d[41] - 2 * d[6] * d[10] * d[13] * d[41] + 2 * d[7] * d[12] * d[13] * d[41] - 2 * d[7] * d[9] * d[14] * d[41] + 2 * d[6] * d[12] * d[14] * d[41] - 2 * d[4] * d[10] * d[15] * d[41] + 2 * d[5] * d[12] * d[15] * d[41] - 2 * d[1] * d[13] * d[15] * d[41] + 2 * d[3] * d[14] * d[15] * d[41] - 2 * d[5] * d[9] * d[16] * d[41] + 2 * d[4] * d[12] * d[16] * d[41] + 2 * d[3] * d[13] * d[16] * d[41] - 2 * d[0] * d[14] * d[16] * d[41] + 2 * d[1] * d[9] * d[17] * d[41] + 2 * d[0] * d[10] * d[17] * d[41] - 4 * d[3] * d[12] * d[17] * d[41] - 2 * d[10] * d[13] * d[39] * d[41] + 2 * d[12] * d[14] * d[39] * d[41] + 2 * d[12] * d[13] * d[40] * d[41] - 2 * d[9] * d[14] * d[40] * d[41] + d[9] * d[10] * std::pow(d[41], 2) - std::pow(d[12], 2) * std::pow(d[41], 2) - d[2] * d[9] * d[10] * d[43] - d[1] * d[9] * d[11] * d[43] - d[0] * d[10] * d[11] * d[43] + 2 * d[3] * d[11] * d[12] * d[43] + d[2] * std::pow(d[12], 2) * d[43] + 2 * d[4] * d[10] * d[13] * d[43] - 2 * d[5] * d[12] * d[13] * d[43] + d[1] * std::pow(d[13], 2) * d[43] + 2 * d[5] * d[9] * d[14] * d[43] - 2 * d[4] * d[12] * d[14] * d[43] - 2 * d[3] * d[13] * d[14] * d[43] + d[0] * std::pow(d[14], 2) * d[43];
    coeffs[31] = 2 * d[6] * d[11] * d[19] * d[39] - 2 * d[8] * d[13] * d[19] * d[39] + 2 * d[2] * d[15] * d[19] * d[39] - 2 * d[4] * d[17] * d[19] * d[39] + 2 * d[6] * d[10] * d[20] * d[39] - 2 * d[7] * d[12] * d[20] * d[39] + 2 * d[1] * d[15] * d[20] * d[39] - 2 * d[3] * d[16] * d[20] * d[39] - 2 * d[7] * d[11] * d[21] * d[39] + 2 * d[8] * d[14] * d[21] * d[39] - 2 * d[2] * d[16] * d[21] * d[39] + 2 * d[5] * d[17] * d[21] * d[39] - 2 * d[8] * d[10] * d[22] * d[39] + 2 * d[7] * d[14] * d[22] * d[39] + 2 * d[5] * d[16] * d[22] * d[39] - 2 * d[1] * d[17] * d[22] * d[39] + 2 * d[8] * d[12] * d[23] * d[39] + 2 * d[7] * d[13] * d[23] * d[39] - 4 * d[6] * d[14] * d[23] * d[39] - 4 * d[5] * d[15] * d[23] * d[39] + 2 * d[4] * d[16] * d[23] * d[39] + 2 * d[3] * d[17] * d[23] * d[39] + 2 * d[2] * d[10] * d[24] * d[39] + 2 * d[1] * d[11] * d[24] * d[39] - 4 * d[5] * d[14] * d[24] * d[39] - 2 * d[3] * d[11] * d[25] * d[39] - 2 * d[2] * d[12] * d[25] * d[39] + 2 * d[5] * d[13] * d[25] * d[39] + 2 * d[4] * d[14] * d[25] * d[39] - 2 * d[4] * d[10] * d[26] * d[39] + 2 * d[5] * d[12] * d[26] * d[39] - 2 * d[1] * d[13] * d[26] * d[39] + 2 * d[3] * d[14] * d[26] * d[39] + d[11] * d[19] * std::pow(d[39], 2) + d[10] * d[20] * std::pow(d[39], 2) - 2 * d[14] * d[23] * std::pow(d[39], 2) + 2 * d[7] * d[11] * d[18] * d[40] - 2 * d[8] * d[14] * d[18] * d[40] + 2 * d[2] * d[16] * d[18] * d[40] - 2 * d[5] * d[17] * d[18] * d[40] + 2 * d[7] * d[9] * d[20] * d[40] - 2 * d[6] * d[12] * d[20] * d[40] - 2 * d[3] * d[15] * d[20] * d[40] + 2 * d[0] * d[16] * d[20] * d[40] - 2 * d[6] * d[11] * d[21] * d[40] + 2 * d[8] * d[13] * d[21] * d[40] - 2 * d[2] * d[15] * d[21] * d[40] + 2 * d[4] * d[17] * d[21] * d[40] + 2 * d[8] * d[12] * d[22] * d[40] - 4 * d[7] * d[13] * d[22] * d[40] + 2 * d[6] * d[14] * d[22] * d[40] + 2 * d[5] * d[15] * d[22] * d[40] - 4 * d[4] * d[16] * d[22] * d[40] + 2 * d[3] * d[17] * d[22] * d[40] - 2 * d[8] * d[9] * d[23] * d[40] + 2 * d[6] * d[13] * d[23] * d[40] + 2 * d[4] * d[15] * d[23] * d[40] - 2 * d[0] * d[17] * d[23] * d[40] - 2 * d[3] * d[11] * d[24] * d[40] - 2 * d[2] * d[12] * d[24] * d[40] + 2 * d[5] * d[13] * d[24] * d[40] + 2 * d[4] * d[14] * d[24] * d[40] + 2 * d[2] * d[9] * d[25] * d[40] + 2 * d[0] * d[11] * d[25] * d[40] - 4 * d[4] * d[13] * d[25] * d[40] - 2 * d[5] * d[9] * d[26] * d[40] + 2 * d[4] * d[12] * d[26] * d[40] + 2 * d[3] * d[13] * d[26] * d[40] - 2 * d[0] * d[14] * d[26] * d[40] - 2 * d[12] * d[20] * d[39] * d[40] - 2 * d[11] * d[21] * d[39] * d[40] + 2 * d[14] * d[22] * d[39] * d[40] + 2 * d[13] * d[23] * d[39] * d[40] + d[11] * d[18] * std::pow(d[40], 2) + d[9] * d[20] * std::pow(d[40], 2) - 2 * d[13] * d[22] * std::pow(d[40], 2) + 2 * d[8] * d[10] * d[18] * d[41] - 2 * d[7] * d[14] * d[18] * d[41] - 2 * d[5] * d[16] * d[18] * d[41] + 2 * d[1] * d[17] * d[18] * d[41] + 2 * d[8] * d[9] * d[19] * d[41] - 2 * d[6] * d[13] * d[19] * d[41] - 2 * d[4] * d[15] * d[19] * d[41] + 2 * d[0] * d[17] * d[19] * d[41] - 4 * d[8] * d[12] * d[21] * d[41] + 2 * d[7] * d[13] * d[21] * d[41] + 2 * d[6] * d[14] * d[21] * d[41] + 2 * d[5] * d[15] * d[21] * d[41] + 2 * d[4] * d[16] * d[21] * d[41] - 4 * d[3] * d[17] * d[21] * d[41] - 2 * d[6] * d[10] * d[22] * d[41] + 2 * d[7] * d[12] * d[22] * d[41] - 2 * d[1] * d[15] * d[22] * d[41] + 2 * d[3] * d[16] * d[22] * d[41] - 2 * d[7] * d[9] * d[23] * d[41] + 2 * d[6] * d[12] * d[23] * d[41] + 2 * d[3] * d[15] * d[23] * d[41] - 2 * d[0] * d[16] * d[23] * d[41] - 2 * d[4] * d[10] * d[24] * d[41] + 2 * d[5] * d[12] * d[24] * d[41] - 2 * d[1] * d[13] * d[24] * d[41] + 2 * d[3] * d[14] * d[24] * d[41] - 2 * d[5] * d[9] * d[25] * d[41] + 2 * d[4] * d[12] * d[25] * d[41] + 2 * d[3] * d[13] * d[25] * d[41] - 2 * d[0] * d[14] * d[25] * d[41] + 2 * d[1] * d[9] * d[26] * d[41] + 2 * d[0] * d[10] * d[26] * d[41] - 4 * d[3] * d[12] * d[26] * d[41] - 2 * d[13] * d[19] * d[39] * d[41] + 2 * d[14] * d[21] * d[39] * d[41] - 2 * d[10] * d[22] * d[39] * d[41] + 2 * d[12] * d[23] * d[39] * d[41] - 2 * d[14] * d[18] * d[40] * d[41] + 2 * d[13] * d[21] * d[40] * d[41] + 2 * d[12] * d[22] * d[40] * d[41] - 2 * d[9] * d[23] * d[40] * d[41] + d[10] * d[18] * std::pow(d[41], 2) + d[9] * d[19] * std::pow(d[41], 2) - 2 * d[12] * d[21] * std::pow(d[41], 2) - d[2] * d[10] * d[18] * d[43] - d[1] * d[11] * d[18] * d[43] + 2 * d[5] * d[14] * d[18] * d[43] - d[2] * d[9] * d[19] * d[43] - d[0] * d[11] * d[19] * d[43] + 2 * d[4] * d[13] * d[19] * d[43] - d[1] * d[9] * d[20] * d[43] - d[0] * d[10] * d[20] * d[43] + 2 * d[3] * d[12] * d[20] * d[43] + 2 * d[3] * d[11] * d[21] * d[43] + 2 * d[2] * d[12] * d[21] * d[43] - 2 * d[5] * d[13] * d[21] * d[43] - 2 * d[4] * d[14] * d[21] * d[43] + 2 * d[4] * d[10] * d[22] * d[43] - 2 * d[5] * d[12] * d[22] * d[43] + 2 * d[1] * d[13] * d[22] * d[43] - 2 * d[3] * d[14] * d[22] * d[43] + 2 * d[5] * d[9] * d[23] * d[43] - 2 * d[4] * d[12] * d[23] * d[43] - 2 * d[3] * d[13] * d[23] * d[43] + 2 * d[0] * d[14] * d[23] * d[43];
    coeffs[32] = 2 * d[6] * d[19] * d[20] * d[39] - 2 * d[7] * d[20] * d[21] * d[39] - 2 * d[8] * d[19] * d[22] * d[39] + 2 * d[8] * d[21] * d[23] * d[39] + 2 * d[7] * d[22] * d[23] * d[39] - 2 * d[6] * std::pow(d[23], 2) * d[39] + 2 * d[2] * d[19] * d[24] * d[39] + 2 * d[1] * d[20] * d[24] * d[39] - 4 * d[5] * d[23] * d[24] * d[39] - 2 * d[3] * d[20] * d[25] * d[39] - 2 * d[2] * d[21] * d[25] * d[39] + 2 * d[5] * d[22] * d[25] * d[39] + 2 * d[4] * d[23] * d[25] * d[39] - 2 * d[4] * d[19] * d[26] * d[39] + 2 * d[5] * d[21] * d[26] * d[39] - 2 * d[1] * d[22] * d[26] * d[39] + 2 * d[3] * d[23] * d[26] * d[39] + d[19] * d[20] * std::pow(d[39], 2) - std::pow(d[23], 2) * std::pow(d[39], 2) + 2 * d[7] * d[18] * d[20] * d[40] - 2 * d[6] * d[20] * d[21] * d[40] + 2 * d[8] * d[21] * d[22] * d[40] - 2 * d[7] * std::pow(d[22], 2) * d[40] - 2 * d[8] * d[18] * d[23] * d[40] + 2 * d[6] * d[22] * d[23] * d[40] - 2 * d[3] * d[20] * d[24] * d[40] - 2 * d[2] * d[21] * d[24] * d[40] + 2 * d[5] * d[22] * d[24] * d[40] + 2 * d[4] * d[23] * d[24] * d[40] + 2 * d[2] * d[18] * d[25] * d[40] + 2 * d[0] * d[20] * d[25] * d[40] - 4 * d[4] * d[22] * d[25] * d[40] - 2 * d[5] * d[18] * d[26] * d[40] + 2 * d[4] * d[21] * d[26] * d[40] + 2 * d[3] * d[22] * d[26] * d[40] - 2 * d[0] * d[23] * d[26] * d[40] - 2 * d[20] * d[21] * d[39] * d[40] + 2 * d[22] * d[23] * d[39] * d[40] + d[18] * d[20] * std::pow(d[40], 2) - std::pow(d[22], 2) * std::pow(d[40], 2) + 2 * d[8] * d[18] * d[19] * d[41] - 2 * d[8] * std::pow(d[21], 2) * d[41] - 2 * d[6] * d[19] * d[22] * d[41] + 2 * d[7] * d[21] * d[22] * d[41] - 2 * d[7] * d[18] * d[23] * d[41] + 2 * d[6] * d[21] * d[23] * d[41] - 2 * d[4] * d[19] * d[24] * d[41] + 2 * d[5] * d[21] * d[24] * d[41] - 2 * d[1] * d[22] * d[24] * d[41] + 2 * d[3] * d[23] * d[24] * d[41] - 2 * d[5] * d[18] * d[25] * d[41] + 2 * d[4] * d[21] * d[25] * d[41] + 2 * d[3] * d[22] * d[25] * d[41] - 2 * d[0] * d[23] * d[25] * d[41] + 2 * d[1] * d[18] * d[26] * d[41] + 2 * d[0] * d[19] * d[26] * d[41] - 4 * d[3] * d[21] * d[26] * d[41] - 2 * d[19] * d[22] * d[39] * d[41] + 2 * d[21] * d[23] * d[39] * d[41] + 2 * d[21] * d[22] * d[40] * d[41] - 2 * d[18] * d[23] * d[40] * d[41] + d[18] * d[19] * std::pow(d[41], 2) - std::pow(d[21], 2) * std::pow(d[41], 2) - d[2] * d[18] * d[19] * d[43] - d[1] * d[18] * d[20] * d[43] - d[0] * d[19] * d[20] * d[43] + 2 * d[3] * d[20] * d[21] * d[43] + d[2] * std::pow(d[21], 2) * d[43] + 2 * d[4] * d[19] * d[22] * d[43] - 2 * d[5] * d[21] * d[22] * d[43] + d[1] * std::pow(d[22], 2) * d[43] + 2 * d[5] * d[18] * d[23] * d[43] - 2 * d[4] * d[21] * d[23] * d[43] - 2 * d[3] * d[22] * d[23] * d[43] + d[0] * std::pow(d[23], 2) * d[43];
    coeffs[33] = 2 * d[6] * d[11] * d[28] * d[39] - 2 * d[8] * d[13] * d[28] * d[39] + 2 * d[2] * d[15] * d[28] * d[39] - 2 * d[4] * d[17] * d[28] * d[39] + 2 * d[6] * d[10] * d[29] * d[39] - 2 * d[7] * d[12] * d[29] * d[39] + 2 * d[1] * d[15] * d[29] * d[39] - 2 * d[3] * d[16] * d[29] * d[39] - 2 * d[7] * d[11] * d[30] * d[39] + 2 * d[8] * d[14] * d[30] * d[39] - 2 * d[2] * d[16] * d[30] * d[39] + 2 * d[5] * d[17] * d[30] * d[39] - 2 * d[8] * d[10] * d[31] * d[39] + 2 * d[7] * d[14] * d[31] * d[39] + 2 * d[5] * d[16] * d[31] * d[39] - 2 * d[1] * d[17] * d[31] * d[39] + 2 * d[8] * d[12] * d[32] * d[39] + 2 * d[7] * d[13] * d[32] * d[39] - 4 * d[6] * d[14] * d[32] * d[39] - 4 * d[5] * d[15] * d[32] * d[39] + 2 * d[4] * d[16] * d[32] * d[39] + 2 * d[3] * d[17] * d[32] * d[39] + 2 * d[2] * d[10] * d[33] * d[39] + 2 * d[1] * d[11] * d[33] * d[39] - 4 * d[5] * d[14] * d[33] * d[39] - 2 * d[3] * d[11] * d[34] * d[39] - 2 * d[2] * d[12] * d[34] * d[39] + 2 * d[5] * d[13] * d[34] * d[39] + 2 * d[4] * d[14] * d[34] * d[39] - 2 * d[4] * d[10] * d[35] * d[39] + 2 * d[5] * d[12] * d[35] * d[39] - 2 * d[1] * d[13] * d[35] * d[39] + 2 * d[3] * d[14] * d[35] * d[39] + d[11] * d[28] * std::pow(d[39], 2) + d[10] * d[29] * std::pow(d[39], 2) - 2 * d[14] * d[32] * std::pow(d[39], 2) + 2 * d[7] * d[11] * d[27] * d[40] - 2 * d[8] * d[14] * d[27] * d[40] + 2 * d[2] * d[16] * d[27] * d[40] - 2 * d[5] * d[17] * d[27] * d[40] + 2 * d[7] * d[9] * d[29] * d[40] - 2 * d[6] * d[12] * d[29] * d[40] - 2 * d[3] * d[15] * d[29] * d[40] + 2 * d[0] * d[16] * d[29] * d[40] - 2 * d[6] * d[11] * d[30] * d[40] + 2 * d[8] * d[13] * d[30] * d[40] - 2 * d[2] * d[15] * d[30] * d[40] + 2 * d[4] * d[17] * d[30] * d[40] + 2 * d[8] * d[12] * d[31] * d[40] - 4 * d[7] * d[13] * d[31] * d[40] + 2 * d[6] * d[14] * d[31] * d[40] + 2 * d[5] * d[15] * d[31] * d[40] - 4 * d[4] * d[16] * d[31] * d[40] + 2 * d[3] * d[17] * d[31] * d[40] - 2 * d[8] * d[9] * d[32] * d[40] + 2 * d[6] * d[13] * d[32] * d[40] + 2 * d[4] * d[15] * d[32] * d[40] - 2 * d[0] * d[17] * d[32] * d[40] - 2 * d[3] * d[11] * d[33] * d[40] - 2 * d[2] * d[12] * d[33] * d[40] + 2 * d[5] * d[13] * d[33] * d[40] + 2 * d[4] * d[14] * d[33] * d[40] + 2 * d[2] * d[9] * d[34] * d[40] + 2 * d[0] * d[11] * d[34] * d[40] - 4 * d[4] * d[13] * d[34] * d[40] - 2 * d[5] * d[9] * d[35] * d[40] + 2 * d[4] * d[12] * d[35] * d[40] + 2 * d[3] * d[13] * d[35] * d[40] - 2 * d[0] * d[14] * d[35] * d[40] - 2 * d[12] * d[29] * d[39] * d[40] - 2 * d[11] * d[30] * d[39] * d[40] + 2 * d[14] * d[31] * d[39] * d[40] + 2 * d[13] * d[32] * d[39] * d[40] + d[11] * d[27] * std::pow(d[40], 2) + d[9] * d[29] * std::pow(d[40], 2) - 2 * d[13] * d[31] * std::pow(d[40], 2) + 2 * d[8] * d[10] * d[27] * d[41] - 2 * d[7] * d[14] * d[27] * d[41] - 2 * d[5] * d[16] * d[27] * d[41] + 2 * d[1] * d[17] * d[27] * d[41] + 2 * d[8] * d[9] * d[28] * d[41] - 2 * d[6] * d[13] * d[28] * d[41] - 2 * d[4] * d[15] * d[28] * d[41] + 2 * d[0] * d[17] * d[28] * d[41] - 4 * d[8] * d[12] * d[30] * d[41] + 2 * d[7] * d[13] * d[30] * d[41] + 2 * d[6] * d[14] * d[30] * d[41] + 2 * d[5] * d[15] * d[30] * d[41] + 2 * d[4] * d[16] * d[30] * d[41] - 4 * d[3] * d[17] * d[30] * d[41] - 2 * d[6] * d[10] * d[31] * d[41] + 2 * d[7] * d[12] * d[31] * d[41] - 2 * d[1] * d[15] * d[31] * d[41] + 2 * d[3] * d[16] * d[31] * d[41] - 2 * d[7] * d[9] * d[32] * d[41] + 2 * d[6] * d[12] * d[32] * d[41] + 2 * d[3] * d[15] * d[32] * d[41] - 2 * d[0] * d[16] * d[32] * d[41] - 2 * d[4] * d[10] * d[33] * d[41] + 2 * d[5] * d[12] * d[33] * d[41] - 2 * d[1] * d[13] * d[33] * d[41] + 2 * d[3] * d[14] * d[33] * d[41] - 2 * d[5] * d[9] * d[34] * d[41] + 2 * d[4] * d[12] * d[34] * d[41] + 2 * d[3] * d[13] * d[34] * d[41] - 2 * d[0] * d[14] * d[34] * d[41] + 2 * d[1] * d[9] * d[35] * d[41] + 2 * d[0] * d[10] * d[35] * d[41] - 4 * d[3] * d[12] * d[35] * d[41] - 2 * d[13] * d[28] * d[39] * d[41] + 2 * d[14] * d[30] * d[39] * d[41] - 2 * d[10] * d[31] * d[39] * d[41] + 2 * d[12] * d[32] * d[39] * d[41] - 2 * d[14] * d[27] * d[40] * d[41] + 2 * d[13] * d[30] * d[40] * d[41] + 2 * d[12] * d[31] * d[40] * d[41] - 2 * d[9] * d[32] * d[40] * d[41] + d[10] * d[27] * std::pow(d[41], 2) + d[9] * d[28] * std::pow(d[41], 2) - 2 * d[12] * d[30] * std::pow(d[41], 2) - d[2] * d[10] * d[27] * d[43] - d[1] * d[11] * d[27] * d[43] + 2 * d[5] * d[14] * d[27] * d[43] - d[2] * d[9] * d[28] * d[43] - d[0] * d[11] * d[28] * d[43] + 2 * d[4] * d[13] * d[28] * d[43] - d[1] * d[9] * d[29] * d[43] - d[0] * d[10] * d[29] * d[43] + 2 * d[3] * d[12] * d[29] * d[43] + 2 * d[3] * d[11] * d[30] * d[43] + 2 * d[2] * d[12] * d[30] * d[43] - 2 * d[5] * d[13] * d[30] * d[43] - 2 * d[4] * d[14] * d[30] * d[43] + 2 * d[4] * d[10] * d[31] * d[43] - 2 * d[5] * d[12] * d[31] * d[43] + 2 * d[1] * d[13] * d[31] * d[43] - 2 * d[3] * d[14] * d[31] * d[43] + 2 * d[5] * d[9] * d[32] * d[43] - 2 * d[4] * d[12] * d[32] * d[43] - 2 * d[3] * d[13] * d[32] * d[43] + 2 * d[0] * d[14] * d[32] * d[43];
    coeffs[34] = 2 * d[6] * d[20] * d[28] * d[39] - 2 * d[8] * d[22] * d[28] * d[39] + 2 * d[2] * d[24] * d[28] * d[39] - 2 * d[4] * d[26] * d[28] * d[39] + 2 * d[6] * d[19] * d[29] * d[39] - 2 * d[7] * d[21] * d[29] * d[39] + 2 * d[1] * d[24] * d[29] * d[39] - 2 * d[3] * d[25] * d[29] * d[39] - 2 * d[7] * d[20] * d[30] * d[39] + 2 * d[8] * d[23] * d[30] * d[39] - 2 * d[2] * d[25] * d[30] * d[39] + 2 * d[5] * d[26] * d[30] * d[39] - 2 * d[8] * d[19] * d[31] * d[39] + 2 * d[7] * d[23] * d[31] * d[39] + 2 * d[5] * d[25] * d[31] * d[39] - 2 * d[1] * d[26] * d[31] * d[39] + 2 * d[8] * d[21] * d[32] * d[39] + 2 * d[7] * d[22] * d[32] * d[39] - 4 * d[6] * d[23] * d[32] * d[39] - 4 * d[5] * d[24] * d[32] * d[39] + 2 * d[4] * d[25] * d[32] * d[39] + 2 * d[3] * d[26] * d[32] * d[39] + 2 * d[2] * d[19] * d[33] * d[39] + 2 * d[1] * d[20] * d[33] * d[39] - 4 * d[5] * d[23] * d[33] * d[39] - 2 * d[3] * d[20] * d[34] * d[39] - 2 * d[2] * d[21] * d[34] * d[39] + 2 * d[5] * d[22] * d[34] * d[39] + 2 * d[4] * d[23] * d[34] * d[39] - 2 * d[4] * d[19] * d[35] * d[39] + 2 * d[5] * d[21] * d[35] * d[39] - 2 * d[1] * d[22] * d[35] * d[39] + 2 * d[3] * d[23] * d[35] * d[39] + d[20] * d[28] * std::pow(d[39], 2) + d[19] * d[29] * std::pow(d[39], 2) - 2 * d[23] * d[32] * std::pow(d[39], 2) + 2 * d[7] * d[20] * d[27] * d[40] - 2 * d[8] * d[23] * d[27] * d[40] + 2 * d[2] * d[25] * d[27] * d[40] - 2 * d[5] * d[26] * d[27] * d[40] + 2 * d[7] * d[18] * d[29] * d[40] - 2 * d[6] * d[21] * d[29] * d[40] - 2 * d[3] * d[24] * d[29] * d[40] + 2 * d[0] * d[25] * d[29] * d[40] - 2 * d[6] * d[20] * d[30] * d[40] + 2 * d[8] * d[22] * d[30] * d[40] - 2 * d[2] * d[24] * d[30] * d[40] + 2 * d[4] * d[26] * d[30] * d[40] + 2 * d[8] * d[21] * d[31] * d[40] - 4 * d[7] * d[22] * d[31] * d[40] + 2 * d[6] * d[23] * d[31] * d[40] + 2 * d[5] * d[24] * d[31] * d[40] - 4 * d[4] * d[25] * d[31] * d[40] + 2 * d[3] * d[26] * d[31] * d[40] - 2 * d[8] * d[18] * d[32] * d[40] + 2 * d[6] * d[22] * d[32] * d[40] + 2 * d[4] * d[24] * d[32] * d[40] - 2 * d[0] * d[26] * d[32] * d[40] - 2 * d[3] * d[20] * d[33] * d[40] - 2 * d[2] * d[21] * d[33] * d[40] + 2 * d[5] * d[22] * d[33] * d[40] + 2 * d[4] * d[23] * d[33] * d[40] + 2 * d[2] * d[18] * d[34] * d[40] + 2 * d[0] * d[20] * d[34] * d[40] - 4 * d[4] * d[22] * d[34] * d[40] - 2 * d[5] * d[18] * d[35] * d[40] + 2 * d[4] * d[21] * d[35] * d[40] + 2 * d[3] * d[22] * d[35] * d[40] - 2 * d[0] * d[23] * d[35] * d[40] - 2 * d[21] * d[29] * d[39] * d[40] - 2 * d[20] * d[30] * d[39] * d[40] + 2 * d[23] * d[31] * d[39] * d[40] + 2 * d[22] * d[32] * d[39] * d[40] + d[20] * d[27] * std::pow(d[40], 2) + d[18] * d[29] * std::pow(d[40], 2) - 2 * d[22] * d[31] * std::pow(d[40], 2) + 2 * d[8] * d[19] * d[27] * d[41] - 2 * d[7] * d[23] * d[27] * d[41] - 2 * d[5] * d[25] * d[27] * d[41] + 2 * d[1] * d[26] * d[27] * d[41] + 2 * d[8] * d[18] * d[28] * d[41] - 2 * d[6] * d[22] * d[28] * d[41] - 2 * d[4] * d[24] * d[28] * d[41] + 2 * d[0] * d[26] * d[28] * d[41] - 4 * d[8] * d[21] * d[30] * d[41] + 2 * d[7] * d[22] * d[30] * d[41] + 2 * d[6] * d[23] * d[30] * d[41] + 2 * d[5] * d[24] * d[30] * d[41] + 2 * d[4] * d[25] * d[30] * d[41] - 4 * d[3] * d[26] * d[30] * d[41] - 2 * d[6] * d[19] * d[31] * d[41] + 2 * d[7] * d[21] * d[31] * d[41] - 2 * d[1] * d[24] * d[31] * d[41] + 2 * d[3] * d[25] * d[31] * d[41] - 2 * d[7] * d[18] * d[32] * d[41] + 2 * d[6] * d[21] * d[32] * d[41] + 2 * d[3] * d[24] * d[32] * d[41] - 2 * d[0] * d[25] * d[32] * d[41] - 2 * d[4] * d[19] * d[33] * d[41] + 2 * d[5] * d[21] * d[33] * d[41] - 2 * d[1] * d[22] * d[33] * d[41] + 2 * d[3] * d[23] * d[33] * d[41] - 2 * d[5] * d[18] * d[34] * d[41] + 2 * d[4] * d[21] * d[34] * d[41] + 2 * d[3] * d[22] * d[34] * d[41] - 2 * d[0] * d[23] * d[34] * d[41] + 2 * d[1] * d[18] * d[35] * d[41] + 2 * d[0] * d[19] * d[35] * d[41] - 4 * d[3] * d[21] * d[35] * d[41] - 2 * d[22] * d[28] * d[39] * d[41] + 2 * d[23] * d[30] * d[39] * d[41] - 2 * d[19] * d[31] * d[39] * d[41] + 2 * d[21] * d[32] * d[39] * d[41] - 2 * d[23] * d[27] * d[40] * d[41] + 2 * d[22] * d[30] * d[40] * d[41] + 2 * d[21] * d[31] * d[40] * d[41] - 2 * d[18] * d[32] * d[40] * d[41] + d[19] * d[27] * std::pow(d[41], 2) + d[18] * d[28] * std::pow(d[41], 2) - 2 * d[21] * d[30] * std::pow(d[41], 2) - d[2] * d[19] * d[27] * d[43] - d[1] * d[20] * d[27] * d[43] + 2 * d[5] * d[23] * d[27] * d[43] - d[2] * d[18] * d[28] * d[43] - d[0] * d[20] * d[28] * d[43] + 2 * d[4] * d[22] * d[28] * d[43] - d[1] * d[18] * d[29] * d[43] - d[0] * d[19] * d[29] * d[43] + 2 * d[3] * d[21] * d[29] * d[43] + 2 * d[3] * d[20] * d[30] * d[43] + 2 * d[2] * d[21] * d[30] * d[43] - 2 * d[5] * d[22] * d[30] * d[43] - 2 * d[4] * d[23] * d[30] * d[43] + 2 * d[4] * d[19] * d[31] * d[43] - 2 * d[5] * d[21] * d[31] * d[43] + 2 * d[1] * d[22] * d[31] * d[43] - 2 * d[3] * d[23] * d[31] * d[43] + 2 * d[5] * d[18] * d[32] * d[43] - 2 * d[4] * d[21] * d[32] * d[43] - 2 * d[3] * d[22] * d[32] * d[43] + 2 * d[0] * d[23] * d[32] * d[43];
    coeffs[35] = 2 * d[6] * d[28] * d[29] * d[39] - 2 * d[7] * d[29] * d[30] * d[39] - 2 * d[8] * d[28] * d[31] * d[39] + 2 * d[8] * d[30] * d[32] * d[39] + 2 * d[7] * d[31] * d[32] * d[39] - 2 * d[6] * std::pow(d[32], 2) * d[39] + 2 * d[2] * d[28] * d[33] * d[39] + 2 * d[1] * d[29] * d[33] * d[39] - 4 * d[5] * d[32] * d[33] * d[39] - 2 * d[3] * d[29] * d[34] * d[39] - 2 * d[2] * d[30] * d[34] * d[39] + 2 * d[5] * d[31] * d[34] * d[39] + 2 * d[4] * d[32] * d[34] * d[39] - 2 * d[4] * d[28] * d[35] * d[39] + 2 * d[5] * d[30] * d[35] * d[39] - 2 * d[1] * d[31] * d[35] * d[39] + 2 * d[3] * d[32] * d[35] * d[39] + d[28] * d[29] * std::pow(d[39], 2) - std::pow(d[32], 2) * std::pow(d[39], 2) + 2 * d[7] * d[27] * d[29] * d[40] - 2 * d[6] * d[29] * d[30] * d[40] + 2 * d[8] * d[30] * d[31] * d[40] - 2 * d[7] * std::pow(d[31], 2) * d[40] - 2 * d[8] * d[27] * d[32] * d[40] + 2 * d[6] * d[31] * d[32] * d[40] - 2 * d[3] * d[29] * d[33] * d[40] - 2 * d[2] * d[30] * d[33] * d[40] + 2 * d[5] * d[31] * d[33] * d[40] + 2 * d[4] * d[32] * d[33] * d[40] + 2 * d[2] * d[27] * d[34] * d[40] + 2 * d[0] * d[29] * d[34] * d[40] - 4 * d[4] * d[31] * d[34] * d[40] - 2 * d[5] * d[27] * d[35] * d[40] + 2 * d[4] * d[30] * d[35] * d[40] + 2 * d[3] * d[31] * d[35] * d[40] - 2 * d[0] * d[32] * d[35] * d[40] - 2 * d[29] * d[30] * d[39] * d[40] + 2 * d[31] * d[32] * d[39] * d[40] + d[27] * d[29] * std::pow(d[40], 2) - std::pow(d[31], 2) * std::pow(d[40], 2) + 2 * d[8] * d[27] * d[28] * d[41] - 2 * d[8] * std::pow(d[30], 2) * d[41] - 2 * d[6] * d[28] * d[31] * d[41] + 2 * d[7] * d[30] * d[31] * d[41] - 2 * d[7] * d[27] * d[32] * d[41] + 2 * d[6] * d[30] * d[32] * d[41] - 2 * d[4] * d[28] * d[33] * d[41] + 2 * d[5] * d[30] * d[33] * d[41] - 2 * d[1] * d[31] * d[33] * d[41] + 2 * d[3] * d[32] * d[33] * d[41] - 2 * d[5] * d[27] * d[34] * d[41] + 2 * d[4] * d[30] * d[34] * d[41] + 2 * d[3] * d[31] * d[34] * d[41] - 2 * d[0] * d[32] * d[34] * d[41] + 2 * d[1] * d[27] * d[35] * d[41] + 2 * d[0] * d[28] * d[35] * d[41] - 4 * d[3] * d[30] * d[35] * d[41] - 2 * d[28] * d[31] * d[39] * d[41] + 2 * d[30] * d[32] * d[39] * d[41] + 2 * d[30] * d[31] * d[40] * d[41] - 2 * d[27] * d[32] * d[40] * d[41] + d[27] * d[28] * std::pow(d[41], 2) - std::pow(d[30], 2) * std::pow(d[41], 2) - d[2] * d[27] * d[28] * d[43] - d[1] * d[27] * d[29] * d[43] - d[0] * d[28] * d[29] * d[43] + 2 * d[3] * d[29] * d[30] * d[43] + d[2] * std::pow(d[30], 2) * d[43] + 2 * d[4] * d[28] * d[31] * d[43] - 2 * d[5] * d[30] * d[31] * d[43] + d[1] * std::pow(d[31], 2) * d[43] + 2 * d[5] * d[27] * d[32] * d[43] - 2 * d[4] * d[30] * d[32] * d[43] - 2 * d[3] * d[31] * d[32] * d[43] + d[0] * std::pow(d[32], 2) * d[43];
    coeffs[36] = 2 * d[2] * d[6] * d[10] * d[39] - 2 * d[4] * d[8] * d[10] * d[39] + 2 * d[1] * d[6] * d[11] * d[39] - 2 * d[3] * d[7] * d[11] * d[39] - 2 * d[2] * d[7] * d[12] * d[39] + 2 * d[5] * d[8] * d[12] * d[39] + 2 * d[5] * d[7] * d[13] * d[39] - 2 * d[1] * d[8] * d[13] * d[39] - 4 * d[5] * d[6] * d[14] * d[39] + 2 * d[4] * d[7] * d[14] * d[39] + 2 * d[3] * d[8] * d[14] * d[39] + 2 * d[1] * d[2] * d[15] * d[39] - 2 * std::pow(d[5], 2) * d[15] * d[39] - 2 * d[2] * d[3] * d[16] * d[39] + 2 * d[4] * d[5] * d[16] * d[39] - 2 * d[1] * d[4] * d[17] * d[39] + 2 * d[3] * d[5] * d[17] * d[39] + d[2] * d[10] * std::pow(d[39], 2) + d[1] * d[11] * std::pow(d[39], 2) - 2 * d[5] * d[14] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[9] * d[40] - 2 * d[5] * d[8] * d[9] * d[40] - 2 * d[3] * d[6] * d[11] * d[40] + 2 * d[0] * d[7] * d[11] * d[40] - 2 * d[2] * d[6] * d[12] * d[40] + 2 * d[4] * d[8] * d[12] * d[40] + 2 * d[5] * d[6] * d[13] * d[40] - 4 * d[4] * d[7] * d[13] * d[40] + 2 * d[3] * d[8] * d[13] * d[40] + 2 * d[4] * d[6] * d[14] * d[40] - 2 * d[0] * d[8] * d[14] * d[40] - 2 * d[2] * d[3] * d[15] * d[40] + 2 * d[4] * d[5] * d[15] * d[40] + 2 * d[0] * d[2] * d[16] * d[40] - 2 * std::pow(d[4], 2) * d[16] * d[40] + 2 * d[3] * d[4] * d[17] * d[40] - 2 * d[0] * d[5] * d[17] * d[40] - 2 * d[3] * d[11] * d[39] * d[40] - 2 * d[2] * d[12] * d[39] * d[40] + 2 * d[5] * d[13] * d[39] * d[40] + 2 * d[4] * d[14] * d[39] * d[40] + d[2] * d[9] * std::pow(d[40], 2) + d[0] * d[11] * std::pow(d[40], 2) - 2 * d[4] * d[13] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[9] * d[41] + 2 * d[1] * d[8] * d[9] * d[41] - 2 * d[4] * d[6] * d[10] * d[41] + 2 * d[0] * d[8] * d[10] * d[41] + 2 * d[5] * d[6] * d[12] * d[41] + 2 * d[4] * d[7] * d[12] * d[41] - 4 * d[3] * d[8] * d[12] * d[41] - 2 * d[1] * d[6] * d[13] * d[41] + 2 * d[3] * d[7] * d[13] * d[41] + 2 * d[3] * d[6] * d[14] * d[41] - 2 * d[0] * d[7] * d[14] * d[41] - 2 * d[1] * d[4] * d[15] * d[41] + 2 * d[3] * d[5] * d[15] * d[41] + 2 * d[3] * d[4] * d[16] * d[41] - 2 * d[0] * d[5] * d[16] * d[41] + 2 * d[0] * d[1] * d[17] * d[41] - 2 * std::pow(d[3], 2) * d[17] * d[41] - 2 * d[4] * d[10] * d[39] * d[41] + 2 * d[5] * d[12] * d[39] * d[41] - 2 * d[1] * d[13] * d[39] * d[41] + 2 * d[3] * d[14] * d[39] * d[41] - 2 * d[5] * d[9] * d[40] * d[41] + 2 * d[4] * d[12] * d[40] * d[41] + 2 * d[3] * d[13] * d[40] * d[41] - 2 * d[0] * d[14] * d[40] * d[41] + d[1] * d[9] * std::pow(d[41], 2) + d[0] * d[10] * std::pow(d[41], 2) - 2 * d[3] * d[12] * std::pow(d[41], 2) - d[1] * d[2] * d[9] * d[43] + std::pow(d[5], 2) * d[9] * d[43] - d[0] * d[2] * d[10] * d[43] + std::pow(d[4], 2) * d[10] * d[43] - d[0] * d[1] * d[11] * d[43] + std::pow(d[3], 2) * d[11] * d[43] + 2 * d[2] * d[3] * d[12] * d[43] - 2 * d[4] * d[5] * d[12] * d[43] + 2 * d[1] * d[4] * d[13] * d[43] - 2 * d[3] * d[5] * d[13] * d[43] - 2 * d[3] * d[4] * d[14] * d[43] + 2 * d[0] * d[5] * d[14] * d[43];
    coeffs[37] = 2 * d[2] * d[6] * d[19] * d[39] - 2 * d[4] * d[8] * d[19] * d[39] + 2 * d[1] * d[6] * d[20] * d[39] - 2 * d[3] * d[7] * d[20] * d[39] - 2 * d[2] * d[7] * d[21] * d[39] + 2 * d[5] * d[8] * d[21] * d[39] + 2 * d[5] * d[7] * d[22] * d[39] - 2 * d[1] * d[8] * d[22] * d[39] - 4 * d[5] * d[6] * d[23] * d[39] + 2 * d[4] * d[7] * d[23] * d[39] + 2 * d[3] * d[8] * d[23] * d[39] + 2 * d[1] * d[2] * d[24] * d[39] - 2 * std::pow(d[5], 2) * d[24] * d[39] - 2 * d[2] * d[3] * d[25] * d[39] + 2 * d[4] * d[5] * d[25] * d[39] - 2 * d[1] * d[4] * d[26] * d[39] + 2 * d[3] * d[5] * d[26] * d[39] + d[2] * d[19] * std::pow(d[39], 2) + d[1] * d[20] * std::pow(d[39], 2) - 2 * d[5] * d[23] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[18] * d[40] - 2 * d[5] * d[8] * d[18] * d[40] - 2 * d[3] * d[6] * d[20] * d[40] + 2 * d[0] * d[7] * d[20] * d[40] - 2 * d[2] * d[6] * d[21] * d[40] + 2 * d[4] * d[8] * d[21] * d[40] + 2 * d[5] * d[6] * d[22] * d[40] - 4 * d[4] * d[7] * d[22] * d[40] + 2 * d[3] * d[8] * d[22] * d[40] + 2 * d[4] * d[6] * d[23] * d[40] - 2 * d[0] * d[8] * d[23] * d[40] - 2 * d[2] * d[3] * d[24] * d[40] + 2 * d[4] * d[5] * d[24] * d[40] + 2 * d[0] * d[2] * d[25] * d[40] - 2 * std::pow(d[4], 2) * d[25] * d[40] + 2 * d[3] * d[4] * d[26] * d[40] - 2 * d[0] * d[5] * d[26] * d[40] - 2 * d[3] * d[20] * d[39] * d[40] - 2 * d[2] * d[21] * d[39] * d[40] + 2 * d[5] * d[22] * d[39] * d[40] + 2 * d[4] * d[23] * d[39] * d[40] + d[2] * d[18] * std::pow(d[40], 2) + d[0] * d[20] * std::pow(d[40], 2) - 2 * d[4] * d[22] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[18] * d[41] + 2 * d[1] * d[8] * d[18] * d[41] - 2 * d[4] * d[6] * d[19] * d[41] + 2 * d[0] * d[8] * d[19] * d[41] + 2 * d[5] * d[6] * d[21] * d[41] + 2 * d[4] * d[7] * d[21] * d[41] - 4 * d[3] * d[8] * d[21] * d[41] - 2 * d[1] * d[6] * d[22] * d[41] + 2 * d[3] * d[7] * d[22] * d[41] + 2 * d[3] * d[6] * d[23] * d[41] - 2 * d[0] * d[7] * d[23] * d[41] - 2 * d[1] * d[4] * d[24] * d[41] + 2 * d[3] * d[5] * d[24] * d[41] + 2 * d[3] * d[4] * d[25] * d[41] - 2 * d[0] * d[5] * d[25] * d[41] + 2 * d[0] * d[1] * d[26] * d[41] - 2 * std::pow(d[3], 2) * d[26] * d[41] - 2 * d[4] * d[19] * d[39] * d[41] + 2 * d[5] * d[21] * d[39] * d[41] - 2 * d[1] * d[22] * d[39] * d[41] + 2 * d[3] * d[23] * d[39] * d[41] - 2 * d[5] * d[18] * d[40] * d[41] + 2 * d[4] * d[21] * d[40] * d[41] + 2 * d[3] * d[22] * d[40] * d[41] - 2 * d[0] * d[23] * d[40] * d[41] + d[1] * d[18] * std::pow(d[41], 2) + d[0] * d[19] * std::pow(d[41], 2) - 2 * d[3] * d[21] * std::pow(d[41], 2) - d[1] * d[2] * d[18] * d[43] + std::pow(d[5], 2) * d[18] * d[43] - d[0] * d[2] * d[19] * d[43] + std::pow(d[4], 2) * d[19] * d[43] - d[0] * d[1] * d[20] * d[43] + std::pow(d[3], 2) * d[20] * d[43] + 2 * d[2] * d[3] * d[21] * d[43] - 2 * d[4] * d[5] * d[21] * d[43] + 2 * d[1] * d[4] * d[22] * d[43] - 2 * d[3] * d[5] * d[22] * d[43] - 2 * d[3] * d[4] * d[23] * d[43] + 2 * d[0] * d[5] * d[23] * d[43];
    coeffs[38] = 2 * d[2] * d[6] * d[28] * d[39] - 2 * d[4] * d[8] * d[28] * d[39] + 2 * d[1] * d[6] * d[29] * d[39] - 2 * d[3] * d[7] * d[29] * d[39] - 2 * d[2] * d[7] * d[30] * d[39] + 2 * d[5] * d[8] * d[30] * d[39] + 2 * d[5] * d[7] * d[31] * d[39] - 2 * d[1] * d[8] * d[31] * d[39] - 4 * d[5] * d[6] * d[32] * d[39] + 2 * d[4] * d[7] * d[32] * d[39] + 2 * d[3] * d[8] * d[32] * d[39] + 2 * d[1] * d[2] * d[33] * d[39] - 2 * std::pow(d[5], 2) * d[33] * d[39] - 2 * d[2] * d[3] * d[34] * d[39] + 2 * d[4] * d[5] * d[34] * d[39] - 2 * d[1] * d[4] * d[35] * d[39] + 2 * d[3] * d[5] * d[35] * d[39] + d[2] * d[28] * std::pow(d[39], 2) + d[1] * d[29] * std::pow(d[39], 2) - 2 * d[5] * d[32] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[27] * d[40] - 2 * d[5] * d[8] * d[27] * d[40] - 2 * d[3] * d[6] * d[29] * d[40] + 2 * d[0] * d[7] * d[29] * d[40] - 2 * d[2] * d[6] * d[30] * d[40] + 2 * d[4] * d[8] * d[30] * d[40] + 2 * d[5] * d[6] * d[31] * d[40] - 4 * d[4] * d[7] * d[31] * d[40] + 2 * d[3] * d[8] * d[31] * d[40] + 2 * d[4] * d[6] * d[32] * d[40] - 2 * d[0] * d[8] * d[32] * d[40] - 2 * d[2] * d[3] * d[33] * d[40] + 2 * d[4] * d[5] * d[33] * d[40] + 2 * d[0] * d[2] * d[34] * d[40] - 2 * std::pow(d[4], 2) * d[34] * d[40] + 2 * d[3] * d[4] * d[35] * d[40] - 2 * d[0] * d[5] * d[35] * d[40] - 2 * d[3] * d[29] * d[39] * d[40] - 2 * d[2] * d[30] * d[39] * d[40] + 2 * d[5] * d[31] * d[39] * d[40] + 2 * d[4] * d[32] * d[39] * d[40] + d[2] * d[27] * std::pow(d[40], 2) + d[0] * d[29] * std::pow(d[40], 2) - 2 * d[4] * d[31] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[27] * d[41] + 2 * d[1] * d[8] * d[27] * d[41] - 2 * d[4] * d[6] * d[28] * d[41] + 2 * d[0] * d[8] * d[28] * d[41] + 2 * d[5] * d[6] * d[30] * d[41] + 2 * d[4] * d[7] * d[30] * d[41] - 4 * d[3] * d[8] * d[30] * d[41] - 2 * d[1] * d[6] * d[31] * d[41] + 2 * d[3] * d[7] * d[31] * d[41] + 2 * d[3] * d[6] * d[32] * d[41] - 2 * d[0] * d[7] * d[32] * d[41] - 2 * d[1] * d[4] * d[33] * d[41] + 2 * d[3] * d[5] * d[33] * d[41] + 2 * d[3] * d[4] * d[34] * d[41] - 2 * d[0] * d[5] * d[34] * d[41] + 2 * d[0] * d[1] * d[35] * d[41] - 2 * std::pow(d[3], 2) * d[35] * d[41] - 2 * d[4] * d[28] * d[39] * d[41] + 2 * d[5] * d[30] * d[39] * d[41] - 2 * d[1] * d[31] * d[39] * d[41] + 2 * d[3] * d[32] * d[39] * d[41] - 2 * d[5] * d[27] * d[40] * d[41] + 2 * d[4] * d[30] * d[40] * d[41] + 2 * d[3] * d[31] * d[40] * d[41] - 2 * d[0] * d[32] * d[40] * d[41] + d[1] * d[27] * std::pow(d[41], 2) + d[0] * d[28] * std::pow(d[41], 2) - 2 * d[3] * d[30] * std::pow(d[41], 2) - d[1] * d[2] * d[27] * d[43] + std::pow(d[5], 2) * d[27] * d[43] - d[0] * d[2] * d[28] * d[43] + std::pow(d[4], 2) * d[28] * d[43] - d[0] * d[1] * d[29] * d[43] + std::pow(d[3], 2) * d[29] * d[43] + 2 * d[2] * d[3] * d[30] * d[43] - 2 * d[4] * d[5] * d[30] * d[43] + 2 * d[1] * d[4] * d[31] * d[43] - 2 * d[3] * d[5] * d[31] * d[43] - 2 * d[3] * d[4] * d[32] * d[43] + 2 * d[0] * d[5] * d[32] * d[43];
    coeffs[39] = 2 * d[1] * d[2] * d[6] * d[39] - 2 * std::pow(d[5], 2) * d[6] * d[39] - 2 * d[2] * d[3] * d[7] * d[39] + 2 * d[4] * d[5] * d[7] * d[39] - 2 * d[1] * d[4] * d[8] * d[39] + 2 * d[3] * d[5] * d[8] * d[39] + d[1] * d[2] * std::pow(d[39], 2) - std::pow(d[5], 2) * std::pow(d[39], 2) - 2 * d[2] * d[3] * d[6] * d[40] + 2 * d[4] * d[5] * d[6] * d[40] + 2 * d[0] * d[2] * d[7] * d[40] - 2 * std::pow(d[4], 2) * d[7] * d[40] + 2 * d[3] * d[4] * d[8] * d[40] - 2 * d[0] * d[5] * d[8] * d[40] - 2 * d[2] * d[3] * d[39] * d[40] + 2 * d[4] * d[5] * d[39] * d[40] + d[0] * d[2] * std::pow(d[40], 2) - std::pow(d[4], 2) * std::pow(d[40], 2) - 2 * d[1] * d[4] * d[6] * d[41] + 2 * d[3] * d[5] * d[6] * d[41] + 2 * d[3] * d[4] * d[7] * d[41] - 2 * d[0] * d[5] * d[7] * d[41] + 2 * d[0] * d[1] * d[8] * d[41] - 2 * std::pow(d[3], 2) * d[8] * d[41] - 2 * d[1] * d[4] * d[39] * d[41] + 2 * d[3] * d[5] * d[39] * d[41] + 2 * d[3] * d[4] * d[40] * d[41] - 2 * d[0] * d[5] * d[40] * d[41] + d[0] * d[1] * std::pow(d[41], 2) - std::pow(d[3], 2) * std::pow(d[41], 2) - d[0] * d[1] * d[2] * d[43] + d[2] * std::pow(d[3], 2) * d[43] + d[1] * std::pow(d[4], 2) * d[43] - 2 * d[3] * d[4] * d[5] * d[43] + d[0] * std::pow(d[5], 2) * d[43];
    coeffs[40] = d[10] * d[11] * std::pow(d[15], 2) - std::pow(d[14], 2) * std::pow(d[15], 2) - 2 * d[11] * d[12] * d[15] * d[16] + 2 * d[13] * d[14] * d[15] * d[16] + d[9] * d[11] * std::pow(d[16], 2) - std::pow(d[13], 2) * std::pow(d[16], 2) - 2 * d[10] * d[13] * d[15] * d[17] + 2 * d[12] * d[14] * d[15] * d[17] + 2 * d[12] * d[13] * d[16] * d[17] - 2 * d[9] * d[14] * d[16] * d[17] + d[9] * d[10] * std::pow(d[17], 2) - std::pow(d[12], 2) * std::pow(d[17], 2);
    coeffs[41] = d[11] * std::pow(d[16], 2) * d[18] - 2 * d[14] * d[16] * d[17] * d[18] + d[10] * std::pow(d[17], 2) * d[18] + d[11] * std::pow(d[15], 2) * d[19] - 2 * d[13] * d[15] * d[17] * d[19] + d[9] * std::pow(d[17], 2) * d[19] + d[10] * std::pow(d[15], 2) * d[20] - 2 * d[12] * d[15] * d[16] * d[20] + d[9] * std::pow(d[16], 2) * d[20] - 2 * d[11] * d[15] * d[16] * d[21] + 2 * d[14] * d[15] * d[17] * d[21] + 2 * d[13] * d[16] * d[17] * d[21] - 2 * d[12] * std::pow(d[17], 2) * d[21] + 2 * d[14] * d[15] * d[16] * d[22] - 2 * d[13] * std::pow(d[16], 2) * d[22] - 2 * d[10] * d[15] * d[17] * d[22] + 2 * d[12] * d[16] * d[17] * d[22] - 2 * d[14] * std::pow(d[15], 2) * d[23] + 2 * d[13] * d[15] * d[16] * d[23] + 2 * d[12] * d[15] * d[17] * d[23] - 2 * d[9] * d[16] * d[17] * d[23] + 2 * d[10] * d[11] * d[15] * d[24] - 2 * std::pow(d[14], 2) * d[15] * d[24] - 2 * d[11] * d[12] * d[16] * d[24] + 2 * d[13] * d[14] * d[16] * d[24] - 2 * d[10] * d[13] * d[17] * d[24] + 2 * d[12] * d[14] * d[17] * d[24] - 2 * d[11] * d[12] * d[15] * d[25] + 2 * d[13] * d[14] * d[15] * d[25] + 2 * d[9] * d[11] * d[16] * d[25] - 2 * std::pow(d[13], 2) * d[16] * d[25] + 2 * d[12] * d[13] * d[17] * d[25] - 2 * d[9] * d[14] * d[17] * d[25] - 2 * d[10] * d[13] * d[15] * d[26] + 2 * d[12] * d[14] * d[15] * d[26] + 2 * d[12] * d[13] * d[16] * d[26] - 2 * d[9] * d[14] * d[16] * d[26] + 2 * d[9] * d[10] * d[17] * d[26] - 2 * std::pow(d[12], 2) * d[17] * d[26];
    coeffs[42] = std::pow(d[17], 2) * d[18] * d[19] + std::pow(d[16], 2) * d[18] * d[20] + std::pow(d[15], 2) * d[19] * d[20] - 2 * d[15] * d[16] * d[20] * d[21] - std::pow(d[17], 2) * std::pow(d[21], 2) - 2 * d[15] * d[17] * d[19] * d[22] + 2 * d[16] * d[17] * d[21] * d[22] - std::pow(d[16], 2) * std::pow(d[22], 2) - 2 * d[16] * d[17] * d[18] * d[23] + 2 * d[15] * d[17] * d[21] * d[23] + 2 * d[15] * d[16] * d[22] * d[23] - std::pow(d[15], 2) * std::pow(d[23], 2) + 2 * d[11] * d[15] * d[19] * d[24] - 2 * d[13] * d[17] * d[19] * d[24] + 2 * d[10] * d[15] * d[20] * d[24] - 2 * d[12] * d[16] * d[20] * d[24] - 2 * d[11] * d[16] * d[21] * d[24] + 2 * d[14] * d[17] * d[21] * d[24] + 2 * d[14] * d[16] * d[22] * d[24] - 2 * d[10] * d[17] * d[22] * d[24] - 4 * d[14] * d[15] * d[23] * d[24] + 2 * d[13] * d[16] * d[23] * d[24] + 2 * d[12] * d[17] * d[23] * d[24] + d[10] * d[11] * std::pow(d[24], 2) - std::pow(d[14], 2) * std::pow(d[24], 2) + 2 * d[11] * d[16] * d[18] * d[25] - 2 * d[14] * d[17] * d[18] * d[25] - 2 * d[12] * d[15] * d[20] * d[25] + 2 * d[9] * d[16] * d[20] * d[25] - 2 * d[11] * d[15] * d[21] * d[25] + 2 * d[13] * d[17] * d[21] * d[25] + 2 * d[14] * d[15] * d[22] * d[25] - 4 * d[13] * d[16] * d[22] * d[25] + 2 * d[12] * d[17] * d[22] * d[25] + 2 * d[13] * d[15] * d[23] * d[25] - 2 * d[9] * d[17] * d[23] * d[25] - 2 * d[11] * d[12] * d[24] * d[25] + 2 * d[13] * d[14] * d[24] * d[25] + d[9] * d[11] * std::pow(d[25], 2) - std::pow(d[13], 2) * std::pow(d[25], 2) - 2 * d[14] * d[16] * d[18] * d[26] + 2 * d[10] * d[17] * d[18] * d[26] - 2 * d[13] * d[15] * d[19] * d[26] + 2 * d[9] * d[17] * d[19] * d[26] + 2 * d[14] * d[15] * d[21] * d[26] + 2 * d[13] * d[16] * d[21] * d[26] - 4 * d[12] * d[17] * d[21] * d[26] - 2 * d[10] * d[15] * d[22] * d[26] + 2 * d[12] * d[16] * d[22] * d[26] + 2 * d[12] * d[15] * d[23] * d[26] - 2 * d[9] * d[16] * d[23] * d[26] - 2 * d[10] * d[13] * d[24] * d[26] + 2 * d[12] * d[14] * d[24] * d[26] + 2 * d[12] * d[13] * d[25] * d[26] - 2 * d[9] * d[14] * d[25] * d[26] + d[9] * d[10] * std::pow(d[26], 2) - std::pow(d[12], 2) * std::pow(d[26], 2);
    coeffs[43] = 2 * d[15] * d[19] * d[20] * d[24] - 2 * d[16] * d[20] * d[21] * d[24] - 2 * d[17] * d[19] * d[22] * d[24] + 2 * d[17] * d[21] * d[23] * d[24] + 2 * d[16] * d[22] * d[23] * d[24] - 2 * d[15] * std::pow(d[23], 2) * d[24] + d[11] * d[19] * std::pow(d[24], 2) + d[10] * d[20] * std::pow(d[24], 2) - 2 * d[14] * d[23] * std::pow(d[24], 2) + 2 * d[16] * d[18] * d[20] * d[25] - 2 * d[15] * d[20] * d[21] * d[25] + 2 * d[17] * d[21] * d[22] * d[25] - 2 * d[16] * std::pow(d[22], 2) * d[25] - 2 * d[17] * d[18] * d[23] * d[25] + 2 * d[15] * d[22] * d[23] * d[25] - 2 * d[12] * d[20] * d[24] * d[25] - 2 * d[11] * d[21] * d[24] * d[25] + 2 * d[14] * d[22] * d[24] * d[25] + 2 * d[13] * d[23] * d[24] * d[25] + d[11] * d[18] * std::pow(d[25], 2) + d[9] * d[20] * std::pow(d[25], 2) - 2 * d[13] * d[22] * std::pow(d[25], 2) + 2 * d[17] * d[18] * d[19] * d[26] - 2 * d[17] * std::pow(d[21], 2) * d[26] - 2 * d[15] * d[19] * d[22] * d[26] + 2 * d[16] * d[21] * d[22] * d[26] - 2 * d[16] * d[18] * d[23] * d[26] + 2 * d[15] * d[21] * d[23] * d[26] - 2 * d[13] * d[19] * d[24] * d[26] + 2 * d[14] * d[21] * d[24] * d[26] - 2 * d[10] * d[22] * d[24] * d[26] + 2 * d[12] * d[23] * d[24] * d[26] - 2 * d[14] * d[18] * d[25] * d[26] + 2 * d[13] * d[21] * d[25] * d[26] + 2 * d[12] * d[22] * d[25] * d[26] - 2 * d[9] * d[23] * d[25] * d[26] + d[10] * d[18] * std::pow(d[26], 2) + d[9] * d[19] * std::pow(d[26], 2) - 2 * d[12] * d[21] * std::pow(d[26], 2);
    coeffs[44] = d[19] * d[20] * std::pow(d[24], 2) - std::pow(d[23], 2) * std::pow(d[24], 2) - 2 * d[20] * d[21] * d[24] * d[25] + 2 * d[22] * d[23] * d[24] * d[25] + d[18] * d[20] * std::pow(d[25], 2) - std::pow(d[22], 2) * std::pow(d[25], 2) - 2 * d[19] * d[22] * d[24] * d[26] + 2 * d[21] * d[23] * d[24] * d[26] + 2 * d[21] * d[22] * d[25] * d[26] - 2 * d[18] * d[23] * d[25] * d[26] + d[18] * d[19] * std::pow(d[26], 2) - std::pow(d[21], 2) * std::pow(d[26], 2);
    coeffs[45] = d[11] * std::pow(d[16], 2) * d[27] - 2 * d[14] * d[16] * d[17] * d[27] + d[10] * std::pow(d[17], 2) * d[27] + d[11] * std::pow(d[15], 2) * d[28] - 2 * d[13] * d[15] * d[17] * d[28] + d[9] * std::pow(d[17], 2) * d[28] + d[10] * std::pow(d[15], 2) * d[29] - 2 * d[12] * d[15] * d[16] * d[29] + d[9] * std::pow(d[16], 2) * d[29] - 2 * d[11] * d[15] * d[16] * d[30] + 2 * d[14] * d[15] * d[17] * d[30] + 2 * d[13] * d[16] * d[17] * d[30] - 2 * d[12] * std::pow(d[17], 2) * d[30] + 2 * d[14] * d[15] * d[16] * d[31] - 2 * d[13] * std::pow(d[16], 2) * d[31] - 2 * d[10] * d[15] * d[17] * d[31] + 2 * d[12] * d[16] * d[17] * d[31] - 2 * d[14] * std::pow(d[15], 2) * d[32] + 2 * d[13] * d[15] * d[16] * d[32] + 2 * d[12] * d[15] * d[17] * d[32] - 2 * d[9] * d[16] * d[17] * d[32] + 2 * d[10] * d[11] * d[15] * d[33] - 2 * std::pow(d[14], 2) * d[15] * d[33] - 2 * d[11] * d[12] * d[16] * d[33] + 2 * d[13] * d[14] * d[16] * d[33] - 2 * d[10] * d[13] * d[17] * d[33] + 2 * d[12] * d[14] * d[17] * d[33] - 2 * d[11] * d[12] * d[15] * d[34] + 2 * d[13] * d[14] * d[15] * d[34] + 2 * d[9] * d[11] * d[16] * d[34] - 2 * std::pow(d[13], 2) * d[16] * d[34] + 2 * d[12] * d[13] * d[17] * d[34] - 2 * d[9] * d[14] * d[17] * d[34] - 2 * d[10] * d[13] * d[15] * d[35] + 2 * d[12] * d[14] * d[15] * d[35] + 2 * d[12] * d[13] * d[16] * d[35] - 2 * d[9] * d[14] * d[16] * d[35] + 2 * d[9] * d[10] * d[17] * d[35] - 2 * std::pow(d[12], 2) * d[17] * d[35];
    coeffs[46] = std::pow(d[17], 2) * d[19] * d[27] + std::pow(d[16], 2) * d[20] * d[27] - 2 * d[16] * d[17] * d[23] * d[27] + 2 * d[11] * d[16] * d[25] * d[27] - 2 * d[14] * d[17] * d[25] * d[27] - 2 * d[14] * d[16] * d[26] * d[27] + 2 * d[10] * d[17] * d[26] * d[27] + std::pow(d[17], 2) * d[18] * d[28] + std::pow(d[15], 2) * d[20] * d[28] - 2 * d[15] * d[17] * d[22] * d[28] + 2 * d[11] * d[15] * d[24] * d[28] - 2 * d[13] * d[17] * d[24] * d[28] - 2 * d[13] * d[15] * d[26] * d[28] + 2 * d[9] * d[17] * d[26] * d[28] + std::pow(d[16], 2) * d[18] * d[29] + std::pow(d[15], 2) * d[19] * d[29] - 2 * d[15] * d[16] * d[21] * d[29] + 2 * d[10] * d[15] * d[24] * d[29] - 2 * d[12] * d[16] * d[24] * d[29] - 2 * d[12] * d[15] * d[25] * d[29] + 2 * d[9] * d[16] * d[25] * d[29] - 2 * d[15] * d[16] * d[20] * d[30] - 2 * std::pow(d[17], 2) * d[21] * d[30] + 2 * d[16] * d[17] * d[22] * d[30] + 2 * d[15] * d[17] * d[23] * d[30] - 2 * d[11] * d[16] * d[24] * d[30] + 2 * d[14] * d[17] * d[24] * d[30] - 2 * d[11] * d[15] * d[25] * d[30] + 2 * d[13] * d[17] * d[25] * d[30] + 2 * d[14] * d[15] * d[26] * d[30] + 2 * d[13] * d[16] * d[26] * d[30] - 4 * d[12] * d[17] * d[26] * d[30] - 2 * d[15] * d[17] * d[19] * d[31] + 2 * d[16] * d[17] * d[21] * d[31] - 2 * std::pow(d[16], 2) * d[22] * d[31] + 2 * d[15] * d[16] * d[23] * d[31] + 2 * d[14] * d[16] * d[24] * d[31] - 2 * d[10] * d[17] * d[24] * d[31] + 2 * d[14] * d[15] * d[25] * d[31] - 4 * d[13] * d[16] * d[25] * d[31] + 2 * d[12] * d[17] * d[25] * d[31] - 2 * d[10] * d[15] * d[26] * d[31] + 2 * d[12] * d[16] * d[26] * d[31] - 2 * d[16] * d[17] * d[18] * d[32] + 2 * d[15] * d[17] * d[21] * d[32] + 2 * d[15] * d[16] * d[22] * d[32] - 2 * std::pow(d[15], 2) * d[23] * d[32] - 4 * d[14] * d[15] * d[24] * d[32] + 2 * d[13] * d[16] * d[24] * d[32] + 2 * d[12] * d[17] * d[24] * d[32] + 2 * d[13] * d[15] * d[25] * d[32] - 2 * d[9] * d[17] * d[25] * d[32] + 2 * d[12] * d[15] * d[26] * d[32] - 2 * d[9] * d[16] * d[26] * d[32] + 2 * d[11] * d[15] * d[19] * d[33] - 2 * d[13] * d[17] * d[19] * d[33] + 2 * d[10] * d[15] * d[20] * d[33] - 2 * d[12] * d[16] * d[20] * d[33] - 2 * d[11] * d[16] * d[21] * d[33] + 2 * d[14] * d[17] * d[21] * d[33] + 2 * d[14] * d[16] * d[22] * d[33] - 2 * d[10] * d[17] * d[22] * d[33] - 4 * d[14] * d[15] * d[23] * d[33] + 2 * d[13] * d[16] * d[23] * d[33] + 2 * d[12] * d[17] * d[23] * d[33] + 2 * d[10] * d[11] * d[24] * d[33] - 2 * std::pow(d[14], 2) * d[24] * d[33] - 2 * d[11] * d[12] * d[25] * d[33] + 2 * d[13] * d[14] * d[25] * d[33] - 2 * d[10] * d[13] * d[26] * d[33] + 2 * d[12] * d[14] * d[26] * d[33] + 2 * d[11] * d[16] * d[18] * d[34] - 2 * d[14] * d[17] * d[18] * d[34] - 2 * d[12] * d[15] * d[20] * d[34] + 2 * d[9] * d[16] * d[20] * d[34] - 2 * d[11] * d[15] * d[21] * d[34] + 2 * d[13] * d[17] * d[21] * d[34] + 2 * d[14] * d[15] * d[22] * d[34] - 4 * d[13] * d[16] * d[22] * d[34] + 2 * d[12] * d[17] * d[22] * d[34] + 2 * d[13] * d[15] * d[23] * d[34] - 2 * d[9] * d[17] * d[23] * d[34] - 2 * d[11] * d[12] * d[24] * d[34] + 2 * d[13] * d[14] * d[24] * d[34] + 2 * d[9] * d[11] * d[25] * d[34] - 2 * std::pow(d[13], 2) * d[25] * d[34] + 2 * d[12] * d[13] * d[26] * d[34] - 2 * d[9] * d[14] * d[26] * d[34] - 2 * d[14] * d[16] * d[18] * d[35] + 2 * d[10] * d[17] * d[18] * d[35] - 2 * d[13] * d[15] * d[19] * d[35] + 2 * d[9] * d[17] * d[19] * d[35] + 2 * d[14] * d[15] * d[21] * d[35] + 2 * d[13] * d[16] * d[21] * d[35] - 4 * d[12] * d[17] * d[21] * d[35] - 2 * d[10] * d[15] * d[22] * d[35] + 2 * d[12] * d[16] * d[22] * d[35] + 2 * d[12] * d[15] * d[23] * d[35] - 2 * d[9] * d[16] * d[23] * d[35] - 2 * d[10] * d[13] * d[24] * d[35] + 2 * d[12] * d[14] * d[24] * d[35] + 2 * d[12] * d[13] * d[25] * d[35] - 2 * d[9] * d[14] * d[25] * d[35] + 2 * d[9] * d[10] * d[26] * d[35] - 2 * std::pow(d[12], 2) * d[26] * d[35];
    coeffs[47] = 2 * d[16] * d[20] * d[25] * d[27] - 2 * d[17] * d[23] * d[25] * d[27] + d[11] * std::pow(d[25], 2) * d[27] + 2 * d[17] * d[19] * d[26] * d[27] - 2 * d[16] * d[23] * d[26] * d[27] - 2 * d[14] * d[25] * d[26] * d[27] + d[10] * std::pow(d[26], 2) * d[27] + 2 * d[15] * d[20] * d[24] * d[28] - 2 * d[17] * d[22] * d[24] * d[28] + d[11] * std::pow(d[24], 2) * d[28] + 2 * d[17] * d[18] * d[26] * d[28] - 2 * d[15] * d[22] * d[26] * d[28] - 2 * d[13] * d[24] * d[26] * d[28] + d[9] * std::pow(d[26], 2) * d[28] + 2 * d[15] * d[19] * d[24] * d[29] - 2 * d[16] * d[21] * d[24] * d[29] + d[10] * std::pow(d[24], 2) * d[29] + 2 * d[16] * d[18] * d[25] * d[29] - 2 * d[15] * d[21] * d[25] * d[29] - 2 * d[12] * d[24] * d[25] * d[29] + d[9] * std::pow(d[25], 2) * d[29] - 2 * d[16] * d[20] * d[24] * d[30] + 2 * d[17] * d[23] * d[24] * d[30] - 2 * d[15] * d[20] * d[25] * d[30] + 2 * d[17] * d[22] * d[25] * d[30] - 2 * d[11] * d[24] * d[25] * d[30] - 4 * d[17] * d[21] * d[26] * d[30] + 2 * d[16] * d[22] * d[26] * d[30] + 2 * d[15] * d[23] * d[26] * d[30] + 2 * d[14] * d[24] * d[26] * d[30] + 2 * d[13] * d[25] * d[26] * d[30] - 2 * d[12] * std::pow(d[26], 2) * d[30] - 2 * d[17] * d[19] * d[24] * d[31] + 2 * d[16] * d[23] * d[24] * d[31] + 2 * d[17] * d[21] * d[25] * d[31] - 4 * d[16] * d[22] * d[25] * d[31] + 2 * d[15] * d[23] * d[25] * d[31] + 2 * d[14] * d[24] * d[25] * d[31] - 2 * d[13] * std::pow(d[25], 2) * d[31] - 2 * d[15] * d[19] * d[26] * d[31] + 2 * d[16] * d[21] * d[26] * d[31] - 2 * d[10] * d[24] * d[26] * d[31] + 2 * d[12] * d[25] * d[26] * d[31] + 2 * d[17] * d[21] * d[24] * d[32] + 2 * d[16] * d[22] * d[24] * d[32] - 4 * d[15] * d[23] * d[24] * d[32] - 2 * d[14] * std::pow(d[24], 2) * d[32] - 2 * d[17] * d[18] * d[25] * d[32] + 2 * d[15] * d[22] * d[25] * d[32] + 2 * d[13] * d[24] * d[25] * d[32] - 2 * d[16] * d[18] * d[26] * d[32] + 2 * d[15] * d[21] * d[26] * d[32] + 2 * d[12] * d[24] * d[26] * d[32] - 2 * d[9] * d[25] * d[26] * d[32] + 2 * d[15] * d[19] * d[20] * d[33] - 2 * d[16] * d[20] * d[21] * d[33] - 2 * d[17] * d[19] * d[22] * d[33] + 2 * d[17] * d[21] * d[23] * d[33] + 2 * d[16] * d[22] * d[23] * d[33] - 2 * d[15] * std::pow(d[23], 2) * d[33] + 2 * d[11] * d[19] * d[24] * d[33] + 2 * d[10] * d[20] * d[24] * d[33] - 4 * d[14] * d[23] * d[24] * d[33] - 2 * d[12] * d[20] * d[25] * d[33] - 2 * d[11] * d[21] * d[25] * d[33] + 2 * d[14] * d[22] * d[25] * d[33] + 2 * d[13] * d[23] * d[25] * d[33] - 2 * d[13] * d[19] * d[26] * d[33] + 2 * d[14] * d[21] * d[26] * d[33] - 2 * d[10] * d[22] * d[26] * d[33] + 2 * d[12] * d[23] * d[26] * d[33] + 2 * d[16] * d[18] * d[20] * d[34] - 2 * d[15] * d[20] * d[21] * d[34] + 2 * d[17] * d[21] * d[22] * d[34] - 2 * d[16] * std::pow(d[22], 2) * d[34] - 2 * d[17] * d[18] * d[23] * d[34] + 2 * d[15] * d[22] * d[23] * d[34] - 2 * d[12] * d[20] * d[24] * d[34] - 2 * d[11] * d[21] * d[24] * d[34] + 2 * d[14] * d[22] * d[24] * d[34] + 2 * d[13] * d[23] * d[24] * d[34] + 2 * d[11] * d[18] * d[25] * d[34] + 2 * d[9] * d[20] * d[25] * d[34] - 4 * d[13] * d[22] * d[25] * d[34] - 2 * d[14] * d[18] * d[26] * d[34] + 2 * d[13] * d[21] * d[26] * d[34] + 2 * d[12] * d[22] * d[26] * d[34] - 2 * d[9] * d[23] * d[26] * d[34] + 2 * d[17] * d[18] * d[19] * d[35] - 2 * d[17] * std::pow(d[21], 2) * d[35] - 2 * d[15] * d[19] * d[22] * d[35] + 2 * d[16] * d[21] * d[22] * d[35] - 2 * d[16] * d[18] * d[23] * d[35] + 2 * d[15] * d[21] * d[23] * d[35] - 2 * d[13] * d[19] * d[24] * d[35] + 2 * d[14] * d[21] * d[24] * d[35] - 2 * d[10] * d[22] * d[24] * d[35] + 2 * d[12] * d[23] * d[24] * d[35] - 2 * d[14] * d[18] * d[25] * d[35] + 2 * d[13] * d[21] * d[25] * d[35] + 2 * d[12] * d[22] * d[25] * d[35] - 2 * d[9] * d[23] * d[25] * d[35] + 2 * d[10] * d[18] * d[26] * d[35] + 2 * d[9] * d[19] * d[26] * d[35] - 4 * d[12] * d[21] * d[26] * d[35];
    coeffs[48] = d[20] * std::pow(d[25], 2) * d[27] - 2 * d[23] * d[25] * d[26] * d[27] + d[19] * std::pow(d[26], 2) * d[27] + d[20] * std::pow(d[24], 2) * d[28] - 2 * d[22] * d[24] * d[26] * d[28] + d[18] * std::pow(d[26], 2) * d[28] + d[19] * std::pow(d[24], 2) * d[29] - 2 * d[21] * d[24] * d[25] * d[29] + d[18] * std::pow(d[25], 2) * d[29] - 2 * d[20] * d[24] * d[25] * d[30] + 2 * d[23] * d[24] * d[26] * d[30] + 2 * d[22] * d[25] * d[26] * d[30] - 2 * d[21] * std::pow(d[26], 2) * d[30] + 2 * d[23] * d[24] * d[25] * d[31] - 2 * d[22] * std::pow(d[25], 2) * d[31] - 2 * d[19] * d[24] * d[26] * d[31] + 2 * d[21] * d[25] * d[26] * d[31] - 2 * d[23] * std::pow(d[24], 2) * d[32] + 2 * d[22] * d[24] * d[25] * d[32] + 2 * d[21] * d[24] * d[26] * d[32] - 2 * d[18] * d[25] * d[26] * d[32] + 2 * d[19] * d[20] * d[24] * d[33] - 2 * std::pow(d[23], 2) * d[24] * d[33] - 2 * d[20] * d[21] * d[25] * d[33] + 2 * d[22] * d[23] * d[25] * d[33] - 2 * d[19] * d[22] * d[26] * d[33] + 2 * d[21] * d[23] * d[26] * d[33] - 2 * d[20] * d[21] * d[24] * d[34] + 2 * d[22] * d[23] * d[24] * d[34] + 2 * d[18] * d[20] * d[25] * d[34] - 2 * std::pow(d[22], 2) * d[25] * d[34] + 2 * d[21] * d[22] * d[26] * d[34] - 2 * d[18] * d[23] * d[26] * d[34] - 2 * d[19] * d[22] * d[24] * d[35] + 2 * d[21] * d[23] * d[24] * d[35] + 2 * d[21] * d[22] * d[25] * d[35] - 2 * d[18] * d[23] * d[25] * d[35] + 2 * d[18] * d[19] * d[26] * d[35] - 2 * std::pow(d[21], 2) * d[26] * d[35];
    coeffs[49] = std::pow(d[17], 2) * d[27] * d[28] + std::pow(d[16], 2) * d[27] * d[29] + std::pow(d[15], 2) * d[28] * d[29] - 2 * d[15] * d[16] * d[29] * d[30] - std::pow(d[17], 2) * std::pow(d[30], 2) - 2 * d[15] * d[17] * d[28] * d[31] + 2 * d[16] * d[17] * d[30] * d[31] - std::pow(d[16], 2) * std::pow(d[31], 2) - 2 * d[16] * d[17] * d[27] * d[32] + 2 * d[15] * d[17] * d[30] * d[32] + 2 * d[15] * d[16] * d[31] * d[32] - std::pow(d[15], 2) * std::pow(d[32], 2) + 2 * d[11] * d[15] * d[28] * d[33] - 2 * d[13] * d[17] * d[28] * d[33] + 2 * d[10] * d[15] * d[29] * d[33] - 2 * d[12] * d[16] * d[29] * d[33] - 2 * d[11] * d[16] * d[30] * d[33] + 2 * d[14] * d[17] * d[30] * d[33] + 2 * d[14] * d[16] * d[31] * d[33] - 2 * d[10] * d[17] * d[31] * d[33] - 4 * d[14] * d[15] * d[32] * d[33] + 2 * d[13] * d[16] * d[32] * d[33] + 2 * d[12] * d[17] * d[32] * d[33] + d[10] * d[11] * std::pow(d[33], 2) - std::pow(d[14], 2) * std::pow(d[33], 2) + 2 * d[11] * d[16] * d[27] * d[34] - 2 * d[14] * d[17] * d[27] * d[34] - 2 * d[12] * d[15] * d[29] * d[34] + 2 * d[9] * d[16] * d[29] * d[34] - 2 * d[11] * d[15] * d[30] * d[34] + 2 * d[13] * d[17] * d[30] * d[34] + 2 * d[14] * d[15] * d[31] * d[34] - 4 * d[13] * d[16] * d[31] * d[34] + 2 * d[12] * d[17] * d[31] * d[34] + 2 * d[13] * d[15] * d[32] * d[34] - 2 * d[9] * d[17] * d[32] * d[34] - 2 * d[11] * d[12] * d[33] * d[34] + 2 * d[13] * d[14] * d[33] * d[34] + d[9] * d[11] * std::pow(d[34], 2) - std::pow(d[13], 2) * std::pow(d[34], 2) - 2 * d[14] * d[16] * d[27] * d[35] + 2 * d[10] * d[17] * d[27] * d[35] - 2 * d[13] * d[15] * d[28] * d[35] + 2 * d[9] * d[17] * d[28] * d[35] + 2 * d[14] * d[15] * d[30] * d[35] + 2 * d[13] * d[16] * d[30] * d[35] - 4 * d[12] * d[17] * d[30] * d[35] - 2 * d[10] * d[15] * d[31] * d[35] + 2 * d[12] * d[16] * d[31] * d[35] + 2 * d[12] * d[15] * d[32] * d[35] - 2 * d[9] * d[16] * d[32] * d[35] - 2 * d[10] * d[13] * d[33] * d[35] + 2 * d[12] * d[14] * d[33] * d[35] + 2 * d[12] * d[13] * d[34] * d[35] - 2 * d[9] * d[14] * d[34] * d[35] + d[9] * d[10] * std::pow(d[35], 2) - std::pow(d[12], 2) * std::pow(d[35], 2);
    coeffs[50] = 2 * d[17] * d[26] * d[27] * d[28] + 2 * d[16] * d[25] * d[27] * d[29] + 2 * d[15] * d[24] * d[28] * d[29] - 2 * d[16] * d[24] * d[29] * d[30] - 2 * d[15] * d[25] * d[29] * d[30] - 2 * d[17] * d[26] * std::pow(d[30], 2) - 2 * d[17] * d[24] * d[28] * d[31] - 2 * d[15] * d[26] * d[28] * d[31] + 2 * d[17] * d[25] * d[30] * d[31] + 2 * d[16] * d[26] * d[30] * d[31] - 2 * d[16] * d[25] * std::pow(d[31], 2) - 2 * d[17] * d[25] * d[27] * d[32] - 2 * d[16] * d[26] * d[27] * d[32] + 2 * d[17] * d[24] * d[30] * d[32] + 2 * d[15] * d[26] * d[30] * d[32] + 2 * d[16] * d[24] * d[31] * d[32] + 2 * d[15] * d[25] * d[31] * d[32] - 2 * d[15] * d[24] * std::pow(d[32], 2) + 2 * d[15] * d[20] * d[28] * d[33] - 2 * d[17] * d[22] * d[28] * d[33] + 2 * d[11] * d[24] * d[28] * d[33] - 2 * d[13] * d[26] * d[28] * d[33] + 2 * d[15] * d[19] * d[29] * d[33] - 2 * d[16] * d[21] * d[29] * d[33] + 2 * d[10] * d[24] * d[29] * d[33] - 2 * d[12] * d[25] * d[29] * d[33] - 2 * d[16] * d[20] * d[30] * d[33] + 2 * d[17] * d[23] * d[30] * d[33] - 2 * d[11] * d[25] * d[30] * d[33] + 2 * d[14] * d[26] * d[30] * d[33] - 2 * d[17] * d[19] * d[31] * d[33] + 2 * d[16] * d[23] * d[31] * d[33] + 2 * d[14] * d[25] * d[31] * d[33] - 2 * d[10] * d[26] * d[31] * d[33] + 2 * d[17] * d[21] * d[32] * d[33] + 2 * d[16] * d[22] * d[32] * d[33] - 4 * d[15] * d[23] * d[32] * d[33] - 4 * d[14] * d[24] * d[32] * d[33] + 2 * d[13] * d[25] * d[32] * d[33] + 2 * d[12] * d[26] * d[32] * d[33] + d[11] * d[19] * std::pow(d[33], 2) + d[10] * d[20] * std::pow(d[33], 2) - 2 * d[14] * d[23] * std::pow(d[33], 2) + 2 * d[16] * d[20] * d[27] * d[34] - 2 * d[17] * d[23] * d[27] * d[34] + 2 * d[11] * d[25] * d[27] * d[34] - 2 * d[14] * d[26] * d[27] * d[34] + 2 * d[16] * d[18] * d[29] * d[34] - 2 * d[15] * d[21] * d[29] * d[34] - 2 * d[12] * d[24] * d[29] * d[34] + 2 * d[9] * d[25] * d[29] * d[34] - 2 * d[15] * d[20] * d[30] * d[34] + 2 * d[17] * d[22] * d[30] * d[34] - 2 * d[11] * d[24] * d[30] * d[34] + 2 * d[13] * d[26] * d[30] * d[34] + 2 * d[17] * d[21] * d[31] * d[34] - 4 * d[16] * d[22] * d[31] * d[34] + 2 * d[15] * d[23] * d[31] * d[34] + 2 * d[14] * d[24] * d[31] * d[34] - 4 * d[13] * d[25] * d[31] * d[34] + 2 * d[12] * d[26] * d[31] * d[34] - 2 * d[17] * d[18] * d[32] * d[34] + 2 * d[15] * d[22] * d[32] * d[34] + 2 * d[13] * d[24] * d[32] * d[34] - 2 * d[9] * d[26] * d[32] * d[34] - 2 * d[12] * d[20] * d[33] * d[34] - 2 * d[11] * d[21] * d[33] * d[34] + 2 * d[14] * d[22] * d[33] * d[34] + 2 * d[13] * d[23] * d[33] * d[34] + d[11] * d[18] * std::pow(d[34], 2) + d[9] * d[20] * std::pow(d[34], 2) - 2 * d[13] * d[22] * std::pow(d[34], 2) + 2 * d[17] * d[19] * d[27] * d[35] - 2 * d[16] * d[23] * d[27] * d[35] - 2 * d[14] * d[25] * d[27] * d[35] + 2 * d[10] * d[26] * d[27] * d[35] + 2 * d[17] * d[18] * d[28] * d[35] - 2 * d[15] * d[22] * d[28] * d[35] - 2 * d[13] * d[24] * d[28] * d[35] + 2 * d[9] * d[26] * d[28] * d[35] - 4 * d[17] * d[21] * d[30] * d[35] + 2 * d[16] * d[22] * d[30] * d[35] + 2 * d[15] * d[23] * d[30] * d[35] + 2 * d[14] * d[24] * d[30] * d[35] + 2 * d[13] * d[25] * d[30] * d[35] - 4 * d[12] * d[26] * d[30] * d[35] - 2 * d[15] * d[19] * d[31] * d[35] + 2 * d[16] * d[21] * d[31] * d[35] - 2 * d[10] * d[24] * d[31] * d[35] + 2 * d[12] * d[25] * d[31] * d[35] - 2 * d[16] * d[18] * d[32] * d[35] + 2 * d[15] * d[21] * d[32] * d[35] + 2 * d[12] * d[24] * d[32] * d[35] - 2 * d[9] * d[25] * d[32] * d[35] - 2 * d[13] * d[19] * d[33] * d[35] + 2 * d[14] * d[21] * d[33] * d[35] - 2 * d[10] * d[22] * d[33] * d[35] + 2 * d[12] * d[23] * d[33] * d[35] - 2 * d[14] * d[18] * d[34] * d[35] + 2 * d[13] * d[21] * d[34] * d[35] + 2 * d[12] * d[22] * d[34] * d[35] - 2 * d[9] * d[23] * d[34] * d[35] + d[10] * d[18] * std::pow(d[35], 2) + d[9] * d[19] * std::pow(d[35], 2) - 2 * d[12] * d[21] * std::pow(d[35], 2);
    coeffs[51] = std::pow(d[26], 2) * d[27] * d[28] + std::pow(d[25], 2) * d[27] * d[29] + std::pow(d[24], 2) * d[28] * d[29] - 2 * d[24] * d[25] * d[29] * d[30] - std::pow(d[26], 2) * std::pow(d[30], 2) - 2 * d[24] * d[26] * d[28] * d[31] + 2 * d[25] * d[26] * d[30] * d[31] - std::pow(d[25], 2) * std::pow(d[31], 2) - 2 * d[25] * d[26] * d[27] * d[32] + 2 * d[24] * d[26] * d[30] * d[32] + 2 * d[24] * d[25] * d[31] * d[32] - std::pow(d[24], 2) * std::pow(d[32], 2) + 2 * d[20] * d[24] * d[28] * d[33] - 2 * d[22] * d[26] * d[28] * d[33] + 2 * d[19] * d[24] * d[29] * d[33] - 2 * d[21] * d[25] * d[29] * d[33] - 2 * d[20] * d[25] * d[30] * d[33] + 2 * d[23] * d[26] * d[30] * d[33] + 2 * d[23] * d[25] * d[31] * d[33] - 2 * d[19] * d[26] * d[31] * d[33] - 4 * d[23] * d[24] * d[32] * d[33] + 2 * d[22] * d[25] * d[32] * d[33] + 2 * d[21] * d[26] * d[32] * d[33] + d[19] * d[20] * std::pow(d[33], 2) - std::pow(d[23], 2) * std::pow(d[33], 2) + 2 * d[20] * d[25] * d[27] * d[34] - 2 * d[23] * d[26] * d[27] * d[34] - 2 * d[21] * d[24] * d[29] * d[34] + 2 * d[18] * d[25] * d[29] * d[34] - 2 * d[20] * d[24] * d[30] * d[34] + 2 * d[22] * d[26] * d[30] * d[34] + 2 * d[23] * d[24] * d[31] * d[34] - 4 * d[22] * d[25] * d[31] * d[34] + 2 * d[21] * d[26] * d[31] * d[34] + 2 * d[22] * d[24] * d[32] * d[34] - 2 * d[18] * d[26] * d[32] * d[34] - 2 * d[20] * d[21] * d[33] * d[34] + 2 * d[22] * d[23] * d[33] * d[34] + d[18] * d[20] * std::pow(d[34], 2) - std::pow(d[22], 2) * std::pow(d[34], 2) - 2 * d[23] * d[25] * d[27] * d[35] + 2 * d[19] * d[26] * d[27] * d[35] - 2 * d[22] * d[24] * d[28] * d[35] + 2 * d[18] * d[26] * d[28] * d[35] + 2 * d[23] * d[24] * d[30] * d[35] + 2 * d[22] * d[25] * d[30] * d[35] - 4 * d[21] * d[26] * d[30] * d[35] - 2 * d[19] * d[24] * d[31] * d[35] + 2 * d[21] * d[25] * d[31] * d[35] + 2 * d[21] * d[24] * d[32] * d[35] - 2 * d[18] * d[25] * d[32] * d[35] - 2 * d[19] * d[22] * d[33] * d[35] + 2 * d[21] * d[23] * d[33] * d[35] + 2 * d[21] * d[22] * d[34] * d[35] - 2 * d[18] * d[23] * d[34] * d[35] + d[18] * d[19] * std::pow(d[35], 2) - std::pow(d[21], 2) * std::pow(d[35], 2);
    coeffs[52] = 2 * d[15] * d[28] * d[29] * d[33] - 2 * d[16] * d[29] * d[30] * d[33] - 2 * d[17] * d[28] * d[31] * d[33] + 2 * d[17] * d[30] * d[32] * d[33] + 2 * d[16] * d[31] * d[32] * d[33] - 2 * d[15] * std::pow(d[32], 2) * d[33] + d[11] * d[28] * std::pow(d[33], 2) + d[10] * d[29] * std::pow(d[33], 2) - 2 * d[14] * d[32] * std::pow(d[33], 2) + 2 * d[16] * d[27] * d[29] * d[34] - 2 * d[15] * d[29] * d[30] * d[34] + 2 * d[17] * d[30] * d[31] * d[34] - 2 * d[16] * std::pow(d[31], 2) * d[34] - 2 * d[17] * d[27] * d[32] * d[34] + 2 * d[15] * d[31] * d[32] * d[34] - 2 * d[12] * d[29] * d[33] * d[34] - 2 * d[11] * d[30] * d[33] * d[34] + 2 * d[14] * d[31] * d[33] * d[34] + 2 * d[13] * d[32] * d[33] * d[34] + d[11] * d[27] * std::pow(d[34], 2) + d[9] * d[29] * std::pow(d[34], 2) - 2 * d[13] * d[31] * std::pow(d[34], 2) + 2 * d[17] * d[27] * d[28] * d[35] - 2 * d[17] * std::pow(d[30], 2) * d[35] - 2 * d[15] * d[28] * d[31] * d[35] + 2 * d[16] * d[30] * d[31] * d[35] - 2 * d[16] * d[27] * d[32] * d[35] + 2 * d[15] * d[30] * d[32] * d[35] - 2 * d[13] * d[28] * d[33] * d[35] + 2 * d[14] * d[30] * d[33] * d[35] - 2 * d[10] * d[31] * d[33] * d[35] + 2 * d[12] * d[32] * d[33] * d[35] - 2 * d[14] * d[27] * d[34] * d[35] + 2 * d[13] * d[30] * d[34] * d[35] + 2 * d[12] * d[31] * d[34] * d[35] - 2 * d[9] * d[32] * d[34] * d[35] + d[10] * d[27] * std::pow(d[35], 2) + d[9] * d[28] * std::pow(d[35], 2) - 2 * d[12] * d[30] * std::pow(d[35], 2);
    coeffs[53] = 2 * d[24] * d[28] * d[29] * d[33] - 2 * d[25] * d[29] * d[30] * d[33] - 2 * d[26] * d[28] * d[31] * d[33] + 2 * d[26] * d[30] * d[32] * d[33] + 2 * d[25] * d[31] * d[32] * d[33] - 2 * d[24] * std::pow(d[32], 2) * d[33] + d[20] * d[28] * std::pow(d[33], 2) + d[19] * d[29] * std::pow(d[33], 2) - 2 * d[23] * d[32] * std::pow(d[33], 2) + 2 * d[25] * d[27] * d[29] * d[34] - 2 * d[24] * d[29] * d[30] * d[34] + 2 * d[26] * d[30] * d[31] * d[34] - 2 * d[25] * std::pow(d[31], 2) * d[34] - 2 * d[26] * d[27] * d[32] * d[34] + 2 * d[24] * d[31] * d[32] * d[34] - 2 * d[21] * d[29] * d[33] * d[34] - 2 * d[20] * d[30] * d[33] * d[34] + 2 * d[23] * d[31] * d[33] * d[34] + 2 * d[22] * d[32] * d[33] * d[34] + d[20] * d[27] * std::pow(d[34], 2) + d[18] * d[29] * std::pow(d[34], 2) - 2 * d[22] * d[31] * std::pow(d[34], 2) + 2 * d[26] * d[27] * d[28] * d[35] - 2 * d[26] * std::pow(d[30], 2) * d[35] - 2 * d[24] * d[28] * d[31] * d[35] + 2 * d[25] * d[30] * d[31] * d[35] - 2 * d[25] * d[27] * d[32] * d[35] + 2 * d[24] * d[30] * d[32] * d[35] - 2 * d[22] * d[28] * d[33] * d[35] + 2 * d[23] * d[30] * d[33] * d[35] - 2 * d[19] * d[31] * d[33] * d[35] + 2 * d[21] * d[32] * d[33] * d[35] - 2 * d[23] * d[27] * d[34] * d[35] + 2 * d[22] * d[30] * d[34] * d[35] + 2 * d[21] * d[31] * d[34] * d[35] - 2 * d[18] * d[32] * d[34] * d[35] + d[19] * d[27] * std::pow(d[35], 2) + d[18] * d[28] * std::pow(d[35], 2) - 2 * d[21] * d[30] * std::pow(d[35], 2);
    coeffs[54] = d[28] * d[29] * std::pow(d[33], 2) - std::pow(d[32], 2) * std::pow(d[33], 2) - 2 * d[29] * d[30] * d[33] * d[34] + 2 * d[31] * d[32] * d[33] * d[34] + d[27] * d[29] * std::pow(d[34], 2) - std::pow(d[31], 2) * std::pow(d[34], 2) - 2 * d[28] * d[31] * d[33] * d[35] + 2 * d[30] * d[32] * d[33] * d[35] + 2 * d[30] * d[31] * d[34] * d[35] - 2 * d[27] * d[32] * d[34] * d[35] + d[27] * d[28] * std::pow(d[35], 2) - std::pow(d[30], 2) * std::pow(d[35], 2);
    coeffs[55] = 2 * d[6] * d[10] * d[11] * d[15] - 2 * d[7] * d[11] * d[12] * d[15] - 2 * d[8] * d[10] * d[13] * d[15] + 2 * d[8] * d[12] * d[14] * d[15] + 2 * d[7] * d[13] * d[14] * d[15] - 2 * d[6] * std::pow(d[14], 2) * d[15] + d[2] * d[10] * std::pow(d[15], 2) + d[1] * d[11] * std::pow(d[15], 2) - 2 * d[5] * d[14] * std::pow(d[15], 2) + 2 * d[7] * d[9] * d[11] * d[16] - 2 * d[6] * d[11] * d[12] * d[16] + 2 * d[8] * d[12] * d[13] * d[16] - 2 * d[7] * std::pow(d[13], 2) * d[16] - 2 * d[8] * d[9] * d[14] * d[16] + 2 * d[6] * d[13] * d[14] * d[16] - 2 * d[3] * d[11] * d[15] * d[16] - 2 * d[2] * d[12] * d[15] * d[16] + 2 * d[5] * d[13] * d[15] * d[16] + 2 * d[4] * d[14] * d[15] * d[16] + d[2] * d[9] * std::pow(d[16], 2) + d[0] * d[11] * std::pow(d[16], 2) - 2 * d[4] * d[13] * std::pow(d[16], 2) + 2 * d[8] * d[9] * d[10] * d[17] - 2 * d[8] * std::pow(d[12], 2) * d[17] - 2 * d[6] * d[10] * d[13] * d[17] + 2 * d[7] * d[12] * d[13] * d[17] - 2 * d[7] * d[9] * d[14] * d[17] + 2 * d[6] * d[12] * d[14] * d[17] - 2 * d[4] * d[10] * d[15] * d[17] + 2 * d[5] * d[12] * d[15] * d[17] - 2 * d[1] * d[13] * d[15] * d[17] + 2 * d[3] * d[14] * d[15] * d[17] - 2 * d[5] * d[9] * d[16] * d[17] + 2 * d[4] * d[12] * d[16] * d[17] + 2 * d[3] * d[13] * d[16] * d[17] - 2 * d[0] * d[14] * d[16] * d[17] + d[1] * d[9] * std::pow(d[17], 2) + d[0] * d[10] * std::pow(d[17], 2) - 2 * d[3] * d[12] * std::pow(d[17], 2) - d[9] * d[10] * d[11] * d[44] + d[11] * std::pow(d[12], 2) * d[44] + d[10] * std::pow(d[13], 2) * d[44] - 2 * d[12] * d[13] * d[14] * d[44] + d[9] * std::pow(d[14], 2) * d[44];
    coeffs[56] = 2 * d[7] * d[11] * d[16] * d[18] - 2 * d[8] * d[14] * d[16] * d[18] + d[2] * std::pow(d[16], 2) * d[18] + 2 * d[8] * d[10] * d[17] * d[18] - 2 * d[7] * d[14] * d[17] * d[18] - 2 * d[5] * d[16] * d[17] * d[18] + d[1] * std::pow(d[17], 2) * d[18] + 2 * d[6] * d[11] * d[15] * d[19] - 2 * d[8] * d[13] * d[15] * d[19] + d[2] * std::pow(d[15], 2) * d[19] + 2 * d[8] * d[9] * d[17] * d[19] - 2 * d[6] * d[13] * d[17] * d[19] - 2 * d[4] * d[15] * d[17] * d[19] + d[0] * std::pow(d[17], 2) * d[19] + 2 * d[6] * d[10] * d[15] * d[20] - 2 * d[7] * d[12] * d[15] * d[20] + d[1] * std::pow(d[15], 2) * d[20] + 2 * d[7] * d[9] * d[16] * d[20] - 2 * d[6] * d[12] * d[16] * d[20] - 2 * d[3] * d[15] * d[16] * d[20] + d[0] * std::pow(d[16], 2) * d[20] - 2 * d[7] * d[11] * d[15] * d[21] + 2 * d[8] * d[14] * d[15] * d[21] - 2 * d[6] * d[11] * d[16] * d[21] + 2 * d[8] * d[13] * d[16] * d[21] - 2 * d[2] * d[15] * d[16] * d[21] - 4 * d[8] * d[12] * d[17] * d[21] + 2 * d[7] * d[13] * d[17] * d[21] + 2 * d[6] * d[14] * d[17] * d[21] + 2 * d[5] * d[15] * d[17] * d[21] + 2 * d[4] * d[16] * d[17] * d[21] - 2 * d[3] * std::pow(d[17], 2) * d[21] - 2 * d[8] * d[10] * d[15] * d[22] + 2 * d[7] * d[14] * d[15] * d[22] + 2 * d[8] * d[12] * d[16] * d[22] - 4 * d[7] * d[13] * d[16] * d[22] + 2 * d[6] * d[14] * d[16] * d[22] + 2 * d[5] * d[15] * d[16] * d[22] - 2 * d[4] * std::pow(d[16], 2) * d[22] - 2 * d[6] * d[10] * d[17] * d[22] + 2 * d[7] * d[12] * d[17] * d[22] - 2 * d[1] * d[15] * d[17] * d[22] + 2 * d[3] * d[16] * d[17] * d[22] + 2 * d[8] * d[12] * d[15] * d[23] + 2 * d[7] * d[13] * d[15] * d[23] - 4 * d[6] * d[14] * d[15] * d[23] - 2 * d[5] * std::pow(d[15], 2) * d[23] - 2 * d[8] * d[9] * d[16] * d[23] + 2 * d[6] * d[13] * d[16] * d[23] + 2 * d[4] * d[15] * d[16] * d[23] - 2 * d[7] * d[9] * d[17] * d[23] + 2 * d[6] * d[12] * d[17] * d[23] + 2 * d[3] * d[15] * d[17] * d[23] - 2 * d[0] * d[16] * d[17] * d[23] + 2 * d[6] * d[10] * d[11] * d[24] - 2 * d[7] * d[11] * d[12] * d[24] - 2 * d[8] * d[10] * d[13] * d[24] + 2 * d[8] * d[12] * d[14] * d[24] + 2 * d[7] * d[13] * d[14] * d[24] - 2 * d[6] * std::pow(d[14], 2) * d[24] + 2 * d[2] * d[10] * d[15] * d[24] + 2 * d[1] * d[11] * d[15] * d[24] - 4 * d[5] * d[14] * d[15] * d[24] - 2 * d[3] * d[11] * d[16] * d[24] - 2 * d[2] * d[12] * d[16] * d[24] + 2 * d[5] * d[13] * d[16] * d[24] + 2 * d[4] * d[14] * d[16] * d[24] - 2 * d[4] * d[10] * d[17] * d[24] + 2 * d[5] * d[12] * d[17] * d[24] - 2 * d[1] * d[13] * d[17] * d[24] + 2 * d[3] * d[14] * d[17] * d[24] + 2 * d[7] * d[9] * d[11] * d[25] - 2 * d[6] * d[11] * d[12] * d[25] + 2 * d[8] * d[12] * d[13] * d[25] - 2 * d[7] * std::pow(d[13], 2) * d[25] - 2 * d[8] * d[9] * d[14] * d[25] + 2 * d[6] * d[13] * d[14] * d[25] - 2 * d[3] * d[11] * d[15] * d[25] - 2 * d[2] * d[12] * d[15] * d[25] + 2 * d[5] * d[13] * d[15] * d[25] + 2 * d[4] * d[14] * d[15] * d[25] + 2 * d[2] * d[9] * d[16] * d[25] + 2 * d[0] * d[11] * d[16] * d[25] - 4 * d[4] * d[13] * d[16] * d[25] - 2 * d[5] * d[9] * d[17] * d[25] + 2 * d[4] * d[12] * d[17] * d[25] + 2 * d[3] * d[13] * d[17] * d[25] - 2 * d[0] * d[14] * d[17] * d[25] + 2 * d[8] * d[9] * d[10] * d[26] - 2 * d[8] * std::pow(d[12], 2) * d[26] - 2 * d[6] * d[10] * d[13] * d[26] + 2 * d[7] * d[12] * d[13] * d[26] - 2 * d[7] * d[9] * d[14] * d[26] + 2 * d[6] * d[12] * d[14] * d[26] - 2 * d[4] * d[10] * d[15] * d[26] + 2 * d[5] * d[12] * d[15] * d[26] - 2 * d[1] * d[13] * d[15] * d[26] + 2 * d[3] * d[14] * d[15] * d[26] - 2 * d[5] * d[9] * d[16] * d[26] + 2 * d[4] * d[12] * d[16] * d[26] + 2 * d[3] * d[13] * d[16] * d[26] - 2 * d[0] * d[14] * d[16] * d[26] + 2 * d[1] * d[9] * d[17] * d[26] + 2 * d[0] * d[10] * d[17] * d[26] - 4 * d[3] * d[12] * d[17] * d[26] - d[10] * d[11] * d[18] * d[44] + std::pow(d[14], 2) * d[18] * d[44] - d[9] * d[11] * d[19] * d[44] + std::pow(d[13], 2) * d[19] * d[44] - d[9] * d[10] * d[20] * d[44] + std::pow(d[12], 2) * d[20] * d[44] + 2 * d[11] * d[12] * d[21] * d[44] - 2 * d[13] * d[14] * d[21] * d[44] + 2 * d[10] * d[13] * d[22] * d[44] - 2 * d[12] * d[14] * d[22] * d[44] - 2 * d[12] * d[13] * d[23] * d[44] + 2 * d[9] * d[14] * d[23] * d[44];
    coeffs[57] = 2 * d[8] * d[17] * d[18] * d[19] + 2 * d[7] * d[16] * d[18] * d[20] + 2 * d[6] * d[15] * d[19] * d[20] - 2 * d[7] * d[15] * d[20] * d[21] - 2 * d[6] * d[16] * d[20] * d[21] - 2 * d[8] * d[17] * std::pow(d[21], 2) - 2 * d[8] * d[15] * d[19] * d[22] - 2 * d[6] * d[17] * d[19] * d[22] + 2 * d[8] * d[16] * d[21] * d[22] + 2 * d[7] * d[17] * d[21] * d[22] - 2 * d[7] * d[16] * std::pow(d[22], 2) - 2 * d[8] * d[16] * d[18] * d[23] - 2 * d[7] * d[17] * d[18] * d[23] + 2 * d[8] * d[15] * d[21] * d[23] + 2 * d[6] * d[17] * d[21] * d[23] + 2 * d[7] * d[15] * d[22] * d[23] + 2 * d[6] * d[16] * d[22] * d[23] - 2 * d[6] * d[15] * std::pow(d[23], 2) + 2 * d[6] * d[11] * d[19] * d[24] - 2 * d[8] * d[13] * d[19] * d[24] + 2 * d[2] * d[15] * d[19] * d[24] - 2 * d[4] * d[17] * d[19] * d[24] + 2 * d[6] * d[10] * d[20] * d[24] - 2 * d[7] * d[12] * d[20] * d[24] + 2 * d[1] * d[15] * d[20] * d[24] - 2 * d[3] * d[16] * d[20] * d[24] - 2 * d[7] * d[11] * d[21] * d[24] + 2 * d[8] * d[14] * d[21] * d[24] - 2 * d[2] * d[16] * d[21] * d[24] + 2 * d[5] * d[17] * d[21] * d[24] - 2 * d[8] * d[10] * d[22] * d[24] + 2 * d[7] * d[14] * d[22] * d[24] + 2 * d[5] * d[16] * d[22] * d[24] - 2 * d[1] * d[17] * d[22] * d[24] + 2 * d[8] * d[12] * d[23] * d[24] + 2 * d[7] * d[13] * d[23] * d[24] - 4 * d[6] * d[14] * d[23] * d[24] - 4 * d[5] * d[15] * d[23] * d[24] + 2 * d[4] * d[16] * d[23] * d[24] + 2 * d[3] * d[17] * d[23] * d[24] + d[2] * d[10] * std::pow(d[24], 2) + d[1] * d[11] * std::pow(d[24], 2) - 2 * d[5] * d[14] * std::pow(d[24], 2) + 2 * d[7] * d[11] * d[18] * d[25] - 2 * d[8] * d[14] * d[18] * d[25] + 2 * d[2] * d[16] * d[18] * d[25] - 2 * d[5] * d[17] * d[18] * d[25] + 2 * d[7] * d[9] * d[20] * d[25] - 2 * d[6] * d[12] * d[20] * d[25] - 2 * d[3] * d[15] * d[20] * d[25] + 2 * d[0] * d[16] * d[20] * d[25] - 2 * d[6] * d[11] * d[21] * d[25] + 2 * d[8] * d[13] * d[21] * d[25] - 2 * d[2] * d[15] * d[21] * d[25] + 2 * d[4] * d[17] * d[21] * d[25] + 2 * d[8] * d[12] * d[22] * d[25] - 4 * d[7] * d[13] * d[22] * d[25] + 2 * d[6] * d[14] * d[22] * d[25] + 2 * d[5] * d[15] * d[22] * d[25] - 4 * d[4] * d[16] * d[22] * d[25] + 2 * d[3] * d[17] * d[22] * d[25] - 2 * d[8] * d[9] * d[23] * d[25] + 2 * d[6] * d[13] * d[23] * d[25] + 2 * d[4] * d[15] * d[23] * d[25] - 2 * d[0] * d[17] * d[23] * d[25] - 2 * d[3] * d[11] * d[24] * d[25] - 2 * d[2] * d[12] * d[24] * d[25] + 2 * d[5] * d[13] * d[24] * d[25] + 2 * d[4] * d[14] * d[24] * d[25] + d[2] * d[9] * std::pow(d[25], 2) + d[0] * d[11] * std::pow(d[25], 2) - 2 * d[4] * d[13] * std::pow(d[25], 2) + 2 * d[8] * d[10] * d[18] * d[26] - 2 * d[7] * d[14] * d[18] * d[26] - 2 * d[5] * d[16] * d[18] * d[26] + 2 * d[1] * d[17] * d[18] * d[26] + 2 * d[8] * d[9] * d[19] * d[26] - 2 * d[6] * d[13] * d[19] * d[26] - 2 * d[4] * d[15] * d[19] * d[26] + 2 * d[0] * d[17] * d[19] * d[26] - 4 * d[8] * d[12] * d[21] * d[26] + 2 * d[7] * d[13] * d[21] * d[26] + 2 * d[6] * d[14] * d[21] * d[26] + 2 * d[5] * d[15] * d[21] * d[26] + 2 * d[4] * d[16] * d[21] * d[26] - 4 * d[3] * d[17] * d[21] * d[26] - 2 * d[6] * d[10] * d[22] * d[26] + 2 * d[7] * d[12] * d[22] * d[26] - 2 * d[1] * d[15] * d[22] * d[26] + 2 * d[3] * d[16] * d[22] * d[26] - 2 * d[7] * d[9] * d[23] * d[26] + 2 * d[6] * d[12] * d[23] * d[26] + 2 * d[3] * d[15] * d[23] * d[26] - 2 * d[0] * d[16] * d[23] * d[26] - 2 * d[4] * d[10] * d[24] * d[26] + 2 * d[5] * d[12] * d[24] * d[26] - 2 * d[1] * d[13] * d[24] * d[26] + 2 * d[3] * d[14] * d[24] * d[26] - 2 * d[5] * d[9] * d[25] * d[26] + 2 * d[4] * d[12] * d[25] * d[26] + 2 * d[3] * d[13] * d[25] * d[26] - 2 * d[0] * d[14] * d[25] * d[26] + d[1] * d[9] * std::pow(d[26], 2) + d[0] * d[10] * std::pow(d[26], 2) - 2 * d[3] * d[12] * std::pow(d[26], 2) - d[11] * d[18] * d[19] * d[44] - d[10] * d[18] * d[20] * d[44] - d[9] * d[19] * d[20] * d[44] + 2 * d[12] * d[20] * d[21] * d[44] + d[11] * std::pow(d[21], 2) * d[44] + 2 * d[13] * d[19] * d[22] * d[44] - 2 * d[14] * d[21] * d[22] * d[44] + d[10] * std::pow(d[22], 2) * d[44] + 2 * d[14] * d[18] * d[23] * d[44] - 2 * d[13] * d[21] * d[23] * d[44] - 2 * d[12] * d[22] * d[23] * d[44] + d[9] * std::pow(d[23], 2) * d[44];
    coeffs[58] = 2 * d[6] * d[19] * d[20] * d[24] - 2 * d[7] * d[20] * d[21] * d[24] - 2 * d[8] * d[19] * d[22] * d[24] + 2 * d[8] * d[21] * d[23] * d[24] + 2 * d[7] * d[22] * d[23] * d[24] - 2 * d[6] * std::pow(d[23], 2) * d[24] + d[2] * d[19] * std::pow(d[24], 2) + d[1] * d[20] * std::pow(d[24], 2) - 2 * d[5] * d[23] * std::pow(d[24], 2) + 2 * d[7] * d[18] * d[20] * d[25] - 2 * d[6] * d[20] * d[21] * d[25] + 2 * d[8] * d[21] * d[22] * d[25] - 2 * d[7] * std::pow(d[22], 2) * d[25] - 2 * d[8] * d[18] * d[23] * d[25] + 2 * d[6] * d[22] * d[23] * d[25] - 2 * d[3] * d[20] * d[24] * d[25] - 2 * d[2] * d[21] * d[24] * d[25] + 2 * d[5] * d[22] * d[24] * d[25] + 2 * d[4] * d[23] * d[24] * d[25] + d[2] * d[18] * std::pow(d[25], 2) + d[0] * d[20] * std::pow(d[25], 2) - 2 * d[4] * d[22] * std::pow(d[25], 2) + 2 * d[8] * d[18] * d[19] * d[26] - 2 * d[8] * std::pow(d[21], 2) * d[26] - 2 * d[6] * d[19] * d[22] * d[26] + 2 * d[7] * d[21] * d[22] * d[26] - 2 * d[7] * d[18] * d[23] * d[26] + 2 * d[6] * d[21] * d[23] * d[26] - 2 * d[4] * d[19] * d[24] * d[26] + 2 * d[5] * d[21] * d[24] * d[26] - 2 * d[1] * d[22] * d[24] * d[26] + 2 * d[3] * d[23] * d[24] * d[26] - 2 * d[5] * d[18] * d[25] * d[26] + 2 * d[4] * d[21] * d[25] * d[26] + 2 * d[3] * d[22] * d[25] * d[26] - 2 * d[0] * d[23] * d[25] * d[26] + d[1] * d[18] * std::pow(d[26], 2) + d[0] * d[19] * std::pow(d[26], 2) - 2 * d[3] * d[21] * std::pow(d[26], 2) - d[18] * d[19] * d[20] * d[44] + d[20] * std::pow(d[21], 2) * d[44] + d[19] * std::pow(d[22], 2) * d[44] - 2 * d[21] * d[22] * d[23] * d[44] + d[18] * std::pow(d[23], 2) * d[44];
    coeffs[59] = 2 * d[7] * d[11] * d[16] * d[27] - 2 * d[8] * d[14] * d[16] * d[27] + d[2] * std::pow(d[16], 2) * d[27] + 2 * d[8] * d[10] * d[17] * d[27] - 2 * d[7] * d[14] * d[17] * d[27] - 2 * d[5] * d[16] * d[17] * d[27] + d[1] * std::pow(d[17], 2) * d[27] + 2 * d[6] * d[11] * d[15] * d[28] - 2 * d[8] * d[13] * d[15] * d[28] + d[2] * std::pow(d[15], 2) * d[28] + 2 * d[8] * d[9] * d[17] * d[28] - 2 * d[6] * d[13] * d[17] * d[28] - 2 * d[4] * d[15] * d[17] * d[28] + d[0] * std::pow(d[17], 2) * d[28] + 2 * d[6] * d[10] * d[15] * d[29] - 2 * d[7] * d[12] * d[15] * d[29] + d[1] * std::pow(d[15], 2) * d[29] + 2 * d[7] * d[9] * d[16] * d[29] - 2 * d[6] * d[12] * d[16] * d[29] - 2 * d[3] * d[15] * d[16] * d[29] + d[0] * std::pow(d[16], 2) * d[29] - 2 * d[7] * d[11] * d[15] * d[30] + 2 * d[8] * d[14] * d[15] * d[30] - 2 * d[6] * d[11] * d[16] * d[30] + 2 * d[8] * d[13] * d[16] * d[30] - 2 * d[2] * d[15] * d[16] * d[30] - 4 * d[8] * d[12] * d[17] * d[30] + 2 * d[7] * d[13] * d[17] * d[30] + 2 * d[6] * d[14] * d[17] * d[30] + 2 * d[5] * d[15] * d[17] * d[30] + 2 * d[4] * d[16] * d[17] * d[30] - 2 * d[3] * std::pow(d[17], 2) * d[30] - 2 * d[8] * d[10] * d[15] * d[31] + 2 * d[7] * d[14] * d[15] * d[31] + 2 * d[8] * d[12] * d[16] * d[31] - 4 * d[7] * d[13] * d[16] * d[31] + 2 * d[6] * d[14] * d[16] * d[31] + 2 * d[5] * d[15] * d[16] * d[31] - 2 * d[4] * std::pow(d[16], 2) * d[31] - 2 * d[6] * d[10] * d[17] * d[31] + 2 * d[7] * d[12] * d[17] * d[31] - 2 * d[1] * d[15] * d[17] * d[31] + 2 * d[3] * d[16] * d[17] * d[31] + 2 * d[8] * d[12] * d[15] * d[32] + 2 * d[7] * d[13] * d[15] * d[32] - 4 * d[6] * d[14] * d[15] * d[32] - 2 * d[5] * std::pow(d[15], 2) * d[32] - 2 * d[8] * d[9] * d[16] * d[32] + 2 * d[6] * d[13] * d[16] * d[32] + 2 * d[4] * d[15] * d[16] * d[32] - 2 * d[7] * d[9] * d[17] * d[32] + 2 * d[6] * d[12] * d[17] * d[32] + 2 * d[3] * d[15] * d[17] * d[32] - 2 * d[0] * d[16] * d[17] * d[32] + 2 * d[6] * d[10] * d[11] * d[33] - 2 * d[7] * d[11] * d[12] * d[33] - 2 * d[8] * d[10] * d[13] * d[33] + 2 * d[8] * d[12] * d[14] * d[33] + 2 * d[7] * d[13] * d[14] * d[33] - 2 * d[6] * std::pow(d[14], 2) * d[33] + 2 * d[2] * d[10] * d[15] * d[33] + 2 * d[1] * d[11] * d[15] * d[33] - 4 * d[5] * d[14] * d[15] * d[33] - 2 * d[3] * d[11] * d[16] * d[33] - 2 * d[2] * d[12] * d[16] * d[33] + 2 * d[5] * d[13] * d[16] * d[33] + 2 * d[4] * d[14] * d[16] * d[33] - 2 * d[4] * d[10] * d[17] * d[33] + 2 * d[5] * d[12] * d[17] * d[33] - 2 * d[1] * d[13] * d[17] * d[33] + 2 * d[3] * d[14] * d[17] * d[33] + 2 * d[7] * d[9] * d[11] * d[34] - 2 * d[6] * d[11] * d[12] * d[34] + 2 * d[8] * d[12] * d[13] * d[34] - 2 * d[7] * std::pow(d[13], 2) * d[34] - 2 * d[8] * d[9] * d[14] * d[34] + 2 * d[6] * d[13] * d[14] * d[34] - 2 * d[3] * d[11] * d[15] * d[34] - 2 * d[2] * d[12] * d[15] * d[34] + 2 * d[5] * d[13] * d[15] * d[34] + 2 * d[4] * d[14] * d[15] * d[34] + 2 * d[2] * d[9] * d[16] * d[34] + 2 * d[0] * d[11] * d[16] * d[34] - 4 * d[4] * d[13] * d[16] * d[34] - 2 * d[5] * d[9] * d[17] * d[34] + 2 * d[4] * d[12] * d[17] * d[34] + 2 * d[3] * d[13] * d[17] * d[34] - 2 * d[0] * d[14] * d[17] * d[34] + 2 * d[8] * d[9] * d[10] * d[35] - 2 * d[8] * std::pow(d[12], 2) * d[35] - 2 * d[6] * d[10] * d[13] * d[35] + 2 * d[7] * d[12] * d[13] * d[35] - 2 * d[7] * d[9] * d[14] * d[35] + 2 * d[6] * d[12] * d[14] * d[35] - 2 * d[4] * d[10] * d[15] * d[35] + 2 * d[5] * d[12] * d[15] * d[35] - 2 * d[1] * d[13] * d[15] * d[35] + 2 * d[3] * d[14] * d[15] * d[35] - 2 * d[5] * d[9] * d[16] * d[35] + 2 * d[4] * d[12] * d[16] * d[35] + 2 * d[3] * d[13] * d[16] * d[35] - 2 * d[0] * d[14] * d[16] * d[35] + 2 * d[1] * d[9] * d[17] * d[35] + 2 * d[0] * d[10] * d[17] * d[35] - 4 * d[3] * d[12] * d[17] * d[35] - d[10] * d[11] * d[27] * d[44] + std::pow(d[14], 2) * d[27] * d[44] - d[9] * d[11] * d[28] * d[44] + std::pow(d[13], 2) * d[28] * d[44] - d[9] * d[10] * d[29] * d[44] + std::pow(d[12], 2) * d[29] * d[44] + 2 * d[11] * d[12] * d[30] * d[44] - 2 * d[13] * d[14] * d[30] * d[44] + 2 * d[10] * d[13] * d[31] * d[44] - 2 * d[12] * d[14] * d[31] * d[44] - 2 * d[12] * d[13] * d[32] * d[44] + 2 * d[9] * d[14] * d[32] * d[44];
    coeffs[60] = 2 * d[8] * d[17] * d[19] * d[27] + 2 * d[7] * d[16] * d[20] * d[27] - 2 * d[8] * d[16] * d[23] * d[27] - 2 * d[7] * d[17] * d[23] * d[27] + 2 * d[7] * d[11] * d[25] * d[27] - 2 * d[8] * d[14] * d[25] * d[27] + 2 * d[2] * d[16] * d[25] * d[27] - 2 * d[5] * d[17] * d[25] * d[27] + 2 * d[8] * d[10] * d[26] * d[27] - 2 * d[7] * d[14] * d[26] * d[27] - 2 * d[5] * d[16] * d[26] * d[27] + 2 * d[1] * d[17] * d[26] * d[27] + 2 * d[8] * d[17] * d[18] * d[28] + 2 * d[6] * d[15] * d[20] * d[28] - 2 * d[8] * d[15] * d[22] * d[28] - 2 * d[6] * d[17] * d[22] * d[28] + 2 * d[6] * d[11] * d[24] * d[28] - 2 * d[8] * d[13] * d[24] * d[28] + 2 * d[2] * d[15] * d[24] * d[28] - 2 * d[4] * d[17] * d[24] * d[28] + 2 * d[8] * d[9] * d[26] * d[28] - 2 * d[6] * d[13] * d[26] * d[28] - 2 * d[4] * d[15] * d[26] * d[28] + 2 * d[0] * d[17] * d[26] * d[28] + 2 * d[7] * d[16] * d[18] * d[29] + 2 * d[6] * d[15] * d[19] * d[29] - 2 * d[7] * d[15] * d[21] * d[29] - 2 * d[6] * d[16] * d[21] * d[29] + 2 * d[6] * d[10] * d[24] * d[29] - 2 * d[7] * d[12] * d[24] * d[29] + 2 * d[1] * d[15] * d[24] * d[29] - 2 * d[3] * d[16] * d[24] * d[29] + 2 * d[7] * d[9] * d[25] * d[29] - 2 * d[6] * d[12] * d[25] * d[29] - 2 * d[3] * d[15] * d[25] * d[29] + 2 * d[0] * d[16] * d[25] * d[29] - 2 * d[7] * d[15] * d[20] * d[30] - 2 * d[6] * d[16] * d[20] * d[30] - 4 * d[8] * d[17] * d[21] * d[30] + 2 * d[8] * d[16] * d[22] * d[30] + 2 * d[7] * d[17] * d[22] * d[30] + 2 * d[8] * d[15] * d[23] * d[30] + 2 * d[6] * d[17] * d[23] * d[30] - 2 * d[7] * d[11] * d[24] * d[30] + 2 * d[8] * d[14] * d[24] * d[30] - 2 * d[2] * d[16] * d[24] * d[30] + 2 * d[5] * d[17] * d[24] * d[30] - 2 * d[6] * d[11] * d[25] * d[30] + 2 * d[8] * d[13] * d[25] * d[30] - 2 * d[2] * d[15] * d[25] * d[30] + 2 * d[4] * d[17] * d[25] * d[30] - 4 * d[8] * d[12] * d[26] * d[30] + 2 * d[7] * d[13] * d[26] * d[30] + 2 * d[6] * d[14] * d[26] * d[30] + 2 * d[5] * d[15] * d[26] * d[30] + 2 * d[4] * d[16] * d[26] * d[30] - 4 * d[3] * d[17] * d[26] * d[30] - 2 * d[8] * d[15] * d[19] * d[31] - 2 * d[6] * d[17] * d[19] * d[31] + 2 * d[8] * d[16] * d[21] * d[31] + 2 * d[7] * d[17] * d[21] * d[31] - 4 * d[7] * d[16] * d[22] * d[31] + 2 * d[7] * d[15] * d[23] * d[31] + 2 * d[6] * d[16] * d[23] * d[31] - 2 * d[8] * d[10] * d[24] * d[31] + 2 * d[7] * d[14] * d[24] * d[31] + 2 * d[5] * d[16] * d[24] * d[31] - 2 * d[1] * d[17] * d[24] * d[31] + 2 * d[8] * d[12] * d[25] * d[31] - 4 * d[7] * d[13] * d[25] * d[31] + 2 * d[6] * d[14] * d[25] * d[31] + 2 * d[5] * d[15] * d[25] * d[31] - 4 * d[4] * d[16] * d[25] * d[31] + 2 * d[3] * d[17] * d[25] * d[31] - 2 * d[6] * d[10] * d[26] * d[31] + 2 * d[7] * d[12] * d[26] * d[31] - 2 * d[1] * d[15] * d[26] * d[31] + 2 * d[3] * d[16] * d[26] * d[31] - 2 * d[8] * d[16] * d[18] * d[32] - 2 * d[7] * d[17] * d[18] * d[32] + 2 * d[8] * d[15] * d[21] * d[32] + 2 * d[6] * d[17] * d[21] * d[32] + 2 * d[7] * d[15] * d[22] * d[32] + 2 * d[6] * d[16] * d[22] * d[32] - 4 * d[6] * d[15] * d[23] * d[32] + 2 * d[8] * d[12] * d[24] * d[32] + 2 * d[7] * d[13] * d[24] * d[32] - 4 * d[6] * d[14] * d[24] * d[32] - 4 * d[5] * d[15] * d[24] * d[32] + 2 * d[4] * d[16] * d[24] * d[32] + 2 * d[3] * d[17] * d[24] * d[32] - 2 * d[8] * d[9] * d[25] * d[32] + 2 * d[6] * d[13] * d[25] * d[32] + 2 * d[4] * d[15] * d[25] * d[32] - 2 * d[0] * d[17] * d[25] * d[32] - 2 * d[7] * d[9] * d[26] * d[32] + 2 * d[6] * d[12] * d[26] * d[32] + 2 * d[3] * d[15] * d[26] * d[32] - 2 * d[0] * d[16] * d[26] * d[32] + 2 * d[6] * d[11] * d[19] * d[33] - 2 * d[8] * d[13] * d[19] * d[33] + 2 * d[2] * d[15] * d[19] * d[33] - 2 * d[4] * d[17] * d[19] * d[33] + 2 * d[6] * d[10] * d[20] * d[33] - 2 * d[7] * d[12] * d[20] * d[33] + 2 * d[1] * d[15] * d[20] * d[33] - 2 * d[3] * d[16] * d[20] * d[33] - 2 * d[7] * d[11] * d[21] * d[33] + 2 * d[8] * d[14] * d[21] * d[33] - 2 * d[2] * d[16] * d[21] * d[33] + 2 * d[5] * d[17] * d[21] * d[33] - 2 * d[8] * d[10] * d[22] * d[33] + 2 * d[7] * d[14] * d[22] * d[33] + 2 * d[5] * d[16] * d[22] * d[33] - 2 * d[1] * d[17] * d[22] * d[33] + 2 * d[8] * d[12] * d[23] * d[33] + 2 * d[7] * d[13] * d[23] * d[33] - 4 * d[6] * d[14] * d[23] * d[33] - 4 * d[5] * d[15] * d[23] * d[33] + 2 * d[4] * d[16] * d[23] * d[33] + 2 * d[3] * d[17] * d[23] * d[33] + 2 * d[2] * d[10] * d[24] * d[33] + 2 * d[1] * d[11] * d[24] * d[33] - 4 * d[5] * d[14] * d[24] * d[33] - 2 * d[3] * d[11] * d[25] * d[33] - 2 * d[2] * d[12] * d[25] * d[33] + 2 * d[5] * d[13] * d[25] * d[33] + 2 * d[4] * d[14] * d[25] * d[33] - 2 * d[4] * d[10] * d[26] * d[33] + 2 * d[5] * d[12] * d[26] * d[33] - 2 * d[1] * d[13] * d[26] * d[33] + 2 * d[3] * d[14] * d[26] * d[33] + 2 * d[7] * d[11] * d[18] * d[34] - 2 * d[8] * d[14] * d[18] * d[34] + 2 * d[2] * d[16] * d[18] * d[34] - 2 * d[5] * d[17] * d[18] * d[34] + 2 * d[7] * d[9] * d[20] * d[34] - 2 * d[6] * d[12] * d[20] * d[34] - 2 * d[3] * d[15] * d[20] * d[34] + 2 * d[0] * d[16] * d[20] * d[34] - 2 * d[6] * d[11] * d[21] * d[34] + 2 * d[8] * d[13] * d[21] * d[34] - 2 * d[2] * d[15] * d[21] * d[34] + 2 * d[4] * d[17] * d[21] * d[34] + 2 * d[8] * d[12] * d[22] * d[34] - 4 * d[7] * d[13] * d[22] * d[34] + 2 * d[6] * d[14] * d[22] * d[34] + 2 * d[5] * d[15] * d[22] * d[34] - 4 * d[4] * d[16] * d[22] * d[34] + 2 * d[3] * d[17] * d[22] * d[34] - 2 * d[8] * d[9] * d[23] * d[34] + 2 * d[6] * d[13] * d[23] * d[34] + 2 * d[4] * d[15] * d[23] * d[34] - 2 * d[0] * d[17] * d[23] * d[34] - 2 * d[3] * d[11] * d[24] * d[34] - 2 * d[2] * d[12] * d[24] * d[34] + 2 * d[5] * d[13] * d[24] * d[34] + 2 * d[4] * d[14] * d[24] * d[34] + 2 * d[2] * d[9] * d[25] * d[34] + 2 * d[0] * d[11] * d[25] * d[34] - 4 * d[4] * d[13] * d[25] * d[34] - 2 * d[5] * d[9] * d[26] * d[34] + 2 * d[4] * d[12] * d[26] * d[34] + 2 * d[3] * d[13] * d[26] * d[34] - 2 * d[0] * d[14] * d[26] * d[34] + 2 * d[8] * d[10] * d[18] * d[35] - 2 * d[7] * d[14] * d[18] * d[35] - 2 * d[5] * d[16] * d[18] * d[35] + 2 * d[1] * d[17] * d[18] * d[35] + 2 * d[8] * d[9] * d[19] * d[35] - 2 * d[6] * d[13] * d[19] * d[35] - 2 * d[4] * d[15] * d[19] * d[35] + 2 * d[0] * d[17] * d[19] * d[35] - 4 * d[8] * d[12] * d[21] * d[35] + 2 * d[7] * d[13] * d[21] * d[35] + 2 * d[6] * d[14] * d[21] * d[35] + 2 * d[5] * d[15] * d[21] * d[35] + 2 * d[4] * d[16] * d[21] * d[35] - 4 * d[3] * d[17] * d[21] * d[35] - 2 * d[6] * d[10] * d[22] * d[35] + 2 * d[7] * d[12] * d[22] * d[35] - 2 * d[1] * d[15] * d[22] * d[35] + 2 * d[3] * d[16] * d[22] * d[35] - 2 * d[7] * d[9] * d[23] * d[35] + 2 * d[6] * d[12] * d[23] * d[35] + 2 * d[3] * d[15] * d[23] * d[35] - 2 * d[0] * d[16] * d[23] * d[35] - 2 * d[4] * d[10] * d[24] * d[35] + 2 * d[5] * d[12] * d[24] * d[35] - 2 * d[1] * d[13] * d[24] * d[35] + 2 * d[3] * d[14] * d[24] * d[35] - 2 * d[5] * d[9] * d[25] * d[35] + 2 * d[4] * d[12] * d[25] * d[35] + 2 * d[3] * d[13] * d[25] * d[35] - 2 * d[0] * d[14] * d[25] * d[35] + 2 * d[1] * d[9] * d[26] * d[35] + 2 * d[0] * d[10] * d[26] * d[35] - 4 * d[3] * d[12] * d[26] * d[35] - d[11] * d[19] * d[27] * d[44] - d[10] * d[20] * d[27] * d[44] + 2 * d[14] * d[23] * d[27] * d[44] - d[11] * d[18] * d[28] * d[44] - d[9] * d[20] * d[28] * d[44] + 2 * d[13] * d[22] * d[28] * d[44] - d[10] * d[18] * d[29] * d[44] - d[9] * d[19] * d[29] * d[44] + 2 * d[12] * d[21] * d[29] * d[44] + 2 * d[12] * d[20] * d[30] * d[44] + 2 * d[11] * d[21] * d[30] * d[44] - 2 * d[14] * d[22] * d[30] * d[44] - 2 * d[13] * d[23] * d[30] * d[44] + 2 * d[13] * d[19] * d[31] * d[44] - 2 * d[14] * d[21] * d[31] * d[44] + 2 * d[10] * d[22] * d[31] * d[44] - 2 * d[12] * d[23] * d[31] * d[44] + 2 * d[14] * d[18] * d[32] * d[44] - 2 * d[13] * d[21] * d[32] * d[44] - 2 * d[12] * d[22] * d[32] * d[44] + 2 * d[9] * d[23] * d[32] * d[44];
    coeffs[61] = 2 * d[7] * d[20] * d[25] * d[27] - 2 * d[8] * d[23] * d[25] * d[27] + d[2] * std::pow(d[25], 2) * d[27] + 2 * d[8] * d[19] * d[26] * d[27] - 2 * d[7] * d[23] * d[26] * d[27] - 2 * d[5] * d[25] * d[26] * d[27] + d[1] * std::pow(d[26], 2) * d[27] + 2 * d[6] * d[20] * d[24] * d[28] - 2 * d[8] * d[22] * d[24] * d[28] + d[2] * std::pow(d[24], 2) * d[28] + 2 * d[8] * d[18] * d[26] * d[28] - 2 * d[6] * d[22] * d[26] * d[28] - 2 * d[4] * d[24] * d[26] * d[28] + d[0] * std::pow(d[26], 2) * d[28] + 2 * d[6] * d[19] * d[24] * d[29] - 2 * d[7] * d[21] * d[24] * d[29] + d[1] * std::pow(d[24], 2) * d[29] + 2 * d[7] * d[18] * d[25] * d[29] - 2 * d[6] * d[21] * d[25] * d[29] - 2 * d[3] * d[24] * d[25] * d[29] + d[0] * std::pow(d[25], 2) * d[29] - 2 * d[7] * d[20] * d[24] * d[30] + 2 * d[8] * d[23] * d[24] * d[30] - 2 * d[6] * d[20] * d[25] * d[30] + 2 * d[8] * d[22] * d[25] * d[30] - 2 * d[2] * d[24] * d[25] * d[30] - 4 * d[8] * d[21] * d[26] * d[30] + 2 * d[7] * d[22] * d[26] * d[30] + 2 * d[6] * d[23] * d[26] * d[30] + 2 * d[5] * d[24] * d[26] * d[30] + 2 * d[4] * d[25] * d[26] * d[30] - 2 * d[3] * std::pow(d[26], 2) * d[30] - 2 * d[8] * d[19] * d[24] * d[31] + 2 * d[7] * d[23] * d[24] * d[31] + 2 * d[8] * d[21] * d[25] * d[31] - 4 * d[7] * d[22] * d[25] * d[31] + 2 * d[6] * d[23] * d[25] * d[31] + 2 * d[5] * d[24] * d[25] * d[31] - 2 * d[4] * std::pow(d[25], 2) * d[31] - 2 * d[6] * d[19] * d[26] * d[31] + 2 * d[7] * d[21] * d[26] * d[31] - 2 * d[1] * d[24] * d[26] * d[31] + 2 * d[3] * d[25] * d[26] * d[31] + 2 * d[8] * d[21] * d[24] * d[32] + 2 * d[7] * d[22] * d[24] * d[32] - 4 * d[6] * d[23] * d[24] * d[32] - 2 * d[5] * std::pow(d[24], 2) * d[32] - 2 * d[8] * d[18] * d[25] * d[32] + 2 * d[6] * d[22] * d[25] * d[32] + 2 * d[4] * d[24] * d[25] * d[32] - 2 * d[7] * d[18] * d[26] * d[32] + 2 * d[6] * d[21] * d[26] * d[32] + 2 * d[3] * d[24] * d[26] * d[32] - 2 * d[0] * d[25] * d[26] * d[32] + 2 * d[6] * d[19] * d[20] * d[33] - 2 * d[7] * d[20] * d[21] * d[33] - 2 * d[8] * d[19] * d[22] * d[33] + 2 * d[8] * d[21] * d[23] * d[33] + 2 * d[7] * d[22] * d[23] * d[33] - 2 * d[6] * std::pow(d[23], 2) * d[33] + 2 * d[2] * d[19] * d[24] * d[33] + 2 * d[1] * d[20] * d[24] * d[33] - 4 * d[5] * d[23] * d[24] * d[33] - 2 * d[3] * d[20] * d[25] * d[33] - 2 * d[2] * d[21] * d[25] * d[33] + 2 * d[5] * d[22] * d[25] * d[33] + 2 * d[4] * d[23] * d[25] * d[33] - 2 * d[4] * d[19] * d[26] * d[33] + 2 * d[5] * d[21] * d[26] * d[33] - 2 * d[1] * d[22] * d[26] * d[33] + 2 * d[3] * d[23] * d[26] * d[33] + 2 * d[7] * d[18] * d[20] * d[34] - 2 * d[6] * d[20] * d[21] * d[34] + 2 * d[8] * d[21] * d[22] * d[34] - 2 * d[7] * std::pow(d[22], 2) * d[34] - 2 * d[8] * d[18] * d[23] * d[34] + 2 * d[6] * d[22] * d[23] * d[34] - 2 * d[3] * d[20] * d[24] * d[34] - 2 * d[2] * d[21] * d[24] * d[34] + 2 * d[5] * d[22] * d[24] * d[34] + 2 * d[4] * d[23] * d[24] * d[34] + 2 * d[2] * d[18] * d[25] * d[34] + 2 * d[0] * d[20] * d[25] * d[34] - 4 * d[4] * d[22] * d[25] * d[34] - 2 * d[5] * d[18] * d[26] * d[34] + 2 * d[4] * d[21] * d[26] * d[34] + 2 * d[3] * d[22] * d[26] * d[34] - 2 * d[0] * d[23] * d[26] * d[34] + 2 * d[8] * d[18] * d[19] * d[35] - 2 * d[8] * std::pow(d[21], 2) * d[35] - 2 * d[6] * d[19] * d[22] * d[35] + 2 * d[7] * d[21] * d[22] * d[35] - 2 * d[7] * d[18] * d[23] * d[35] + 2 * d[6] * d[21] * d[23] * d[35] - 2 * d[4] * d[19] * d[24] * d[35] + 2 * d[5] * d[21] * d[24] * d[35] - 2 * d[1] * d[22] * d[24] * d[35] + 2 * d[3] * d[23] * d[24] * d[35] - 2 * d[5] * d[18] * d[25] * d[35] + 2 * d[4] * d[21] * d[25] * d[35] + 2 * d[3] * d[22] * d[25] * d[35] - 2 * d[0] * d[23] * d[25] * d[35] + 2 * d[1] * d[18] * d[26] * d[35] + 2 * d[0] * d[19] * d[26] * d[35] - 4 * d[3] * d[21] * d[26] * d[35] - d[19] * d[20] * d[27] * d[44] + std::pow(d[23], 2) * d[27] * d[44] - d[18] * d[20] * d[28] * d[44] + std::pow(d[22], 2) * d[28] * d[44] - d[18] * d[19] * d[29] * d[44] + std::pow(d[21], 2) * d[29] * d[44] + 2 * d[20] * d[21] * d[30] * d[44] - 2 * d[22] * d[23] * d[30] * d[44] + 2 * d[19] * d[22] * d[31] * d[44] - 2 * d[21] * d[23] * d[31] * d[44] - 2 * d[21] * d[22] * d[32] * d[44] + 2 * d[18] * d[23] * d[32] * d[44];
    coeffs[62] = 2 * d[8] * d[17] * d[27] * d[28] + 2 * d[7] * d[16] * d[27] * d[29] + 2 * d[6] * d[15] * d[28] * d[29] - 2 * d[7] * d[15] * d[29] * d[30] - 2 * d[6] * d[16] * d[29] * d[30] - 2 * d[8] * d[17] * std::pow(d[30], 2) - 2 * d[8] * d[15] * d[28] * d[31] - 2 * d[6] * d[17] * d[28] * d[31] + 2 * d[8] * d[16] * d[30] * d[31] + 2 * d[7] * d[17] * d[30] * d[31] - 2 * d[7] * d[16] * std::pow(d[31], 2) - 2 * d[8] * d[16] * d[27] * d[32] - 2 * d[7] * d[17] * d[27] * d[32] + 2 * d[8] * d[15] * d[30] * d[32] + 2 * d[6] * d[17] * d[30] * d[32] + 2 * d[7] * d[15] * d[31] * d[32] + 2 * d[6] * d[16] * d[31] * d[32] - 2 * d[6] * d[15] * std::pow(d[32], 2) + 2 * d[6] * d[11] * d[28] * d[33] - 2 * d[8] * d[13] * d[28] * d[33] + 2 * d[2] * d[15] * d[28] * d[33] - 2 * d[4] * d[17] * d[28] * d[33] + 2 * d[6] * d[10] * d[29] * d[33] - 2 * d[7] * d[12] * d[29] * d[33] + 2 * d[1] * d[15] * d[29] * d[33] - 2 * d[3] * d[16] * d[29] * d[33] - 2 * d[7] * d[11] * d[30] * d[33] + 2 * d[8] * d[14] * d[30] * d[33] - 2 * d[2] * d[16] * d[30] * d[33] + 2 * d[5] * d[17] * d[30] * d[33] - 2 * d[8] * d[10] * d[31] * d[33] + 2 * d[7] * d[14] * d[31] * d[33] + 2 * d[5] * d[16] * d[31] * d[33] - 2 * d[1] * d[17] * d[31] * d[33] + 2 * d[8] * d[12] * d[32] * d[33] + 2 * d[7] * d[13] * d[32] * d[33] - 4 * d[6] * d[14] * d[32] * d[33] - 4 * d[5] * d[15] * d[32] * d[33] + 2 * d[4] * d[16] * d[32] * d[33] + 2 * d[3] * d[17] * d[32] * d[33] + d[2] * d[10] * std::pow(d[33], 2) + d[1] * d[11] * std::pow(d[33], 2) - 2 * d[5] * d[14] * std::pow(d[33], 2) + 2 * d[7] * d[11] * d[27] * d[34] - 2 * d[8] * d[14] * d[27] * d[34] + 2 * d[2] * d[16] * d[27] * d[34] - 2 * d[5] * d[17] * d[27] * d[34] + 2 * d[7] * d[9] * d[29] * d[34] - 2 * d[6] * d[12] * d[29] * d[34] - 2 * d[3] * d[15] * d[29] * d[34] + 2 * d[0] * d[16] * d[29] * d[34] - 2 * d[6] * d[11] * d[30] * d[34] + 2 * d[8] * d[13] * d[30] * d[34] - 2 * d[2] * d[15] * d[30] * d[34] + 2 * d[4] * d[17] * d[30] * d[34] + 2 * d[8] * d[12] * d[31] * d[34] - 4 * d[7] * d[13] * d[31] * d[34] + 2 * d[6] * d[14] * d[31] * d[34] + 2 * d[5] * d[15] * d[31] * d[34] - 4 * d[4] * d[16] * d[31] * d[34] + 2 * d[3] * d[17] * d[31] * d[34] - 2 * d[8] * d[9] * d[32] * d[34] + 2 * d[6] * d[13] * d[32] * d[34] + 2 * d[4] * d[15] * d[32] * d[34] - 2 * d[0] * d[17] * d[32] * d[34] - 2 * d[3] * d[11] * d[33] * d[34] - 2 * d[2] * d[12] * d[33] * d[34] + 2 * d[5] * d[13] * d[33] * d[34] + 2 * d[4] * d[14] * d[33] * d[34] + d[2] * d[9] * std::pow(d[34], 2) + d[0] * d[11] * std::pow(d[34], 2) - 2 * d[4] * d[13] * std::pow(d[34], 2) + 2 * d[8] * d[10] * d[27] * d[35] - 2 * d[7] * d[14] * d[27] * d[35] - 2 * d[5] * d[16] * d[27] * d[35] + 2 * d[1] * d[17] * d[27] * d[35] + 2 * d[8] * d[9] * d[28] * d[35] - 2 * d[6] * d[13] * d[28] * d[35] - 2 * d[4] * d[15] * d[28] * d[35] + 2 * d[0] * d[17] * d[28] * d[35] - 4 * d[8] * d[12] * d[30] * d[35] + 2 * d[7] * d[13] * d[30] * d[35] + 2 * d[6] * d[14] * d[30] * d[35] + 2 * d[5] * d[15] * d[30] * d[35] + 2 * d[4] * d[16] * d[30] * d[35] - 4 * d[3] * d[17] * d[30] * d[35] - 2 * d[6] * d[10] * d[31] * d[35] + 2 * d[7] * d[12] * d[31] * d[35] - 2 * d[1] * d[15] * d[31] * d[35] + 2 * d[3] * d[16] * d[31] * d[35] - 2 * d[7] * d[9] * d[32] * d[35] + 2 * d[6] * d[12] * d[32] * d[35] + 2 * d[3] * d[15] * d[32] * d[35] - 2 * d[0] * d[16] * d[32] * d[35] - 2 * d[4] * d[10] * d[33] * d[35] + 2 * d[5] * d[12] * d[33] * d[35] - 2 * d[1] * d[13] * d[33] * d[35] + 2 * d[3] * d[14] * d[33] * d[35] - 2 * d[5] * d[9] * d[34] * d[35] + 2 * d[4] * d[12] * d[34] * d[35] + 2 * d[3] * d[13] * d[34] * d[35] - 2 * d[0] * d[14] * d[34] * d[35] + d[1] * d[9] * std::pow(d[35], 2) + d[0] * d[10] * std::pow(d[35], 2) - 2 * d[3] * d[12] * std::pow(d[35], 2) - d[11] * d[27] * d[28] * d[44] - d[10] * d[27] * d[29] * d[44] - d[9] * d[28] * d[29] * d[44] + 2 * d[12] * d[29] * d[30] * d[44] + d[11] * std::pow(d[30], 2) * d[44] + 2 * d[13] * d[28] * d[31] * d[44] - 2 * d[14] * d[30] * d[31] * d[44] + d[10] * std::pow(d[31], 2) * d[44] + 2 * d[14] * d[27] * d[32] * d[44] - 2 * d[13] * d[30] * d[32] * d[44] - 2 * d[12] * d[31] * d[32] * d[44] + d[9] * std::pow(d[32], 2) * d[44];
    coeffs[63] = 2 * d[8] * d[26] * d[27] * d[28] + 2 * d[7] * d[25] * d[27] * d[29] + 2 * d[6] * d[24] * d[28] * d[29] - 2 * d[7] * d[24] * d[29] * d[30] - 2 * d[6] * d[25] * d[29] * d[30] - 2 * d[8] * d[26] * std::pow(d[30], 2) - 2 * d[8] * d[24] * d[28] * d[31] - 2 * d[6] * d[26] * d[28] * d[31] + 2 * d[8] * d[25] * d[30] * d[31] + 2 * d[7] * d[26] * d[30] * d[31] - 2 * d[7] * d[25] * std::pow(d[31], 2) - 2 * d[8] * d[25] * d[27] * d[32] - 2 * d[7] * d[26] * d[27] * d[32] + 2 * d[8] * d[24] * d[30] * d[32] + 2 * d[6] * d[26] * d[30] * d[32] + 2 * d[7] * d[24] * d[31] * d[32] + 2 * d[6] * d[25] * d[31] * d[32] - 2 * d[6] * d[24] * std::pow(d[32], 2) + 2 * d[6] * d[20] * d[28] * d[33] - 2 * d[8] * d[22] * d[28] * d[33] + 2 * d[2] * d[24] * d[28] * d[33] - 2 * d[4] * d[26] * d[28] * d[33] + 2 * d[6] * d[19] * d[29] * d[33] - 2 * d[7] * d[21] * d[29] * d[33] + 2 * d[1] * d[24] * d[29] * d[33] - 2 * d[3] * d[25] * d[29] * d[33] - 2 * d[7] * d[20] * d[30] * d[33] + 2 * d[8] * d[23] * d[30] * d[33] - 2 * d[2] * d[25] * d[30] * d[33] + 2 * d[5] * d[26] * d[30] * d[33] - 2 * d[8] * d[19] * d[31] * d[33] + 2 * d[7] * d[23] * d[31] * d[33] + 2 * d[5] * d[25] * d[31] * d[33] - 2 * d[1] * d[26] * d[31] * d[33] + 2 * d[8] * d[21] * d[32] * d[33] + 2 * d[7] * d[22] * d[32] * d[33] - 4 * d[6] * d[23] * d[32] * d[33] - 4 * d[5] * d[24] * d[32] * d[33] + 2 * d[4] * d[25] * d[32] * d[33] + 2 * d[3] * d[26] * d[32] * d[33] + d[2] * d[19] * std::pow(d[33], 2) + d[1] * d[20] * std::pow(d[33], 2) - 2 * d[5] * d[23] * std::pow(d[33], 2) + 2 * d[7] * d[20] * d[27] * d[34] - 2 * d[8] * d[23] * d[27] * d[34] + 2 * d[2] * d[25] * d[27] * d[34] - 2 * d[5] * d[26] * d[27] * d[34] + 2 * d[7] * d[18] * d[29] * d[34] - 2 * d[6] * d[21] * d[29] * d[34] - 2 * d[3] * d[24] * d[29] * d[34] + 2 * d[0] * d[25] * d[29] * d[34] - 2 * d[6] * d[20] * d[30] * d[34] + 2 * d[8] * d[22] * d[30] * d[34] - 2 * d[2] * d[24] * d[30] * d[34] + 2 * d[4] * d[26] * d[30] * d[34] + 2 * d[8] * d[21] * d[31] * d[34] - 4 * d[7] * d[22] * d[31] * d[34] + 2 * d[6] * d[23] * d[31] * d[34] + 2 * d[5] * d[24] * d[31] * d[34] - 4 * d[4] * d[25] * d[31] * d[34] + 2 * d[3] * d[26] * d[31] * d[34] - 2 * d[8] * d[18] * d[32] * d[34] + 2 * d[6] * d[22] * d[32] * d[34] + 2 * d[4] * d[24] * d[32] * d[34] - 2 * d[0] * d[26] * d[32] * d[34] - 2 * d[3] * d[20] * d[33] * d[34] - 2 * d[2] * d[21] * d[33] * d[34] + 2 * d[5] * d[22] * d[33] * d[34] + 2 * d[4] * d[23] * d[33] * d[34] + d[2] * d[18] * std::pow(d[34], 2) + d[0] * d[20] * std::pow(d[34], 2) - 2 * d[4] * d[22] * std::pow(d[34], 2) + 2 * d[8] * d[19] * d[27] * d[35] - 2 * d[7] * d[23] * d[27] * d[35] - 2 * d[5] * d[25] * d[27] * d[35] + 2 * d[1] * d[26] * d[27] * d[35] + 2 * d[8] * d[18] * d[28] * d[35] - 2 * d[6] * d[22] * d[28] * d[35] - 2 * d[4] * d[24] * d[28] * d[35] + 2 * d[0] * d[26] * d[28] * d[35] - 4 * d[8] * d[21] * d[30] * d[35] + 2 * d[7] * d[22] * d[30] * d[35] + 2 * d[6] * d[23] * d[30] * d[35] + 2 * d[5] * d[24] * d[30] * d[35] + 2 * d[4] * d[25] * d[30] * d[35] - 4 * d[3] * d[26] * d[30] * d[35] - 2 * d[6] * d[19] * d[31] * d[35] + 2 * d[7] * d[21] * d[31] * d[35] - 2 * d[1] * d[24] * d[31] * d[35] + 2 * d[3] * d[25] * d[31] * d[35] - 2 * d[7] * d[18] * d[32] * d[35] + 2 * d[6] * d[21] * d[32] * d[35] + 2 * d[3] * d[24] * d[32] * d[35] - 2 * d[0] * d[25] * d[32] * d[35] - 2 * d[4] * d[19] * d[33] * d[35] + 2 * d[5] * d[21] * d[33] * d[35] - 2 * d[1] * d[22] * d[33] * d[35] + 2 * d[3] * d[23] * d[33] * d[35] - 2 * d[5] * d[18] * d[34] * d[35] + 2 * d[4] * d[21] * d[34] * d[35] + 2 * d[3] * d[22] * d[34] * d[35] - 2 * d[0] * d[23] * d[34] * d[35] + d[1] * d[18] * std::pow(d[35], 2) + d[0] * d[19] * std::pow(d[35], 2) - 2 * d[3] * d[21] * std::pow(d[35], 2) - d[20] * d[27] * d[28] * d[44] - d[19] * d[27] * d[29] * d[44] - d[18] * d[28] * d[29] * d[44] + 2 * d[21] * d[29] * d[30] * d[44] + d[20] * std::pow(d[30], 2) * d[44] + 2 * d[22] * d[28] * d[31] * d[44] - 2 * d[23] * d[30] * d[31] * d[44] + d[19] * std::pow(d[31], 2) * d[44] + 2 * d[23] * d[27] * d[32] * d[44] - 2 * d[22] * d[30] * d[32] * d[44] - 2 * d[21] * d[31] * d[32] * d[44] + d[18] * std::pow(d[32], 2) * d[44];
    coeffs[64] = 2 * d[6] * d[28] * d[29] * d[33] - 2 * d[7] * d[29] * d[30] * d[33] - 2 * d[8] * d[28] * d[31] * d[33] + 2 * d[8] * d[30] * d[32] * d[33] + 2 * d[7] * d[31] * d[32] * d[33] - 2 * d[6] * std::pow(d[32], 2) * d[33] + d[2] * d[28] * std::pow(d[33], 2) + d[1] * d[29] * std::pow(d[33], 2) - 2 * d[5] * d[32] * std::pow(d[33], 2) + 2 * d[7] * d[27] * d[29] * d[34] - 2 * d[6] * d[29] * d[30] * d[34] + 2 * d[8] * d[30] * d[31] * d[34] - 2 * d[7] * std::pow(d[31], 2) * d[34] - 2 * d[8] * d[27] * d[32] * d[34] + 2 * d[6] * d[31] * d[32] * d[34] - 2 * d[3] * d[29] * d[33] * d[34] - 2 * d[2] * d[30] * d[33] * d[34] + 2 * d[5] * d[31] * d[33] * d[34] + 2 * d[4] * d[32] * d[33] * d[34] + d[2] * d[27] * std::pow(d[34], 2) + d[0] * d[29] * std::pow(d[34], 2) - 2 * d[4] * d[31] * std::pow(d[34], 2) + 2 * d[8] * d[27] * d[28] * d[35] - 2 * d[8] * std::pow(d[30], 2) * d[35] - 2 * d[6] * d[28] * d[31] * d[35] + 2 * d[7] * d[30] * d[31] * d[35] - 2 * d[7] * d[27] * d[32] * d[35] + 2 * d[6] * d[30] * d[32] * d[35] - 2 * d[4] * d[28] * d[33] * d[35] + 2 * d[5] * d[30] * d[33] * d[35] - 2 * d[1] * d[31] * d[33] * d[35] + 2 * d[3] * d[32] * d[33] * d[35] - 2 * d[5] * d[27] * d[34] * d[35] + 2 * d[4] * d[30] * d[34] * d[35] + 2 * d[3] * d[31] * d[34] * d[35] - 2 * d[0] * d[32] * d[34] * d[35] + d[1] * d[27] * std::pow(d[35], 2) + d[0] * d[28] * std::pow(d[35], 2) - 2 * d[3] * d[30] * std::pow(d[35], 2) - d[27] * d[28] * d[29] * d[44] + d[29] * std::pow(d[30], 2) * d[44] + d[28] * std::pow(d[31], 2) * d[44] - 2 * d[30] * d[31] * d[32] * d[44] + d[27] * std::pow(d[32], 2) * d[44];
    coeffs[65] = std::pow(d[8], 2) * d[9] * d[10] + std::pow(d[7], 2) * d[9] * d[11] + std::pow(d[6], 2) * d[10] * d[11] - 2 * d[6] * d[7] * d[11] * d[12] - std::pow(d[8], 2) * std::pow(d[12], 2) - 2 * d[6] * d[8] * d[10] * d[13] + 2 * d[7] * d[8] * d[12] * d[13] - std::pow(d[7], 2) * std::pow(d[13], 2) - 2 * d[7] * d[8] * d[9] * d[14] + 2 * d[6] * d[8] * d[12] * d[14] + 2 * d[6] * d[7] * d[13] * d[14] - std::pow(d[6], 2) * std::pow(d[14], 2) + 2 * d[2] * d[6] * d[10] * d[15] - 2 * d[4] * d[8] * d[10] * d[15] + 2 * d[1] * d[6] * d[11] * d[15] - 2 * d[3] * d[7] * d[11] * d[15] - 2 * d[2] * d[7] * d[12] * d[15] + 2 * d[5] * d[8] * d[12] * d[15] + 2 * d[5] * d[7] * d[13] * d[15] - 2 * d[1] * d[8] * d[13] * d[15] - 4 * d[5] * d[6] * d[14] * d[15] + 2 * d[4] * d[7] * d[14] * d[15] + 2 * d[3] * d[8] * d[14] * d[15] + d[1] * d[2] * std::pow(d[15], 2) - std::pow(d[5], 2) * std::pow(d[15], 2) + 2 * d[2] * d[7] * d[9] * d[16] - 2 * d[5] * d[8] * d[9] * d[16] - 2 * d[3] * d[6] * d[11] * d[16] + 2 * d[0] * d[7] * d[11] * d[16] - 2 * d[2] * d[6] * d[12] * d[16] + 2 * d[4] * d[8] * d[12] * d[16] + 2 * d[5] * d[6] * d[13] * d[16] - 4 * d[4] * d[7] * d[13] * d[16] + 2 * d[3] * d[8] * d[13] * d[16] + 2 * d[4] * d[6] * d[14] * d[16] - 2 * d[0] * d[8] * d[14] * d[16] - 2 * d[2] * d[3] * d[15] * d[16] + 2 * d[4] * d[5] * d[15] * d[16] + d[0] * d[2] * std::pow(d[16], 2) - std::pow(d[4], 2) * std::pow(d[16], 2) - 2 * d[5] * d[7] * d[9] * d[17] + 2 * d[1] * d[8] * d[9] * d[17] - 2 * d[4] * d[6] * d[10] * d[17] + 2 * d[0] * d[8] * d[10] * d[17] + 2 * d[5] * d[6] * d[12] * d[17] + 2 * d[4] * d[7] * d[12] * d[17] - 4 * d[3] * d[8] * d[12] * d[17] - 2 * d[1] * d[6] * d[13] * d[17] + 2 * d[3] * d[7] * d[13] * d[17] + 2 * d[3] * d[6] * d[14] * d[17] - 2 * d[0] * d[7] * d[14] * d[17] - 2 * d[1] * d[4] * d[15] * d[17] + 2 * d[3] * d[5] * d[15] * d[17] + 2 * d[3] * d[4] * d[16] * d[17] - 2 * d[0] * d[5] * d[16] * d[17] + d[0] * d[1] * std::pow(d[17], 2) - std::pow(d[3], 2) * std::pow(d[17], 2) - d[2] * d[9] * d[10] * d[44] - d[1] * d[9] * d[11] * d[44] - d[0] * d[10] * d[11] * d[44] + 2 * d[3] * d[11] * d[12] * d[44] + d[2] * std::pow(d[12], 2) * d[44] + 2 * d[4] * d[10] * d[13] * d[44] - 2 * d[5] * d[12] * d[13] * d[44] + d[1] * std::pow(d[13], 2) * d[44] + 2 * d[5] * d[9] * d[14] * d[44] - 2 * d[4] * d[12] * d[14] * d[44] - 2 * d[3] * d[13] * d[14] * d[44] + d[0] * std::pow(d[14], 2) * d[44];
    coeffs[66] = std::pow(d[8], 2) * d[10] * d[18] + std::pow(d[7], 2) * d[11] * d[18] - 2 * d[7] * d[8] * d[14] * d[18] + 2 * d[2] * d[7] * d[16] * d[18] - 2 * d[5] * d[8] * d[16] * d[18] - 2 * d[5] * d[7] * d[17] * d[18] + 2 * d[1] * d[8] * d[17] * d[18] + std::pow(d[8], 2) * d[9] * d[19] + std::pow(d[6], 2) * d[11] * d[19] - 2 * d[6] * d[8] * d[13] * d[19] + 2 * d[2] * d[6] * d[15] * d[19] - 2 * d[4] * d[8] * d[15] * d[19] - 2 * d[4] * d[6] * d[17] * d[19] + 2 * d[0] * d[8] * d[17] * d[19] + std::pow(d[7], 2) * d[9] * d[20] + std::pow(d[6], 2) * d[10] * d[20] - 2 * d[6] * d[7] * d[12] * d[20] + 2 * d[1] * d[6] * d[15] * d[20] - 2 * d[3] * d[7] * d[15] * d[20] - 2 * d[3] * d[6] * d[16] * d[20] + 2 * d[0] * d[7] * d[16] * d[20] - 2 * d[6] * d[7] * d[11] * d[21] - 2 * std::pow(d[8], 2) * d[12] * d[21] + 2 * d[7] * d[8] * d[13] * d[21] + 2 * d[6] * d[8] * d[14] * d[21] - 2 * d[2] * d[7] * d[15] * d[21] + 2 * d[5] * d[8] * d[15] * d[21] - 2 * d[2] * d[6] * d[16] * d[21] + 2 * d[4] * d[8] * d[16] * d[21] + 2 * d[5] * d[6] * d[17] * d[21] + 2 * d[4] * d[7] * d[17] * d[21] - 4 * d[3] * d[8] * d[17] * d[21] - 2 * d[6] * d[8] * d[10] * d[22] + 2 * d[7] * d[8] * d[12] * d[22] - 2 * std::pow(d[7], 2) * d[13] * d[22] + 2 * d[6] * d[7] * d[14] * d[22] + 2 * d[5] * d[7] * d[15] * d[22] - 2 * d[1] * d[8] * d[15] * d[22] + 2 * d[5] * d[6] * d[16] * d[22] - 4 * d[4] * d[7] * d[16] * d[22] + 2 * d[3] * d[8] * d[16] * d[22] - 2 * d[1] * d[6] * d[17] * d[22] + 2 * d[3] * d[7] * d[17] * d[22] - 2 * d[7] * d[8] * d[9] * d[23] + 2 * d[6] * d[8] * d[12] * d[23] + 2 * d[6] * d[7] * d[13] * d[23] - 2 * std::pow(d[6], 2) * d[14] * d[23] - 4 * d[5] * d[6] * d[15] * d[23] + 2 * d[4] * d[7] * d[15] * d[23] + 2 * d[3] * d[8] * d[15] * d[23] + 2 * d[4] * d[6] * d[16] * d[23] - 2 * d[0] * d[8] * d[16] * d[23] + 2 * d[3] * d[6] * d[17] * d[23] - 2 * d[0] * d[7] * d[17] * d[23] + 2 * d[2] * d[6] * d[10] * d[24] - 2 * d[4] * d[8] * d[10] * d[24] + 2 * d[1] * d[6] * d[11] * d[24] - 2 * d[3] * d[7] * d[11] * d[24] - 2 * d[2] * d[7] * d[12] * d[24] + 2 * d[5] * d[8] * d[12] * d[24] + 2 * d[5] * d[7] * d[13] * d[24] - 2 * d[1] * d[8] * d[13] * d[24] - 4 * d[5] * d[6] * d[14] * d[24] + 2 * d[4] * d[7] * d[14] * d[24] + 2 * d[3] * d[8] * d[14] * d[24] + 2 * d[1] * d[2] * d[15] * d[24] - 2 * std::pow(d[5], 2) * d[15] * d[24] - 2 * d[2] * d[3] * d[16] * d[24] + 2 * d[4] * d[5] * d[16] * d[24] - 2 * d[1] * d[4] * d[17] * d[24] + 2 * d[3] * d[5] * d[17] * d[24] + 2 * d[2] * d[7] * d[9] * d[25] - 2 * d[5] * d[8] * d[9] * d[25] - 2 * d[3] * d[6] * d[11] * d[25] + 2 * d[0] * d[7] * d[11] * d[25] - 2 * d[2] * d[6] * d[12] * d[25] + 2 * d[4] * d[8] * d[12] * d[25] + 2 * d[5] * d[6] * d[13] * d[25] - 4 * d[4] * d[7] * d[13] * d[25] + 2 * d[3] * d[8] * d[13] * d[25] + 2 * d[4] * d[6] * d[14] * d[25] - 2 * d[0] * d[8] * d[14] * d[25] - 2 * d[2] * d[3] * d[15] * d[25] + 2 * d[4] * d[5] * d[15] * d[25] + 2 * d[0] * d[2] * d[16] * d[25] - 2 * std::pow(d[4], 2) * d[16] * d[25] + 2 * d[3] * d[4] * d[17] * d[25] - 2 * d[0] * d[5] * d[17] * d[25] - 2 * d[5] * d[7] * d[9] * d[26] + 2 * d[1] * d[8] * d[9] * d[26] - 2 * d[4] * d[6] * d[10] * d[26] + 2 * d[0] * d[8] * d[10] * d[26] + 2 * d[5] * d[6] * d[12] * d[26] + 2 * d[4] * d[7] * d[12] * d[26] - 4 * d[3] * d[8] * d[12] * d[26] - 2 * d[1] * d[6] * d[13] * d[26] + 2 * d[3] * d[7] * d[13] * d[26] + 2 * d[3] * d[6] * d[14] * d[26] - 2 * d[0] * d[7] * d[14] * d[26] - 2 * d[1] * d[4] * d[15] * d[26] + 2 * d[3] * d[5] * d[15] * d[26] + 2 * d[3] * d[4] * d[16] * d[26] - 2 * d[0] * d[5] * d[16] * d[26] + 2 * d[0] * d[1] * d[17] * d[26] - 2 * std::pow(d[3], 2) * d[17] * d[26] - d[2] * d[10] * d[18] * d[44] - d[1] * d[11] * d[18] * d[44] + 2 * d[5] * d[14] * d[18] * d[44] - d[2] * d[9] * d[19] * d[44] - d[0] * d[11] * d[19] * d[44] + 2 * d[4] * d[13] * d[19] * d[44] - d[1] * d[9] * d[20] * d[44] - d[0] * d[10] * d[20] * d[44] + 2 * d[3] * d[12] * d[20] * d[44] + 2 * d[3] * d[11] * d[21] * d[44] + 2 * d[2] * d[12] * d[21] * d[44] - 2 * d[5] * d[13] * d[21] * d[44] - 2 * d[4] * d[14] * d[21] * d[44] + 2 * d[4] * d[10] * d[22] * d[44] - 2 * d[5] * d[12] * d[22] * d[44] + 2 * d[1] * d[13] * d[22] * d[44] - 2 * d[3] * d[14] * d[22] * d[44] + 2 * d[5] * d[9] * d[23] * d[44] - 2 * d[4] * d[12] * d[23] * d[44] - 2 * d[3] * d[13] * d[23] * d[44] + 2 * d[0] * d[14] * d[23] * d[44];
    coeffs[67] = std::pow(d[8], 2) * d[18] * d[19] + std::pow(d[7], 2) * d[18] * d[20] + std::pow(d[6], 2) * d[19] * d[20] - 2 * d[6] * d[7] * d[20] * d[21] - std::pow(d[8], 2) * std::pow(d[21], 2) - 2 * d[6] * d[8] * d[19] * d[22] + 2 * d[7] * d[8] * d[21] * d[22] - std::pow(d[7], 2) * std::pow(d[22], 2) - 2 * d[7] * d[8] * d[18] * d[23] + 2 * d[6] * d[8] * d[21] * d[23] + 2 * d[6] * d[7] * d[22] * d[23] - std::pow(d[6], 2) * std::pow(d[23], 2) + 2 * d[2] * d[6] * d[19] * d[24] - 2 * d[4] * d[8] * d[19] * d[24] + 2 * d[1] * d[6] * d[20] * d[24] - 2 * d[3] * d[7] * d[20] * d[24] - 2 * d[2] * d[7] * d[21] * d[24] + 2 * d[5] * d[8] * d[21] * d[24] + 2 * d[5] * d[7] * d[22] * d[24] - 2 * d[1] * d[8] * d[22] * d[24] - 4 * d[5] * d[6] * d[23] * d[24] + 2 * d[4] * d[7] * d[23] * d[24] + 2 * d[3] * d[8] * d[23] * d[24] + d[1] * d[2] * std::pow(d[24], 2) - std::pow(d[5], 2) * std::pow(d[24], 2) + 2 * d[2] * d[7] * d[18] * d[25] - 2 * d[5] * d[8] * d[18] * d[25] - 2 * d[3] * d[6] * d[20] * d[25] + 2 * d[0] * d[7] * d[20] * d[25] - 2 * d[2] * d[6] * d[21] * d[25] + 2 * d[4] * d[8] * d[21] * d[25] + 2 * d[5] * d[6] * d[22] * d[25] - 4 * d[4] * d[7] * d[22] * d[25] + 2 * d[3] * d[8] * d[22] * d[25] + 2 * d[4] * d[6] * d[23] * d[25] - 2 * d[0] * d[8] * d[23] * d[25] - 2 * d[2] * d[3] * d[24] * d[25] + 2 * d[4] * d[5] * d[24] * d[25] + d[0] * d[2] * std::pow(d[25], 2) - std::pow(d[4], 2) * std::pow(d[25], 2) - 2 * d[5] * d[7] * d[18] * d[26] + 2 * d[1] * d[8] * d[18] * d[26] - 2 * d[4] * d[6] * d[19] * d[26] + 2 * d[0] * d[8] * d[19] * d[26] + 2 * d[5] * d[6] * d[21] * d[26] + 2 * d[4] * d[7] * d[21] * d[26] - 4 * d[3] * d[8] * d[21] * d[26] - 2 * d[1] * d[6] * d[22] * d[26] + 2 * d[3] * d[7] * d[22] * d[26] + 2 * d[3] * d[6] * d[23] * d[26] - 2 * d[0] * d[7] * d[23] * d[26] - 2 * d[1] * d[4] * d[24] * d[26] + 2 * d[3] * d[5] * d[24] * d[26] + 2 * d[3] * d[4] * d[25] * d[26] - 2 * d[0] * d[5] * d[25] * d[26] + d[0] * d[1] * std::pow(d[26], 2) - std::pow(d[3], 2) * std::pow(d[26], 2) - d[2] * d[18] * d[19] * d[44] - d[1] * d[18] * d[20] * d[44] - d[0] * d[19] * d[20] * d[44] + 2 * d[3] * d[20] * d[21] * d[44] + d[2] * std::pow(d[21], 2) * d[44] + 2 * d[4] * d[19] * d[22] * d[44] - 2 * d[5] * d[21] * d[22] * d[44] + d[1] * std::pow(d[22], 2) * d[44] + 2 * d[5] * d[18] * d[23] * d[44] - 2 * d[4] * d[21] * d[23] * d[44] - 2 * d[3] * d[22] * d[23] * d[44] + d[0] * std::pow(d[23], 2) * d[44];
    coeffs[68] = std::pow(d[8], 2) * d[10] * d[27] + std::pow(d[7], 2) * d[11] * d[27] - 2 * d[7] * d[8] * d[14] * d[27] + 2 * d[2] * d[7] * d[16] * d[27] - 2 * d[5] * d[8] * d[16] * d[27] - 2 * d[5] * d[7] * d[17] * d[27] + 2 * d[1] * d[8] * d[17] * d[27] + std::pow(d[8], 2) * d[9] * d[28] + std::pow(d[6], 2) * d[11] * d[28] - 2 * d[6] * d[8] * d[13] * d[28] + 2 * d[2] * d[6] * d[15] * d[28] - 2 * d[4] * d[8] * d[15] * d[28] - 2 * d[4] * d[6] * d[17] * d[28] + 2 * d[0] * d[8] * d[17] * d[28] + std::pow(d[7], 2) * d[9] * d[29] + std::pow(d[6], 2) * d[10] * d[29] - 2 * d[6] * d[7] * d[12] * d[29] + 2 * d[1] * d[6] * d[15] * d[29] - 2 * d[3] * d[7] * d[15] * d[29] - 2 * d[3] * d[6] * d[16] * d[29] + 2 * d[0] * d[7] * d[16] * d[29] - 2 * d[6] * d[7] * d[11] * d[30] - 2 * std::pow(d[8], 2) * d[12] * d[30] + 2 * d[7] * d[8] * d[13] * d[30] + 2 * d[6] * d[8] * d[14] * d[30] - 2 * d[2] * d[7] * d[15] * d[30] + 2 * d[5] * d[8] * d[15] * d[30] - 2 * d[2] * d[6] * d[16] * d[30] + 2 * d[4] * d[8] * d[16] * d[30] + 2 * d[5] * d[6] * d[17] * d[30] + 2 * d[4] * d[7] * d[17] * d[30] - 4 * d[3] * d[8] * d[17] * d[30] - 2 * d[6] * d[8] * d[10] * d[31] + 2 * d[7] * d[8] * d[12] * d[31] - 2 * std::pow(d[7], 2) * d[13] * d[31] + 2 * d[6] * d[7] * d[14] * d[31] + 2 * d[5] * d[7] * d[15] * d[31] - 2 * d[1] * d[8] * d[15] * d[31] + 2 * d[5] * d[6] * d[16] * d[31] - 4 * d[4] * d[7] * d[16] * d[31] + 2 * d[3] * d[8] * d[16] * d[31] - 2 * d[1] * d[6] * d[17] * d[31] + 2 * d[3] * d[7] * d[17] * d[31] - 2 * d[7] * d[8] * d[9] * d[32] + 2 * d[6] * d[8] * d[12] * d[32] + 2 * d[6] * d[7] * d[13] * d[32] - 2 * std::pow(d[6], 2) * d[14] * d[32] - 4 * d[5] * d[6] * d[15] * d[32] + 2 * d[4] * d[7] * d[15] * d[32] + 2 * d[3] * d[8] * d[15] * d[32] + 2 * d[4] * d[6] * d[16] * d[32] - 2 * d[0] * d[8] * d[16] * d[32] + 2 * d[3] * d[6] * d[17] * d[32] - 2 * d[0] * d[7] * d[17] * d[32] + 2 * d[2] * d[6] * d[10] * d[33] - 2 * d[4] * d[8] * d[10] * d[33] + 2 * d[1] * d[6] * d[11] * d[33] - 2 * d[3] * d[7] * d[11] * d[33] - 2 * d[2] * d[7] * d[12] * d[33] + 2 * d[5] * d[8] * d[12] * d[33] + 2 * d[5] * d[7] * d[13] * d[33] - 2 * d[1] * d[8] * d[13] * d[33] - 4 * d[5] * d[6] * d[14] * d[33] + 2 * d[4] * d[7] * d[14] * d[33] + 2 * d[3] * d[8] * d[14] * d[33] + 2 * d[1] * d[2] * d[15] * d[33] - 2 * std::pow(d[5], 2) * d[15] * d[33] - 2 * d[2] * d[3] * d[16] * d[33] + 2 * d[4] * d[5] * d[16] * d[33] - 2 * d[1] * d[4] * d[17] * d[33] + 2 * d[3] * d[5] * d[17] * d[33] + 2 * d[2] * d[7] * d[9] * d[34] - 2 * d[5] * d[8] * d[9] * d[34] - 2 * d[3] * d[6] * d[11] * d[34] + 2 * d[0] * d[7] * d[11] * d[34] - 2 * d[2] * d[6] * d[12] * d[34] + 2 * d[4] * d[8] * d[12] * d[34] + 2 * d[5] * d[6] * d[13] * d[34] - 4 * d[4] * d[7] * d[13] * d[34] + 2 * d[3] * d[8] * d[13] * d[34] + 2 * d[4] * d[6] * d[14] * d[34] - 2 * d[0] * d[8] * d[14] * d[34] - 2 * d[2] * d[3] * d[15] * d[34] + 2 * d[4] * d[5] * d[15] * d[34] + 2 * d[0] * d[2] * d[16] * d[34] - 2 * std::pow(d[4], 2) * d[16] * d[34] + 2 * d[3] * d[4] * d[17] * d[34] - 2 * d[0] * d[5] * d[17] * d[34] - 2 * d[5] * d[7] * d[9] * d[35] + 2 * d[1] * d[8] * d[9] * d[35] - 2 * d[4] * d[6] * d[10] * d[35] + 2 * d[0] * d[8] * d[10] * d[35] + 2 * d[5] * d[6] * d[12] * d[35] + 2 * d[4] * d[7] * d[12] * d[35] - 4 * d[3] * d[8] * d[12] * d[35] - 2 * d[1] * d[6] * d[13] * d[35] + 2 * d[3] * d[7] * d[13] * d[35] + 2 * d[3] * d[6] * d[14] * d[35] - 2 * d[0] * d[7] * d[14] * d[35] - 2 * d[1] * d[4] * d[15] * d[35] + 2 * d[3] * d[5] * d[15] * d[35] + 2 * d[3] * d[4] * d[16] * d[35] - 2 * d[0] * d[5] * d[16] * d[35] + 2 * d[0] * d[1] * d[17] * d[35] - 2 * std::pow(d[3], 2) * d[17] * d[35] - d[2] * d[10] * d[27] * d[44] - d[1] * d[11] * d[27] * d[44] + 2 * d[5] * d[14] * d[27] * d[44] - d[2] * d[9] * d[28] * d[44] - d[0] * d[11] * d[28] * d[44] + 2 * d[4] * d[13] * d[28] * d[44] - d[1] * d[9] * d[29] * d[44] - d[0] * d[10] * d[29] * d[44] + 2 * d[3] * d[12] * d[29] * d[44] + 2 * d[3] * d[11] * d[30] * d[44] + 2 * d[2] * d[12] * d[30] * d[44] - 2 * d[5] * d[13] * d[30] * d[44] - 2 * d[4] * d[14] * d[30] * d[44] + 2 * d[4] * d[10] * d[31] * d[44] - 2 * d[5] * d[12] * d[31] * d[44] + 2 * d[1] * d[13] * d[31] * d[44] - 2 * d[3] * d[14] * d[31] * d[44] + 2 * d[5] * d[9] * d[32] * d[44] - 2 * d[4] * d[12] * d[32] * d[44] - 2 * d[3] * d[13] * d[32] * d[44] + 2 * d[0] * d[14] * d[32] * d[44];
    coeffs[69] = std::pow(d[8], 2) * d[19] * d[27] + std::pow(d[7], 2) * d[20] * d[27] - 2 * d[7] * d[8] * d[23] * d[27] + 2 * d[2] * d[7] * d[25] * d[27] - 2 * d[5] * d[8] * d[25] * d[27] - 2 * d[5] * d[7] * d[26] * d[27] + 2 * d[1] * d[8] * d[26] * d[27] + std::pow(d[8], 2) * d[18] * d[28] + std::pow(d[6], 2) * d[20] * d[28] - 2 * d[6] * d[8] * d[22] * d[28] + 2 * d[2] * d[6] * d[24] * d[28] - 2 * d[4] * d[8] * d[24] * d[28] - 2 * d[4] * d[6] * d[26] * d[28] + 2 * d[0] * d[8] * d[26] * d[28] + std::pow(d[7], 2) * d[18] * d[29] + std::pow(d[6], 2) * d[19] * d[29] - 2 * d[6] * d[7] * d[21] * d[29] + 2 * d[1] * d[6] * d[24] * d[29] - 2 * d[3] * d[7] * d[24] * d[29] - 2 * d[3] * d[6] * d[25] * d[29] + 2 * d[0] * d[7] * d[25] * d[29] - 2 * d[6] * d[7] * d[20] * d[30] - 2 * std::pow(d[8], 2) * d[21] * d[30] + 2 * d[7] * d[8] * d[22] * d[30] + 2 * d[6] * d[8] * d[23] * d[30] - 2 * d[2] * d[7] * d[24] * d[30] + 2 * d[5] * d[8] * d[24] * d[30] - 2 * d[2] * d[6] * d[25] * d[30] + 2 * d[4] * d[8] * d[25] * d[30] + 2 * d[5] * d[6] * d[26] * d[30] + 2 * d[4] * d[7] * d[26] * d[30] - 4 * d[3] * d[8] * d[26] * d[30] - 2 * d[6] * d[8] * d[19] * d[31] + 2 * d[7] * d[8] * d[21] * d[31] - 2 * std::pow(d[7], 2) * d[22] * d[31] + 2 * d[6] * d[7] * d[23] * d[31] + 2 * d[5] * d[7] * d[24] * d[31] - 2 * d[1] * d[8] * d[24] * d[31] + 2 * d[5] * d[6] * d[25] * d[31] - 4 * d[4] * d[7] * d[25] * d[31] + 2 * d[3] * d[8] * d[25] * d[31] - 2 * d[1] * d[6] * d[26] * d[31] + 2 * d[3] * d[7] * d[26] * d[31] - 2 * d[7] * d[8] * d[18] * d[32] + 2 * d[6] * d[8] * d[21] * d[32] + 2 * d[6] * d[7] * d[22] * d[32] - 2 * std::pow(d[6], 2) * d[23] * d[32] - 4 * d[5] * d[6] * d[24] * d[32] + 2 * d[4] * d[7] * d[24] * d[32] + 2 * d[3] * d[8] * d[24] * d[32] + 2 * d[4] * d[6] * d[25] * d[32] - 2 * d[0] * d[8] * d[25] * d[32] + 2 * d[3] * d[6] * d[26] * d[32] - 2 * d[0] * d[7] * d[26] * d[32] + 2 * d[2] * d[6] * d[19] * d[33] - 2 * d[4] * d[8] * d[19] * d[33] + 2 * d[1] * d[6] * d[20] * d[33] - 2 * d[3] * d[7] * d[20] * d[33] - 2 * d[2] * d[7] * d[21] * d[33] + 2 * d[5] * d[8] * d[21] * d[33] + 2 * d[5] * d[7] * d[22] * d[33] - 2 * d[1] * d[8] * d[22] * d[33] - 4 * d[5] * d[6] * d[23] * d[33] + 2 * d[4] * d[7] * d[23] * d[33] + 2 * d[3] * d[8] * d[23] * d[33] + 2 * d[1] * d[2] * d[24] * d[33] - 2 * std::pow(d[5], 2) * d[24] * d[33] - 2 * d[2] * d[3] * d[25] * d[33] + 2 * d[4] * d[5] * d[25] * d[33] - 2 * d[1] * d[4] * d[26] * d[33] + 2 * d[3] * d[5] * d[26] * d[33] + 2 * d[2] * d[7] * d[18] * d[34] - 2 * d[5] * d[8] * d[18] * d[34] - 2 * d[3] * d[6] * d[20] * d[34] + 2 * d[0] * d[7] * d[20] * d[34] - 2 * d[2] * d[6] * d[21] * d[34] + 2 * d[4] * d[8] * d[21] * d[34] + 2 * d[5] * d[6] * d[22] * d[34] - 4 * d[4] * d[7] * d[22] * d[34] + 2 * d[3] * d[8] * d[22] * d[34] + 2 * d[4] * d[6] * d[23] * d[34] - 2 * d[0] * d[8] * d[23] * d[34] - 2 * d[2] * d[3] * d[24] * d[34] + 2 * d[4] * d[5] * d[24] * d[34] + 2 * d[0] * d[2] * d[25] * d[34] - 2 * std::pow(d[4], 2) * d[25] * d[34] + 2 * d[3] * d[4] * d[26] * d[34] - 2 * d[0] * d[5] * d[26] * d[34] - 2 * d[5] * d[7] * d[18] * d[35] + 2 * d[1] * d[8] * d[18] * d[35] - 2 * d[4] * d[6] * d[19] * d[35] + 2 * d[0] * d[8] * d[19] * d[35] + 2 * d[5] * d[6] * d[21] * d[35] + 2 * d[4] * d[7] * d[21] * d[35] - 4 * d[3] * d[8] * d[21] * d[35] - 2 * d[1] * d[6] * d[22] * d[35] + 2 * d[3] * d[7] * d[22] * d[35] + 2 * d[3] * d[6] * d[23] * d[35] - 2 * d[0] * d[7] * d[23] * d[35] - 2 * d[1] * d[4] * d[24] * d[35] + 2 * d[3] * d[5] * d[24] * d[35] + 2 * d[3] * d[4] * d[25] * d[35] - 2 * d[0] * d[5] * d[25] * d[35] + 2 * d[0] * d[1] * d[26] * d[35] - 2 * std::pow(d[3], 2) * d[26] * d[35] - d[2] * d[19] * d[27] * d[44] - d[1] * d[20] * d[27] * d[44] + 2 * d[5] * d[23] * d[27] * d[44] - d[2] * d[18] * d[28] * d[44] - d[0] * d[20] * d[28] * d[44] + 2 * d[4] * d[22] * d[28] * d[44] - d[1] * d[18] * d[29] * d[44] - d[0] * d[19] * d[29] * d[44] + 2 * d[3] * d[21] * d[29] * d[44] + 2 * d[3] * d[20] * d[30] * d[44] + 2 * d[2] * d[21] * d[30] * d[44] - 2 * d[5] * d[22] * d[30] * d[44] - 2 * d[4] * d[23] * d[30] * d[44] + 2 * d[4] * d[19] * d[31] * d[44] - 2 * d[5] * d[21] * d[31] * d[44] + 2 * d[1] * d[22] * d[31] * d[44] - 2 * d[3] * d[23] * d[31] * d[44] + 2 * d[5] * d[18] * d[32] * d[44] - 2 * d[4] * d[21] * d[32] * d[44] - 2 * d[3] * d[22] * d[32] * d[44] + 2 * d[0] * d[23] * d[32] * d[44];
    coeffs[70] = std::pow(d[8], 2) * d[27] * d[28] + std::pow(d[7], 2) * d[27] * d[29] + std::pow(d[6], 2) * d[28] * d[29] - 2 * d[6] * d[7] * d[29] * d[30] - std::pow(d[8], 2) * std::pow(d[30], 2) - 2 * d[6] * d[8] * d[28] * d[31] + 2 * d[7] * d[8] * d[30] * d[31] - std::pow(d[7], 2) * std::pow(d[31], 2) - 2 * d[7] * d[8] * d[27] * d[32] + 2 * d[6] * d[8] * d[30] * d[32] + 2 * d[6] * d[7] * d[31] * d[32] - std::pow(d[6], 2) * std::pow(d[32], 2) + 2 * d[2] * d[6] * d[28] * d[33] - 2 * d[4] * d[8] * d[28] * d[33] + 2 * d[1] * d[6] * d[29] * d[33] - 2 * d[3] * d[7] * d[29] * d[33] - 2 * d[2] * d[7] * d[30] * d[33] + 2 * d[5] * d[8] * d[30] * d[33] + 2 * d[5] * d[7] * d[31] * d[33] - 2 * d[1] * d[8] * d[31] * d[33] - 4 * d[5] * d[6] * d[32] * d[33] + 2 * d[4] * d[7] * d[32] * d[33] + 2 * d[3] * d[8] * d[32] * d[33] + d[1] * d[2] * std::pow(d[33], 2) - std::pow(d[5], 2) * std::pow(d[33], 2) + 2 * d[2] * d[7] * d[27] * d[34] - 2 * d[5] * d[8] * d[27] * d[34] - 2 * d[3] * d[6] * d[29] * d[34] + 2 * d[0] * d[7] * d[29] * d[34] - 2 * d[2] * d[6] * d[30] * d[34] + 2 * d[4] * d[8] * d[30] * d[34] + 2 * d[5] * d[6] * d[31] * d[34] - 4 * d[4] * d[7] * d[31] * d[34] + 2 * d[3] * d[8] * d[31] * d[34] + 2 * d[4] * d[6] * d[32] * d[34] - 2 * d[0] * d[8] * d[32] * d[34] - 2 * d[2] * d[3] * d[33] * d[34] + 2 * d[4] * d[5] * d[33] * d[34] + d[0] * d[2] * std::pow(d[34], 2) - std::pow(d[4], 2) * std::pow(d[34], 2) - 2 * d[5] * d[7] * d[27] * d[35] + 2 * d[1] * d[8] * d[27] * d[35] - 2 * d[4] * d[6] * d[28] * d[35] + 2 * d[0] * d[8] * d[28] * d[35] + 2 * d[5] * d[6] * d[30] * d[35] + 2 * d[4] * d[7] * d[30] * d[35] - 4 * d[3] * d[8] * d[30] * d[35] - 2 * d[1] * d[6] * d[31] * d[35] + 2 * d[3] * d[7] * d[31] * d[35] + 2 * d[3] * d[6] * d[32] * d[35] - 2 * d[0] * d[7] * d[32] * d[35] - 2 * d[1] * d[4] * d[33] * d[35] + 2 * d[3] * d[5] * d[33] * d[35] + 2 * d[3] * d[4] * d[34] * d[35] - 2 * d[0] * d[5] * d[34] * d[35] + d[0] * d[1] * std::pow(d[35], 2) - std::pow(d[3], 2) * std::pow(d[35], 2) - d[2] * d[27] * d[28] * d[44] - d[1] * d[27] * d[29] * d[44] - d[0] * d[28] * d[29] * d[44] + 2 * d[3] * d[29] * d[30] * d[44] + d[2] * std::pow(d[30], 2) * d[44] + 2 * d[4] * d[28] * d[31] * d[44] - 2 * d[5] * d[30] * d[31] * d[44] + d[1] * std::pow(d[31], 2) * d[44] + 2 * d[5] * d[27] * d[32] * d[44] - 2 * d[4] * d[30] * d[32] * d[44] - 2 * d[3] * d[31] * d[32] * d[44] + d[0] * std::pow(d[32], 2) * d[44];
    coeffs[71] = d[2] * std::pow(d[7], 2) * d[9] - 2 * d[5] * d[7] * d[8] * d[9] + d[1] * std::pow(d[8], 2) * d[9] + d[2] * std::pow(d[6], 2) * d[10] - 2 * d[4] * d[6] * d[8] * d[10] + d[0] * std::pow(d[8], 2) * d[10] + d[1] * std::pow(d[6], 2) * d[11] - 2 * d[3] * d[6] * d[7] * d[11] + d[0] * std::pow(d[7], 2) * d[11] - 2 * d[2] * d[6] * d[7] * d[12] + 2 * d[5] * d[6] * d[8] * d[12] + 2 * d[4] * d[7] * d[8] * d[12] - 2 * d[3] * std::pow(d[8], 2) * d[12] + 2 * d[5] * d[6] * d[7] * d[13] - 2 * d[4] * std::pow(d[7], 2) * d[13] - 2 * d[1] * d[6] * d[8] * d[13] + 2 * d[3] * d[7] * d[8] * d[13] - 2 * d[5] * std::pow(d[6], 2) * d[14] + 2 * d[4] * d[6] * d[7] * d[14] + 2 * d[3] * d[6] * d[8] * d[14] - 2 * d[0] * d[7] * d[8] * d[14] + 2 * d[1] * d[2] * d[6] * d[15] - 2 * std::pow(d[5], 2) * d[6] * d[15] - 2 * d[2] * d[3] * d[7] * d[15] + 2 * d[4] * d[5] * d[7] * d[15] - 2 * d[1] * d[4] * d[8] * d[15] + 2 * d[3] * d[5] * d[8] * d[15] - 2 * d[2] * d[3] * d[6] * d[16] + 2 * d[4] * d[5] * d[6] * d[16] + 2 * d[0] * d[2] * d[7] * d[16] - 2 * std::pow(d[4], 2) * d[7] * d[16] + 2 * d[3] * d[4] * d[8] * d[16] - 2 * d[0] * d[5] * d[8] * d[16] - 2 * d[1] * d[4] * d[6] * d[17] + 2 * d[3] * d[5] * d[6] * d[17] + 2 * d[3] * d[4] * d[7] * d[17] - 2 * d[0] * d[5] * d[7] * d[17] + 2 * d[0] * d[1] * d[8] * d[17] - 2 * std::pow(d[3], 2) * d[8] * d[17] - d[1] * d[2] * d[9] * d[44] + std::pow(d[5], 2) * d[9] * d[44] - d[0] * d[2] * d[10] * d[44] + std::pow(d[4], 2) * d[10] * d[44] - d[0] * d[1] * d[11] * d[44] + std::pow(d[3], 2) * d[11] * d[44] + 2 * d[2] * d[3] * d[12] * d[44] - 2 * d[4] * d[5] * d[12] * d[44] + 2 * d[1] * d[4] * d[13] * d[44] - 2 * d[3] * d[5] * d[13] * d[44] - 2 * d[3] * d[4] * d[14] * d[44] + 2 * d[0] * d[5] * d[14] * d[44];
    coeffs[72] = d[2] * std::pow(d[7], 2) * d[18] - 2 * d[5] * d[7] * d[8] * d[18] + d[1] * std::pow(d[8], 2) * d[18] + d[2] * std::pow(d[6], 2) * d[19] - 2 * d[4] * d[6] * d[8] * d[19] + d[0] * std::pow(d[8], 2) * d[19] + d[1] * std::pow(d[6], 2) * d[20] - 2 * d[3] * d[6] * d[7] * d[20] + d[0] * std::pow(d[7], 2) * d[20] - 2 * d[2] * d[6] * d[7] * d[21] + 2 * d[5] * d[6] * d[8] * d[21] + 2 * d[4] * d[7] * d[8] * d[21] - 2 * d[3] * std::pow(d[8], 2) * d[21] + 2 * d[5] * d[6] * d[7] * d[22] - 2 * d[4] * std::pow(d[7], 2) * d[22] - 2 * d[1] * d[6] * d[8] * d[22] + 2 * d[3] * d[7] * d[8] * d[22] - 2 * d[5] * std::pow(d[6], 2) * d[23] + 2 * d[4] * d[6] * d[7] * d[23] + 2 * d[3] * d[6] * d[8] * d[23] - 2 * d[0] * d[7] * d[8] * d[23] + 2 * d[1] * d[2] * d[6] * d[24] - 2 * std::pow(d[5], 2) * d[6] * d[24] - 2 * d[2] * d[3] * d[7] * d[24] + 2 * d[4] * d[5] * d[7] * d[24] - 2 * d[1] * d[4] * d[8] * d[24] + 2 * d[3] * d[5] * d[8] * d[24] - 2 * d[2] * d[3] * d[6] * d[25] + 2 * d[4] * d[5] * d[6] * d[25] + 2 * d[0] * d[2] * d[7] * d[25] - 2 * std::pow(d[4], 2) * d[7] * d[25] + 2 * d[3] * d[4] * d[8] * d[25] - 2 * d[0] * d[5] * d[8] * d[25] - 2 * d[1] * d[4] * d[6] * d[26] + 2 * d[3] * d[5] * d[6] * d[26] + 2 * d[3] * d[4] * d[7] * d[26] - 2 * d[0] * d[5] * d[7] * d[26] + 2 * d[0] * d[1] * d[8] * d[26] - 2 * std::pow(d[3], 2) * d[8] * d[26] - d[1] * d[2] * d[18] * d[44] + std::pow(d[5], 2) * d[18] * d[44] - d[0] * d[2] * d[19] * d[44] + std::pow(d[4], 2) * d[19] * d[44] - d[0] * d[1] * d[20] * d[44] + std::pow(d[3], 2) * d[20] * d[44] + 2 * d[2] * d[3] * d[21] * d[44] - 2 * d[4] * d[5] * d[21] * d[44] + 2 * d[1] * d[4] * d[22] * d[44] - 2 * d[3] * d[5] * d[22] * d[44] - 2 * d[3] * d[4] * d[23] * d[44] + 2 * d[0] * d[5] * d[23] * d[44];
    coeffs[73] = d[2] * std::pow(d[7], 2) * d[27] - 2 * d[5] * d[7] * d[8] * d[27] + d[1] * std::pow(d[8], 2) * d[27] + d[2] * std::pow(d[6], 2) * d[28] - 2 * d[4] * d[6] * d[8] * d[28] + d[0] * std::pow(d[8], 2) * d[28] + d[1] * std::pow(d[6], 2) * d[29] - 2 * d[3] * d[6] * d[7] * d[29] + d[0] * std::pow(d[7], 2) * d[29] - 2 * d[2] * d[6] * d[7] * d[30] + 2 * d[5] * d[6] * d[8] * d[30] + 2 * d[4] * d[7] * d[8] * d[30] - 2 * d[3] * std::pow(d[8], 2) * d[30] + 2 * d[5] * d[6] * d[7] * d[31] - 2 * d[4] * std::pow(d[7], 2) * d[31] - 2 * d[1] * d[6] * d[8] * d[31] + 2 * d[3] * d[7] * d[8] * d[31] - 2 * d[5] * std::pow(d[6], 2) * d[32] + 2 * d[4] * d[6] * d[7] * d[32] + 2 * d[3] * d[6] * d[8] * d[32] - 2 * d[0] * d[7] * d[8] * d[32] + 2 * d[1] * d[2] * d[6] * d[33] - 2 * std::pow(d[5], 2) * d[6] * d[33] - 2 * d[2] * d[3] * d[7] * d[33] + 2 * d[4] * d[5] * d[7] * d[33] - 2 * d[1] * d[4] * d[8] * d[33] + 2 * d[3] * d[5] * d[8] * d[33] - 2 * d[2] * d[3] * d[6] * d[34] + 2 * d[4] * d[5] * d[6] * d[34] + 2 * d[0] * d[2] * d[7] * d[34] - 2 * std::pow(d[4], 2) * d[7] * d[34] + 2 * d[3] * d[4] * d[8] * d[34] - 2 * d[0] * d[5] * d[8] * d[34] - 2 * d[1] * d[4] * d[6] * d[35] + 2 * d[3] * d[5] * d[6] * d[35] + 2 * d[3] * d[4] * d[7] * d[35] - 2 * d[0] * d[5] * d[7] * d[35] + 2 * d[0] * d[1] * d[8] * d[35] - 2 * std::pow(d[3], 2) * d[8] * d[35] - d[1] * d[2] * d[27] * d[44] + std::pow(d[5], 2) * d[27] * d[44] - d[0] * d[2] * d[28] * d[44] + std::pow(d[4], 2) * d[28] * d[44] - d[0] * d[1] * d[29] * d[44] + std::pow(d[3], 2) * d[29] * d[44] + 2 * d[2] * d[3] * d[30] * d[44] - 2 * d[4] * d[5] * d[30] * d[44] + 2 * d[1] * d[4] * d[31] * d[44] - 2 * d[3] * d[5] * d[31] * d[44] - 2 * d[3] * d[4] * d[32] * d[44] + 2 * d[0] * d[5] * d[32] * d[44];
    coeffs[74] = d[1] * d[2] * std::pow(d[6], 2) - std::pow(d[5], 2) * std::pow(d[6], 2) - 2 * d[2] * d[3] * d[6] * d[7] + 2 * d[4] * d[5] * d[6] * d[7] + d[0] * d[2] * std::pow(d[7], 2) - std::pow(d[4], 2) * std::pow(d[7], 2) - 2 * d[1] * d[4] * d[6] * d[8] + 2 * d[3] * d[5] * d[6] * d[8] + 2 * d[3] * d[4] * d[7] * d[8] - 2 * d[0] * d[5] * d[7] * d[8] + d[0] * d[1] * std::pow(d[8], 2) - std::pow(d[3], 2) * std::pow(d[8], 2) - d[0] * d[1] * d[2] * d[44] + d[2] * std::pow(d[3], 2) * d[44] + d[1] * std::pow(d[4], 2) * d[44] - 2 * d[3] * d[4] * d[5] * d[44] + d[0] * std::pow(d[5], 2) * d[44];

    // Setup elimination template
    static const int coeffs0_ind[] = {0, 40, 1, 0, 20, 40, 41, 2, 1, 0, 20, 21, 41, 42, 3, 2, 1, 21, 22, 42, 43, 3, 2, 22, 23, 43, 44, 3, 23, 44, 0, 20, 40, 4, 1, 0, 20, 21, 40, 41, 45, 5, 4, 24, 45, 2, 1, 0, 20, 21, 22, 41, 42, 46, 6, 5, 4, 24, 25, 46, 3, 2, 1, 21, 22, 23, 42, 43, 47, 6, 5, 25, 26, 47, 3, 2, 22, 23, 43, 44, 48, 6, 26, 48, 3, 23, 44, 0, 40, 1, 0, 20, 40, 41, 4, 24, 2, 1, 0, 20, 21, 40, 41, 45, 42, 7, 5, 4, 24, 25, 3, 2, 1, 0, 20, 21, 22, 41, 45, 42, 46, 49, 43, 8, 7, 27, 49, 6, 5, 4, 24, 25, 26, 3, 2, 1, 21, 22, 23, 42, 46, 43, 47, 50, 44, 8, 7, 27, 28, 50, 6, 5, 25, 26, 3, 2, 22, 23, 43, 47, 44, 48, 51, 8, 28, 51, 6, 26, 3, 23, 44, 48, 4, 0, 20, 40, 45, 5, 4, 24, 1, 0, 20, 21, 40, 41, 45, 46, 7, 27, 6, 5, 4, 24, 25, 2, 1, 0, 20, 21, 22, 41, 45, 42, 46, 49, 47, 9, 8, 7, 27, 28, 6, 5, 4, 24, 25, 26, 3, 2, 1, 21, 22, 23, 42, 46, 49, 43, 47, 50, 52, 48, 9, 29, 52, 8, 7, 27, 28, 6, 5, 25, 26, 3, 2, 22, 23, 43, 47, 50, 44, 48, 51, 53, 9, 29, 53, 8, 28, 6, 26, 3, 23, 44, 48, 51, 7, 4, 24, 0, 20, 40, 45, 49, 8, 7, 27, 5, 4, 24, 25, 1, 20, 21, 0, 41, 45, 46, 49, 50, 9, 29, 8, 7, 27, 28, 6, 5, 4, 24, 25, 26, 2, 21, 22, 1, 42, 46, 49, 47, 50, 52, 51, 9, 29, 8, 7, 27, 28, 6, 5, 25, 26, 3, 22, 23, 2, 43, 47, 50, 52, 48, 51, 53, 54, 54, 9, 29, 8, 28, 6, 26, 23, 3, 44, 48, 51, 53, 9, 7, 27, 4, 24, 45, 20, 0, 49, 52, 9, 29, 8, 7, 27, 28, 5, 24, 25, 4, 46, 21, 49, 1, 50, 52, 53, 9, 29, 8, 7, 27, 28, 6, 25, 26, 5, 47, 22, 50, 52, 2, 51, 53, 54, 9, 29, 8, 28, 26, 6, 48, 23, 51, 53, 54, 3, 0, 20, 40, 10, 1, 20, 21, 40, 55, 0, 41, 11, 10, 30, 55, 2, 21, 20, 0, 22, 41, 56, 1, 42, 12, 11, 10, 30, 31, 56, 3, 22, 21, 1, 23, 42, 57, 2, 43, 12, 11, 31, 32, 57, 23, 22, 2, 43, 58, 3, 44, 12, 32, 58, 23, 3, 44, 0, 40, 1, 0, 20, 40, 41, 10, 30, 4, 24, 2, 1, 20, 21, 0, 40, 55, 41, 45, 42, 13, 11, 10, 30, 31, 55, 5, 24, 25, 45, 3, 2, 21, 20, 0, 22, 1, 41, 56, 59, 4, 42, 46, 43, 14, 13, 33, 59, 12, 11, 10, 30, 31, 32, 56, 6, 25, 24, 4, 26, 46, 3, 22, 21, 1, 23, 2, 42, 57, 60, 5, 43, 47, 44, 14, 13, 33, 34, 60, 12, 11, 31, 32, 57, 26, 25, 5, 47, 23, 22, 2, 3, 43, 58, 61, 6, 44, 48, 14, 34, 61, 12, 32, 58, 26, 6, 48, 23, 3, 44, 10, 4, 20, 0, 40, 45, 55, 11, 10, 30, 5, 4, 24, 21, 20, 0, 1, 40, 55, 41, 45, 46, 56, 13, 33, 12, 11, 10, 30, 31, 55, 7, 27, 6, 5, 24, 25, 4, 22, 21, 20, 0, 1, 2, 41, 45, 56, 59, 42, 46, 49, 47, 57, 15, 14, 13, 33, 34, 12, 11, 10, 30, 31, 32, 56, 59, 8, 27, 28, 49, 6, 25, 24, 4, 26, 5, 23, 22, 21, 1, 2, 3, 42, 46, 57, 60, 62, 7, 43, 47, 50, 48, 58, 15, 35, 62, 14, 13, 33, 34, 12, 11, 31, 32, 57, 60, 28, 27, 7, 50, 26, 25, 5, 6, 23, 22, 2, 3, 43, 47, 58, 61, 63, 8, 44, 48, 51, 15, 35, 63, 14, 34, 12, 32, 58, 61, 28, 8, 51, 26, 6, 23, 3, 44, 48, 13, 10, 30, 7, 24, 4, 20, 0, 40, 55, 45, 49, 59, 14, 13, 33, 11, 10, 30, 31, 55, 8, 7, 27, 25, 24, 4, 5, 21, 20, 0, 1, 41, 45, 56, 59, 46, 49, 50, 60, 15, 35, 14, 13, 33, 34, 12, 11, 10, 30, 31, 32, 56, 59, 9, 29, 8, 27, 28, 7, 26, 25, 24, 4, 5, 6, 22, 21, 1, 2, 42, 46, 49, 57, 60, 62, 47, 50, 52, 51, 61, 15, 35, 14, 13, 33, 34, 12, 11, 31, 32, 57, 60, 62, 29, 52, 28, 27, 7, 8, 26, 25, 5, 6, 23, 22, 2, 3, 43, 47, 50, 58, 61, 63, 64, 9, 48, 51, 53, 64, 15, 35, 14, 34, 12, 32, 58, 61, 63, 29, 9, 53, 28, 8, 26, 6, 23, 3, 44, 48, 51, 15, 13, 33, 10, 30, 55, 9, 27, 7, 24, 4, 45, 20, 0, 59, 49, 52, 62, 15, 35, 14, 13, 33, 34, 11, 30, 31, 10, 56, 59, 9, 29, 28, 27, 7, 8, 25, 24, 4, 5, 46, 21, 1, 49, 60, 62, 50, 52, 53, 63, 15, 35, 14, 13, 33, 34, 12, 31, 32, 11, 57, 60, 62, 29, 9, 28, 27, 7, 8, 26, 25, 5, 6, 47, 22, 2, 50, 52, 61, 63, 64, 51, 53, 54, 15, 35, 14, 34, 32, 12, 58, 61, 63, 64, 54, 29, 9, 28, 8, 26, 6, 48, 23, 3, 51, 53, 15, 35, 13, 33, 59, 30, 29, 9, 27, 7, 49, 24, 4, 10, 62, 52, 54, 64, 15, 35, 14, 33, 34, 13, 60, 31, 62, 29, 9, 28, 27, 7, 8, 50, 25, 5, 52, 11, 63, 64, 53, 54, 15, 35, 34, 14, 61, 32, 63, 64, 29, 9, 28, 8, 51, 26, 6, 53, 54, 12, 15, 35, 62, 33, 29, 9, 52, 27, 7, 13, 64, 54, 35, 15, 63, 34, 64, 29, 9, 53, 28, 8, 54, 14, 0, 40, 1, 0, 20, 40, 41, 10, 30, 2, 1, 0, 20, 21, 40, 41, 55, 42, 16, 11, 30, 31, 55, 65, 3, 2, 1, 21, 0, 22, 41, 10, 42, 20, 56, 43, 17, 16, 36, 65, 12, 31, 30, 10, 32, 56, 66, 3, 2, 22, 1, 23, 42, 11, 43, 21, 57, 44, 17, 16, 36, 37, 66, 32, 31, 11, 57, 67, 3, 23, 2, 43, 12, 44, 22, 58, 17, 37, 67, 32, 12, 58, 3, 44, 23, 10, 4, 20, 0, 40, 45, 55, 11, 10, 30, 5, 4, 24, 21, 20, 0, 1, 40, 41, 55, 45, 46, 56, 16, 36, 13, 33, 12, 11, 30, 31, 10, 55, 65, 6, 5, 4, 24, 25, 45, 22, 21, 0, 1, 2, 41, 20, 42, 56, 46, 59, 47, 57, 18, 17, 16, 36, 37, 65, 14, 33, 34, 59, 12, 31, 30, 10, 32, 11, 56, 66, 68, 6, 5, 25, 4, 26, 46, 23, 22, 1, 2, 3, 42, 21, 13, 43, 57, 47, 24, 60, 48, 58, 18, 38, 68, 17, 16, 36, 37, 66, 34, 33, 13, 60, 32, 31, 11, 12, 57, 67, 69, 6, 26, 5, 47, 23, 2, 3, 43, 22, 14, 44, 58, 48, 25, 61, 18, 38, 69, 17, 37, 67, 34, 14, 61, 32, 12, 58, 6, 48, 3, 44, 23, 26, 16, 13, 30, 10, 7, 24, 4, 20, 0, 40, 45, 55, 49, 59, 65, 17, 16, 36, 14, 13, 33, 31, 30, 10, 11, 55, 65, 8, 7, 27, 25, 24, 4, 5, 45, 21, 1, 41, 20, 0, 46, 56, 59, 49, 50, 60, 66, 18, 38, 17, 16, 36, 37, 65, 15, 35, 14, 33, 34, 13, 32, 31, 30, 10, 11, 12, 56, 59, 66, 68, 8, 7, 27, 28, 49, 26, 25, 4, 5, 6, 46, 22, 2, 42, 21, 24, 1, 47, 57, 60, 50, 62, 51, 61, 67, 18, 38, 17, 16, 36, 37, 66, 68, 35, 62, 34, 33, 13, 14, 32, 31, 11, 12, 57, 60, 67, 69, 70, 8, 28, 7, 50, 26, 5, 6, 47, 23, 3, 43, 22, 25, 2, 15, 48, 58, 61, 51, 27, 63, 70, 18, 38, 17, 37, 67, 69, 35, 15, 63, 34, 14, 32, 12, 58, 61, 8, 51, 6, 48, 44, 23, 26, 3, 28, 18, 16, 36, 15, 33, 13, 30, 10, 55, 65, 9, 27, 7, 24, 4, 45, 20, 0, 49, 59, 52, 62, 68, 18, 38, 17, 16, 36, 37, 65, 15, 35, 34, 33, 13, 14, 31, 30, 10, 11, 56, 59, 66, 68, 9, 29, 28, 27, 7, 8, 49, 25, 5, 46, 24, 21, 1, 4, 50, 60, 62, 52, 53, 63, 69, 18, 38, 17, 16, 36, 37, 66, 68, 35, 15, 34, 33, 13, 14, 32, 31, 11, 12, 57, 60, 62, 67, 69, 70, 9, 29, 52, 28, 7, 8, 50, 26, 6, 47, 25, 27, 22, 2, 5, 51, 61, 63, 53, 64, 18, 38, 17, 37, 67, 69, 70, 64, 35, 15, 34, 14, 32, 12, 58, 61, 63, 9, 53, 8, 51, 48, 26, 28, 23, 3, 6, 29, 18, 38, 16, 36, 65, 35, 15, 33, 13, 59, 30, 10, 68, 29, 9, 27, 7, 49, 24, 4, 52, 62, 54, 64, 70, 18, 38, 17, 36, 37, 16, 66, 68, 35, 15, 34, 33, 13, 14, 60, 31, 11, 62, 69, 70, 29, 9, 52, 28, 8, 50, 27, 25, 5, 7, 53, 63, 64, 54, 18, 38, 37, 17, 67, 69, 70, 35, 15, 34, 14, 61, 32, 12, 63, 64, 54, 9, 53, 51, 28, 29, 26, 6, 8, 10, 20, 0, 40, 55, 11, 10, 30, 21, 40, 1, 20, 0, 41, 55, 56, 16, 36, 12, 11, 10, 30, 31, 55, 22, 41, 0, 20, 2, 21, 1, 42, 56, 65, 57, 19, 17, 36, 37, 65, 71, 12, 11, 31, 10, 32, 56, 16, 23, 42, 1, 21, 3, 22, 2, 43, 57, 30, 66, 58, 19, 39, 71, 37, 36, 16, 66, 72, 12, 32, 11, 57, 17, 43, 2, 22, 23, 3, 44, 58, 31, 67, 19, 39, 72, 37, 17, 67, 12, 58, 44, 3, 23, 32, 16, 13, 30, 10, 55, 24, 4, 40, 45, 0, 20, 59, 65, 17, 16, 36, 14, 13, 33, 31, 30, 10, 11, 55, 56, 65, 25, 45, 5, 24, 41, 4, 20, 46, 1, 59, 21, 0, 60, 66, 19, 39, 18, 38, 17, 36, 37, 16, 65, 71, 14, 13, 33, 34, 59, 32, 31, 10, 11, 12, 56, 30, 57, 66, 26, 46, 4, 24, 6, 25, 42, 5, 21, 47, 2, 60, 22, 68, 1, 61, 67, 19, 39, 71, 38, 68, 37, 36, 16, 17, 66, 72, 73, 14, 34, 13, 60, 32, 11, 12, 57, 31, 18, 58, 67, 47, 5, 25, 26, 43, 6, 22, 48, 3, 61, 23, 33, 69, 2, 73, 19, 39, 72, 38, 18, 69, 37, 17, 67, 14, 61, 12, 58, 32, 48, 6, 26, 44, 23, 34, 3, 19, 18, 36, 16, 15, 33, 13, 30, 10, 55, 59, 65, 27, 7, 45, 49, 4, 20, 0, 24, 62, 68, 71, 19, 39, 18, 38, 37, 36, 16, 17, 65, 71, 15, 35, 34, 33, 13, 14, 59, 31, 11, 56, 30, 10, 60, 66, 68, 28, 49, 8, 27, 46, 7, 24, 50, 5, 21, 1, 62, 25, 4, 63, 69, 72, 16, 30, 10, 55, 0, 20, 40, 65, 17, 16, 36, 31, 55, 11, 30, 10, 56, 1, 20, 21, 41, 65, 0, 66, 19, 39, 17, 16, 36, 37, 65, 32, 56, 10, 30, 12, 31, 11, 57, 2, 21, 22, 42, 66, 71, 1, 67, 39, 71, 74, 17, 37, 16, 66, 19, 57, 11, 31, 32, 12, 58, 3, 22, 23, 43, 67, 36, 72, 2, 74, 39, 19, 72, 17, 67, 58, 12, 32, 23, 44, 37, 3, 19, 18, 36, 16, 65, 33, 13, 55, 59, 10, 4, 24, 45, 20, 0, 30, 68, 71, 19, 39, 18, 38, 37, 36, 16, 17, 65, 66, 71, 34, 59, 14, 33, 56, 13, 30, 60, 11, 5, 24, 25, 46, 68, 21, 1, 31, 10, 4, 69, 72, 19, 36, 16, 65, 10, 30, 55, 0, 20, 71, 19, 39, 37, 65, 17, 36, 16, 66, 11, 30, 31, 56, 71, 1, 21, 10, 72, 19, 39, 38, 18, 36, 16, 65, 71, 35, 15, 33, 13, 59, 30, 10, 62, 68, 29, 9, 49, 52, 7, 24, 4, 27, 64, 70, 73, 19, 39, 71, 38, 18, 37, 36, 16, 17, 66, 68, 72, 73, 15, 35, 62, 34, 13, 14, 60, 32, 12, 57, 31, 33, 11, 61, 67, 69, 50, 7, 27, 28, 47, 8, 25, 51, 6, 22, 2, 63, 26, 70, 5, 19, 39, 71, 38, 18, 37, 36, 16, 17, 66, 68, 72, 73, 35, 15, 62, 34, 14, 60, 33, 31, 11, 13, 63, 69, 70, 52, 29, 50, 9, 27, 53, 8, 25, 5, 64, 28, 7, 18, 38, 68, 36, 35, 15, 62, 33, 13, 16, 70, 29, 9, 52, 27, 7, 54, 64, 19, 39, 72, 73, 70, 38, 18, 37, 17, 67, 69, 15, 63, 14, 61, 58, 32, 34, 12, 51, 8, 28, 48, 26, 23, 3, 35, 6, 19, 39, 72, 73, 38, 18, 37, 17, 67, 69, 70, 64, 15, 63, 61, 34, 35, 32, 12, 14, 53, 9, 29, 51, 28, 26, 6, 8, 38, 18, 69, 37, 70, 35, 15, 63, 34, 14, 64, 17, 54, 53, 29, 28, 8, 9, 64, 35, 54, 29, 9, 15};
    static const int coeffs1_ind[] = {74, 19, 39, 74, 19, 39, 71, 16, 36, 39, 19, 71, 16, 36, 65, 10, 30, 74, 39, 19, 71, 38, 18, 65, 68, 16, 13, 33, 59, 30, 10, 4, 24, 36, 73, 74, 39, 19, 38, 18, 36, 16, 65, 68, 71, 35, 15, 59, 62, 13, 30, 10, 7, 27, 49, 24, 4, 33, 70, 73, 74, 71, 39, 19, 72, 17, 36, 37, 66, 74, 11, 31, 16, 19, 39, 71, 66, 16, 36, 37, 17, 67, 12, 31, 32, 57, 72, 2, 22, 74, 11, 39, 19, 71, 74, 18, 38, 68, 37, 16, 17, 66, 36, 67, 72, 60, 13, 33, 34, 57, 14, 31, 61, 12, 6, 25, 26, 47, 69, 22, 2, 32, 73, 11, 5, 39, 19, 71, 72, 74, 68, 38, 66, 18, 36, 69, 17, 14, 33, 34, 60, 73, 31, 11, 5, 25, 37, 16, 13, 39, 19, 71, 74, 38, 18, 68, 37, 17, 66, 36, 16, 69, 72, 73, 62, 35, 60, 15, 33, 63, 14, 31, 11, 8, 27, 28, 50, 70, 25, 5, 34, 13, 7, 74, 71, 73, 19, 18, 38, 68, 36, 16, 13, 33, 39, 39, 19, 71, 73, 74, 68, 70, 18, 36, 16, 15, 35, 62, 33, 13, 7, 27, 38, 39, 19, 71, 74, 38, 18, 68, 36, 16, 70, 73, 62, 64, 15, 33, 13, 9, 29, 52, 27, 7, 35, 19, 39, 71, 38, 18, 68, 36, 16, 73, 35, 15, 62, 33, 13, 64, 70, 52, 54, 9, 27, 7, 29, 74, 39, 72, 17, 37, 19, 74, 72, 19, 39, 37, 67, 12, 32, 17, 74, 19, 72, 67, 17, 37, 32, 58, 3, 23, 39, 12, 74, 73, 39, 19, 72, 18, 69, 17, 67, 37, 61, 14, 34, 58, 32, 26, 48, 23, 3, 38, 12, 6, 74, 73, 19, 72, 39, 69, 18, 38, 67, 37, 34, 61, 32, 12, 6, 26, 17, 14, 74, 39, 19, 72, 73, 70, 18, 69, 67, 37, 38, 17, 63, 15, 35, 61, 34, 32, 12, 28, 51, 26, 6, 14, 8, 74, 73, 72, 39, 38, 69, 37, 17, 14, 34, 19, 18, 74, 73, 72, 39, 19, 70, 69, 38, 37, 17, 35, 63, 34, 14, 8, 28, 18, 15, 74, 39, 19, 72, 73, 70, 69, 38, 37, 17, 18, 64, 63, 35, 34, 14, 29, 53, 28, 8, 15, 9, 39, 19, 72, 73, 38, 18, 69, 37, 17, 70, 64, 63, 35, 34, 14, 15, 54, 53, 29, 28, 8, 9, 74, 73, 39, 19, 18, 38, 74, 73, 39, 19, 70, 38, 18, 15, 35, 74, 73, 39, 19, 70, 38, 18, 64, 35, 15, 9, 29, 74, 73, 39, 19, 70, 38, 18, 64, 35, 15, 54, 29, 9, 73, 39, 70, 38, 18, 19, 64, 35, 15, 54, 29, 9, 70, 38, 64, 35, 15, 18, 54, 29, 9};

    static const int C0_ind[] = {0, 66, 122, 123, 126, 127, 188, 244, 245, 246, 247, 248, 249, 310, 366, 367, 368, 369, 370, 371, 432, 489, 490, 491, 492, 493, 554, 612, 613, 615, 738, 743, 797, 854, 860, 861, 864, 865, 887, 919, 920, 976, 977, 980, 981, 982, 983, 984, 985, 986, 987, 1009, 1041, 1042, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1131, 1163, 1164, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1253, 1285, 1286, 1344, 1345, 1347, 1350, 1351, 1375, 1476, 1585, 1598, 1599, 1604, 1650, 1707, 1714, 1719, 1720, 1721, 1722, 1725, 1726, 1740, 1772, 1773, 1829, 1830, 1836, 1837, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1862, 1863, 1894, 1895, 1896, 1951, 1952, 1953, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1984, 1985, 2016, 2017, 2018, 2073, 2075, 2076, 2077, 2078, 2079, 2081, 2082, 2083, 2084, 2088, 2089, 2090, 2091, 2106, 2107, 2138, 2139, 2140, 2198, 2199, 2201, 2204, 2205, 2211, 2212, 2228, 2229, 2330, 2337, 2342, 2381, 2439, 2452, 2453, 2458, 2459, 2460, 2463, 2464, 2471, 2503, 2504, 2561, 2568, 2573, 2574, 2575, 2576, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2593, 2594, 2625, 2626, 2627, 2683, 2684, 2690, 2691, 2694, 2695, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2715, 2716, 2717, 2747, 2748, 2749, 2750, 2805, 2807, 2810, 2811, 2813, 2814, 2815, 2816, 2820, 2821, 2822, 2823, 2826, 2827, 2828, 2829, 2837, 2838, 2839, 2869, 2870, 2871, 2872, 2930, 2931, 2933, 2936, 2937, 2943, 2944, 2949, 2950, 2959, 2960, 2961, 3062, 3069, 3074, 3075, 3077, 3079, 3113, 3171, 3184, 3185, 3190, 3191, 3192, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3203, 3235, 3236, 3293, 3300, 3305, 3307, 3308, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3325, 3326, 3357, 3358, 3359, 3415, 3423, 3426, 3430, 3431, 3432, 3433, 3436, 3437, 3438, 3439, 3441, 3442, 3443, 3444, 3445, 3447, 3448, 3449, 3479, 3480, 3481, 3482, 3543, 3546, 3547, 3553, 3554, 3559, 3560, 3564, 3566, 3567, 3569, 3570, 3571, 3672, 3679, 3684, 3685, 3687, 3689, 3690, 3722, 3723, 3781, 3795, 3800, 3801, 3802, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3844, 3845, 3846, 3903, 3918, 3921, 3924, 3925, 3926, 3927, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3966, 3967, 3968, 3969, 4041, 4042, 4047, 4048, 4052, 4054, 4055, 4056, 4057, 4058, 4059, 4088, 4182, 4186, 4264, 4270, 4304, 4305, 4308, 4309, 4336, 4358, 4386, 4392, 4393, 4396, 4397, 4426, 4427, 4428, 4429, 4430, 4431, 4458, 4480, 4508, 4514, 4515, 4516, 4517, 4518, 4519, 4548, 4549, 4550, 4551, 4552, 4553, 4580, 4602, 4630, 4637, 4638, 4639, 4640, 4641, 4671, 4672, 4673, 4675, 4702, 4724, 4752, 4760, 4761, 4763, 4794, 4795, 4797, 4920, 5000, 5042, 5043, 5047, 5093, 5122, 5130, 5135, 5158, 5162, 5164, 5165, 5166, 5169, 5170, 5185, 5189, 5215, 5240, 5244, 5246, 5252, 5253, 5256, 5257, 5279, 5280, 5281, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5307, 5311, 5312, 5334, 5337, 5362, 5366, 5368, 5369, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 5409, 5410, 5411, 5412, 5413, 5414, 5429, 5433, 5434, 5456, 5459, 5484, 5488, 5491, 5492, 5493, 5494, 5495, 5497, 5498, 5499, 5500, 5523, 5525, 5526, 5527, 5529, 5532, 5533, 5534, 5536, 5551, 5555, 5556, 5578, 5581, 5606, 5614, 5615, 5617, 5620, 5621, 5645, 5648, 5649, 5651, 5655, 5656, 5673, 5746, 5774, 5781, 5786, 5824, 5854, 5855, 5868, 5869, 5874, 5896, 5897, 5901, 5903, 5904, 5907, 5908, 5916, 5920, 5946, 5947, 5976, 5977, 5984, 5989, 5990, 5991, 5992, 5995, 5996, 6010, 6012, 6016, 6018, 6019, 6020, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6038, 6039, 6042, 6043, 6068, 6069, 6094, 6098, 6099, 6100, 6106, 6107, 6110, 6111, 6113, 6114, 6115, 6116, 6117, 6118, 6132, 6133, 6134, 6135, 6138, 6139, 6141, 6142, 6143, 6144, 6145, 6146, 6147, 6148, 6149, 6150, 6151, 6152, 6160, 6161, 6164, 6165, 6166, 6188, 6190, 6191, 6216, 6220, 6221, 6223, 6226, 6227, 6229, 6230, 6231, 6232, 6236, 6237, 6238, 6239, 6254, 6255, 6257, 6258, 6259, 6261, 6264, 6265, 6266, 6268, 6270, 6271, 6272, 6273, 6282, 6283, 6286, 6287, 6288, 6310, 6312, 6313, 6338, 6346, 6347, 6349, 6352, 6353, 6359, 6360, 6376, 6377, 6380, 6381, 6383, 6387, 6388, 6393, 6394, 6404, 6405, 6478, 6485, 6490, 6506, 6513, 6518, 6519, 6522, 6523, 6529, 6556, 6586, 6587, 6600, 6601, 6606, 6607, 6608, 6611, 6612, 6619, 6628, 6629, 6633, 6635, 6636, 6639, 6640, 6641, 6642, 6643, 6644, 6645, 6648, 6651, 6652, 6678, 6679, 6708, 6709, 6716, 6721, 6723, 6724, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6741, 6742, 6744, 6748, 6751, 6752, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6770, 6771, 6773, 6774, 6775, 6800, 6801, 6826, 6830, 6831, 6839, 6842, 6846, 6847, 6848, 6849, 6852, 6853, 6854, 6855, 6863, 6864, 6865, 6867, 6871, 6874, 6875, 6876, 6878, 6880, 6881, 6882, 6883, 6885, 6886, 6887, 6888, 6889, 6892, 6893, 6895, 6896, 6897, 6898, 6920, 6922, 6923, 6948, 6959, 6962, 6963, 6969, 6970, 6975, 6976, 6985, 6986, 6987, 6990, 6991, 6993, 6997, 6998, 7003, 7004, 7008, 7009, 7011, 7014, 7015, 7088, 7095, 7100, 7101, 7103, 7105, 7116, 7123, 7128, 7129, 7132, 7133, 7134, 7135, 7139, 7166, 7196, 7197, 7211, 7216, 7217, 7218, 7221, 7222, 7223, 7224, 7225, 7226, 7227, 7229, 7239, 7243, 7245, 7246, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 7258, 7261, 7262, 7288, 7289, 7318, 7319, 7334, 7337, 7340, 7341, 7342, 7343, 7345, 7346, 7347, 7348, 7349, 7351, 7352, 7362, 7366, 7368, 7369, 7370, 7371, 7373, 7374, 7375, 7376, 7377, 7378, 7379, 7380, 7381, 7383, 7384, 7385, 7410, 7411, 7436, 7457, 7458, 7463, 7464, 7468, 7470, 7471, 7473, 7474, 7475, 7481, 7485, 7486, 7491, 7492, 7496, 7497, 7499, 7500, 7501, 7502, 7503, 7583, 7588, 7589, 7591, 7593, 7594, 7611, 7616, 7617, 7620, 7621, 7622, 7623, 7626, 7627, 7654, 7684, 7685, 7706, 7709, 7711, 7712, 7713, 7714, 7715, 7716, 7717, 7734, 7737, 7739, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 7748, 7749, 7750, 7776, 7777, 7829, 7830, 7834, 7836, 7837, 7838, 7839, 7840, 7857, 7858, 7862, 7863, 7865, 7866, 7867, 7868, 7869, 7870, 7955, 7957, 7959, 7960, 7983, 7986, 7987, 7988, 7989, 7992, 7993, 8020, 8078, 8080, 8081, 8082, 8083, 8106, 8107, 8109, 8110, 8111, 8112, 8114, 8241, 8293, 8363, 8364, 8368, 8405, 8415, 8452, 8456, 8485, 8486, 8487, 8488, 8490, 8491, 8527, 8534, 8537, 8540, 8574, 8575, 8578, 8579, 8606, 8607, 8608, 8609, 8610, 8611, 8612, 8613, 8628, 8649, 8655, 8656, 8659, 8662, 8663, 8666, 8667, 8696, 8697, 8698, 8699, 8700, 8701, 8728, 8730, 8731, 8732, 8733, 8734, 8735, 8750, 8771, 8777, 8778, 8781, 8785, 8786, 8787, 8788, 8789, 8819, 8820, 8821, 8823, 8850, 8853, 8854, 8855, 8857, 8872, 8893, 8899, 8900, 8908, 8909, 8911, 8942, 8943, 8945, 8977, 8979, 9021, 9068, 9095, 9102, 9106, 9117, 9147, 9148, 9190, 9191, 9195, 9217, 9218, 9222, 9224, 9225, 9227, 9228, 9229, 9239, 9241, 9259, 9269, 9270, 9278, 9283, 9306, 9310, 9312, 9313, 9314, 9317, 9318, 9333, 9337, 9339, 9340, 9341, 9342, 9344, 9345, 9346, 9347, 9348, 9349, 9350, 9351, 9356, 9361, 9363, 9381, 9388, 9391, 9392, 9394, 9400, 9401, 9404, 9405, 9427, 9428, 9429, 9432, 9433, 9435, 9436, 9437, 9438, 9439, 9440, 9455, 9459, 9460, 9462, 9463, 9464, 9465, 9466, 9467, 9468, 9469, 9470, 9471, 9472, 9473, 9478, 9482, 9483, 9485, 9503, 9509, 9510, 9513, 9514, 9517, 9520, 9521, 9523, 9524, 9525, 9526, 9549, 9551, 9552, 9553, 9555, 9558, 9559, 9560, 9562, 9577, 9581, 9582, 9585, 9586, 9587, 9589, 9591, 9592, 9593, 9595, 9600, 9604, 9605, 9607, 9625, 9631, 9632, 9640, 9641, 9643, 9646, 9647, 9671, 9674, 9675, 9677, 9681, 9682, 9699, 9709, 9711, 9714, 9717, 9722, 9753, 9772, 9800, 9807, 9812, 9827, 9834, 9838, 9840, 9841, 9842, 9849, 9850, 9879, 9880, 9881, 9894, 9895, 9900, 9922, 9923, 9927, 9929, 9930, 9933, 9934, 9942, 9946, 9949, 9950, 9954, 9956, 9957, 9959, 9960, 9961, 9962, 9963, 9964, 9965, 9969, 9971, 9972, 9973, 9991, 10001, 10002, 10003, 10010, 10015, 10017, 10018, 10021, 10022, 10036, 10038, 10042, 10045, 10046, 10049, 10050, 10051, 10052, 10053, 10054, 10055, 10056, 10064, 10065, 10068, 10069, 10072, 10073, 10074, 10076, 10077, 10078, 10079, 10080, 10081, 10082, 10083, 10084, 10085, 10086, 10087, 10088, 10091, 10093, 10094, 10095, 10113, 10120, 10123, 10124, 10125, 10133, 10136, 10140, 10141, 10142, 10143, 10158, 10159, 10161, 10165, 10168, 10169, 10170, 10172, 10174, 10175, 10176, 10177, 10186, 10187, 10190, 10191, 10192, 10195, 10196, 10197, 10199, 10201, 10202, 10203, 10205, 10206, 10207, 10208, 10209, 10210, 10213, 10214, 10215, 10216, 10217, 10235, 10241, 10242, 10253, 10256, 10257, 10263, 10264, 10280, 10281, 10284, 10285, 10287, 10291, 10292, 10297, 10298, 10308, 10309, 10319, 10321, 10324, 10327, 10330, 10331, 10332, 10335, 10363, 10382, 10389, 10394, 10410, 10417, 10422, 10423, 10426, 10427, 10433, 10437, 10444, 10448, 10450, 10451, 10452, 10455, 10456, 10459, 10460, 10489, 10490, 10491, 10505, 10510, 10511, 10512, 10515, 10516, 10523, 10533, 10537, 10539, 10540, 10543, 10544, 10545, 10546, 10547, 10548, 10549, 10552, 10555, 10556, 10560, 10564, 10566, 10567, 10569, 10570, 10571, 10572, 10573, 10574, 10575, 10577, 10578, 10579, 10581, 10582, 10583, 10601, 10611, 10612, 10613, 10628, 10631, 10634, 10635, 10636, 10637, 10645, 10646, 10656, 10660, 10662, 10663, 10664, 10665, 10667, 10668, 10669, 10670, 10671, 10674, 10675, 10677, 10678, 10679, 10683, 10684, 10687, 10689, 10690, 10691, 10693, 10694, 10695, 10696, 10697, 10698, 10699, 10700, 10701, 10703, 10704, 10705, 10723, 10730, 10751, 10752, 10757, 10758, 10767, 10768, 10769, 10775, 10779, 10780, 10785, 10786, 10790, 10791, 10793, 10796, 10797, 10807, 10809, 10812, 10815, 10818, 10819, 10820, 10821, 10822, 10823, 10851, 10877, 10882, 10883, 10885, 10887, 10905, 10910, 10911, 10914, 10915, 10916, 10917, 10921, 10932, 10936, 10938, 10939, 10940, 10943, 10944, 10947, 10948, 10977, 10978, 10979, 11000, 11003, 11005, 11006, 11007, 11008, 11009, 11011, 11028, 11031, 11033, 11034, 11035, 11036, 11037, 11038, 11039, 11040, 11043, 11044, 11055, 11057, 11059, 11060, 11061, 11062, 11063, 11065, 11066, 11067, 11069, 11070, 11071, 11089, 11123, 11124, 11128, 11130, 11131, 11133, 11134, 11151, 11152, 11156, 11157, 11159, 11160, 11161, 11162, 11163, 11175, 11178, 11181, 11184, 11185, 11186, 11187, 11188, 11189, 11291, 11316, 11320, 11325, 11343, 11413, 11414, 11418, 11438, 11439, 11442, 11443, 11445, 11447, 11455, 11465, 11502, 11506, 11535, 11536, 11537, 11538, 11540, 11541, 11560, 11561, 11562, 11563, 11564, 11565, 11567, 11569, 11577, 11584, 11587, 11590, 11624, 11625, 11628, 11629, 11656, 11658, 11659, 11660, 11661, 11662, 11663, 11678, 11682, 11683, 11684, 11685, 11686, 11687, 11689, 11691, 11699, 11705, 11706, 11709, 11713, 11716, 11717, 11747, 11748, 11749, 11751, 11778, 11781, 11782, 11783, 11785, 11800, 11805, 11806, 11807, 11809, 11811, 11813, 11821, 11827, 11828, 11836, 11837, 11839, 11870, 11871, 11873, 11905, 11907, 11927, 11928, 11929, 11949, 11996, 12023, 12030, 12034, 12045, 12048, 12052, 12054, 12057, 12058, 12070, 12075, 12076, 12118, 12119, 12123, 12145, 12146, 12150, 12152, 12153, 12155, 12156, 12157, 12167, 12169, 12170, 12171, 12174, 12175, 12176, 12177, 12178, 12179, 12180, 12187, 12192, 12195, 12197, 12198, 12206, 12211, 12234, 12238, 12241, 12242, 12245, 12246, 12261, 12265, 12268, 12269, 12270, 12272, 12273, 12274, 12275, 12276, 12277, 12278, 12279, 12284, 12289, 12291, 12292, 12293, 12294, 12295, 12296, 12297, 12298, 12299, 12300, 12301, 12302, 12309, 12314, 12316, 12317, 12319, 12320, 12329, 12332, 12355, 12357, 12361, 12364, 12365, 12366, 12368, 12383, 12387, 12388, 12391, 12392, 12393, 12395, 12397, 12398, 12399, 12401, 12406, 12410, 12411, 12413, 12415, 12416, 12417, 12419, 12420, 12421, 12422, 12423, 12424, 12431, 12436, 12437, 12438, 12439, 12449, 12452, 12453, 12477, 12480, 12481, 12483, 12487, 12488, 12505, 12515, 12517, 12520, 12523, 12528, 12537, 12538, 12539, 12542, 12544, 12559, 12561, 12578, 12606, 12613, 12618, 12633, 12640, 12644, 12646, 12647, 12648, 12655, 12656, 12658, 12662, 12664, 12667, 12668, 12669, 12670, 12680, 12685, 12686, 12687, 12701, 12706, 12729, 12733, 12735, 12736, 12739, 12740, 12748, 12752, 12756, 12760, 12762, 12763, 12765, 12766, 12767, 12768, 12769, 12770, 12771, 12775, 12777, 12778, 12779, 12780, 12781, 12784, 12785, 12786, 12787, 12788, 12789, 12790, 12791, 12792, 12797, 12802, 12805, 12807, 12808, 12809, 12877, 12902, 12906, 12911, 12915, 12917, 12918, 12929, 12999, 13000, 13004, 13024, 13025, 13028, 13029, 13031, 13033, 13037, 13038, 13039, 13040, 13041, 13050, 13051, 13088, 13092, 13122, 13123, 13124, 13126, 13127, 13146, 13147, 13148, 13149, 13150, 13151, 13153, 13155, 13159, 13160, 13161, 13162, 13163, 13170, 13172, 13173, 13211, 13215, 13242, 13245, 13246, 13247, 13249, 13264, 13269, 13270, 13271, 13273, 13275, 13277, 13281, 13282, 13283, 13284, 13285, 13291, 13292, 13294, 13303, 13334, 13335, 13337, 13369, 13371, 13391, 13392, 13393, 13404, 13406, 13413, 13416, 13460, 13487, 13494, 13498, 13509, 13512, 13516, 13518, 13521, 13522, 13525, 13527, 13528, 13530, 13531, 13534, 13539, 13540, 13583, 13587, 13610, 13614, 13616, 13617, 13619, 13620, 13621, 13631, 13633, 13634, 13635, 13638, 13639, 13640, 13641, 13642, 13643, 13644, 13647, 13648, 13649, 13650, 13651, 13652, 13653, 13656, 13659, 13660, 13661, 13662, 13731, 13756, 13760, 13765, 13769, 13771, 13772, 13776, 13777, 13783, 13854, 13858, 13878, 13879, 13882, 13883, 13885, 13887, 13891, 13892, 13893, 13894, 13895, 13898, 13899, 13904, 13905, 13927, 13932, 13955, 13960, 13961, 13964, 13965, 13971, 13982, 13986, 13988, 13989, 13990, 13993, 13994, 13997, 13998, 14000, 14004, 14006, 14009, 14010, 14011, 14012, 14022, 14027, 14028, 14029, 14044, 14047, 14062, 14072, 14076, 14078, 14079, 14080, 14081, 14090, 14091, 14094, 14095, 14099, 14100, 14103, 14105, 14106, 14107, 14109, 14110, 14111, 14112, 14113, 14114, 14117, 14119, 14120, 14121, 14123, 14124, 14125, 14127, 14128, 14129, 14130, 14131, 14132, 14133, 14134, 14139, 14144, 14146, 14147, 14172, 14175, 14183, 14200, 14203, 14205, 14206, 14207, 14208, 14209, 14212, 14215, 14216, 14227, 14229, 14231, 14232, 14233, 14234, 14235, 14237, 14238, 14239, 14241, 14242, 14243, 14245, 14249, 14250, 14251, 14252, 14253, 14254, 14255, 14256, 14261, 14266, 14269, 14299, 14301, 14303, 14304, 14327, 14330, 14331, 14332, 14333, 14336, 14337, 14354, 14355, 14356, 14359, 14360, 14363, 14364, 14411, 14412, 14428, 14429, 14435, 14439, 14440, 14445, 14446, 14456, 14457, 14467, 14469, 14472, 14475, 14478, 14479, 14480, 14483, 14489, 14490, 14491, 14494, 14496, 14499, 14500, 14511, 14513, 14539, 14540, 14549, 14550, 14567, 14568, 14572, 14573, 14575, 14578, 14579, 14591, 14594, 14597, 14600, 14601, 14602, 14603, 14604, 14605, 14611, 14612, 14613, 14616, 14618, 14621, 14622, 14635, 14666, 14668, 14669, 14670, 14671, 14694, 14695, 14697, 14698, 14699, 14700, 14702, 14719, 14722, 14723, 14725, 14726, 14727, 14791, 14792, 14819, 14820, 14821, 14824};
    static const int C1_ind[] = {108, 112, 113, 223, 227, 229, 230, 234, 235, 336, 340, 345, 349, 351, 352, 356, 357, 363, 440, 444, 455, 458, 462, 464, 467, 468, 471, 473, 474, 476, 477, 478, 479, 480, 485, 486, 535, 540, 562, 566, 568, 569, 570, 577, 578, 580, 584, 586, 589, 590, 591, 592, 593, 595, 596, 598, 599, 602, 607, 608, 609, 703, 707, 709, 711, 715, 716, 717, 718, 719, 722, 723, 728, 801, 802, 805, 825, 826, 827, 829, 831, 833, 837, 838, 839, 840, 841, 844, 845, 848, 850, 896, 900, 915, 919, 923, 924, 927, 929, 930, 931, 933, 938, 943, 945, 947, 948, 949, 951, 952, 953, 954, 955, 956, 959, 960, 961, 962, 963, 964, 965, 968, 970, 971, 972, 1051, 1053, 1055, 1065, 1067, 1069, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1146, 1149, 1158, 1162, 1173, 1175, 1177, 1178, 1179, 1180, 1181, 1185, 1187, 1188, 1189, 1191, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1215, 1216, 1309, 1318, 1321, 1322, 1325, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1422, 1423, 1424, 1431, 1432, 1440, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1452, 1453, 1454, 1455, 1456, 1517, 1520, 1521, 1527, 1544, 1545, 1546, 1549, 1550, 1553, 1554, 1562, 1565, 1566, 1567, 1568, 1569, 1571, 1572, 1574, 1575, 1578, 1611, 1613, 1615, 1639, 1642, 1643, 1644, 1645, 1649, 1666, 1667, 1668, 1671, 1672, 1675, 1676, 1684, 1687, 1688, 1689, 1690, 1700, 1801, 1814, 1816, 1820, 1821, 1826, 1903, 1923, 1924, 1925, 1936, 1938, 1942, 1943, 1948, 1991, 2023, 2025, 2045, 2046, 2047, 2058, 2060, 2064, 2065, 2067, 2070, 2107, 2113, 2117, 2118, 2135, 2145, 2147, 2150, 2153, 2158, 2167, 2168, 2169, 2172, 2174, 2180, 2182, 2184, 2185, 2189, 2191, 2192, 2257, 2269, 2272, 2275, 2280, 2289, 2290, 2291, 2294, 2296, 2302, 2304, 2306, 2307, 2308, 2309, 2313, 2314, 2350, 2367, 2368, 2378, 2379, 2391, 2394, 2397, 2400, 2401, 2402, 2405, 2411, 2412, 2413, 2416, 2418, 2421, 2422, 2424, 2426, 2428, 2429, 2435, 2436, 2519, 2533, 2538, 2540, 2546, 2548, 2550, 2551, 2552, 2553, 2557, 2558, 2622, 2641, 2644, 2645, 2649, 2655, 2660, 2662, 2665, 2666, 2668, 2670, 2672, 2673, 2674, 2675, 2679, 2680, 2715, 2738, 2739, 2741, 2744, 2763, 2766, 2767, 2769, 2770, 2771, 2777, 2782, 2784, 2787, 2788, 2790, 2792, 2794, 2795, 2801, 2802, 2832, 2834, 2835, 2837, 2860, 2861, 2863, 2864, 2865, 2866, 2885, 2888, 2889, 2891, 2892, 2893, 2899, 2904, 2906, 2909, 2910, 2923, 3026, 3036, 3038, 3039, 3040, 3041, 3132, 3148, 3153, 3154, 3158, 3160, 3161, 3162, 3163, 3229, 3254, 3257, 3258, 3270, 3275, 3276, 3280, 3282, 3283, 3284, 3285, 3323, 3351, 3352, 3353, 3376, 3379, 3380, 3392, 3397, 3398, 3402, 3404, 3405, 3445, 3446, 3473, 3474, 3475, 3478, 3498, 3501, 3502, 3514, 3519, 3520, 3567, 3568, 3595, 3596, 3597, 3600, 3620, 3623, 3624};

    MatrixXd C0 = MatrixXd::Zero(122, 122);
    MatrixXd C1 = MatrixXd::Zero(122, 30);
    for (int i = 0; i < 2331; i++)
    {
        C0(C0_ind[i]) = coeffs(coeffs0_ind[i]);
    }
    for (int i = 0; i < 484; i++)
    {
        C1(C1_ind[i]) = coeffs(coeffs1_ind[i]);
    }

    MatrixXd C12 = C0.partialPivLu().solve(C1);

    // Setup action matrix
    Matrix<double, 38, 30> RR;
    RR << -C12.bottomRows(8), Matrix<double, 30, 30>::Identity(30, 30);

    static const int AM_ind[] = {32, 18, 11, 12, 0, 16, 15, 1, 17, 2, 19, 20, 21, 3, 28, 26, 25, 4, 27, 5, 29, 30, 31, 6, 33, 34, 35, 36, 37, 7};
    Matrix<double, 30, 30> AM;
    for (int i = 0; i < 30; i++)
    {
        AM.row(i) = RR.row(AM_ind[i]);
    }

    Matrix<std::complex<double>, 3, 30> sols;
    sols.setZero();

    // Solve eigenvalue problem
    EigenSolver<Matrix<double, 30, 30>> es(AM);
    ArrayXcd D = es.eigenvalues();
    ArrayXXcd V = es.eigenvectors();

    V = (V / V.row(0).array().replicate(30, 1)).eval();

    sols.row(0) = V.row(1).array();
    sols.row(1) = V.row(14).array();
    sols.row(2) = D.transpose().array();

    return sols;
}
// Action =  z
// Quotient ring basis (V) = 1,x,x^2,x^2*z,x^2*z^2,x*y,x*y^2,x*y^2*z,x*y*z,x*y*z^2,x*z,x*z^2,x*z^3,x*z^4,y,y^2,y^3,y^3*z,y^2*z,y^2*z^2,y*z,y*z^2,y*z^3,y*z^4,z,z^2,z^3,z^4,z^5,z^6,
// Available monomials (RR*V) = x^2*z^3,x*y^2*z^2,x*y*z^3,x*z^5,y^3*z^2,y^2*z^3,y*z^5,z^7,1,x,x^2,x^2*z,x^2*z^2,x*y,x*y^2,x*y^2*z,x*y*z,x*y*z^2,x*z,x*z^2,x*z^3,x*z^4,y,y^2,y^3,y^3*z,y^2*z,y^2*z^2,y*z,y*z^2,y*z^3,y*z^4,z,z^2,z^3,z^4,z^5,z^6,

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
    if (nrhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_621:nrhs", "One input required.");
    }
    if (nlhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_621:nlhs", "One output required.");
    }
    if (!mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]))
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_621:notDouble", "Input data must be type double.");
    }
    if (mxGetNumberOfElements(prhs[0]) % 45 != 0)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_621:incorrectSize", "Input size must be multiple of 45.");
    }
    int n_instances = mxGetNumberOfElements(prhs[0]) / 45;
    double *input = mxGetPr(prhs[0]);
    plhs[0] = mxCreateDoubleMatrix(3, 30 * n_instances, mxCOMPLEX);
    double *zr = mxGetPr(plhs[0]);
    double *zi = mxGetPi(plhs[0]);
    for (int k = 0; k < n_instances; k++)
    {
        const VectorXd data = Map<const VectorXd>(input + k * 45, 45);
        MatrixXcd sols = solver_toa_upgrade_621(data);
        Index offset = k * sols.size();
        for (Index i = 0; i < sols.size(); i++)
        {
            zr[i + offset] = sols(i).real();
            zi[i + offset] = sols(i).imag();
        }
    }
}
