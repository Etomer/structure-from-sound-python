#include <Eigen/Dense>
#include "mex.h"

using namespace Eigen;

MatrixXcd solver_toa_upgrade_sat_621(const VectorXd &data)
{
    // Compute coefficients
    const double *d = data.data();
    VectorXd coeffs(96);
    coeffs[0] = 2 * d[10] * d[11] * d[15] * d[36] - 2 * std::pow(d[14], 2) * d[15] * d[36] - 2 * d[11] * d[12] * d[16] * d[36] + 2 * d[13] * d[14] * d[16] * d[36] - 2 * d[10] * d[13] * d[17] * d[36] + 2 * d[12] * d[14] * d[17] * d[36] - 2 * d[11] * d[12] * d[15] * d[37] + 2 * d[13] * d[14] * d[15] * d[37] + 2 * d[9] * d[11] * d[16] * d[37] - 2 * std::pow(d[13], 2) * d[16] * d[37] + 2 * d[12] * d[13] * d[17] * d[37] - 2 * d[9] * d[14] * d[17] * d[37] - 2 * d[10] * d[13] * d[15] * d[38] + 2 * d[12] * d[14] * d[15] * d[38] + 2 * d[12] * d[13] * d[16] * d[38] - 2 * d[9] * d[14] * d[16] * d[38] + 2 * d[9] * d[10] * d[17] * d[38] - 2 * std::pow(d[12], 2) * d[17] * d[38] - d[9] * d[10] * d[11] * d[42] + d[11] * std::pow(d[12], 2) * d[42] + d[10] * std::pow(d[13], 2) * d[42] - 2 * d[12] * d[13] * d[14] * d[42] + d[9] * std::pow(d[14], 2) * d[42];
    coeffs[1] = 2 * d[11] * d[15] * d[19] * d[36] - 2 * d[13] * d[17] * d[19] * d[36] + 2 * d[10] * d[15] * d[20] * d[36] - 2 * d[12] * d[16] * d[20] * d[36] - 2 * d[11] * d[16] * d[21] * d[36] + 2 * d[14] * d[17] * d[21] * d[36] + 2 * d[14] * d[16] * d[22] * d[36] - 2 * d[10] * d[17] * d[22] * d[36] - 4 * d[14] * d[15] * d[23] * d[36] + 2 * d[13] * d[16] * d[23] * d[36] + 2 * d[12] * d[17] * d[23] * d[36] + 2 * d[10] * d[11] * d[24] * d[36] - 2 * std::pow(d[14], 2) * d[24] * d[36] - 2 * d[11] * d[12] * d[25] * d[36] + 2 * d[13] * d[14] * d[25] * d[36] - 2 * d[10] * d[13] * d[26] * d[36] + 2 * d[12] * d[14] * d[26] * d[36] + 2 * d[11] * d[16] * d[18] * d[37] - 2 * d[14] * d[17] * d[18] * d[37] - 2 * d[12] * d[15] * d[20] * d[37] + 2 * d[9] * d[16] * d[20] * d[37] - 2 * d[11] * d[15] * d[21] * d[37] + 2 * d[13] * d[17] * d[21] * d[37] + 2 * d[14] * d[15] * d[22] * d[37] - 4 * d[13] * d[16] * d[22] * d[37] + 2 * d[12] * d[17] * d[22] * d[37] + 2 * d[13] * d[15] * d[23] * d[37] - 2 * d[9] * d[17] * d[23] * d[37] - 2 * d[11] * d[12] * d[24] * d[37] + 2 * d[13] * d[14] * d[24] * d[37] + 2 * d[9] * d[11] * d[25] * d[37] - 2 * std::pow(d[13], 2) * d[25] * d[37] + 2 * d[12] * d[13] * d[26] * d[37] - 2 * d[9] * d[14] * d[26] * d[37] - 2 * d[14] * d[16] * d[18] * d[38] + 2 * d[10] * d[17] * d[18] * d[38] - 2 * d[13] * d[15] * d[19] * d[38] + 2 * d[9] * d[17] * d[19] * d[38] + 2 * d[14] * d[15] * d[21] * d[38] + 2 * d[13] * d[16] * d[21] * d[38] - 4 * d[12] * d[17] * d[21] * d[38] - 2 * d[10] * d[15] * d[22] * d[38] + 2 * d[12] * d[16] * d[22] * d[38] + 2 * d[12] * d[15] * d[23] * d[38] - 2 * d[9] * d[16] * d[23] * d[38] - 2 * d[10] * d[13] * d[24] * d[38] + 2 * d[12] * d[14] * d[24] * d[38] + 2 * d[12] * d[13] * d[25] * d[38] - 2 * d[9] * d[14] * d[25] * d[38] + 2 * d[9] * d[10] * d[26] * d[38] - 2 * std::pow(d[12], 2) * d[26] * d[38] - d[10] * d[11] * d[18] * d[42] + std::pow(d[14], 2) * d[18] * d[42] - d[9] * d[11] * d[19] * d[42] + std::pow(d[13], 2) * d[19] * d[42] - d[9] * d[10] * d[20] * d[42] + std::pow(d[12], 2) * d[20] * d[42] + 2 * d[11] * d[12] * d[21] * d[42] - 2 * d[13] * d[14] * d[21] * d[42] + 2 * d[10] * d[13] * d[22] * d[42] - 2 * d[12] * d[14] * d[22] * d[42] - 2 * d[12] * d[13] * d[23] * d[42] + 2 * d[9] * d[14] * d[23] * d[42];
    coeffs[2] = 2 * d[15] * d[19] * d[20] * d[36] - 2 * d[16] * d[20] * d[21] * d[36] - 2 * d[17] * d[19] * d[22] * d[36] + 2 * d[17] * d[21] * d[23] * d[36] + 2 * d[16] * d[22] * d[23] * d[36] - 2 * d[15] * std::pow(d[23], 2) * d[36] + 2 * d[11] * d[19] * d[24] * d[36] + 2 * d[10] * d[20] * d[24] * d[36] - 4 * d[14] * d[23] * d[24] * d[36] - 2 * d[12] * d[20] * d[25] * d[36] - 2 * d[11] * d[21] * d[25] * d[36] + 2 * d[14] * d[22] * d[25] * d[36] + 2 * d[13] * d[23] * d[25] * d[36] - 2 * d[13] * d[19] * d[26] * d[36] + 2 * d[14] * d[21] * d[26] * d[36] - 2 * d[10] * d[22] * d[26] * d[36] + 2 * d[12] * d[23] * d[26] * d[36] + 2 * d[16] * d[18] * d[20] * d[37] - 2 * d[15] * d[20] * d[21] * d[37] + 2 * d[17] * d[21] * d[22] * d[37] - 2 * d[16] * std::pow(d[22], 2) * d[37] - 2 * d[17] * d[18] * d[23] * d[37] + 2 * d[15] * d[22] * d[23] * d[37] - 2 * d[12] * d[20] * d[24] * d[37] - 2 * d[11] * d[21] * d[24] * d[37] + 2 * d[14] * d[22] * d[24] * d[37] + 2 * d[13] * d[23] * d[24] * d[37] + 2 * d[11] * d[18] * d[25] * d[37] + 2 * d[9] * d[20] * d[25] * d[37] - 4 * d[13] * d[22] * d[25] * d[37] - 2 * d[14] * d[18] * d[26] * d[37] + 2 * d[13] * d[21] * d[26] * d[37] + 2 * d[12] * d[22] * d[26] * d[37] - 2 * d[9] * d[23] * d[26] * d[37] + 2 * d[17] * d[18] * d[19] * d[38] - 2 * d[17] * std::pow(d[21], 2) * d[38] - 2 * d[15] * d[19] * d[22] * d[38] + 2 * d[16] * d[21] * d[22] * d[38] - 2 * d[16] * d[18] * d[23] * d[38] + 2 * d[15] * d[21] * d[23] * d[38] - 2 * d[13] * d[19] * d[24] * d[38] + 2 * d[14] * d[21] * d[24] * d[38] - 2 * d[10] * d[22] * d[24] * d[38] + 2 * d[12] * d[23] * d[24] * d[38] - 2 * d[14] * d[18] * d[25] * d[38] + 2 * d[13] * d[21] * d[25] * d[38] + 2 * d[12] * d[22] * d[25] * d[38] - 2 * d[9] * d[23] * d[25] * d[38] + 2 * d[10] * d[18] * d[26] * d[38] + 2 * d[9] * d[19] * d[26] * d[38] - 4 * d[12] * d[21] * d[26] * d[38] - d[11] * d[18] * d[19] * d[42] - d[10] * d[18] * d[20] * d[42] - d[9] * d[19] * d[20] * d[42] + 2 * d[12] * d[20] * d[21] * d[42] + d[11] * std::pow(d[21], 2) * d[42] + 2 * d[13] * d[19] * d[22] * d[42] - 2 * d[14] * d[21] * d[22] * d[42] + d[10] * std::pow(d[22], 2) * d[42] + 2 * d[14] * d[18] * d[23] * d[42] - 2 * d[13] * d[21] * d[23] * d[42] - 2 * d[12] * d[22] * d[23] * d[42] + d[9] * std::pow(d[23], 2) * d[42];
    coeffs[3] = 2 * d[19] * d[20] * d[24] * d[36] - 2 * std::pow(d[23], 2) * d[24] * d[36] - 2 * d[20] * d[21] * d[25] * d[36] + 2 * d[22] * d[23] * d[25] * d[36] - 2 * d[19] * d[22] * d[26] * d[36] + 2 * d[21] * d[23] * d[26] * d[36] - 2 * d[20] * d[21] * d[24] * d[37] + 2 * d[22] * d[23] * d[24] * d[37] + 2 * d[18] * d[20] * d[25] * d[37] - 2 * std::pow(d[22], 2) * d[25] * d[37] + 2 * d[21] * d[22] * d[26] * d[37] - 2 * d[18] * d[23] * d[26] * d[37] - 2 * d[19] * d[22] * d[24] * d[38] + 2 * d[21] * d[23] * d[24] * d[38] + 2 * d[21] * d[22] * d[25] * d[38] - 2 * d[18] * d[23] * d[25] * d[38] + 2 * d[18] * d[19] * d[26] * d[38] - 2 * std::pow(d[21], 2) * d[26] * d[38] - d[18] * d[19] * d[20] * d[42] + d[20] * std::pow(d[21], 2) * d[42] + d[19] * std::pow(d[22], 2) * d[42] - 2 * d[21] * d[22] * d[23] * d[42] + d[18] * std::pow(d[23], 2) * d[42];
    coeffs[4] = 2 * d[11] * d[15] * d[28] * d[36] - 2 * d[13] * d[17] * d[28] * d[36] + 2 * d[10] * d[15] * d[29] * d[36] - 2 * d[12] * d[16] * d[29] * d[36] - 2 * d[11] * d[16] * d[30] * d[36] + 2 * d[14] * d[17] * d[30] * d[36] + 2 * d[14] * d[16] * d[31] * d[36] - 2 * d[10] * d[17] * d[31] * d[36] - 4 * d[14] * d[15] * d[32] * d[36] + 2 * d[13] * d[16] * d[32] * d[36] + 2 * d[12] * d[17] * d[32] * d[36] + 2 * d[10] * d[11] * d[33] * d[36] - 2 * std::pow(d[14], 2) * d[33] * d[36] - 2 * d[11] * d[12] * d[34] * d[36] + 2 * d[13] * d[14] * d[34] * d[36] - 2 * d[10] * d[13] * d[35] * d[36] + 2 * d[12] * d[14] * d[35] * d[36] + 2 * d[11] * d[16] * d[27] * d[37] - 2 * d[14] * d[17] * d[27] * d[37] - 2 * d[12] * d[15] * d[29] * d[37] + 2 * d[9] * d[16] * d[29] * d[37] - 2 * d[11] * d[15] * d[30] * d[37] + 2 * d[13] * d[17] * d[30] * d[37] + 2 * d[14] * d[15] * d[31] * d[37] - 4 * d[13] * d[16] * d[31] * d[37] + 2 * d[12] * d[17] * d[31] * d[37] + 2 * d[13] * d[15] * d[32] * d[37] - 2 * d[9] * d[17] * d[32] * d[37] - 2 * d[11] * d[12] * d[33] * d[37] + 2 * d[13] * d[14] * d[33] * d[37] + 2 * d[9] * d[11] * d[34] * d[37] - 2 * std::pow(d[13], 2) * d[34] * d[37] + 2 * d[12] * d[13] * d[35] * d[37] - 2 * d[9] * d[14] * d[35] * d[37] - 2 * d[14] * d[16] * d[27] * d[38] + 2 * d[10] * d[17] * d[27] * d[38] - 2 * d[13] * d[15] * d[28] * d[38] + 2 * d[9] * d[17] * d[28] * d[38] + 2 * d[14] * d[15] * d[30] * d[38] + 2 * d[13] * d[16] * d[30] * d[38] - 4 * d[12] * d[17] * d[30] * d[38] - 2 * d[10] * d[15] * d[31] * d[38] + 2 * d[12] * d[16] * d[31] * d[38] + 2 * d[12] * d[15] * d[32] * d[38] - 2 * d[9] * d[16] * d[32] * d[38] - 2 * d[10] * d[13] * d[33] * d[38] + 2 * d[12] * d[14] * d[33] * d[38] + 2 * d[12] * d[13] * d[34] * d[38] - 2 * d[9] * d[14] * d[34] * d[38] + 2 * d[9] * d[10] * d[35] * d[38] - 2 * std::pow(d[12], 2) * d[35] * d[38] - d[10] * d[11] * d[27] * d[42] + std::pow(d[14], 2) * d[27] * d[42] - d[9] * d[11] * d[28] * d[42] + std::pow(d[13], 2) * d[28] * d[42] - d[9] * d[10] * d[29] * d[42] + std::pow(d[12], 2) * d[29] * d[42] + 2 * d[11] * d[12] * d[30] * d[42] - 2 * d[13] * d[14] * d[30] * d[42] + 2 * d[10] * d[13] * d[31] * d[42] - 2 * d[12] * d[14] * d[31] * d[42] - 2 * d[12] * d[13] * d[32] * d[42] + 2 * d[9] * d[14] * d[32] * d[42];
    coeffs[5] = 2 * d[15] * d[20] * d[28] * d[36] - 2 * d[17] * d[22] * d[28] * d[36] + 2 * d[11] * d[24] * d[28] * d[36] - 2 * d[13] * d[26] * d[28] * d[36] + 2 * d[15] * d[19] * d[29] * d[36] - 2 * d[16] * d[21] * d[29] * d[36] + 2 * d[10] * d[24] * d[29] * d[36] - 2 * d[12] * d[25] * d[29] * d[36] - 2 * d[16] * d[20] * d[30] * d[36] + 2 * d[17] * d[23] * d[30] * d[36] - 2 * d[11] * d[25] * d[30] * d[36] + 2 * d[14] * d[26] * d[30] * d[36] - 2 * d[17] * d[19] * d[31] * d[36] + 2 * d[16] * d[23] * d[31] * d[36] + 2 * d[14] * d[25] * d[31] * d[36] - 2 * d[10] * d[26] * d[31] * d[36] + 2 * d[17] * d[21] * d[32] * d[36] + 2 * d[16] * d[22] * d[32] * d[36] - 4 * d[15] * d[23] * d[32] * d[36] - 4 * d[14] * d[24] * d[32] * d[36] + 2 * d[13] * d[25] * d[32] * d[36] + 2 * d[12] * d[26] * d[32] * d[36] + 2 * d[11] * d[19] * d[33] * d[36] + 2 * d[10] * d[20] * d[33] * d[36] - 4 * d[14] * d[23] * d[33] * d[36] - 2 * d[12] * d[20] * d[34] * d[36] - 2 * d[11] * d[21] * d[34] * d[36] + 2 * d[14] * d[22] * d[34] * d[36] + 2 * d[13] * d[23] * d[34] * d[36] - 2 * d[13] * d[19] * d[35] * d[36] + 2 * d[14] * d[21] * d[35] * d[36] - 2 * d[10] * d[22] * d[35] * d[36] + 2 * d[12] * d[23] * d[35] * d[36] + 2 * d[16] * d[20] * d[27] * d[37] - 2 * d[17] * d[23] * d[27] * d[37] + 2 * d[11] * d[25] * d[27] * d[37] - 2 * d[14] * d[26] * d[27] * d[37] + 2 * d[16] * d[18] * d[29] * d[37] - 2 * d[15] * d[21] * d[29] * d[37] - 2 * d[12] * d[24] * d[29] * d[37] + 2 * d[9] * d[25] * d[29] * d[37] - 2 * d[15] * d[20] * d[30] * d[37] + 2 * d[17] * d[22] * d[30] * d[37] - 2 * d[11] * d[24] * d[30] * d[37] + 2 * d[13] * d[26] * d[30] * d[37] + 2 * d[17] * d[21] * d[31] * d[37] - 4 * d[16] * d[22] * d[31] * d[37] + 2 * d[15] * d[23] * d[31] * d[37] + 2 * d[14] * d[24] * d[31] * d[37] - 4 * d[13] * d[25] * d[31] * d[37] + 2 * d[12] * d[26] * d[31] * d[37] - 2 * d[17] * d[18] * d[32] * d[37] + 2 * d[15] * d[22] * d[32] * d[37] + 2 * d[13] * d[24] * d[32] * d[37] - 2 * d[9] * d[26] * d[32] * d[37] - 2 * d[12] * d[20] * d[33] * d[37] - 2 * d[11] * d[21] * d[33] * d[37] + 2 * d[14] * d[22] * d[33] * d[37] + 2 * d[13] * d[23] * d[33] * d[37] + 2 * d[11] * d[18] * d[34] * d[37] + 2 * d[9] * d[20] * d[34] * d[37] - 4 * d[13] * d[22] * d[34] * d[37] - 2 * d[14] * d[18] * d[35] * d[37] + 2 * d[13] * d[21] * d[35] * d[37] + 2 * d[12] * d[22] * d[35] * d[37] - 2 * d[9] * d[23] * d[35] * d[37] + 2 * d[17] * d[19] * d[27] * d[38] - 2 * d[16] * d[23] * d[27] * d[38] - 2 * d[14] * d[25] * d[27] * d[38] + 2 * d[10] * d[26] * d[27] * d[38] + 2 * d[17] * d[18] * d[28] * d[38] - 2 * d[15] * d[22] * d[28] * d[38] - 2 * d[13] * d[24] * d[28] * d[38] + 2 * d[9] * d[26] * d[28] * d[38] - 4 * d[17] * d[21] * d[30] * d[38] + 2 * d[16] * d[22] * d[30] * d[38] + 2 * d[15] * d[23] * d[30] * d[38] + 2 * d[14] * d[24] * d[30] * d[38] + 2 * d[13] * d[25] * d[30] * d[38] - 4 * d[12] * d[26] * d[30] * d[38] - 2 * d[15] * d[19] * d[31] * d[38] + 2 * d[16] * d[21] * d[31] * d[38] - 2 * d[10] * d[24] * d[31] * d[38] + 2 * d[12] * d[25] * d[31] * d[38] - 2 * d[16] * d[18] * d[32] * d[38] + 2 * d[15] * d[21] * d[32] * d[38] + 2 * d[12] * d[24] * d[32] * d[38] - 2 * d[9] * d[25] * d[32] * d[38] - 2 * d[13] * d[19] * d[33] * d[38] + 2 * d[14] * d[21] * d[33] * d[38] - 2 * d[10] * d[22] * d[33] * d[38] + 2 * d[12] * d[23] * d[33] * d[38] - 2 * d[14] * d[18] * d[34] * d[38] + 2 * d[13] * d[21] * d[34] * d[38] + 2 * d[12] * d[22] * d[34] * d[38] - 2 * d[9] * d[23] * d[34] * d[38] + 2 * d[10] * d[18] * d[35] * d[38] + 2 * d[9] * d[19] * d[35] * d[38] - 4 * d[12] * d[21] * d[35] * d[38] - d[11] * d[19] * d[27] * d[42] - d[10] * d[20] * d[27] * d[42] + 2 * d[14] * d[23] * d[27] * d[42] - d[11] * d[18] * d[28] * d[42] - d[9] * d[20] * d[28] * d[42] + 2 * d[13] * d[22] * d[28] * d[42] - d[10] * d[18] * d[29] * d[42] - d[9] * d[19] * d[29] * d[42] + 2 * d[12] * d[21] * d[29] * d[42] + 2 * d[12] * d[20] * d[30] * d[42] + 2 * d[11] * d[21] * d[30] * d[42] - 2 * d[14] * d[22] * d[30] * d[42] - 2 * d[13] * d[23] * d[30] * d[42] + 2 * d[13] * d[19] * d[31] * d[42] - 2 * d[14] * d[21] * d[31] * d[42] + 2 * d[10] * d[22] * d[31] * d[42] - 2 * d[12] * d[23] * d[31] * d[42] + 2 * d[14] * d[18] * d[32] * d[42] - 2 * d[13] * d[21] * d[32] * d[42] - 2 * d[12] * d[22] * d[32] * d[42] + 2 * d[9] * d[23] * d[32] * d[42];
    coeffs[6] = 2 * d[20] * d[24] * d[28] * d[36] - 2 * d[22] * d[26] * d[28] * d[36] + 2 * d[19] * d[24] * d[29] * d[36] - 2 * d[21] * d[25] * d[29] * d[36] - 2 * d[20] * d[25] * d[30] * d[36] + 2 * d[23] * d[26] * d[30] * d[36] + 2 * d[23] * d[25] * d[31] * d[36] - 2 * d[19] * d[26] * d[31] * d[36] - 4 * d[23] * d[24] * d[32] * d[36] + 2 * d[22] * d[25] * d[32] * d[36] + 2 * d[21] * d[26] * d[32] * d[36] + 2 * d[19] * d[20] * d[33] * d[36] - 2 * std::pow(d[23], 2) * d[33] * d[36] - 2 * d[20] * d[21] * d[34] * d[36] + 2 * d[22] * d[23] * d[34] * d[36] - 2 * d[19] * d[22] * d[35] * d[36] + 2 * d[21] * d[23] * d[35] * d[36] + 2 * d[20] * d[25] * d[27] * d[37] - 2 * d[23] * d[26] * d[27] * d[37] - 2 * d[21] * d[24] * d[29] * d[37] + 2 * d[18] * d[25] * d[29] * d[37] - 2 * d[20] * d[24] * d[30] * d[37] + 2 * d[22] * d[26] * d[30] * d[37] + 2 * d[23] * d[24] * d[31] * d[37] - 4 * d[22] * d[25] * d[31] * d[37] + 2 * d[21] * d[26] * d[31] * d[37] + 2 * d[22] * d[24] * d[32] * d[37] - 2 * d[18] * d[26] * d[32] * d[37] - 2 * d[20] * d[21] * d[33] * d[37] + 2 * d[22] * d[23] * d[33] * d[37] + 2 * d[18] * d[20] * d[34] * d[37] - 2 * std::pow(d[22], 2) * d[34] * d[37] + 2 * d[21] * d[22] * d[35] * d[37] - 2 * d[18] * d[23] * d[35] * d[37] - 2 * d[23] * d[25] * d[27] * d[38] + 2 * d[19] * d[26] * d[27] * d[38] - 2 * d[22] * d[24] * d[28] * d[38] + 2 * d[18] * d[26] * d[28] * d[38] + 2 * d[23] * d[24] * d[30] * d[38] + 2 * d[22] * d[25] * d[30] * d[38] - 4 * d[21] * d[26] * d[30] * d[38] - 2 * d[19] * d[24] * d[31] * d[38] + 2 * d[21] * d[25] * d[31] * d[38] + 2 * d[21] * d[24] * d[32] * d[38] - 2 * d[18] * d[25] * d[32] * d[38] - 2 * d[19] * d[22] * d[33] * d[38] + 2 * d[21] * d[23] * d[33] * d[38] + 2 * d[21] * d[22] * d[34] * d[38] - 2 * d[18] * d[23] * d[34] * d[38] + 2 * d[18] * d[19] * d[35] * d[38] - 2 * std::pow(d[21], 2) * d[35] * d[38] - d[19] * d[20] * d[27] * d[42] + std::pow(d[23], 2) * d[27] * d[42] - d[18] * d[20] * d[28] * d[42] + std::pow(d[22], 2) * d[28] * d[42] - d[18] * d[19] * d[29] * d[42] + std::pow(d[21], 2) * d[29] * d[42] + 2 * d[20] * d[21] * d[30] * d[42] - 2 * d[22] * d[23] * d[30] * d[42] + 2 * d[19] * d[22] * d[31] * d[42] - 2 * d[21] * d[23] * d[31] * d[42] - 2 * d[21] * d[22] * d[32] * d[42] + 2 * d[18] * d[23] * d[32] * d[42];
    coeffs[7] = 2 * d[15] * d[28] * d[29] * d[36] - 2 * d[16] * d[29] * d[30] * d[36] - 2 * d[17] * d[28] * d[31] * d[36] + 2 * d[17] * d[30] * d[32] * d[36] + 2 * d[16] * d[31] * d[32] * d[36] - 2 * d[15] * std::pow(d[32], 2) * d[36] + 2 * d[11] * d[28] * d[33] * d[36] + 2 * d[10] * d[29] * d[33] * d[36] - 4 * d[14] * d[32] * d[33] * d[36] - 2 * d[12] * d[29] * d[34] * d[36] - 2 * d[11] * d[30] * d[34] * d[36] + 2 * d[14] * d[31] * d[34] * d[36] + 2 * d[13] * d[32] * d[34] * d[36] - 2 * d[13] * d[28] * d[35] * d[36] + 2 * d[14] * d[30] * d[35] * d[36] - 2 * d[10] * d[31] * d[35] * d[36] + 2 * d[12] * d[32] * d[35] * d[36] + 2 * d[16] * d[27] * d[29] * d[37] - 2 * d[15] * d[29] * d[30] * d[37] + 2 * d[17] * d[30] * d[31] * d[37] - 2 * d[16] * std::pow(d[31], 2) * d[37] - 2 * d[17] * d[27] * d[32] * d[37] + 2 * d[15] * d[31] * d[32] * d[37] - 2 * d[12] * d[29] * d[33] * d[37] - 2 * d[11] * d[30] * d[33] * d[37] + 2 * d[14] * d[31] * d[33] * d[37] + 2 * d[13] * d[32] * d[33] * d[37] + 2 * d[11] * d[27] * d[34] * d[37] + 2 * d[9] * d[29] * d[34] * d[37] - 4 * d[13] * d[31] * d[34] * d[37] - 2 * d[14] * d[27] * d[35] * d[37] + 2 * d[13] * d[30] * d[35] * d[37] + 2 * d[12] * d[31] * d[35] * d[37] - 2 * d[9] * d[32] * d[35] * d[37] + 2 * d[17] * d[27] * d[28] * d[38] - 2 * d[17] * std::pow(d[30], 2) * d[38] - 2 * d[15] * d[28] * d[31] * d[38] + 2 * d[16] * d[30] * d[31] * d[38] - 2 * d[16] * d[27] * d[32] * d[38] + 2 * d[15] * d[30] * d[32] * d[38] - 2 * d[13] * d[28] * d[33] * d[38] + 2 * d[14] * d[30] * d[33] * d[38] - 2 * d[10] * d[31] * d[33] * d[38] + 2 * d[12] * d[32] * d[33] * d[38] - 2 * d[14] * d[27] * d[34] * d[38] + 2 * d[13] * d[30] * d[34] * d[38] + 2 * d[12] * d[31] * d[34] * d[38] - 2 * d[9] * d[32] * d[34] * d[38] + 2 * d[10] * d[27] * d[35] * d[38] + 2 * d[9] * d[28] * d[35] * d[38] - 4 * d[12] * d[30] * d[35] * d[38] - d[11] * d[27] * d[28] * d[42] - d[10] * d[27] * d[29] * d[42] - d[9] * d[28] * d[29] * d[42] + 2 * d[12] * d[29] * d[30] * d[42] + d[11] * std::pow(d[30], 2) * d[42] + 2 * d[13] * d[28] * d[31] * d[42] - 2 * d[14] * d[30] * d[31] * d[42] + d[10] * std::pow(d[31], 2) * d[42] + 2 * d[14] * d[27] * d[32] * d[42] - 2 * d[13] * d[30] * d[32] * d[42] - 2 * d[12] * d[31] * d[32] * d[42] + d[9] * std::pow(d[32], 2) * d[42];
    coeffs[8] = 2 * d[24] * d[28] * d[29] * d[36] - 2 * d[25] * d[29] * d[30] * d[36] - 2 * d[26] * d[28] * d[31] * d[36] + 2 * d[26] * d[30] * d[32] * d[36] + 2 * d[25] * d[31] * d[32] * d[36] - 2 * d[24] * std::pow(d[32], 2) * d[36] + 2 * d[20] * d[28] * d[33] * d[36] + 2 * d[19] * d[29] * d[33] * d[36] - 4 * d[23] * d[32] * d[33] * d[36] - 2 * d[21] * d[29] * d[34] * d[36] - 2 * d[20] * d[30] * d[34] * d[36] + 2 * d[23] * d[31] * d[34] * d[36] + 2 * d[22] * d[32] * d[34] * d[36] - 2 * d[22] * d[28] * d[35] * d[36] + 2 * d[23] * d[30] * d[35] * d[36] - 2 * d[19] * d[31] * d[35] * d[36] + 2 * d[21] * d[32] * d[35] * d[36] + 2 * d[25] * d[27] * d[29] * d[37] - 2 * d[24] * d[29] * d[30] * d[37] + 2 * d[26] * d[30] * d[31] * d[37] - 2 * d[25] * std::pow(d[31], 2) * d[37] - 2 * d[26] * d[27] * d[32] * d[37] + 2 * d[24] * d[31] * d[32] * d[37] - 2 * d[21] * d[29] * d[33] * d[37] - 2 * d[20] * d[30] * d[33] * d[37] + 2 * d[23] * d[31] * d[33] * d[37] + 2 * d[22] * d[32] * d[33] * d[37] + 2 * d[20] * d[27] * d[34] * d[37] + 2 * d[18] * d[29] * d[34] * d[37] - 4 * d[22] * d[31] * d[34] * d[37] - 2 * d[23] * d[27] * d[35] * d[37] + 2 * d[22] * d[30] * d[35] * d[37] + 2 * d[21] * d[31] * d[35] * d[37] - 2 * d[18] * d[32] * d[35] * d[37] + 2 * d[26] * d[27] * d[28] * d[38] - 2 * d[26] * std::pow(d[30], 2) * d[38] - 2 * d[24] * d[28] * d[31] * d[38] + 2 * d[25] * d[30] * d[31] * d[38] - 2 * d[25] * d[27] * d[32] * d[38] + 2 * d[24] * d[30] * d[32] * d[38] - 2 * d[22] * d[28] * d[33] * d[38] + 2 * d[23] * d[30] * d[33] * d[38] - 2 * d[19] * d[31] * d[33] * d[38] + 2 * d[21] * d[32] * d[33] * d[38] - 2 * d[23] * d[27] * d[34] * d[38] + 2 * d[22] * d[30] * d[34] * d[38] + 2 * d[21] * d[31] * d[34] * d[38] - 2 * d[18] * d[32] * d[34] * d[38] + 2 * d[19] * d[27] * d[35] * d[38] + 2 * d[18] * d[28] * d[35] * d[38] - 4 * d[21] * d[30] * d[35] * d[38] - d[20] * d[27] * d[28] * d[42] - d[19] * d[27] * d[29] * d[42] - d[18] * d[28] * d[29] * d[42] + 2 * d[21] * d[29] * d[30] * d[42] + d[20] * std::pow(d[30], 2) * d[42] + 2 * d[22] * d[28] * d[31] * d[42] - 2 * d[23] * d[30] * d[31] * d[42] + d[19] * std::pow(d[31], 2) * d[42] + 2 * d[23] * d[27] * d[32] * d[42] - 2 * d[22] * d[30] * d[32] * d[42] - 2 * d[21] * d[31] * d[32] * d[42] + d[18] * std::pow(d[32], 2) * d[42];
    coeffs[9] = 2 * d[28] * d[29] * d[33] * d[36] - 2 * std::pow(d[32], 2) * d[33] * d[36] - 2 * d[29] * d[30] * d[34] * d[36] + 2 * d[31] * d[32] * d[34] * d[36] - 2 * d[28] * d[31] * d[35] * d[36] + 2 * d[30] * d[32] * d[35] * d[36] - 2 * d[29] * d[30] * d[33] * d[37] + 2 * d[31] * d[32] * d[33] * d[37] + 2 * d[27] * d[29] * d[34] * d[37] - 2 * std::pow(d[31], 2) * d[34] * d[37] + 2 * d[30] * d[31] * d[35] * d[37] - 2 * d[27] * d[32] * d[35] * d[37] - 2 * d[28] * d[31] * d[33] * d[38] + 2 * d[30] * d[32] * d[33] * d[38] + 2 * d[30] * d[31] * d[34] * d[38] - 2 * d[27] * d[32] * d[34] * d[38] + 2 * d[27] * d[28] * d[35] * d[38] - 2 * std::pow(d[30], 2) * d[35] * d[38] - d[27] * d[28] * d[29] * d[42] + d[29] * std::pow(d[30], 2) * d[42] + d[28] * std::pow(d[31], 2) * d[42] - 2 * d[30] * d[31] * d[32] * d[42] + d[27] * std::pow(d[32], 2) * d[42];
    coeffs[10] = 2 * d[6] * d[10] * d[11] * d[36] - 2 * d[7] * d[11] * d[12] * d[36] - 2 * d[8] * d[10] * d[13] * d[36] + 2 * d[8] * d[12] * d[14] * d[36] + 2 * d[7] * d[13] * d[14] * d[36] - 2 * d[6] * std::pow(d[14], 2) * d[36] + 2 * d[2] * d[10] * d[15] * d[36] + 2 * d[1] * d[11] * d[15] * d[36] - 4 * d[5] * d[14] * d[15] * d[36] - 2 * d[3] * d[11] * d[16] * d[36] - 2 * d[2] * d[12] * d[16] * d[36] + 2 * d[5] * d[13] * d[16] * d[36] + 2 * d[4] * d[14] * d[16] * d[36] - 2 * d[4] * d[10] * d[17] * d[36] + 2 * d[5] * d[12] * d[17] * d[36] - 2 * d[1] * d[13] * d[17] * d[36] + 2 * d[3] * d[14] * d[17] * d[36] + d[10] * d[11] * std::pow(d[36], 2) - std::pow(d[14], 2) * std::pow(d[36], 2) + 2 * d[7] * d[9] * d[11] * d[37] - 2 * d[6] * d[11] * d[12] * d[37] + 2 * d[8] * d[12] * d[13] * d[37] - 2 * d[7] * std::pow(d[13], 2) * d[37] - 2 * d[8] * d[9] * d[14] * d[37] + 2 * d[6] * d[13] * d[14] * d[37] - 2 * d[3] * d[11] * d[15] * d[37] - 2 * d[2] * d[12] * d[15] * d[37] + 2 * d[5] * d[13] * d[15] * d[37] + 2 * d[4] * d[14] * d[15] * d[37] + 2 * d[2] * d[9] * d[16] * d[37] + 2 * d[0] * d[11] * d[16] * d[37] - 4 * d[4] * d[13] * d[16] * d[37] - 2 * d[5] * d[9] * d[17] * d[37] + 2 * d[4] * d[12] * d[17] * d[37] + 2 * d[3] * d[13] * d[17] * d[37] - 2 * d[0] * d[14] * d[17] * d[37] - 2 * d[11] * d[12] * d[36] * d[37] + 2 * d[13] * d[14] * d[36] * d[37] + d[9] * d[11] * std::pow(d[37], 2) - std::pow(d[13], 2) * std::pow(d[37], 2) + 2 * d[8] * d[9] * d[10] * d[38] - 2 * d[8] * std::pow(d[12], 2) * d[38] - 2 * d[6] * d[10] * d[13] * d[38] + 2 * d[7] * d[12] * d[13] * d[38] - 2 * d[7] * d[9] * d[14] * d[38] + 2 * d[6] * d[12] * d[14] * d[38] - 2 * d[4] * d[10] * d[15] * d[38] + 2 * d[5] * d[12] * d[15] * d[38] - 2 * d[1] * d[13] * d[15] * d[38] + 2 * d[3] * d[14] * d[15] * d[38] - 2 * d[5] * d[9] * d[16] * d[38] + 2 * d[4] * d[12] * d[16] * d[38] + 2 * d[3] * d[13] * d[16] * d[38] - 2 * d[0] * d[14] * d[16] * d[38] + 2 * d[1] * d[9] * d[17] * d[38] + 2 * d[0] * d[10] * d[17] * d[38] - 4 * d[3] * d[12] * d[17] * d[38] - 2 * d[10] * d[13] * d[36] * d[38] + 2 * d[12] * d[14] * d[36] * d[38] + 2 * d[12] * d[13] * d[37] * d[38] - 2 * d[9] * d[14] * d[37] * d[38] + d[9] * d[10] * std::pow(d[38], 2) - std::pow(d[12], 2) * std::pow(d[38], 2) - d[2] * d[9] * d[10] * d[42] - d[1] * d[9] * d[11] * d[42] - d[0] * d[10] * d[11] * d[42] + 2 * d[3] * d[11] * d[12] * d[42] + d[2] * std::pow(d[12], 2) * d[42] + 2 * d[4] * d[10] * d[13] * d[42] - 2 * d[5] * d[12] * d[13] * d[42] + d[1] * std::pow(d[13], 2) * d[42] + 2 * d[5] * d[9] * d[14] * d[42] - 2 * d[4] * d[12] * d[14] * d[42] - 2 * d[3] * d[13] * d[14] * d[42] + d[0] * std::pow(d[14], 2) * d[42];
    coeffs[11] = 2 * d[6] * d[11] * d[19] * d[36] - 2 * d[8] * d[13] * d[19] * d[36] + 2 * d[2] * d[15] * d[19] * d[36] - 2 * d[4] * d[17] * d[19] * d[36] + 2 * d[6] * d[10] * d[20] * d[36] - 2 * d[7] * d[12] * d[20] * d[36] + 2 * d[1] * d[15] * d[20] * d[36] - 2 * d[3] * d[16] * d[20] * d[36] - 2 * d[7] * d[11] * d[21] * d[36] + 2 * d[8] * d[14] * d[21] * d[36] - 2 * d[2] * d[16] * d[21] * d[36] + 2 * d[5] * d[17] * d[21] * d[36] - 2 * d[8] * d[10] * d[22] * d[36] + 2 * d[7] * d[14] * d[22] * d[36] + 2 * d[5] * d[16] * d[22] * d[36] - 2 * d[1] * d[17] * d[22] * d[36] + 2 * d[8] * d[12] * d[23] * d[36] + 2 * d[7] * d[13] * d[23] * d[36] - 4 * d[6] * d[14] * d[23] * d[36] - 4 * d[5] * d[15] * d[23] * d[36] + 2 * d[4] * d[16] * d[23] * d[36] + 2 * d[3] * d[17] * d[23] * d[36] + 2 * d[2] * d[10] * d[24] * d[36] + 2 * d[1] * d[11] * d[24] * d[36] - 4 * d[5] * d[14] * d[24] * d[36] - 2 * d[3] * d[11] * d[25] * d[36] - 2 * d[2] * d[12] * d[25] * d[36] + 2 * d[5] * d[13] * d[25] * d[36] + 2 * d[4] * d[14] * d[25] * d[36] - 2 * d[4] * d[10] * d[26] * d[36] + 2 * d[5] * d[12] * d[26] * d[36] - 2 * d[1] * d[13] * d[26] * d[36] + 2 * d[3] * d[14] * d[26] * d[36] + d[11] * d[19] * std::pow(d[36], 2) + d[10] * d[20] * std::pow(d[36], 2) - 2 * d[14] * d[23] * std::pow(d[36], 2) + 2 * d[7] * d[11] * d[18] * d[37] - 2 * d[8] * d[14] * d[18] * d[37] + 2 * d[2] * d[16] * d[18] * d[37] - 2 * d[5] * d[17] * d[18] * d[37] + 2 * d[7] * d[9] * d[20] * d[37] - 2 * d[6] * d[12] * d[20] * d[37] - 2 * d[3] * d[15] * d[20] * d[37] + 2 * d[0] * d[16] * d[20] * d[37] - 2 * d[6] * d[11] * d[21] * d[37] + 2 * d[8] * d[13] * d[21] * d[37] - 2 * d[2] * d[15] * d[21] * d[37] + 2 * d[4] * d[17] * d[21] * d[37] + 2 * d[8] * d[12] * d[22] * d[37] - 4 * d[7] * d[13] * d[22] * d[37] + 2 * d[6] * d[14] * d[22] * d[37] + 2 * d[5] * d[15] * d[22] * d[37] - 4 * d[4] * d[16] * d[22] * d[37] + 2 * d[3] * d[17] * d[22] * d[37] - 2 * d[8] * d[9] * d[23] * d[37] + 2 * d[6] * d[13] * d[23] * d[37] + 2 * d[4] * d[15] * d[23] * d[37] - 2 * d[0] * d[17] * d[23] * d[37] - 2 * d[3] * d[11] * d[24] * d[37] - 2 * d[2] * d[12] * d[24] * d[37] + 2 * d[5] * d[13] * d[24] * d[37] + 2 * d[4] * d[14] * d[24] * d[37] + 2 * d[2] * d[9] * d[25] * d[37] + 2 * d[0] * d[11] * d[25] * d[37] - 4 * d[4] * d[13] * d[25] * d[37] - 2 * d[5] * d[9] * d[26] * d[37] + 2 * d[4] * d[12] * d[26] * d[37] + 2 * d[3] * d[13] * d[26] * d[37] - 2 * d[0] * d[14] * d[26] * d[37] - 2 * d[12] * d[20] * d[36] * d[37] - 2 * d[11] * d[21] * d[36] * d[37] + 2 * d[14] * d[22] * d[36] * d[37] + 2 * d[13] * d[23] * d[36] * d[37] + d[11] * d[18] * std::pow(d[37], 2) + d[9] * d[20] * std::pow(d[37], 2) - 2 * d[13] * d[22] * std::pow(d[37], 2) + 2 * d[8] * d[10] * d[18] * d[38] - 2 * d[7] * d[14] * d[18] * d[38] - 2 * d[5] * d[16] * d[18] * d[38] + 2 * d[1] * d[17] * d[18] * d[38] + 2 * d[8] * d[9] * d[19] * d[38] - 2 * d[6] * d[13] * d[19] * d[38] - 2 * d[4] * d[15] * d[19] * d[38] + 2 * d[0] * d[17] * d[19] * d[38] - 4 * d[8] * d[12] * d[21] * d[38] + 2 * d[7] * d[13] * d[21] * d[38] + 2 * d[6] * d[14] * d[21] * d[38] + 2 * d[5] * d[15] * d[21] * d[38] + 2 * d[4] * d[16] * d[21] * d[38] - 4 * d[3] * d[17] * d[21] * d[38] - 2 * d[6] * d[10] * d[22] * d[38] + 2 * d[7] * d[12] * d[22] * d[38] - 2 * d[1] * d[15] * d[22] * d[38] + 2 * d[3] * d[16] * d[22] * d[38] - 2 * d[7] * d[9] * d[23] * d[38] + 2 * d[6] * d[12] * d[23] * d[38] + 2 * d[3] * d[15] * d[23] * d[38] - 2 * d[0] * d[16] * d[23] * d[38] - 2 * d[4] * d[10] * d[24] * d[38] + 2 * d[5] * d[12] * d[24] * d[38] - 2 * d[1] * d[13] * d[24] * d[38] + 2 * d[3] * d[14] * d[24] * d[38] - 2 * d[5] * d[9] * d[25] * d[38] + 2 * d[4] * d[12] * d[25] * d[38] + 2 * d[3] * d[13] * d[25] * d[38] - 2 * d[0] * d[14] * d[25] * d[38] + 2 * d[1] * d[9] * d[26] * d[38] + 2 * d[0] * d[10] * d[26] * d[38] - 4 * d[3] * d[12] * d[26] * d[38] - 2 * d[13] * d[19] * d[36] * d[38] + 2 * d[14] * d[21] * d[36] * d[38] - 2 * d[10] * d[22] * d[36] * d[38] + 2 * d[12] * d[23] * d[36] * d[38] - 2 * d[14] * d[18] * d[37] * d[38] + 2 * d[13] * d[21] * d[37] * d[38] + 2 * d[12] * d[22] * d[37] * d[38] - 2 * d[9] * d[23] * d[37] * d[38] + d[10] * d[18] * std::pow(d[38], 2) + d[9] * d[19] * std::pow(d[38], 2) - 2 * d[12] * d[21] * std::pow(d[38], 2) - d[2] * d[10] * d[18] * d[42] - d[1] * d[11] * d[18] * d[42] + 2 * d[5] * d[14] * d[18] * d[42] - d[2] * d[9] * d[19] * d[42] - d[0] * d[11] * d[19] * d[42] + 2 * d[4] * d[13] * d[19] * d[42] - d[1] * d[9] * d[20] * d[42] - d[0] * d[10] * d[20] * d[42] + 2 * d[3] * d[12] * d[20] * d[42] + 2 * d[3] * d[11] * d[21] * d[42] + 2 * d[2] * d[12] * d[21] * d[42] - 2 * d[5] * d[13] * d[21] * d[42] - 2 * d[4] * d[14] * d[21] * d[42] + 2 * d[4] * d[10] * d[22] * d[42] - 2 * d[5] * d[12] * d[22] * d[42] + 2 * d[1] * d[13] * d[22] * d[42] - 2 * d[3] * d[14] * d[22] * d[42] + 2 * d[5] * d[9] * d[23] * d[42] - 2 * d[4] * d[12] * d[23] * d[42] - 2 * d[3] * d[13] * d[23] * d[42] + 2 * d[0] * d[14] * d[23] * d[42];
    coeffs[12] = 2 * d[6] * d[19] * d[20] * d[36] - 2 * d[7] * d[20] * d[21] * d[36] - 2 * d[8] * d[19] * d[22] * d[36] + 2 * d[8] * d[21] * d[23] * d[36] + 2 * d[7] * d[22] * d[23] * d[36] - 2 * d[6] * std::pow(d[23], 2) * d[36] + 2 * d[2] * d[19] * d[24] * d[36] + 2 * d[1] * d[20] * d[24] * d[36] - 4 * d[5] * d[23] * d[24] * d[36] - 2 * d[3] * d[20] * d[25] * d[36] - 2 * d[2] * d[21] * d[25] * d[36] + 2 * d[5] * d[22] * d[25] * d[36] + 2 * d[4] * d[23] * d[25] * d[36] - 2 * d[4] * d[19] * d[26] * d[36] + 2 * d[5] * d[21] * d[26] * d[36] - 2 * d[1] * d[22] * d[26] * d[36] + 2 * d[3] * d[23] * d[26] * d[36] + d[19] * d[20] * std::pow(d[36], 2) - std::pow(d[23], 2) * std::pow(d[36], 2) + 2 * d[7] * d[18] * d[20] * d[37] - 2 * d[6] * d[20] * d[21] * d[37] + 2 * d[8] * d[21] * d[22] * d[37] - 2 * d[7] * std::pow(d[22], 2) * d[37] - 2 * d[8] * d[18] * d[23] * d[37] + 2 * d[6] * d[22] * d[23] * d[37] - 2 * d[3] * d[20] * d[24] * d[37] - 2 * d[2] * d[21] * d[24] * d[37] + 2 * d[5] * d[22] * d[24] * d[37] + 2 * d[4] * d[23] * d[24] * d[37] + 2 * d[2] * d[18] * d[25] * d[37] + 2 * d[0] * d[20] * d[25] * d[37] - 4 * d[4] * d[22] * d[25] * d[37] - 2 * d[5] * d[18] * d[26] * d[37] + 2 * d[4] * d[21] * d[26] * d[37] + 2 * d[3] * d[22] * d[26] * d[37] - 2 * d[0] * d[23] * d[26] * d[37] - 2 * d[20] * d[21] * d[36] * d[37] + 2 * d[22] * d[23] * d[36] * d[37] + d[18] * d[20] * std::pow(d[37], 2) - std::pow(d[22], 2) * std::pow(d[37], 2) + 2 * d[8] * d[18] * d[19] * d[38] - 2 * d[8] * std::pow(d[21], 2) * d[38] - 2 * d[6] * d[19] * d[22] * d[38] + 2 * d[7] * d[21] * d[22] * d[38] - 2 * d[7] * d[18] * d[23] * d[38] + 2 * d[6] * d[21] * d[23] * d[38] - 2 * d[4] * d[19] * d[24] * d[38] + 2 * d[5] * d[21] * d[24] * d[38] - 2 * d[1] * d[22] * d[24] * d[38] + 2 * d[3] * d[23] * d[24] * d[38] - 2 * d[5] * d[18] * d[25] * d[38] + 2 * d[4] * d[21] * d[25] * d[38] + 2 * d[3] * d[22] * d[25] * d[38] - 2 * d[0] * d[23] * d[25] * d[38] + 2 * d[1] * d[18] * d[26] * d[38] + 2 * d[0] * d[19] * d[26] * d[38] - 4 * d[3] * d[21] * d[26] * d[38] - 2 * d[19] * d[22] * d[36] * d[38] + 2 * d[21] * d[23] * d[36] * d[38] + 2 * d[21] * d[22] * d[37] * d[38] - 2 * d[18] * d[23] * d[37] * d[38] + d[18] * d[19] * std::pow(d[38], 2) - std::pow(d[21], 2) * std::pow(d[38], 2) - d[2] * d[18] * d[19] * d[42] - d[1] * d[18] * d[20] * d[42] - d[0] * d[19] * d[20] * d[42] + 2 * d[3] * d[20] * d[21] * d[42] + d[2] * std::pow(d[21], 2) * d[42] + 2 * d[4] * d[19] * d[22] * d[42] - 2 * d[5] * d[21] * d[22] * d[42] + d[1] * std::pow(d[22], 2) * d[42] + 2 * d[5] * d[18] * d[23] * d[42] - 2 * d[4] * d[21] * d[23] * d[42] - 2 * d[3] * d[22] * d[23] * d[42] + d[0] * std::pow(d[23], 2) * d[42];
    coeffs[13] = 2 * d[6] * d[11] * d[28] * d[36] - 2 * d[8] * d[13] * d[28] * d[36] + 2 * d[2] * d[15] * d[28] * d[36] - 2 * d[4] * d[17] * d[28] * d[36] + 2 * d[6] * d[10] * d[29] * d[36] - 2 * d[7] * d[12] * d[29] * d[36] + 2 * d[1] * d[15] * d[29] * d[36] - 2 * d[3] * d[16] * d[29] * d[36] - 2 * d[7] * d[11] * d[30] * d[36] + 2 * d[8] * d[14] * d[30] * d[36] - 2 * d[2] * d[16] * d[30] * d[36] + 2 * d[5] * d[17] * d[30] * d[36] - 2 * d[8] * d[10] * d[31] * d[36] + 2 * d[7] * d[14] * d[31] * d[36] + 2 * d[5] * d[16] * d[31] * d[36] - 2 * d[1] * d[17] * d[31] * d[36] + 2 * d[8] * d[12] * d[32] * d[36] + 2 * d[7] * d[13] * d[32] * d[36] - 4 * d[6] * d[14] * d[32] * d[36] - 4 * d[5] * d[15] * d[32] * d[36] + 2 * d[4] * d[16] * d[32] * d[36] + 2 * d[3] * d[17] * d[32] * d[36] + 2 * d[2] * d[10] * d[33] * d[36] + 2 * d[1] * d[11] * d[33] * d[36] - 4 * d[5] * d[14] * d[33] * d[36] - 2 * d[3] * d[11] * d[34] * d[36] - 2 * d[2] * d[12] * d[34] * d[36] + 2 * d[5] * d[13] * d[34] * d[36] + 2 * d[4] * d[14] * d[34] * d[36] - 2 * d[4] * d[10] * d[35] * d[36] + 2 * d[5] * d[12] * d[35] * d[36] - 2 * d[1] * d[13] * d[35] * d[36] + 2 * d[3] * d[14] * d[35] * d[36] + d[11] * d[28] * std::pow(d[36], 2) + d[10] * d[29] * std::pow(d[36], 2) - 2 * d[14] * d[32] * std::pow(d[36], 2) + 2 * d[7] * d[11] * d[27] * d[37] - 2 * d[8] * d[14] * d[27] * d[37] + 2 * d[2] * d[16] * d[27] * d[37] - 2 * d[5] * d[17] * d[27] * d[37] + 2 * d[7] * d[9] * d[29] * d[37] - 2 * d[6] * d[12] * d[29] * d[37] - 2 * d[3] * d[15] * d[29] * d[37] + 2 * d[0] * d[16] * d[29] * d[37] - 2 * d[6] * d[11] * d[30] * d[37] + 2 * d[8] * d[13] * d[30] * d[37] - 2 * d[2] * d[15] * d[30] * d[37] + 2 * d[4] * d[17] * d[30] * d[37] + 2 * d[8] * d[12] * d[31] * d[37] - 4 * d[7] * d[13] * d[31] * d[37] + 2 * d[6] * d[14] * d[31] * d[37] + 2 * d[5] * d[15] * d[31] * d[37] - 4 * d[4] * d[16] * d[31] * d[37] + 2 * d[3] * d[17] * d[31] * d[37] - 2 * d[8] * d[9] * d[32] * d[37] + 2 * d[6] * d[13] * d[32] * d[37] + 2 * d[4] * d[15] * d[32] * d[37] - 2 * d[0] * d[17] * d[32] * d[37] - 2 * d[3] * d[11] * d[33] * d[37] - 2 * d[2] * d[12] * d[33] * d[37] + 2 * d[5] * d[13] * d[33] * d[37] + 2 * d[4] * d[14] * d[33] * d[37] + 2 * d[2] * d[9] * d[34] * d[37] + 2 * d[0] * d[11] * d[34] * d[37] - 4 * d[4] * d[13] * d[34] * d[37] - 2 * d[5] * d[9] * d[35] * d[37] + 2 * d[4] * d[12] * d[35] * d[37] + 2 * d[3] * d[13] * d[35] * d[37] - 2 * d[0] * d[14] * d[35] * d[37] - 2 * d[12] * d[29] * d[36] * d[37] - 2 * d[11] * d[30] * d[36] * d[37] + 2 * d[14] * d[31] * d[36] * d[37] + 2 * d[13] * d[32] * d[36] * d[37] + d[11] * d[27] * std::pow(d[37], 2) + d[9] * d[29] * std::pow(d[37], 2) - 2 * d[13] * d[31] * std::pow(d[37], 2) + 2 * d[8] * d[10] * d[27] * d[38] - 2 * d[7] * d[14] * d[27] * d[38] - 2 * d[5] * d[16] * d[27] * d[38] + 2 * d[1] * d[17] * d[27] * d[38] + 2 * d[8] * d[9] * d[28] * d[38] - 2 * d[6] * d[13] * d[28] * d[38] - 2 * d[4] * d[15] * d[28] * d[38] + 2 * d[0] * d[17] * d[28] * d[38] - 4 * d[8] * d[12] * d[30] * d[38] + 2 * d[7] * d[13] * d[30] * d[38] + 2 * d[6] * d[14] * d[30] * d[38] + 2 * d[5] * d[15] * d[30] * d[38] + 2 * d[4] * d[16] * d[30] * d[38] - 4 * d[3] * d[17] * d[30] * d[38] - 2 * d[6] * d[10] * d[31] * d[38] + 2 * d[7] * d[12] * d[31] * d[38] - 2 * d[1] * d[15] * d[31] * d[38] + 2 * d[3] * d[16] * d[31] * d[38] - 2 * d[7] * d[9] * d[32] * d[38] + 2 * d[6] * d[12] * d[32] * d[38] + 2 * d[3] * d[15] * d[32] * d[38] - 2 * d[0] * d[16] * d[32] * d[38] - 2 * d[4] * d[10] * d[33] * d[38] + 2 * d[5] * d[12] * d[33] * d[38] - 2 * d[1] * d[13] * d[33] * d[38] + 2 * d[3] * d[14] * d[33] * d[38] - 2 * d[5] * d[9] * d[34] * d[38] + 2 * d[4] * d[12] * d[34] * d[38] + 2 * d[3] * d[13] * d[34] * d[38] - 2 * d[0] * d[14] * d[34] * d[38] + 2 * d[1] * d[9] * d[35] * d[38] + 2 * d[0] * d[10] * d[35] * d[38] - 4 * d[3] * d[12] * d[35] * d[38] - 2 * d[13] * d[28] * d[36] * d[38] + 2 * d[14] * d[30] * d[36] * d[38] - 2 * d[10] * d[31] * d[36] * d[38] + 2 * d[12] * d[32] * d[36] * d[38] - 2 * d[14] * d[27] * d[37] * d[38] + 2 * d[13] * d[30] * d[37] * d[38] + 2 * d[12] * d[31] * d[37] * d[38] - 2 * d[9] * d[32] * d[37] * d[38] + d[10] * d[27] * std::pow(d[38], 2) + d[9] * d[28] * std::pow(d[38], 2) - 2 * d[12] * d[30] * std::pow(d[38], 2) - d[2] * d[10] * d[27] * d[42] - d[1] * d[11] * d[27] * d[42] + 2 * d[5] * d[14] * d[27] * d[42] - d[2] * d[9] * d[28] * d[42] - d[0] * d[11] * d[28] * d[42] + 2 * d[4] * d[13] * d[28] * d[42] - d[1] * d[9] * d[29] * d[42] - d[0] * d[10] * d[29] * d[42] + 2 * d[3] * d[12] * d[29] * d[42] + 2 * d[3] * d[11] * d[30] * d[42] + 2 * d[2] * d[12] * d[30] * d[42] - 2 * d[5] * d[13] * d[30] * d[42] - 2 * d[4] * d[14] * d[30] * d[42] + 2 * d[4] * d[10] * d[31] * d[42] - 2 * d[5] * d[12] * d[31] * d[42] + 2 * d[1] * d[13] * d[31] * d[42] - 2 * d[3] * d[14] * d[31] * d[42] + 2 * d[5] * d[9] * d[32] * d[42] - 2 * d[4] * d[12] * d[32] * d[42] - 2 * d[3] * d[13] * d[32] * d[42] + 2 * d[0] * d[14] * d[32] * d[42];
    coeffs[14] = 2 * d[6] * d[20] * d[28] * d[36] - 2 * d[8] * d[22] * d[28] * d[36] + 2 * d[2] * d[24] * d[28] * d[36] - 2 * d[4] * d[26] * d[28] * d[36] + 2 * d[6] * d[19] * d[29] * d[36] - 2 * d[7] * d[21] * d[29] * d[36] + 2 * d[1] * d[24] * d[29] * d[36] - 2 * d[3] * d[25] * d[29] * d[36] - 2 * d[7] * d[20] * d[30] * d[36] + 2 * d[8] * d[23] * d[30] * d[36] - 2 * d[2] * d[25] * d[30] * d[36] + 2 * d[5] * d[26] * d[30] * d[36] - 2 * d[8] * d[19] * d[31] * d[36] + 2 * d[7] * d[23] * d[31] * d[36] + 2 * d[5] * d[25] * d[31] * d[36] - 2 * d[1] * d[26] * d[31] * d[36] + 2 * d[8] * d[21] * d[32] * d[36] + 2 * d[7] * d[22] * d[32] * d[36] - 4 * d[6] * d[23] * d[32] * d[36] - 4 * d[5] * d[24] * d[32] * d[36] + 2 * d[4] * d[25] * d[32] * d[36] + 2 * d[3] * d[26] * d[32] * d[36] + 2 * d[2] * d[19] * d[33] * d[36] + 2 * d[1] * d[20] * d[33] * d[36] - 4 * d[5] * d[23] * d[33] * d[36] - 2 * d[3] * d[20] * d[34] * d[36] - 2 * d[2] * d[21] * d[34] * d[36] + 2 * d[5] * d[22] * d[34] * d[36] + 2 * d[4] * d[23] * d[34] * d[36] - 2 * d[4] * d[19] * d[35] * d[36] + 2 * d[5] * d[21] * d[35] * d[36] - 2 * d[1] * d[22] * d[35] * d[36] + 2 * d[3] * d[23] * d[35] * d[36] + d[20] * d[28] * std::pow(d[36], 2) + d[19] * d[29] * std::pow(d[36], 2) - 2 * d[23] * d[32] * std::pow(d[36], 2) + 2 * d[7] * d[20] * d[27] * d[37] - 2 * d[8] * d[23] * d[27] * d[37] + 2 * d[2] * d[25] * d[27] * d[37] - 2 * d[5] * d[26] * d[27] * d[37] + 2 * d[7] * d[18] * d[29] * d[37] - 2 * d[6] * d[21] * d[29] * d[37] - 2 * d[3] * d[24] * d[29] * d[37] + 2 * d[0] * d[25] * d[29] * d[37] - 2 * d[6] * d[20] * d[30] * d[37] + 2 * d[8] * d[22] * d[30] * d[37] - 2 * d[2] * d[24] * d[30] * d[37] + 2 * d[4] * d[26] * d[30] * d[37] + 2 * d[8] * d[21] * d[31] * d[37] - 4 * d[7] * d[22] * d[31] * d[37] + 2 * d[6] * d[23] * d[31] * d[37] + 2 * d[5] * d[24] * d[31] * d[37] - 4 * d[4] * d[25] * d[31] * d[37] + 2 * d[3] * d[26] * d[31] * d[37] - 2 * d[8] * d[18] * d[32] * d[37] + 2 * d[6] * d[22] * d[32] * d[37] + 2 * d[4] * d[24] * d[32] * d[37] - 2 * d[0] * d[26] * d[32] * d[37] - 2 * d[3] * d[20] * d[33] * d[37] - 2 * d[2] * d[21] * d[33] * d[37] + 2 * d[5] * d[22] * d[33] * d[37] + 2 * d[4] * d[23] * d[33] * d[37] + 2 * d[2] * d[18] * d[34] * d[37] + 2 * d[0] * d[20] * d[34] * d[37] - 4 * d[4] * d[22] * d[34] * d[37] - 2 * d[5] * d[18] * d[35] * d[37] + 2 * d[4] * d[21] * d[35] * d[37] + 2 * d[3] * d[22] * d[35] * d[37] - 2 * d[0] * d[23] * d[35] * d[37] - 2 * d[21] * d[29] * d[36] * d[37] - 2 * d[20] * d[30] * d[36] * d[37] + 2 * d[23] * d[31] * d[36] * d[37] + 2 * d[22] * d[32] * d[36] * d[37] + d[20] * d[27] * std::pow(d[37], 2) + d[18] * d[29] * std::pow(d[37], 2) - 2 * d[22] * d[31] * std::pow(d[37], 2) + 2 * d[8] * d[19] * d[27] * d[38] - 2 * d[7] * d[23] * d[27] * d[38] - 2 * d[5] * d[25] * d[27] * d[38] + 2 * d[1] * d[26] * d[27] * d[38] + 2 * d[8] * d[18] * d[28] * d[38] - 2 * d[6] * d[22] * d[28] * d[38] - 2 * d[4] * d[24] * d[28] * d[38] + 2 * d[0] * d[26] * d[28] * d[38] - 4 * d[8] * d[21] * d[30] * d[38] + 2 * d[7] * d[22] * d[30] * d[38] + 2 * d[6] * d[23] * d[30] * d[38] + 2 * d[5] * d[24] * d[30] * d[38] + 2 * d[4] * d[25] * d[30] * d[38] - 4 * d[3] * d[26] * d[30] * d[38] - 2 * d[6] * d[19] * d[31] * d[38] + 2 * d[7] * d[21] * d[31] * d[38] - 2 * d[1] * d[24] * d[31] * d[38] + 2 * d[3] * d[25] * d[31] * d[38] - 2 * d[7] * d[18] * d[32] * d[38] + 2 * d[6] * d[21] * d[32] * d[38] + 2 * d[3] * d[24] * d[32] * d[38] - 2 * d[0] * d[25] * d[32] * d[38] - 2 * d[4] * d[19] * d[33] * d[38] + 2 * d[5] * d[21] * d[33] * d[38] - 2 * d[1] * d[22] * d[33] * d[38] + 2 * d[3] * d[23] * d[33] * d[38] - 2 * d[5] * d[18] * d[34] * d[38] + 2 * d[4] * d[21] * d[34] * d[38] + 2 * d[3] * d[22] * d[34] * d[38] - 2 * d[0] * d[23] * d[34] * d[38] + 2 * d[1] * d[18] * d[35] * d[38] + 2 * d[0] * d[19] * d[35] * d[38] - 4 * d[3] * d[21] * d[35] * d[38] - 2 * d[22] * d[28] * d[36] * d[38] + 2 * d[23] * d[30] * d[36] * d[38] - 2 * d[19] * d[31] * d[36] * d[38] + 2 * d[21] * d[32] * d[36] * d[38] - 2 * d[23] * d[27] * d[37] * d[38] + 2 * d[22] * d[30] * d[37] * d[38] + 2 * d[21] * d[31] * d[37] * d[38] - 2 * d[18] * d[32] * d[37] * d[38] + d[19] * d[27] * std::pow(d[38], 2) + d[18] * d[28] * std::pow(d[38], 2) - 2 * d[21] * d[30] * std::pow(d[38], 2) - d[2] * d[19] * d[27] * d[42] - d[1] * d[20] * d[27] * d[42] + 2 * d[5] * d[23] * d[27] * d[42] - d[2] * d[18] * d[28] * d[42] - d[0] * d[20] * d[28] * d[42] + 2 * d[4] * d[22] * d[28] * d[42] - d[1] * d[18] * d[29] * d[42] - d[0] * d[19] * d[29] * d[42] + 2 * d[3] * d[21] * d[29] * d[42] + 2 * d[3] * d[20] * d[30] * d[42] + 2 * d[2] * d[21] * d[30] * d[42] - 2 * d[5] * d[22] * d[30] * d[42] - 2 * d[4] * d[23] * d[30] * d[42] + 2 * d[4] * d[19] * d[31] * d[42] - 2 * d[5] * d[21] * d[31] * d[42] + 2 * d[1] * d[22] * d[31] * d[42] - 2 * d[3] * d[23] * d[31] * d[42] + 2 * d[5] * d[18] * d[32] * d[42] - 2 * d[4] * d[21] * d[32] * d[42] - 2 * d[3] * d[22] * d[32] * d[42] + 2 * d[0] * d[23] * d[32] * d[42];
    coeffs[15] = 2 * d[6] * d[28] * d[29] * d[36] - 2 * d[7] * d[29] * d[30] * d[36] - 2 * d[8] * d[28] * d[31] * d[36] + 2 * d[8] * d[30] * d[32] * d[36] + 2 * d[7] * d[31] * d[32] * d[36] - 2 * d[6] * std::pow(d[32], 2) * d[36] + 2 * d[2] * d[28] * d[33] * d[36] + 2 * d[1] * d[29] * d[33] * d[36] - 4 * d[5] * d[32] * d[33] * d[36] - 2 * d[3] * d[29] * d[34] * d[36] - 2 * d[2] * d[30] * d[34] * d[36] + 2 * d[5] * d[31] * d[34] * d[36] + 2 * d[4] * d[32] * d[34] * d[36] - 2 * d[4] * d[28] * d[35] * d[36] + 2 * d[5] * d[30] * d[35] * d[36] - 2 * d[1] * d[31] * d[35] * d[36] + 2 * d[3] * d[32] * d[35] * d[36] + d[28] * d[29] * std::pow(d[36], 2) - std::pow(d[32], 2) * std::pow(d[36], 2) + 2 * d[7] * d[27] * d[29] * d[37] - 2 * d[6] * d[29] * d[30] * d[37] + 2 * d[8] * d[30] * d[31] * d[37] - 2 * d[7] * std::pow(d[31], 2) * d[37] - 2 * d[8] * d[27] * d[32] * d[37] + 2 * d[6] * d[31] * d[32] * d[37] - 2 * d[3] * d[29] * d[33] * d[37] - 2 * d[2] * d[30] * d[33] * d[37] + 2 * d[5] * d[31] * d[33] * d[37] + 2 * d[4] * d[32] * d[33] * d[37] + 2 * d[2] * d[27] * d[34] * d[37] + 2 * d[0] * d[29] * d[34] * d[37] - 4 * d[4] * d[31] * d[34] * d[37] - 2 * d[5] * d[27] * d[35] * d[37] + 2 * d[4] * d[30] * d[35] * d[37] + 2 * d[3] * d[31] * d[35] * d[37] - 2 * d[0] * d[32] * d[35] * d[37] - 2 * d[29] * d[30] * d[36] * d[37] + 2 * d[31] * d[32] * d[36] * d[37] + d[27] * d[29] * std::pow(d[37], 2) - std::pow(d[31], 2) * std::pow(d[37], 2) + 2 * d[8] * d[27] * d[28] * d[38] - 2 * d[8] * std::pow(d[30], 2) * d[38] - 2 * d[6] * d[28] * d[31] * d[38] + 2 * d[7] * d[30] * d[31] * d[38] - 2 * d[7] * d[27] * d[32] * d[38] + 2 * d[6] * d[30] * d[32] * d[38] - 2 * d[4] * d[28] * d[33] * d[38] + 2 * d[5] * d[30] * d[33] * d[38] - 2 * d[1] * d[31] * d[33] * d[38] + 2 * d[3] * d[32] * d[33] * d[38] - 2 * d[5] * d[27] * d[34] * d[38] + 2 * d[4] * d[30] * d[34] * d[38] + 2 * d[3] * d[31] * d[34] * d[38] - 2 * d[0] * d[32] * d[34] * d[38] + 2 * d[1] * d[27] * d[35] * d[38] + 2 * d[0] * d[28] * d[35] * d[38] - 4 * d[3] * d[30] * d[35] * d[38] - 2 * d[28] * d[31] * d[36] * d[38] + 2 * d[30] * d[32] * d[36] * d[38] + 2 * d[30] * d[31] * d[37] * d[38] - 2 * d[27] * d[32] * d[37] * d[38] + d[27] * d[28] * std::pow(d[38], 2) - std::pow(d[30], 2) * std::pow(d[38], 2) - d[2] * d[27] * d[28] * d[42] - d[1] * d[27] * d[29] * d[42] - d[0] * d[28] * d[29] * d[42] + 2 * d[3] * d[29] * d[30] * d[42] + d[2] * std::pow(d[30], 2) * d[42] + 2 * d[4] * d[28] * d[31] * d[42] - 2 * d[5] * d[30] * d[31] * d[42] + d[1] * std::pow(d[31], 2) * d[42] + 2 * d[5] * d[27] * d[32] * d[42] - 2 * d[4] * d[30] * d[32] * d[42] - 2 * d[3] * d[31] * d[32] * d[42] + d[0] * std::pow(d[32], 2) * d[42];
    coeffs[16] = 2 * d[2] * d[6] * d[10] * d[36] - 2 * d[4] * d[8] * d[10] * d[36] + 2 * d[1] * d[6] * d[11] * d[36] - 2 * d[3] * d[7] * d[11] * d[36] - 2 * d[2] * d[7] * d[12] * d[36] + 2 * d[5] * d[8] * d[12] * d[36] + 2 * d[5] * d[7] * d[13] * d[36] - 2 * d[1] * d[8] * d[13] * d[36] - 4 * d[5] * d[6] * d[14] * d[36] + 2 * d[4] * d[7] * d[14] * d[36] + 2 * d[3] * d[8] * d[14] * d[36] + 2 * d[1] * d[2] * d[15] * d[36] - 2 * std::pow(d[5], 2) * d[15] * d[36] - 2 * d[2] * d[3] * d[16] * d[36] + 2 * d[4] * d[5] * d[16] * d[36] - 2 * d[1] * d[4] * d[17] * d[36] + 2 * d[3] * d[5] * d[17] * d[36] + d[2] * d[10] * std::pow(d[36], 2) + d[1] * d[11] * std::pow(d[36], 2) - 2 * d[5] * d[14] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[9] * d[37] - 2 * d[5] * d[8] * d[9] * d[37] - 2 * d[3] * d[6] * d[11] * d[37] + 2 * d[0] * d[7] * d[11] * d[37] - 2 * d[2] * d[6] * d[12] * d[37] + 2 * d[4] * d[8] * d[12] * d[37] + 2 * d[5] * d[6] * d[13] * d[37] - 4 * d[4] * d[7] * d[13] * d[37] + 2 * d[3] * d[8] * d[13] * d[37] + 2 * d[4] * d[6] * d[14] * d[37] - 2 * d[0] * d[8] * d[14] * d[37] - 2 * d[2] * d[3] * d[15] * d[37] + 2 * d[4] * d[5] * d[15] * d[37] + 2 * d[0] * d[2] * d[16] * d[37] - 2 * std::pow(d[4], 2) * d[16] * d[37] + 2 * d[3] * d[4] * d[17] * d[37] - 2 * d[0] * d[5] * d[17] * d[37] - 2 * d[3] * d[11] * d[36] * d[37] - 2 * d[2] * d[12] * d[36] * d[37] + 2 * d[5] * d[13] * d[36] * d[37] + 2 * d[4] * d[14] * d[36] * d[37] + d[2] * d[9] * std::pow(d[37], 2) + d[0] * d[11] * std::pow(d[37], 2) - 2 * d[4] * d[13] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[9] * d[38] + 2 * d[1] * d[8] * d[9] * d[38] - 2 * d[4] * d[6] * d[10] * d[38] + 2 * d[0] * d[8] * d[10] * d[38] + 2 * d[5] * d[6] * d[12] * d[38] + 2 * d[4] * d[7] * d[12] * d[38] - 4 * d[3] * d[8] * d[12] * d[38] - 2 * d[1] * d[6] * d[13] * d[38] + 2 * d[3] * d[7] * d[13] * d[38] + 2 * d[3] * d[6] * d[14] * d[38] - 2 * d[0] * d[7] * d[14] * d[38] - 2 * d[1] * d[4] * d[15] * d[38] + 2 * d[3] * d[5] * d[15] * d[38] + 2 * d[3] * d[4] * d[16] * d[38] - 2 * d[0] * d[5] * d[16] * d[38] + 2 * d[0] * d[1] * d[17] * d[38] - 2 * std::pow(d[3], 2) * d[17] * d[38] - 2 * d[4] * d[10] * d[36] * d[38] + 2 * d[5] * d[12] * d[36] * d[38] - 2 * d[1] * d[13] * d[36] * d[38] + 2 * d[3] * d[14] * d[36] * d[38] - 2 * d[5] * d[9] * d[37] * d[38] + 2 * d[4] * d[12] * d[37] * d[38] + 2 * d[3] * d[13] * d[37] * d[38] - 2 * d[0] * d[14] * d[37] * d[38] + d[1] * d[9] * std::pow(d[38], 2) + d[0] * d[10] * std::pow(d[38], 2) - 2 * d[3] * d[12] * std::pow(d[38], 2) - d[1] * d[2] * d[9] * d[42] + std::pow(d[5], 2) * d[9] * d[42] - d[0] * d[2] * d[10] * d[42] + std::pow(d[4], 2) * d[10] * d[42] - d[0] * d[1] * d[11] * d[42] + std::pow(d[3], 2) * d[11] * d[42] + 2 * d[2] * d[3] * d[12] * d[42] - 2 * d[4] * d[5] * d[12] * d[42] + 2 * d[1] * d[4] * d[13] * d[42] - 2 * d[3] * d[5] * d[13] * d[42] - 2 * d[3] * d[4] * d[14] * d[42] + 2 * d[0] * d[5] * d[14] * d[42];
    coeffs[17] = 2 * d[2] * d[6] * d[19] * d[36] - 2 * d[4] * d[8] * d[19] * d[36] + 2 * d[1] * d[6] * d[20] * d[36] - 2 * d[3] * d[7] * d[20] * d[36] - 2 * d[2] * d[7] * d[21] * d[36] + 2 * d[5] * d[8] * d[21] * d[36] + 2 * d[5] * d[7] * d[22] * d[36] - 2 * d[1] * d[8] * d[22] * d[36] - 4 * d[5] * d[6] * d[23] * d[36] + 2 * d[4] * d[7] * d[23] * d[36] + 2 * d[3] * d[8] * d[23] * d[36] + 2 * d[1] * d[2] * d[24] * d[36] - 2 * std::pow(d[5], 2) * d[24] * d[36] - 2 * d[2] * d[3] * d[25] * d[36] + 2 * d[4] * d[5] * d[25] * d[36] - 2 * d[1] * d[4] * d[26] * d[36] + 2 * d[3] * d[5] * d[26] * d[36] + d[2] * d[19] * std::pow(d[36], 2) + d[1] * d[20] * std::pow(d[36], 2) - 2 * d[5] * d[23] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[18] * d[37] - 2 * d[5] * d[8] * d[18] * d[37] - 2 * d[3] * d[6] * d[20] * d[37] + 2 * d[0] * d[7] * d[20] * d[37] - 2 * d[2] * d[6] * d[21] * d[37] + 2 * d[4] * d[8] * d[21] * d[37] + 2 * d[5] * d[6] * d[22] * d[37] - 4 * d[4] * d[7] * d[22] * d[37] + 2 * d[3] * d[8] * d[22] * d[37] + 2 * d[4] * d[6] * d[23] * d[37] - 2 * d[0] * d[8] * d[23] * d[37] - 2 * d[2] * d[3] * d[24] * d[37] + 2 * d[4] * d[5] * d[24] * d[37] + 2 * d[0] * d[2] * d[25] * d[37] - 2 * std::pow(d[4], 2) * d[25] * d[37] + 2 * d[3] * d[4] * d[26] * d[37] - 2 * d[0] * d[5] * d[26] * d[37] - 2 * d[3] * d[20] * d[36] * d[37] - 2 * d[2] * d[21] * d[36] * d[37] + 2 * d[5] * d[22] * d[36] * d[37] + 2 * d[4] * d[23] * d[36] * d[37] + d[2] * d[18] * std::pow(d[37], 2) + d[0] * d[20] * std::pow(d[37], 2) - 2 * d[4] * d[22] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[18] * d[38] + 2 * d[1] * d[8] * d[18] * d[38] - 2 * d[4] * d[6] * d[19] * d[38] + 2 * d[0] * d[8] * d[19] * d[38] + 2 * d[5] * d[6] * d[21] * d[38] + 2 * d[4] * d[7] * d[21] * d[38] - 4 * d[3] * d[8] * d[21] * d[38] - 2 * d[1] * d[6] * d[22] * d[38] + 2 * d[3] * d[7] * d[22] * d[38] + 2 * d[3] * d[6] * d[23] * d[38] - 2 * d[0] * d[7] * d[23] * d[38] - 2 * d[1] * d[4] * d[24] * d[38] + 2 * d[3] * d[5] * d[24] * d[38] + 2 * d[3] * d[4] * d[25] * d[38] - 2 * d[0] * d[5] * d[25] * d[38] + 2 * d[0] * d[1] * d[26] * d[38] - 2 * std::pow(d[3], 2) * d[26] * d[38] - 2 * d[4] * d[19] * d[36] * d[38] + 2 * d[5] * d[21] * d[36] * d[38] - 2 * d[1] * d[22] * d[36] * d[38] + 2 * d[3] * d[23] * d[36] * d[38] - 2 * d[5] * d[18] * d[37] * d[38] + 2 * d[4] * d[21] * d[37] * d[38] + 2 * d[3] * d[22] * d[37] * d[38] - 2 * d[0] * d[23] * d[37] * d[38] + d[1] * d[18] * std::pow(d[38], 2) + d[0] * d[19] * std::pow(d[38], 2) - 2 * d[3] * d[21] * std::pow(d[38], 2) - d[1] * d[2] * d[18] * d[42] + std::pow(d[5], 2) * d[18] * d[42] - d[0] * d[2] * d[19] * d[42] + std::pow(d[4], 2) * d[19] * d[42] - d[0] * d[1] * d[20] * d[42] + std::pow(d[3], 2) * d[20] * d[42] + 2 * d[2] * d[3] * d[21] * d[42] - 2 * d[4] * d[5] * d[21] * d[42] + 2 * d[1] * d[4] * d[22] * d[42] - 2 * d[3] * d[5] * d[22] * d[42] - 2 * d[3] * d[4] * d[23] * d[42] + 2 * d[0] * d[5] * d[23] * d[42];
    coeffs[18] = 2 * d[2] * d[6] * d[28] * d[36] - 2 * d[4] * d[8] * d[28] * d[36] + 2 * d[1] * d[6] * d[29] * d[36] - 2 * d[3] * d[7] * d[29] * d[36] - 2 * d[2] * d[7] * d[30] * d[36] + 2 * d[5] * d[8] * d[30] * d[36] + 2 * d[5] * d[7] * d[31] * d[36] - 2 * d[1] * d[8] * d[31] * d[36] - 4 * d[5] * d[6] * d[32] * d[36] + 2 * d[4] * d[7] * d[32] * d[36] + 2 * d[3] * d[8] * d[32] * d[36] + 2 * d[1] * d[2] * d[33] * d[36] - 2 * std::pow(d[5], 2) * d[33] * d[36] - 2 * d[2] * d[3] * d[34] * d[36] + 2 * d[4] * d[5] * d[34] * d[36] - 2 * d[1] * d[4] * d[35] * d[36] + 2 * d[3] * d[5] * d[35] * d[36] + d[2] * d[28] * std::pow(d[36], 2) + d[1] * d[29] * std::pow(d[36], 2) - 2 * d[5] * d[32] * std::pow(d[36], 2) + 2 * d[2] * d[7] * d[27] * d[37] - 2 * d[5] * d[8] * d[27] * d[37] - 2 * d[3] * d[6] * d[29] * d[37] + 2 * d[0] * d[7] * d[29] * d[37] - 2 * d[2] * d[6] * d[30] * d[37] + 2 * d[4] * d[8] * d[30] * d[37] + 2 * d[5] * d[6] * d[31] * d[37] - 4 * d[4] * d[7] * d[31] * d[37] + 2 * d[3] * d[8] * d[31] * d[37] + 2 * d[4] * d[6] * d[32] * d[37] - 2 * d[0] * d[8] * d[32] * d[37] - 2 * d[2] * d[3] * d[33] * d[37] + 2 * d[4] * d[5] * d[33] * d[37] + 2 * d[0] * d[2] * d[34] * d[37] - 2 * std::pow(d[4], 2) * d[34] * d[37] + 2 * d[3] * d[4] * d[35] * d[37] - 2 * d[0] * d[5] * d[35] * d[37] - 2 * d[3] * d[29] * d[36] * d[37] - 2 * d[2] * d[30] * d[36] * d[37] + 2 * d[5] * d[31] * d[36] * d[37] + 2 * d[4] * d[32] * d[36] * d[37] + d[2] * d[27] * std::pow(d[37], 2) + d[0] * d[29] * std::pow(d[37], 2) - 2 * d[4] * d[31] * std::pow(d[37], 2) - 2 * d[5] * d[7] * d[27] * d[38] + 2 * d[1] * d[8] * d[27] * d[38] - 2 * d[4] * d[6] * d[28] * d[38] + 2 * d[0] * d[8] * d[28] * d[38] + 2 * d[5] * d[6] * d[30] * d[38] + 2 * d[4] * d[7] * d[30] * d[38] - 4 * d[3] * d[8] * d[30] * d[38] - 2 * d[1] * d[6] * d[31] * d[38] + 2 * d[3] * d[7] * d[31] * d[38] + 2 * d[3] * d[6] * d[32] * d[38] - 2 * d[0] * d[7] * d[32] * d[38] - 2 * d[1] * d[4] * d[33] * d[38] + 2 * d[3] * d[5] * d[33] * d[38] + 2 * d[3] * d[4] * d[34] * d[38] - 2 * d[0] * d[5] * d[34] * d[38] + 2 * d[0] * d[1] * d[35] * d[38] - 2 * std::pow(d[3], 2) * d[35] * d[38] - 2 * d[4] * d[28] * d[36] * d[38] + 2 * d[5] * d[30] * d[36] * d[38] - 2 * d[1] * d[31] * d[36] * d[38] + 2 * d[3] * d[32] * d[36] * d[38] - 2 * d[5] * d[27] * d[37] * d[38] + 2 * d[4] * d[30] * d[37] * d[38] + 2 * d[3] * d[31] * d[37] * d[38] - 2 * d[0] * d[32] * d[37] * d[38] + d[1] * d[27] * std::pow(d[38], 2) + d[0] * d[28] * std::pow(d[38], 2) - 2 * d[3] * d[30] * std::pow(d[38], 2) - d[1] * d[2] * d[27] * d[42] + std::pow(d[5], 2) * d[27] * d[42] - d[0] * d[2] * d[28] * d[42] + std::pow(d[4], 2) * d[28] * d[42] - d[0] * d[1] * d[29] * d[42] + std::pow(d[3], 2) * d[29] * d[42] + 2 * d[2] * d[3] * d[30] * d[42] - 2 * d[4] * d[5] * d[30] * d[42] + 2 * d[1] * d[4] * d[31] * d[42] - 2 * d[3] * d[5] * d[31] * d[42] - 2 * d[3] * d[4] * d[32] * d[42] + 2 * d[0] * d[5] * d[32] * d[42];
    coeffs[19] = 2 * d[1] * d[2] * d[6] * d[36] - 2 * std::pow(d[5], 2) * d[6] * d[36] - 2 * d[2] * d[3] * d[7] * d[36] + 2 * d[4] * d[5] * d[7] * d[36] - 2 * d[1] * d[4] * d[8] * d[36] + 2 * d[3] * d[5] * d[8] * d[36] + d[1] * d[2] * std::pow(d[36], 2) - std::pow(d[5], 2) * std::pow(d[36], 2) - 2 * d[2] * d[3] * d[6] * d[37] + 2 * d[4] * d[5] * d[6] * d[37] + 2 * d[0] * d[2] * d[7] * d[37] - 2 * std::pow(d[4], 2) * d[7] * d[37] + 2 * d[3] * d[4] * d[8] * d[37] - 2 * d[0] * d[5] * d[8] * d[37] - 2 * d[2] * d[3] * d[36] * d[37] + 2 * d[4] * d[5] * d[36] * d[37] + d[0] * d[2] * std::pow(d[37], 2) - std::pow(d[4], 2) * std::pow(d[37], 2) - 2 * d[1] * d[4] * d[6] * d[38] + 2 * d[3] * d[5] * d[6] * d[38] + 2 * d[3] * d[4] * d[7] * d[38] - 2 * d[0] * d[5] * d[7] * d[38] + 2 * d[0] * d[1] * d[8] * d[38] - 2 * std::pow(d[3], 2) * d[8] * d[38] - 2 * d[1] * d[4] * d[36] * d[38] + 2 * d[3] * d[5] * d[36] * d[38] + 2 * d[3] * d[4] * d[37] * d[38] - 2 * d[0] * d[5] * d[37] * d[38] + d[0] * d[1] * std::pow(d[38], 2) - std::pow(d[3], 2) * std::pow(d[38], 2) - d[0] * d[1] * d[2] * d[42] + d[2] * std::pow(d[3], 2) * d[42] + d[1] * std::pow(d[4], 2) * d[42] - 2 * d[3] * d[4] * d[5] * d[42] + d[0] * std::pow(d[5], 2) * d[42];
    coeffs[20] = 2 * d[10] * d[11] * d[15] * d[39] - 2 * std::pow(d[14], 2) * d[15] * d[39] - 2 * d[11] * d[12] * d[16] * d[39] + 2 * d[13] * d[14] * d[16] * d[39] - 2 * d[10] * d[13] * d[17] * d[39] + 2 * d[12] * d[14] * d[17] * d[39] - 2 * d[11] * d[12] * d[15] * d[40] + 2 * d[13] * d[14] * d[15] * d[40] + 2 * d[9] * d[11] * d[16] * d[40] - 2 * std::pow(d[13], 2) * d[16] * d[40] + 2 * d[12] * d[13] * d[17] * d[40] - 2 * d[9] * d[14] * d[17] * d[40] - 2 * d[10] * d[13] * d[15] * d[41] + 2 * d[12] * d[14] * d[15] * d[41] + 2 * d[12] * d[13] * d[16] * d[41] - 2 * d[9] * d[14] * d[16] * d[41] + 2 * d[9] * d[10] * d[17] * d[41] - 2 * std::pow(d[12], 2) * d[17] * d[41] - d[9] * d[10] * d[11] * d[43] + d[11] * std::pow(d[12], 2) * d[43] + d[10] * std::pow(d[13], 2) * d[43] - 2 * d[12] * d[13] * d[14] * d[43] + d[9] * std::pow(d[14], 2) * d[43];
    coeffs[21] = 2 * d[11] * d[15] * d[19] * d[39] - 2 * d[13] * d[17] * d[19] * d[39] + 2 * d[10] * d[15] * d[20] * d[39] - 2 * d[12] * d[16] * d[20] * d[39] - 2 * d[11] * d[16] * d[21] * d[39] + 2 * d[14] * d[17] * d[21] * d[39] + 2 * d[14] * d[16] * d[22] * d[39] - 2 * d[10] * d[17] * d[22] * d[39] - 4 * d[14] * d[15] * d[23] * d[39] + 2 * d[13] * d[16] * d[23] * d[39] + 2 * d[12] * d[17] * d[23] * d[39] + 2 * d[10] * d[11] * d[24] * d[39] - 2 * std::pow(d[14], 2) * d[24] * d[39] - 2 * d[11] * d[12] * d[25] * d[39] + 2 * d[13] * d[14] * d[25] * d[39] - 2 * d[10] * d[13] * d[26] * d[39] + 2 * d[12] * d[14] * d[26] * d[39] + 2 * d[11] * d[16] * d[18] * d[40] - 2 * d[14] * d[17] * d[18] * d[40] - 2 * d[12] * d[15] * d[20] * d[40] + 2 * d[9] * d[16] * d[20] * d[40] - 2 * d[11] * d[15] * d[21] * d[40] + 2 * d[13] * d[17] * d[21] * d[40] + 2 * d[14] * d[15] * d[22] * d[40] - 4 * d[13] * d[16] * d[22] * d[40] + 2 * d[12] * d[17] * d[22] * d[40] + 2 * d[13] * d[15] * d[23] * d[40] - 2 * d[9] * d[17] * d[23] * d[40] - 2 * d[11] * d[12] * d[24] * d[40] + 2 * d[13] * d[14] * d[24] * d[40] + 2 * d[9] * d[11] * d[25] * d[40] - 2 * std::pow(d[13], 2) * d[25] * d[40] + 2 * d[12] * d[13] * d[26] * d[40] - 2 * d[9] * d[14] * d[26] * d[40] - 2 * d[14] * d[16] * d[18] * d[41] + 2 * d[10] * d[17] * d[18] * d[41] - 2 * d[13] * d[15] * d[19] * d[41] + 2 * d[9] * d[17] * d[19] * d[41] + 2 * d[14] * d[15] * d[21] * d[41] + 2 * d[13] * d[16] * d[21] * d[41] - 4 * d[12] * d[17] * d[21] * d[41] - 2 * d[10] * d[15] * d[22] * d[41] + 2 * d[12] * d[16] * d[22] * d[41] + 2 * d[12] * d[15] * d[23] * d[41] - 2 * d[9] * d[16] * d[23] * d[41] - 2 * d[10] * d[13] * d[24] * d[41] + 2 * d[12] * d[14] * d[24] * d[41] + 2 * d[12] * d[13] * d[25] * d[41] - 2 * d[9] * d[14] * d[25] * d[41] + 2 * d[9] * d[10] * d[26] * d[41] - 2 * std::pow(d[12], 2) * d[26] * d[41] - d[10] * d[11] * d[18] * d[43] + std::pow(d[14], 2) * d[18] * d[43] - d[9] * d[11] * d[19] * d[43] + std::pow(d[13], 2) * d[19] * d[43] - d[9] * d[10] * d[20] * d[43] + std::pow(d[12], 2) * d[20] * d[43] + 2 * d[11] * d[12] * d[21] * d[43] - 2 * d[13] * d[14] * d[21] * d[43] + 2 * d[10] * d[13] * d[22] * d[43] - 2 * d[12] * d[14] * d[22] * d[43] - 2 * d[12] * d[13] * d[23] * d[43] + 2 * d[9] * d[14] * d[23] * d[43];
    coeffs[22] = 2 * d[15] * d[19] * d[20] * d[39] - 2 * d[16] * d[20] * d[21] * d[39] - 2 * d[17] * d[19] * d[22] * d[39] + 2 * d[17] * d[21] * d[23] * d[39] + 2 * d[16] * d[22] * d[23] * d[39] - 2 * d[15] * std::pow(d[23], 2) * d[39] + 2 * d[11] * d[19] * d[24] * d[39] + 2 * d[10] * d[20] * d[24] * d[39] - 4 * d[14] * d[23] * d[24] * d[39] - 2 * d[12] * d[20] * d[25] * d[39] - 2 * d[11] * d[21] * d[25] * d[39] + 2 * d[14] * d[22] * d[25] * d[39] + 2 * d[13] * d[23] * d[25] * d[39] - 2 * d[13] * d[19] * d[26] * d[39] + 2 * d[14] * d[21] * d[26] * d[39] - 2 * d[10] * d[22] * d[26] * d[39] + 2 * d[12] * d[23] * d[26] * d[39] + 2 * d[16] * d[18] * d[20] * d[40] - 2 * d[15] * d[20] * d[21] * d[40] + 2 * d[17] * d[21] * d[22] * d[40] - 2 * d[16] * std::pow(d[22], 2) * d[40] - 2 * d[17] * d[18] * d[23] * d[40] + 2 * d[15] * d[22] * d[23] * d[40] - 2 * d[12] * d[20] * d[24] * d[40] - 2 * d[11] * d[21] * d[24] * d[40] + 2 * d[14] * d[22] * d[24] * d[40] + 2 * d[13] * d[23] * d[24] * d[40] + 2 * d[11] * d[18] * d[25] * d[40] + 2 * d[9] * d[20] * d[25] * d[40] - 4 * d[13] * d[22] * d[25] * d[40] - 2 * d[14] * d[18] * d[26] * d[40] + 2 * d[13] * d[21] * d[26] * d[40] + 2 * d[12] * d[22] * d[26] * d[40] - 2 * d[9] * d[23] * d[26] * d[40] + 2 * d[17] * d[18] * d[19] * d[41] - 2 * d[17] * std::pow(d[21], 2) * d[41] - 2 * d[15] * d[19] * d[22] * d[41] + 2 * d[16] * d[21] * d[22] * d[41] - 2 * d[16] * d[18] * d[23] * d[41] + 2 * d[15] * d[21] * d[23] * d[41] - 2 * d[13] * d[19] * d[24] * d[41] + 2 * d[14] * d[21] * d[24] * d[41] - 2 * d[10] * d[22] * d[24] * d[41] + 2 * d[12] * d[23] * d[24] * d[41] - 2 * d[14] * d[18] * d[25] * d[41] + 2 * d[13] * d[21] * d[25] * d[41] + 2 * d[12] * d[22] * d[25] * d[41] - 2 * d[9] * d[23] * d[25] * d[41] + 2 * d[10] * d[18] * d[26] * d[41] + 2 * d[9] * d[19] * d[26] * d[41] - 4 * d[12] * d[21] * d[26] * d[41] - d[11] * d[18] * d[19] * d[43] - d[10] * d[18] * d[20] * d[43] - d[9] * d[19] * d[20] * d[43] + 2 * d[12] * d[20] * d[21] * d[43] + d[11] * std::pow(d[21], 2) * d[43] + 2 * d[13] * d[19] * d[22] * d[43] - 2 * d[14] * d[21] * d[22] * d[43] + d[10] * std::pow(d[22], 2) * d[43] + 2 * d[14] * d[18] * d[23] * d[43] - 2 * d[13] * d[21] * d[23] * d[43] - 2 * d[12] * d[22] * d[23] * d[43] + d[9] * std::pow(d[23], 2) * d[43];
    coeffs[23] = 2 * d[19] * d[20] * d[24] * d[39] - 2 * std::pow(d[23], 2) * d[24] * d[39] - 2 * d[20] * d[21] * d[25] * d[39] + 2 * d[22] * d[23] * d[25] * d[39] - 2 * d[19] * d[22] * d[26] * d[39] + 2 * d[21] * d[23] * d[26] * d[39] - 2 * d[20] * d[21] * d[24] * d[40] + 2 * d[22] * d[23] * d[24] * d[40] + 2 * d[18] * d[20] * d[25] * d[40] - 2 * std::pow(d[22], 2) * d[25] * d[40] + 2 * d[21] * d[22] * d[26] * d[40] - 2 * d[18] * d[23] * d[26] * d[40] - 2 * d[19] * d[22] * d[24] * d[41] + 2 * d[21] * d[23] * d[24] * d[41] + 2 * d[21] * d[22] * d[25] * d[41] - 2 * d[18] * d[23] * d[25] * d[41] + 2 * d[18] * d[19] * d[26] * d[41] - 2 * std::pow(d[21], 2) * d[26] * d[41] - d[18] * d[19] * d[20] * d[43] + d[20] * std::pow(d[21], 2) * d[43] + d[19] * std::pow(d[22], 2) * d[43] - 2 * d[21] * d[22] * d[23] * d[43] + d[18] * std::pow(d[23], 2) * d[43];
    coeffs[24] = 2 * d[11] * d[15] * d[28] * d[39] - 2 * d[13] * d[17] * d[28] * d[39] + 2 * d[10] * d[15] * d[29] * d[39] - 2 * d[12] * d[16] * d[29] * d[39] - 2 * d[11] * d[16] * d[30] * d[39] + 2 * d[14] * d[17] * d[30] * d[39] + 2 * d[14] * d[16] * d[31] * d[39] - 2 * d[10] * d[17] * d[31] * d[39] - 4 * d[14] * d[15] * d[32] * d[39] + 2 * d[13] * d[16] * d[32] * d[39] + 2 * d[12] * d[17] * d[32] * d[39] + 2 * d[10] * d[11] * d[33] * d[39] - 2 * std::pow(d[14], 2) * d[33] * d[39] - 2 * d[11] * d[12] * d[34] * d[39] + 2 * d[13] * d[14] * d[34] * d[39] - 2 * d[10] * d[13] * d[35] * d[39] + 2 * d[12] * d[14] * d[35] * d[39] + 2 * d[11] * d[16] * d[27] * d[40] - 2 * d[14] * d[17] * d[27] * d[40] - 2 * d[12] * d[15] * d[29] * d[40] + 2 * d[9] * d[16] * d[29] * d[40] - 2 * d[11] * d[15] * d[30] * d[40] + 2 * d[13] * d[17] * d[30] * d[40] + 2 * d[14] * d[15] * d[31] * d[40] - 4 * d[13] * d[16] * d[31] * d[40] + 2 * d[12] * d[17] * d[31] * d[40] + 2 * d[13] * d[15] * d[32] * d[40] - 2 * d[9] * d[17] * d[32] * d[40] - 2 * d[11] * d[12] * d[33] * d[40] + 2 * d[13] * d[14] * d[33] * d[40] + 2 * d[9] * d[11] * d[34] * d[40] - 2 * std::pow(d[13], 2) * d[34] * d[40] + 2 * d[12] * d[13] * d[35] * d[40] - 2 * d[9] * d[14] * d[35] * d[40] - 2 * d[14] * d[16] * d[27] * d[41] + 2 * d[10] * d[17] * d[27] * d[41] - 2 * d[13] * d[15] * d[28] * d[41] + 2 * d[9] * d[17] * d[28] * d[41] + 2 * d[14] * d[15] * d[30] * d[41] + 2 * d[13] * d[16] * d[30] * d[41] - 4 * d[12] * d[17] * d[30] * d[41] - 2 * d[10] * d[15] * d[31] * d[41] + 2 * d[12] * d[16] * d[31] * d[41] + 2 * d[12] * d[15] * d[32] * d[41] - 2 * d[9] * d[16] * d[32] * d[41] - 2 * d[10] * d[13] * d[33] * d[41] + 2 * d[12] * d[14] * d[33] * d[41] + 2 * d[12] * d[13] * d[34] * d[41] - 2 * d[9] * d[14] * d[34] * d[41] + 2 * d[9] * d[10] * d[35] * d[41] - 2 * std::pow(d[12], 2) * d[35] * d[41] - d[10] * d[11] * d[27] * d[43] + std::pow(d[14], 2) * d[27] * d[43] - d[9] * d[11] * d[28] * d[43] + std::pow(d[13], 2) * d[28] * d[43] - d[9] * d[10] * d[29] * d[43] + std::pow(d[12], 2) * d[29] * d[43] + 2 * d[11] * d[12] * d[30] * d[43] - 2 * d[13] * d[14] * d[30] * d[43] + 2 * d[10] * d[13] * d[31] * d[43] - 2 * d[12] * d[14] * d[31] * d[43] - 2 * d[12] * d[13] * d[32] * d[43] + 2 * d[9] * d[14] * d[32] * d[43];
    coeffs[25] = 2 * d[15] * d[20] * d[28] * d[39] - 2 * d[17] * d[22] * d[28] * d[39] + 2 * d[11] * d[24] * d[28] * d[39] - 2 * d[13] * d[26] * d[28] * d[39] + 2 * d[15] * d[19] * d[29] * d[39] - 2 * d[16] * d[21] * d[29] * d[39] + 2 * d[10] * d[24] * d[29] * d[39] - 2 * d[12] * d[25] * d[29] * d[39] - 2 * d[16] * d[20] * d[30] * d[39] + 2 * d[17] * d[23] * d[30] * d[39] - 2 * d[11] * d[25] * d[30] * d[39] + 2 * d[14] * d[26] * d[30] * d[39] - 2 * d[17] * d[19] * d[31] * d[39] + 2 * d[16] * d[23] * d[31] * d[39] + 2 * d[14] * d[25] * d[31] * d[39] - 2 * d[10] * d[26] * d[31] * d[39] + 2 * d[17] * d[21] * d[32] * d[39] + 2 * d[16] * d[22] * d[32] * d[39] - 4 * d[15] * d[23] * d[32] * d[39] - 4 * d[14] * d[24] * d[32] * d[39] + 2 * d[13] * d[25] * d[32] * d[39] + 2 * d[12] * d[26] * d[32] * d[39] + 2 * d[11] * d[19] * d[33] * d[39] + 2 * d[10] * d[20] * d[33] * d[39] - 4 * d[14] * d[23] * d[33] * d[39] - 2 * d[12] * d[20] * d[34] * d[39] - 2 * d[11] * d[21] * d[34] * d[39] + 2 * d[14] * d[22] * d[34] * d[39] + 2 * d[13] * d[23] * d[34] * d[39] - 2 * d[13] * d[19] * d[35] * d[39] + 2 * d[14] * d[21] * d[35] * d[39] - 2 * d[10] * d[22] * d[35] * d[39] + 2 * d[12] * d[23] * d[35] * d[39] + 2 * d[16] * d[20] * d[27] * d[40] - 2 * d[17] * d[23] * d[27] * d[40] + 2 * d[11] * d[25] * d[27] * d[40] - 2 * d[14] * d[26] * d[27] * d[40] + 2 * d[16] * d[18] * d[29] * d[40] - 2 * d[15] * d[21] * d[29] * d[40] - 2 * d[12] * d[24] * d[29] * d[40] + 2 * d[9] * d[25] * d[29] * d[40] - 2 * d[15] * d[20] * d[30] * d[40] + 2 * d[17] * d[22] * d[30] * d[40] - 2 * d[11] * d[24] * d[30] * d[40] + 2 * d[13] * d[26] * d[30] * d[40] + 2 * d[17] * d[21] * d[31] * d[40] - 4 * d[16] * d[22] * d[31] * d[40] + 2 * d[15] * d[23] * d[31] * d[40] + 2 * d[14] * d[24] * d[31] * d[40] - 4 * d[13] * d[25] * d[31] * d[40] + 2 * d[12] * d[26] * d[31] * d[40] - 2 * d[17] * d[18] * d[32] * d[40] + 2 * d[15] * d[22] * d[32] * d[40] + 2 * d[13] * d[24] * d[32] * d[40] - 2 * d[9] * d[26] * d[32] * d[40] - 2 * d[12] * d[20] * d[33] * d[40] - 2 * d[11] * d[21] * d[33] * d[40] + 2 * d[14] * d[22] * d[33] * d[40] + 2 * d[13] * d[23] * d[33] * d[40] + 2 * d[11] * d[18] * d[34] * d[40] + 2 * d[9] * d[20] * d[34] * d[40] - 4 * d[13] * d[22] * d[34] * d[40] - 2 * d[14] * d[18] * d[35] * d[40] + 2 * d[13] * d[21] * d[35] * d[40] + 2 * d[12] * d[22] * d[35] * d[40] - 2 * d[9] * d[23] * d[35] * d[40] + 2 * d[17] * d[19] * d[27] * d[41] - 2 * d[16] * d[23] * d[27] * d[41] - 2 * d[14] * d[25] * d[27] * d[41] + 2 * d[10] * d[26] * d[27] * d[41] + 2 * d[17] * d[18] * d[28] * d[41] - 2 * d[15] * d[22] * d[28] * d[41] - 2 * d[13] * d[24] * d[28] * d[41] + 2 * d[9] * d[26] * d[28] * d[41] - 4 * d[17] * d[21] * d[30] * d[41] + 2 * d[16] * d[22] * d[30] * d[41] + 2 * d[15] * d[23] * d[30] * d[41] + 2 * d[14] * d[24] * d[30] * d[41] + 2 * d[13] * d[25] * d[30] * d[41] - 4 * d[12] * d[26] * d[30] * d[41] - 2 * d[15] * d[19] * d[31] * d[41] + 2 * d[16] * d[21] * d[31] * d[41] - 2 * d[10] * d[24] * d[31] * d[41] + 2 * d[12] * d[25] * d[31] * d[41] - 2 * d[16] * d[18] * d[32] * d[41] + 2 * d[15] * d[21] * d[32] * d[41] + 2 * d[12] * d[24] * d[32] * d[41] - 2 * d[9] * d[25] * d[32] * d[41] - 2 * d[13] * d[19] * d[33] * d[41] + 2 * d[14] * d[21] * d[33] * d[41] - 2 * d[10] * d[22] * d[33] * d[41] + 2 * d[12] * d[23] * d[33] * d[41] - 2 * d[14] * d[18] * d[34] * d[41] + 2 * d[13] * d[21] * d[34] * d[41] + 2 * d[12] * d[22] * d[34] * d[41] - 2 * d[9] * d[23] * d[34] * d[41] + 2 * d[10] * d[18] * d[35] * d[41] + 2 * d[9] * d[19] * d[35] * d[41] - 4 * d[12] * d[21] * d[35] * d[41] - d[11] * d[19] * d[27] * d[43] - d[10] * d[20] * d[27] * d[43] + 2 * d[14] * d[23] * d[27] * d[43] - d[11] * d[18] * d[28] * d[43] - d[9] * d[20] * d[28] * d[43] + 2 * d[13] * d[22] * d[28] * d[43] - d[10] * d[18] * d[29] * d[43] - d[9] * d[19] * d[29] * d[43] + 2 * d[12] * d[21] * d[29] * d[43] + 2 * d[12] * d[20] * d[30] * d[43] + 2 * d[11] * d[21] * d[30] * d[43] - 2 * d[14] * d[22] * d[30] * d[43] - 2 * d[13] * d[23] * d[30] * d[43] + 2 * d[13] * d[19] * d[31] * d[43] - 2 * d[14] * d[21] * d[31] * d[43] + 2 * d[10] * d[22] * d[31] * d[43] - 2 * d[12] * d[23] * d[31] * d[43] + 2 * d[14] * d[18] * d[32] * d[43] - 2 * d[13] * d[21] * d[32] * d[43] - 2 * d[12] * d[22] * d[32] * d[43] + 2 * d[9] * d[23] * d[32] * d[43];
    coeffs[26] = 2 * d[20] * d[24] * d[28] * d[39] - 2 * d[22] * d[26] * d[28] * d[39] + 2 * d[19] * d[24] * d[29] * d[39] - 2 * d[21] * d[25] * d[29] * d[39] - 2 * d[20] * d[25] * d[30] * d[39] + 2 * d[23] * d[26] * d[30] * d[39] + 2 * d[23] * d[25] * d[31] * d[39] - 2 * d[19] * d[26] * d[31] * d[39] - 4 * d[23] * d[24] * d[32] * d[39] + 2 * d[22] * d[25] * d[32] * d[39] + 2 * d[21] * d[26] * d[32] * d[39] + 2 * d[19] * d[20] * d[33] * d[39] - 2 * std::pow(d[23], 2) * d[33] * d[39] - 2 * d[20] * d[21] * d[34] * d[39] + 2 * d[22] * d[23] * d[34] * d[39] - 2 * d[19] * d[22] * d[35] * d[39] + 2 * d[21] * d[23] * d[35] * d[39] + 2 * d[20] * d[25] * d[27] * d[40] - 2 * d[23] * d[26] * d[27] * d[40] - 2 * d[21] * d[24] * d[29] * d[40] + 2 * d[18] * d[25] * d[29] * d[40] - 2 * d[20] * d[24] * d[30] * d[40] + 2 * d[22] * d[26] * d[30] * d[40] + 2 * d[23] * d[24] * d[31] * d[40] - 4 * d[22] * d[25] * d[31] * d[40] + 2 * d[21] * d[26] * d[31] * d[40] + 2 * d[22] * d[24] * d[32] * d[40] - 2 * d[18] * d[26] * d[32] * d[40] - 2 * d[20] * d[21] * d[33] * d[40] + 2 * d[22] * d[23] * d[33] * d[40] + 2 * d[18] * d[20] * d[34] * d[40] - 2 * std::pow(d[22], 2) * d[34] * d[40] + 2 * d[21] * d[22] * d[35] * d[40] - 2 * d[18] * d[23] * d[35] * d[40] - 2 * d[23] * d[25] * d[27] * d[41] + 2 * d[19] * d[26] * d[27] * d[41] - 2 * d[22] * d[24] * d[28] * d[41] + 2 * d[18] * d[26] * d[28] * d[41] + 2 * d[23] * d[24] * d[30] * d[41] + 2 * d[22] * d[25] * d[30] * d[41] - 4 * d[21] * d[26] * d[30] * d[41] - 2 * d[19] * d[24] * d[31] * d[41] + 2 * d[21] * d[25] * d[31] * d[41] + 2 * d[21] * d[24] * d[32] * d[41] - 2 * d[18] * d[25] * d[32] * d[41] - 2 * d[19] * d[22] * d[33] * d[41] + 2 * d[21] * d[23] * d[33] * d[41] + 2 * d[21] * d[22] * d[34] * d[41] - 2 * d[18] * d[23] * d[34] * d[41] + 2 * d[18] * d[19] * d[35] * d[41] - 2 * std::pow(d[21], 2) * d[35] * d[41] - d[19] * d[20] * d[27] * d[43] + std::pow(d[23], 2) * d[27] * d[43] - d[18] * d[20] * d[28] * d[43] + std::pow(d[22], 2) * d[28] * d[43] - d[18] * d[19] * d[29] * d[43] + std::pow(d[21], 2) * d[29] * d[43] + 2 * d[20] * d[21] * d[30] * d[43] - 2 * d[22] * d[23] * d[30] * d[43] + 2 * d[19] * d[22] * d[31] * d[43] - 2 * d[21] * d[23] * d[31] * d[43] - 2 * d[21] * d[22] * d[32] * d[43] + 2 * d[18] * d[23] * d[32] * d[43];
    coeffs[27] = 2 * d[15] * d[28] * d[29] * d[39] - 2 * d[16] * d[29] * d[30] * d[39] - 2 * d[17] * d[28] * d[31] * d[39] + 2 * d[17] * d[30] * d[32] * d[39] + 2 * d[16] * d[31] * d[32] * d[39] - 2 * d[15] * std::pow(d[32], 2) * d[39] + 2 * d[11] * d[28] * d[33] * d[39] + 2 * d[10] * d[29] * d[33] * d[39] - 4 * d[14] * d[32] * d[33] * d[39] - 2 * d[12] * d[29] * d[34] * d[39] - 2 * d[11] * d[30] * d[34] * d[39] + 2 * d[14] * d[31] * d[34] * d[39] + 2 * d[13] * d[32] * d[34] * d[39] - 2 * d[13] * d[28] * d[35] * d[39] + 2 * d[14] * d[30] * d[35] * d[39] - 2 * d[10] * d[31] * d[35] * d[39] + 2 * d[12] * d[32] * d[35] * d[39] + 2 * d[16] * d[27] * d[29] * d[40] - 2 * d[15] * d[29] * d[30] * d[40] + 2 * d[17] * d[30] * d[31] * d[40] - 2 * d[16] * std::pow(d[31], 2) * d[40] - 2 * d[17] * d[27] * d[32] * d[40] + 2 * d[15] * d[31] * d[32] * d[40] - 2 * d[12] * d[29] * d[33] * d[40] - 2 * d[11] * d[30] * d[33] * d[40] + 2 * d[14] * d[31] * d[33] * d[40] + 2 * d[13] * d[32] * d[33] * d[40] + 2 * d[11] * d[27] * d[34] * d[40] + 2 * d[9] * d[29] * d[34] * d[40] - 4 * d[13] * d[31] * d[34] * d[40] - 2 * d[14] * d[27] * d[35] * d[40] + 2 * d[13] * d[30] * d[35] * d[40] + 2 * d[12] * d[31] * d[35] * d[40] - 2 * d[9] * d[32] * d[35] * d[40] + 2 * d[17] * d[27] * d[28] * d[41] - 2 * d[17] * std::pow(d[30], 2) * d[41] - 2 * d[15] * d[28] * d[31] * d[41] + 2 * d[16] * d[30] * d[31] * d[41] - 2 * d[16] * d[27] * d[32] * d[41] + 2 * d[15] * d[30] * d[32] * d[41] - 2 * d[13] * d[28] * d[33] * d[41] + 2 * d[14] * d[30] * d[33] * d[41] - 2 * d[10] * d[31] * d[33] * d[41] + 2 * d[12] * d[32] * d[33] * d[41] - 2 * d[14] * d[27] * d[34] * d[41] + 2 * d[13] * d[30] * d[34] * d[41] + 2 * d[12] * d[31] * d[34] * d[41] - 2 * d[9] * d[32] * d[34] * d[41] + 2 * d[10] * d[27] * d[35] * d[41] + 2 * d[9] * d[28] * d[35] * d[41] - 4 * d[12] * d[30] * d[35] * d[41] - d[11] * d[27] * d[28] * d[43] - d[10] * d[27] * d[29] * d[43] - d[9] * d[28] * d[29] * d[43] + 2 * d[12] * d[29] * d[30] * d[43] + d[11] * std::pow(d[30], 2) * d[43] + 2 * d[13] * d[28] * d[31] * d[43] - 2 * d[14] * d[30] * d[31] * d[43] + d[10] * std::pow(d[31], 2) * d[43] + 2 * d[14] * d[27] * d[32] * d[43] - 2 * d[13] * d[30] * d[32] * d[43] - 2 * d[12] * d[31] * d[32] * d[43] + d[9] * std::pow(d[32], 2) * d[43];
    coeffs[28] = 2 * d[24] * d[28] * d[29] * d[39] - 2 * d[25] * d[29] * d[30] * d[39] - 2 * d[26] * d[28] * d[31] * d[39] + 2 * d[26] * d[30] * d[32] * d[39] + 2 * d[25] * d[31] * d[32] * d[39] - 2 * d[24] * std::pow(d[32], 2) * d[39] + 2 * d[20] * d[28] * d[33] * d[39] + 2 * d[19] * d[29] * d[33] * d[39] - 4 * d[23] * d[32] * d[33] * d[39] - 2 * d[21] * d[29] * d[34] * d[39] - 2 * d[20] * d[30] * d[34] * d[39] + 2 * d[23] * d[31] * d[34] * d[39] + 2 * d[22] * d[32] * d[34] * d[39] - 2 * d[22] * d[28] * d[35] * d[39] + 2 * d[23] * d[30] * d[35] * d[39] - 2 * d[19] * d[31] * d[35] * d[39] + 2 * d[21] * d[32] * d[35] * d[39] + 2 * d[25] * d[27] * d[29] * d[40] - 2 * d[24] * d[29] * d[30] * d[40] + 2 * d[26] * d[30] * d[31] * d[40] - 2 * d[25] * std::pow(d[31], 2) * d[40] - 2 * d[26] * d[27] * d[32] * d[40] + 2 * d[24] * d[31] * d[32] * d[40] - 2 * d[21] * d[29] * d[33] * d[40] - 2 * d[20] * d[30] * d[33] * d[40] + 2 * d[23] * d[31] * d[33] * d[40] + 2 * d[22] * d[32] * d[33] * d[40] + 2 * d[20] * d[27] * d[34] * d[40] + 2 * d[18] * d[29] * d[34] * d[40] - 4 * d[22] * d[31] * d[34] * d[40] - 2 * d[23] * d[27] * d[35] * d[40] + 2 * d[22] * d[30] * d[35] * d[40] + 2 * d[21] * d[31] * d[35] * d[40] - 2 * d[18] * d[32] * d[35] * d[40] + 2 * d[26] * d[27] * d[28] * d[41] - 2 * d[26] * std::pow(d[30], 2) * d[41] - 2 * d[24] * d[28] * d[31] * d[41] + 2 * d[25] * d[30] * d[31] * d[41] - 2 * d[25] * d[27] * d[32] * d[41] + 2 * d[24] * d[30] * d[32] * d[41] - 2 * d[22] * d[28] * d[33] * d[41] + 2 * d[23] * d[30] * d[33] * d[41] - 2 * d[19] * d[31] * d[33] * d[41] + 2 * d[21] * d[32] * d[33] * d[41] - 2 * d[23] * d[27] * d[34] * d[41] + 2 * d[22] * d[30] * d[34] * d[41] + 2 * d[21] * d[31] * d[34] * d[41] - 2 * d[18] * d[32] * d[34] * d[41] + 2 * d[19] * d[27] * d[35] * d[41] + 2 * d[18] * d[28] * d[35] * d[41] - 4 * d[21] * d[30] * d[35] * d[41] - d[20] * d[27] * d[28] * d[43] - d[19] * d[27] * d[29] * d[43] - d[18] * d[28] * d[29] * d[43] + 2 * d[21] * d[29] * d[30] * d[43] + d[20] * std::pow(d[30], 2) * d[43] + 2 * d[22] * d[28] * d[31] * d[43] - 2 * d[23] * d[30] * d[31] * d[43] + d[19] * std::pow(d[31], 2) * d[43] + 2 * d[23] * d[27] * d[32] * d[43] - 2 * d[22] * d[30] * d[32] * d[43] - 2 * d[21] * d[31] * d[32] * d[43] + d[18] * std::pow(d[32], 2) * d[43];
    coeffs[29] = 2 * d[28] * d[29] * d[33] * d[39] - 2 * std::pow(d[32], 2) * d[33] * d[39] - 2 * d[29] * d[30] * d[34] * d[39] + 2 * d[31] * d[32] * d[34] * d[39] - 2 * d[28] * d[31] * d[35] * d[39] + 2 * d[30] * d[32] * d[35] * d[39] - 2 * d[29] * d[30] * d[33] * d[40] + 2 * d[31] * d[32] * d[33] * d[40] + 2 * d[27] * d[29] * d[34] * d[40] - 2 * std::pow(d[31], 2) * d[34] * d[40] + 2 * d[30] * d[31] * d[35] * d[40] - 2 * d[27] * d[32] * d[35] * d[40] - 2 * d[28] * d[31] * d[33] * d[41] + 2 * d[30] * d[32] * d[33] * d[41] + 2 * d[30] * d[31] * d[34] * d[41] - 2 * d[27] * d[32] * d[34] * d[41] + 2 * d[27] * d[28] * d[35] * d[41] - 2 * std::pow(d[30], 2) * d[35] * d[41] - d[27] * d[28] * d[29] * d[43] + d[29] * std::pow(d[30], 2) * d[43] + d[28] * std::pow(d[31], 2) * d[43] - 2 * d[30] * d[31] * d[32] * d[43] + d[27] * std::pow(d[32], 2) * d[43];
    coeffs[30] = 2 * d[6] * d[10] * d[11] * d[39] - 2 * d[7] * d[11] * d[12] * d[39] - 2 * d[8] * d[10] * d[13] * d[39] + 2 * d[8] * d[12] * d[14] * d[39] + 2 * d[7] * d[13] * d[14] * d[39] - 2 * d[6] * std::pow(d[14], 2) * d[39] + 2 * d[2] * d[10] * d[15] * d[39] + 2 * d[1] * d[11] * d[15] * d[39] - 4 * d[5] * d[14] * d[15] * d[39] - 2 * d[3] * d[11] * d[16] * d[39] - 2 * d[2] * d[12] * d[16] * d[39] + 2 * d[5] * d[13] * d[16] * d[39] + 2 * d[4] * d[14] * d[16] * d[39] - 2 * d[4] * d[10] * d[17] * d[39] + 2 * d[5] * d[12] * d[17] * d[39] - 2 * d[1] * d[13] * d[17] * d[39] + 2 * d[3] * d[14] * d[17] * d[39] + d[10] * d[11] * std::pow(d[39], 2) - std::pow(d[14], 2) * std::pow(d[39], 2) + 2 * d[7] * d[9] * d[11] * d[40] - 2 * d[6] * d[11] * d[12] * d[40] + 2 * d[8] * d[12] * d[13] * d[40] - 2 * d[7] * std::pow(d[13], 2) * d[40] - 2 * d[8] * d[9] * d[14] * d[40] + 2 * d[6] * d[13] * d[14] * d[40] - 2 * d[3] * d[11] * d[15] * d[40] - 2 * d[2] * d[12] * d[15] * d[40] + 2 * d[5] * d[13] * d[15] * d[40] + 2 * d[4] * d[14] * d[15] * d[40] + 2 * d[2] * d[9] * d[16] * d[40] + 2 * d[0] * d[11] * d[16] * d[40] - 4 * d[4] * d[13] * d[16] * d[40] - 2 * d[5] * d[9] * d[17] * d[40] + 2 * d[4] * d[12] * d[17] * d[40] + 2 * d[3] * d[13] * d[17] * d[40] - 2 * d[0] * d[14] * d[17] * d[40] - 2 * d[11] * d[12] * d[39] * d[40] + 2 * d[13] * d[14] * d[39] * d[40] + d[9] * d[11] * std::pow(d[40], 2) - std::pow(d[13], 2) * std::pow(d[40], 2) + 2 * d[8] * d[9] * d[10] * d[41] - 2 * d[8] * std::pow(d[12], 2) * d[41] - 2 * d[6] * d[10] * d[13] * d[41] + 2 * d[7] * d[12] * d[13] * d[41] - 2 * d[7] * d[9] * d[14] * d[41] + 2 * d[6] * d[12] * d[14] * d[41] - 2 * d[4] * d[10] * d[15] * d[41] + 2 * d[5] * d[12] * d[15] * d[41] - 2 * d[1] * d[13] * d[15] * d[41] + 2 * d[3] * d[14] * d[15] * d[41] - 2 * d[5] * d[9] * d[16] * d[41] + 2 * d[4] * d[12] * d[16] * d[41] + 2 * d[3] * d[13] * d[16] * d[41] - 2 * d[0] * d[14] * d[16] * d[41] + 2 * d[1] * d[9] * d[17] * d[41] + 2 * d[0] * d[10] * d[17] * d[41] - 4 * d[3] * d[12] * d[17] * d[41] - 2 * d[10] * d[13] * d[39] * d[41] + 2 * d[12] * d[14] * d[39] * d[41] + 2 * d[12] * d[13] * d[40] * d[41] - 2 * d[9] * d[14] * d[40] * d[41] + d[9] * d[10] * std::pow(d[41], 2) - std::pow(d[12], 2) * std::pow(d[41], 2) - d[2] * d[9] * d[10] * d[43] - d[1] * d[9] * d[11] * d[43] - d[0] * d[10] * d[11] * d[43] + 2 * d[3] * d[11] * d[12] * d[43] + d[2] * std::pow(d[12], 2) * d[43] + 2 * d[4] * d[10] * d[13] * d[43] - 2 * d[5] * d[12] * d[13] * d[43] + d[1] * std::pow(d[13], 2) * d[43] + 2 * d[5] * d[9] * d[14] * d[43] - 2 * d[4] * d[12] * d[14] * d[43] - 2 * d[3] * d[13] * d[14] * d[43] + d[0] * std::pow(d[14], 2) * d[43];
    coeffs[31] = 2 * d[6] * d[11] * d[19] * d[39] - 2 * d[8] * d[13] * d[19] * d[39] + 2 * d[2] * d[15] * d[19] * d[39] - 2 * d[4] * d[17] * d[19] * d[39] + 2 * d[6] * d[10] * d[20] * d[39] - 2 * d[7] * d[12] * d[20] * d[39] + 2 * d[1] * d[15] * d[20] * d[39] - 2 * d[3] * d[16] * d[20] * d[39] - 2 * d[7] * d[11] * d[21] * d[39] + 2 * d[8] * d[14] * d[21] * d[39] - 2 * d[2] * d[16] * d[21] * d[39] + 2 * d[5] * d[17] * d[21] * d[39] - 2 * d[8] * d[10] * d[22] * d[39] + 2 * d[7] * d[14] * d[22] * d[39] + 2 * d[5] * d[16] * d[22] * d[39] - 2 * d[1] * d[17] * d[22] * d[39] + 2 * d[8] * d[12] * d[23] * d[39] + 2 * d[7] * d[13] * d[23] * d[39] - 4 * d[6] * d[14] * d[23] * d[39] - 4 * d[5] * d[15] * d[23] * d[39] + 2 * d[4] * d[16] * d[23] * d[39] + 2 * d[3] * d[17] * d[23] * d[39] + 2 * d[2] * d[10] * d[24] * d[39] + 2 * d[1] * d[11] * d[24] * d[39] - 4 * d[5] * d[14] * d[24] * d[39] - 2 * d[3] * d[11] * d[25] * d[39] - 2 * d[2] * d[12] * d[25] * d[39] + 2 * d[5] * d[13] * d[25] * d[39] + 2 * d[4] * d[14] * d[25] * d[39] - 2 * d[4] * d[10] * d[26] * d[39] + 2 * d[5] * d[12] * d[26] * d[39] - 2 * d[1] * d[13] * d[26] * d[39] + 2 * d[3] * d[14] * d[26] * d[39] + d[11] * d[19] * std::pow(d[39], 2) + d[10] * d[20] * std::pow(d[39], 2) - 2 * d[14] * d[23] * std::pow(d[39], 2) + 2 * d[7] * d[11] * d[18] * d[40] - 2 * d[8] * d[14] * d[18] * d[40] + 2 * d[2] * d[16] * d[18] * d[40] - 2 * d[5] * d[17] * d[18] * d[40] + 2 * d[7] * d[9] * d[20] * d[40] - 2 * d[6] * d[12] * d[20] * d[40] - 2 * d[3] * d[15] * d[20] * d[40] + 2 * d[0] * d[16] * d[20] * d[40] - 2 * d[6] * d[11] * d[21] * d[40] + 2 * d[8] * d[13] * d[21] * d[40] - 2 * d[2] * d[15] * d[21] * d[40] + 2 * d[4] * d[17] * d[21] * d[40] + 2 * d[8] * d[12] * d[22] * d[40] - 4 * d[7] * d[13] * d[22] * d[40] + 2 * d[6] * d[14] * d[22] * d[40] + 2 * d[5] * d[15] * d[22] * d[40] - 4 * d[4] * d[16] * d[22] * d[40] + 2 * d[3] * d[17] * d[22] * d[40] - 2 * d[8] * d[9] * d[23] * d[40] + 2 * d[6] * d[13] * d[23] * d[40] + 2 * d[4] * d[15] * d[23] * d[40] - 2 * d[0] * d[17] * d[23] * d[40] - 2 * d[3] * d[11] * d[24] * d[40] - 2 * d[2] * d[12] * d[24] * d[40] + 2 * d[5] * d[13] * d[24] * d[40] + 2 * d[4] * d[14] * d[24] * d[40] + 2 * d[2] * d[9] * d[25] * d[40] + 2 * d[0] * d[11] * d[25] * d[40] - 4 * d[4] * d[13] * d[25] * d[40] - 2 * d[5] * d[9] * d[26] * d[40] + 2 * d[4] * d[12] * d[26] * d[40] + 2 * d[3] * d[13] * d[26] * d[40] - 2 * d[0] * d[14] * d[26] * d[40] - 2 * d[12] * d[20] * d[39] * d[40] - 2 * d[11] * d[21] * d[39] * d[40] + 2 * d[14] * d[22] * d[39] * d[40] + 2 * d[13] * d[23] * d[39] * d[40] + d[11] * d[18] * std::pow(d[40], 2) + d[9] * d[20] * std::pow(d[40], 2) - 2 * d[13] * d[22] * std::pow(d[40], 2) + 2 * d[8] * d[10] * d[18] * d[41] - 2 * d[7] * d[14] * d[18] * d[41] - 2 * d[5] * d[16] * d[18] * d[41] + 2 * d[1] * d[17] * d[18] * d[41] + 2 * d[8] * d[9] * d[19] * d[41] - 2 * d[6] * d[13] * d[19] * d[41] - 2 * d[4] * d[15] * d[19] * d[41] + 2 * d[0] * d[17] * d[19] * d[41] - 4 * d[8] * d[12] * d[21] * d[41] + 2 * d[7] * d[13] * d[21] * d[41] + 2 * d[6] * d[14] * d[21] * d[41] + 2 * d[5] * d[15] * d[21] * d[41] + 2 * d[4] * d[16] * d[21] * d[41] - 4 * d[3] * d[17] * d[21] * d[41] - 2 * d[6] * d[10] * d[22] * d[41] + 2 * d[7] * d[12] * d[22] * d[41] - 2 * d[1] * d[15] * d[22] * d[41] + 2 * d[3] * d[16] * d[22] * d[41] - 2 * d[7] * d[9] * d[23] * d[41] + 2 * d[6] * d[12] * d[23] * d[41] + 2 * d[3] * d[15] * d[23] * d[41] - 2 * d[0] * d[16] * d[23] * d[41] - 2 * d[4] * d[10] * d[24] * d[41] + 2 * d[5] * d[12] * d[24] * d[41] - 2 * d[1] * d[13] * d[24] * d[41] + 2 * d[3] * d[14] * d[24] * d[41] - 2 * d[5] * d[9] * d[25] * d[41] + 2 * d[4] * d[12] * d[25] * d[41] + 2 * d[3] * d[13] * d[25] * d[41] - 2 * d[0] * d[14] * d[25] * d[41] + 2 * d[1] * d[9] * d[26] * d[41] + 2 * d[0] * d[10] * d[26] * d[41] - 4 * d[3] * d[12] * d[26] * d[41] - 2 * d[13] * d[19] * d[39] * d[41] + 2 * d[14] * d[21] * d[39] * d[41] - 2 * d[10] * d[22] * d[39] * d[41] + 2 * d[12] * d[23] * d[39] * d[41] - 2 * d[14] * d[18] * d[40] * d[41] + 2 * d[13] * d[21] * d[40] * d[41] + 2 * d[12] * d[22] * d[40] * d[41] - 2 * d[9] * d[23] * d[40] * d[41] + d[10] * d[18] * std::pow(d[41], 2) + d[9] * d[19] * std::pow(d[41], 2) - 2 * d[12] * d[21] * std::pow(d[41], 2) - d[2] * d[10] * d[18] * d[43] - d[1] * d[11] * d[18] * d[43] + 2 * d[5] * d[14] * d[18] * d[43] - d[2] * d[9] * d[19] * d[43] - d[0] * d[11] * d[19] * d[43] + 2 * d[4] * d[13] * d[19] * d[43] - d[1] * d[9] * d[20] * d[43] - d[0] * d[10] * d[20] * d[43] + 2 * d[3] * d[12] * d[20] * d[43] + 2 * d[3] * d[11] * d[21] * d[43] + 2 * d[2] * d[12] * d[21] * d[43] - 2 * d[5] * d[13] * d[21] * d[43] - 2 * d[4] * d[14] * d[21] * d[43] + 2 * d[4] * d[10] * d[22] * d[43] - 2 * d[5] * d[12] * d[22] * d[43] + 2 * d[1] * d[13] * d[22] * d[43] - 2 * d[3] * d[14] * d[22] * d[43] + 2 * d[5] * d[9] * d[23] * d[43] - 2 * d[4] * d[12] * d[23] * d[43] - 2 * d[3] * d[13] * d[23] * d[43] + 2 * d[0] * d[14] * d[23] * d[43];
    coeffs[32] = 2 * d[6] * d[19] * d[20] * d[39] - 2 * d[7] * d[20] * d[21] * d[39] - 2 * d[8] * d[19] * d[22] * d[39] + 2 * d[8] * d[21] * d[23] * d[39] + 2 * d[7] * d[22] * d[23] * d[39] - 2 * d[6] * std::pow(d[23], 2) * d[39] + 2 * d[2] * d[19] * d[24] * d[39] + 2 * d[1] * d[20] * d[24] * d[39] - 4 * d[5] * d[23] * d[24] * d[39] - 2 * d[3] * d[20] * d[25] * d[39] - 2 * d[2] * d[21] * d[25] * d[39] + 2 * d[5] * d[22] * d[25] * d[39] + 2 * d[4] * d[23] * d[25] * d[39] - 2 * d[4] * d[19] * d[26] * d[39] + 2 * d[5] * d[21] * d[26] * d[39] - 2 * d[1] * d[22] * d[26] * d[39] + 2 * d[3] * d[23] * d[26] * d[39] + d[19] * d[20] * std::pow(d[39], 2) - std::pow(d[23], 2) * std::pow(d[39], 2) + 2 * d[7] * d[18] * d[20] * d[40] - 2 * d[6] * d[20] * d[21] * d[40] + 2 * d[8] * d[21] * d[22] * d[40] - 2 * d[7] * std::pow(d[22], 2) * d[40] - 2 * d[8] * d[18] * d[23] * d[40] + 2 * d[6] * d[22] * d[23] * d[40] - 2 * d[3] * d[20] * d[24] * d[40] - 2 * d[2] * d[21] * d[24] * d[40] + 2 * d[5] * d[22] * d[24] * d[40] + 2 * d[4] * d[23] * d[24] * d[40] + 2 * d[2] * d[18] * d[25] * d[40] + 2 * d[0] * d[20] * d[25] * d[40] - 4 * d[4] * d[22] * d[25] * d[40] - 2 * d[5] * d[18] * d[26] * d[40] + 2 * d[4] * d[21] * d[26] * d[40] + 2 * d[3] * d[22] * d[26] * d[40] - 2 * d[0] * d[23] * d[26] * d[40] - 2 * d[20] * d[21] * d[39] * d[40] + 2 * d[22] * d[23] * d[39] * d[40] + d[18] * d[20] * std::pow(d[40], 2) - std::pow(d[22], 2) * std::pow(d[40], 2) + 2 * d[8] * d[18] * d[19] * d[41] - 2 * d[8] * std::pow(d[21], 2) * d[41] - 2 * d[6] * d[19] * d[22] * d[41] + 2 * d[7] * d[21] * d[22] * d[41] - 2 * d[7] * d[18] * d[23] * d[41] + 2 * d[6] * d[21] * d[23] * d[41] - 2 * d[4] * d[19] * d[24] * d[41] + 2 * d[5] * d[21] * d[24] * d[41] - 2 * d[1] * d[22] * d[24] * d[41] + 2 * d[3] * d[23] * d[24] * d[41] - 2 * d[5] * d[18] * d[25] * d[41] + 2 * d[4] * d[21] * d[25] * d[41] + 2 * d[3] * d[22] * d[25] * d[41] - 2 * d[0] * d[23] * d[25] * d[41] + 2 * d[1] * d[18] * d[26] * d[41] + 2 * d[0] * d[19] * d[26] * d[41] - 4 * d[3] * d[21] * d[26] * d[41] - 2 * d[19] * d[22] * d[39] * d[41] + 2 * d[21] * d[23] * d[39] * d[41] + 2 * d[21] * d[22] * d[40] * d[41] - 2 * d[18] * d[23] * d[40] * d[41] + d[18] * d[19] * std::pow(d[41], 2) - std::pow(d[21], 2) * std::pow(d[41], 2) - d[2] * d[18] * d[19] * d[43] - d[1] * d[18] * d[20] * d[43] - d[0] * d[19] * d[20] * d[43] + 2 * d[3] * d[20] * d[21] * d[43] + d[2] * std::pow(d[21], 2) * d[43] + 2 * d[4] * d[19] * d[22] * d[43] - 2 * d[5] * d[21] * d[22] * d[43] + d[1] * std::pow(d[22], 2) * d[43] + 2 * d[5] * d[18] * d[23] * d[43] - 2 * d[4] * d[21] * d[23] * d[43] - 2 * d[3] * d[22] * d[23] * d[43] + d[0] * std::pow(d[23], 2) * d[43];
    coeffs[33] = 2 * d[6] * d[11] * d[28] * d[39] - 2 * d[8] * d[13] * d[28] * d[39] + 2 * d[2] * d[15] * d[28] * d[39] - 2 * d[4] * d[17] * d[28] * d[39] + 2 * d[6] * d[10] * d[29] * d[39] - 2 * d[7] * d[12] * d[29] * d[39] + 2 * d[1] * d[15] * d[29] * d[39] - 2 * d[3] * d[16] * d[29] * d[39] - 2 * d[7] * d[11] * d[30] * d[39] + 2 * d[8] * d[14] * d[30] * d[39] - 2 * d[2] * d[16] * d[30] * d[39] + 2 * d[5] * d[17] * d[30] * d[39] - 2 * d[8] * d[10] * d[31] * d[39] + 2 * d[7] * d[14] * d[31] * d[39] + 2 * d[5] * d[16] * d[31] * d[39] - 2 * d[1] * d[17] * d[31] * d[39] + 2 * d[8] * d[12] * d[32] * d[39] + 2 * d[7] * d[13] * d[32] * d[39] - 4 * d[6] * d[14] * d[32] * d[39] - 4 * d[5] * d[15] * d[32] * d[39] + 2 * d[4] * d[16] * d[32] * d[39] + 2 * d[3] * d[17] * d[32] * d[39] + 2 * d[2] * d[10] * d[33] * d[39] + 2 * d[1] * d[11] * d[33] * d[39] - 4 * d[5] * d[14] * d[33] * d[39] - 2 * d[3] * d[11] * d[34] * d[39] - 2 * d[2] * d[12] * d[34] * d[39] + 2 * d[5] * d[13] * d[34] * d[39] + 2 * d[4] * d[14] * d[34] * d[39] - 2 * d[4] * d[10] * d[35] * d[39] + 2 * d[5] * d[12] * d[35] * d[39] - 2 * d[1] * d[13] * d[35] * d[39] + 2 * d[3] * d[14] * d[35] * d[39] + d[11] * d[28] * std::pow(d[39], 2) + d[10] * d[29] * std::pow(d[39], 2) - 2 * d[14] * d[32] * std::pow(d[39], 2) + 2 * d[7] * d[11] * d[27] * d[40] - 2 * d[8] * d[14] * d[27] * d[40] + 2 * d[2] * d[16] * d[27] * d[40] - 2 * d[5] * d[17] * d[27] * d[40] + 2 * d[7] * d[9] * d[29] * d[40] - 2 * d[6] * d[12] * d[29] * d[40] - 2 * d[3] * d[15] * d[29] * d[40] + 2 * d[0] * d[16] * d[29] * d[40] - 2 * d[6] * d[11] * d[30] * d[40] + 2 * d[8] * d[13] * d[30] * d[40] - 2 * d[2] * d[15] * d[30] * d[40] + 2 * d[4] * d[17] * d[30] * d[40] + 2 * d[8] * d[12] * d[31] * d[40] - 4 * d[7] * d[13] * d[31] * d[40] + 2 * d[6] * d[14] * d[31] * d[40] + 2 * d[5] * d[15] * d[31] * d[40] - 4 * d[4] * d[16] * d[31] * d[40] + 2 * d[3] * d[17] * d[31] * d[40] - 2 * d[8] * d[9] * d[32] * d[40] + 2 * d[6] * d[13] * d[32] * d[40] + 2 * d[4] * d[15] * d[32] * d[40] - 2 * d[0] * d[17] * d[32] * d[40] - 2 * d[3] * d[11] * d[33] * d[40] - 2 * d[2] * d[12] * d[33] * d[40] + 2 * d[5] * d[13] * d[33] * d[40] + 2 * d[4] * d[14] * d[33] * d[40] + 2 * d[2] * d[9] * d[34] * d[40] + 2 * d[0] * d[11] * d[34] * d[40] - 4 * d[4] * d[13] * d[34] * d[40] - 2 * d[5] * d[9] * d[35] * d[40] + 2 * d[4] * d[12] * d[35] * d[40] + 2 * d[3] * d[13] * d[35] * d[40] - 2 * d[0] * d[14] * d[35] * d[40] - 2 * d[12] * d[29] * d[39] * d[40] - 2 * d[11] * d[30] * d[39] * d[40] + 2 * d[14] * d[31] * d[39] * d[40] + 2 * d[13] * d[32] * d[39] * d[40] + d[11] * d[27] * std::pow(d[40], 2) + d[9] * d[29] * std::pow(d[40], 2) - 2 * d[13] * d[31] * std::pow(d[40], 2) + 2 * d[8] * d[10] * d[27] * d[41] - 2 * d[7] * d[14] * d[27] * d[41] - 2 * d[5] * d[16] * d[27] * d[41] + 2 * d[1] * d[17] * d[27] * d[41] + 2 * d[8] * d[9] * d[28] * d[41] - 2 * d[6] * d[13] * d[28] * d[41] - 2 * d[4] * d[15] * d[28] * d[41] + 2 * d[0] * d[17] * d[28] * d[41] - 4 * d[8] * d[12] * d[30] * d[41] + 2 * d[7] * d[13] * d[30] * d[41] + 2 * d[6] * d[14] * d[30] * d[41] + 2 * d[5] * d[15] * d[30] * d[41] + 2 * d[4] * d[16] * d[30] * d[41] - 4 * d[3] * d[17] * d[30] * d[41] - 2 * d[6] * d[10] * d[31] * d[41] + 2 * d[7] * d[12] * d[31] * d[41] - 2 * d[1] * d[15] * d[31] * d[41] + 2 * d[3] * d[16] * d[31] * d[41] - 2 * d[7] * d[9] * d[32] * d[41] + 2 * d[6] * d[12] * d[32] * d[41] + 2 * d[3] * d[15] * d[32] * d[41] - 2 * d[0] * d[16] * d[32] * d[41] - 2 * d[4] * d[10] * d[33] * d[41] + 2 * d[5] * d[12] * d[33] * d[41] - 2 * d[1] * d[13] * d[33] * d[41] + 2 * d[3] * d[14] * d[33] * d[41] - 2 * d[5] * d[9] * d[34] * d[41] + 2 * d[4] * d[12] * d[34] * d[41] + 2 * d[3] * d[13] * d[34] * d[41] - 2 * d[0] * d[14] * d[34] * d[41] + 2 * d[1] * d[9] * d[35] * d[41] + 2 * d[0] * d[10] * d[35] * d[41] - 4 * d[3] * d[12] * d[35] * d[41] - 2 * d[13] * d[28] * d[39] * d[41] + 2 * d[14] * d[30] * d[39] * d[41] - 2 * d[10] * d[31] * d[39] * d[41] + 2 * d[12] * d[32] * d[39] * d[41] - 2 * d[14] * d[27] * d[40] * d[41] + 2 * d[13] * d[30] * d[40] * d[41] + 2 * d[12] * d[31] * d[40] * d[41] - 2 * d[9] * d[32] * d[40] * d[41] + d[10] * d[27] * std::pow(d[41], 2) + d[9] * d[28] * std::pow(d[41], 2) - 2 * d[12] * d[30] * std::pow(d[41], 2) - d[2] * d[10] * d[27] * d[43] - d[1] * d[11] * d[27] * d[43] + 2 * d[5] * d[14] * d[27] * d[43] - d[2] * d[9] * d[28] * d[43] - d[0] * d[11] * d[28] * d[43] + 2 * d[4] * d[13] * d[28] * d[43] - d[1] * d[9] * d[29] * d[43] - d[0] * d[10] * d[29] * d[43] + 2 * d[3] * d[12] * d[29] * d[43] + 2 * d[3] * d[11] * d[30] * d[43] + 2 * d[2] * d[12] * d[30] * d[43] - 2 * d[5] * d[13] * d[30] * d[43] - 2 * d[4] * d[14] * d[30] * d[43] + 2 * d[4] * d[10] * d[31] * d[43] - 2 * d[5] * d[12] * d[31] * d[43] + 2 * d[1] * d[13] * d[31] * d[43] - 2 * d[3] * d[14] * d[31] * d[43] + 2 * d[5] * d[9] * d[32] * d[43] - 2 * d[4] * d[12] * d[32] * d[43] - 2 * d[3] * d[13] * d[32] * d[43] + 2 * d[0] * d[14] * d[32] * d[43];
    coeffs[34] = 2 * d[6] * d[20] * d[28] * d[39] - 2 * d[8] * d[22] * d[28] * d[39] + 2 * d[2] * d[24] * d[28] * d[39] - 2 * d[4] * d[26] * d[28] * d[39] + 2 * d[6] * d[19] * d[29] * d[39] - 2 * d[7] * d[21] * d[29] * d[39] + 2 * d[1] * d[24] * d[29] * d[39] - 2 * d[3] * d[25] * d[29] * d[39] - 2 * d[7] * d[20] * d[30] * d[39] + 2 * d[8] * d[23] * d[30] * d[39] - 2 * d[2] * d[25] * d[30] * d[39] + 2 * d[5] * d[26] * d[30] * d[39] - 2 * d[8] * d[19] * d[31] * d[39] + 2 * d[7] * d[23] * d[31] * d[39] + 2 * d[5] * d[25] * d[31] * d[39] - 2 * d[1] * d[26] * d[31] * d[39] + 2 * d[8] * d[21] * d[32] * d[39] + 2 * d[7] * d[22] * d[32] * d[39] - 4 * d[6] * d[23] * d[32] * d[39] - 4 * d[5] * d[24] * d[32] * d[39] + 2 * d[4] * d[25] * d[32] * d[39] + 2 * d[3] * d[26] * d[32] * d[39] + 2 * d[2] * d[19] * d[33] * d[39] + 2 * d[1] * d[20] * d[33] * d[39] - 4 * d[5] * d[23] * d[33] * d[39] - 2 * d[3] * d[20] * d[34] * d[39] - 2 * d[2] * d[21] * d[34] * d[39] + 2 * d[5] * d[22] * d[34] * d[39] + 2 * d[4] * d[23] * d[34] * d[39] - 2 * d[4] * d[19] * d[35] * d[39] + 2 * d[5] * d[21] * d[35] * d[39] - 2 * d[1] * d[22] * d[35] * d[39] + 2 * d[3] * d[23] * d[35] * d[39] + d[20] * d[28] * std::pow(d[39], 2) + d[19] * d[29] * std::pow(d[39], 2) - 2 * d[23] * d[32] * std::pow(d[39], 2) + 2 * d[7] * d[20] * d[27] * d[40] - 2 * d[8] * d[23] * d[27] * d[40] + 2 * d[2] * d[25] * d[27] * d[40] - 2 * d[5] * d[26] * d[27] * d[40] + 2 * d[7] * d[18] * d[29] * d[40] - 2 * d[6] * d[21] * d[29] * d[40] - 2 * d[3] * d[24] * d[29] * d[40] + 2 * d[0] * d[25] * d[29] * d[40] - 2 * d[6] * d[20] * d[30] * d[40] + 2 * d[8] * d[22] * d[30] * d[40] - 2 * d[2] * d[24] * d[30] * d[40] + 2 * d[4] * d[26] * d[30] * d[40] + 2 * d[8] * d[21] * d[31] * d[40] - 4 * d[7] * d[22] * d[31] * d[40] + 2 * d[6] * d[23] * d[31] * d[40] + 2 * d[5] * d[24] * d[31] * d[40] - 4 * d[4] * d[25] * d[31] * d[40] + 2 * d[3] * d[26] * d[31] * d[40] - 2 * d[8] * d[18] * d[32] * d[40] + 2 * d[6] * d[22] * d[32] * d[40] + 2 * d[4] * d[24] * d[32] * d[40] - 2 * d[0] * d[26] * d[32] * d[40] - 2 * d[3] * d[20] * d[33] * d[40] - 2 * d[2] * d[21] * d[33] * d[40] + 2 * d[5] * d[22] * d[33] * d[40] + 2 * d[4] * d[23] * d[33] * d[40] + 2 * d[2] * d[18] * d[34] * d[40] + 2 * d[0] * d[20] * d[34] * d[40] - 4 * d[4] * d[22] * d[34] * d[40] - 2 * d[5] * d[18] * d[35] * d[40] + 2 * d[4] * d[21] * d[35] * d[40] + 2 * d[3] * d[22] * d[35] * d[40] - 2 * d[0] * d[23] * d[35] * d[40] - 2 * d[21] * d[29] * d[39] * d[40] - 2 * d[20] * d[30] * d[39] * d[40] + 2 * d[23] * d[31] * d[39] * d[40] + 2 * d[22] * d[32] * d[39] * d[40] + d[20] * d[27] * std::pow(d[40], 2) + d[18] * d[29] * std::pow(d[40], 2) - 2 * d[22] * d[31] * std::pow(d[40], 2) + 2 * d[8] * d[19] * d[27] * d[41] - 2 * d[7] * d[23] * d[27] * d[41] - 2 * d[5] * d[25] * d[27] * d[41] + 2 * d[1] * d[26] * d[27] * d[41] + 2 * d[8] * d[18] * d[28] * d[41] - 2 * d[6] * d[22] * d[28] * d[41] - 2 * d[4] * d[24] * d[28] * d[41] + 2 * d[0] * d[26] * d[28] * d[41] - 4 * d[8] * d[21] * d[30] * d[41] + 2 * d[7] * d[22] * d[30] * d[41] + 2 * d[6] * d[23] * d[30] * d[41] + 2 * d[5] * d[24] * d[30] * d[41] + 2 * d[4] * d[25] * d[30] * d[41] - 4 * d[3] * d[26] * d[30] * d[41] - 2 * d[6] * d[19] * d[31] * d[41] + 2 * d[7] * d[21] * d[31] * d[41] - 2 * d[1] * d[24] * d[31] * d[41] + 2 * d[3] * d[25] * d[31] * d[41] - 2 * d[7] * d[18] * d[32] * d[41] + 2 * d[6] * d[21] * d[32] * d[41] + 2 * d[3] * d[24] * d[32] * d[41] - 2 * d[0] * d[25] * d[32] * d[41] - 2 * d[4] * d[19] * d[33] * d[41] + 2 * d[5] * d[21] * d[33] * d[41] - 2 * d[1] * d[22] * d[33] * d[41] + 2 * d[3] * d[23] * d[33] * d[41] - 2 * d[5] * d[18] * d[34] * d[41] + 2 * d[4] * d[21] * d[34] * d[41] + 2 * d[3] * d[22] * d[34] * d[41] - 2 * d[0] * d[23] * d[34] * d[41] + 2 * d[1] * d[18] * d[35] * d[41] + 2 * d[0] * d[19] * d[35] * d[41] - 4 * d[3] * d[21] * d[35] * d[41] - 2 * d[22] * d[28] * d[39] * d[41] + 2 * d[23] * d[30] * d[39] * d[41] - 2 * d[19] * d[31] * d[39] * d[41] + 2 * d[21] * d[32] * d[39] * d[41] - 2 * d[23] * d[27] * d[40] * d[41] + 2 * d[22] * d[30] * d[40] * d[41] + 2 * d[21] * d[31] * d[40] * d[41] - 2 * d[18] * d[32] * d[40] * d[41] + d[19] * d[27] * std::pow(d[41], 2) + d[18] * d[28] * std::pow(d[41], 2) - 2 * d[21] * d[30] * std::pow(d[41], 2) - d[2] * d[19] * d[27] * d[43] - d[1] * d[20] * d[27] * d[43] + 2 * d[5] * d[23] * d[27] * d[43] - d[2] * d[18] * d[28] * d[43] - d[0] * d[20] * d[28] * d[43] + 2 * d[4] * d[22] * d[28] * d[43] - d[1] * d[18] * d[29] * d[43] - d[0] * d[19] * d[29] * d[43] + 2 * d[3] * d[21] * d[29] * d[43] + 2 * d[3] * d[20] * d[30] * d[43] + 2 * d[2] * d[21] * d[30] * d[43] - 2 * d[5] * d[22] * d[30] * d[43] - 2 * d[4] * d[23] * d[30] * d[43] + 2 * d[4] * d[19] * d[31] * d[43] - 2 * d[5] * d[21] * d[31] * d[43] + 2 * d[1] * d[22] * d[31] * d[43] - 2 * d[3] * d[23] * d[31] * d[43] + 2 * d[5] * d[18] * d[32] * d[43] - 2 * d[4] * d[21] * d[32] * d[43] - 2 * d[3] * d[22] * d[32] * d[43] + 2 * d[0] * d[23] * d[32] * d[43];
    coeffs[35] = 2 * d[6] * d[28] * d[29] * d[39] - 2 * d[7] * d[29] * d[30] * d[39] - 2 * d[8] * d[28] * d[31] * d[39] + 2 * d[8] * d[30] * d[32] * d[39] + 2 * d[7] * d[31] * d[32] * d[39] - 2 * d[6] * std::pow(d[32], 2) * d[39] + 2 * d[2] * d[28] * d[33] * d[39] + 2 * d[1] * d[29] * d[33] * d[39] - 4 * d[5] * d[32] * d[33] * d[39] - 2 * d[3] * d[29] * d[34] * d[39] - 2 * d[2] * d[30] * d[34] * d[39] + 2 * d[5] * d[31] * d[34] * d[39] + 2 * d[4] * d[32] * d[34] * d[39] - 2 * d[4] * d[28] * d[35] * d[39] + 2 * d[5] * d[30] * d[35] * d[39] - 2 * d[1] * d[31] * d[35] * d[39] + 2 * d[3] * d[32] * d[35] * d[39] + d[28] * d[29] * std::pow(d[39], 2) - std::pow(d[32], 2) * std::pow(d[39], 2) + 2 * d[7] * d[27] * d[29] * d[40] - 2 * d[6] * d[29] * d[30] * d[40] + 2 * d[8] * d[30] * d[31] * d[40] - 2 * d[7] * std::pow(d[31], 2) * d[40] - 2 * d[8] * d[27] * d[32] * d[40] + 2 * d[6] * d[31] * d[32] * d[40] - 2 * d[3] * d[29] * d[33] * d[40] - 2 * d[2] * d[30] * d[33] * d[40] + 2 * d[5] * d[31] * d[33] * d[40] + 2 * d[4] * d[32] * d[33] * d[40] + 2 * d[2] * d[27] * d[34] * d[40] + 2 * d[0] * d[29] * d[34] * d[40] - 4 * d[4] * d[31] * d[34] * d[40] - 2 * d[5] * d[27] * d[35] * d[40] + 2 * d[4] * d[30] * d[35] * d[40] + 2 * d[3] * d[31] * d[35] * d[40] - 2 * d[0] * d[32] * d[35] * d[40] - 2 * d[29] * d[30] * d[39] * d[40] + 2 * d[31] * d[32] * d[39] * d[40] + d[27] * d[29] * std::pow(d[40], 2) - std::pow(d[31], 2) * std::pow(d[40], 2) + 2 * d[8] * d[27] * d[28] * d[41] - 2 * d[8] * std::pow(d[30], 2) * d[41] - 2 * d[6] * d[28] * d[31] * d[41] + 2 * d[7] * d[30] * d[31] * d[41] - 2 * d[7] * d[27] * d[32] * d[41] + 2 * d[6] * d[30] * d[32] * d[41] - 2 * d[4] * d[28] * d[33] * d[41] + 2 * d[5] * d[30] * d[33] * d[41] - 2 * d[1] * d[31] * d[33] * d[41] + 2 * d[3] * d[32] * d[33] * d[41] - 2 * d[5] * d[27] * d[34] * d[41] + 2 * d[4] * d[30] * d[34] * d[41] + 2 * d[3] * d[31] * d[34] * d[41] - 2 * d[0] * d[32] * d[34] * d[41] + 2 * d[1] * d[27] * d[35] * d[41] + 2 * d[0] * d[28] * d[35] * d[41] - 4 * d[3] * d[30] * d[35] * d[41] - 2 * d[28] * d[31] * d[39] * d[41] + 2 * d[30] * d[32] * d[39] * d[41] + 2 * d[30] * d[31] * d[40] * d[41] - 2 * d[27] * d[32] * d[40] * d[41] + d[27] * d[28] * std::pow(d[41], 2) - std::pow(d[30], 2) * std::pow(d[41], 2) - d[2] * d[27] * d[28] * d[43] - d[1] * d[27] * d[29] * d[43] - d[0] * d[28] * d[29] * d[43] + 2 * d[3] * d[29] * d[30] * d[43] + d[2] * std::pow(d[30], 2) * d[43] + 2 * d[4] * d[28] * d[31] * d[43] - 2 * d[5] * d[30] * d[31] * d[43] + d[1] * std::pow(d[31], 2) * d[43] + 2 * d[5] * d[27] * d[32] * d[43] - 2 * d[4] * d[30] * d[32] * d[43] - 2 * d[3] * d[31] * d[32] * d[43] + d[0] * std::pow(d[32], 2) * d[43];
    coeffs[36] = 2 * d[2] * d[6] * d[10] * d[39] - 2 * d[4] * d[8] * d[10] * d[39] + 2 * d[1] * d[6] * d[11] * d[39] - 2 * d[3] * d[7] * d[11] * d[39] - 2 * d[2] * d[7] * d[12] * d[39] + 2 * d[5] * d[8] * d[12] * d[39] + 2 * d[5] * d[7] * d[13] * d[39] - 2 * d[1] * d[8] * d[13] * d[39] - 4 * d[5] * d[6] * d[14] * d[39] + 2 * d[4] * d[7] * d[14] * d[39] + 2 * d[3] * d[8] * d[14] * d[39] + 2 * d[1] * d[2] * d[15] * d[39] - 2 * std::pow(d[5], 2) * d[15] * d[39] - 2 * d[2] * d[3] * d[16] * d[39] + 2 * d[4] * d[5] * d[16] * d[39] - 2 * d[1] * d[4] * d[17] * d[39] + 2 * d[3] * d[5] * d[17] * d[39] + d[2] * d[10] * std::pow(d[39], 2) + d[1] * d[11] * std::pow(d[39], 2) - 2 * d[5] * d[14] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[9] * d[40] - 2 * d[5] * d[8] * d[9] * d[40] - 2 * d[3] * d[6] * d[11] * d[40] + 2 * d[0] * d[7] * d[11] * d[40] - 2 * d[2] * d[6] * d[12] * d[40] + 2 * d[4] * d[8] * d[12] * d[40] + 2 * d[5] * d[6] * d[13] * d[40] - 4 * d[4] * d[7] * d[13] * d[40] + 2 * d[3] * d[8] * d[13] * d[40] + 2 * d[4] * d[6] * d[14] * d[40] - 2 * d[0] * d[8] * d[14] * d[40] - 2 * d[2] * d[3] * d[15] * d[40] + 2 * d[4] * d[5] * d[15] * d[40] + 2 * d[0] * d[2] * d[16] * d[40] - 2 * std::pow(d[4], 2) * d[16] * d[40] + 2 * d[3] * d[4] * d[17] * d[40] - 2 * d[0] * d[5] * d[17] * d[40] - 2 * d[3] * d[11] * d[39] * d[40] - 2 * d[2] * d[12] * d[39] * d[40] + 2 * d[5] * d[13] * d[39] * d[40] + 2 * d[4] * d[14] * d[39] * d[40] + d[2] * d[9] * std::pow(d[40], 2) + d[0] * d[11] * std::pow(d[40], 2) - 2 * d[4] * d[13] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[9] * d[41] + 2 * d[1] * d[8] * d[9] * d[41] - 2 * d[4] * d[6] * d[10] * d[41] + 2 * d[0] * d[8] * d[10] * d[41] + 2 * d[5] * d[6] * d[12] * d[41] + 2 * d[4] * d[7] * d[12] * d[41] - 4 * d[3] * d[8] * d[12] * d[41] - 2 * d[1] * d[6] * d[13] * d[41] + 2 * d[3] * d[7] * d[13] * d[41] + 2 * d[3] * d[6] * d[14] * d[41] - 2 * d[0] * d[7] * d[14] * d[41] - 2 * d[1] * d[4] * d[15] * d[41] + 2 * d[3] * d[5] * d[15] * d[41] + 2 * d[3] * d[4] * d[16] * d[41] - 2 * d[0] * d[5] * d[16] * d[41] + 2 * d[0] * d[1] * d[17] * d[41] - 2 * std::pow(d[3], 2) * d[17] * d[41] - 2 * d[4] * d[10] * d[39] * d[41] + 2 * d[5] * d[12] * d[39] * d[41] - 2 * d[1] * d[13] * d[39] * d[41] + 2 * d[3] * d[14] * d[39] * d[41] - 2 * d[5] * d[9] * d[40] * d[41] + 2 * d[4] * d[12] * d[40] * d[41] + 2 * d[3] * d[13] * d[40] * d[41] - 2 * d[0] * d[14] * d[40] * d[41] + d[1] * d[9] * std::pow(d[41], 2) + d[0] * d[10] * std::pow(d[41], 2) - 2 * d[3] * d[12] * std::pow(d[41], 2) - d[1] * d[2] * d[9] * d[43] + std::pow(d[5], 2) * d[9] * d[43] - d[0] * d[2] * d[10] * d[43] + std::pow(d[4], 2) * d[10] * d[43] - d[0] * d[1] * d[11] * d[43] + std::pow(d[3], 2) * d[11] * d[43] + 2 * d[2] * d[3] * d[12] * d[43] - 2 * d[4] * d[5] * d[12] * d[43] + 2 * d[1] * d[4] * d[13] * d[43] - 2 * d[3] * d[5] * d[13] * d[43] - 2 * d[3] * d[4] * d[14] * d[43] + 2 * d[0] * d[5] * d[14] * d[43];
    coeffs[37] = 2 * d[2] * d[6] * d[19] * d[39] - 2 * d[4] * d[8] * d[19] * d[39] + 2 * d[1] * d[6] * d[20] * d[39] - 2 * d[3] * d[7] * d[20] * d[39] - 2 * d[2] * d[7] * d[21] * d[39] + 2 * d[5] * d[8] * d[21] * d[39] + 2 * d[5] * d[7] * d[22] * d[39] - 2 * d[1] * d[8] * d[22] * d[39] - 4 * d[5] * d[6] * d[23] * d[39] + 2 * d[4] * d[7] * d[23] * d[39] + 2 * d[3] * d[8] * d[23] * d[39] + 2 * d[1] * d[2] * d[24] * d[39] - 2 * std::pow(d[5], 2) * d[24] * d[39] - 2 * d[2] * d[3] * d[25] * d[39] + 2 * d[4] * d[5] * d[25] * d[39] - 2 * d[1] * d[4] * d[26] * d[39] + 2 * d[3] * d[5] * d[26] * d[39] + d[2] * d[19] * std::pow(d[39], 2) + d[1] * d[20] * std::pow(d[39], 2) - 2 * d[5] * d[23] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[18] * d[40] - 2 * d[5] * d[8] * d[18] * d[40] - 2 * d[3] * d[6] * d[20] * d[40] + 2 * d[0] * d[7] * d[20] * d[40] - 2 * d[2] * d[6] * d[21] * d[40] + 2 * d[4] * d[8] * d[21] * d[40] + 2 * d[5] * d[6] * d[22] * d[40] - 4 * d[4] * d[7] * d[22] * d[40] + 2 * d[3] * d[8] * d[22] * d[40] + 2 * d[4] * d[6] * d[23] * d[40] - 2 * d[0] * d[8] * d[23] * d[40] - 2 * d[2] * d[3] * d[24] * d[40] + 2 * d[4] * d[5] * d[24] * d[40] + 2 * d[0] * d[2] * d[25] * d[40] - 2 * std::pow(d[4], 2) * d[25] * d[40] + 2 * d[3] * d[4] * d[26] * d[40] - 2 * d[0] * d[5] * d[26] * d[40] - 2 * d[3] * d[20] * d[39] * d[40] - 2 * d[2] * d[21] * d[39] * d[40] + 2 * d[5] * d[22] * d[39] * d[40] + 2 * d[4] * d[23] * d[39] * d[40] + d[2] * d[18] * std::pow(d[40], 2) + d[0] * d[20] * std::pow(d[40], 2) - 2 * d[4] * d[22] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[18] * d[41] + 2 * d[1] * d[8] * d[18] * d[41] - 2 * d[4] * d[6] * d[19] * d[41] + 2 * d[0] * d[8] * d[19] * d[41] + 2 * d[5] * d[6] * d[21] * d[41] + 2 * d[4] * d[7] * d[21] * d[41] - 4 * d[3] * d[8] * d[21] * d[41] - 2 * d[1] * d[6] * d[22] * d[41] + 2 * d[3] * d[7] * d[22] * d[41] + 2 * d[3] * d[6] * d[23] * d[41] - 2 * d[0] * d[7] * d[23] * d[41] - 2 * d[1] * d[4] * d[24] * d[41] + 2 * d[3] * d[5] * d[24] * d[41] + 2 * d[3] * d[4] * d[25] * d[41] - 2 * d[0] * d[5] * d[25] * d[41] + 2 * d[0] * d[1] * d[26] * d[41] - 2 * std::pow(d[3], 2) * d[26] * d[41] - 2 * d[4] * d[19] * d[39] * d[41] + 2 * d[5] * d[21] * d[39] * d[41] - 2 * d[1] * d[22] * d[39] * d[41] + 2 * d[3] * d[23] * d[39] * d[41] - 2 * d[5] * d[18] * d[40] * d[41] + 2 * d[4] * d[21] * d[40] * d[41] + 2 * d[3] * d[22] * d[40] * d[41] - 2 * d[0] * d[23] * d[40] * d[41] + d[1] * d[18] * std::pow(d[41], 2) + d[0] * d[19] * std::pow(d[41], 2) - 2 * d[3] * d[21] * std::pow(d[41], 2) - d[1] * d[2] * d[18] * d[43] + std::pow(d[5], 2) * d[18] * d[43] - d[0] * d[2] * d[19] * d[43] + std::pow(d[4], 2) * d[19] * d[43] - d[0] * d[1] * d[20] * d[43] + std::pow(d[3], 2) * d[20] * d[43] + 2 * d[2] * d[3] * d[21] * d[43] - 2 * d[4] * d[5] * d[21] * d[43] + 2 * d[1] * d[4] * d[22] * d[43] - 2 * d[3] * d[5] * d[22] * d[43] - 2 * d[3] * d[4] * d[23] * d[43] + 2 * d[0] * d[5] * d[23] * d[43];
    coeffs[38] = 2 * d[2] * d[6] * d[28] * d[39] - 2 * d[4] * d[8] * d[28] * d[39] + 2 * d[1] * d[6] * d[29] * d[39] - 2 * d[3] * d[7] * d[29] * d[39] - 2 * d[2] * d[7] * d[30] * d[39] + 2 * d[5] * d[8] * d[30] * d[39] + 2 * d[5] * d[7] * d[31] * d[39] - 2 * d[1] * d[8] * d[31] * d[39] - 4 * d[5] * d[6] * d[32] * d[39] + 2 * d[4] * d[7] * d[32] * d[39] + 2 * d[3] * d[8] * d[32] * d[39] + 2 * d[1] * d[2] * d[33] * d[39] - 2 * std::pow(d[5], 2) * d[33] * d[39] - 2 * d[2] * d[3] * d[34] * d[39] + 2 * d[4] * d[5] * d[34] * d[39] - 2 * d[1] * d[4] * d[35] * d[39] + 2 * d[3] * d[5] * d[35] * d[39] + d[2] * d[28] * std::pow(d[39], 2) + d[1] * d[29] * std::pow(d[39], 2) - 2 * d[5] * d[32] * std::pow(d[39], 2) + 2 * d[2] * d[7] * d[27] * d[40] - 2 * d[5] * d[8] * d[27] * d[40] - 2 * d[3] * d[6] * d[29] * d[40] + 2 * d[0] * d[7] * d[29] * d[40] - 2 * d[2] * d[6] * d[30] * d[40] + 2 * d[4] * d[8] * d[30] * d[40] + 2 * d[5] * d[6] * d[31] * d[40] - 4 * d[4] * d[7] * d[31] * d[40] + 2 * d[3] * d[8] * d[31] * d[40] + 2 * d[4] * d[6] * d[32] * d[40] - 2 * d[0] * d[8] * d[32] * d[40] - 2 * d[2] * d[3] * d[33] * d[40] + 2 * d[4] * d[5] * d[33] * d[40] + 2 * d[0] * d[2] * d[34] * d[40] - 2 * std::pow(d[4], 2) * d[34] * d[40] + 2 * d[3] * d[4] * d[35] * d[40] - 2 * d[0] * d[5] * d[35] * d[40] - 2 * d[3] * d[29] * d[39] * d[40] - 2 * d[2] * d[30] * d[39] * d[40] + 2 * d[5] * d[31] * d[39] * d[40] + 2 * d[4] * d[32] * d[39] * d[40] + d[2] * d[27] * std::pow(d[40], 2) + d[0] * d[29] * std::pow(d[40], 2) - 2 * d[4] * d[31] * std::pow(d[40], 2) - 2 * d[5] * d[7] * d[27] * d[41] + 2 * d[1] * d[8] * d[27] * d[41] - 2 * d[4] * d[6] * d[28] * d[41] + 2 * d[0] * d[8] * d[28] * d[41] + 2 * d[5] * d[6] * d[30] * d[41] + 2 * d[4] * d[7] * d[30] * d[41] - 4 * d[3] * d[8] * d[30] * d[41] - 2 * d[1] * d[6] * d[31] * d[41] + 2 * d[3] * d[7] * d[31] * d[41] + 2 * d[3] * d[6] * d[32] * d[41] - 2 * d[0] * d[7] * d[32] * d[41] - 2 * d[1] * d[4] * d[33] * d[41] + 2 * d[3] * d[5] * d[33] * d[41] + 2 * d[3] * d[4] * d[34] * d[41] - 2 * d[0] * d[5] * d[34] * d[41] + 2 * d[0] * d[1] * d[35] * d[41] - 2 * std::pow(d[3], 2) * d[35] * d[41] - 2 * d[4] * d[28] * d[39] * d[41] + 2 * d[5] * d[30] * d[39] * d[41] - 2 * d[1] * d[31] * d[39] * d[41] + 2 * d[3] * d[32] * d[39] * d[41] - 2 * d[5] * d[27] * d[40] * d[41] + 2 * d[4] * d[30] * d[40] * d[41] + 2 * d[3] * d[31] * d[40] * d[41] - 2 * d[0] * d[32] * d[40] * d[41] + d[1] * d[27] * std::pow(d[41], 2) + d[0] * d[28] * std::pow(d[41], 2) - 2 * d[3] * d[30] * std::pow(d[41], 2) - d[1] * d[2] * d[27] * d[43] + std::pow(d[5], 2) * d[27] * d[43] - d[0] * d[2] * d[28] * d[43] + std::pow(d[4], 2) * d[28] * d[43] - d[0] * d[1] * d[29] * d[43] + std::pow(d[3], 2) * d[29] * d[43] + 2 * d[2] * d[3] * d[30] * d[43] - 2 * d[4] * d[5] * d[30] * d[43] + 2 * d[1] * d[4] * d[31] * d[43] - 2 * d[3] * d[5] * d[31] * d[43] - 2 * d[3] * d[4] * d[32] * d[43] + 2 * d[0] * d[5] * d[32] * d[43];
    coeffs[39] = 2 * d[1] * d[2] * d[6] * d[39] - 2 * std::pow(d[5], 2) * d[6] * d[39] - 2 * d[2] * d[3] * d[7] * d[39] + 2 * d[4] * d[5] * d[7] * d[39] - 2 * d[1] * d[4] * d[8] * d[39] + 2 * d[3] * d[5] * d[8] * d[39] + d[1] * d[2] * std::pow(d[39], 2) - std::pow(d[5], 2) * std::pow(d[39], 2) - 2 * d[2] * d[3] * d[6] * d[40] + 2 * d[4] * d[5] * d[6] * d[40] + 2 * d[0] * d[2] * d[7] * d[40] - 2 * std::pow(d[4], 2) * d[7] * d[40] + 2 * d[3] * d[4] * d[8] * d[40] - 2 * d[0] * d[5] * d[8] * d[40] - 2 * d[2] * d[3] * d[39] * d[40] + 2 * d[4] * d[5] * d[39] * d[40] + d[0] * d[2] * std::pow(d[40], 2) - std::pow(d[4], 2) * std::pow(d[40], 2) - 2 * d[1] * d[4] * d[6] * d[41] + 2 * d[3] * d[5] * d[6] * d[41] + 2 * d[3] * d[4] * d[7] * d[41] - 2 * d[0] * d[5] * d[7] * d[41] + 2 * d[0] * d[1] * d[8] * d[41] - 2 * std::pow(d[3], 2) * d[8] * d[41] - 2 * d[1] * d[4] * d[39] * d[41] + 2 * d[3] * d[5] * d[39] * d[41] + 2 * d[3] * d[4] * d[40] * d[41] - 2 * d[0] * d[5] * d[40] * d[41] + d[0] * d[1] * std::pow(d[41], 2) - std::pow(d[3], 2) * std::pow(d[41], 2) - d[0] * d[1] * d[2] * d[43] + d[2] * std::pow(d[3], 2) * d[43] + d[1] * std::pow(d[4], 2) * d[43] - 2 * d[3] * d[4] * d[5] * d[43] + d[0] * std::pow(d[5], 2) * d[43];
    coeffs[40] = d[10] * d[11] * std::pow(d[15], 2) - std::pow(d[14], 2) * std::pow(d[15], 2) - 2 * d[11] * d[12] * d[15] * d[16] + 2 * d[13] * d[14] * d[15] * d[16] + d[9] * d[11] * std::pow(d[16], 2) - std::pow(d[13], 2) * std::pow(d[16], 2) - 2 * d[10] * d[13] * d[15] * d[17] + 2 * d[12] * d[14] * d[15] * d[17] + 2 * d[12] * d[13] * d[16] * d[17] - 2 * d[9] * d[14] * d[16] * d[17] + d[9] * d[10] * std::pow(d[17], 2) - std::pow(d[12], 2) * std::pow(d[17], 2);
    coeffs[41] = d[11] * std::pow(d[16], 2) * d[18] - 2 * d[14] * d[16] * d[17] * d[18] + d[10] * std::pow(d[17], 2) * d[18] + d[11] * std::pow(d[15], 2) * d[19] - 2 * d[13] * d[15] * d[17] * d[19] + d[9] * std::pow(d[17], 2) * d[19] + d[10] * std::pow(d[15], 2) * d[20] - 2 * d[12] * d[15] * d[16] * d[20] + d[9] * std::pow(d[16], 2) * d[20] - 2 * d[11] * d[15] * d[16] * d[21] + 2 * d[14] * d[15] * d[17] * d[21] + 2 * d[13] * d[16] * d[17] * d[21] - 2 * d[12] * std::pow(d[17], 2) * d[21] + 2 * d[14] * d[15] * d[16] * d[22] - 2 * d[13] * std::pow(d[16], 2) * d[22] - 2 * d[10] * d[15] * d[17] * d[22] + 2 * d[12] * d[16] * d[17] * d[22] - 2 * d[14] * std::pow(d[15], 2) * d[23] + 2 * d[13] * d[15] * d[16] * d[23] + 2 * d[12] * d[15] * d[17] * d[23] - 2 * d[9] * d[16] * d[17] * d[23] + 2 * d[10] * d[11] * d[15] * d[24] - 2 * std::pow(d[14], 2) * d[15] * d[24] - 2 * d[11] * d[12] * d[16] * d[24] + 2 * d[13] * d[14] * d[16] * d[24] - 2 * d[10] * d[13] * d[17] * d[24] + 2 * d[12] * d[14] * d[17] * d[24] - 2 * d[11] * d[12] * d[15] * d[25] + 2 * d[13] * d[14] * d[15] * d[25] + 2 * d[9] * d[11] * d[16] * d[25] - 2 * std::pow(d[13], 2) * d[16] * d[25] + 2 * d[12] * d[13] * d[17] * d[25] - 2 * d[9] * d[14] * d[17] * d[25] - 2 * d[10] * d[13] * d[15] * d[26] + 2 * d[12] * d[14] * d[15] * d[26] + 2 * d[12] * d[13] * d[16] * d[26] - 2 * d[9] * d[14] * d[16] * d[26] + 2 * d[9] * d[10] * d[17] * d[26] - 2 * std::pow(d[12], 2) * d[17] * d[26];
    coeffs[42] = std::pow(d[17], 2) * d[18] * d[19] + std::pow(d[16], 2) * d[18] * d[20] + std::pow(d[15], 2) * d[19] * d[20] - 2 * d[15] * d[16] * d[20] * d[21] - std::pow(d[17], 2) * std::pow(d[21], 2) - 2 * d[15] * d[17] * d[19] * d[22] + 2 * d[16] * d[17] * d[21] * d[22] - std::pow(d[16], 2) * std::pow(d[22], 2) - 2 * d[16] * d[17] * d[18] * d[23] + 2 * d[15] * d[17] * d[21] * d[23] + 2 * d[15] * d[16] * d[22] * d[23] - std::pow(d[15], 2) * std::pow(d[23], 2) + 2 * d[11] * d[15] * d[19] * d[24] - 2 * d[13] * d[17] * d[19] * d[24] + 2 * d[10] * d[15] * d[20] * d[24] - 2 * d[12] * d[16] * d[20] * d[24] - 2 * d[11] * d[16] * d[21] * d[24] + 2 * d[14] * d[17] * d[21] * d[24] + 2 * d[14] * d[16] * d[22] * d[24] - 2 * d[10] * d[17] * d[22] * d[24] - 4 * d[14] * d[15] * d[23] * d[24] + 2 * d[13] * d[16] * d[23] * d[24] + 2 * d[12] * d[17] * d[23] * d[24] + d[10] * d[11] * std::pow(d[24], 2) - std::pow(d[14], 2) * std::pow(d[24], 2) + 2 * d[11] * d[16] * d[18] * d[25] - 2 * d[14] * d[17] * d[18] * d[25] - 2 * d[12] * d[15] * d[20] * d[25] + 2 * d[9] * d[16] * d[20] * d[25] - 2 * d[11] * d[15] * d[21] * d[25] + 2 * d[13] * d[17] * d[21] * d[25] + 2 * d[14] * d[15] * d[22] * d[25] - 4 * d[13] * d[16] * d[22] * d[25] + 2 * d[12] * d[17] * d[22] * d[25] + 2 * d[13] * d[15] * d[23] * d[25] - 2 * d[9] * d[17] * d[23] * d[25] - 2 * d[11] * d[12] * d[24] * d[25] + 2 * d[13] * d[14] * d[24] * d[25] + d[9] * d[11] * std::pow(d[25], 2) - std::pow(d[13], 2) * std::pow(d[25], 2) - 2 * d[14] * d[16] * d[18] * d[26] + 2 * d[10] * d[17] * d[18] * d[26] - 2 * d[13] * d[15] * d[19] * d[26] + 2 * d[9] * d[17] * d[19] * d[26] + 2 * d[14] * d[15] * d[21] * d[26] + 2 * d[13] * d[16] * d[21] * d[26] - 4 * d[12] * d[17] * d[21] * d[26] - 2 * d[10] * d[15] * d[22] * d[26] + 2 * d[12] * d[16] * d[22] * d[26] + 2 * d[12] * d[15] * d[23] * d[26] - 2 * d[9] * d[16] * d[23] * d[26] - 2 * d[10] * d[13] * d[24] * d[26] + 2 * d[12] * d[14] * d[24] * d[26] + 2 * d[12] * d[13] * d[25] * d[26] - 2 * d[9] * d[14] * d[25] * d[26] + d[9] * d[10] * std::pow(d[26], 2) - std::pow(d[12], 2) * std::pow(d[26], 2);
    coeffs[43] = 2 * d[15] * d[19] * d[20] * d[24] - 2 * d[16] * d[20] * d[21] * d[24] - 2 * d[17] * d[19] * d[22] * d[24] + 2 * d[17] * d[21] * d[23] * d[24] + 2 * d[16] * d[22] * d[23] * d[24] - 2 * d[15] * std::pow(d[23], 2) * d[24] + d[11] * d[19] * std::pow(d[24], 2) + d[10] * d[20] * std::pow(d[24], 2) - 2 * d[14] * d[23] * std::pow(d[24], 2) + 2 * d[16] * d[18] * d[20] * d[25] - 2 * d[15] * d[20] * d[21] * d[25] + 2 * d[17] * d[21] * d[22] * d[25] - 2 * d[16] * std::pow(d[22], 2) * d[25] - 2 * d[17] * d[18] * d[23] * d[25] + 2 * d[15] * d[22] * d[23] * d[25] - 2 * d[12] * d[20] * d[24] * d[25] - 2 * d[11] * d[21] * d[24] * d[25] + 2 * d[14] * d[22] * d[24] * d[25] + 2 * d[13] * d[23] * d[24] * d[25] + d[11] * d[18] * std::pow(d[25], 2) + d[9] * d[20] * std::pow(d[25], 2) - 2 * d[13] * d[22] * std::pow(d[25], 2) + 2 * d[17] * d[18] * d[19] * d[26] - 2 * d[17] * std::pow(d[21], 2) * d[26] - 2 * d[15] * d[19] * d[22] * d[26] + 2 * d[16] * d[21] * d[22] * d[26] - 2 * d[16] * d[18] * d[23] * d[26] + 2 * d[15] * d[21] * d[23] * d[26] - 2 * d[13] * d[19] * d[24] * d[26] + 2 * d[14] * d[21] * d[24] * d[26] - 2 * d[10] * d[22] * d[24] * d[26] + 2 * d[12] * d[23] * d[24] * d[26] - 2 * d[14] * d[18] * d[25] * d[26] + 2 * d[13] * d[21] * d[25] * d[26] + 2 * d[12] * d[22] * d[25] * d[26] - 2 * d[9] * d[23] * d[25] * d[26] + d[10] * d[18] * std::pow(d[26], 2) + d[9] * d[19] * std::pow(d[26], 2) - 2 * d[12] * d[21] * std::pow(d[26], 2);
    coeffs[44] = d[19] * d[20] * std::pow(d[24], 2) - std::pow(d[23], 2) * std::pow(d[24], 2) - 2 * d[20] * d[21] * d[24] * d[25] + 2 * d[22] * d[23] * d[24] * d[25] + d[18] * d[20] * std::pow(d[25], 2) - std::pow(d[22], 2) * std::pow(d[25], 2) - 2 * d[19] * d[22] * d[24] * d[26] + 2 * d[21] * d[23] * d[24] * d[26] + 2 * d[21] * d[22] * d[25] * d[26] - 2 * d[18] * d[23] * d[25] * d[26] + d[18] * d[19] * std::pow(d[26], 2) - std::pow(d[21], 2) * std::pow(d[26], 2);
    coeffs[45] = d[11] * std::pow(d[16], 2) * d[27] - 2 * d[14] * d[16] * d[17] * d[27] + d[10] * std::pow(d[17], 2) * d[27] + d[11] * std::pow(d[15], 2) * d[28] - 2 * d[13] * d[15] * d[17] * d[28] + d[9] * std::pow(d[17], 2) * d[28] + d[10] * std::pow(d[15], 2) * d[29] - 2 * d[12] * d[15] * d[16] * d[29] + d[9] * std::pow(d[16], 2) * d[29] - 2 * d[11] * d[15] * d[16] * d[30] + 2 * d[14] * d[15] * d[17] * d[30] + 2 * d[13] * d[16] * d[17] * d[30] - 2 * d[12] * std::pow(d[17], 2) * d[30] + 2 * d[14] * d[15] * d[16] * d[31] - 2 * d[13] * std::pow(d[16], 2) * d[31] - 2 * d[10] * d[15] * d[17] * d[31] + 2 * d[12] * d[16] * d[17] * d[31] - 2 * d[14] * std::pow(d[15], 2) * d[32] + 2 * d[13] * d[15] * d[16] * d[32] + 2 * d[12] * d[15] * d[17] * d[32] - 2 * d[9] * d[16] * d[17] * d[32] + 2 * d[10] * d[11] * d[15] * d[33] - 2 * std::pow(d[14], 2) * d[15] * d[33] - 2 * d[11] * d[12] * d[16] * d[33] + 2 * d[13] * d[14] * d[16] * d[33] - 2 * d[10] * d[13] * d[17] * d[33] + 2 * d[12] * d[14] * d[17] * d[33] - 2 * d[11] * d[12] * d[15] * d[34] + 2 * d[13] * d[14] * d[15] * d[34] + 2 * d[9] * d[11] * d[16] * d[34] - 2 * std::pow(d[13], 2) * d[16] * d[34] + 2 * d[12] * d[13] * d[17] * d[34] - 2 * d[9] * d[14] * d[17] * d[34] - 2 * d[10] * d[13] * d[15] * d[35] + 2 * d[12] * d[14] * d[15] * d[35] + 2 * d[12] * d[13] * d[16] * d[35] - 2 * d[9] * d[14] * d[16] * d[35] + 2 * d[9] * d[10] * d[17] * d[35] - 2 * std::pow(d[12], 2) * d[17] * d[35];
    coeffs[46] = std::pow(d[17], 2) * d[19] * d[27] + std::pow(d[16], 2) * d[20] * d[27] - 2 * d[16] * d[17] * d[23] * d[27] + 2 * d[11] * d[16] * d[25] * d[27] - 2 * d[14] * d[17] * d[25] * d[27] - 2 * d[14] * d[16] * d[26] * d[27] + 2 * d[10] * d[17] * d[26] * d[27] + std::pow(d[17], 2) * d[18] * d[28] + std::pow(d[15], 2) * d[20] * d[28] - 2 * d[15] * d[17] * d[22] * d[28] + 2 * d[11] * d[15] * d[24] * d[28] - 2 * d[13] * d[17] * d[24] * d[28] - 2 * d[13] * d[15] * d[26] * d[28] + 2 * d[9] * d[17] * d[26] * d[28] + std::pow(d[16], 2) * d[18] * d[29] + std::pow(d[15], 2) * d[19] * d[29] - 2 * d[15] * d[16] * d[21] * d[29] + 2 * d[10] * d[15] * d[24] * d[29] - 2 * d[12] * d[16] * d[24] * d[29] - 2 * d[12] * d[15] * d[25] * d[29] + 2 * d[9] * d[16] * d[25] * d[29] - 2 * d[15] * d[16] * d[20] * d[30] - 2 * std::pow(d[17], 2) * d[21] * d[30] + 2 * d[16] * d[17] * d[22] * d[30] + 2 * d[15] * d[17] * d[23] * d[30] - 2 * d[11] * d[16] * d[24] * d[30] + 2 * d[14] * d[17] * d[24] * d[30] - 2 * d[11] * d[15] * d[25] * d[30] + 2 * d[13] * d[17] * d[25] * d[30] + 2 * d[14] * d[15] * d[26] * d[30] + 2 * d[13] * d[16] * d[26] * d[30] - 4 * d[12] * d[17] * d[26] * d[30] - 2 * d[15] * d[17] * d[19] * d[31] + 2 * d[16] * d[17] * d[21] * d[31] - 2 * std::pow(d[16], 2) * d[22] * d[31] + 2 * d[15] * d[16] * d[23] * d[31] + 2 * d[14] * d[16] * d[24] * d[31] - 2 * d[10] * d[17] * d[24] * d[31] + 2 * d[14] * d[15] * d[25] * d[31] - 4 * d[13] * d[16] * d[25] * d[31] + 2 * d[12] * d[17] * d[25] * d[31] - 2 * d[10] * d[15] * d[26] * d[31] + 2 * d[12] * d[16] * d[26] * d[31] - 2 * d[16] * d[17] * d[18] * d[32] + 2 * d[15] * d[17] * d[21] * d[32] + 2 * d[15] * d[16] * d[22] * d[32] - 2 * std::pow(d[15], 2) * d[23] * d[32] - 4 * d[14] * d[15] * d[24] * d[32] + 2 * d[13] * d[16] * d[24] * d[32] + 2 * d[12] * d[17] * d[24] * d[32] + 2 * d[13] * d[15] * d[25] * d[32] - 2 * d[9] * d[17] * d[25] * d[32] + 2 * d[12] * d[15] * d[26] * d[32] - 2 * d[9] * d[16] * d[26] * d[32] + 2 * d[11] * d[15] * d[19] * d[33] - 2 * d[13] * d[17] * d[19] * d[33] + 2 * d[10] * d[15] * d[20] * d[33] - 2 * d[12] * d[16] * d[20] * d[33] - 2 * d[11] * d[16] * d[21] * d[33] + 2 * d[14] * d[17] * d[21] * d[33] + 2 * d[14] * d[16] * d[22] * d[33] - 2 * d[10] * d[17] * d[22] * d[33] - 4 * d[14] * d[15] * d[23] * d[33] + 2 * d[13] * d[16] * d[23] * d[33] + 2 * d[12] * d[17] * d[23] * d[33] + 2 * d[10] * d[11] * d[24] * d[33] - 2 * std::pow(d[14], 2) * d[24] * d[33] - 2 * d[11] * d[12] * d[25] * d[33] + 2 * d[13] * d[14] * d[25] * d[33] - 2 * d[10] * d[13] * d[26] * d[33] + 2 * d[12] * d[14] * d[26] * d[33] + 2 * d[11] * d[16] * d[18] * d[34] - 2 * d[14] * d[17] * d[18] * d[34] - 2 * d[12] * d[15] * d[20] * d[34] + 2 * d[9] * d[16] * d[20] * d[34] - 2 * d[11] * d[15] * d[21] * d[34] + 2 * d[13] * d[17] * d[21] * d[34] + 2 * d[14] * d[15] * d[22] * d[34] - 4 * d[13] * d[16] * d[22] * d[34] + 2 * d[12] * d[17] * d[22] * d[34] + 2 * d[13] * d[15] * d[23] * d[34] - 2 * d[9] * d[17] * d[23] * d[34] - 2 * d[11] * d[12] * d[24] * d[34] + 2 * d[13] * d[14] * d[24] * d[34] + 2 * d[9] * d[11] * d[25] * d[34] - 2 * std::pow(d[13], 2) * d[25] * d[34] + 2 * d[12] * d[13] * d[26] * d[34] - 2 * d[9] * d[14] * d[26] * d[34] - 2 * d[14] * d[16] * d[18] * d[35] + 2 * d[10] * d[17] * d[18] * d[35] - 2 * d[13] * d[15] * d[19] * d[35] + 2 * d[9] * d[17] * d[19] * d[35] + 2 * d[14] * d[15] * d[21] * d[35] + 2 * d[13] * d[16] * d[21] * d[35] - 4 * d[12] * d[17] * d[21] * d[35] - 2 * d[10] * d[15] * d[22] * d[35] + 2 * d[12] * d[16] * d[22] * d[35] + 2 * d[12] * d[15] * d[23] * d[35] - 2 * d[9] * d[16] * d[23] * d[35] - 2 * d[10] * d[13] * d[24] * d[35] + 2 * d[12] * d[14] * d[24] * d[35] + 2 * d[12] * d[13] * d[25] * d[35] - 2 * d[9] * d[14] * d[25] * d[35] + 2 * d[9] * d[10] * d[26] * d[35] - 2 * std::pow(d[12], 2) * d[26] * d[35];
    coeffs[47] = 2 * d[16] * d[20] * d[25] * d[27] - 2 * d[17] * d[23] * d[25] * d[27] + d[11] * std::pow(d[25], 2) * d[27] + 2 * d[17] * d[19] * d[26] * d[27] - 2 * d[16] * d[23] * d[26] * d[27] - 2 * d[14] * d[25] * d[26] * d[27] + d[10] * std::pow(d[26], 2) * d[27] + 2 * d[15] * d[20] * d[24] * d[28] - 2 * d[17] * d[22] * d[24] * d[28] + d[11] * std::pow(d[24], 2) * d[28] + 2 * d[17] * d[18] * d[26] * d[28] - 2 * d[15] * d[22] * d[26] * d[28] - 2 * d[13] * d[24] * d[26] * d[28] + d[9] * std::pow(d[26], 2) * d[28] + 2 * d[15] * d[19] * d[24] * d[29] - 2 * d[16] * d[21] * d[24] * d[29] + d[10] * std::pow(d[24], 2) * d[29] + 2 * d[16] * d[18] * d[25] * d[29] - 2 * d[15] * d[21] * d[25] * d[29] - 2 * d[12] * d[24] * d[25] * d[29] + d[9] * std::pow(d[25], 2) * d[29] - 2 * d[16] * d[20] * d[24] * d[30] + 2 * d[17] * d[23] * d[24] * d[30] - 2 * d[15] * d[20] * d[25] * d[30] + 2 * d[17] * d[22] * d[25] * d[30] - 2 * d[11] * d[24] * d[25] * d[30] - 4 * d[17] * d[21] * d[26] * d[30] + 2 * d[16] * d[22] * d[26] * d[30] + 2 * d[15] * d[23] * d[26] * d[30] + 2 * d[14] * d[24] * d[26] * d[30] + 2 * d[13] * d[25] * d[26] * d[30] - 2 * d[12] * std::pow(d[26], 2) * d[30] - 2 * d[17] * d[19] * d[24] * d[31] + 2 * d[16] * d[23] * d[24] * d[31] + 2 * d[17] * d[21] * d[25] * d[31] - 4 * d[16] * d[22] * d[25] * d[31] + 2 * d[15] * d[23] * d[25] * d[31] + 2 * d[14] * d[24] * d[25] * d[31] - 2 * d[13] * std::pow(d[25], 2) * d[31] - 2 * d[15] * d[19] * d[26] * d[31] + 2 * d[16] * d[21] * d[26] * d[31] - 2 * d[10] * d[24] * d[26] * d[31] + 2 * d[12] * d[25] * d[26] * d[31] + 2 * d[17] * d[21] * d[24] * d[32] + 2 * d[16] * d[22] * d[24] * d[32] - 4 * d[15] * d[23] * d[24] * d[32] - 2 * d[14] * std::pow(d[24], 2) * d[32] - 2 * d[17] * d[18] * d[25] * d[32] + 2 * d[15] * d[22] * d[25] * d[32] + 2 * d[13] * d[24] * d[25] * d[32] - 2 * d[16] * d[18] * d[26] * d[32] + 2 * d[15] * d[21] * d[26] * d[32] + 2 * d[12] * d[24] * d[26] * d[32] - 2 * d[9] * d[25] * d[26] * d[32] + 2 * d[15] * d[19] * d[20] * d[33] - 2 * d[16] * d[20] * d[21] * d[33] - 2 * d[17] * d[19] * d[22] * d[33] + 2 * d[17] * d[21] * d[23] * d[33] + 2 * d[16] * d[22] * d[23] * d[33] - 2 * d[15] * std::pow(d[23], 2) * d[33] + 2 * d[11] * d[19] * d[24] * d[33] + 2 * d[10] * d[20] * d[24] * d[33] - 4 * d[14] * d[23] * d[24] * d[33] - 2 * d[12] * d[20] * d[25] * d[33] - 2 * d[11] * d[21] * d[25] * d[33] + 2 * d[14] * d[22] * d[25] * d[33] + 2 * d[13] * d[23] * d[25] * d[33] - 2 * d[13] * d[19] * d[26] * d[33] + 2 * d[14] * d[21] * d[26] * d[33] - 2 * d[10] * d[22] * d[26] * d[33] + 2 * d[12] * d[23] * d[26] * d[33] + 2 * d[16] * d[18] * d[20] * d[34] - 2 * d[15] * d[20] * d[21] * d[34] + 2 * d[17] * d[21] * d[22] * d[34] - 2 * d[16] * std::pow(d[22], 2) * d[34] - 2 * d[17] * d[18] * d[23] * d[34] + 2 * d[15] * d[22] * d[23] * d[34] - 2 * d[12] * d[20] * d[24] * d[34] - 2 * d[11] * d[21] * d[24] * d[34] + 2 * d[14] * d[22] * d[24] * d[34] + 2 * d[13] * d[23] * d[24] * d[34] + 2 * d[11] * d[18] * d[25] * d[34] + 2 * d[9] * d[20] * d[25] * d[34] - 4 * d[13] * d[22] * d[25] * d[34] - 2 * d[14] * d[18] * d[26] * d[34] + 2 * d[13] * d[21] * d[26] * d[34] + 2 * d[12] * d[22] * d[26] * d[34] - 2 * d[9] * d[23] * d[26] * d[34] + 2 * d[17] * d[18] * d[19] * d[35] - 2 * d[17] * std::pow(d[21], 2) * d[35] - 2 * d[15] * d[19] * d[22] * d[35] + 2 * d[16] * d[21] * d[22] * d[35] - 2 * d[16] * d[18] * d[23] * d[35] + 2 * d[15] * d[21] * d[23] * d[35] - 2 * d[13] * d[19] * d[24] * d[35] + 2 * d[14] * d[21] * d[24] * d[35] - 2 * d[10] * d[22] * d[24] * d[35] + 2 * d[12] * d[23] * d[24] * d[35] - 2 * d[14] * d[18] * d[25] * d[35] + 2 * d[13] * d[21] * d[25] * d[35] + 2 * d[12] * d[22] * d[25] * d[35] - 2 * d[9] * d[23] * d[25] * d[35] + 2 * d[10] * d[18] * d[26] * d[35] + 2 * d[9] * d[19] * d[26] * d[35] - 4 * d[12] * d[21] * d[26] * d[35];
    coeffs[48] = d[20] * std::pow(d[25], 2) * d[27] - 2 * d[23] * d[25] * d[26] * d[27] + d[19] * std::pow(d[26], 2) * d[27] + d[20] * std::pow(d[24], 2) * d[28] - 2 * d[22] * d[24] * d[26] * d[28] + d[18] * std::pow(d[26], 2) * d[28] + d[19] * std::pow(d[24], 2) * d[29] - 2 * d[21] * d[24] * d[25] * d[29] + d[18] * std::pow(d[25], 2) * d[29] - 2 * d[20] * d[24] * d[25] * d[30] + 2 * d[23] * d[24] * d[26] * d[30] + 2 * d[22] * d[25] * d[26] * d[30] - 2 * d[21] * std::pow(d[26], 2) * d[30] + 2 * d[23] * d[24] * d[25] * d[31] - 2 * d[22] * std::pow(d[25], 2) * d[31] - 2 * d[19] * d[24] * d[26] * d[31] + 2 * d[21] * d[25] * d[26] * d[31] - 2 * d[23] * std::pow(d[24], 2) * d[32] + 2 * d[22] * d[24] * d[25] * d[32] + 2 * d[21] * d[24] * d[26] * d[32] - 2 * d[18] * d[25] * d[26] * d[32] + 2 * d[19] * d[20] * d[24] * d[33] - 2 * std::pow(d[23], 2) * d[24] * d[33] - 2 * d[20] * d[21] * d[25] * d[33] + 2 * d[22] * d[23] * d[25] * d[33] - 2 * d[19] * d[22] * d[26] * d[33] + 2 * d[21] * d[23] * d[26] * d[33] - 2 * d[20] * d[21] * d[24] * d[34] + 2 * d[22] * d[23] * d[24] * d[34] + 2 * d[18] * d[20] * d[25] * d[34] - 2 * std::pow(d[22], 2) * d[25] * d[34] + 2 * d[21] * d[22] * d[26] * d[34] - 2 * d[18] * d[23] * d[26] * d[34] - 2 * d[19] * d[22] * d[24] * d[35] + 2 * d[21] * d[23] * d[24] * d[35] + 2 * d[21] * d[22] * d[25] * d[35] - 2 * d[18] * d[23] * d[25] * d[35] + 2 * d[18] * d[19] * d[26] * d[35] - 2 * std::pow(d[21], 2) * d[26] * d[35];
    coeffs[49] = std::pow(d[17], 2) * d[27] * d[28] + std::pow(d[16], 2) * d[27] * d[29] + std::pow(d[15], 2) * d[28] * d[29] - 2 * d[15] * d[16] * d[29] * d[30] - std::pow(d[17], 2) * std::pow(d[30], 2) - 2 * d[15] * d[17] * d[28] * d[31] + 2 * d[16] * d[17] * d[30] * d[31] - std::pow(d[16], 2) * std::pow(d[31], 2) - 2 * d[16] * d[17] * d[27] * d[32] + 2 * d[15] * d[17] * d[30] * d[32] + 2 * d[15] * d[16] * d[31] * d[32] - std::pow(d[15], 2) * std::pow(d[32], 2) + 2 * d[11] * d[15] * d[28] * d[33] - 2 * d[13] * d[17] * d[28] * d[33] + 2 * d[10] * d[15] * d[29] * d[33] - 2 * d[12] * d[16] * d[29] * d[33] - 2 * d[11] * d[16] * d[30] * d[33] + 2 * d[14] * d[17] * d[30] * d[33] + 2 * d[14] * d[16] * d[31] * d[33] - 2 * d[10] * d[17] * d[31] * d[33] - 4 * d[14] * d[15] * d[32] * d[33] + 2 * d[13] * d[16] * d[32] * d[33] + 2 * d[12] * d[17] * d[32] * d[33] + d[10] * d[11] * std::pow(d[33], 2) - std::pow(d[14], 2) * std::pow(d[33], 2) + 2 * d[11] * d[16] * d[27] * d[34] - 2 * d[14] * d[17] * d[27] * d[34] - 2 * d[12] * d[15] * d[29] * d[34] + 2 * d[9] * d[16] * d[29] * d[34] - 2 * d[11] * d[15] * d[30] * d[34] + 2 * d[13] * d[17] * d[30] * d[34] + 2 * d[14] * d[15] * d[31] * d[34] - 4 * d[13] * d[16] * d[31] * d[34] + 2 * d[12] * d[17] * d[31] * d[34] + 2 * d[13] * d[15] * d[32] * d[34] - 2 * d[9] * d[17] * d[32] * d[34] - 2 * d[11] * d[12] * d[33] * d[34] + 2 * d[13] * d[14] * d[33] * d[34] + d[9] * d[11] * std::pow(d[34], 2) - std::pow(d[13], 2) * std::pow(d[34], 2) - 2 * d[14] * d[16] * d[27] * d[35] + 2 * d[10] * d[17] * d[27] * d[35] - 2 * d[13] * d[15] * d[28] * d[35] + 2 * d[9] * d[17] * d[28] * d[35] + 2 * d[14] * d[15] * d[30] * d[35] + 2 * d[13] * d[16] * d[30] * d[35] - 4 * d[12] * d[17] * d[30] * d[35] - 2 * d[10] * d[15] * d[31] * d[35] + 2 * d[12] * d[16] * d[31] * d[35] + 2 * d[12] * d[15] * d[32] * d[35] - 2 * d[9] * d[16] * d[32] * d[35] - 2 * d[10] * d[13] * d[33] * d[35] + 2 * d[12] * d[14] * d[33] * d[35] + 2 * d[12] * d[13] * d[34] * d[35] - 2 * d[9] * d[14] * d[34] * d[35] + d[9] * d[10] * std::pow(d[35], 2) - std::pow(d[12], 2) * std::pow(d[35], 2);
    coeffs[50] = 2 * d[17] * d[26] * d[27] * d[28] + 2 * d[16] * d[25] * d[27] * d[29] + 2 * d[15] * d[24] * d[28] * d[29] - 2 * d[16] * d[24] * d[29] * d[30] - 2 * d[15] * d[25] * d[29] * d[30] - 2 * d[17] * d[26] * std::pow(d[30], 2) - 2 * d[17] * d[24] * d[28] * d[31] - 2 * d[15] * d[26] * d[28] * d[31] + 2 * d[17] * d[25] * d[30] * d[31] + 2 * d[16] * d[26] * d[30] * d[31] - 2 * d[16] * d[25] * std::pow(d[31], 2) - 2 * d[17] * d[25] * d[27] * d[32] - 2 * d[16] * d[26] * d[27] * d[32] + 2 * d[17] * d[24] * d[30] * d[32] + 2 * d[15] * d[26] * d[30] * d[32] + 2 * d[16] * d[24] * d[31] * d[32] + 2 * d[15] * d[25] * d[31] * d[32] - 2 * d[15] * d[24] * std::pow(d[32], 2) + 2 * d[15] * d[20] * d[28] * d[33] - 2 * d[17] * d[22] * d[28] * d[33] + 2 * d[11] * d[24] * d[28] * d[33] - 2 * d[13] * d[26] * d[28] * d[33] + 2 * d[15] * d[19] * d[29] * d[33] - 2 * d[16] * d[21] * d[29] * d[33] + 2 * d[10] * d[24] * d[29] * d[33] - 2 * d[12] * d[25] * d[29] * d[33] - 2 * d[16] * d[20] * d[30] * d[33] + 2 * d[17] * d[23] * d[30] * d[33] - 2 * d[11] * d[25] * d[30] * d[33] + 2 * d[14] * d[26] * d[30] * d[33] - 2 * d[17] * d[19] * d[31] * d[33] + 2 * d[16] * d[23] * d[31] * d[33] + 2 * d[14] * d[25] * d[31] * d[33] - 2 * d[10] * d[26] * d[31] * d[33] + 2 * d[17] * d[21] * d[32] * d[33] + 2 * d[16] * d[22] * d[32] * d[33] - 4 * d[15] * d[23] * d[32] * d[33] - 4 * d[14] * d[24] * d[32] * d[33] + 2 * d[13] * d[25] * d[32] * d[33] + 2 * d[12] * d[26] * d[32] * d[33] + d[11] * d[19] * std::pow(d[33], 2) + d[10] * d[20] * std::pow(d[33], 2) - 2 * d[14] * d[23] * std::pow(d[33], 2) + 2 * d[16] * d[20] * d[27] * d[34] - 2 * d[17] * d[23] * d[27] * d[34] + 2 * d[11] * d[25] * d[27] * d[34] - 2 * d[14] * d[26] * d[27] * d[34] + 2 * d[16] * d[18] * d[29] * d[34] - 2 * d[15] * d[21] * d[29] * d[34] - 2 * d[12] * d[24] * d[29] * d[34] + 2 * d[9] * d[25] * d[29] * d[34] - 2 * d[15] * d[20] * d[30] * d[34] + 2 * d[17] * d[22] * d[30] * d[34] - 2 * d[11] * d[24] * d[30] * d[34] + 2 * d[13] * d[26] * d[30] * d[34] + 2 * d[17] * d[21] * d[31] * d[34] - 4 * d[16] * d[22] * d[31] * d[34] + 2 * d[15] * d[23] * d[31] * d[34] + 2 * d[14] * d[24] * d[31] * d[34] - 4 * d[13] * d[25] * d[31] * d[34] + 2 * d[12] * d[26] * d[31] * d[34] - 2 * d[17] * d[18] * d[32] * d[34] + 2 * d[15] * d[22] * d[32] * d[34] + 2 * d[13] * d[24] * d[32] * d[34] - 2 * d[9] * d[26] * d[32] * d[34] - 2 * d[12] * d[20] * d[33] * d[34] - 2 * d[11] * d[21] * d[33] * d[34] + 2 * d[14] * d[22] * d[33] * d[34] + 2 * d[13] * d[23] * d[33] * d[34] + d[11] * d[18] * std::pow(d[34], 2) + d[9] * d[20] * std::pow(d[34], 2) - 2 * d[13] * d[22] * std::pow(d[34], 2) + 2 * d[17] * d[19] * d[27] * d[35] - 2 * d[16] * d[23] * d[27] * d[35] - 2 * d[14] * d[25] * d[27] * d[35] + 2 * d[10] * d[26] * d[27] * d[35] + 2 * d[17] * d[18] * d[28] * d[35] - 2 * d[15] * d[22] * d[28] * d[35] - 2 * d[13] * d[24] * d[28] * d[35] + 2 * d[9] * d[26] * d[28] * d[35] - 4 * d[17] * d[21] * d[30] * d[35] + 2 * d[16] * d[22] * d[30] * d[35] + 2 * d[15] * d[23] * d[30] * d[35] + 2 * d[14] * d[24] * d[30] * d[35] + 2 * d[13] * d[25] * d[30] * d[35] - 4 * d[12] * d[26] * d[30] * d[35] - 2 * d[15] * d[19] * d[31] * d[35] + 2 * d[16] * d[21] * d[31] * d[35] - 2 * d[10] * d[24] * d[31] * d[35] + 2 * d[12] * d[25] * d[31] * d[35] - 2 * d[16] * d[18] * d[32] * d[35] + 2 * d[15] * d[21] * d[32] * d[35] + 2 * d[12] * d[24] * d[32] * d[35] - 2 * d[9] * d[25] * d[32] * d[35] - 2 * d[13] * d[19] * d[33] * d[35] + 2 * d[14] * d[21] * d[33] * d[35] - 2 * d[10] * d[22] * d[33] * d[35] + 2 * d[12] * d[23] * d[33] * d[35] - 2 * d[14] * d[18] * d[34] * d[35] + 2 * d[13] * d[21] * d[34] * d[35] + 2 * d[12] * d[22] * d[34] * d[35] - 2 * d[9] * d[23] * d[34] * d[35] + d[10] * d[18] * std::pow(d[35], 2) + d[9] * d[19] * std::pow(d[35], 2) - 2 * d[12] * d[21] * std::pow(d[35], 2);
    coeffs[51] = std::pow(d[26], 2) * d[27] * d[28] + std::pow(d[25], 2) * d[27] * d[29] + std::pow(d[24], 2) * d[28] * d[29] - 2 * d[24] * d[25] * d[29] * d[30] - std::pow(d[26], 2) * std::pow(d[30], 2) - 2 * d[24] * d[26] * d[28] * d[31] + 2 * d[25] * d[26] * d[30] * d[31] - std::pow(d[25], 2) * std::pow(d[31], 2) - 2 * d[25] * d[26] * d[27] * d[32] + 2 * d[24] * d[26] * d[30] * d[32] + 2 * d[24] * d[25] * d[31] * d[32] - std::pow(d[24], 2) * std::pow(d[32], 2) + 2 * d[20] * d[24] * d[28] * d[33] - 2 * d[22] * d[26] * d[28] * d[33] + 2 * d[19] * d[24] * d[29] * d[33] - 2 * d[21] * d[25] * d[29] * d[33] - 2 * d[20] * d[25] * d[30] * d[33] + 2 * d[23] * d[26] * d[30] * d[33] + 2 * d[23] * d[25] * d[31] * d[33] - 2 * d[19] * d[26] * d[31] * d[33] - 4 * d[23] * d[24] * d[32] * d[33] + 2 * d[22] * d[25] * d[32] * d[33] + 2 * d[21] * d[26] * d[32] * d[33] + d[19] * d[20] * std::pow(d[33], 2) - std::pow(d[23], 2) * std::pow(d[33], 2) + 2 * d[20] * d[25] * d[27] * d[34] - 2 * d[23] * d[26] * d[27] * d[34] - 2 * d[21] * d[24] * d[29] * d[34] + 2 * d[18] * d[25] * d[29] * d[34] - 2 * d[20] * d[24] * d[30] * d[34] + 2 * d[22] * d[26] * d[30] * d[34] + 2 * d[23] * d[24] * d[31] * d[34] - 4 * d[22] * d[25] * d[31] * d[34] + 2 * d[21] * d[26] * d[31] * d[34] + 2 * d[22] * d[24] * d[32] * d[34] - 2 * d[18] * d[26] * d[32] * d[34] - 2 * d[20] * d[21] * d[33] * d[34] + 2 * d[22] * d[23] * d[33] * d[34] + d[18] * d[20] * std::pow(d[34], 2) - std::pow(d[22], 2) * std::pow(d[34], 2) - 2 * d[23] * d[25] * d[27] * d[35] + 2 * d[19] * d[26] * d[27] * d[35] - 2 * d[22] * d[24] * d[28] * d[35] + 2 * d[18] * d[26] * d[28] * d[35] + 2 * d[23] * d[24] * d[30] * d[35] + 2 * d[22] * d[25] * d[30] * d[35] - 4 * d[21] * d[26] * d[30] * d[35] - 2 * d[19] * d[24] * d[31] * d[35] + 2 * d[21] * d[25] * d[31] * d[35] + 2 * d[21] * d[24] * d[32] * d[35] - 2 * d[18] * d[25] * d[32] * d[35] - 2 * d[19] * d[22] * d[33] * d[35] + 2 * d[21] * d[23] * d[33] * d[35] + 2 * d[21] * d[22] * d[34] * d[35] - 2 * d[18] * d[23] * d[34] * d[35] + d[18] * d[19] * std::pow(d[35], 2) - std::pow(d[21], 2) * std::pow(d[35], 2);
    coeffs[52] = 2 * d[15] * d[28] * d[29] * d[33] - 2 * d[16] * d[29] * d[30] * d[33] - 2 * d[17] * d[28] * d[31] * d[33] + 2 * d[17] * d[30] * d[32] * d[33] + 2 * d[16] * d[31] * d[32] * d[33] - 2 * d[15] * std::pow(d[32], 2) * d[33] + d[11] * d[28] * std::pow(d[33], 2) + d[10] * d[29] * std::pow(d[33], 2) - 2 * d[14] * d[32] * std::pow(d[33], 2) + 2 * d[16] * d[27] * d[29] * d[34] - 2 * d[15] * d[29] * d[30] * d[34] + 2 * d[17] * d[30] * d[31] * d[34] - 2 * d[16] * std::pow(d[31], 2) * d[34] - 2 * d[17] * d[27] * d[32] * d[34] + 2 * d[15] * d[31] * d[32] * d[34] - 2 * d[12] * d[29] * d[33] * d[34] - 2 * d[11] * d[30] * d[33] * d[34] + 2 * d[14] * d[31] * d[33] * d[34] + 2 * d[13] * d[32] * d[33] * d[34] + d[11] * d[27] * std::pow(d[34], 2) + d[9] * d[29] * std::pow(d[34], 2) - 2 * d[13] * d[31] * std::pow(d[34], 2) + 2 * d[17] * d[27] * d[28] * d[35] - 2 * d[17] * std::pow(d[30], 2) * d[35] - 2 * d[15] * d[28] * d[31] * d[35] + 2 * d[16] * d[30] * d[31] * d[35] - 2 * d[16] * d[27] * d[32] * d[35] + 2 * d[15] * d[30] * d[32] * d[35] - 2 * d[13] * d[28] * d[33] * d[35] + 2 * d[14] * d[30] * d[33] * d[35] - 2 * d[10] * d[31] * d[33] * d[35] + 2 * d[12] * d[32] * d[33] * d[35] - 2 * d[14] * d[27] * d[34] * d[35] + 2 * d[13] * d[30] * d[34] * d[35] + 2 * d[12] * d[31] * d[34] * d[35] - 2 * d[9] * d[32] * d[34] * d[35] + d[10] * d[27] * std::pow(d[35], 2) + d[9] * d[28] * std::pow(d[35], 2) - 2 * d[12] * d[30] * std::pow(d[35], 2);
    coeffs[53] = 2 * d[24] * d[28] * d[29] * d[33] - 2 * d[25] * d[29] * d[30] * d[33] - 2 * d[26] * d[28] * d[31] * d[33] + 2 * d[26] * d[30] * d[32] * d[33] + 2 * d[25] * d[31] * d[32] * d[33] - 2 * d[24] * std::pow(d[32], 2) * d[33] + d[20] * d[28] * std::pow(d[33], 2) + d[19] * d[29] * std::pow(d[33], 2) - 2 * d[23] * d[32] * std::pow(d[33], 2) + 2 * d[25] * d[27] * d[29] * d[34] - 2 * d[24] * d[29] * d[30] * d[34] + 2 * d[26] * d[30] * d[31] * d[34] - 2 * d[25] * std::pow(d[31], 2) * d[34] - 2 * d[26] * d[27] * d[32] * d[34] + 2 * d[24] * d[31] * d[32] * d[34] - 2 * d[21] * d[29] * d[33] * d[34] - 2 * d[20] * d[30] * d[33] * d[34] + 2 * d[23] * d[31] * d[33] * d[34] + 2 * d[22] * d[32] * d[33] * d[34] + d[20] * d[27] * std::pow(d[34], 2) + d[18] * d[29] * std::pow(d[34], 2) - 2 * d[22] * d[31] * std::pow(d[34], 2) + 2 * d[26] * d[27] * d[28] * d[35] - 2 * d[26] * std::pow(d[30], 2) * d[35] - 2 * d[24] * d[28] * d[31] * d[35] + 2 * d[25] * d[30] * d[31] * d[35] - 2 * d[25] * d[27] * d[32] * d[35] + 2 * d[24] * d[30] * d[32] * d[35] - 2 * d[22] * d[28] * d[33] * d[35] + 2 * d[23] * d[30] * d[33] * d[35] - 2 * d[19] * d[31] * d[33] * d[35] + 2 * d[21] * d[32] * d[33] * d[35] - 2 * d[23] * d[27] * d[34] * d[35] + 2 * d[22] * d[30] * d[34] * d[35] + 2 * d[21] * d[31] * d[34] * d[35] - 2 * d[18] * d[32] * d[34] * d[35] + d[19] * d[27] * std::pow(d[35], 2) + d[18] * d[28] * std::pow(d[35], 2) - 2 * d[21] * d[30] * std::pow(d[35], 2);
    coeffs[54] = d[28] * d[29] * std::pow(d[33], 2) - std::pow(d[32], 2) * std::pow(d[33], 2) - 2 * d[29] * d[30] * d[33] * d[34] + 2 * d[31] * d[32] * d[33] * d[34] + d[27] * d[29] * std::pow(d[34], 2) - std::pow(d[31], 2) * std::pow(d[34], 2) - 2 * d[28] * d[31] * d[33] * d[35] + 2 * d[30] * d[32] * d[33] * d[35] + 2 * d[30] * d[31] * d[34] * d[35] - 2 * d[27] * d[32] * d[34] * d[35] + d[27] * d[28] * std::pow(d[35], 2) - std::pow(d[30], 2) * std::pow(d[35], 2);
    coeffs[55] = 2 * d[6] * d[10] * d[11] * d[15] - 2 * d[7] * d[11] * d[12] * d[15] - 2 * d[8] * d[10] * d[13] * d[15] + 2 * d[8] * d[12] * d[14] * d[15] + 2 * d[7] * d[13] * d[14] * d[15] - 2 * d[6] * std::pow(d[14], 2) * d[15] + d[2] * d[10] * std::pow(d[15], 2) + d[1] * d[11] * std::pow(d[15], 2) - 2 * d[5] * d[14] * std::pow(d[15], 2) + 2 * d[7] * d[9] * d[11] * d[16] - 2 * d[6] * d[11] * d[12] * d[16] + 2 * d[8] * d[12] * d[13] * d[16] - 2 * d[7] * std::pow(d[13], 2) * d[16] - 2 * d[8] * d[9] * d[14] * d[16] + 2 * d[6] * d[13] * d[14] * d[16] - 2 * d[3] * d[11] * d[15] * d[16] - 2 * d[2] * d[12] * d[15] * d[16] + 2 * d[5] * d[13] * d[15] * d[16] + 2 * d[4] * d[14] * d[15] * d[16] + d[2] * d[9] * std::pow(d[16], 2) + d[0] * d[11] * std::pow(d[16], 2) - 2 * d[4] * d[13] * std::pow(d[16], 2) + 2 * d[8] * d[9] * d[10] * d[17] - 2 * d[8] * std::pow(d[12], 2) * d[17] - 2 * d[6] * d[10] * d[13] * d[17] + 2 * d[7] * d[12] * d[13] * d[17] - 2 * d[7] * d[9] * d[14] * d[17] + 2 * d[6] * d[12] * d[14] * d[17] - 2 * d[4] * d[10] * d[15] * d[17] + 2 * d[5] * d[12] * d[15] * d[17] - 2 * d[1] * d[13] * d[15] * d[17] + 2 * d[3] * d[14] * d[15] * d[17] - 2 * d[5] * d[9] * d[16] * d[17] + 2 * d[4] * d[12] * d[16] * d[17] + 2 * d[3] * d[13] * d[16] * d[17] - 2 * d[0] * d[14] * d[16] * d[17] + d[1] * d[9] * std::pow(d[17], 2) + d[0] * d[10] * std::pow(d[17], 2) - 2 * d[3] * d[12] * std::pow(d[17], 2) - d[9] * d[10] * d[11] * d[44] + d[11] * std::pow(d[12], 2) * d[44] + d[10] * std::pow(d[13], 2) * d[44] - 2 * d[12] * d[13] * d[14] * d[44] + d[9] * std::pow(d[14], 2) * d[44];
    coeffs[56] = 2 * d[7] * d[11] * d[16] * d[18] - 2 * d[8] * d[14] * d[16] * d[18] + d[2] * std::pow(d[16], 2) * d[18] + 2 * d[8] * d[10] * d[17] * d[18] - 2 * d[7] * d[14] * d[17] * d[18] - 2 * d[5] * d[16] * d[17] * d[18] + d[1] * std::pow(d[17], 2) * d[18] + 2 * d[6] * d[11] * d[15] * d[19] - 2 * d[8] * d[13] * d[15] * d[19] + d[2] * std::pow(d[15], 2) * d[19] + 2 * d[8] * d[9] * d[17] * d[19] - 2 * d[6] * d[13] * d[17] * d[19] - 2 * d[4] * d[15] * d[17] * d[19] + d[0] * std::pow(d[17], 2) * d[19] + 2 * d[6] * d[10] * d[15] * d[20] - 2 * d[7] * d[12] * d[15] * d[20] + d[1] * std::pow(d[15], 2) * d[20] + 2 * d[7] * d[9] * d[16] * d[20] - 2 * d[6] * d[12] * d[16] * d[20] - 2 * d[3] * d[15] * d[16] * d[20] + d[0] * std::pow(d[16], 2) * d[20] - 2 * d[7] * d[11] * d[15] * d[21] + 2 * d[8] * d[14] * d[15] * d[21] - 2 * d[6] * d[11] * d[16] * d[21] + 2 * d[8] * d[13] * d[16] * d[21] - 2 * d[2] * d[15] * d[16] * d[21] - 4 * d[8] * d[12] * d[17] * d[21] + 2 * d[7] * d[13] * d[17] * d[21] + 2 * d[6] * d[14] * d[17] * d[21] + 2 * d[5] * d[15] * d[17] * d[21] + 2 * d[4] * d[16] * d[17] * d[21] - 2 * d[3] * std::pow(d[17], 2) * d[21] - 2 * d[8] * d[10] * d[15] * d[22] + 2 * d[7] * d[14] * d[15] * d[22] + 2 * d[8] * d[12] * d[16] * d[22] - 4 * d[7] * d[13] * d[16] * d[22] + 2 * d[6] * d[14] * d[16] * d[22] + 2 * d[5] * d[15] * d[16] * d[22] - 2 * d[4] * std::pow(d[16], 2) * d[22] - 2 * d[6] * d[10] * d[17] * d[22] + 2 * d[7] * d[12] * d[17] * d[22] - 2 * d[1] * d[15] * d[17] * d[22] + 2 * d[3] * d[16] * d[17] * d[22] + 2 * d[8] * d[12] * d[15] * d[23] + 2 * d[7] * d[13] * d[15] * d[23] - 4 * d[6] * d[14] * d[15] * d[23] - 2 * d[5] * std::pow(d[15], 2) * d[23] - 2 * d[8] * d[9] * d[16] * d[23] + 2 * d[6] * d[13] * d[16] * d[23] + 2 * d[4] * d[15] * d[16] * d[23] - 2 * d[7] * d[9] * d[17] * d[23] + 2 * d[6] * d[12] * d[17] * d[23] + 2 * d[3] * d[15] * d[17] * d[23] - 2 * d[0] * d[16] * d[17] * d[23] + 2 * d[6] * d[10] * d[11] * d[24] - 2 * d[7] * d[11] * d[12] * d[24] - 2 * d[8] * d[10] * d[13] * d[24] + 2 * d[8] * d[12] * d[14] * d[24] + 2 * d[7] * d[13] * d[14] * d[24] - 2 * d[6] * std::pow(d[14], 2) * d[24] + 2 * d[2] * d[10] * d[15] * d[24] + 2 * d[1] * d[11] * d[15] * d[24] - 4 * d[5] * d[14] * d[15] * d[24] - 2 * d[3] * d[11] * d[16] * d[24] - 2 * d[2] * d[12] * d[16] * d[24] + 2 * d[5] * d[13] * d[16] * d[24] + 2 * d[4] * d[14] * d[16] * d[24] - 2 * d[4] * d[10] * d[17] * d[24] + 2 * d[5] * d[12] * d[17] * d[24] - 2 * d[1] * d[13] * d[17] * d[24] + 2 * d[3] * d[14] * d[17] * d[24] + 2 * d[7] * d[9] * d[11] * d[25] - 2 * d[6] * d[11] * d[12] * d[25] + 2 * d[8] * d[12] * d[13] * d[25] - 2 * d[7] * std::pow(d[13], 2) * d[25] - 2 * d[8] * d[9] * d[14] * d[25] + 2 * d[6] * d[13] * d[14] * d[25] - 2 * d[3] * d[11] * d[15] * d[25] - 2 * d[2] * d[12] * d[15] * d[25] + 2 * d[5] * d[13] * d[15] * d[25] + 2 * d[4] * d[14] * d[15] * d[25] + 2 * d[2] * d[9] * d[16] * d[25] + 2 * d[0] * d[11] * d[16] * d[25] - 4 * d[4] * d[13] * d[16] * d[25] - 2 * d[5] * d[9] * d[17] * d[25] + 2 * d[4] * d[12] * d[17] * d[25] + 2 * d[3] * d[13] * d[17] * d[25] - 2 * d[0] * d[14] * d[17] * d[25] + 2 * d[8] * d[9] * d[10] * d[26] - 2 * d[8] * std::pow(d[12], 2) * d[26] - 2 * d[6] * d[10] * d[13] * d[26] + 2 * d[7] * d[12] * d[13] * d[26] - 2 * d[7] * d[9] * d[14] * d[26] + 2 * d[6] * d[12] * d[14] * d[26] - 2 * d[4] * d[10] * d[15] * d[26] + 2 * d[5] * d[12] * d[15] * d[26] - 2 * d[1] * d[13] * d[15] * d[26] + 2 * d[3] * d[14] * d[15] * d[26] - 2 * d[5] * d[9] * d[16] * d[26] + 2 * d[4] * d[12] * d[16] * d[26] + 2 * d[3] * d[13] * d[16] * d[26] - 2 * d[0] * d[14] * d[16] * d[26] + 2 * d[1] * d[9] * d[17] * d[26] + 2 * d[0] * d[10] * d[17] * d[26] - 4 * d[3] * d[12] * d[17] * d[26] - d[10] * d[11] * d[18] * d[44] + std::pow(d[14], 2) * d[18] * d[44] - d[9] * d[11] * d[19] * d[44] + std::pow(d[13], 2) * d[19] * d[44] - d[9] * d[10] * d[20] * d[44] + std::pow(d[12], 2) * d[20] * d[44] + 2 * d[11] * d[12] * d[21] * d[44] - 2 * d[13] * d[14] * d[21] * d[44] + 2 * d[10] * d[13] * d[22] * d[44] - 2 * d[12] * d[14] * d[22] * d[44] - 2 * d[12] * d[13] * d[23] * d[44] + 2 * d[9] * d[14] * d[23] * d[44];
    coeffs[57] = 2 * d[8] * d[17] * d[18] * d[19] + 2 * d[7] * d[16] * d[18] * d[20] + 2 * d[6] * d[15] * d[19] * d[20] - 2 * d[7] * d[15] * d[20] * d[21] - 2 * d[6] * d[16] * d[20] * d[21] - 2 * d[8] * d[17] * std::pow(d[21], 2) - 2 * d[8] * d[15] * d[19] * d[22] - 2 * d[6] * d[17] * d[19] * d[22] + 2 * d[8] * d[16] * d[21] * d[22] + 2 * d[7] * d[17] * d[21] * d[22] - 2 * d[7] * d[16] * std::pow(d[22], 2) - 2 * d[8] * d[16] * d[18] * d[23] - 2 * d[7] * d[17] * d[18] * d[23] + 2 * d[8] * d[15] * d[21] * d[23] + 2 * d[6] * d[17] * d[21] * d[23] + 2 * d[7] * d[15] * d[22] * d[23] + 2 * d[6] * d[16] * d[22] * d[23] - 2 * d[6] * d[15] * std::pow(d[23], 2) + 2 * d[6] * d[11] * d[19] * d[24] - 2 * d[8] * d[13] * d[19] * d[24] + 2 * d[2] * d[15] * d[19] * d[24] - 2 * d[4] * d[17] * d[19] * d[24] + 2 * d[6] * d[10] * d[20] * d[24] - 2 * d[7] * d[12] * d[20] * d[24] + 2 * d[1] * d[15] * d[20] * d[24] - 2 * d[3] * d[16] * d[20] * d[24] - 2 * d[7] * d[11] * d[21] * d[24] + 2 * d[8] * d[14] * d[21] * d[24] - 2 * d[2] * d[16] * d[21] * d[24] + 2 * d[5] * d[17] * d[21] * d[24] - 2 * d[8] * d[10] * d[22] * d[24] + 2 * d[7] * d[14] * d[22] * d[24] + 2 * d[5] * d[16] * d[22] * d[24] - 2 * d[1] * d[17] * d[22] * d[24] + 2 * d[8] * d[12] * d[23] * d[24] + 2 * d[7] * d[13] * d[23] * d[24] - 4 * d[6] * d[14] * d[23] * d[24] - 4 * d[5] * d[15] * d[23] * d[24] + 2 * d[4] * d[16] * d[23] * d[24] + 2 * d[3] * d[17] * d[23] * d[24] + d[2] * d[10] * std::pow(d[24], 2) + d[1] * d[11] * std::pow(d[24], 2) - 2 * d[5] * d[14] * std::pow(d[24], 2) + 2 * d[7] * d[11] * d[18] * d[25] - 2 * d[8] * d[14] * d[18] * d[25] + 2 * d[2] * d[16] * d[18] * d[25] - 2 * d[5] * d[17] * d[18] * d[25] + 2 * d[7] * d[9] * d[20] * d[25] - 2 * d[6] * d[12] * d[20] * d[25] - 2 * d[3] * d[15] * d[20] * d[25] + 2 * d[0] * d[16] * d[20] * d[25] - 2 * d[6] * d[11] * d[21] * d[25] + 2 * d[8] * d[13] * d[21] * d[25] - 2 * d[2] * d[15] * d[21] * d[25] + 2 * d[4] * d[17] * d[21] * d[25] + 2 * d[8] * d[12] * d[22] * d[25] - 4 * d[7] * d[13] * d[22] * d[25] + 2 * d[6] * d[14] * d[22] * d[25] + 2 * d[5] * d[15] * d[22] * d[25] - 4 * d[4] * d[16] * d[22] * d[25] + 2 * d[3] * d[17] * d[22] * d[25] - 2 * d[8] * d[9] * d[23] * d[25] + 2 * d[6] * d[13] * d[23] * d[25] + 2 * d[4] * d[15] * d[23] * d[25] - 2 * d[0] * d[17] * d[23] * d[25] - 2 * d[3] * d[11] * d[24] * d[25] - 2 * d[2] * d[12] * d[24] * d[25] + 2 * d[5] * d[13] * d[24] * d[25] + 2 * d[4] * d[14] * d[24] * d[25] + d[2] * d[9] * std::pow(d[25], 2) + d[0] * d[11] * std::pow(d[25], 2) - 2 * d[4] * d[13] * std::pow(d[25], 2) + 2 * d[8] * d[10] * d[18] * d[26] - 2 * d[7] * d[14] * d[18] * d[26] - 2 * d[5] * d[16] * d[18] * d[26] + 2 * d[1] * d[17] * d[18] * d[26] + 2 * d[8] * d[9] * d[19] * d[26] - 2 * d[6] * d[13] * d[19] * d[26] - 2 * d[4] * d[15] * d[19] * d[26] + 2 * d[0] * d[17] * d[19] * d[26] - 4 * d[8] * d[12] * d[21] * d[26] + 2 * d[7] * d[13] * d[21] * d[26] + 2 * d[6] * d[14] * d[21] * d[26] + 2 * d[5] * d[15] * d[21] * d[26] + 2 * d[4] * d[16] * d[21] * d[26] - 4 * d[3] * d[17] * d[21] * d[26] - 2 * d[6] * d[10] * d[22] * d[26] + 2 * d[7] * d[12] * d[22] * d[26] - 2 * d[1] * d[15] * d[22] * d[26] + 2 * d[3] * d[16] * d[22] * d[26] - 2 * d[7] * d[9] * d[23] * d[26] + 2 * d[6] * d[12] * d[23] * d[26] + 2 * d[3] * d[15] * d[23] * d[26] - 2 * d[0] * d[16] * d[23] * d[26] - 2 * d[4] * d[10] * d[24] * d[26] + 2 * d[5] * d[12] * d[24] * d[26] - 2 * d[1] * d[13] * d[24] * d[26] + 2 * d[3] * d[14] * d[24] * d[26] - 2 * d[5] * d[9] * d[25] * d[26] + 2 * d[4] * d[12] * d[25] * d[26] + 2 * d[3] * d[13] * d[25] * d[26] - 2 * d[0] * d[14] * d[25] * d[26] + d[1] * d[9] * std::pow(d[26], 2) + d[0] * d[10] * std::pow(d[26], 2) - 2 * d[3] * d[12] * std::pow(d[26], 2) - d[11] * d[18] * d[19] * d[44] - d[10] * d[18] * d[20] * d[44] - d[9] * d[19] * d[20] * d[44] + 2 * d[12] * d[20] * d[21] * d[44] + d[11] * std::pow(d[21], 2) * d[44] + 2 * d[13] * d[19] * d[22] * d[44] - 2 * d[14] * d[21] * d[22] * d[44] + d[10] * std::pow(d[22], 2) * d[44] + 2 * d[14] * d[18] * d[23] * d[44] - 2 * d[13] * d[21] * d[23] * d[44] - 2 * d[12] * d[22] * d[23] * d[44] + d[9] * std::pow(d[23], 2) * d[44];
    coeffs[58] = 2 * d[6] * d[19] * d[20] * d[24] - 2 * d[7] * d[20] * d[21] * d[24] - 2 * d[8] * d[19] * d[22] * d[24] + 2 * d[8] * d[21] * d[23] * d[24] + 2 * d[7] * d[22] * d[23] * d[24] - 2 * d[6] * std::pow(d[23], 2) * d[24] + d[2] * d[19] * std::pow(d[24], 2) + d[1] * d[20] * std::pow(d[24], 2) - 2 * d[5] * d[23] * std::pow(d[24], 2) + 2 * d[7] * d[18] * d[20] * d[25] - 2 * d[6] * d[20] * d[21] * d[25] + 2 * d[8] * d[21] * d[22] * d[25] - 2 * d[7] * std::pow(d[22], 2) * d[25] - 2 * d[8] * d[18] * d[23] * d[25] + 2 * d[6] * d[22] * d[23] * d[25] - 2 * d[3] * d[20] * d[24] * d[25] - 2 * d[2] * d[21] * d[24] * d[25] + 2 * d[5] * d[22] * d[24] * d[25] + 2 * d[4] * d[23] * d[24] * d[25] + d[2] * d[18] * std::pow(d[25], 2) + d[0] * d[20] * std::pow(d[25], 2) - 2 * d[4] * d[22] * std::pow(d[25], 2) + 2 * d[8] * d[18] * d[19] * d[26] - 2 * d[8] * std::pow(d[21], 2) * d[26] - 2 * d[6] * d[19] * d[22] * d[26] + 2 * d[7] * d[21] * d[22] * d[26] - 2 * d[7] * d[18] * d[23] * d[26] + 2 * d[6] * d[21] * d[23] * d[26] - 2 * d[4] * d[19] * d[24] * d[26] + 2 * d[5] * d[21] * d[24] * d[26] - 2 * d[1] * d[22] * d[24] * d[26] + 2 * d[3] * d[23] * d[24] * d[26] - 2 * d[5] * d[18] * d[25] * d[26] + 2 * d[4] * d[21] * d[25] * d[26] + 2 * d[3] * d[22] * d[25] * d[26] - 2 * d[0] * d[23] * d[25] * d[26] + d[1] * d[18] * std::pow(d[26], 2) + d[0] * d[19] * std::pow(d[26], 2) - 2 * d[3] * d[21] * std::pow(d[26], 2) - d[18] * d[19] * d[20] * d[44] + d[20] * std::pow(d[21], 2) * d[44] + d[19] * std::pow(d[22], 2) * d[44] - 2 * d[21] * d[22] * d[23] * d[44] + d[18] * std::pow(d[23], 2) * d[44];
    coeffs[59] = 2 * d[7] * d[11] * d[16] * d[27] - 2 * d[8] * d[14] * d[16] * d[27] + d[2] * std::pow(d[16], 2) * d[27] + 2 * d[8] * d[10] * d[17] * d[27] - 2 * d[7] * d[14] * d[17] * d[27] - 2 * d[5] * d[16] * d[17] * d[27] + d[1] * std::pow(d[17], 2) * d[27] + 2 * d[6] * d[11] * d[15] * d[28] - 2 * d[8] * d[13] * d[15] * d[28] + d[2] * std::pow(d[15], 2) * d[28] + 2 * d[8] * d[9] * d[17] * d[28] - 2 * d[6] * d[13] * d[17] * d[28] - 2 * d[4] * d[15] * d[17] * d[28] + d[0] * std::pow(d[17], 2) * d[28] + 2 * d[6] * d[10] * d[15] * d[29] - 2 * d[7] * d[12] * d[15] * d[29] + d[1] * std::pow(d[15], 2) * d[29] + 2 * d[7] * d[9] * d[16] * d[29] - 2 * d[6] * d[12] * d[16] * d[29] - 2 * d[3] * d[15] * d[16] * d[29] + d[0] * std::pow(d[16], 2) * d[29] - 2 * d[7] * d[11] * d[15] * d[30] + 2 * d[8] * d[14] * d[15] * d[30] - 2 * d[6] * d[11] * d[16] * d[30] + 2 * d[8] * d[13] * d[16] * d[30] - 2 * d[2] * d[15] * d[16] * d[30] - 4 * d[8] * d[12] * d[17] * d[30] + 2 * d[7] * d[13] * d[17] * d[30] + 2 * d[6] * d[14] * d[17] * d[30] + 2 * d[5] * d[15] * d[17] * d[30] + 2 * d[4] * d[16] * d[17] * d[30] - 2 * d[3] * std::pow(d[17], 2) * d[30] - 2 * d[8] * d[10] * d[15] * d[31] + 2 * d[7] * d[14] * d[15] * d[31] + 2 * d[8] * d[12] * d[16] * d[31] - 4 * d[7] * d[13] * d[16] * d[31] + 2 * d[6] * d[14] * d[16] * d[31] + 2 * d[5] * d[15] * d[16] * d[31] - 2 * d[4] * std::pow(d[16], 2) * d[31] - 2 * d[6] * d[10] * d[17] * d[31] + 2 * d[7] * d[12] * d[17] * d[31] - 2 * d[1] * d[15] * d[17] * d[31] + 2 * d[3] * d[16] * d[17] * d[31] + 2 * d[8] * d[12] * d[15] * d[32] + 2 * d[7] * d[13] * d[15] * d[32] - 4 * d[6] * d[14] * d[15] * d[32] - 2 * d[5] * std::pow(d[15], 2) * d[32] - 2 * d[8] * d[9] * d[16] * d[32] + 2 * d[6] * d[13] * d[16] * d[32] + 2 * d[4] * d[15] * d[16] * d[32] - 2 * d[7] * d[9] * d[17] * d[32] + 2 * d[6] * d[12] * d[17] * d[32] + 2 * d[3] * d[15] * d[17] * d[32] - 2 * d[0] * d[16] * d[17] * d[32] + 2 * d[6] * d[10] * d[11] * d[33] - 2 * d[7] * d[11] * d[12] * d[33] - 2 * d[8] * d[10] * d[13] * d[33] + 2 * d[8] * d[12] * d[14] * d[33] + 2 * d[7] * d[13] * d[14] * d[33] - 2 * d[6] * std::pow(d[14], 2) * d[33] + 2 * d[2] * d[10] * d[15] * d[33] + 2 * d[1] * d[11] * d[15] * d[33] - 4 * d[5] * d[14] * d[15] * d[33] - 2 * d[3] * d[11] * d[16] * d[33] - 2 * d[2] * d[12] * d[16] * d[33] + 2 * d[5] * d[13] * d[16] * d[33] + 2 * d[4] * d[14] * d[16] * d[33] - 2 * d[4] * d[10] * d[17] * d[33] + 2 * d[5] * d[12] * d[17] * d[33] - 2 * d[1] * d[13] * d[17] * d[33] + 2 * d[3] * d[14] * d[17] * d[33] + 2 * d[7] * d[9] * d[11] * d[34] - 2 * d[6] * d[11] * d[12] * d[34] + 2 * d[8] * d[12] * d[13] * d[34] - 2 * d[7] * std::pow(d[13], 2) * d[34] - 2 * d[8] * d[9] * d[14] * d[34] + 2 * d[6] * d[13] * d[14] * d[34] - 2 * d[3] * d[11] * d[15] * d[34] - 2 * d[2] * d[12] * d[15] * d[34] + 2 * d[5] * d[13] * d[15] * d[34] + 2 * d[4] * d[14] * d[15] * d[34] + 2 * d[2] * d[9] * d[16] * d[34] + 2 * d[0] * d[11] * d[16] * d[34] - 4 * d[4] * d[13] * d[16] * d[34] - 2 * d[5] * d[9] * d[17] * d[34] + 2 * d[4] * d[12] * d[17] * d[34] + 2 * d[3] * d[13] * d[17] * d[34] - 2 * d[0] * d[14] * d[17] * d[34] + 2 * d[8] * d[9] * d[10] * d[35] - 2 * d[8] * std::pow(d[12], 2) * d[35] - 2 * d[6] * d[10] * d[13] * d[35] + 2 * d[7] * d[12] * d[13] * d[35] - 2 * d[7] * d[9] * d[14] * d[35] + 2 * d[6] * d[12] * d[14] * d[35] - 2 * d[4] * d[10] * d[15] * d[35] + 2 * d[5] * d[12] * d[15] * d[35] - 2 * d[1] * d[13] * d[15] * d[35] + 2 * d[3] * d[14] * d[15] * d[35] - 2 * d[5] * d[9] * d[16] * d[35] + 2 * d[4] * d[12] * d[16] * d[35] + 2 * d[3] * d[13] * d[16] * d[35] - 2 * d[0] * d[14] * d[16] * d[35] + 2 * d[1] * d[9] * d[17] * d[35] + 2 * d[0] * d[10] * d[17] * d[35] - 4 * d[3] * d[12] * d[17] * d[35] - d[10] * d[11] * d[27] * d[44] + std::pow(d[14], 2) * d[27] * d[44] - d[9] * d[11] * d[28] * d[44] + std::pow(d[13], 2) * d[28] * d[44] - d[9] * d[10] * d[29] * d[44] + std::pow(d[12], 2) * d[29] * d[44] + 2 * d[11] * d[12] * d[30] * d[44] - 2 * d[13] * d[14] * d[30] * d[44] + 2 * d[10] * d[13] * d[31] * d[44] - 2 * d[12] * d[14] * d[31] * d[44] - 2 * d[12] * d[13] * d[32] * d[44] + 2 * d[9] * d[14] * d[32] * d[44];
    coeffs[60] = 2 * d[8] * d[17] * d[19] * d[27] + 2 * d[7] * d[16] * d[20] * d[27] - 2 * d[8] * d[16] * d[23] * d[27] - 2 * d[7] * d[17] * d[23] * d[27] + 2 * d[7] * d[11] * d[25] * d[27] - 2 * d[8] * d[14] * d[25] * d[27] + 2 * d[2] * d[16] * d[25] * d[27] - 2 * d[5] * d[17] * d[25] * d[27] + 2 * d[8] * d[10] * d[26] * d[27] - 2 * d[7] * d[14] * d[26] * d[27] - 2 * d[5] * d[16] * d[26] * d[27] + 2 * d[1] * d[17] * d[26] * d[27] + 2 * d[8] * d[17] * d[18] * d[28] + 2 * d[6] * d[15] * d[20] * d[28] - 2 * d[8] * d[15] * d[22] * d[28] - 2 * d[6] * d[17] * d[22] * d[28] + 2 * d[6] * d[11] * d[24] * d[28] - 2 * d[8] * d[13] * d[24] * d[28] + 2 * d[2] * d[15] * d[24] * d[28] - 2 * d[4] * d[17] * d[24] * d[28] + 2 * d[8] * d[9] * d[26] * d[28] - 2 * d[6] * d[13] * d[26] * d[28] - 2 * d[4] * d[15] * d[26] * d[28] + 2 * d[0] * d[17] * d[26] * d[28] + 2 * d[7] * d[16] * d[18] * d[29] + 2 * d[6] * d[15] * d[19] * d[29] - 2 * d[7] * d[15] * d[21] * d[29] - 2 * d[6] * d[16] * d[21] * d[29] + 2 * d[6] * d[10] * d[24] * d[29] - 2 * d[7] * d[12] * d[24] * d[29] + 2 * d[1] * d[15] * d[24] * d[29] - 2 * d[3] * d[16] * d[24] * d[29] + 2 * d[7] * d[9] * d[25] * d[29] - 2 * d[6] * d[12] * d[25] * d[29] - 2 * d[3] * d[15] * d[25] * d[29] + 2 * d[0] * d[16] * d[25] * d[29] - 2 * d[7] * d[15] * d[20] * d[30] - 2 * d[6] * d[16] * d[20] * d[30] - 4 * d[8] * d[17] * d[21] * d[30] + 2 * d[8] * d[16] * d[22] * d[30] + 2 * d[7] * d[17] * d[22] * d[30] + 2 * d[8] * d[15] * d[23] * d[30] + 2 * d[6] * d[17] * d[23] * d[30] - 2 * d[7] * d[11] * d[24] * d[30] + 2 * d[8] * d[14] * d[24] * d[30] - 2 * d[2] * d[16] * d[24] * d[30] + 2 * d[5] * d[17] * d[24] * d[30] - 2 * d[6] * d[11] * d[25] * d[30] + 2 * d[8] * d[13] * d[25] * d[30] - 2 * d[2] * d[15] * d[25] * d[30] + 2 * d[4] * d[17] * d[25] * d[30] - 4 * d[8] * d[12] * d[26] * d[30] + 2 * d[7] * d[13] * d[26] * d[30] + 2 * d[6] * d[14] * d[26] * d[30] + 2 * d[5] * d[15] * d[26] * d[30] + 2 * d[4] * d[16] * d[26] * d[30] - 4 * d[3] * d[17] * d[26] * d[30] - 2 * d[8] * d[15] * d[19] * d[31] - 2 * d[6] * d[17] * d[19] * d[31] + 2 * d[8] * d[16] * d[21] * d[31] + 2 * d[7] * d[17] * d[21] * d[31] - 4 * d[7] * d[16] * d[22] * d[31] + 2 * d[7] * d[15] * d[23] * d[31] + 2 * d[6] * d[16] * d[23] * d[31] - 2 * d[8] * d[10] * d[24] * d[31] + 2 * d[7] * d[14] * d[24] * d[31] + 2 * d[5] * d[16] * d[24] * d[31] - 2 * d[1] * d[17] * d[24] * d[31] + 2 * d[8] * d[12] * d[25] * d[31] - 4 * d[7] * d[13] * d[25] * d[31] + 2 * d[6] * d[14] * d[25] * d[31] + 2 * d[5] * d[15] * d[25] * d[31] - 4 * d[4] * d[16] * d[25] * d[31] + 2 * d[3] * d[17] * d[25] * d[31] - 2 * d[6] * d[10] * d[26] * d[31] + 2 * d[7] * d[12] * d[26] * d[31] - 2 * d[1] * d[15] * d[26] * d[31] + 2 * d[3] * d[16] * d[26] * d[31] - 2 * d[8] * d[16] * d[18] * d[32] - 2 * d[7] * d[17] * d[18] * d[32] + 2 * d[8] * d[15] * d[21] * d[32] + 2 * d[6] * d[17] * d[21] * d[32] + 2 * d[7] * d[15] * d[22] * d[32] + 2 * d[6] * d[16] * d[22] * d[32] - 4 * d[6] * d[15] * d[23] * d[32] + 2 * d[8] * d[12] * d[24] * d[32] + 2 * d[7] * d[13] * d[24] * d[32] - 4 * d[6] * d[14] * d[24] * d[32] - 4 * d[5] * d[15] * d[24] * d[32] + 2 * d[4] * d[16] * d[24] * d[32] + 2 * d[3] * d[17] * d[24] * d[32] - 2 * d[8] * d[9] * d[25] * d[32] + 2 * d[6] * d[13] * d[25] * d[32] + 2 * d[4] * d[15] * d[25] * d[32] - 2 * d[0] * d[17] * d[25] * d[32] - 2 * d[7] * d[9] * d[26] * d[32] + 2 * d[6] * d[12] * d[26] * d[32] + 2 * d[3] * d[15] * d[26] * d[32] - 2 * d[0] * d[16] * d[26] * d[32] + 2 * d[6] * d[11] * d[19] * d[33] - 2 * d[8] * d[13] * d[19] * d[33] + 2 * d[2] * d[15] * d[19] * d[33] - 2 * d[4] * d[17] * d[19] * d[33] + 2 * d[6] * d[10] * d[20] * d[33] - 2 * d[7] * d[12] * d[20] * d[33] + 2 * d[1] * d[15] * d[20] * d[33] - 2 * d[3] * d[16] * d[20] * d[33] - 2 * d[7] * d[11] * d[21] * d[33] + 2 * d[8] * d[14] * d[21] * d[33] - 2 * d[2] * d[16] * d[21] * d[33] + 2 * d[5] * d[17] * d[21] * d[33] - 2 * d[8] * d[10] * d[22] * d[33] + 2 * d[7] * d[14] * d[22] * d[33] + 2 * d[5] * d[16] * d[22] * d[33] - 2 * d[1] * d[17] * d[22] * d[33] + 2 * d[8] * d[12] * d[23] * d[33] + 2 * d[7] * d[13] * d[23] * d[33] - 4 * d[6] * d[14] * d[23] * d[33] - 4 * d[5] * d[15] * d[23] * d[33] + 2 * d[4] * d[16] * d[23] * d[33] + 2 * d[3] * d[17] * d[23] * d[33] + 2 * d[2] * d[10] * d[24] * d[33] + 2 * d[1] * d[11] * d[24] * d[33] - 4 * d[5] * d[14] * d[24] * d[33] - 2 * d[3] * d[11] * d[25] * d[33] - 2 * d[2] * d[12] * d[25] * d[33] + 2 * d[5] * d[13] * d[25] * d[33] + 2 * d[4] * d[14] * d[25] * d[33] - 2 * d[4] * d[10] * d[26] * d[33] + 2 * d[5] * d[12] * d[26] * d[33] - 2 * d[1] * d[13] * d[26] * d[33] + 2 * d[3] * d[14] * d[26] * d[33] + 2 * d[7] * d[11] * d[18] * d[34] - 2 * d[8] * d[14] * d[18] * d[34] + 2 * d[2] * d[16] * d[18] * d[34] - 2 * d[5] * d[17] * d[18] * d[34] + 2 * d[7] * d[9] * d[20] * d[34] - 2 * d[6] * d[12] * d[20] * d[34] - 2 * d[3] * d[15] * d[20] * d[34] + 2 * d[0] * d[16] * d[20] * d[34] - 2 * d[6] * d[11] * d[21] * d[34] + 2 * d[8] * d[13] * d[21] * d[34] - 2 * d[2] * d[15] * d[21] * d[34] + 2 * d[4] * d[17] * d[21] * d[34] + 2 * d[8] * d[12] * d[22] * d[34] - 4 * d[7] * d[13] * d[22] * d[34] + 2 * d[6] * d[14] * d[22] * d[34] + 2 * d[5] * d[15] * d[22] * d[34] - 4 * d[4] * d[16] * d[22] * d[34] + 2 * d[3] * d[17] * d[22] * d[34] - 2 * d[8] * d[9] * d[23] * d[34] + 2 * d[6] * d[13] * d[23] * d[34] + 2 * d[4] * d[15] * d[23] * d[34] - 2 * d[0] * d[17] * d[23] * d[34] - 2 * d[3] * d[11] * d[24] * d[34] - 2 * d[2] * d[12] * d[24] * d[34] + 2 * d[5] * d[13] * d[24] * d[34] + 2 * d[4] * d[14] * d[24] * d[34] + 2 * d[2] * d[9] * d[25] * d[34] + 2 * d[0] * d[11] * d[25] * d[34] - 4 * d[4] * d[13] * d[25] * d[34] - 2 * d[5] * d[9] * d[26] * d[34] + 2 * d[4] * d[12] * d[26] * d[34] + 2 * d[3] * d[13] * d[26] * d[34] - 2 * d[0] * d[14] * d[26] * d[34] + 2 * d[8] * d[10] * d[18] * d[35] - 2 * d[7] * d[14] * d[18] * d[35] - 2 * d[5] * d[16] * d[18] * d[35] + 2 * d[1] * d[17] * d[18] * d[35] + 2 * d[8] * d[9] * d[19] * d[35] - 2 * d[6] * d[13] * d[19] * d[35] - 2 * d[4] * d[15] * d[19] * d[35] + 2 * d[0] * d[17] * d[19] * d[35] - 4 * d[8] * d[12] * d[21] * d[35] + 2 * d[7] * d[13] * d[21] * d[35] + 2 * d[6] * d[14] * d[21] * d[35] + 2 * d[5] * d[15] * d[21] * d[35] + 2 * d[4] * d[16] * d[21] * d[35] - 4 * d[3] * d[17] * d[21] * d[35] - 2 * d[6] * d[10] * d[22] * d[35] + 2 * d[7] * d[12] * d[22] * d[35] - 2 * d[1] * d[15] * d[22] * d[35] + 2 * d[3] * d[16] * d[22] * d[35] - 2 * d[7] * d[9] * d[23] * d[35] + 2 * d[6] * d[12] * d[23] * d[35] + 2 * d[3] * d[15] * d[23] * d[35] - 2 * d[0] * d[16] * d[23] * d[35] - 2 * d[4] * d[10] * d[24] * d[35] + 2 * d[5] * d[12] * d[24] * d[35] - 2 * d[1] * d[13] * d[24] * d[35] + 2 * d[3] * d[14] * d[24] * d[35] - 2 * d[5] * d[9] * d[25] * d[35] + 2 * d[4] * d[12] * d[25] * d[35] + 2 * d[3] * d[13] * d[25] * d[35] - 2 * d[0] * d[14] * d[25] * d[35] + 2 * d[1] * d[9] * d[26] * d[35] + 2 * d[0] * d[10] * d[26] * d[35] - 4 * d[3] * d[12] * d[26] * d[35] - d[11] * d[19] * d[27] * d[44] - d[10] * d[20] * d[27] * d[44] + 2 * d[14] * d[23] * d[27] * d[44] - d[11] * d[18] * d[28] * d[44] - d[9] * d[20] * d[28] * d[44] + 2 * d[13] * d[22] * d[28] * d[44] - d[10] * d[18] * d[29] * d[44] - d[9] * d[19] * d[29] * d[44] + 2 * d[12] * d[21] * d[29] * d[44] + 2 * d[12] * d[20] * d[30] * d[44] + 2 * d[11] * d[21] * d[30] * d[44] - 2 * d[14] * d[22] * d[30] * d[44] - 2 * d[13] * d[23] * d[30] * d[44] + 2 * d[13] * d[19] * d[31] * d[44] - 2 * d[14] * d[21] * d[31] * d[44] + 2 * d[10] * d[22] * d[31] * d[44] - 2 * d[12] * d[23] * d[31] * d[44] + 2 * d[14] * d[18] * d[32] * d[44] - 2 * d[13] * d[21] * d[32] * d[44] - 2 * d[12] * d[22] * d[32] * d[44] + 2 * d[9] * d[23] * d[32] * d[44];
    coeffs[61] = 2 * d[7] * d[20] * d[25] * d[27] - 2 * d[8] * d[23] * d[25] * d[27] + d[2] * std::pow(d[25], 2) * d[27] + 2 * d[8] * d[19] * d[26] * d[27] - 2 * d[7] * d[23] * d[26] * d[27] - 2 * d[5] * d[25] * d[26] * d[27] + d[1] * std::pow(d[26], 2) * d[27] + 2 * d[6] * d[20] * d[24] * d[28] - 2 * d[8] * d[22] * d[24] * d[28] + d[2] * std::pow(d[24], 2) * d[28] + 2 * d[8] * d[18] * d[26] * d[28] - 2 * d[6] * d[22] * d[26] * d[28] - 2 * d[4] * d[24] * d[26] * d[28] + d[0] * std::pow(d[26], 2) * d[28] + 2 * d[6] * d[19] * d[24] * d[29] - 2 * d[7] * d[21] * d[24] * d[29] + d[1] * std::pow(d[24], 2) * d[29] + 2 * d[7] * d[18] * d[25] * d[29] - 2 * d[6] * d[21] * d[25] * d[29] - 2 * d[3] * d[24] * d[25] * d[29] + d[0] * std::pow(d[25], 2) * d[29] - 2 * d[7] * d[20] * d[24] * d[30] + 2 * d[8] * d[23] * d[24] * d[30] - 2 * d[6] * d[20] * d[25] * d[30] + 2 * d[8] * d[22] * d[25] * d[30] - 2 * d[2] * d[24] * d[25] * d[30] - 4 * d[8] * d[21] * d[26] * d[30] + 2 * d[7] * d[22] * d[26] * d[30] + 2 * d[6] * d[23] * d[26] * d[30] + 2 * d[5] * d[24] * d[26] * d[30] + 2 * d[4] * d[25] * d[26] * d[30] - 2 * d[3] * std::pow(d[26], 2) * d[30] - 2 * d[8] * d[19] * d[24] * d[31] + 2 * d[7] * d[23] * d[24] * d[31] + 2 * d[8] * d[21] * d[25] * d[31] - 4 * d[7] * d[22] * d[25] * d[31] + 2 * d[6] * d[23] * d[25] * d[31] + 2 * d[5] * d[24] * d[25] * d[31] - 2 * d[4] * std::pow(d[25], 2) * d[31] - 2 * d[6] * d[19] * d[26] * d[31] + 2 * d[7] * d[21] * d[26] * d[31] - 2 * d[1] * d[24] * d[26] * d[31] + 2 * d[3] * d[25] * d[26] * d[31] + 2 * d[8] * d[21] * d[24] * d[32] + 2 * d[7] * d[22] * d[24] * d[32] - 4 * d[6] * d[23] * d[24] * d[32] - 2 * d[5] * std::pow(d[24], 2) * d[32] - 2 * d[8] * d[18] * d[25] * d[32] + 2 * d[6] * d[22] * d[25] * d[32] + 2 * d[4] * d[24] * d[25] * d[32] - 2 * d[7] * d[18] * d[26] * d[32] + 2 * d[6] * d[21] * d[26] * d[32] + 2 * d[3] * d[24] * d[26] * d[32] - 2 * d[0] * d[25] * d[26] * d[32] + 2 * d[6] * d[19] * d[20] * d[33] - 2 * d[7] * d[20] * d[21] * d[33] - 2 * d[8] * d[19] * d[22] * d[33] + 2 * d[8] * d[21] * d[23] * d[33] + 2 * d[7] * d[22] * d[23] * d[33] - 2 * d[6] * std::pow(d[23], 2) * d[33] + 2 * d[2] * d[19] * d[24] * d[33] + 2 * d[1] * d[20] * d[24] * d[33] - 4 * d[5] * d[23] * d[24] * d[33] - 2 * d[3] * d[20] * d[25] * d[33] - 2 * d[2] * d[21] * d[25] * d[33] + 2 * d[5] * d[22] * d[25] * d[33] + 2 * d[4] * d[23] * d[25] * d[33] - 2 * d[4] * d[19] * d[26] * d[33] + 2 * d[5] * d[21] * d[26] * d[33] - 2 * d[1] * d[22] * d[26] * d[33] + 2 * d[3] * d[23] * d[26] * d[33] + 2 * d[7] * d[18] * d[20] * d[34] - 2 * d[6] * d[20] * d[21] * d[34] + 2 * d[8] * d[21] * d[22] * d[34] - 2 * d[7] * std::pow(d[22], 2) * d[34] - 2 * d[8] * d[18] * d[23] * d[34] + 2 * d[6] * d[22] * d[23] * d[34] - 2 * d[3] * d[20] * d[24] * d[34] - 2 * d[2] * d[21] * d[24] * d[34] + 2 * d[5] * d[22] * d[24] * d[34] + 2 * d[4] * d[23] * d[24] * d[34] + 2 * d[2] * d[18] * d[25] * d[34] + 2 * d[0] * d[20] * d[25] * d[34] - 4 * d[4] * d[22] * d[25] * d[34] - 2 * d[5] * d[18] * d[26] * d[34] + 2 * d[4] * d[21] * d[26] * d[34] + 2 * d[3] * d[22] * d[26] * d[34] - 2 * d[0] * d[23] * d[26] * d[34] + 2 * d[8] * d[18] * d[19] * d[35] - 2 * d[8] * std::pow(d[21], 2) * d[35] - 2 * d[6] * d[19] * d[22] * d[35] + 2 * d[7] * d[21] * d[22] * d[35] - 2 * d[7] * d[18] * d[23] * d[35] + 2 * d[6] * d[21] * d[23] * d[35] - 2 * d[4] * d[19] * d[24] * d[35] + 2 * d[5] * d[21] * d[24] * d[35] - 2 * d[1] * d[22] * d[24] * d[35] + 2 * d[3] * d[23] * d[24] * d[35] - 2 * d[5] * d[18] * d[25] * d[35] + 2 * d[4] * d[21] * d[25] * d[35] + 2 * d[3] * d[22] * d[25] * d[35] - 2 * d[0] * d[23] * d[25] * d[35] + 2 * d[1] * d[18] * d[26] * d[35] + 2 * d[0] * d[19] * d[26] * d[35] - 4 * d[3] * d[21] * d[26] * d[35] - d[19] * d[20] * d[27] * d[44] + std::pow(d[23], 2) * d[27] * d[44] - d[18] * d[20] * d[28] * d[44] + std::pow(d[22], 2) * d[28] * d[44] - d[18] * d[19] * d[29] * d[44] + std::pow(d[21], 2) * d[29] * d[44] + 2 * d[20] * d[21] * d[30] * d[44] - 2 * d[22] * d[23] * d[30] * d[44] + 2 * d[19] * d[22] * d[31] * d[44] - 2 * d[21] * d[23] * d[31] * d[44] - 2 * d[21] * d[22] * d[32] * d[44] + 2 * d[18] * d[23] * d[32] * d[44];
    coeffs[62] = 2 * d[8] * d[17] * d[27] * d[28] + 2 * d[7] * d[16] * d[27] * d[29] + 2 * d[6] * d[15] * d[28] * d[29] - 2 * d[7] * d[15] * d[29] * d[30] - 2 * d[6] * d[16] * d[29] * d[30] - 2 * d[8] * d[17] * std::pow(d[30], 2) - 2 * d[8] * d[15] * d[28] * d[31] - 2 * d[6] * d[17] * d[28] * d[31] + 2 * d[8] * d[16] * d[30] * d[31] + 2 * d[7] * d[17] * d[30] * d[31] - 2 * d[7] * d[16] * std::pow(d[31], 2) - 2 * d[8] * d[16] * d[27] * d[32] - 2 * d[7] * d[17] * d[27] * d[32] + 2 * d[8] * d[15] * d[30] * d[32] + 2 * d[6] * d[17] * d[30] * d[32] + 2 * d[7] * d[15] * d[31] * d[32] + 2 * d[6] * d[16] * d[31] * d[32] - 2 * d[6] * d[15] * std::pow(d[32], 2) + 2 * d[6] * d[11] * d[28] * d[33] - 2 * d[8] * d[13] * d[28] * d[33] + 2 * d[2] * d[15] * d[28] * d[33] - 2 * d[4] * d[17] * d[28] * d[33] + 2 * d[6] * d[10] * d[29] * d[33] - 2 * d[7] * d[12] * d[29] * d[33] + 2 * d[1] * d[15] * d[29] * d[33] - 2 * d[3] * d[16] * d[29] * d[33] - 2 * d[7] * d[11] * d[30] * d[33] + 2 * d[8] * d[14] * d[30] * d[33] - 2 * d[2] * d[16] * d[30] * d[33] + 2 * d[5] * d[17] * d[30] * d[33] - 2 * d[8] * d[10] * d[31] * d[33] + 2 * d[7] * d[14] * d[31] * d[33] + 2 * d[5] * d[16] * d[31] * d[33] - 2 * d[1] * d[17] * d[31] * d[33] + 2 * d[8] * d[12] * d[32] * d[33] + 2 * d[7] * d[13] * d[32] * d[33] - 4 * d[6] * d[14] * d[32] * d[33] - 4 * d[5] * d[15] * d[32] * d[33] + 2 * d[4] * d[16] * d[32] * d[33] + 2 * d[3] * d[17] * d[32] * d[33] + d[2] * d[10] * std::pow(d[33], 2) + d[1] * d[11] * std::pow(d[33], 2) - 2 * d[5] * d[14] * std::pow(d[33], 2) + 2 * d[7] * d[11] * d[27] * d[34] - 2 * d[8] * d[14] * d[27] * d[34] + 2 * d[2] * d[16] * d[27] * d[34] - 2 * d[5] * d[17] * d[27] * d[34] + 2 * d[7] * d[9] * d[29] * d[34] - 2 * d[6] * d[12] * d[29] * d[34] - 2 * d[3] * d[15] * d[29] * d[34] + 2 * d[0] * d[16] * d[29] * d[34] - 2 * d[6] * d[11] * d[30] * d[34] + 2 * d[8] * d[13] * d[30] * d[34] - 2 * d[2] * d[15] * d[30] * d[34] + 2 * d[4] * d[17] * d[30] * d[34] + 2 * d[8] * d[12] * d[31] * d[34] - 4 * d[7] * d[13] * d[31] * d[34] + 2 * d[6] * d[14] * d[31] * d[34] + 2 * d[5] * d[15] * d[31] * d[34] - 4 * d[4] * d[16] * d[31] * d[34] + 2 * d[3] * d[17] * d[31] * d[34] - 2 * d[8] * d[9] * d[32] * d[34] + 2 * d[6] * d[13] * d[32] * d[34] + 2 * d[4] * d[15] * d[32] * d[34] - 2 * d[0] * d[17] * d[32] * d[34] - 2 * d[3] * d[11] * d[33] * d[34] - 2 * d[2] * d[12] * d[33] * d[34] + 2 * d[5] * d[13] * d[33] * d[34] + 2 * d[4] * d[14] * d[33] * d[34] + d[2] * d[9] * std::pow(d[34], 2) + d[0] * d[11] * std::pow(d[34], 2) - 2 * d[4] * d[13] * std::pow(d[34], 2) + 2 * d[8] * d[10] * d[27] * d[35] - 2 * d[7] * d[14] * d[27] * d[35] - 2 * d[5] * d[16] * d[27] * d[35] + 2 * d[1] * d[17] * d[27] * d[35] + 2 * d[8] * d[9] * d[28] * d[35] - 2 * d[6] * d[13] * d[28] * d[35] - 2 * d[4] * d[15] * d[28] * d[35] + 2 * d[0] * d[17] * d[28] * d[35] - 4 * d[8] * d[12] * d[30] * d[35] + 2 * d[7] * d[13] * d[30] * d[35] + 2 * d[6] * d[14] * d[30] * d[35] + 2 * d[5] * d[15] * d[30] * d[35] + 2 * d[4] * d[16] * d[30] * d[35] - 4 * d[3] * d[17] * d[30] * d[35] - 2 * d[6] * d[10] * d[31] * d[35] + 2 * d[7] * d[12] * d[31] * d[35] - 2 * d[1] * d[15] * d[31] * d[35] + 2 * d[3] * d[16] * d[31] * d[35] - 2 * d[7] * d[9] * d[32] * d[35] + 2 * d[6] * d[12] * d[32] * d[35] + 2 * d[3] * d[15] * d[32] * d[35] - 2 * d[0] * d[16] * d[32] * d[35] - 2 * d[4] * d[10] * d[33] * d[35] + 2 * d[5] * d[12] * d[33] * d[35] - 2 * d[1] * d[13] * d[33] * d[35] + 2 * d[3] * d[14] * d[33] * d[35] - 2 * d[5] * d[9] * d[34] * d[35] + 2 * d[4] * d[12] * d[34] * d[35] + 2 * d[3] * d[13] * d[34] * d[35] - 2 * d[0] * d[14] * d[34] * d[35] + d[1] * d[9] * std::pow(d[35], 2) + d[0] * d[10] * std::pow(d[35], 2) - 2 * d[3] * d[12] * std::pow(d[35], 2) - d[11] * d[27] * d[28] * d[44] - d[10] * d[27] * d[29] * d[44] - d[9] * d[28] * d[29] * d[44] + 2 * d[12] * d[29] * d[30] * d[44] + d[11] * std::pow(d[30], 2) * d[44] + 2 * d[13] * d[28] * d[31] * d[44] - 2 * d[14] * d[30] * d[31] * d[44] + d[10] * std::pow(d[31], 2) * d[44] + 2 * d[14] * d[27] * d[32] * d[44] - 2 * d[13] * d[30] * d[32] * d[44] - 2 * d[12] * d[31] * d[32] * d[44] + d[9] * std::pow(d[32], 2) * d[44];
    coeffs[63] = 2 * d[8] * d[26] * d[27] * d[28] + 2 * d[7] * d[25] * d[27] * d[29] + 2 * d[6] * d[24] * d[28] * d[29] - 2 * d[7] * d[24] * d[29] * d[30] - 2 * d[6] * d[25] * d[29] * d[30] - 2 * d[8] * d[26] * std::pow(d[30], 2) - 2 * d[8] * d[24] * d[28] * d[31] - 2 * d[6] * d[26] * d[28] * d[31] + 2 * d[8] * d[25] * d[30] * d[31] + 2 * d[7] * d[26] * d[30] * d[31] - 2 * d[7] * d[25] * std::pow(d[31], 2) - 2 * d[8] * d[25] * d[27] * d[32] - 2 * d[7] * d[26] * d[27] * d[32] + 2 * d[8] * d[24] * d[30] * d[32] + 2 * d[6] * d[26] * d[30] * d[32] + 2 * d[7] * d[24] * d[31] * d[32] + 2 * d[6] * d[25] * d[31] * d[32] - 2 * d[6] * d[24] * std::pow(d[32], 2) + 2 * d[6] * d[20] * d[28] * d[33] - 2 * d[8] * d[22] * d[28] * d[33] + 2 * d[2] * d[24] * d[28] * d[33] - 2 * d[4] * d[26] * d[28] * d[33] + 2 * d[6] * d[19] * d[29] * d[33] - 2 * d[7] * d[21] * d[29] * d[33] + 2 * d[1] * d[24] * d[29] * d[33] - 2 * d[3] * d[25] * d[29] * d[33] - 2 * d[7] * d[20] * d[30] * d[33] + 2 * d[8] * d[23] * d[30] * d[33] - 2 * d[2] * d[25] * d[30] * d[33] + 2 * d[5] * d[26] * d[30] * d[33] - 2 * d[8] * d[19] * d[31] * d[33] + 2 * d[7] * d[23] * d[31] * d[33] + 2 * d[5] * d[25] * d[31] * d[33] - 2 * d[1] * d[26] * d[31] * d[33] + 2 * d[8] * d[21] * d[32] * d[33] + 2 * d[7] * d[22] * d[32] * d[33] - 4 * d[6] * d[23] * d[32] * d[33] - 4 * d[5] * d[24] * d[32] * d[33] + 2 * d[4] * d[25] * d[32] * d[33] + 2 * d[3] * d[26] * d[32] * d[33] + d[2] * d[19] * std::pow(d[33], 2) + d[1] * d[20] * std::pow(d[33], 2) - 2 * d[5] * d[23] * std::pow(d[33], 2) + 2 * d[7] * d[20] * d[27] * d[34] - 2 * d[8] * d[23] * d[27] * d[34] + 2 * d[2] * d[25] * d[27] * d[34] - 2 * d[5] * d[26] * d[27] * d[34] + 2 * d[7] * d[18] * d[29] * d[34] - 2 * d[6] * d[21] * d[29] * d[34] - 2 * d[3] * d[24] * d[29] * d[34] + 2 * d[0] * d[25] * d[29] * d[34] - 2 * d[6] * d[20] * d[30] * d[34] + 2 * d[8] * d[22] * d[30] * d[34] - 2 * d[2] * d[24] * d[30] * d[34] + 2 * d[4] * d[26] * d[30] * d[34] + 2 * d[8] * d[21] * d[31] * d[34] - 4 * d[7] * d[22] * d[31] * d[34] + 2 * d[6] * d[23] * d[31] * d[34] + 2 * d[5] * d[24] * d[31] * d[34] - 4 * d[4] * d[25] * d[31] * d[34] + 2 * d[3] * d[26] * d[31] * d[34] - 2 * d[8] * d[18] * d[32] * d[34] + 2 * d[6] * d[22] * d[32] * d[34] + 2 * d[4] * d[24] * d[32] * d[34] - 2 * d[0] * d[26] * d[32] * d[34] - 2 * d[3] * d[20] * d[33] * d[34] - 2 * d[2] * d[21] * d[33] * d[34] + 2 * d[5] * d[22] * d[33] * d[34] + 2 * d[4] * d[23] * d[33] * d[34] + d[2] * d[18] * std::pow(d[34], 2) + d[0] * d[20] * std::pow(d[34], 2) - 2 * d[4] * d[22] * std::pow(d[34], 2) + 2 * d[8] * d[19] * d[27] * d[35] - 2 * d[7] * d[23] * d[27] * d[35] - 2 * d[5] * d[25] * d[27] * d[35] + 2 * d[1] * d[26] * d[27] * d[35] + 2 * d[8] * d[18] * d[28] * d[35] - 2 * d[6] * d[22] * d[28] * d[35] - 2 * d[4] * d[24] * d[28] * d[35] + 2 * d[0] * d[26] * d[28] * d[35] - 4 * d[8] * d[21] * d[30] * d[35] + 2 * d[7] * d[22] * d[30] * d[35] + 2 * d[6] * d[23] * d[30] * d[35] + 2 * d[5] * d[24] * d[30] * d[35] + 2 * d[4] * d[25] * d[30] * d[35] - 4 * d[3] * d[26] * d[30] * d[35] - 2 * d[6] * d[19] * d[31] * d[35] + 2 * d[7] * d[21] * d[31] * d[35] - 2 * d[1] * d[24] * d[31] * d[35] + 2 * d[3] * d[25] * d[31] * d[35] - 2 * d[7] * d[18] * d[32] * d[35] + 2 * d[6] * d[21] * d[32] * d[35] + 2 * d[3] * d[24] * d[32] * d[35] - 2 * d[0] * d[25] * d[32] * d[35] - 2 * d[4] * d[19] * d[33] * d[35] + 2 * d[5] * d[21] * d[33] * d[35] - 2 * d[1] * d[22] * d[33] * d[35] + 2 * d[3] * d[23] * d[33] * d[35] - 2 * d[5] * d[18] * d[34] * d[35] + 2 * d[4] * d[21] * d[34] * d[35] + 2 * d[3] * d[22] * d[34] * d[35] - 2 * d[0] * d[23] * d[34] * d[35] + d[1] * d[18] * std::pow(d[35], 2) + d[0] * d[19] * std::pow(d[35], 2) - 2 * d[3] * d[21] * std::pow(d[35], 2) - d[20] * d[27] * d[28] * d[44] - d[19] * d[27] * d[29] * d[44] - d[18] * d[28] * d[29] * d[44] + 2 * d[21] * d[29] * d[30] * d[44] + d[20] * std::pow(d[30], 2) * d[44] + 2 * d[22] * d[28] * d[31] * d[44] - 2 * d[23] * d[30] * d[31] * d[44] + d[19] * std::pow(d[31], 2) * d[44] + 2 * d[23] * d[27] * d[32] * d[44] - 2 * d[22] * d[30] * d[32] * d[44] - 2 * d[21] * d[31] * d[32] * d[44] + d[18] * std::pow(d[32], 2) * d[44];
    coeffs[64] = 2 * d[6] * d[28] * d[29] * d[33] - 2 * d[7] * d[29] * d[30] * d[33] - 2 * d[8] * d[28] * d[31] * d[33] + 2 * d[8] * d[30] * d[32] * d[33] + 2 * d[7] * d[31] * d[32] * d[33] - 2 * d[6] * std::pow(d[32], 2) * d[33] + d[2] * d[28] * std::pow(d[33], 2) + d[1] * d[29] * std::pow(d[33], 2) - 2 * d[5] * d[32] * std::pow(d[33], 2) + 2 * d[7] * d[27] * d[29] * d[34] - 2 * d[6] * d[29] * d[30] * d[34] + 2 * d[8] * d[30] * d[31] * d[34] - 2 * d[7] * std::pow(d[31], 2) * d[34] - 2 * d[8] * d[27] * d[32] * d[34] + 2 * d[6] * d[31] * d[32] * d[34] - 2 * d[3] * d[29] * d[33] * d[34] - 2 * d[2] * d[30] * d[33] * d[34] + 2 * d[5] * d[31] * d[33] * d[34] + 2 * d[4] * d[32] * d[33] * d[34] + d[2] * d[27] * std::pow(d[34], 2) + d[0] * d[29] * std::pow(d[34], 2) - 2 * d[4] * d[31] * std::pow(d[34], 2) + 2 * d[8] * d[27] * d[28] * d[35] - 2 * d[8] * std::pow(d[30], 2) * d[35] - 2 * d[6] * d[28] * d[31] * d[35] + 2 * d[7] * d[30] * d[31] * d[35] - 2 * d[7] * d[27] * d[32] * d[35] + 2 * d[6] * d[30] * d[32] * d[35] - 2 * d[4] * d[28] * d[33] * d[35] + 2 * d[5] * d[30] * d[33] * d[35] - 2 * d[1] * d[31] * d[33] * d[35] + 2 * d[3] * d[32] * d[33] * d[35] - 2 * d[5] * d[27] * d[34] * d[35] + 2 * d[4] * d[30] * d[34] * d[35] + 2 * d[3] * d[31] * d[34] * d[35] - 2 * d[0] * d[32] * d[34] * d[35] + d[1] * d[27] * std::pow(d[35], 2) + d[0] * d[28] * std::pow(d[35], 2) - 2 * d[3] * d[30] * std::pow(d[35], 2) - d[27] * d[28] * d[29] * d[44] + d[29] * std::pow(d[30], 2) * d[44] + d[28] * std::pow(d[31], 2) * d[44] - 2 * d[30] * d[31] * d[32] * d[44] + d[27] * std::pow(d[32], 2) * d[44];
    coeffs[65] = std::pow(d[8], 2) * d[9] * d[10] + std::pow(d[7], 2) * d[9] * d[11] + std::pow(d[6], 2) * d[10] * d[11] - 2 * d[6] * d[7] * d[11] * d[12] - std::pow(d[8], 2) * std::pow(d[12], 2) - 2 * d[6] * d[8] * d[10] * d[13] + 2 * d[7] * d[8] * d[12] * d[13] - std::pow(d[7], 2) * std::pow(d[13], 2) - 2 * d[7] * d[8] * d[9] * d[14] + 2 * d[6] * d[8] * d[12] * d[14] + 2 * d[6] * d[7] * d[13] * d[14] - std::pow(d[6], 2) * std::pow(d[14], 2) + 2 * d[2] * d[6] * d[10] * d[15] - 2 * d[4] * d[8] * d[10] * d[15] + 2 * d[1] * d[6] * d[11] * d[15] - 2 * d[3] * d[7] * d[11] * d[15] - 2 * d[2] * d[7] * d[12] * d[15] + 2 * d[5] * d[8] * d[12] * d[15] + 2 * d[5] * d[7] * d[13] * d[15] - 2 * d[1] * d[8] * d[13] * d[15] - 4 * d[5] * d[6] * d[14] * d[15] + 2 * d[4] * d[7] * d[14] * d[15] + 2 * d[3] * d[8] * d[14] * d[15] + d[1] * d[2] * std::pow(d[15], 2) - std::pow(d[5], 2) * std::pow(d[15], 2) + 2 * d[2] * d[7] * d[9] * d[16] - 2 * d[5] * d[8] * d[9] * d[16] - 2 * d[3] * d[6] * d[11] * d[16] + 2 * d[0] * d[7] * d[11] * d[16] - 2 * d[2] * d[6] * d[12] * d[16] + 2 * d[4] * d[8] * d[12] * d[16] + 2 * d[5] * d[6] * d[13] * d[16] - 4 * d[4] * d[7] * d[13] * d[16] + 2 * d[3] * d[8] * d[13] * d[16] + 2 * d[4] * d[6] * d[14] * d[16] - 2 * d[0] * d[8] * d[14] * d[16] - 2 * d[2] * d[3] * d[15] * d[16] + 2 * d[4] * d[5] * d[15] * d[16] + d[0] * d[2] * std::pow(d[16], 2) - std::pow(d[4], 2) * std::pow(d[16], 2) - 2 * d[5] * d[7] * d[9] * d[17] + 2 * d[1] * d[8] * d[9] * d[17] - 2 * d[4] * d[6] * d[10] * d[17] + 2 * d[0] * d[8] * d[10] * d[17] + 2 * d[5] * d[6] * d[12] * d[17] + 2 * d[4] * d[7] * d[12] * d[17] - 4 * d[3] * d[8] * d[12] * d[17] - 2 * d[1] * d[6] * d[13] * d[17] + 2 * d[3] * d[7] * d[13] * d[17] + 2 * d[3] * d[6] * d[14] * d[17] - 2 * d[0] * d[7] * d[14] * d[17] - 2 * d[1] * d[4] * d[15] * d[17] + 2 * d[3] * d[5] * d[15] * d[17] + 2 * d[3] * d[4] * d[16] * d[17] - 2 * d[0] * d[5] * d[16] * d[17] + d[0] * d[1] * std::pow(d[17], 2) - std::pow(d[3], 2) * std::pow(d[17], 2) - d[2] * d[9] * d[10] * d[44] - d[1] * d[9] * d[11] * d[44] - d[0] * d[10] * d[11] * d[44] + 2 * d[3] * d[11] * d[12] * d[44] + d[2] * std::pow(d[12], 2) * d[44] + 2 * d[4] * d[10] * d[13] * d[44] - 2 * d[5] * d[12] * d[13] * d[44] + d[1] * std::pow(d[13], 2) * d[44] + 2 * d[5] * d[9] * d[14] * d[44] - 2 * d[4] * d[12] * d[14] * d[44] - 2 * d[3] * d[13] * d[14] * d[44] + d[0] * std::pow(d[14], 2) * d[44];
    coeffs[66] = std::pow(d[8], 2) * d[10] * d[18] + std::pow(d[7], 2) * d[11] * d[18] - 2 * d[7] * d[8] * d[14] * d[18] + 2 * d[2] * d[7] * d[16] * d[18] - 2 * d[5] * d[8] * d[16] * d[18] - 2 * d[5] * d[7] * d[17] * d[18] + 2 * d[1] * d[8] * d[17] * d[18] + std::pow(d[8], 2) * d[9] * d[19] + std::pow(d[6], 2) * d[11] * d[19] - 2 * d[6] * d[8] * d[13] * d[19] + 2 * d[2] * d[6] * d[15] * d[19] - 2 * d[4] * d[8] * d[15] * d[19] - 2 * d[4] * d[6] * d[17] * d[19] + 2 * d[0] * d[8] * d[17] * d[19] + std::pow(d[7], 2) * d[9] * d[20] + std::pow(d[6], 2) * d[10] * d[20] - 2 * d[6] * d[7] * d[12] * d[20] + 2 * d[1] * d[6] * d[15] * d[20] - 2 * d[3] * d[7] * d[15] * d[20] - 2 * d[3] * d[6] * d[16] * d[20] + 2 * d[0] * d[7] * d[16] * d[20] - 2 * d[6] * d[7] * d[11] * d[21] - 2 * std::pow(d[8], 2) * d[12] * d[21] + 2 * d[7] * d[8] * d[13] * d[21] + 2 * d[6] * d[8] * d[14] * d[21] - 2 * d[2] * d[7] * d[15] * d[21] + 2 * d[5] * d[8] * d[15] * d[21] - 2 * d[2] * d[6] * d[16] * d[21] + 2 * d[4] * d[8] * d[16] * d[21] + 2 * d[5] * d[6] * d[17] * d[21] + 2 * d[4] * d[7] * d[17] * d[21] - 4 * d[3] * d[8] * d[17] * d[21] - 2 * d[6] * d[8] * d[10] * d[22] + 2 * d[7] * d[8] * d[12] * d[22] - 2 * std::pow(d[7], 2) * d[13] * d[22] + 2 * d[6] * d[7] * d[14] * d[22] + 2 * d[5] * d[7] * d[15] * d[22] - 2 * d[1] * d[8] * d[15] * d[22] + 2 * d[5] * d[6] * d[16] * d[22] - 4 * d[4] * d[7] * d[16] * d[22] + 2 * d[3] * d[8] * d[16] * d[22] - 2 * d[1] * d[6] * d[17] * d[22] + 2 * d[3] * d[7] * d[17] * d[22] - 2 * d[7] * d[8] * d[9] * d[23] + 2 * d[6] * d[8] * d[12] * d[23] + 2 * d[6] * d[7] * d[13] * d[23] - 2 * std::pow(d[6], 2) * d[14] * d[23] - 4 * d[5] * d[6] * d[15] * d[23] + 2 * d[4] * d[7] * d[15] * d[23] + 2 * d[3] * d[8] * d[15] * d[23] + 2 * d[4] * d[6] * d[16] * d[23] - 2 * d[0] * d[8] * d[16] * d[23] + 2 * d[3] * d[6] * d[17] * d[23] - 2 * d[0] * d[7] * d[17] * d[23] + 2 * d[2] * d[6] * d[10] * d[24] - 2 * d[4] * d[8] * d[10] * d[24] + 2 * d[1] * d[6] * d[11] * d[24] - 2 * d[3] * d[7] * d[11] * d[24] - 2 * d[2] * d[7] * d[12] * d[24] + 2 * d[5] * d[8] * d[12] * d[24] + 2 * d[5] * d[7] * d[13] * d[24] - 2 * d[1] * d[8] * d[13] * d[24] - 4 * d[5] * d[6] * d[14] * d[24] + 2 * d[4] * d[7] * d[14] * d[24] + 2 * d[3] * d[8] * d[14] * d[24] + 2 * d[1] * d[2] * d[15] * d[24] - 2 * std::pow(d[5], 2) * d[15] * d[24] - 2 * d[2] * d[3] * d[16] * d[24] + 2 * d[4] * d[5] * d[16] * d[24] - 2 * d[1] * d[4] * d[17] * d[24] + 2 * d[3] * d[5] * d[17] * d[24] + 2 * d[2] * d[7] * d[9] * d[25] - 2 * d[5] * d[8] * d[9] * d[25] - 2 * d[3] * d[6] * d[11] * d[25] + 2 * d[0] * d[7] * d[11] * d[25] - 2 * d[2] * d[6] * d[12] * d[25] + 2 * d[4] * d[8] * d[12] * d[25] + 2 * d[5] * d[6] * d[13] * d[25] - 4 * d[4] * d[7] * d[13] * d[25] + 2 * d[3] * d[8] * d[13] * d[25] + 2 * d[4] * d[6] * d[14] * d[25] - 2 * d[0] * d[8] * d[14] * d[25] - 2 * d[2] * d[3] * d[15] * d[25] + 2 * d[4] * d[5] * d[15] * d[25] + 2 * d[0] * d[2] * d[16] * d[25] - 2 * std::pow(d[4], 2) * d[16] * d[25] + 2 * d[3] * d[4] * d[17] * d[25] - 2 * d[0] * d[5] * d[17] * d[25] - 2 * d[5] * d[7] * d[9] * d[26] + 2 * d[1] * d[8] * d[9] * d[26] - 2 * d[4] * d[6] * d[10] * d[26] + 2 * d[0] * d[8] * d[10] * d[26] + 2 * d[5] * d[6] * d[12] * d[26] + 2 * d[4] * d[7] * d[12] * d[26] - 4 * d[3] * d[8] * d[12] * d[26] - 2 * d[1] * d[6] * d[13] * d[26] + 2 * d[3] * d[7] * d[13] * d[26] + 2 * d[3] * d[6] * d[14] * d[26] - 2 * d[0] * d[7] * d[14] * d[26] - 2 * d[1] * d[4] * d[15] * d[26] + 2 * d[3] * d[5] * d[15] * d[26] + 2 * d[3] * d[4] * d[16] * d[26] - 2 * d[0] * d[5] * d[16] * d[26] + 2 * d[0] * d[1] * d[17] * d[26] - 2 * std::pow(d[3], 2) * d[17] * d[26] - d[2] * d[10] * d[18] * d[44] - d[1] * d[11] * d[18] * d[44] + 2 * d[5] * d[14] * d[18] * d[44] - d[2] * d[9] * d[19] * d[44] - d[0] * d[11] * d[19] * d[44] + 2 * d[4] * d[13] * d[19] * d[44] - d[1] * d[9] * d[20] * d[44] - d[0] * d[10] * d[20] * d[44] + 2 * d[3] * d[12] * d[20] * d[44] + 2 * d[3] * d[11] * d[21] * d[44] + 2 * d[2] * d[12] * d[21] * d[44] - 2 * d[5] * d[13] * d[21] * d[44] - 2 * d[4] * d[14] * d[21] * d[44] + 2 * d[4] * d[10] * d[22] * d[44] - 2 * d[5] * d[12] * d[22] * d[44] + 2 * d[1] * d[13] * d[22] * d[44] - 2 * d[3] * d[14] * d[22] * d[44] + 2 * d[5] * d[9] * d[23] * d[44] - 2 * d[4] * d[12] * d[23] * d[44] - 2 * d[3] * d[13] * d[23] * d[44] + 2 * d[0] * d[14] * d[23] * d[44];
    coeffs[67] = std::pow(d[8], 2) * d[18] * d[19] + std::pow(d[7], 2) * d[18] * d[20] + std::pow(d[6], 2) * d[19] * d[20] - 2 * d[6] * d[7] * d[20] * d[21] - std::pow(d[8], 2) * std::pow(d[21], 2) - 2 * d[6] * d[8] * d[19] * d[22] + 2 * d[7] * d[8] * d[21] * d[22] - std::pow(d[7], 2) * std::pow(d[22], 2) - 2 * d[7] * d[8] * d[18] * d[23] + 2 * d[6] * d[8] * d[21] * d[23] + 2 * d[6] * d[7] * d[22] * d[23] - std::pow(d[6], 2) * std::pow(d[23], 2) + 2 * d[2] * d[6] * d[19] * d[24] - 2 * d[4] * d[8] * d[19] * d[24] + 2 * d[1] * d[6] * d[20] * d[24] - 2 * d[3] * d[7] * d[20] * d[24] - 2 * d[2] * d[7] * d[21] * d[24] + 2 * d[5] * d[8] * d[21] * d[24] + 2 * d[5] * d[7] * d[22] * d[24] - 2 * d[1] * d[8] * d[22] * d[24] - 4 * d[5] * d[6] * d[23] * d[24] + 2 * d[4] * d[7] * d[23] * d[24] + 2 * d[3] * d[8] * d[23] * d[24] + d[1] * d[2] * std::pow(d[24], 2) - std::pow(d[5], 2) * std::pow(d[24], 2) + 2 * d[2] * d[7] * d[18] * d[25] - 2 * d[5] * d[8] * d[18] * d[25] - 2 * d[3] * d[6] * d[20] * d[25] + 2 * d[0] * d[7] * d[20] * d[25] - 2 * d[2] * d[6] * d[21] * d[25] + 2 * d[4] * d[8] * d[21] * d[25] + 2 * d[5] * d[6] * d[22] * d[25] - 4 * d[4] * d[7] * d[22] * d[25] + 2 * d[3] * d[8] * d[22] * d[25] + 2 * d[4] * d[6] * d[23] * d[25] - 2 * d[0] * d[8] * d[23] * d[25] - 2 * d[2] * d[3] * d[24] * d[25] + 2 * d[4] * d[5] * d[24] * d[25] + d[0] * d[2] * std::pow(d[25], 2) - std::pow(d[4], 2) * std::pow(d[25], 2) - 2 * d[5] * d[7] * d[18] * d[26] + 2 * d[1] * d[8] * d[18] * d[26] - 2 * d[4] * d[6] * d[19] * d[26] + 2 * d[0] * d[8] * d[19] * d[26] + 2 * d[5] * d[6] * d[21] * d[26] + 2 * d[4] * d[7] * d[21] * d[26] - 4 * d[3] * d[8] * d[21] * d[26] - 2 * d[1] * d[6] * d[22] * d[26] + 2 * d[3] * d[7] * d[22] * d[26] + 2 * d[3] * d[6] * d[23] * d[26] - 2 * d[0] * d[7] * d[23] * d[26] - 2 * d[1] * d[4] * d[24] * d[26] + 2 * d[3] * d[5] * d[24] * d[26] + 2 * d[3] * d[4] * d[25] * d[26] - 2 * d[0] * d[5] * d[25] * d[26] + d[0] * d[1] * std::pow(d[26], 2) - std::pow(d[3], 2) * std::pow(d[26], 2) - d[2] * d[18] * d[19] * d[44] - d[1] * d[18] * d[20] * d[44] - d[0] * d[19] * d[20] * d[44] + 2 * d[3] * d[20] * d[21] * d[44] + d[2] * std::pow(d[21], 2) * d[44] + 2 * d[4] * d[19] * d[22] * d[44] - 2 * d[5] * d[21] * d[22] * d[44] + d[1] * std::pow(d[22], 2) * d[44] + 2 * d[5] * d[18] * d[23] * d[44] - 2 * d[4] * d[21] * d[23] * d[44] - 2 * d[3] * d[22] * d[23] * d[44] + d[0] * std::pow(d[23], 2) * d[44];
    coeffs[68] = std::pow(d[8], 2) * d[10] * d[27] + std::pow(d[7], 2) * d[11] * d[27] - 2 * d[7] * d[8] * d[14] * d[27] + 2 * d[2] * d[7] * d[16] * d[27] - 2 * d[5] * d[8] * d[16] * d[27] - 2 * d[5] * d[7] * d[17] * d[27] + 2 * d[1] * d[8] * d[17] * d[27] + std::pow(d[8], 2) * d[9] * d[28] + std::pow(d[6], 2) * d[11] * d[28] - 2 * d[6] * d[8] * d[13] * d[28] + 2 * d[2] * d[6] * d[15] * d[28] - 2 * d[4] * d[8] * d[15] * d[28] - 2 * d[4] * d[6] * d[17] * d[28] + 2 * d[0] * d[8] * d[17] * d[28] + std::pow(d[7], 2) * d[9] * d[29] + std::pow(d[6], 2) * d[10] * d[29] - 2 * d[6] * d[7] * d[12] * d[29] + 2 * d[1] * d[6] * d[15] * d[29] - 2 * d[3] * d[7] * d[15] * d[29] - 2 * d[3] * d[6] * d[16] * d[29] + 2 * d[0] * d[7] * d[16] * d[29] - 2 * d[6] * d[7] * d[11] * d[30] - 2 * std::pow(d[8], 2) * d[12] * d[30] + 2 * d[7] * d[8] * d[13] * d[30] + 2 * d[6] * d[8] * d[14] * d[30] - 2 * d[2] * d[7] * d[15] * d[30] + 2 * d[5] * d[8] * d[15] * d[30] - 2 * d[2] * d[6] * d[16] * d[30] + 2 * d[4] * d[8] * d[16] * d[30] + 2 * d[5] * d[6] * d[17] * d[30] + 2 * d[4] * d[7] * d[17] * d[30] - 4 * d[3] * d[8] * d[17] * d[30] - 2 * d[6] * d[8] * d[10] * d[31] + 2 * d[7] * d[8] * d[12] * d[31] - 2 * std::pow(d[7], 2) * d[13] * d[31] + 2 * d[6] * d[7] * d[14] * d[31] + 2 * d[5] * d[7] * d[15] * d[31] - 2 * d[1] * d[8] * d[15] * d[31] + 2 * d[5] * d[6] * d[16] * d[31] - 4 * d[4] * d[7] * d[16] * d[31] + 2 * d[3] * d[8] * d[16] * d[31] - 2 * d[1] * d[6] * d[17] * d[31] + 2 * d[3] * d[7] * d[17] * d[31] - 2 * d[7] * d[8] * d[9] * d[32] + 2 * d[6] * d[8] * d[12] * d[32] + 2 * d[6] * d[7] * d[13] * d[32] - 2 * std::pow(d[6], 2) * d[14] * d[32] - 4 * d[5] * d[6] * d[15] * d[32] + 2 * d[4] * d[7] * d[15] * d[32] + 2 * d[3] * d[8] * d[15] * d[32] + 2 * d[4] * d[6] * d[16] * d[32] - 2 * d[0] * d[8] * d[16] * d[32] + 2 * d[3] * d[6] * d[17] * d[32] - 2 * d[0] * d[7] * d[17] * d[32] + 2 * d[2] * d[6] * d[10] * d[33] - 2 * d[4] * d[8] * d[10] * d[33] + 2 * d[1] * d[6] * d[11] * d[33] - 2 * d[3] * d[7] * d[11] * d[33] - 2 * d[2] * d[7] * d[12] * d[33] + 2 * d[5] * d[8] * d[12] * d[33] + 2 * d[5] * d[7] * d[13] * d[33] - 2 * d[1] * d[8] * d[13] * d[33] - 4 * d[5] * d[6] * d[14] * d[33] + 2 * d[4] * d[7] * d[14] * d[33] + 2 * d[3] * d[8] * d[14] * d[33] + 2 * d[1] * d[2] * d[15] * d[33] - 2 * std::pow(d[5], 2) * d[15] * d[33] - 2 * d[2] * d[3] * d[16] * d[33] + 2 * d[4] * d[5] * d[16] * d[33] - 2 * d[1] * d[4] * d[17] * d[33] + 2 * d[3] * d[5] * d[17] * d[33] + 2 * d[2] * d[7] * d[9] * d[34] - 2 * d[5] * d[8] * d[9] * d[34] - 2 * d[3] * d[6] * d[11] * d[34] + 2 * d[0] * d[7] * d[11] * d[34] - 2 * d[2] * d[6] * d[12] * d[34] + 2 * d[4] * d[8] * d[12] * d[34] + 2 * d[5] * d[6] * d[13] * d[34] - 4 * d[4] * d[7] * d[13] * d[34] + 2 * d[3] * d[8] * d[13] * d[34] + 2 * d[4] * d[6] * d[14] * d[34] - 2 * d[0] * d[8] * d[14] * d[34] - 2 * d[2] * d[3] * d[15] * d[34] + 2 * d[4] * d[5] * d[15] * d[34] + 2 * d[0] * d[2] * d[16] * d[34] - 2 * std::pow(d[4], 2) * d[16] * d[34] + 2 * d[3] * d[4] * d[17] * d[34] - 2 * d[0] * d[5] * d[17] * d[34] - 2 * d[5] * d[7] * d[9] * d[35] + 2 * d[1] * d[8] * d[9] * d[35] - 2 * d[4] * d[6] * d[10] * d[35] + 2 * d[0] * d[8] * d[10] * d[35] + 2 * d[5] * d[6] * d[12] * d[35] + 2 * d[4] * d[7] * d[12] * d[35] - 4 * d[3] * d[8] * d[12] * d[35] - 2 * d[1] * d[6] * d[13] * d[35] + 2 * d[3] * d[7] * d[13] * d[35] + 2 * d[3] * d[6] * d[14] * d[35] - 2 * d[0] * d[7] * d[14] * d[35] - 2 * d[1] * d[4] * d[15] * d[35] + 2 * d[3] * d[5] * d[15] * d[35] + 2 * d[3] * d[4] * d[16] * d[35] - 2 * d[0] * d[5] * d[16] * d[35] + 2 * d[0] * d[1] * d[17] * d[35] - 2 * std::pow(d[3], 2) * d[17] * d[35] - d[2] * d[10] * d[27] * d[44] - d[1] * d[11] * d[27] * d[44] + 2 * d[5] * d[14] * d[27] * d[44] - d[2] * d[9] * d[28] * d[44] - d[0] * d[11] * d[28] * d[44] + 2 * d[4] * d[13] * d[28] * d[44] - d[1] * d[9] * d[29] * d[44] - d[0] * d[10] * d[29] * d[44] + 2 * d[3] * d[12] * d[29] * d[44] + 2 * d[3] * d[11] * d[30] * d[44] + 2 * d[2] * d[12] * d[30] * d[44] - 2 * d[5] * d[13] * d[30] * d[44] - 2 * d[4] * d[14] * d[30] * d[44] + 2 * d[4] * d[10] * d[31] * d[44] - 2 * d[5] * d[12] * d[31] * d[44] + 2 * d[1] * d[13] * d[31] * d[44] - 2 * d[3] * d[14] * d[31] * d[44] + 2 * d[5] * d[9] * d[32] * d[44] - 2 * d[4] * d[12] * d[32] * d[44] - 2 * d[3] * d[13] * d[32] * d[44] + 2 * d[0] * d[14] * d[32] * d[44];
    coeffs[69] = std::pow(d[8], 2) * d[19] * d[27] + std::pow(d[7], 2) * d[20] * d[27] - 2 * d[7] * d[8] * d[23] * d[27] + 2 * d[2] * d[7] * d[25] * d[27] - 2 * d[5] * d[8] * d[25] * d[27] - 2 * d[5] * d[7] * d[26] * d[27] + 2 * d[1] * d[8] * d[26] * d[27] + std::pow(d[8], 2) * d[18] * d[28] + std::pow(d[6], 2) * d[20] * d[28] - 2 * d[6] * d[8] * d[22] * d[28] + 2 * d[2] * d[6] * d[24] * d[28] - 2 * d[4] * d[8] * d[24] * d[28] - 2 * d[4] * d[6] * d[26] * d[28] + 2 * d[0] * d[8] * d[26] * d[28] + std::pow(d[7], 2) * d[18] * d[29] + std::pow(d[6], 2) * d[19] * d[29] - 2 * d[6] * d[7] * d[21] * d[29] + 2 * d[1] * d[6] * d[24] * d[29] - 2 * d[3] * d[7] * d[24] * d[29] - 2 * d[3] * d[6] * d[25] * d[29] + 2 * d[0] * d[7] * d[25] * d[29] - 2 * d[6] * d[7] * d[20] * d[30] - 2 * std::pow(d[8], 2) * d[21] * d[30] + 2 * d[7] * d[8] * d[22] * d[30] + 2 * d[6] * d[8] * d[23] * d[30] - 2 * d[2] * d[7] * d[24] * d[30] + 2 * d[5] * d[8] * d[24] * d[30] - 2 * d[2] * d[6] * d[25] * d[30] + 2 * d[4] * d[8] * d[25] * d[30] + 2 * d[5] * d[6] * d[26] * d[30] + 2 * d[4] * d[7] * d[26] * d[30] - 4 * d[3] * d[8] * d[26] * d[30] - 2 * d[6] * d[8] * d[19] * d[31] + 2 * d[7] * d[8] * d[21] * d[31] - 2 * std::pow(d[7], 2) * d[22] * d[31] + 2 * d[6] * d[7] * d[23] * d[31] + 2 * d[5] * d[7] * d[24] * d[31] - 2 * d[1] * d[8] * d[24] * d[31] + 2 * d[5] * d[6] * d[25] * d[31] - 4 * d[4] * d[7] * d[25] * d[31] + 2 * d[3] * d[8] * d[25] * d[31] - 2 * d[1] * d[6] * d[26] * d[31] + 2 * d[3] * d[7] * d[26] * d[31] - 2 * d[7] * d[8] * d[18] * d[32] + 2 * d[6] * d[8] * d[21] * d[32] + 2 * d[6] * d[7] * d[22] * d[32] - 2 * std::pow(d[6], 2) * d[23] * d[32] - 4 * d[5] * d[6] * d[24] * d[32] + 2 * d[4] * d[7] * d[24] * d[32] + 2 * d[3] * d[8] * d[24] * d[32] + 2 * d[4] * d[6] * d[25] * d[32] - 2 * d[0] * d[8] * d[25] * d[32] + 2 * d[3] * d[6] * d[26] * d[32] - 2 * d[0] * d[7] * d[26] * d[32] + 2 * d[2] * d[6] * d[19] * d[33] - 2 * d[4] * d[8] * d[19] * d[33] + 2 * d[1] * d[6] * d[20] * d[33] - 2 * d[3] * d[7] * d[20] * d[33] - 2 * d[2] * d[7] * d[21] * d[33] + 2 * d[5] * d[8] * d[21] * d[33] + 2 * d[5] * d[7] * d[22] * d[33] - 2 * d[1] * d[8] * d[22] * d[33] - 4 * d[5] * d[6] * d[23] * d[33] + 2 * d[4] * d[7] * d[23] * d[33] + 2 * d[3] * d[8] * d[23] * d[33] + 2 * d[1] * d[2] * d[24] * d[33] - 2 * std::pow(d[5], 2) * d[24] * d[33] - 2 * d[2] * d[3] * d[25] * d[33] + 2 * d[4] * d[5] * d[25] * d[33] - 2 * d[1] * d[4] * d[26] * d[33] + 2 * d[3] * d[5] * d[26] * d[33] + 2 * d[2] * d[7] * d[18] * d[34] - 2 * d[5] * d[8] * d[18] * d[34] - 2 * d[3] * d[6] * d[20] * d[34] + 2 * d[0] * d[7] * d[20] * d[34] - 2 * d[2] * d[6] * d[21] * d[34] + 2 * d[4] * d[8] * d[21] * d[34] + 2 * d[5] * d[6] * d[22] * d[34] - 4 * d[4] * d[7] * d[22] * d[34] + 2 * d[3] * d[8] * d[22] * d[34] + 2 * d[4] * d[6] * d[23] * d[34] - 2 * d[0] * d[8] * d[23] * d[34] - 2 * d[2] * d[3] * d[24] * d[34] + 2 * d[4] * d[5] * d[24] * d[34] + 2 * d[0] * d[2] * d[25] * d[34] - 2 * std::pow(d[4], 2) * d[25] * d[34] + 2 * d[3] * d[4] * d[26] * d[34] - 2 * d[0] * d[5] * d[26] * d[34] - 2 * d[5] * d[7] * d[18] * d[35] + 2 * d[1] * d[8] * d[18] * d[35] - 2 * d[4] * d[6] * d[19] * d[35] + 2 * d[0] * d[8] * d[19] * d[35] + 2 * d[5] * d[6] * d[21] * d[35] + 2 * d[4] * d[7] * d[21] * d[35] - 4 * d[3] * d[8] * d[21] * d[35] - 2 * d[1] * d[6] * d[22] * d[35] + 2 * d[3] * d[7] * d[22] * d[35] + 2 * d[3] * d[6] * d[23] * d[35] - 2 * d[0] * d[7] * d[23] * d[35] - 2 * d[1] * d[4] * d[24] * d[35] + 2 * d[3] * d[5] * d[24] * d[35] + 2 * d[3] * d[4] * d[25] * d[35] - 2 * d[0] * d[5] * d[25] * d[35] + 2 * d[0] * d[1] * d[26] * d[35] - 2 * std::pow(d[3], 2) * d[26] * d[35] - d[2] * d[19] * d[27] * d[44] - d[1] * d[20] * d[27] * d[44] + 2 * d[5] * d[23] * d[27] * d[44] - d[2] * d[18] * d[28] * d[44] - d[0] * d[20] * d[28] * d[44] + 2 * d[4] * d[22] * d[28] * d[44] - d[1] * d[18] * d[29] * d[44] - d[0] * d[19] * d[29] * d[44] + 2 * d[3] * d[21] * d[29] * d[44] + 2 * d[3] * d[20] * d[30] * d[44] + 2 * d[2] * d[21] * d[30] * d[44] - 2 * d[5] * d[22] * d[30] * d[44] - 2 * d[4] * d[23] * d[30] * d[44] + 2 * d[4] * d[19] * d[31] * d[44] - 2 * d[5] * d[21] * d[31] * d[44] + 2 * d[1] * d[22] * d[31] * d[44] - 2 * d[3] * d[23] * d[31] * d[44] + 2 * d[5] * d[18] * d[32] * d[44] - 2 * d[4] * d[21] * d[32] * d[44] - 2 * d[3] * d[22] * d[32] * d[44] + 2 * d[0] * d[23] * d[32] * d[44];
    coeffs[70] = std::pow(d[8], 2) * d[27] * d[28] + std::pow(d[7], 2) * d[27] * d[29] + std::pow(d[6], 2) * d[28] * d[29] - 2 * d[6] * d[7] * d[29] * d[30] - std::pow(d[8], 2) * std::pow(d[30], 2) - 2 * d[6] * d[8] * d[28] * d[31] + 2 * d[7] * d[8] * d[30] * d[31] - std::pow(d[7], 2) * std::pow(d[31], 2) - 2 * d[7] * d[8] * d[27] * d[32] + 2 * d[6] * d[8] * d[30] * d[32] + 2 * d[6] * d[7] * d[31] * d[32] - std::pow(d[6], 2) * std::pow(d[32], 2) + 2 * d[2] * d[6] * d[28] * d[33] - 2 * d[4] * d[8] * d[28] * d[33] + 2 * d[1] * d[6] * d[29] * d[33] - 2 * d[3] * d[7] * d[29] * d[33] - 2 * d[2] * d[7] * d[30] * d[33] + 2 * d[5] * d[8] * d[30] * d[33] + 2 * d[5] * d[7] * d[31] * d[33] - 2 * d[1] * d[8] * d[31] * d[33] - 4 * d[5] * d[6] * d[32] * d[33] + 2 * d[4] * d[7] * d[32] * d[33] + 2 * d[3] * d[8] * d[32] * d[33] + d[1] * d[2] * std::pow(d[33], 2) - std::pow(d[5], 2) * std::pow(d[33], 2) + 2 * d[2] * d[7] * d[27] * d[34] - 2 * d[5] * d[8] * d[27] * d[34] - 2 * d[3] * d[6] * d[29] * d[34] + 2 * d[0] * d[7] * d[29] * d[34] - 2 * d[2] * d[6] * d[30] * d[34] + 2 * d[4] * d[8] * d[30] * d[34] + 2 * d[5] * d[6] * d[31] * d[34] - 4 * d[4] * d[7] * d[31] * d[34] + 2 * d[3] * d[8] * d[31] * d[34] + 2 * d[4] * d[6] * d[32] * d[34] - 2 * d[0] * d[8] * d[32] * d[34] - 2 * d[2] * d[3] * d[33] * d[34] + 2 * d[4] * d[5] * d[33] * d[34] + d[0] * d[2] * std::pow(d[34], 2) - std::pow(d[4], 2) * std::pow(d[34], 2) - 2 * d[5] * d[7] * d[27] * d[35] + 2 * d[1] * d[8] * d[27] * d[35] - 2 * d[4] * d[6] * d[28] * d[35] + 2 * d[0] * d[8] * d[28] * d[35] + 2 * d[5] * d[6] * d[30] * d[35] + 2 * d[4] * d[7] * d[30] * d[35] - 4 * d[3] * d[8] * d[30] * d[35] - 2 * d[1] * d[6] * d[31] * d[35] + 2 * d[3] * d[7] * d[31] * d[35] + 2 * d[3] * d[6] * d[32] * d[35] - 2 * d[0] * d[7] * d[32] * d[35] - 2 * d[1] * d[4] * d[33] * d[35] + 2 * d[3] * d[5] * d[33] * d[35] + 2 * d[3] * d[4] * d[34] * d[35] - 2 * d[0] * d[5] * d[34] * d[35] + d[0] * d[1] * std::pow(d[35], 2) - std::pow(d[3], 2) * std::pow(d[35], 2) - d[2] * d[27] * d[28] * d[44] - d[1] * d[27] * d[29] * d[44] - d[0] * d[28] * d[29] * d[44] + 2 * d[3] * d[29] * d[30] * d[44] + d[2] * std::pow(d[30], 2) * d[44] + 2 * d[4] * d[28] * d[31] * d[44] - 2 * d[5] * d[30] * d[31] * d[44] + d[1] * std::pow(d[31], 2) * d[44] + 2 * d[5] * d[27] * d[32] * d[44] - 2 * d[4] * d[30] * d[32] * d[44] - 2 * d[3] * d[31] * d[32] * d[44] + d[0] * std::pow(d[32], 2) * d[44];
    coeffs[71] = d[2] * std::pow(d[7], 2) * d[9] - 2 * d[5] * d[7] * d[8] * d[9] + d[1] * std::pow(d[8], 2) * d[9] + d[2] * std::pow(d[6], 2) * d[10] - 2 * d[4] * d[6] * d[8] * d[10] + d[0] * std::pow(d[8], 2) * d[10] + d[1] * std::pow(d[6], 2) * d[11] - 2 * d[3] * d[6] * d[7] * d[11] + d[0] * std::pow(d[7], 2) * d[11] - 2 * d[2] * d[6] * d[7] * d[12] + 2 * d[5] * d[6] * d[8] * d[12] + 2 * d[4] * d[7] * d[8] * d[12] - 2 * d[3] * std::pow(d[8], 2) * d[12] + 2 * d[5] * d[6] * d[7] * d[13] - 2 * d[4] * std::pow(d[7], 2) * d[13] - 2 * d[1] * d[6] * d[8] * d[13] + 2 * d[3] * d[7] * d[8] * d[13] - 2 * d[5] * std::pow(d[6], 2) * d[14] + 2 * d[4] * d[6] * d[7] * d[14] + 2 * d[3] * d[6] * d[8] * d[14] - 2 * d[0] * d[7] * d[8] * d[14] + 2 * d[1] * d[2] * d[6] * d[15] - 2 * std::pow(d[5], 2) * d[6] * d[15] - 2 * d[2] * d[3] * d[7] * d[15] + 2 * d[4] * d[5] * d[7] * d[15] - 2 * d[1] * d[4] * d[8] * d[15] + 2 * d[3] * d[5] * d[8] * d[15] - 2 * d[2] * d[3] * d[6] * d[16] + 2 * d[4] * d[5] * d[6] * d[16] + 2 * d[0] * d[2] * d[7] * d[16] - 2 * std::pow(d[4], 2) * d[7] * d[16] + 2 * d[3] * d[4] * d[8] * d[16] - 2 * d[0] * d[5] * d[8] * d[16] - 2 * d[1] * d[4] * d[6] * d[17] + 2 * d[3] * d[5] * d[6] * d[17] + 2 * d[3] * d[4] * d[7] * d[17] - 2 * d[0] * d[5] * d[7] * d[17] + 2 * d[0] * d[1] * d[8] * d[17] - 2 * std::pow(d[3], 2) * d[8] * d[17] - d[1] * d[2] * d[9] * d[44] + std::pow(d[5], 2) * d[9] * d[44] - d[0] * d[2] * d[10] * d[44] + std::pow(d[4], 2) * d[10] * d[44] - d[0] * d[1] * d[11] * d[44] + std::pow(d[3], 2) * d[11] * d[44] + 2 * d[2] * d[3] * d[12] * d[44] - 2 * d[4] * d[5] * d[12] * d[44] + 2 * d[1] * d[4] * d[13] * d[44] - 2 * d[3] * d[5] * d[13] * d[44] - 2 * d[3] * d[4] * d[14] * d[44] + 2 * d[0] * d[5] * d[14] * d[44];
    coeffs[72] = d[2] * std::pow(d[7], 2) * d[18] - 2 * d[5] * d[7] * d[8] * d[18] + d[1] * std::pow(d[8], 2) * d[18] + d[2] * std::pow(d[6], 2) * d[19] - 2 * d[4] * d[6] * d[8] * d[19] + d[0] * std::pow(d[8], 2) * d[19] + d[1] * std::pow(d[6], 2) * d[20] - 2 * d[3] * d[6] * d[7] * d[20] + d[0] * std::pow(d[7], 2) * d[20] - 2 * d[2] * d[6] * d[7] * d[21] + 2 * d[5] * d[6] * d[8] * d[21] + 2 * d[4] * d[7] * d[8] * d[21] - 2 * d[3] * std::pow(d[8], 2) * d[21] + 2 * d[5] * d[6] * d[7] * d[22] - 2 * d[4] * std::pow(d[7], 2) * d[22] - 2 * d[1] * d[6] * d[8] * d[22] + 2 * d[3] * d[7] * d[8] * d[22] - 2 * d[5] * std::pow(d[6], 2) * d[23] + 2 * d[4] * d[6] * d[7] * d[23] + 2 * d[3] * d[6] * d[8] * d[23] - 2 * d[0] * d[7] * d[8] * d[23] + 2 * d[1] * d[2] * d[6] * d[24] - 2 * std::pow(d[5], 2) * d[6] * d[24] - 2 * d[2] * d[3] * d[7] * d[24] + 2 * d[4] * d[5] * d[7] * d[24] - 2 * d[1] * d[4] * d[8] * d[24] + 2 * d[3] * d[5] * d[8] * d[24] - 2 * d[2] * d[3] * d[6] * d[25] + 2 * d[4] * d[5] * d[6] * d[25] + 2 * d[0] * d[2] * d[7] * d[25] - 2 * std::pow(d[4], 2) * d[7] * d[25] + 2 * d[3] * d[4] * d[8] * d[25] - 2 * d[0] * d[5] * d[8] * d[25] - 2 * d[1] * d[4] * d[6] * d[26] + 2 * d[3] * d[5] * d[6] * d[26] + 2 * d[3] * d[4] * d[7] * d[26] - 2 * d[0] * d[5] * d[7] * d[26] + 2 * d[0] * d[1] * d[8] * d[26] - 2 * std::pow(d[3], 2) * d[8] * d[26] - d[1] * d[2] * d[18] * d[44] + std::pow(d[5], 2) * d[18] * d[44] - d[0] * d[2] * d[19] * d[44] + std::pow(d[4], 2) * d[19] * d[44] - d[0] * d[1] * d[20] * d[44] + std::pow(d[3], 2) * d[20] * d[44] + 2 * d[2] * d[3] * d[21] * d[44] - 2 * d[4] * d[5] * d[21] * d[44] + 2 * d[1] * d[4] * d[22] * d[44] - 2 * d[3] * d[5] * d[22] * d[44] - 2 * d[3] * d[4] * d[23] * d[44] + 2 * d[0] * d[5] * d[23] * d[44];
    coeffs[73] = d[2] * std::pow(d[7], 2) * d[27] - 2 * d[5] * d[7] * d[8] * d[27] + d[1] * std::pow(d[8], 2) * d[27] + d[2] * std::pow(d[6], 2) * d[28] - 2 * d[4] * d[6] * d[8] * d[28] + d[0] * std::pow(d[8], 2) * d[28] + d[1] * std::pow(d[6], 2) * d[29] - 2 * d[3] * d[6] * d[7] * d[29] + d[0] * std::pow(d[7], 2) * d[29] - 2 * d[2] * d[6] * d[7] * d[30] + 2 * d[5] * d[6] * d[8] * d[30] + 2 * d[4] * d[7] * d[8] * d[30] - 2 * d[3] * std::pow(d[8], 2) * d[30] + 2 * d[5] * d[6] * d[7] * d[31] - 2 * d[4] * std::pow(d[7], 2) * d[31] - 2 * d[1] * d[6] * d[8] * d[31] + 2 * d[3] * d[7] * d[8] * d[31] - 2 * d[5] * std::pow(d[6], 2) * d[32] + 2 * d[4] * d[6] * d[7] * d[32] + 2 * d[3] * d[6] * d[8] * d[32] - 2 * d[0] * d[7] * d[8] * d[32] + 2 * d[1] * d[2] * d[6] * d[33] - 2 * std::pow(d[5], 2) * d[6] * d[33] - 2 * d[2] * d[3] * d[7] * d[33] + 2 * d[4] * d[5] * d[7] * d[33] - 2 * d[1] * d[4] * d[8] * d[33] + 2 * d[3] * d[5] * d[8] * d[33] - 2 * d[2] * d[3] * d[6] * d[34] + 2 * d[4] * d[5] * d[6] * d[34] + 2 * d[0] * d[2] * d[7] * d[34] - 2 * std::pow(d[4], 2) * d[7] * d[34] + 2 * d[3] * d[4] * d[8] * d[34] - 2 * d[0] * d[5] * d[8] * d[34] - 2 * d[1] * d[4] * d[6] * d[35] + 2 * d[3] * d[5] * d[6] * d[35] + 2 * d[3] * d[4] * d[7] * d[35] - 2 * d[0] * d[5] * d[7] * d[35] + 2 * d[0] * d[1] * d[8] * d[35] - 2 * std::pow(d[3], 2) * d[8] * d[35] - d[1] * d[2] * d[27] * d[44] + std::pow(d[5], 2) * d[27] * d[44] - d[0] * d[2] * d[28] * d[44] + std::pow(d[4], 2) * d[28] * d[44] - d[0] * d[1] * d[29] * d[44] + std::pow(d[3], 2) * d[29] * d[44] + 2 * d[2] * d[3] * d[30] * d[44] - 2 * d[4] * d[5] * d[30] * d[44] + 2 * d[1] * d[4] * d[31] * d[44] - 2 * d[3] * d[5] * d[31] * d[44] - 2 * d[3] * d[4] * d[32] * d[44] + 2 * d[0] * d[5] * d[32] * d[44];
    coeffs[74] = d[1] * d[2] * std::pow(d[6], 2) - std::pow(d[5], 2) * std::pow(d[6], 2) - 2 * d[2] * d[3] * d[6] * d[7] + 2 * d[4] * d[5] * d[6] * d[7] + d[0] * d[2] * std::pow(d[7], 2) - std::pow(d[4], 2) * std::pow(d[7], 2) - 2 * d[1] * d[4] * d[6] * d[8] + 2 * d[3] * d[5] * d[6] * d[8] + 2 * d[3] * d[4] * d[7] * d[8] - 2 * d[0] * d[5] * d[7] * d[8] + d[0] * d[1] * std::pow(d[8], 2) - std::pow(d[3], 2) * std::pow(d[8], 2) - d[0] * d[1] * d[2] * d[44] + d[2] * std::pow(d[3], 2) * d[44] + d[1] * std::pow(d[4], 2) * d[44] - 2 * d[3] * d[4] * d[5] * d[44] + d[0] * std::pow(d[5], 2) * d[44];
    coeffs[75] = d[9] * d[10] * d[11] - d[11] * std::pow(d[12], 2) - d[10] * std::pow(d[13], 2) + 2 * d[12] * d[13] * d[14] - d[9] * std::pow(d[14], 2);
    coeffs[76] = d[10] * d[11] * d[18] - std::pow(d[14], 2) * d[18] + d[9] * d[11] * d[19] - std::pow(d[13], 2) * d[19] + d[9] * d[10] * d[20] - std::pow(d[12], 2) * d[20] - 2 * d[11] * d[12] * d[21] + 2 * d[13] * d[14] * d[21] - 2 * d[10] * d[13] * d[22] + 2 * d[12] * d[14] * d[22] + 2 * d[12] * d[13] * d[23] - 2 * d[9] * d[14] * d[23];
    coeffs[77] = d[11] * d[18] * d[19] + d[10] * d[18] * d[20] + d[9] * d[19] * d[20] - 2 * d[12] * d[20] * d[21] - d[11] * std::pow(d[21], 2) - 2 * d[13] * d[19] * d[22] + 2 * d[14] * d[21] * d[22] - d[10] * std::pow(d[22], 2) - 2 * d[14] * d[18] * d[23] + 2 * d[13] * d[21] * d[23] + 2 * d[12] * d[22] * d[23] - d[9] * std::pow(d[23], 2);
    coeffs[78] = d[18] * d[19] * d[20] - d[20] * std::pow(d[21], 2) - d[19] * std::pow(d[22], 2) + 2 * d[21] * d[22] * d[23] - d[18] * std::pow(d[23], 2);
    coeffs[79] = d[10] * d[11] * d[27] - std::pow(d[14], 2) * d[27] + d[9] * d[11] * d[28] - std::pow(d[13], 2) * d[28] + d[9] * d[10] * d[29] - std::pow(d[12], 2) * d[29] - 2 * d[11] * d[12] * d[30] + 2 * d[13] * d[14] * d[30] - 2 * d[10] * d[13] * d[31] + 2 * d[12] * d[14] * d[31] + 2 * d[12] * d[13] * d[32] - 2 * d[9] * d[14] * d[32];
    coeffs[80] = d[11] * d[19] * d[27] + d[10] * d[20] * d[27] - 2 * d[14] * d[23] * d[27] + d[11] * d[18] * d[28] + d[9] * d[20] * d[28] - 2 * d[13] * d[22] * d[28] + d[10] * d[18] * d[29] + d[9] * d[19] * d[29] - 2 * d[12] * d[21] * d[29] - 2 * d[12] * d[20] * d[30] - 2 * d[11] * d[21] * d[30] + 2 * d[14] * d[22] * d[30] + 2 * d[13] * d[23] * d[30] - 2 * d[13] * d[19] * d[31] + 2 * d[14] * d[21] * d[31] - 2 * d[10] * d[22] * d[31] + 2 * d[12] * d[23] * d[31] - 2 * d[14] * d[18] * d[32] + 2 * d[13] * d[21] * d[32] + 2 * d[12] * d[22] * d[32] - 2 * d[9] * d[23] * d[32];
    coeffs[81] = d[19] * d[20] * d[27] - std::pow(d[23], 2) * d[27] + d[18] * d[20] * d[28] - std::pow(d[22], 2) * d[28] + d[18] * d[19] * d[29] - std::pow(d[21], 2) * d[29] - 2 * d[20] * d[21] * d[30] + 2 * d[22] * d[23] * d[30] - 2 * d[19] * d[22] * d[31] + 2 * d[21] * d[23] * d[31] + 2 * d[21] * d[22] * d[32] - 2 * d[18] * d[23] * d[32];
    coeffs[82] = d[11] * d[27] * d[28] + d[10] * d[27] * d[29] + d[9] * d[28] * d[29] - 2 * d[12] * d[29] * d[30] - d[11] * std::pow(d[30], 2) - 2 * d[13] * d[28] * d[31] + 2 * d[14] * d[30] * d[31] - d[10] * std::pow(d[31], 2) - 2 * d[14] * d[27] * d[32] + 2 * d[13] * d[30] * d[32] + 2 * d[12] * d[31] * d[32] - d[9] * std::pow(d[32], 2);
    coeffs[83] = d[20] * d[27] * d[28] + d[19] * d[27] * d[29] + d[18] * d[28] * d[29] - 2 * d[21] * d[29] * d[30] - d[20] * std::pow(d[30], 2) - 2 * d[22] * d[28] * d[31] + 2 * d[23] * d[30] * d[31] - d[19] * std::pow(d[31], 2) - 2 * d[23] * d[27] * d[32] + 2 * d[22] * d[30] * d[32] + 2 * d[21] * d[31] * d[32] - d[18] * std::pow(d[32], 2);
    coeffs[84] = d[27] * d[28] * d[29] - d[29] * std::pow(d[30], 2) - d[28] * std::pow(d[31], 2) + 2 * d[30] * d[31] * d[32] - d[27] * std::pow(d[32], 2);
    coeffs[85] = d[2] * d[9] * d[10] + d[1] * d[9] * d[11] + d[0] * d[10] * d[11] - 2 * d[3] * d[11] * d[12] - d[2] * std::pow(d[12], 2) - 2 * d[4] * d[10] * d[13] + 2 * d[5] * d[12] * d[13] - d[1] * std::pow(d[13], 2) - 2 * d[5] * d[9] * d[14] + 2 * d[4] * d[12] * d[14] + 2 * d[3] * d[13] * d[14] - d[0] * std::pow(d[14], 2);
    coeffs[86] = d[2] * d[10] * d[18] + d[1] * d[11] * d[18] - 2 * d[5] * d[14] * d[18] + d[2] * d[9] * d[19] + d[0] * d[11] * d[19] - 2 * d[4] * d[13] * d[19] + d[1] * d[9] * d[20] + d[0] * d[10] * d[20] - 2 * d[3] * d[12] * d[20] - 2 * d[3] * d[11] * d[21] - 2 * d[2] * d[12] * d[21] + 2 * d[5] * d[13] * d[21] + 2 * d[4] * d[14] * d[21] - 2 * d[4] * d[10] * d[22] + 2 * d[5] * d[12] * d[22] - 2 * d[1] * d[13] * d[22] + 2 * d[3] * d[14] * d[22] - 2 * d[5] * d[9] * d[23] + 2 * d[4] * d[12] * d[23] + 2 * d[3] * d[13] * d[23] - 2 * d[0] * d[14] * d[23];
    coeffs[87] = d[2] * d[18] * d[19] + d[1] * d[18] * d[20] + d[0] * d[19] * d[20] - 2 * d[3] * d[20] * d[21] - d[2] * std::pow(d[21], 2) - 2 * d[4] * d[19] * d[22] + 2 * d[5] * d[21] * d[22] - d[1] * std::pow(d[22], 2) - 2 * d[5] * d[18] * d[23] + 2 * d[4] * d[21] * d[23] + 2 * d[3] * d[22] * d[23] - d[0] * std::pow(d[23], 2);
    coeffs[88] = d[2] * d[10] * d[27] + d[1] * d[11] * d[27] - 2 * d[5] * d[14] * d[27] + d[2] * d[9] * d[28] + d[0] * d[11] * d[28] - 2 * d[4] * d[13] * d[28] + d[1] * d[9] * d[29] + d[0] * d[10] * d[29] - 2 * d[3] * d[12] * d[29] - 2 * d[3] * d[11] * d[30] - 2 * d[2] * d[12] * d[30] + 2 * d[5] * d[13] * d[30] + 2 * d[4] * d[14] * d[30] - 2 * d[4] * d[10] * d[31] + 2 * d[5] * d[12] * d[31] - 2 * d[1] * d[13] * d[31] + 2 * d[3] * d[14] * d[31] - 2 * d[5] * d[9] * d[32] + 2 * d[4] * d[12] * d[32] + 2 * d[3] * d[13] * d[32] - 2 * d[0] * d[14] * d[32];
    coeffs[89] = d[2] * d[19] * d[27] + d[1] * d[20] * d[27] - 2 * d[5] * d[23] * d[27] + d[2] * d[18] * d[28] + d[0] * d[20] * d[28] - 2 * d[4] * d[22] * d[28] + d[1] * d[18] * d[29] + d[0] * d[19] * d[29] - 2 * d[3] * d[21] * d[29] - 2 * d[3] * d[20] * d[30] - 2 * d[2] * d[21] * d[30] + 2 * d[5] * d[22] * d[30] + 2 * d[4] * d[23] * d[30] - 2 * d[4] * d[19] * d[31] + 2 * d[5] * d[21] * d[31] - 2 * d[1] * d[22] * d[31] + 2 * d[3] * d[23] * d[31] - 2 * d[5] * d[18] * d[32] + 2 * d[4] * d[21] * d[32] + 2 * d[3] * d[22] * d[32] - 2 * d[0] * d[23] * d[32];
    coeffs[90] = d[2] * d[27] * d[28] + d[1] * d[27] * d[29] + d[0] * d[28] * d[29] - 2 * d[3] * d[29] * d[30] - d[2] * std::pow(d[30], 2) - 2 * d[4] * d[28] * d[31] + 2 * d[5] * d[30] * d[31] - d[1] * std::pow(d[31], 2) - 2 * d[5] * d[27] * d[32] + 2 * d[4] * d[30] * d[32] + 2 * d[3] * d[31] * d[32] - d[0] * std::pow(d[32], 2);
    coeffs[91] = d[1] * d[2] * d[9] - std::pow(d[5], 2) * d[9] + d[0] * d[2] * d[10] - std::pow(d[4], 2) * d[10] + d[0] * d[1] * d[11] - std::pow(d[3], 2) * d[11] - 2 * d[2] * d[3] * d[12] + 2 * d[4] * d[5] * d[12] - 2 * d[1] * d[4] * d[13] + 2 * d[3] * d[5] * d[13] + 2 * d[3] * d[4] * d[14] - 2 * d[0] * d[5] * d[14];
    coeffs[92] = d[1] * d[2] * d[18] - std::pow(d[5], 2) * d[18] + d[0] * d[2] * d[19] - std::pow(d[4], 2) * d[19] + d[0] * d[1] * d[20] - std::pow(d[3], 2) * d[20] - 2 * d[2] * d[3] * d[21] + 2 * d[4] * d[5] * d[21] - 2 * d[1] * d[4] * d[22] + 2 * d[3] * d[5] * d[22] + 2 * d[3] * d[4] * d[23] - 2 * d[0] * d[5] * d[23];
    coeffs[93] = d[1] * d[2] * d[27] - std::pow(d[5], 2) * d[27] + d[0] * d[2] * d[28] - std::pow(d[4], 2) * d[28] + d[0] * d[1] * d[29] - std::pow(d[3], 2) * d[29] - 2 * d[2] * d[3] * d[30] + 2 * d[4] * d[5] * d[30] - 2 * d[1] * d[4] * d[31] + 2 * d[3] * d[5] * d[31] + 2 * d[3] * d[4] * d[32] - 2 * d[0] * d[5] * d[32];
    coeffs[94] = -1;
    coeffs[95] = d[0] * d[1] * d[2] - d[2] * std::pow(d[3], 2) - d[1] * std::pow(d[4], 2) + 2 * d[3] * d[4] * d[5] - d[0] * std::pow(d[5], 2);

    // Setup elimination template
    static const int coeffs0_ind[] = {0, 40, 1, 0, 20, 40, 41, 2, 1, 0, 20, 21, 41, 42, 3, 2, 1, 21, 22, 42, 43, 3, 2, 22, 23, 43, 44, 3, 23, 44, 0, 20, 40, 4, 1, 0, 20, 21, 40, 41, 45, 5, 4, 24, 45, 2, 1, 0, 20, 21, 22, 41, 42, 46, 6, 5, 4, 24, 25, 46, 3, 2, 1, 21, 22, 23, 42, 43, 47, 6, 5, 25, 26, 47, 3, 2, 22, 23, 43, 44, 48, 6, 26, 48, 3, 23, 44, 0, 40, 1, 0, 20, 40, 41, 4, 24, 2, 1, 0, 20, 21, 40, 41, 45, 42, 75, 7, 5, 4, 24, 25, 3, 2, 1, 0, 20, 21, 22, 41, 45, 42, 46, 49, 43, 75, 76, 8, 7, 27, 49, 6, 5, 4, 24, 25, 26, 3, 2, 1, 21, 22, 23, 42, 46, 43, 47, 50, 44, 76, 77, 8, 7, 27, 28, 50, 6, 5, 25, 26, 3, 2, 22, 23, 43, 47, 44, 48, 51, 77, 78, 8, 28, 51, 6, 26, 3, 23, 44, 48, 78, 4, 0, 20, 40, 45, 75, 5, 4, 24, 1, 0, 20, 21, 40, 41, 45, 46, 76, 75, 7, 27, 6, 5, 4, 24, 25, 2, 1, 0, 20, 21, 22, 41, 45, 42, 46, 49, 47, 75, 77, 79, 76, 9, 8, 7, 27, 28, 6, 5, 4, 24, 25, 26, 3, 2, 1, 21, 22, 23, 42, 46, 49, 43, 47, 50, 52, 48, 76, 79, 78, 80, 77, 9, 29, 52, 8, 7, 27, 28, 6, 5, 25, 26, 3, 2, 22, 23, 43, 47, 50, 44, 48, 51, 53, 77, 80, 81, 78, 9, 29, 53, 8, 28, 6, 26, 3, 23, 44, 48, 51, 78, 81, 7, 4, 24, 0, 20, 40, 45, 49, 75, 79, 8, 7, 27, 5, 4, 24, 25, 1, 20, 21, 0, 41, 45, 46, 49, 50, 75, 76, 80, 79, 9, 29, 8, 7, 27, 28, 6, 5, 4, 24, 25, 26, 2, 21, 22, 1, 42, 46, 49, 47, 50, 52, 51, 76, 79, 77, 81, 82, 80, 9, 29, 8, 7, 27, 28, 6, 5, 25, 26, 3, 22, 23, 2, 43, 47, 50, 52, 48, 51, 53, 54, 77, 80, 82, 78, 83, 81, 54, 9, 29, 8, 28, 6, 26, 23, 3, 44, 48, 51, 53, 78, 81, 83, 9, 7, 27, 4, 24, 45, 20, 0, 49, 52, 75, 79, 82, 9, 29, 8, 7, 27, 28, 5, 24, 25, 4, 46, 21, 49, 1, 50, 52, 53, 76, 79, 80, 83, 82, 9, 29, 8, 7, 27, 28, 6, 25, 26, 5, 47, 22, 50, 52, 2, 51, 53, 54, 77, 80, 82, 81, 84, 83, 9, 29, 8, 28, 26, 6, 48, 23, 51, 53, 54, 3, 78, 81, 83, 84, 0, 20, 40, 10, 1, 20, 21, 40, 55, 0, 41, 11, 10, 30, 55, 2, 21, 20, 0, 22, 41, 56, 1, 42, 12, 11, 10, 30, 31, 56, 3, 22, 21, 1, 23, 42, 57, 2, 43, 12, 11, 31, 32, 57, 23, 22, 2, 43, 58, 3, 44, 12, 32, 58, 23, 3, 44, 0, 40, 1, 0, 20, 40, 41, 10, 30, 4, 24, 2, 1, 20, 21, 0, 40, 55, 41, 45, 42, 75, 13, 11, 10, 30, 31, 55, 5, 24, 25, 45, 3, 2, 21, 20, 0, 22, 1, 41, 56, 59, 4, 42, 46, 43, 75, 76, 14, 13, 33, 59, 12, 11, 10, 30, 31, 32, 56, 6, 25, 24, 4, 26, 46, 3, 22, 21, 1, 23, 2, 42, 57, 60, 5, 43, 47, 44, 76, 77, 14, 13, 33, 34, 60, 12, 11, 31, 32, 57, 26, 25, 5, 47, 23, 22, 2, 3, 43, 58, 61, 6, 44, 48, 77, 78, 14, 34, 61, 12, 32, 58, 26, 6, 48, 23, 3, 44, 78, 10, 4, 20, 0, 55, 40, 45, 75, 11, 10, 30, 5, 4, 24, 21, 20, 0, 1, 40, 55, 56, 41, 45, 46, 75, 76, 13, 33, 12, 11, 10, 30, 31, 55, 7, 27, 6, 5, 24, 25, 4, 22, 21, 20, 0, 1, 2, 41, 45, 56, 59, 57, 42, 46, 49, 47, 75, 76, 85, 77, 79, 15, 14, 13, 33, 34, 12, 11, 10, 30, 31, 32, 56, 59, 8, 27, 28, 49, 6, 25, 24, 4, 26, 5, 23, 22, 21, 1, 2, 3, 42, 46, 57, 60, 62, 58, 7, 43, 47, 50, 48, 76, 79, 85, 77, 86, 78, 80, 15, 35, 62, 14, 13, 33, 34, 12, 11, 31, 32, 57, 60, 28, 27, 7, 50, 26, 25, 5, 6, 23, 22, 2, 3, 43, 47, 58, 61, 63, 8, 44, 48, 51, 77, 80, 86, 78, 87, 81, 15, 35, 63, 14, 34, 12, 32, 58, 61, 28, 8, 51, 26, 6, 23, 3, 44, 48, 78, 81, 87, 13, 10, 30, 7, 24, 4, 20, 0, 40, 55, 59, 45, 49, 75, 85, 79, 14, 13, 33, 11, 10, 30, 31, 55, 8, 7, 27, 25, 24, 4, 5, 21, 20, 0, 1, 41, 45, 56, 59, 60, 46, 49, 50, 75, 76, 79, 86, 85, 80, 15, 35, 14, 13, 33, 34, 12, 11, 10, 30, 31, 32, 56, 59, 9, 29, 8, 27, 28, 7, 26, 25, 24, 4, 5, 6, 22, 21, 1, 2, 42, 46, 49, 57, 60, 62, 61, 47, 50, 52, 51, 76, 79, 85, 77, 80, 87, 88, 86, 81, 82, 15, 35, 14, 13, 33, 34, 12, 11, 31, 32, 57, 60, 62, 29, 52, 28, 27, 7, 8, 26, 25, 5, 6, 23, 22, 2, 3, 43, 47, 50, 58, 61, 63, 64, 9, 48, 51, 53, 77, 80, 86, 82, 88, 78, 81, 89, 87, 83, 64, 15, 35, 14, 34, 12, 32, 58, 61, 63, 29, 9, 53, 28, 8, 26, 6, 23, 3, 44, 48, 51, 78, 81, 87, 83, 89, 15, 13, 33, 10, 30, 55, 9, 27, 7, 24, 4, 45, 20, 0, 59, 62, 49, 52, 75, 79, 85, 88, 82, 15, 35, 14, 13, 33, 34, 11, 30, 31, 10, 56, 59, 9, 29, 28, 27, 7, 8, 25, 24, 4, 5, 46, 21, 1, 49, 60, 62, 63, 50, 52, 53, 76, 79, 85, 80, 86, 82, 89, 88, 83, 15, 35, 14, 13, 33, 34, 12, 31, 32, 11, 57, 60, 62, 29, 9, 28, 27, 7, 8, 26, 25, 5, 6, 47, 22, 2, 50, 52, 61, 63, 64, 51, 53, 54, 77, 80, 86, 82, 88, 81, 87, 83, 90, 89, 84, 15, 35, 14, 34, 32, 12, 58, 61, 63, 64, 54, 29, 9, 28, 8, 26, 6, 48, 23, 3, 51, 53, 78, 81, 87, 83, 89, 84, 90, 15, 35, 13, 33, 59, 30, 29, 9, 27, 7, 49, 24, 4, 10, 62, 64, 52, 54, 79, 85, 82, 88, 90, 84, 15, 35, 14, 33, 34, 13, 60, 31, 62, 29, 9, 28, 27, 7, 8, 50, 25, 5, 52, 11, 63, 64, 53, 54, 80, 86, 82, 88, 83, 89, 84, 90, 15, 35, 34, 14, 61, 32, 63, 64, 29, 9, 28, 8, 51, 26, 6, 53, 54, 12, 81, 87, 83, 89, 84, 90, 15, 35, 62, 33, 29, 9, 52, 27, 7, 13, 64, 54, 82, 88, 84, 90, 35, 15, 63, 34, 64, 29, 9, 53, 28, 8, 54, 14, 83, 89, 84, 90, 64, 35, 54, 29, 9, 15, 84, 90, 0, 40, 1, 0, 20, 40, 41, 10, 30, 2, 1, 0, 20, 21, 40, 55, 41, 42, 75, 16, 11, 30, 31, 55, 65, 3, 2, 1, 21, 0, 22, 41, 10, 56, 42, 20, 43, 75, 76, 17, 16, 36, 65, 12, 31, 30, 10, 32, 56, 66, 3, 2, 22, 1, 23, 42, 11, 57, 43, 21, 44, 76, 77, 17, 16, 36, 37, 66, 32, 31, 11, 57, 67, 3, 23, 2, 43, 12, 58, 44, 22, 77, 78, 17, 37, 67, 32, 12, 58, 3, 44, 23, 78, 10, 4, 20, 0, 40, 55, 45, 75, 11, 10, 30, 5, 4, 24, 21, 20, 1, 40, 0, 41, 55, 56, 45, 46, 75, 76, 16, 36, 13, 33, 12, 11, 30, 31, 10, 55, 65, 6, 5, 4, 24, 25, 45, 22, 21, 0, 2, 41, 1, 20, 42, 56, 59, 57, 46, 47, 75, 76, 79, 77, 85, 18, 17, 16, 36, 37, 65, 14, 33, 34, 59, 12, 31, 30, 10, 32, 11, 56, 66, 68, 6, 5, 25, 4, 26, 46, 23, 22, 1, 3, 42, 2, 21, 13, 43, 57, 60, 58, 47, 24, 48, 76, 79, 85, 77, 80, 78, 86, 18, 38, 68, 17, 16, 36, 37, 66, 34, 33, 13, 60, 32, 31, 11, 12, 57, 67, 69, 6, 26, 5, 47, 23, 2, 43, 3, 22, 14, 44, 58, 61, 48, 25, 77, 80, 86, 78, 81, 87, 18, 38, 69, 17, 37, 67, 34, 14, 61, 32, 12, 58, 6, 48, 3, 44, 23, 26, 78, 81, 87, 16, 13, 30, 10, 65, 7, 24, 4, 20, 0, 40, 45, 55, 59, 49, 75, 79, 85, 17, 16, 36, 14, 13, 33, 31, 30, 10, 11, 55, 65, 66, 8, 7, 27, 25, 24, 5, 45, 4, 21, 1, 41, 20, 0, 46, 56, 59, 60, 49, 50, 75, 76, 79, 85, 80, 86, 18, 38, 17, 16, 36, 37, 65, 15, 35, 14, 33, 34, 13, 32, 31, 30, 10, 11, 12, 56, 59, 66, 68, 67, 8, 7, 27, 28, 49, 26, 25, 4, 6, 46, 5, 22, 2, 42, 21, 24, 1, 47, 57, 60, 62, 61, 50, 51, 76, 79, 85, 77, 80, 86, 91, 82, 81, 87, 88, 18, 38, 17, 16, 36, 37, 66, 68, 35, 62, 34, 33, 13, 14, 32, 31, 11, 12, 57, 60, 67, 69, 70, 8, 28, 7, 50, 26, 5, 47, 6, 23, 3, 43, 22, 25, 2, 15, 48, 58, 61, 63, 51, 27, 77, 80, 86, 82, 88, 91, 78, 81, 87, 92, 83, 89, 70, 18, 38, 17, 37, 67, 69, 35, 15, 63, 34, 14, 32, 12, 58, 61, 8, 51, 6, 48, 44, 23, 26, 3, 28, 78, 81, 87, 83, 89, 92, 18, 16, 36, 15, 33, 13, 30, 10, 55, 65, 68, 9, 27, 7, 24, 4, 45, 0, 20, 49, 59, 62, 52, 75, 79, 85, 91, 82, 88, 18, 38, 17, 16, 36, 37, 65, 15, 35, 34, 33, 13, 14, 31, 30, 10, 11, 56, 59, 66, 68, 69, 9, 29, 28, 27, 8, 49, 7, 25, 5, 46, 24, 1, 21, 4, 50, 60, 62, 63, 52, 53, 76, 79, 85, 80, 86, 82, 88, 92, 91, 83, 89, 18, 38, 17, 16, 36, 37, 66, 68, 35, 15, 34, 33, 13, 14, 32, 31, 11, 12, 57, 60, 62, 67, 69, 70, 9, 29, 52, 28, 7, 50, 8, 26, 6, 47, 25, 27, 2, 22, 5, 51, 61, 63, 64, 53, 77, 80, 86, 82, 88, 91, 81, 87, 83, 89, 93, 92, 84, 90, 18, 38, 17, 37, 67, 69, 70, 64, 35, 15, 34, 14, 32, 12, 58, 61, 63, 9, 53, 8, 51, 48, 26, 28, 3, 23, 6, 29, 78, 81, 87, 83, 89, 92, 84, 90, 93, 18, 38, 16, 36, 65, 35, 15, 33, 13, 59, 30, 10, 68, 70, 29, 9, 27, 7, 49, 4, 24, 52, 62, 64, 85, 54, 79, 82, 88, 91, 93, 84, 90, 18, 38, 17, 36, 37, 16, 66, 68, 35, 15, 34, 33, 13, 14, 60, 31, 11, 62, 69, 70, 29, 52, 9, 28, 8, 50, 27, 5, 25, 7, 53, 63, 64, 86, 54, 80, 82, 88, 91, 83, 89, 92, 84, 90, 93, 18, 38, 37, 17, 67, 69, 70, 35, 15, 34, 14, 61, 32, 12, 63, 64, 54, 9, 53, 51, 28, 29, 6, 26, 8, 87, 81, 83, 89, 92, 84, 90, 93, 18, 38, 68, 36, 35, 15, 62, 33, 13, 16, 70, 29, 9, 52, 7, 27, 54, 64, 88, 82, 91, 84, 90, 93, 38, 18, 69, 37, 70, 35, 15, 63, 34, 14, 64, 17, 54, 53, 29, 8, 28, 9, 89, 83, 92, 84, 90, 93, 70, 38, 64, 35, 15, 18, 54, 9, 29, 90, 84, 93, 10, 20, 40, 55, 0, 75, 11, 10, 30, 21, 0, 40, 41, 55, 20, 56, 1, 75, 76, 16, 36, 12, 11, 10, 30, 31, 55, 65, 22, 1, 41, 20, 42, 56, 21, 0, 57, 2, 75, 76, 85, 77, 19, 17, 36, 37, 65, 71, 12, 11, 31, 10, 32, 56, 16, 66, 23, 2, 42, 21, 43, 57, 22, 30, 1, 58, 3, 76, 85, 77, 86, 78, 19, 39, 71, 37, 36, 16, 66, 72, 12, 32, 11, 57, 17, 67, 3, 43, 22, 44, 58, 23, 31, 2, 77, 86, 78, 87, 19, 39, 72, 37, 17, 67, 12, 58, 44, 23, 32, 3, 78, 87, 16, 13, 30, 10, 55, 65, 24, 45, 20, 0, 59, 4, 40, 75, 79, 85, 17, 16, 36, 14, 13, 33, 31, 30, 11, 55, 10, 56, 65, 66, 25, 4, 45, 46, 59, 21, 20, 1, 24, 0, 60, 5, 41, 75, 76, 79, 85, 80, 86, 19, 39, 18, 38, 17, 36, 37, 16, 65, 71, 14, 13, 33, 34, 59, 32, 31, 10, 12, 56, 11, 30, 57, 66, 68, 67, 26, 5, 46, 24, 47, 60, 22, 21, 2, 25, 4, 1, 61, 6, 42, 76, 79, 85, 77, 80, 86, 88, 81, 87, 91, 19, 39, 71, 38, 68, 37, 36, 16, 17, 66, 72, 73, 14, 34, 13, 60, 32, 11, 57, 12, 31, 18, 58, 67, 69, 6, 47, 25, 48, 61, 23, 22, 3, 26, 33, 5, 2, 43, 77, 80, 86, 88, 91, 78, 81, 87, 89, 92, 73, 19, 39, 72, 38, 18, 69, 37, 17, 67, 14, 61, 12, 58, 32, 48, 26, 23, 34, 6, 3, 44, 78, 81, 87, 89, 92, 19, 18, 36, 16, 71, 15, 33, 13, 30, 10, 55, 59, 65, 68, 27, 49, 24, 4, 20, 0, 62, 7, 75, 45, 79, 85, 82, 88, 91, 19, 39, 18, 38, 37, 36, 16, 17, 65, 71, 72, 15, 35, 34, 33, 14, 59, 13, 31, 11, 56, 30, 10, 60, 66, 68, 69, 28, 7, 49, 50, 62, 25, 24, 5, 27, 21, 1, 4, 63, 8, 76, 85, 46, 79, 80, 86, 82, 88, 91, 83, 89, 92, 19, 39, 71, 38, 18, 37, 36, 16, 17, 66, 68, 72, 73, 15, 35, 62, 34, 13, 60, 14, 32, 12, 57, 31, 33, 11, 61, 67, 69, 70, 8, 50, 27, 51, 63, 26, 25, 6, 28, 22, 2, 7, 5, 77, 86, 47, 80, 82, 88, 91, 81, 87, 83, 89, 92, 95, 90, 93, 19, 39, 72, 73, 70, 38, 18, 37, 17, 67, 69, 15, 63, 14, 61, 58, 32, 34, 12, 51, 28, 26, 35, 23, 3, 8, 6, 78, 87, 48, 81, 83, 89, 92, 90, 93, 95, 19, 39, 38, 18, 36, 16, 65, 71, 73, 35, 15, 33, 13, 59, 10, 30, 62, 68, 70, 29, 52, 27, 7, 24, 4, 64, 9, 79, 85, 49, 82, 88, 91, 95, 84, 90, 93, 19, 39, 71, 38, 18, 37, 36, 16, 17, 66, 68, 72, 73, 35, 62, 15, 34, 14, 60, 33, 11, 31, 13, 63, 69, 70, 9, 52, 53, 64, 28, 27, 8, 29, 25, 5, 7, 80, 86, 88, 50, 82, 91, 83, 89, 92, 84, 90, 93, 95, 19, 39, 72, 73, 38, 18, 37, 17, 67, 69, 70, 64, 15, 63, 61, 34, 35, 12, 32, 14, 53, 29, 28, 26, 6, 9, 8, 81, 87, 89, 51, 83, 92, 84, 90, 93, 95, 19, 39, 71, 38, 18, 68, 36, 16, 73, 35, 15, 62, 13, 33, 64, 70, 91, 54, 29, 9, 27, 7, 82, 88, 52, 84, 90, 93, 95, 39, 19, 72, 73, 38, 18, 69, 37, 17, 70, 64, 63, 35, 14, 34, 15, 92, 54, 29, 28, 8, 9, 83, 89, 90, 53, 84, 93, 95, 73, 39, 70, 38, 18, 19, 64, 15, 35, 93, 29, 9, 84, 90, 95, 54, 16, 30, 55, 65, 10, 40, 20, 0, 75, 85, 17, 16, 36, 31, 10, 55, 56, 65, 30, 66, 11, 41, 0, 21, 1, 75, 20, 76, 85, 86, 19, 39, 17, 16, 36, 37, 65, 71, 32, 11, 56, 30, 57, 66, 31, 10, 67, 12, 42, 1, 22, 2, 76, 21, 85, 77, 86, 91, 87, 39, 71, 74, 17, 37, 16, 66, 19, 72, 12, 57, 31, 58, 67, 32, 36, 11, 43, 2, 23, 3, 77, 22, 86, 91, 78, 87, 92, 74, 39, 19, 72, 17, 67, 58, 32, 37, 12, 44, 3, 78, 23, 87, 92, 19, 18, 36, 16, 65, 71, 33, 59, 30, 10, 68, 13, 45, 24, 4, 55, 75, 0, 20, 79, 85, 88, 91, 19, 39, 18, 38, 37, 36, 17, 65, 16, 66, 71, 72, 34, 13, 59, 60, 68, 31, 30, 11, 33, 10, 69, 14, 46, 4, 25, 5, 56, 76, 1, 21, 79, 85, 24, 80, 86, 88, 91, 89, 92, 39, 19, 71, 74, 18, 38, 68, 37, 16, 66, 17, 36, 67, 72, 73, 14, 60, 33, 61, 69, 32, 31, 12, 34, 13, 11, 47, 5, 26, 6, 57, 77, 2, 22, 80, 86, 25, 88, 91, 81, 87, 89, 92, 93, 95, 74, 73, 39, 19, 72, 18, 69, 17, 67, 37, 61, 34, 32, 38, 14, 12, 48, 6, 58, 78, 3, 23, 81, 87, 26, 89, 92, 93, 95, 39, 19, 74, 38, 18, 36, 16, 65, 68, 71, 73, 35, 62, 33, 13, 30, 10, 70, 15, 85, 49, 27, 7, 59, 79, 4, 24, 82, 88, 91, 90, 93, 95, 39, 19, 71, 74, 38, 68, 18, 37, 17, 66, 36, 16, 69, 72, 73, 15, 62, 63, 70, 34, 33, 14, 35, 31, 11, 13, 86, 91, 50, 7, 28, 8, 60, 80, 5, 25, 82, 88, 27, 83, 89, 92, 90, 93, 95, 74, 39, 19, 72, 73, 70, 18, 69, 67, 37, 38, 17, 63, 35, 34, 32, 12, 15, 14, 87, 92, 51, 8, 61, 81, 6, 26, 83, 89, 28, 90, 93, 95, 39, 19, 71, 74, 38, 18, 68, 16, 36, 70, 73, 64, 35, 15, 33, 13, 88, 91, 52, 29, 9, 62, 82, 7, 27, 84, 90, 93, 95, 74, 39, 19, 72, 73, 70, 69, 38, 17, 37, 18, 64, 35, 34, 14, 15, 89, 92, 93, 53, 9, 63, 83, 8, 28, 84, 90, 29, 95, 74, 73, 39, 19, 70, 18, 38, 95, 35, 15, 90, 93, 54, 64, 84, 9, 29, 19, 36, 65, 71, 16, 55, 30, 10, 75, 20, 0, 85, 91, 19, 39, 37, 16, 65, 66, 71, 36, 72, 17, 56, 10, 31, 11, 85, 30, 76, 21, 1, 86, 91, 92, 19, 39, 71, 74, 17, 66, 36, 67, 72, 37, 16, 57, 11, 32, 12, 86, 31, 91, 77, 22, 2, 87, 92, 95, 74, 19, 72, 67, 37, 39, 17, 58, 12, 87, 32, 92, 78, 23, 3, 95, 39, 19, 71, 74, 38, 68, 36, 16, 73, 18, 59, 33, 13, 65, 85, 10, 30, 79, 24, 4, 88, 91, 93, 95, 39, 71, 19, 72, 74, 18, 68, 69, 73, 37, 36, 17, 38, 16, 60, 13, 34, 14, 66, 86, 11, 31, 88, 91, 33, 80, 25, 5, 89, 92, 93, 95, 74, 73, 19, 72, 39, 69, 38, 37, 18, 17, 61, 14, 67, 87, 12, 32, 89, 92, 34, 93, 95, 81, 26, 6, 39, 19, 71, 73, 74, 70, 38, 18, 36, 16, 91, 62, 35, 15, 68, 88, 13, 33, 82, 27, 7, 90, 93, 95, 74, 73, 72, 39, 19, 70, 38, 37, 17, 18, 92, 95, 63, 15, 69, 89, 14, 34, 90, 93, 35, 83, 28, 8, 74, 73, 19, 39, 38, 18, 93, 95, 64, 70, 90, 15, 35, 84, 29, 9, 39, 71, 74, 19, 65, 36, 16, 85, 30, 10, 91, 95, 19, 71, 72, 74, 39, 66, 16, 37, 17, 91, 36, 86, 31, 11, 92, 95, 74, 72, 39, 19, 67, 17, 92, 37, 95, 87, 32, 12, 74, 73, 39, 19, 68, 38, 18, 71, 91, 16, 36, 88, 33, 13, 93, 95, 74, 73, 39, 19, 69, 18, 72, 92, 17, 37, 93, 95, 38, 89, 34, 14, 74, 39, 19, 95, 70, 73, 93, 18, 38, 90, 35, 15, 94, 94, 94, 94, 94, 94, 94, 94};
    static const int coeffs1_ind[] = {94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94};

    static const int C0_ind[] = {0, 66, 156, 157, 160, 161, 222, 312, 313, 314, 315, 316, 317, 378, 468, 469, 470, 471, 472, 473, 534, 625, 626, 627, 628, 629, 690, 782, 783, 785, 942, 947, 1001, 1092, 1098, 1099, 1102, 1103, 1125, 1157, 1158, 1248, 1249, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1281, 1313, 1314, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1437, 1469, 1470, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1593, 1625, 1626, 1718, 1719, 1721, 1724, 1725, 1749, 1884, 1939, 2040, 2041, 2046, 2092, 2095, 2190, 2195, 2196, 2197, 2198, 2201, 2202, 2216, 2248, 2249, 2251, 2333, 2340, 2346, 2347, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2372, 2373, 2404, 2405, 2406, 2407, 2479, 2489, 2496, 2497, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2509, 2510, 2511, 2512, 2513, 2514, 2528, 2529, 2560, 2561, 2562, 2563, 2635, 2645, 2653, 2654, 2655, 2656, 2657, 2659, 2660, 2661, 2662, 2666, 2667, 2668, 2669, 2684, 2685, 2716, 2717, 2718, 2791, 2801, 2810, 2811, 2813, 2816, 2817, 2823, 2824, 2840, 2841, 2947, 2976, 2983, 2988, 3027, 3031, 3112, 3132, 3133, 3138, 3139, 3140, 3143, 3144, 3151, 3183, 3184, 3187, 3268, 3270, 3282, 3287, 3288, 3289, 3290, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3307, 3308, 3339, 3340, 3341, 3343, 3412, 3424, 3425, 3426, 3432, 3438, 3439, 3442, 3443, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3463, 3464, 3465, 3495, 3496, 3497, 3498, 3499, 3568, 3571, 3580, 3581, 3582, 3589, 3592, 3593, 3595, 3596, 3597, 3598, 3602, 3603, 3604, 3605, 3608, 3609, 3610, 3611, 3619, 3620, 3621, 3651, 3652, 3653, 3654, 3724, 3727, 3737, 3738, 3746, 3747, 3749, 3752, 3753, 3759, 3760, 3765, 3766, 3775, 3776, 3777, 3880, 3883, 3912, 3919, 3924, 3925, 3927, 3929, 3963, 3967, 4044, 4048, 4068, 4069, 4074, 4075, 4076, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4087, 4119, 4120, 4123, 4185, 4200, 4204, 4206, 4218, 4223, 4225, 4226, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4243, 4244, 4275, 4276, 4277, 4279, 4341, 4348, 4356, 4360, 4361, 4362, 4375, 4378, 4382, 4383, 4384, 4385, 4388, 4389, 4390, 4391, 4393, 4394, 4395, 4396, 4397, 4399, 4400, 4401, 4431, 4432, 4433, 4434, 4497, 4504, 4507, 4512, 4517, 4518, 4529, 4532, 4533, 4539, 4540, 4545, 4546, 4550, 4552, 4553, 4555, 4556, 4557, 4653, 4660, 4663, 4692, 4699, 4704, 4705, 4707, 4709, 4710, 4742, 4743, 4747, 4795, 4824, 4828, 4849, 4854, 4855, 4856, 4859, 4860, 4861, 4862, 4863, 4864, 4865, 4866, 4867, 4898, 4899, 4900, 4903, 4951, 4965, 4980, 4984, 4986, 5006, 5009, 5012, 5013, 5014, 5015, 5017, 5018, 5019, 5020, 5021, 5022, 5023, 5024, 5054, 5055, 5056, 5057, 5107, 5121, 5128, 5136, 5141, 5142, 5163, 5164, 5169, 5170, 5174, 5176, 5177, 5178, 5179, 5180, 5181, 5210, 5263, 5277, 5284, 5287, 5338, 5342, 5397, 5460, 5494, 5495, 5498, 5499, 5526, 5549, 5553, 5616, 5617, 5620, 5621, 5650, 5651, 5652, 5653, 5654, 5655, 5682, 5705, 5709, 5772, 5773, 5774, 5775, 5776, 5777, 5806, 5807, 5808, 5809, 5810, 5811, 5838, 5861, 5865, 5929, 5930, 5931, 5932, 5933, 5963, 5964, 5965, 5967, 5994, 6017, 6021, 6086, 6087, 6089, 6120, 6121, 6123, 6280, 6334, 6436, 6437, 6441, 6488, 6490, 6558, 6563, 6586, 6590, 6592, 6593, 6594, 6597, 6598, 6613, 6617, 6644, 6645, 6646, 6707, 6708, 6714, 6715, 6718, 6719, 6741, 6742, 6743, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6769, 6773, 6774, 6797, 6800, 6801, 6802, 6846, 6863, 6864, 6865, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6905, 6906, 6907, 6908, 6909, 6910, 6925, 6929, 6930, 6953, 6956, 6957, 6958, 7002, 7019, 7021, 7022, 7023, 7024, 7025, 7027, 7028, 7029, 7030, 7053, 7055, 7056, 7057, 7059, 7062, 7063, 7064, 7066, 7081, 7085, 7086, 7109, 7112, 7113, 7158, 7175, 7178, 7179, 7181, 7184, 7185, 7209, 7212, 7213, 7215, 7219, 7220, 7237, 7314, 7344, 7372, 7379, 7384, 7399, 7423, 7426, 7486, 7500, 7501, 7506, 7528, 7529, 7533, 7535, 7536, 7539, 7540, 7548, 7552, 7555, 7579, 7580, 7582, 7635, 7642, 7650, 7655, 7656, 7657, 7658, 7661, 7662, 7676, 7678, 7682, 7684, 7685, 7686, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7704, 7705, 7708, 7709, 7711, 7735, 7736, 7737, 7738, 7779, 7791, 7793, 7798, 7799, 7800, 7806, 7807, 7810, 7811, 7813, 7814, 7815, 7816, 7817, 7818, 7832, 7833, 7834, 7835, 7838, 7839, 7841, 7842, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7860, 7861, 7864, 7865, 7866, 7867, 7889, 7891, 7892, 7893, 7894, 7935, 7938, 7939, 7947, 7949, 7954, 7955, 7957, 7960, 7961, 7963, 7964, 7965, 7966, 7970, 7971, 7972, 7973, 7988, 7989, 7991, 7992, 7993, 7995, 7998, 7999, 8000, 8002, 8004, 8005, 8006, 8007, 8016, 8017, 8020, 8021, 8022, 8045, 8047, 8048, 8049, 8091, 8094, 8095, 8103, 8105, 8111, 8114, 8115, 8117, 8120, 8121, 8127, 8128, 8144, 8145, 8148, 8149, 8151, 8155, 8156, 8161, 8162, 8172, 8173, 8247, 8250, 8251, 8280, 8287, 8292, 8308, 8315, 8320, 8321, 8324, 8325, 8331, 8335, 8359, 8362, 8411, 8416, 8422, 8436, 8437, 8442, 8443, 8444, 8447, 8448, 8455, 8464, 8465, 8469, 8471, 8472, 8475, 8476, 8477, 8478, 8479, 8480, 8481, 8484, 8487, 8488, 8491, 8515, 8516, 8518, 8552, 8567, 8571, 8572, 8574, 8578, 8586, 8591, 8593, 8594, 8597, 8598, 8599, 8600, 8601, 8602, 8603, 8604, 8611, 8612, 8614, 8618, 8621, 8622, 8625, 8626, 8627, 8628, 8629, 8630, 8631, 8632, 8633, 8634, 8635, 8636, 8637, 8640, 8641, 8643, 8644, 8645, 8647, 8671, 8672, 8673, 8674, 8708, 8715, 8716, 8723, 8727, 8728, 8729, 8730, 8734, 8735, 8743, 8746, 8750, 8751, 8752, 8753, 8756, 8757, 8758, 8759, 8767, 8768, 8769, 8771, 8775, 8778, 8779, 8780, 8782, 8784, 8785, 8786, 8787, 8789, 8790, 8791, 8792, 8793, 8796, 8797, 8799, 8800, 8801, 8802, 8825, 8827, 8828, 8829, 8864, 8871, 8872, 8874, 8875, 8879, 8883, 8885, 8886, 8891, 8897, 8900, 8901, 8907, 8908, 8913, 8914, 8923, 8924, 8925, 8928, 8929, 8931, 8935, 8936, 8941, 8942, 8946, 8947, 8949, 8952, 8953, 9020, 9027, 9028, 9030, 9031, 9060, 9067, 9072, 9073, 9075, 9077, 9088, 9095, 9100, 9101, 9104, 9105, 9106, 9107, 9111, 9115, 9139, 9142, 9143, 9191, 9192, 9196, 9202, 9217, 9222, 9223, 9224, 9227, 9228, 9229, 9230, 9231, 9232, 9233, 9235, 9245, 9249, 9251, 9252, 9255, 9256, 9257, 9258, 9259, 9260, 9261, 9262, 9263, 9264, 9267, 9268, 9271, 9295, 9296, 9298, 9299, 9332, 9333, 9347, 9348, 9351, 9352, 9354, 9358, 9374, 9377, 9380, 9381, 9382, 9383, 9385, 9386, 9387, 9388, 9389, 9391, 9392, 9402, 9406, 9408, 9409, 9410, 9411, 9413, 9414, 9415, 9416, 9417, 9418, 9419, 9420, 9421, 9423, 9424, 9425, 9451, 9452, 9453, 9455, 9488, 9489, 9495, 9496, 9503, 9504, 9507, 9509, 9510, 9515, 9531, 9532, 9537, 9538, 9542, 9544, 9545, 9547, 9548, 9549, 9555, 9559, 9560, 9565, 9566, 9570, 9571, 9573, 9574, 9575, 9576, 9577, 9611, 9644, 9645, 9651, 9652, 9654, 9655, 9691, 9696, 9697, 9699, 9701, 9702, 9719, 9724, 9725, 9728, 9729, 9730, 9731, 9734, 9735, 9739, 9763, 9766, 9767, 9787, 9815, 9816, 9820, 9826, 9848, 9851, 9853, 9854, 9855, 9856, 9857, 9858, 9859, 9876, 9879, 9881, 9882, 9883, 9884, 9885, 9886, 9887, 9888, 9890, 9891, 9892, 9919, 9920, 9923, 9943, 9956, 9957, 9971, 9972, 9975, 9978, 10005, 10006, 10010, 10012, 10013, 10014, 10015, 10016, 10033, 10034, 10038, 10039, 10041, 10042, 10043, 10044, 10045, 10046, 10079, 10099, 10112, 10113, 10119, 10120, 10165, 10167, 10169, 10170, 10193, 10196, 10197, 10198, 10199, 10202, 10203, 10231, 10235, 10255, 10283, 10284, 10322, 10324, 10325, 10326, 10327, 10350, 10351, 10353, 10354, 10355, 10356, 10358, 10391, 10411, 10424, 10425, 10481, 10482, 10509, 10510, 10511, 10514, 10547, 10567, 10676, 10719, 10832, 10833, 10837, 10865, 10875, 10954, 10958, 10988, 10989, 10990, 10991, 10993, 10994, 11013, 11021, 11031, 11071, 11076, 11110, 11111, 11114, 11115, 11142, 11144, 11145, 11146, 11147, 11148, 11149, 11150, 11165, 11169, 11177, 11182, 11187, 11213, 11227, 11232, 11233, 11236, 11237, 11266, 11267, 11268, 11269, 11270, 11271, 11298, 11301, 11302, 11303, 11304, 11305, 11306, 11321, 11325, 11333, 11338, 11343, 11369, 11383, 11389, 11390, 11391, 11392, 11393, 11423, 11424, 11425, 11427, 11454, 11458, 11459, 11460, 11462, 11477, 11481, 11489, 11494, 11525, 11539, 11546, 11547, 11549, 11580, 11581, 11583, 11616, 11618, 11650, 11681, 11740, 11768, 11775, 11778, 11790, 11794, 11811, 11853, 11896, 11897, 11901, 11924, 11925, 11929, 11931, 11932, 11934, 11935, 11936, 11946, 11948, 11950, 11957, 11967, 12002, 12009, 12018, 12023, 12046, 12050, 12052, 12053, 12054, 12057, 12058, 12073, 12077, 12080, 12081, 12082, 12083, 12085, 12086, 12087, 12088, 12089, 12090, 12091, 12092, 12097, 12102, 12104, 12105, 12106, 12113, 12123, 12143, 12158, 12163, 12165, 12167, 12168, 12174, 12175, 12178, 12179, 12201, 12202, 12203, 12206, 12207, 12209, 12210, 12211, 12212, 12213, 12214, 12229, 12233, 12234, 12237, 12238, 12239, 12240, 12241, 12242, 12243, 12244, 12245, 12246, 12247, 12248, 12253, 12257, 12258, 12260, 12261, 12262, 12269, 12274, 12279, 12299, 12305, 12306, 12314, 12319, 12321, 12323, 12325, 12328, 12329, 12331, 12332, 12333, 12334, 12357, 12359, 12360, 12361, 12363, 12366, 12367, 12368, 12370, 12385, 12389, 12390, 12394, 12395, 12396, 12398, 12400, 12401, 12403, 12404, 12409, 12413, 12414, 12416, 12417, 12425, 12430, 12455, 12461, 12462, 12470, 12475, 12479, 12482, 12483, 12485, 12488, 12489, 12513, 12516, 12517, 12519, 12523, 12524, 12541, 12552, 12554, 12557, 12559, 12565, 12586, 12611, 12617, 12618, 12648, 12676, 12683, 12688, 12703, 12704, 12711, 12714, 12717, 12718, 12719, 12726, 12727, 12730, 12747, 12778, 12789, 12790, 12804, 12805, 12810, 12832, 12833, 12837, 12839, 12840, 12843, 12844, 12852, 12856, 12859, 12860, 12861, 12865, 12867, 12868, 12870, 12871, 12872, 12873, 12874, 12875, 12876, 12880, 12882, 12883, 12884, 12886, 12893, 12903, 12908, 12934, 12938, 12939, 12945, 12946, 12954, 12959, 12961, 12962, 12965, 12966, 12980, 12982, 12986, 12989, 12990, 12993, 12994, 12995, 12996, 12997, 12998, 12999, 13000, 13008, 13009, 13012, 13013, 13015, 13017, 13018, 13019, 13021, 13022, 13023, 13024, 13025, 13026, 13027, 13028, 13029, 13030, 13031, 13032, 13033, 13036, 13038, 13039, 13040, 13041, 13042, 13049, 13059, 13064, 13079, 13083, 13090, 13094, 13095, 13097, 13099, 13101, 13102, 13103, 13111, 13114, 13118, 13119, 13120, 13121, 13136, 13137, 13139, 13143, 13146, 13147, 13148, 13150, 13152, 13153, 13154, 13155, 13164, 13165, 13168, 13169, 13170, 13174, 13175, 13176, 13178, 13180, 13181, 13183, 13184, 13185, 13186, 13187, 13188, 13189, 13192, 13193, 13194, 13195, 13196, 13197, 13205, 13210, 13220, 13235, 13239, 13241, 13242, 13243, 13246, 13250, 13251, 13253, 13255, 13259, 13265, 13268, 13269, 13275, 13276, 13292, 13293, 13296, 13297, 13299, 13303, 13304, 13309, 13310, 13320, 13321, 13332, 13334, 13337, 13339, 13343, 13344, 13345, 13348, 13366, 13376, 13391, 13395, 13397, 13398, 13399, 13428, 13435, 13440, 13456, 13463, 13468, 13469, 13472, 13473, 13479, 13483, 13484, 13491, 13494, 13497, 13498, 13499, 13502, 13503, 13506, 13507, 13510, 13527, 13530, 13558, 13559, 13564, 13569, 13570, 13585, 13590, 13591, 13592, 13595, 13596, 13603, 13613, 13617, 13619, 13620, 13623, 13624, 13625, 13626, 13627, 13628, 13629, 13632, 13635, 13636, 13639, 13641, 13645, 13647, 13648, 13650, 13651, 13652, 13653, 13654, 13655, 13656, 13658, 13659, 13660, 13662, 13663, 13664, 13666, 13673, 13683, 13686, 13688, 13700, 13714, 13715, 13718, 13719, 13720, 13722, 13725, 13726, 13742, 13745, 13748, 13749, 13750, 13751, 13759, 13760, 13770, 13774, 13776, 13777, 13778, 13779, 13781, 13782, 13783, 13784, 13785, 13788, 13789, 13791, 13792, 13793, 13798, 13799, 13802, 13804, 13805, 13807, 13808, 13809, 13810, 13811, 13812, 13813, 13814, 13815, 13816, 13818, 13819, 13820, 13821, 13829, 13842, 13844, 13856, 13859, 13863, 13864, 13870, 13871, 13874, 13875, 13877, 13878, 13879, 13883, 13899, 13900, 13905, 13906, 13915, 13916, 13917, 13923, 13927, 13928, 13933, 13934, 13938, 13939, 13941, 13944, 13945, 13956, 13958, 13961, 13963, 13967, 13968, 13969, 13970, 13971, 13972, 13990, 13998, 14000, 14012, 14015, 14019, 14020, 14021, 14022, 14023, 14059, 14064, 14065, 14067, 14069, 14087, 14092, 14093, 14096, 14097, 14098, 14099, 14103, 14107, 14115, 14118, 14121, 14122, 14123, 14126, 14127, 14130, 14131, 14134, 14135, 14151, 14154, 14182, 14183, 14184, 14188, 14193, 14194, 14216, 14219, 14221, 14222, 14223, 14224, 14225, 14227, 14244, 14247, 14249, 14250, 14251, 14252, 14253, 14254, 14255, 14256, 14259, 14260, 14272, 14275, 14276, 14277, 14278, 14279, 14280, 14282, 14283, 14284, 14286, 14287, 14288, 14291, 14297, 14310, 14312, 14324, 14325, 14338, 14339, 14340, 14342, 14343, 14346, 14373, 14374, 14378, 14380, 14381, 14383, 14384, 14401, 14402, 14406, 14407, 14409, 14410, 14411, 14412, 14413, 14426, 14429, 14431, 14435, 14436, 14437, 14438, 14439, 14440, 14447, 14466, 14468, 14480, 14481, 14483, 14487, 14488, 14533, 14535, 14537, 14538, 14561, 14564, 14565, 14566, 14567, 14570, 14571, 14589, 14590, 14591, 14594, 14595, 14598, 14599, 14603, 14622, 14623, 14650, 14651, 14652, 14690, 14692, 14693, 14694, 14695, 14718, 14719, 14721, 14722, 14723, 14724, 14726, 14743, 14747, 14748, 14750, 14751, 14752, 14759, 14778, 14779, 14780, 14792, 14793, 14849, 14850, 14877, 14878, 14879, 14882, 14903, 14906, 14907, 14915, 14934, 14935, 15044, 15072, 15076, 15087, 15088, 15128, 15200, 15201, 15205, 15228, 15229, 15230, 15232, 15233, 15237, 15243, 15244, 15277, 15284, 15322, 15326, 15356, 15357, 15358, 15359, 15361, 15362, 15381, 15384, 15385, 15386, 15387, 15388, 15389, 15393, 15397, 15399, 15400, 15418, 15433, 15439, 15440, 15444, 15478, 15479, 15482, 15483, 15510, 15513, 15514, 15515, 15516, 15517, 15518, 15533, 15537, 15540, 15541, 15542, 15543, 15544, 15545, 15549, 15550, 15553, 15555, 15556, 15574, 15581, 15589, 15595, 15596, 15601, 15604, 15605, 15635, 15636, 15637, 15639, 15666, 15670, 15671, 15672, 15674, 15689, 15693, 15697, 15698, 15699, 15700, 15701, 15705, 15706, 15709, 15730, 15737, 15745, 15751, 15758, 15759, 15761, 15792, 15793, 15795, 15828, 15830, 15854, 15855, 15862, 15865, 15886, 15893, 15952, 15980, 15987, 15990, 16002, 16006, 16008, 16012, 16014, 16016, 16023, 16024, 16033, 16053, 16064, 16065, 16108, 16109, 16113, 16136, 16137, 16141, 16143, 16144, 16146, 16147, 16148, 16158, 16160, 16162, 16164, 16165, 16166, 16168, 16169, 16170, 16171, 16172, 16173, 16178, 16179, 16180, 16189, 16194, 16209, 16213, 16214, 16220, 16221, 16230, 16235, 16258, 16262, 16265, 16266, 16269, 16270, 16285, 16289, 16293, 16294, 16295, 16297, 16298, 16299, 16300, 16301, 16302, 16303, 16304, 16309, 16314, 16316, 16317, 16318, 16320, 16321, 16322, 16323, 16324, 16325, 16326, 16327, 16328, 16329, 16333, 16334, 16335, 16336, 16345, 16350, 16354, 16355, 16365, 16369, 16370, 16375, 16376, 16377, 16379, 16387, 16390, 16413, 16415, 16419, 16422, 16423, 16424, 16426, 16441, 16445, 16446, 16450, 16451, 16452, 16454, 16456, 16457, 16459, 16460, 16465, 16469, 16470, 16472, 16473, 16477, 16478, 16479, 16480, 16481, 16482, 16483, 16484, 16485, 16486, 16489, 16490, 16501, 16506, 16510, 16511, 16517, 16518, 16521, 16525, 16526, 16531, 16535, 16541, 16544, 16545, 16569, 16572, 16573, 16575, 16579, 16580, 16597, 16608, 16610, 16613, 16615, 16621, 16634, 16635, 16639, 16642, 16645, 16646, 16657, 16662, 16666, 16667, 16673, 16674, 16704, 16732, 16739, 16744, 16759, 16760, 16767, 16770, 16773, 16774, 16775, 16782, 16783, 16786, 16788, 16792, 16794, 16796, 16799, 16800, 16803, 16804, 16805, 16813, 16833, 16834, 16844, 16845, 16846, 16861, 16866, 16889, 16893, 16895, 16896, 16899, 16900, 16908, 16912, 16915, 16917, 16921, 16923, 16924, 16926, 16927, 16928, 16929, 16930, 16931, 16932, 16936, 16938, 16939, 16940, 16942, 16944, 16945, 16946, 16948, 16949, 16950, 16951, 16952, 16953, 16955, 16956, 16958, 16959, 16960, 16961, 16964, 16969, 16974, 16989, 16990, 16993, 16994, 16995, 17000, 17001, 17002, 17018, 17021, 17036, 17046, 17050, 17052, 17053, 17054, 17055, 17064, 17065, 17068, 17069, 17074, 17075, 17078, 17080, 17081, 17083, 17084, 17085, 17086, 17087, 17088, 17089, 17092, 17094, 17095, 17096, 17097, 17101, 17102, 17103, 17104, 17105, 17106, 17107, 17108, 17109, 17111, 17112, 17113, 17114, 17117, 17120, 17125, 17130, 17134, 17135, 17139, 17145, 17146, 17149, 17150, 17151, 17153, 17155, 17159, 17175, 17176, 17192, 17193, 17199, 17203, 17204, 17209, 17210, 17220, 17221, 17232, 17234, 17237, 17239, 17243, 17244, 17245, 17248, 17258, 17259, 17263, 17266, 17267, 17268, 17269, 17270, 17273, 17276, 17281, 17286, 17290, 17291, 17295, 17297, 17298, 17299, 17335, 17340, 17363, 17368, 17369, 17372, 17373, 17379, 17383, 17391, 17394, 17397, 17398, 17399, 17402, 17403, 17406, 17407, 17410, 17412, 17416, 17418, 17420, 17423, 17424, 17427, 17428, 17429, 17430, 17437, 17457, 17458, 17459, 17464, 17468, 17469, 17470, 17492, 17495, 17503, 17520, 17523, 17525, 17526, 17527, 17528, 17529, 17532, 17535, 17536, 17548, 17551, 17552, 17553, 17554, 17555, 17556, 17558, 17559, 17560, 17562, 17563, 17564, 17569, 17570, 17572, 17573, 17574, 17575, 17576, 17577, 17579, 17580, 17582, 17585, 17586, 17588, 17593, 17598, 17600, 17613, 17614, 17615, 17617, 17618, 17619, 17622, 17649, 17650, 17659, 17660, 17677, 17678, 17682, 17683, 17685, 17688, 17689, 17702, 17705, 17707, 17711, 17712, 17713, 17714, 17715, 17716, 17726, 17727, 17731, 17735, 17736, 17737, 17738, 17741, 17742, 17744, 17749, 17754, 17756, 17758, 17759, 17763, 17764, 17809, 17811, 17813, 17837, 17840, 17841, 17842, 17843, 17847, 17865, 17866, 17867, 17870, 17871, 17874, 17875, 17879, 17884, 17886, 17888, 17891, 17892, 17897, 17898, 17905, 17925, 17926, 17927, 17928, 17966, 17968, 17969, 17971, 17994, 17995, 17997, 17998, 17999, 18000, 18019, 18023, 18024, 18026, 18027, 18028, 18035, 18038, 18043, 18047, 18048, 18050, 18053, 18054, 18056, 18061, 18066, 18068, 18069, 18125, 18126, 18153, 18154, 18155, 18158, 18179, 18182, 18183, 18191, 18203, 18204, 18209, 18210, 18211, 18217, 18320, 18348, 18352, 18363, 18364, 18369, 18371, 18372, 18392, 18404, 18476, 18477, 18481, 18504, 18505, 18506, 18508, 18509, 18513, 18519, 18520, 18525, 18526, 18527, 18528, 18533, 18535, 18548, 18553, 18560, 18598, 18602, 18633, 18634, 18635, 18637, 18638, 18657, 18660, 18661, 18662, 18663, 18664, 18665, 18669, 18673, 18675, 18676, 18681, 18682, 18683, 18684, 18689, 18691, 18694, 18704, 18709, 18715, 18716, 18755, 18759, 18786, 18790, 18791, 18792, 18794, 18809, 18813, 18817, 18818, 18819, 18820, 18821, 18825, 18826, 18829, 18837, 18838, 18839, 18840, 18845, 18847, 18850, 18857, 18860, 18865, 18871, 18881, 18912, 18913, 18915, 18948, 18950, 18974, 18975, 18982, 18985, 18993, 18994, 19001, 19003, 19006, 19013, 19072, 19100, 19107, 19110, 19122, 19126, 19128, 19132, 19134, 19136, 19143, 19144, 19149, 19151, 19152, 19153, 19154, 19155, 19156, 19172, 19173, 19184, 19185, 19229, 19233, 19257, 19261, 19263, 19264, 19266, 19267, 19268, 19278, 19280, 19282, 19284, 19285, 19286, 19288, 19289, 19290, 19291, 19292, 19293, 19298, 19299, 19300, 19305, 19306, 19307, 19308, 19309, 19310, 19311, 19312, 19313, 19314, 19315, 19328, 19329, 19333, 19334, 19340, 19341, 19386, 19390, 19405, 19409, 19414, 19415, 19418, 19420, 19421, 19423, 19424, 19429, 19434, 19436, 19437, 19441, 19442, 19443, 19444, 19445, 19446, 19447, 19448, 19449, 19453, 19454, 19461, 19462, 19463, 19464, 19465, 19466, 19467, 19468, 19469, 19470, 19471, 19474, 19475, 19484, 19485, 19489, 19490, 19495, 19499, 19533, 19539, 19543, 19544, 19561, 19572, 19574, 19577, 19579, 19585, 19598, 19599, 19603, 19606, 19609, 19610, 19617, 19618, 19621, 19622, 19623, 19624, 19625, 19626, 19627, 19630, 19631, 19637, 19638, 19703, 19708, 19723, 19731, 19734, 19737, 19738, 19739, 19746, 19747, 19750, 19752, 19756, 19758, 19760, 19763, 19764, 19767, 19768, 19769, 19773, 19775, 19776, 19777, 19778, 19779, 19780, 19796, 19797, 19798, 19808, 19809, 19810, 19860, 19863, 19872, 19876, 19888, 19891, 19892, 19893, 19894, 19895, 19896, 19900, 19902, 19903, 19904, 19909, 19910, 19912, 19913, 19914, 19915, 19916, 19917, 19919, 19920, 19922, 19925, 19928, 19929, 19930, 19931, 19932, 19933, 19934, 19935, 19936, 19937, 19938, 19939, 19952, 19953, 19954, 19957, 19958, 19959, 20000, 20017, 20018, 20028, 20029, 20042, 20045, 20047, 20051, 20052, 20053, 20056, 20066, 20067, 20071, 20075, 20076, 20077, 20078, 20081, 20084, 20085, 20086, 20089, 20090, 20091, 20092, 20093, 20094, 20095, 20098, 20099, 20103, 20177, 20180, 20181, 20187, 20205, 20206, 20207, 20210, 20211, 20214, 20215, 20224, 20226, 20228, 20231, 20232, 20237, 20238, 20241, 20243, 20244, 20245, 20246, 20247, 20248, 20264, 20265, 20266, 20267, 20311, 20334, 20335, 20337, 20340, 20359, 20363, 20364, 20366, 20367, 20368, 20378, 20383, 20387, 20388, 20390, 20393, 20394, 20396, 20397, 20398, 20401, 20402, 20403, 20404, 20405, 20406, 20407, 20408, 20465, 20493, 20494, 20495, 20519, 20522, 20523, 20531, 20543, 20544, 20549, 20550, 20553, 20557, 20558, 20559, 20560, 20660, 20688, 20692, 20703, 20704, 20709, 20711, 20712, 20724, 20725, 20726, 20732, 20744, 20817, 20821, 20844, 20845, 20846, 20848, 20849, 20853, 20859, 20860, 20865, 20866, 20867, 20868, 20873, 20875, 20880, 20881, 20882, 20888, 20893, 20900, 20974, 20975, 20978, 20997, 21001, 21002, 21003, 21004, 21005, 21009, 21013, 21021, 21022, 21023, 21024, 21029, 21031, 21034, 21036, 21037, 21038, 21044, 21049, 21055, 21099, 21132, 21134, 21158, 21159, 21166, 21169, 21177, 21178, 21185, 21187, 21190, 21192, 21193, 21194, 21197, 21291, 21294, 21306, 21310, 21312, 21316, 21318, 21320, 21327, 21328, 21333, 21335, 21336, 21337, 21338, 21339, 21340, 21348, 21349, 21350, 21356, 21357, 21368, 21369, 21448, 21451, 21452, 21462, 21464, 21469, 21470, 21472, 21473, 21474, 21475, 21476, 21477, 21482, 21489, 21490, 21491, 21492, 21493, 21494, 21495, 21496, 21497, 21498, 21499, 21504, 21505, 21506, 21512, 21513, 21517, 21518, 21589, 21602, 21605, 21607, 21613, 21626, 21627, 21631, 21637, 21638, 21645, 21646, 21649, 21650, 21651, 21652, 21653, 21654, 21655, 21658, 21659, 21660, 21661, 21662, 21765, 21766, 21767, 21774, 21775, 21784, 21786, 21788, 21791, 21792, 21797, 21801, 21803, 21804, 21805, 21806, 21807, 21808, 21816, 21817, 21818, 21824, 21825, 21826, 21900, 21919, 21923, 21924, 21928, 21938, 21943, 21947, 21948, 21950, 21953, 21956, 21957, 21958, 21961, 21962, 21963, 21964, 21965, 21966, 21967, 21972, 21973, 21974, 22053, 22079, 22082, 22083, 22103, 22104, 22109, 22110, 22113, 22117, 22118, 22119, 22120, 22128, 22129, 22130, 22248, 22252, 22263, 22264, 22269, 22271, 22272, 22284, 22285, 22286, 22292, 22304, 22405, 22406, 22408, 22409, 22413, 22425, 22426, 22427, 22428, 22433, 22435, 22440, 22441, 22442, 22448, 22453, 22538, 22562, 22563, 22573, 22581, 22582, 22589, 22591, 22594, 22596, 22597, 22598, 22710, 22720, 22722, 22724, 22737, 22739, 22740, 22741, 22742, 22743, 22744, 22752, 22753, 22754, 22760, 22761, 22855, 22874, 22879, 22886, 22893, 22894, 22897, 22898, 22899, 22900, 22901, 22902, 22903, 22908, 22909, 22910, 23015, 23039, 23040, 23045, 23049, 23053, 23054, 23055, 23056, 23064, 23065, 23066, 23236, 23393, 23550, 23700, 23851, 24004, 24153, 24295};
    static const int C1_ind[] = {132, 296, 464, 621, 778, 925, 1087, 1247, 1394, 1551, 1701, 1858, 2015, 2153, 2314, 2477, 2634, 2783, 2943, 3090, 3236, 3404, 3554, 3701, 3858, 3995};

    MatrixXd C0 = MatrixXd::Zero(156, 156);
    MatrixXd C1 = MatrixXd::Zero(156, 26);
    for (int i = 0; i < 3460; i++)
    {
        C0(C0_ind[i]) = coeffs(coeffs0_ind[i]);
    }
    for (int i = 0; i < 26; i++)
    {
        C1(C1_ind[i]) = coeffs(coeffs1_ind[i]);
    }

    MatrixXd C12 = C0.partialPivLu().solve(C1);

    // Setup action matrix
    Matrix<double, 34, 26> RR;
    RR << -C12.bottomRows(8), Matrix<double, 26, 26>::Identity(26, 26);

    static const int AM_ind[] = {30, 18, 11, 12, 0, 16, 15, 1, 17, 2, 19, 20, 3, 27, 25, 24, 4, 26, 5, 28, 29, 6, 31, 32, 33, 7};
    Matrix<double, 26, 26> AM;
    for (int i = 0; i < 26; i++)
    {
        AM.row(i) = RR.row(AM_ind[i]);
    }

    Matrix<std::complex<double>, 4, 26> sols;
    sols.setZero();

    // Solve eigenvalue problem
    EigenSolver<Matrix<double, 26, 26>> es(AM);
    ArrayXcd D = es.eigenvalues();
    ArrayXXcd V = es.eigenvectors();

    V = (V / V.row(0).array().replicate(26, 1)).eval();

    sols.row(0) = V.row(1).array();
    sols.row(1) = V.row(13).array();
    sols.row(2) = D.transpose().array();

    return sols;
}
// Action =  z
// Quotient ring basis (V) = w^-1,x*w^-1,x^2*w^-1,x^2*z*w^-1,x^2*z^2*w^-1,x*y*w^-1,x*y^2*w^-1,x*y^2*z*w^-1,x*y*z*w^-1,x*y*z^2*w^-1,x*z*w^-1,x*z^2*w^-1,x*z^3*w^-1,y*w^-1,y^2*w^-1,y^3*w^-1,y^3*z*w^-1,y^2*z*w^-1,y^2*z^2*w^-1,y*z*w^-1,y*z^2*w^-1,y*z^3*w^-1,z*w^-1,z^2*w^-1,z^3*w^-1,z^4*w^-1,
// Available monomials (RR*V) = x^2*z^3*w^-1,x*y^2*z^2*w^-1,x*y*z^3*w^-1,x*z^4*w^-1,y^3*z^2*w^-1,y^2*z^3*w^-1,y*z^4*w^-1,z^5*w^-1,w^-1,x*w^-1,x^2*w^-1,x^2*z*w^-1,x^2*z^2*w^-1,x*y*w^-1,x*y^2*w^-1,x*y^2*z*w^-1,x*y*z*w^-1,x*y*z^2*w^-1,x*z*w^-1,x*z^2*w^-1,x*z^3*w^-1,y*w^-1,y^2*w^-1,y^3*w^-1,y^3*z*w^-1,y^2*z*w^-1,y^2*z^2*w^-1,y*z*w^-1,y*z^2*w^-1,y*z^3*w^-1,z*w^-1,z^2*w^-1,z^3*w^-1,z^4*w^-1,

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
    if (nrhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_sat_621:nrhs", "One input required.");
    }
    if (nlhs != 1)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_sat_621:nlhs", "One output required.");
    }
    if (!mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]))
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_sat_621:notDouble", "Input data must be type double.");
    }
    if (mxGetNumberOfElements(prhs[0]) % 45 != 0)
    {
        mexErrMsgIdAndTxt("automatic_generator_cvpr:toa_upgrade_sat_621:incorrectSize", "Input size must be multiple of 45.");
    }
    int n_instances = mxGetNumberOfElements(prhs[0]) / 45;
    double *input = mxGetPr(prhs[0]);
    plhs[0] = mxCreateDoubleMatrix(4, 26 * n_instances, mxCOMPLEX);
    double *zr = mxGetPr(plhs[0]);
    double *zi = mxGetPi(plhs[0]);
    for (int k = 0; k < n_instances; k++)
    {
        const VectorXd data = Map<const VectorXd>(input + k * 45, 45);
        MatrixXcd sols = solver_toa_upgrade_sat_621(data);
        Index offset = k * sols.size();
        for (Index i = 0; i < sols.size(); i++)
        {
            zr[i + offset] = sols(i).real();
            zi[i + offset] = sols(i).imag();
        }
    }
}
